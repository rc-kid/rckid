    TEST(gbcemu, opcode_12) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 12 0005
        gbc.setState(0x8a4, 0xd5ad, 0xb1a0, 0x6df4, 0xfc1c, 0x5675, 0x0, 0x1);
        gbc.writeMem(0x8a4, { 0x12 });
        gbc.writeMem(0xfc1c, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd5ad, gbc.sp());
        EXPECT(0x8a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xfc1c));
        // 12 0008
        gbc.setState(0xeb36, 0xe2ed, 0x2650, 0x50d5, 0xc785, 0xb001, 0x0, 0x0);
        gbc.writeMem(0xc785, { 0x0 });
        gbc.writeMem(0xeb36, { 0x12 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe2ed, gbc.sp());
        EXPECT(0xeb37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc785));
        EXPECT(0x12, gbc.readMem(0xeb36));
        // 12 0009
        gbc.setState(0xc062, 0x416f, 0x980, 0x6095, 0xe8fc, 0x9a71, 0x1, 0x0);
        gbc.writeMem(0xc062, { 0x12 });
        gbc.writeMem(0xe8fc, { 0x0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x416f, gbc.sp());
        EXPECT(0xc063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xc062));
        EXPECT(0x9, gbc.readMem(0xe8fc));
        // 12 000C
        gbc.setState(0x6c5b, 0x2630, 0x7ab0, 0x46a5, 0xfe0c, 0x236, 0x0, 0x0);
        gbc.writeMem(0x6c5b, { 0x12 });
        gbc.writeMem(0xfe0c, { 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2630, gbc.sp());
        EXPECT(0x6c5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xfe0c));
        // 12 000E
        gbc.setState(0x42c3, 0x9ea1, 0x88d0, 0x7e31, 0xf86f, 0x251e, 0x1, 0x0);
        gbc.writeMem(0x42c3, { 0x12 });
        gbc.writeMem(0xf86f, { 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9ea1, gbc.sp());
        EXPECT(0x42c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xf86f));
        // 12 0010
        gbc.setState(0xab3c, 0x1c78, 0x3040, 0xf9c2, 0xc548, 0x81fb, 0x1, 0x1);
        gbc.writeMem(0xab3c, { 0x12 });
        gbc.writeMem(0xc548, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1c78, gbc.sp());
        EXPECT(0xab3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xab3c));
        EXPECT(0x30, gbc.readMem(0xc548));
        // 12 0011
        gbc.setState(0xeec, 0xa0b8, 0xd2f0, 0xae1, 0x9a11, 0x66cb, 0x1, 0x1);
        gbc.writeMem(0xeec, { 0x12 });
        gbc.writeMem(0x9a11, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa0b8, gbc.sp());
        EXPECT(0xeed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0x9a11));
        // 12 0012
        gbc.setState(0xe64e, 0xfd6f, 0xd940, 0xae5b, 0xe235, 0xe4c4, 0x0, 0x0);
        gbc.writeMem(0xe235, { 0x0 });
        gbc.writeMem(0xe64e, { 0x12 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xfd6f, gbc.sp());
        EXPECT(0xe64f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe235));
        EXPECT(0x12, gbc.readMem(0xe64e));
        // 12 0013
        gbc.setState(0xbe, 0xaaa, 0x890, 0xaafd, 0xafa2, 0x1c4f, 0x0, 0x0);
        gbc.writeMem(0xbe, { 0x12 });
        gbc.writeMem(0xafa2, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xaaa, gbc.sp());
        EXPECT(0xbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xafa2));
        // 12 0014
        gbc.setState(0x14e2, 0x6a31, 0xd290, 0xa93a, 0xb3f2, 0x3443, 0x0, 0x0);
        gbc.writeMem(0x14e2, { 0x12 });
        gbc.writeMem(0xb3f2, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6a31, gbc.sp());
        EXPECT(0x14e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xb3f2));
        // 12 0015
        gbc.setState(0x41f1, 0x722d, 0x55f0, 0x45e8, 0xafd3, 0xf1d2, 0x0, 0x1);
        gbc.writeMem(0x41f1, { 0x12 });
        gbc.writeMem(0xafd3, { 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x722d, gbc.sp());
        EXPECT(0x41f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xafd3));
        // 12 0019
        gbc.setState(0x8414, 0xa25f, 0x2c30, 0x54a, 0x9706, 0x869d, 0x1, 0x1);
        gbc.writeMem(0x8414, { 0x12 });
        gbc.writeMem(0x9706, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa25f, gbc.sp());
        EXPECT(0x8415, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x8414));
        EXPECT(0x2c, gbc.readMem(0x9706));
        // 12 001A
        gbc.setState(0x14ee, 0xac0e, 0x8470, 0x3370, 0xf5cd, 0xc63b, 0x1, 0x1);
        gbc.writeMem(0x14ee, { 0x12 });
        gbc.writeMem(0xf5cd, { 0x0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xac0e, gbc.sp());
        EXPECT(0x14ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xf5cd));
        // 12 001B
        gbc.setState(0xb151, 0x77cc, 0x6400, 0x53f, 0xf44b, 0x8342, 0x0, 0x1);
        gbc.writeMem(0xb151, { 0x12 });
        gbc.writeMem(0xf44b, { 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x77cc, gbc.sp());
        EXPECT(0xb152, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xb151));
        EXPECT(0x64, gbc.readMem(0xf44b));
        // 12 001C
        gbc.setState(0xf42, 0x4633, 0x7a60, 0x4e36, 0xcfd5, 0xe962, 0x0, 0x0);
        gbc.writeMem(0xf42, { 0x12 });
        gbc.writeMem(0xcfd5, { 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4633, gbc.sp());
        EXPECT(0xf43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xcfd5));
        // 12 001D
        gbc.setState(0x9580, 0x9a11, 0x1c90, 0xded8, 0xb0f4, 0xf436, 0x0, 0x1);
        gbc.writeMem(0x9580, { 0x12 });
        gbc.writeMem(0xb0f4, { 0x0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9a11, gbc.sp());
        EXPECT(0x9581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9580));
        EXPECT(0x1c, gbc.readMem(0xb0f4));
        // 12 001E
        gbc.setState(0x9ce9, 0xb63b, 0xff90, 0x9646, 0xca33, 0xe29d, 0x0, 0x0);
        gbc.writeMem(0x9ce9, { 0x12 });
        gbc.writeMem(0xca33, { 0x0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb63b, gbc.sp());
        EXPECT(0x9cea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9ce9));
        EXPECT(0xff, gbc.readMem(0xca33));
        // 12 001F
        gbc.setState(0x35ee, 0x9c22, 0x7f50, 0x7128, 0x89ad, 0xec72, 0x0, 0x0);
        gbc.writeMem(0x35ee, { 0x12 });
        gbc.writeMem(0x89ad, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9c22, gbc.sp());
        EXPECT(0x35ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0x89ad));
        // 12 0021
        gbc.setState(0x4d75, 0x2f37, 0x9350, 0xe095, 0xb616, 0x3401, 0x1, 0x0);
        gbc.writeMem(0x4d75, { 0x12 });
        gbc.writeMem(0xb616, { 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2f37, gbc.sp());
        EXPECT(0x4d76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb616));
        // 12 0022
        gbc.setState(0xe37, 0x88d3, 0x8ad0, 0x135c, 0xe180, 0x7973, 0x1, 0x0);
        gbc.writeMem(0xe37, { 0x12 });
        gbc.writeMem(0xe180, { 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x88d3, gbc.sp());
        EXPECT(0xe38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xe180));
        // 12 0025
        gbc.setState(0xd99, 0x5998, 0xc130, 0x5e3e, 0xfd32, 0xc457, 0x1, 0x1);
        gbc.writeMem(0xd99, { 0x12 });
        gbc.writeMem(0xfd32, { 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5998, gbc.sp());
        EXPECT(0xd9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xfd32));
        // 12 0027
        gbc.setState(0x2bc3, 0x38e, 0x4630, 0xf1b, 0xb1ce, 0x7362, 0x1, 0x1);
        gbc.writeMem(0x2bc3, { 0x12 });
        gbc.writeMem(0xb1ce, { 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x38e, gbc.sp());
        EXPECT(0x2bc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xb1ce));
        // 12 0028
        gbc.setState(0xafc6, 0x26b6, 0x92f0, 0xad34, 0xd771, 0x1ae1, 0x0, 0x0);
        gbc.writeMem(0xafc6, { 0x12 });
        gbc.writeMem(0xd771, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x26b6, gbc.sp());
        EXPECT(0xafc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xafc6));
        EXPECT(0x92, gbc.readMem(0xd771));
        // 12 002D
        gbc.setState(0x14c0, 0xd1f4, 0x490, 0x1070, 0x8b99, 0xbac4, 0x1, 0x0);
        gbc.writeMem(0x14c0, { 0x12 });
        gbc.writeMem(0x8b99, { 0x0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd1f4, gbc.sp());
        EXPECT(0x14c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8b99));
        // 12 0030
        gbc.setState(0x66d, 0x7dae, 0x3640, 0x820e, 0x8815, 0xf273, 0x0, 0x0);
        gbc.writeMem(0x66d, { 0x12 });
        gbc.writeMem(0x8815, { 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7dae, gbc.sp());
        EXPECT(0x66e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8815));
        // 12 0031
        gbc.setState(0xe94, 0x3366, 0x1400, 0xc692, 0xc86f, 0x8651, 0x1, 0x0);
        gbc.writeMem(0xe94, { 0x12 });
        gbc.writeMem(0xc86f, { 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3366, gbc.sp());
        EXPECT(0xe95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc86f));
        // 12 0032
        gbc.setState(0x360c, 0xef5b, 0xeaa0, 0xa3d9, 0xced4, 0x3fa, 0x0, 0x0);
        gbc.writeMem(0x360c, { 0x12 });
        gbc.writeMem(0xced4, { 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xef5b, gbc.sp());
        EXPECT(0x360d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xced4));
        // 12 0036
        gbc.setState(0x9aa2, 0x67fb, 0x5280, 0x741a, 0xe5ba, 0xbdcb, 0x1, 0x0);
        gbc.writeMem(0x9aa2, { 0x12 });
        gbc.writeMem(0xe5ba, { 0x0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x67fb, gbc.sp());
        EXPECT(0x9aa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9aa2));
        EXPECT(0x52, gbc.readMem(0xe5ba));
        // 12 003A
        gbc.setState(0xe1e8, 0xd6bb, 0x3610, 0x9d5b, 0xdda8, 0x7d65, 0x1, 0x0);
        gbc.writeMem(0xdda8, { 0x0 });
        gbc.writeMem(0xe1e8, { 0x12 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd6bb, gbc.sp());
        EXPECT(0xe1e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xdda8));
        EXPECT(0x12, gbc.readMem(0xe1e8));
        // 12 003B
        gbc.setState(0x4873, 0xe49a, 0x5700, 0x25fe, 0xa7b1, 0x299a, 0x1, 0x1);
        gbc.writeMem(0x4873, { 0x12 });
        gbc.writeMem(0xa7b1, { 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe49a, gbc.sp());
        EXPECT(0x4874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa7b1));
        // 12 003C
        gbc.setState(0xef63, 0x6ab3, 0x2c70, 0x38ac, 0xe6ca, 0x2f2a, 0x0, 0x1);
        gbc.writeMem(0xe6ca, { 0x0 });
        gbc.writeMem(0xef63, { 0x12 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6ab3, gbc.sp());
        EXPECT(0xef64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe6ca));
        EXPECT(0x12, gbc.readMem(0xef63));
        // 12 003F
        gbc.setState(0x5d2c, 0xe35b, 0x2430, 0xbf40, 0xaf45, 0xf088, 0x1, 0x1);
        gbc.writeMem(0x5d2c, { 0x12 });
        gbc.writeMem(0xaf45, { 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe35b, gbc.sp());
        EXPECT(0x5d2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xaf45));
        // 12 0042
        gbc.setState(0x1142, 0xd15d, 0xd920, 0x74b8, 0xcbd0, 0x3f1b, 0x1, 0x0);
        gbc.writeMem(0x1142, { 0x12 });
        gbc.writeMem(0xcbd0, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd15d, gbc.sp());
        EXPECT(0x1143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xcbd0));
        // 12 0043
        gbc.setState(0xd13e, 0xd320, 0xee40, 0x1ee2, 0x9d09, 0xe39, 0x1, 0x1);
        gbc.writeMem(0x9d09, { 0x0 });
        gbc.writeMem(0xd13e, { 0x12 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd320, gbc.sp());
        EXPECT(0xd13f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0x9d09));
        EXPECT(0x12, gbc.readMem(0xd13e));
        // 12 0048
        gbc.setState(0x74a6, 0xa1dc, 0x7610, 0x765a, 0xe6da, 0x908f, 0x0, 0x1);
        gbc.writeMem(0x74a6, { 0x12 });
        gbc.writeMem(0xe6da, { 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa1dc, gbc.sp());
        EXPECT(0x74a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe6da));
        // 12 004A
        gbc.setState(0x1d4e, 0x562c, 0x9a50, 0x272e, 0xbed4, 0x3850, 0x0, 0x1);
        gbc.writeMem(0x1d4e, { 0x12 });
        gbc.writeMem(0xbed4, { 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x562c, gbc.sp());
        EXPECT(0x1d4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xbed4));
        // 12 004E
        gbc.setState(0xb8f1, 0x9b2b, 0x3f10, 0x638, 0xf04a, 0x97f3, 0x0, 0x0);
        gbc.writeMem(0xb8f1, { 0x12 });
        gbc.writeMem(0xf04a, { 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9b2b, gbc.sp());
        EXPECT(0xb8f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xb8f1));
        EXPECT(0x3f, gbc.readMem(0xf04a));
        // 12 0053
        gbc.setState(0x22af, 0xc576, 0xad10, 0xacac, 0x9810, 0x4c15, 0x1, 0x1);
        gbc.writeMem(0x22af, { 0x12 });
        gbc.writeMem(0x9810, { 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc576, gbc.sp());
        EXPECT(0x22b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0x9810));
        // 12 0055
        gbc.setState(0x49ee, 0x6bd7, 0x73d0, 0xc0b2, 0xa98d, 0x488e, 0x1, 0x1);
        gbc.writeMem(0x49ee, { 0x12 });
        gbc.writeMem(0xa98d, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6bd7, gbc.sp());
        EXPECT(0x49ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xa98d));
        // 12 0056
        gbc.setState(0xe992, 0x5d5b, 0x1c30, 0x374e, 0xb8a2, 0xebf9, 0x1, 0x0);
        gbc.writeMem(0xb8a2, { 0x0 });
        gbc.writeMem(0xe992, { 0x12 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5d5b, gbc.sp());
        EXPECT(0xe993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xb8a2));
        EXPECT(0x12, gbc.readMem(0xe992));
        // 12 0058
        gbc.setState(0xaaca, 0x1ea8, 0xea00, 0xad6b, 0x9722, 0x167e, 0x0, 0x1);
        gbc.writeMem(0x9722, { 0x0 });
        gbc.writeMem(0xaaca, { 0x12 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1ea8, gbc.sp());
        EXPECT(0xaacb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0x9722));
        EXPECT(0x12, gbc.readMem(0xaaca));
        // 12 0059
        gbc.setState(0x22a0, 0xf53a, 0x700, 0x2ea5, 0xe7c7, 0x4c26, 0x1, 0x0);
        gbc.writeMem(0x22a0, { 0x12 });
        gbc.writeMem(0xe7c7, { 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf53a, gbc.sp());
        EXPECT(0x22a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xe7c7));
        // 12 005A
        gbc.setState(0x5484, 0xb7da, 0x22e0, 0x8e0f, 0xe301, 0x2158, 0x1, 0x1);
        gbc.writeMem(0x5484, { 0x12 });
        gbc.writeMem(0xe301, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb7da, gbc.sp());
        EXPECT(0x5485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xe301));
        // 12 005B
        gbc.setState(0xc3f1, 0x921d, 0x7b90, 0xc1f5, 0xa8d0, 0x46d8, 0x1, 0x1);
        gbc.writeMem(0xa8d0, { 0x0 });
        gbc.writeMem(0xc3f1, { 0x12 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x921d, gbc.sp());
        EXPECT(0xc3f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa8d0));
        EXPECT(0x12, gbc.readMem(0xc3f1));
        // 12 005C
        gbc.setState(0xef9c, 0x6747, 0x10d0, 0x6505, 0xb8f7, 0x2b1e, 0x0, 0x0);
        gbc.writeMem(0xb8f7, { 0x0 });
        gbc.writeMem(0xef9c, { 0x12 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6747, gbc.sp());
        EXPECT(0xef9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb8f7));
        EXPECT(0x12, gbc.readMem(0xef9c));
        // 12 005F
        gbc.setState(0xd00d, 0xa9f8, 0xbdf0, 0xec04, 0x973d, 0x6752, 0x1, 0x1);
        gbc.writeMem(0x973d, { 0x0 });
        gbc.writeMem(0xd00d, { 0x12 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa9f8, gbc.sp());
        EXPECT(0xd00e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x973d));
        EXPECT(0x12, gbc.readMem(0xd00d));
        // 12 0062
        gbc.setState(0xc775, 0x6500, 0x7690, 0x1341, 0xfd87, 0x5c73, 0x1, 0x1);
        gbc.writeMem(0xc775, { 0x12 });
        gbc.writeMem(0xfd87, { 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6500, gbc.sp());
        EXPECT(0xc776, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xc775));
        EXPECT(0x76, gbc.readMem(0xfd87));
        // 12 0063
        gbc.setState(0x9aa4, 0xe677, 0x58e0, 0xf29d, 0xbf96, 0xda5c, 0x1, 0x0);
        gbc.writeMem(0x9aa4, { 0x12 });
        gbc.writeMem(0xbf96, { 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe677, gbc.sp());
        EXPECT(0x9aa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9aa4));
        EXPECT(0x58, gbc.readMem(0xbf96));
        // 12 0064
        gbc.setState(0x9d42, 0xb025, 0x1c00, 0xcd91, 0x9aa9, 0xee17, 0x0, 0x0);
        gbc.writeMem(0x9aa9, { 0x0 });
        gbc.writeMem(0x9d42, { 0x12 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb025, gbc.sp());
        EXPECT(0x9d43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x9aa9));
        EXPECT(0x12, gbc.readMem(0x9d42));
        // 12 0068
        gbc.setState(0xac8f, 0x13c6, 0xe720, 0x511, 0xc4fc, 0xa402, 0x0, 0x0);
        gbc.writeMem(0xac8f, { 0x12 });
        gbc.writeMem(0xc4fc, { 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x13c6, gbc.sp());
        EXPECT(0xac90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xac8f));
        EXPECT(0xe7, gbc.readMem(0xc4fc));
        // 12 0069
        gbc.setState(0xa3c, 0x12ce, 0x82e0, 0xb2f1, 0x8767, 0xa1f5, 0x0, 0x0);
        gbc.writeMem(0xa3c, { 0x12 });
        gbc.writeMem(0x8767, { 0x0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x12ce, gbc.sp());
        EXPECT(0xa3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8767));
        // 12 006A
        gbc.setState(0x482b, 0xe000, 0x3ef0, 0x75d8, 0xf28e, 0xdda, 0x1, 0x1);
        gbc.writeMem(0x482b, { 0x12 });
        gbc.writeMem(0xf28e, { 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe000, gbc.sp());
        EXPECT(0x482c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xf28e));
        // 12 006D
        gbc.setState(0xcb6f, 0x48f1, 0x4af0, 0xcb7c, 0xcedf, 0x1a2d, 0x1, 0x1);
        gbc.writeMem(0xcb6f, { 0x12 });
        gbc.writeMem(0xcedf, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x48f1, gbc.sp());
        EXPECT(0xcb70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xcb6f));
        EXPECT(0x4a, gbc.readMem(0xcedf));
        // 12 006E
        gbc.setState(0x84a4, 0x9b44, 0x14a0, 0x5c76, 0x80d9, 0xa5e5, 0x1, 0x0);
        gbc.writeMem(0x80d9, { 0x0 });
        gbc.writeMem(0x84a4, { 0x12 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9b44, gbc.sp());
        EXPECT(0x84a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x80d9));
        EXPECT(0x12, gbc.readMem(0x84a4));
        // 12 006F
        gbc.setState(0xde02, 0x750e, 0x45e0, 0x43bc, 0xad95, 0x292b, 0x0, 0x1);
        gbc.writeMem(0xad95, { 0x0 });
        gbc.writeMem(0xde02, { 0x12 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x750e, gbc.sp());
        EXPECT(0xde03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xad95));
        EXPECT(0x12, gbc.readMem(0xde02));
        // 12 0072
        gbc.setState(0xb187, 0xbfd7, 0x1df0, 0xc68f, 0x823c, 0x2d16, 0x0, 0x1);
        gbc.writeMem(0x823c, { 0x0 });
        gbc.writeMem(0xb187, { 0x12 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xbfd7, gbc.sp());
        EXPECT(0xb188, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x823c));
        EXPECT(0x12, gbc.readMem(0xb187));
        // 12 0073
        gbc.setState(0xa7a0, 0xc4a3, 0x7390, 0xe814, 0x8768, 0x9a85, 0x1, 0x1);
        gbc.writeMem(0x8768, { 0x0 });
        gbc.writeMem(0xa7a0, { 0x12 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc4a3, gbc.sp());
        EXPECT(0xa7a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x8768));
        EXPECT(0x12, gbc.readMem(0xa7a0));
        // 12 0075
        gbc.setState(0x9573, 0xab0b, 0x3830, 0xeb0d, 0xc732, 0x21fe, 0x0, 0x1);
        gbc.writeMem(0x9573, { 0x12 });
        gbc.writeMem(0xc732, { 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xab0b, gbc.sp());
        EXPECT(0x9574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9573));
        EXPECT(0x38, gbc.readMem(0xc732));
        // 12 0079
        gbc.setState(0x23d5, 0x3115, 0xd290, 0x89fc, 0xf596, 0xc161, 0x0, 0x1);
        gbc.writeMem(0x23d5, { 0x12 });
        gbc.writeMem(0xf596, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3115, gbc.sp());
        EXPECT(0x23d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xf596));
        // 12 007A
        gbc.setState(0xbb99, 0x8624, 0xf3c0, 0x59e6, 0xb94e, 0x51d6, 0x1, 0x0);
        gbc.writeMem(0xb94e, { 0x0 });
        gbc.writeMem(0xbb99, { 0x12 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8624, gbc.sp());
        EXPECT(0xbb9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xb94e));
        EXPECT(0x12, gbc.readMem(0xbb99));
        // 12 007C
        gbc.setState(0x66a9, 0x960f, 0xa060, 0xcbd1, 0xd828, 0x382c, 0x1, 0x1);
        gbc.writeMem(0x66a9, { 0x12 });
        gbc.writeMem(0xd828, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x960f, gbc.sp());
        EXPECT(0x66aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd828));
        // 12 007E
        gbc.setState(0x1992, 0xcaef, 0xf250, 0xb629, 0xd96b, 0xc277, 0x1, 0x1);
        gbc.writeMem(0x1992, { 0x12 });
        gbc.writeMem(0xd96b, { 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xcaef, gbc.sp());
        EXPECT(0x1993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xd96b));
        // 12 007F
        gbc.setState(0xb57e, 0x5753, 0xb370, 0x73b, 0x94d7, 0x764e, 0x1, 0x1);
        gbc.writeMem(0x94d7, { 0x0 });
        gbc.writeMem(0xb57e, { 0x12 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5753, gbc.sp());
        EXPECT(0xb57f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x94d7));
        EXPECT(0x12, gbc.readMem(0xb57e));
        // 12 0080
        gbc.setState(0x1ea2, 0x36f6, 0x1240, 0xf185, 0xa85e, 0x2ea8, 0x0, 0x1);
        gbc.writeMem(0x1ea2, { 0x12 });
        gbc.writeMem(0xa85e, { 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x36f6, gbc.sp());
        EXPECT(0x1ea3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xa85e));
        // 12 0082
        gbc.setState(0x99af, 0x2485, 0xd770, 0xebc4, 0xb51a, 0x2b2a, 0x1, 0x0);
        gbc.writeMem(0x99af, { 0x12 });
        gbc.writeMem(0xb51a, { 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2485, gbc.sp());
        EXPECT(0x99b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x99af));
        EXPECT(0xd7, gbc.readMem(0xb51a));
        // 12 0083
        gbc.setState(0xbd5, 0xaf3, 0x8630, 0x547b, 0xe2d0, 0x51f1, 0x0, 0x0);
        gbc.writeMem(0xbd5, { 0x12 });
        gbc.writeMem(0xe2d0, { 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xaf3, gbc.sp());
        EXPECT(0xbd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xe2d0));
        // 12 0084
        gbc.setState(0xbca3, 0xb2a5, 0xaac0, 0x81, 0xe621, 0x1d9a, 0x1, 0x1);
        gbc.writeMem(0xbca3, { 0x12 });
        gbc.writeMem(0xe621, { 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb2a5, gbc.sp());
        EXPECT(0xbca4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xbca3));
        EXPECT(0xaa, gbc.readMem(0xe621));
        // 12 0085
        gbc.setState(0x9a65, 0x743b, 0xd040, 0xe499, 0xc593, 0x601f, 0x1, 0x1);
        gbc.writeMem(0x9a65, { 0x12 });
        gbc.writeMem(0xc593, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x743b, gbc.sp());
        EXPECT(0x9a66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9a65));
        EXPECT(0xd0, gbc.readMem(0xc593));
        // 12 0086
        gbc.setState(0xef28, 0xdf7a, 0x9e0, 0x8821, 0xa258, 0x7487, 0x1, 0x1);
        gbc.writeMem(0xa258, { 0x0 });
        gbc.writeMem(0xef28, { 0x12 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xdf7a, gbc.sp());
        EXPECT(0xef29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa258));
        EXPECT(0x12, gbc.readMem(0xef28));
        // 12 0087
        gbc.setState(0xca1f, 0xe3f0, 0x6c30, 0x8795, 0xab31, 0x2c51, 0x0, 0x0);
        gbc.writeMem(0xab31, { 0x0 });
        gbc.writeMem(0xca1f, { 0x12 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe3f0, gbc.sp());
        EXPECT(0xca20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xab31));
        EXPECT(0x12, gbc.readMem(0xca1f));
        // 12 008A
        gbc.setState(0x70a7, 0xea4e, 0xa680, 0x12b9, 0xf9ec, 0x922b, 0x1, 0x0);
        gbc.writeMem(0x70a7, { 0x12 });
        gbc.writeMem(0xf9ec, { 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xea4e, gbc.sp());
        EXPECT(0x70a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xf9ec));
        // 12 008B
        gbc.setState(0x73e4, 0xbd98, 0x11f0, 0x13b7, 0xdec3, 0x12af, 0x0, 0x1);
        gbc.writeMem(0x73e4, { 0x12 });
        gbc.writeMem(0xdec3, { 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbd98, gbc.sp());
        EXPECT(0x73e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xdec3));
        // 12 008D
        gbc.setState(0x5a5c, 0xaa44, 0xb900, 0xa6d2, 0x8b69, 0x7365, 0x1, 0x1);
        gbc.writeMem(0x5a5c, { 0x12 });
        gbc.writeMem(0x8b69, { 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xaa44, gbc.sp());
        EXPECT(0x5a5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8b69));
        // 12 008E
        gbc.setState(0x3cf5, 0x293f, 0x8810, 0x11d6, 0xee47, 0x73f7, 0x0, 0x1);
        gbc.writeMem(0x3cf5, { 0x12 });
        gbc.writeMem(0xee47, { 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x293f, gbc.sp());
        EXPECT(0x3cf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xee47));
        // 12 0092
        gbc.setState(0xabca, 0xc6f6, 0xe5c0, 0x2e02, 0xeb64, 0x5814, 0x1, 0x1);
        gbc.writeMem(0xabca, { 0x12 });
        gbc.writeMem(0xeb64, { 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc6f6, gbc.sp());
        EXPECT(0xabcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xabca));
        EXPECT(0xe5, gbc.readMem(0xeb64));
        // 12 0094
        gbc.setState(0x193b, 0xc2c5, 0xe590, 0x7df3, 0x9d87, 0x7872, 0x1, 0x1);
        gbc.writeMem(0x193b, { 0x12 });
        gbc.writeMem(0x9d87, { 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc2c5, gbc.sp());
        EXPECT(0x193c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9d87));
        // 12 0096
        gbc.setState(0x29f6, 0xea48, 0x16e0, 0xfc67, 0xd15f, 0x9039, 0x0, 0x1);
        gbc.writeMem(0x29f6, { 0x12 });
        gbc.writeMem(0xd15f, { 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xea48, gbc.sp());
        EXPECT(0x29f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd15f));
        // 12 0098
        gbc.setState(0x1152, 0x3baf, 0xe4f0, 0x8352, 0x8026, 0x108, 0x1, 0x1);
        gbc.writeMem(0x1152, { 0x12 });
        gbc.writeMem(0x8026, { 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3baf, gbc.sp());
        EXPECT(0x1153, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0x8026));
        // 12 0099
        gbc.setState(0x73aa, 0xada8, 0x240, 0x76a9, 0x9f3c, 0x3f7f, 0x1, 0x0);
        gbc.writeMem(0x73aa, { 0x12 });
        gbc.writeMem(0x9f3c, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xada8, gbc.sp());
        EXPECT(0x73ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0x9f3c));
        // 12 009C
        gbc.setState(0x7a67, 0xcb1e, 0x6cb0, 0xd211, 0xc92e, 0x965b, 0x1, 0x1);
        gbc.writeMem(0x7a67, { 0x12 });
        gbc.writeMem(0xc92e, { 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xcb1e, gbc.sp());
        EXPECT(0x7a68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc92e));
        // 12 009F
        gbc.setState(0xeb7d, 0x52e0, 0x74e0, 0xec4, 0xe61b, 0xd751, 0x0, 0x1);
        gbc.writeMem(0xe61b, { 0x0 });
        gbc.writeMem(0xeb7d, { 0x12 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x52e0, gbc.sp());
        EXPECT(0xeb7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xe61b));
        EXPECT(0x12, gbc.readMem(0xeb7d));
        // 12 00A0
        gbc.setState(0x12a7, 0x1615, 0xb720, 0x250b, 0x8f47, 0x344a, 0x0, 0x0);
        gbc.writeMem(0x12a7, { 0x12 });
        gbc.writeMem(0x8f47, { 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1615, gbc.sp());
        EXPECT(0x12a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8f47));
        // 12 00A2
        gbc.setState(0x9320, 0x83d4, 0xb780, 0x1624, 0xd2c0, 0xaaf3, 0x0, 0x0);
        gbc.writeMem(0x9320, { 0x12 });
        gbc.writeMem(0xd2c0, { 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x83d4, gbc.sp());
        EXPECT(0x9321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9320));
        EXPECT(0xb7, gbc.readMem(0xd2c0));
        // 12 00A4
        gbc.setState(0xd27c, 0x461a, 0x6640, 0x33f5, 0xfcc4, 0x205e, 0x1, 0x1);
        gbc.writeMem(0xd27c, { 0x12 });
        gbc.writeMem(0xfcc4, { 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x461a, gbc.sp());
        EXPECT(0xd27d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xd27c));
        EXPECT(0x66, gbc.readMem(0xfcc4));
        // 12 00A6
        gbc.setState(0x7de4, 0x9b06, 0x2280, 0x8bd8, 0xc3c5, 0x35c0, 0x1, 0x0);
        gbc.writeMem(0x7de4, { 0x12 });
        gbc.writeMem(0xc3c5, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9b06, gbc.sp());
        EXPECT(0x7de5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xc3c5));
        // 12 00A7
        gbc.setState(0x463b, 0x701a, 0xdb30, 0x7379, 0xa74e, 0x1453, 0x1, 0x1);
        gbc.writeMem(0x463b, { 0x12 });
        gbc.writeMem(0xa74e, { 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x701a, gbc.sp());
        EXPECT(0x463c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xa74e));
        // 12 00A9
        gbc.setState(0xe03b, 0xb2b3, 0xcb40, 0xa52e, 0xc145, 0xccf1, 0x1, 0x1);
        gbc.writeMem(0xc145, { 0x0 });
        gbc.writeMem(0xe03b, { 0x12 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb2b3, gbc.sp());
        EXPECT(0xe03c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc145));
        EXPECT(0x12, gbc.readMem(0xe03b));
        // 12 00AA
        gbc.setState(0xe21c, 0x6486, 0x8660, 0x4cd9, 0xa47c, 0x903a, 0x0, 0x0);
        gbc.writeMem(0xa47c, { 0x0 });
        gbc.writeMem(0xe21c, { 0x12 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6486, gbc.sp());
        EXPECT(0xe21d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa47c));
        EXPECT(0x12, gbc.readMem(0xe21c));
        // 12 00AE
        gbc.setState(0xd782, 0x2878, 0x2f10, 0xb9cd, 0xe158, 0xd339, 0x1, 0x1);
        gbc.writeMem(0xd782, { 0x12 });
        gbc.writeMem(0xe158, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2878, gbc.sp());
        EXPECT(0xd783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xd782));
        EXPECT(0x2f, gbc.readMem(0xe158));
        // 12 00AF
        gbc.setState(0x2cd6, 0x5295, 0xbb90, 0x762c, 0x9d90, 0x4c5, 0x1, 0x0);
        gbc.writeMem(0x2cd6, { 0x12 });
        gbc.writeMem(0x9d90, { 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5295, gbc.sp());
        EXPECT(0x2cd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9d90));
        // 12 00B6
        gbc.setState(0x8066, 0x2f5, 0x6b10, 0x196c, 0xcca8, 0x8b74, 0x0, 0x0);
        gbc.writeMem(0x8066, { 0x12 });
        gbc.writeMem(0xcca8, { 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2f5, gbc.sp());
        EXPECT(0x8067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x8066));
        EXPECT(0x6b, gbc.readMem(0xcca8));
        // 12 00B9
        gbc.setState(0x65e, 0xe726, 0xae20, 0xe3f0, 0xd96c, 0x43ac, 0x1, 0x1);
        gbc.writeMem(0x65e, { 0x12 });
        gbc.writeMem(0xd96c, { 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe726, gbc.sp());
        EXPECT(0x65f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xd96c));
        // 12 00BA
        gbc.setState(0xaa45, 0x73e6, 0xe210, 0x5a3f, 0x9f95, 0x866b, 0x0, 0x1);
        gbc.writeMem(0x9f95, { 0x0 });
        gbc.writeMem(0xaa45, { 0x12 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x73e6, gbc.sp());
        EXPECT(0xaa46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9f95));
        EXPECT(0x12, gbc.readMem(0xaa45));
        // 12 00BB
        gbc.setState(0x6b6, 0x988a, 0x9e70, 0x9b05, 0xeeca, 0x8704, 0x0, 0x0);
        gbc.writeMem(0x6b6, { 0x12 });
        gbc.writeMem(0xeeca, { 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x988a, gbc.sp());
        EXPECT(0x6b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xeeca));
        // 12 00BD
        gbc.setState(0x937b, 0x541c, 0x4010, 0x9b66, 0xbef0, 0xa676, 0x0, 0x0);
        gbc.writeMem(0x937b, { 0x12 });
        gbc.writeMem(0xbef0, { 0x0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x541c, gbc.sp());
        EXPECT(0x937c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x937b));
        EXPECT(0x40, gbc.readMem(0xbef0));
        // 12 00C0
        gbc.setState(0x65b9, 0x21c8, 0x560, 0x67c2, 0xaf99, 0x5324, 0x1, 0x0);
        gbc.writeMem(0x65b9, { 0x12 });
        gbc.writeMem(0xaf99, { 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x21c8, gbc.sp());
        EXPECT(0x65ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xaf99));
        // 12 00C3
        gbc.setState(0x1945, 0x587, 0x5f40, 0x5352, 0xbab9, 0x89cf, 0x0, 0x0);
        gbc.writeMem(0x1945, { 0x12 });
        gbc.writeMem(0xbab9, { 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x587, gbc.sp());
        EXPECT(0x1946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xbab9));
        // 12 00C5
        gbc.setState(0x8d49, 0x117f, 0xd1e0, 0xa777, 0xc2e7, 0x7d3e, 0x0, 0x1);
        gbc.writeMem(0x8d49, { 0x12 });
        gbc.writeMem(0xc2e7, { 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x117f, gbc.sp());
        EXPECT(0x8d4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x8d49));
        EXPECT(0xd1, gbc.readMem(0xc2e7));
        // 12 00C9
        gbc.setState(0x2cae, 0xbb03, 0xb2d0, 0xe66c, 0xd67e, 0xcaaf, 0x1, 0x0);
        gbc.writeMem(0x2cae, { 0x12 });
        gbc.writeMem(0xd67e, { 0x0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbb03, gbc.sp());
        EXPECT(0x2caf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd67e));
        // 12 00CA
        gbc.setState(0x2a39, 0xfbd3, 0x5450, 0x3d47, 0xbf40, 0x5120, 0x0, 0x1);
        gbc.writeMem(0x2a39, { 0x12 });
        gbc.writeMem(0xbf40, { 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xfbd3, gbc.sp());
        EXPECT(0x2a3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xbf40));
        // 12 00CB
        gbc.setState(0x4a26, 0x14c8, 0x2030, 0x24d1, 0xfdc8, 0x5f03, 0x0, 0x0);
        gbc.writeMem(0x4a26, { 0x12 });
        gbc.writeMem(0xfdc8, { 0x0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x14c8, gbc.sp());
        EXPECT(0x4a27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xfdc8));
        // 12 00CC
        gbc.setState(0x37ff, 0x5304, 0xafa0, 0x42d8, 0x80cd, 0x74b7, 0x1, 0x0);
        gbc.writeMem(0x37ff, { 0x12 });
        gbc.writeMem(0x80cd, { 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5304, gbc.sp());
        EXPECT(0x3800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0x80cd));
        // 12 00CD
        gbc.setState(0x416e, 0x60c1, 0x44b0, 0x3d4f, 0xab7d, 0x9a70, 0x0, 0x1);
        gbc.writeMem(0x416e, { 0x12 });
        gbc.writeMem(0xab7d, { 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x60c1, gbc.sp());
        EXPECT(0x416f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xab7d));
        // 12 00D0
        gbc.setState(0x5c1a, 0x2943, 0xd660, 0x9c36, 0x830c, 0x4bcf, 0x1, 0x0);
        gbc.writeMem(0x5c1a, { 0x12 });
        gbc.writeMem(0x830c, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2943, gbc.sp());
        EXPECT(0x5c1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x830c));
        // 12 00D3
        gbc.setState(0x9438, 0xbe64, 0x96b0, 0xf8ce, 0xdcf8, 0x2021, 0x1, 0x1);
        gbc.writeMem(0x9438, { 0x12 });
        gbc.writeMem(0xdcf8, { 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xbe64, gbc.sp());
        EXPECT(0x9439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9438));
        EXPECT(0x96, gbc.readMem(0xdcf8));
        // 12 00D8
        gbc.setState(0x1bab, 0x893e, 0xda40, 0xba78, 0x90c7, 0x9727, 0x1, 0x1);
        gbc.writeMem(0x1bab, { 0x12 });
        gbc.writeMem(0x90c7, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x893e, gbc.sp());
        EXPECT(0x1bac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x90c7));
        // 12 00D9
        gbc.setState(0xd698, 0xb2c1, 0xb160, 0x5ffb, 0x9f5f, 0x63cf, 0x0, 0x1);
        gbc.writeMem(0x9f5f, { 0x0 });
        gbc.writeMem(0xd698, { 0x12 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb2c1, gbc.sp());
        EXPECT(0xd699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0x9f5f));
        EXPECT(0x12, gbc.readMem(0xd698));
        // 12 00DA
        gbc.setState(0x66f7, 0xe887, 0x8cb0, 0x4554, 0xddae, 0x81ba, 0x1, 0x0);
        gbc.writeMem(0x66f7, { 0x12 });
        gbc.writeMem(0xddae, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe887, gbc.sp());
        EXPECT(0x66f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xddae));
        // 12 00DE
        gbc.setState(0xb277, 0xbdb1, 0x7560, 0x350a, 0xe0c7, 0x354c, 0x1, 0x1);
        gbc.writeMem(0xb277, { 0x12 });
        gbc.writeMem(0xe0c7, { 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xbdb1, gbc.sp());
        EXPECT(0xb278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xb277));
        EXPECT(0x75, gbc.readMem(0xe0c7));
        // 12 00DF
        gbc.setState(0x178f, 0xd6d3, 0x64c0, 0xe9c5, 0xccf9, 0xd0c1, 0x1, 0x1);
        gbc.writeMem(0x178f, { 0x12 });
        gbc.writeMem(0xccf9, { 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd6d3, gbc.sp());
        EXPECT(0x1790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xccf9));
        // 12 00E0
        gbc.setState(0x7997, 0x21dc, 0x2ea0, 0x5be6, 0xc8f1, 0x1419, 0x0, 0x0);
        gbc.writeMem(0x7997, { 0x12 });
        gbc.writeMem(0xc8f1, { 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x21dc, gbc.sp());
        EXPECT(0x7998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc8f1));
        // 12 00E2
        gbc.setState(0xeb8f, 0x4b57, 0xab70, 0xf071, 0xb187, 0x3886, 0x0, 0x0);
        gbc.writeMem(0xb187, { 0x0 });
        gbc.writeMem(0xeb8f, { 0x12 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4b57, gbc.sp());
        EXPECT(0xeb90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xb187));
        EXPECT(0x12, gbc.readMem(0xeb8f));
        // 12 00E3
        gbc.setState(0xc3ef, 0x6e6, 0x2560, 0x40a9, 0xc269, 0x9534, 0x0, 0x0);
        gbc.writeMem(0xc269, { 0x0 });
        gbc.writeMem(0xc3ef, { 0x12 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6e6, gbc.sp());
        EXPECT(0xc3f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc269));
        EXPECT(0x12, gbc.readMem(0xc3ef));
        // 12 00E4
        gbc.setState(0xba6e, 0xcb28, 0xba20, 0xa979, 0xc9bd, 0x6c9f, 0x0, 0x1);
        gbc.writeMem(0xba6e, { 0x12 });
        gbc.writeMem(0xc9bd, { 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xcb28, gbc.sp());
        EXPECT(0xba6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xba6e));
        EXPECT(0xba, gbc.readMem(0xc9bd));
        // 12 00E5
        gbc.setState(0x75c9, 0x1f5b, 0x8fc0, 0xda72, 0xdccd, 0xc405, 0x0, 0x0);
        gbc.writeMem(0x75c9, { 0x12 });
        gbc.writeMem(0xdccd, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1f5b, gbc.sp());
        EXPECT(0x75ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xdccd));
        // 12 00E7
        gbc.setState(0x6673, 0x3ae6, 0xb380, 0x92d9, 0xf073, 0x931f, 0x0, 0x1);
        gbc.writeMem(0x6673, { 0x12 });
        gbc.writeMem(0xf073, { 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3ae6, gbc.sp());
        EXPECT(0x6674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xf073));
        // 12 00E9
        gbc.setState(0xa021, 0xe2ad, 0x9280, 0xe62d, 0x84d3, 0xf205, 0x0, 0x0);
        gbc.writeMem(0x84d3, { 0x0 });
        gbc.writeMem(0xa021, { 0x12 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe2ad, gbc.sp());
        EXPECT(0xa022, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x84d3));
        EXPECT(0x12, gbc.readMem(0xa021));
        // 12 00EA
        gbc.setState(0xed6b, 0x99ef, 0xce00, 0x6c2b, 0xadf7, 0xd461, 0x0, 0x0);
        gbc.writeMem(0xadf7, { 0x0 });
        gbc.writeMem(0xed6b, { 0x12 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x99ef, gbc.sp());
        EXPECT(0xed6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xadf7));
        EXPECT(0x12, gbc.readMem(0xed6b));
        // 12 00EF
        gbc.setState(0x5878, 0x54b3, 0xcbf0, 0x1efd, 0xbd0f, 0x3f73, 0x0, 0x1);
        gbc.writeMem(0x5878, { 0x12 });
        gbc.writeMem(0xbd0f, { 0x0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x54b3, gbc.sp());
        EXPECT(0x5879, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd0f));
        // 12 00F0
        gbc.setState(0x8eef, 0x1957, 0x1bd0, 0x9f5, 0xba6c, 0x750f, 0x1, 0x1);
        gbc.writeMem(0x8eef, { 0x12 });
        gbc.writeMem(0xba6c, { 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1957, gbc.sp());
        EXPECT(0x8ef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x8eef));
        EXPECT(0x1b, gbc.readMem(0xba6c));
        // 12 00F5
        gbc.setState(0x5af8, 0x5bcb, 0x770, 0x7912, 0xbdc8, 0x28c8, 0x0, 0x0);
        gbc.writeMem(0x5af8, { 0x12 });
        gbc.writeMem(0xbdc8, { 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5bcb, gbc.sp());
        EXPECT(0x5af9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xbdc8));
        // 12 00F6
        gbc.setState(0x90c4, 0xf1b7, 0x6370, 0x64db, 0xf209, 0x2df4, 0x1, 0x0);
        gbc.writeMem(0x90c4, { 0x12 });
        gbc.writeMem(0xf209, { 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf1b7, gbc.sp());
        EXPECT(0x90c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x90c4));
        EXPECT(0x63, gbc.readMem(0xf209));
        // 12 00F9
        gbc.setState(0xc38d, 0x9a47, 0xfdf0, 0xb0b3, 0x97c4, 0x7c81, 0x0, 0x1);
        gbc.writeMem(0x97c4, { 0x0 });
        gbc.writeMem(0xc38d, { 0x12 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9a47, gbc.sp());
        EXPECT(0xc38e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0x97c4));
        EXPECT(0x12, gbc.readMem(0xc38d));
        // 12 00FA
        gbc.setState(0x7a3e, 0x56f7, 0xe5f0, 0x6d66, 0x9505, 0x75ff, 0x0, 0x1);
        gbc.writeMem(0x7a3e, { 0x12 });
        gbc.writeMem(0x9505, { 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x56f7, gbc.sp());
        EXPECT(0x7a3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9505));
        // 12 00FC
        gbc.setState(0x870e, 0xeaf2, 0x74d0, 0x5de, 0xab80, 0x942e, 0x1, 0x0);
        gbc.writeMem(0x870e, { 0x12 });
        gbc.writeMem(0xab80, { 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xeaf2, gbc.sp());
        EXPECT(0x870f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x870e));
        EXPECT(0x74, gbc.readMem(0xab80));
        // 12 00FF
        gbc.setState(0x5cf8, 0xb650, 0x9060, 0x202c, 0xb72b, 0x7f38, 0x0, 0x1);
        gbc.writeMem(0x5cf8, { 0x12 });
        gbc.writeMem(0xb72b, { 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb650, gbc.sp());
        EXPECT(0x5cf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xb72b));
        // 12 0101
        gbc.setState(0xc294, 0x69a, 0x8c00, 0xd500, 0xe81a, 0xcda7, 0x1, 0x1);
        gbc.writeMem(0xc294, { 0x12 });
        gbc.writeMem(0xe81a, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x69a, gbc.sp());
        EXPECT(0xc295, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xc294));
        EXPECT(0x8c, gbc.readMem(0xe81a));
        // 12 0103
        gbc.setState(0x4cbc, 0x6c66, 0xbfc0, 0xcc2f, 0xc310, 0xc747, 0x0, 0x1);
        gbc.writeMem(0x4cbc, { 0x12 });
        gbc.writeMem(0xc310, { 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6c66, gbc.sp());
        EXPECT(0x4cbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc310));
        // 12 0104
        gbc.setState(0x5bf8, 0xf797, 0xdb0, 0x8667, 0xaab3, 0xfb51, 0x1, 0x1);
        gbc.writeMem(0x5bf8, { 0x12 });
        gbc.writeMem(0xaab3, { 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf797, gbc.sp());
        EXPECT(0x5bf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xaab3));
        // 12 0108
        gbc.setState(0xd1c1, 0x4c44, 0xdb10, 0x68bc, 0xe716, 0xd973, 0x0, 0x0);
        gbc.writeMem(0xd1c1, { 0x12 });
        gbc.writeMem(0xe716, { 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4c44, gbc.sp());
        EXPECT(0xd1c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xd1c1));
        EXPECT(0xdb, gbc.readMem(0xe716));
        // 12 0109
        gbc.setState(0x9530, 0x4a5d, 0x27c0, 0x6100, 0xc5cb, 0xc210, 0x0, 0x0);
        gbc.writeMem(0x9530, { 0x12 });
        gbc.writeMem(0xc5cb, { 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4a5d, gbc.sp());
        EXPECT(0x9531, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9530));
        EXPECT(0x27, gbc.readMem(0xc5cb));
        // 12 010B
        gbc.setState(0x10be, 0xe79a, 0xe870, 0x9e24, 0x999c, 0x3cca, 0x1, 0x1);
        gbc.writeMem(0x10be, { 0x12 });
        gbc.writeMem(0x999c, { 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe79a, gbc.sp());
        EXPECT(0x10bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0x999c));
        // 12 010C
        gbc.setState(0xd33c, 0xe297, 0x5ee0, 0xe8d, 0xf828, 0x9274, 0x0, 0x1);
        gbc.writeMem(0xd33c, { 0x12 });
        gbc.writeMem(0xf828, { 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe297, gbc.sp());
        EXPECT(0xd33d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xd33c));
        EXPECT(0x5e, gbc.readMem(0xf828));
        // 12 010F
        gbc.setState(0x9865, 0xeb81, 0xcd20, 0x68f0, 0xcab8, 0xe71b, 0x0, 0x0);
        gbc.writeMem(0x9865, { 0x12 });
        gbc.writeMem(0xcab8, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xeb81, gbc.sp());
        EXPECT(0x9866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9865));
        EXPECT(0xcd, gbc.readMem(0xcab8));
        // 12 0112
        gbc.setState(0xcf02, 0xd08f, 0xeb00, 0x14ef, 0xb4f1, 0xb571, 0x1, 0x0);
        gbc.writeMem(0xb4f1, { 0x0 });
        gbc.writeMem(0xcf02, { 0x12 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd08f, gbc.sp());
        EXPECT(0xcf03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xb4f1));
        EXPECT(0x12, gbc.readMem(0xcf02));
        // 12 0114
        gbc.setState(0x7e80, 0x90bc, 0x9460, 0x6e1, 0xb240, 0xa851, 0x1, 0x1);
        gbc.writeMem(0x7e80, { 0x12 });
        gbc.writeMem(0xb240, { 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x90bc, gbc.sp());
        EXPECT(0x7e81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb240));
        // 12 0115
        gbc.setState(0xdc58, 0x331, 0xb8e0, 0xce51, 0xd50d, 0xa95, 0x1, 0x1);
        gbc.writeMem(0xd50d, { 0x0 });
        gbc.writeMem(0xdc58, { 0x12 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x331, gbc.sp());
        EXPECT(0xdc59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xd50d));
        EXPECT(0x12, gbc.readMem(0xdc58));
        // 12 0118
        gbc.setState(0xc8cc, 0x5e65, 0xeec0, 0x5f46, 0xbabc, 0x8b5a, 0x0, 0x0);
        gbc.writeMem(0xbabc, { 0x0 });
        gbc.writeMem(0xc8cc, { 0x12 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5e65, gbc.sp());
        EXPECT(0xc8cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xbabc));
        EXPECT(0x12, gbc.readMem(0xc8cc));
        // 12 011B
        gbc.setState(0x7c29, 0x4282, 0xf1f0, 0xff06, 0xf65e, 0x2097, 0x1, 0x0);
        gbc.writeMem(0x7c29, { 0x12 });
        gbc.writeMem(0xf65e, { 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4282, gbc.sp());
        EXPECT(0x7c2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xf65e));
        // 12 011D
        gbc.setState(0xe489, 0x6fb, 0x2f60, 0x79a9, 0xf5ea, 0xda1c, 0x1, 0x0);
        gbc.writeMem(0xe489, { 0x12 });
        gbc.writeMem(0xf5ea, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6fb, gbc.sp());
        EXPECT(0xe48a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xe489));
        EXPECT(0x2f, gbc.readMem(0xf5ea));
        // 12 0123
        gbc.setState(0x6b96, 0x1343, 0xb1b0, 0xf51d, 0xcd1b, 0x4081, 0x0, 0x0);
        gbc.writeMem(0x6b96, { 0x12 });
        gbc.writeMem(0xcd1b, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1343, gbc.sp());
        EXPECT(0x6b97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xcd1b));
        // 12 0126
        gbc.setState(0x9ee0, 0x231d, 0x75c0, 0x9ab8, 0x99bb, 0x24db, 0x1, 0x0);
        gbc.writeMem(0x99bb, { 0x0 });
        gbc.writeMem(0x9ee0, { 0x12 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x231d, gbc.sp());
        EXPECT(0x9ee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x99bb));
        EXPECT(0x12, gbc.readMem(0x9ee0));
        // 12 012B
        gbc.setState(0xaed3, 0x54ec, 0xe1c0, 0x92, 0xc732, 0x9af6, 0x0, 0x1);
        gbc.writeMem(0xaed3, { 0x12 });
        gbc.writeMem(0xc732, { 0x0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x54ec, gbc.sp());
        EXPECT(0xaed4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xaed3));
        EXPECT(0xe1, gbc.readMem(0xc732));
        // 12 012F
        gbc.setState(0xc028, 0xcd5e, 0x9210, 0xf465, 0xab23, 0x3066, 0x0, 0x0);
        gbc.writeMem(0xab23, { 0x0 });
        gbc.writeMem(0xc028, { 0x12 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xcd5e, gbc.sp());
        EXPECT(0xc029, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xab23));
        EXPECT(0x12, gbc.readMem(0xc028));
        // 12 0131
        gbc.setState(0xc085, 0xdb8e, 0x9da0, 0x8447, 0x92d5, 0xc96a, 0x0, 0x0);
        gbc.writeMem(0x92d5, { 0x0 });
        gbc.writeMem(0xc085, { 0x12 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xdb8e, gbc.sp());
        EXPECT(0xc086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x92d5));
        EXPECT(0x12, gbc.readMem(0xc085));
        // 12 0135
        gbc.setState(0xb0f4, 0x8bda, 0x750, 0x7cd, 0xe549, 0xde63, 0x0, 0x0);
        gbc.writeMem(0xb0f4, { 0x12 });
        gbc.writeMem(0xe549, { 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8bda, gbc.sp());
        EXPECT(0xb0f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xb0f4));
        EXPECT(0x7, gbc.readMem(0xe549));
        // 12 0138
        gbc.setState(0xee96, 0xbf0f, 0xfc30, 0xc0e8, 0xd499, 0x6ff2, 0x0, 0x1);
        gbc.writeMem(0xd499, { 0x0 });
        gbc.writeMem(0xee96, { 0x12 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xbf0f, gbc.sp());
        EXPECT(0xee97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xd499));
        EXPECT(0x12, gbc.readMem(0xee96));
        // 12 0139
        gbc.setState(0x6df2, 0xaf96, 0xde20, 0xfba9, 0x8916, 0x6e4f, 0x1, 0x0);
        gbc.writeMem(0x6df2, { 0x12 });
        gbc.writeMem(0x8916, { 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xaf96, gbc.sp());
        EXPECT(0x6df3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0x8916));
        // 12 013B
        gbc.setState(0xbfda, 0xcb36, 0xc180, 0xcbc0, 0xb920, 0xbda4, 0x0, 0x0);
        gbc.writeMem(0xb920, { 0x0 });
        gbc.writeMem(0xbfda, { 0x12 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xcb36, gbc.sp());
        EXPECT(0xbfdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb920));
        EXPECT(0x12, gbc.readMem(0xbfda));
        // 12 013C
        gbc.setState(0xc174, 0xa68f, 0x3620, 0x8844, 0x9119, 0x9097, 0x0, 0x1);
        gbc.writeMem(0x9119, { 0x0 });
        gbc.writeMem(0xc174, { 0x12 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa68f, gbc.sp());
        EXPECT(0xc175, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x9119));
        EXPECT(0x12, gbc.readMem(0xc174));
        // 12 013D
        gbc.setState(0xdf16, 0x9a3a, 0x23a0, 0x572d, 0x8d01, 0x1dbe, 0x0, 0x1);
        gbc.writeMem(0x8d01, { 0x0 });
        gbc.writeMem(0xdf16, { 0x12 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9a3a, gbc.sp());
        EXPECT(0xdf17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0x8d01));
        EXPECT(0x12, gbc.readMem(0xdf16));
        // 12 013F
        gbc.setState(0x79d7, 0x1d99, 0x9c80, 0x2efd, 0xbbd9, 0x958a, 0x1, 0x0);
        gbc.writeMem(0x79d7, { 0x12 });
        gbc.writeMem(0xbbd9, { 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1d99, gbc.sp());
        EXPECT(0x79d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xbbd9));
        // 12 0140
        gbc.setState(0x950e, 0xe827, 0xcd10, 0x31c8, 0xd125, 0x55f7, 0x1, 0x0);
        gbc.writeMem(0x950e, { 0x12 });
        gbc.writeMem(0xd125, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe827, gbc.sp());
        EXPECT(0x950f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x950e));
        EXPECT(0xcd, gbc.readMem(0xd125));
        // 12 0141
        gbc.setState(0xf7a, 0x5716, 0x630, 0x3b90, 0xe94d, 0x5951, 0x0, 0x1);
        gbc.writeMem(0xf7a, { 0x12 });
        gbc.writeMem(0xe94d, { 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5716, gbc.sp());
        EXPECT(0xf7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe94d));
        // 12 0142
        gbc.setState(0xc0ab, 0x141a, 0x9610, 0x110b, 0x8c03, 0xe87a, 0x0, 0x0);
        gbc.writeMem(0x8c03, { 0x0 });
        gbc.writeMem(0xc0ab, { 0x12 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x141a, gbc.sp());
        EXPECT(0xc0ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x8c03));
        EXPECT(0x12, gbc.readMem(0xc0ab));
        // 12 0143
        gbc.setState(0x343c, 0x8d1f, 0x7220, 0xeb04, 0xb390, 0xef91, 0x1, 0x1);
        gbc.writeMem(0x343c, { 0x12 });
        gbc.writeMem(0xb390, { 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8d1f, gbc.sp());
        EXPECT(0x343d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xb390));
        // 12 0146
        gbc.setState(0xe580, 0x1dda, 0xb620, 0x938, 0xe174, 0x760d, 0x0, 0x1);
        gbc.writeMem(0xe174, { 0x0 });
        gbc.writeMem(0xe580, { 0x12 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1dda, gbc.sp());
        EXPECT(0xe581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xe174));
        EXPECT(0x12, gbc.readMem(0xe580));
        // 12 0149
        gbc.setState(0xdd30, 0xac03, 0xe5c0, 0xa557, 0xeb0e, 0xdff7, 0x1, 0x0);
        gbc.writeMem(0xdd30, { 0x12 });
        gbc.writeMem(0xeb0e, { 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xac03, gbc.sp());
        EXPECT(0xdd31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xdd30));
        EXPECT(0xe5, gbc.readMem(0xeb0e));
        // 12 014A
        gbc.setState(0x9cc4, 0x4bc3, 0xd6c0, 0x4acb, 0xd416, 0x140d, 0x0, 0x1);
        gbc.writeMem(0x9cc4, { 0x12 });
        gbc.writeMem(0xd416, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4bc3, gbc.sp());
        EXPECT(0x9cc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9cc4));
        EXPECT(0xd6, gbc.readMem(0xd416));
        // 12 014B
        gbc.setState(0xc5d0, 0x1e08, 0x4600, 0xf05a, 0xd84f, 0xb35d, 0x0, 0x1);
        gbc.writeMem(0xc5d0, { 0x12 });
        gbc.writeMem(0xd84f, { 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1e08, gbc.sp());
        EXPECT(0xc5d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xc5d0));
        EXPECT(0x46, gbc.readMem(0xd84f));
        // 12 014E
        gbc.setState(0x5f2c, 0x2c25, 0xc9f0, 0x61b7, 0xdc5c, 0x8255, 0x1, 0x1);
        gbc.writeMem(0x5f2c, { 0x12 });
        gbc.writeMem(0xdc5c, { 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2c25, gbc.sp());
        EXPECT(0x5f2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xdc5c));
        // 12 0150
        gbc.setState(0x753c, 0xe080, 0x8500, 0x6b0, 0xec74, 0x20fd, 0x1, 0x0);
        gbc.writeMem(0x753c, { 0x12 });
        gbc.writeMem(0xec74, { 0x0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe080, gbc.sp());
        EXPECT(0x753d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xec74));
        // 12 0151
        gbc.setState(0xe259, 0xd865, 0x8a80, 0x6f91, 0xc7ac, 0x6d2b, 0x1, 0x1);
        gbc.writeMem(0xc7ac, { 0x0 });
        gbc.writeMem(0xe259, { 0x12 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd865, gbc.sp());
        EXPECT(0xe25a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc7ac));
        EXPECT(0x12, gbc.readMem(0xe259));
        // 12 0153
        gbc.setState(0x2870, 0xddda, 0x92d0, 0x9232, 0xf742, 0xe389, 0x1, 0x1);
        gbc.writeMem(0x2870, { 0x12 });
        gbc.writeMem(0xf742, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xddda, gbc.sp());
        EXPECT(0x2871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xf742));
        // 12 0154
        gbc.setState(0xa503, 0x1319, 0xdc90, 0x3100, 0xc30a, 0x62b6, 0x0, 0x1);
        gbc.writeMem(0xa503, { 0x12 });
        gbc.writeMem(0xc30a, { 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1319, gbc.sp());
        EXPECT(0xa504, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xa503));
        EXPECT(0xdc, gbc.readMem(0xc30a));
        // 12 0155
        gbc.setState(0xdc0a, 0x1fc3, 0xc070, 0xaa14, 0xce6e, 0x2317, 0x0, 0x0);
        gbc.writeMem(0xce6e, { 0x0 });
        gbc.writeMem(0xdc0a, { 0x12 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1fc3, gbc.sp());
        EXPECT(0xdc0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xce6e));
        EXPECT(0x12, gbc.readMem(0xdc0a));
        // 12 0159
        gbc.setState(0xe502, 0xff7b, 0x7280, 0x7a9c, 0xc813, 0xb745, 0x1, 0x1);
        gbc.writeMem(0xc813, { 0x0 });
        gbc.writeMem(0xe502, { 0x12 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xff7b, gbc.sp());
        EXPECT(0xe503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xc813));
        EXPECT(0x12, gbc.readMem(0xe502));
        // 12 015A
        gbc.setState(0x411b, 0x5d27, 0x7c10, 0xb421, 0xa7ea, 0x78aa, 0x1, 0x1);
        gbc.writeMem(0x411b, { 0x12 });
        gbc.writeMem(0xa7ea, { 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5d27, gbc.sp());
        EXPECT(0x411c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xa7ea));
        // 12 015B
        gbc.setState(0x87be, 0xce94, 0xbfa0, 0x100f, 0xabdd, 0x8abf, 0x1, 0x1);
        gbc.writeMem(0x87be, { 0x12 });
        gbc.writeMem(0xabdd, { 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xce94, gbc.sp());
        EXPECT(0x87bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x87be));
        EXPECT(0xbf, gbc.readMem(0xabdd));
        // 12 015C
        gbc.setState(0x603b, 0xafe4, 0xf250, 0x4cb8, 0x889f, 0x1663, 0x1, 0x1);
        gbc.writeMem(0x603b, { 0x12 });
        gbc.writeMem(0x889f, { 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xafe4, gbc.sp());
        EXPECT(0x603c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0x889f));
        // 12 015D
        gbc.setState(0xa430, 0xfba2, 0xe530, 0xc7c7, 0xf8bf, 0x9371, 0x0, 0x0);
        gbc.writeMem(0xa430, { 0x12 });
        gbc.writeMem(0xf8bf, { 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xfba2, gbc.sp());
        EXPECT(0xa431, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xa430));
        EXPECT(0xe5, gbc.readMem(0xf8bf));
        // 12 015F
        gbc.setState(0x398f, 0x8578, 0x2390, 0xc4ba, 0xf20a, 0xf479, 0x1, 0x0);
        gbc.writeMem(0x398f, { 0x12 });
        gbc.writeMem(0xf20a, { 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8578, gbc.sp());
        EXPECT(0x3990, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xf20a));
        // 12 0160
        gbc.setState(0x682d, 0x9674, 0x3a10, 0x75a, 0xd687, 0xebda, 0x0, 0x0);
        gbc.writeMem(0x682d, { 0x12 });
        gbc.writeMem(0xd687, { 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9674, gbc.sp());
        EXPECT(0x682e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xd687));
        // 12 0161
        gbc.setState(0x2e34, 0x1003, 0x7ae0, 0xc7a3, 0xfcc5, 0x5b6, 0x1, 0x0);
        gbc.writeMem(0x2e34, { 0x12 });
        gbc.writeMem(0xfcc5, { 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1003, gbc.sp());
        EXPECT(0x2e35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xfcc5));
        // 12 0162
        gbc.setState(0xe75, 0xd1fc, 0xc7a0, 0x6de7, 0xeaa6, 0xe94b, 0x0, 0x0);
        gbc.writeMem(0xe75, { 0x12 });
        gbc.writeMem(0xeaa6, { 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd1fc, gbc.sp());
        EXPECT(0xe76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xeaa6));
        // 12 0166
        gbc.setState(0x4e21, 0x22, 0x730, 0x8536, 0xcc33, 0x2148, 0x0, 0x1);
        gbc.writeMem(0x4e21, { 0x12 });
        gbc.writeMem(0xcc33, { 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x22, gbc.sp());
        EXPECT(0x4e22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xcc33));
        // 12 0168
        gbc.setState(0x336, 0xc8da, 0xf5a0, 0xae01, 0xb0ad, 0xa7a7, 0x1, 0x0);
        gbc.writeMem(0x336, { 0x12 });
        gbc.writeMem(0xb0ad, { 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc8da, gbc.sp());
        EXPECT(0x337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xb0ad));
        // 12 0169
        gbc.setState(0x4df1, 0x4bce, 0xa3d0, 0x6b57, 0xd748, 0x31a3, 0x1, 0x1);
        gbc.writeMem(0x4df1, { 0x12 });
        gbc.writeMem(0xd748, { 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x4bce, gbc.sp());
        EXPECT(0x4df2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd748));
        // 12 016D
        gbc.setState(0x1c16, 0x7055, 0x7930, 0x282, 0xa845, 0x945a, 0x0, 0x1);
        gbc.writeMem(0x1c16, { 0x12 });
        gbc.writeMem(0xa845, { 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7055, gbc.sp());
        EXPECT(0x1c17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa845));
        // 12 016E
        gbc.setState(0xbc7a, 0x8e1c, 0x3d60, 0xc079, 0x9d14, 0x8444, 0x0, 0x1);
        gbc.writeMem(0x9d14, { 0x0 });
        gbc.writeMem(0xbc7a, { 0x12 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8e1c, gbc.sp());
        EXPECT(0xbc7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0x9d14));
        EXPECT(0x12, gbc.readMem(0xbc7a));
        // 12 016F
        gbc.setState(0x94a7, 0x8422, 0x4e50, 0xf7cd, 0xf0c3, 0x69eb, 0x1, 0x1);
        gbc.writeMem(0x94a7, { 0x12 });
        gbc.writeMem(0xf0c3, { 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8422, gbc.sp());
        EXPECT(0x94a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x94a7));
        EXPECT(0x4e, gbc.readMem(0xf0c3));
        // 12 0174
        gbc.setState(0x481a, 0xbae2, 0x1c80, 0xd2a0, 0x923b, 0x6e66, 0x0, 0x1);
        gbc.writeMem(0x481a, { 0x12 });
        gbc.writeMem(0x923b, { 0x0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xbae2, gbc.sp());
        EXPECT(0x481b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x923b));
        // 12 0175
        gbc.setState(0xe43c, 0x4225, 0x3c60, 0x3004, 0xe00b, 0xcdc1, 0x1, 0x1);
        gbc.writeMem(0xe00b, { 0x0 });
        gbc.writeMem(0xe43c, { 0x12 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4225, gbc.sp());
        EXPECT(0xe43d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe00b));
        EXPECT(0x12, gbc.readMem(0xe43c));
        // 12 0176
        gbc.setState(0x4666, 0x5d1c, 0x39f0, 0x599d, 0xd684, 0x3050, 0x1, 0x1);
        gbc.writeMem(0x4666, { 0x12 });
        gbc.writeMem(0xd684, { 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5d1c, gbc.sp());
        EXPECT(0x4667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xd684));
        // 12 0177
        gbc.setState(0xb054, 0x5bcc, 0xaff0, 0xf7f5, 0x99af, 0xfdd2, 0x1, 0x1);
        gbc.writeMem(0x99af, { 0x0 });
        gbc.writeMem(0xb054, { 0x12 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5bcc, gbc.sp());
        EXPECT(0xb055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0x99af));
        EXPECT(0x12, gbc.readMem(0xb054));
        // 12 0178
        gbc.setState(0xd8e3, 0x740b, 0xa100, 0x395c, 0xf09d, 0xce7d, 0x0, 0x0);
        gbc.writeMem(0xd8e3, { 0x12 });
        gbc.writeMem(0xf09d, { 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x740b, gbc.sp());
        EXPECT(0xd8e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xd8e3));
        EXPECT(0xa1, gbc.readMem(0xf09d));
        // 12 017A
        gbc.setState(0xed48, 0xe770, 0xc840, 0xb7c2, 0xb066, 0xbfc0, 0x0, 0x0);
        gbc.writeMem(0xb066, { 0x0 });
        gbc.writeMem(0xed48, { 0x12 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe770, gbc.sp());
        EXPECT(0xed49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb066));
        EXPECT(0x12, gbc.readMem(0xed48));
        // 12 017B
        gbc.setState(0xc0a3, 0x6124, 0xb300, 0xc9e0, 0xc2ac, 0x316e, 0x0, 0x0);
        gbc.writeMem(0xc0a3, { 0x12 });
        gbc.writeMem(0xc2ac, { 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6124, gbc.sp());
        EXPECT(0xc0a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xc0a3));
        EXPECT(0xb3, gbc.readMem(0xc2ac));
        // 12 017C
        gbc.setState(0x5bca, 0x27e5, 0xba40, 0xecf5, 0xc5d4, 0x5b38, 0x0, 0x0);
        gbc.writeMem(0x5bca, { 0x12 });
        gbc.writeMem(0xc5d4, { 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x27e5, gbc.sp());
        EXPECT(0x5bcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xc5d4));
        // 12 0184
        gbc.setState(0xb2f9, 0xbaf5, 0xe50, 0x1230, 0x952a, 0x5961, 0x1, 0x1);
        gbc.writeMem(0x952a, { 0x0 });
        gbc.writeMem(0xb2f9, { 0x12 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xbaf5, gbc.sp());
        EXPECT(0xb2fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x952a));
        EXPECT(0x12, gbc.readMem(0xb2f9));
        // 12 0185
        gbc.setState(0x212b, 0x4b74, 0xb060, 0xae51, 0xc37f, 0xeef8, 0x0, 0x1);
        gbc.writeMem(0x212b, { 0x12 });
        gbc.writeMem(0xc37f, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4b74, gbc.sp());
        EXPECT(0x212c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc37f));
        // 12 0186
        gbc.setState(0x24ee, 0xc620, 0x5740, 0x989f, 0xb4e2, 0xf369, 0x1, 0x0);
        gbc.writeMem(0x24ee, { 0x12 });
        gbc.writeMem(0xb4e2, { 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc620, gbc.sp());
        EXPECT(0x24ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb4e2));
        // 12 0187
        gbc.setState(0x2a37, 0x8f70, 0x2af0, 0x6ad5, 0xb6d4, 0x796f, 0x1, 0x1);
        gbc.writeMem(0x2a37, { 0x12 });
        gbc.writeMem(0xb6d4, { 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8f70, gbc.sp());
        EXPECT(0x2a38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xb6d4));
        // 12 0188
        gbc.setState(0xadeb, 0x4863, 0xe10, 0x2173, 0x9bd2, 0xd96c, 0x1, 0x0);
        gbc.writeMem(0x9bd2, { 0x0 });
        gbc.writeMem(0xadeb, { 0x12 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4863, gbc.sp());
        EXPECT(0xadec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9bd2));
        EXPECT(0x12, gbc.readMem(0xadeb));
        // 12 018F
        gbc.setState(0xb27b, 0x493b, 0x4dc0, 0x969d, 0x9daf, 0xfa9f, 0x0, 0x1);
        gbc.writeMem(0x9daf, { 0x0 });
        gbc.writeMem(0xb27b, { 0x12 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x493b, gbc.sp());
        EXPECT(0xb27c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9daf));
        EXPECT(0x12, gbc.readMem(0xb27b));
        // 12 0193
        gbc.setState(0xd7d, 0x15f7, 0x2960, 0x4a1, 0xc239, 0xae8a, 0x1, 0x0);
        gbc.writeMem(0xd7d, { 0x12 });
        gbc.writeMem(0xc239, { 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x15f7, gbc.sp());
        EXPECT(0xd7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc239));
        // 12 0194
        gbc.setState(0x7f90, 0x534e, 0x7ed0, 0x2d62, 0xaf88, 0x3334, 0x1, 0x0);
        gbc.writeMem(0x7f90, { 0x12 });
        gbc.writeMem(0xaf88, { 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x534e, gbc.sp());
        EXPECT(0x7f91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xaf88));
        // 12 0195
        gbc.setState(0xdc7f, 0x59c2, 0xdc50, 0x2ac5, 0xa298, 0xa512, 0x0, 0x0);
        gbc.writeMem(0xa298, { 0x0 });
        gbc.writeMem(0xdc7f, { 0x12 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x59c2, gbc.sp());
        EXPECT(0xdc80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xa298));
        EXPECT(0x12, gbc.readMem(0xdc7f));
        // 12 0196
        gbc.setState(0x6359, 0x2e5d, 0x5820, 0xfd24, 0xcd77, 0xdd0f, 0x1, 0x1);
        gbc.writeMem(0x6359, { 0x12 });
        gbc.writeMem(0xcd77, { 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2e5d, gbc.sp());
        EXPECT(0x635a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xcd77));
        // 12 0199
        gbc.setState(0xebe6, 0x9a2f, 0x68d0, 0xfa23, 0xb5af, 0xc4c5, 0x1, 0x0);
        gbc.writeMem(0xb5af, { 0x0 });
        gbc.writeMem(0xebe6, { 0x12 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9a2f, gbc.sp());
        EXPECT(0xebe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb5af));
        EXPECT(0x12, gbc.readMem(0xebe6));
        // 12 019A
        gbc.setState(0x74bc, 0x8b6f, 0x2a0, 0x50d, 0x9e04, 0x6383, 0x1, 0x0);
        gbc.writeMem(0x74bc, { 0x12 });
        gbc.writeMem(0x9e04, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8b6f, gbc.sp());
        EXPECT(0x74bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0x9e04));
        // 12 019D
        gbc.setState(0x5aca, 0xe036, 0x9af0, 0xb87a, 0xa60c, 0x9864, 0x0, 0x0);
        gbc.writeMem(0x5aca, { 0x12 });
        gbc.writeMem(0xa60c, { 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe036, gbc.sp());
        EXPECT(0x5acb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa60c));
        // 12 019E
        gbc.setState(0x7a7d, 0xcfd7, 0xd0e0, 0xda30, 0xc516, 0x8966, 0x1, 0x0);
        gbc.writeMem(0x7a7d, { 0x12 });
        gbc.writeMem(0xc516, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xcfd7, gbc.sp());
        EXPECT(0x7a7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc516));
        // 12 019F
        gbc.setState(0xa7d1, 0xfae0, 0x3ac0, 0xbd1f, 0x9666, 0x2f57, 0x0, 0x1);
        gbc.writeMem(0x9666, { 0x0 });
        gbc.writeMem(0xa7d1, { 0x12 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfae0, gbc.sp());
        EXPECT(0xa7d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0x9666));
        EXPECT(0x12, gbc.readMem(0xa7d1));
        // 12 01A0
        gbc.setState(0x5a2b, 0xffd7, 0x5620, 0xf711, 0xb000, 0xe557, 0x0, 0x1);
        gbc.writeMem(0x5a2b, { 0x12 });
        gbc.writeMem(0xb000, { 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xffd7, gbc.sp());
        EXPECT(0x5a2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb000));
        // 12 01A2
        gbc.setState(0xdcd8, 0x6e31, 0xdb0, 0x590e, 0xfb49, 0xc755, 0x0, 0x0);
        gbc.writeMem(0xdcd8, { 0x12 });
        gbc.writeMem(0xfb49, { 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6e31, gbc.sp());
        EXPECT(0xdcd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xdcd8));
        EXPECT(0xd, gbc.readMem(0xfb49));
        // 12 01A5
        gbc.setState(0x9262, 0x2473, 0x7470, 0xa0af, 0xf9fb, 0x9702, 0x0, 0x0);
        gbc.writeMem(0x9262, { 0x12 });
        gbc.writeMem(0xf9fb, { 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2473, gbc.sp());
        EXPECT(0x9263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9262));
        EXPECT(0x74, gbc.readMem(0xf9fb));
        // 12 01A7
        gbc.setState(0x9030, 0x4e67, 0xaa00, 0x1d23, 0xd399, 0xb9db, 0x1, 0x0);
        gbc.writeMem(0x9030, { 0x12 });
        gbc.writeMem(0xd399, { 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4e67, gbc.sp());
        EXPECT(0x9031, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9030));
        EXPECT(0xaa, gbc.readMem(0xd399));
        // 12 01A8
        gbc.setState(0x1cdd, 0xf3d1, 0x6280, 0x13bc, 0x84e7, 0x3672, 0x1, 0x1);
        gbc.writeMem(0x1cdd, { 0x12 });
        gbc.writeMem(0x84e7, { 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf3d1, gbc.sp());
        EXPECT(0x1cde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0x84e7));
        // 12 01A9
        gbc.setState(0xec90, 0x6a4c, 0xb180, 0xde0b, 0xd7ed, 0x373e, 0x1, 0x1);
        gbc.writeMem(0xd7ed, { 0x0 });
        gbc.writeMem(0xec90, { 0x12 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6a4c, gbc.sp());
        EXPECT(0xec91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xd7ed));
        EXPECT(0x12, gbc.readMem(0xec90));
        // 12 01AB
        gbc.setState(0xcb27, 0xb467, 0xfec0, 0xb039, 0xfa88, 0x7c3, 0x0, 0x0);
        gbc.writeMem(0xcb27, { 0x12 });
        gbc.writeMem(0xfa88, { 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb467, gbc.sp());
        EXPECT(0xcb28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xcb27));
        EXPECT(0xfe, gbc.readMem(0xfa88));
        // 12 01AD
        gbc.setState(0x83ce, 0x4d4, 0xec0, 0xadc5, 0x84e1, 0xd6d2, 0x1, 0x0);
        gbc.writeMem(0x83ce, { 0x12 });
        gbc.writeMem(0x84e1, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4d4, gbc.sp());
        EXPECT(0x83cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x83ce));
        EXPECT(0xe, gbc.readMem(0x84e1));
        // 12 01AE
        gbc.setState(0x2345, 0x2efa, 0x1c60, 0x6321, 0xb2d1, 0x48f9, 0x0, 0x0);
        gbc.writeMem(0x2345, { 0x12 });
        gbc.writeMem(0xb2d1, { 0x0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2efa, gbc.sp());
        EXPECT(0x2346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xb2d1));
        // 12 01AF
        gbc.setState(0xc6f4, 0x95bf, 0xc8b0, 0x96c6, 0xb589, 0x11bc, 0x1, 0x0);
        gbc.writeMem(0xb589, { 0x0 });
        gbc.writeMem(0xc6f4, { 0x12 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x95bf, gbc.sp());
        EXPECT(0xc6f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb589));
        EXPECT(0x12, gbc.readMem(0xc6f4));
        // 12 01B1
        gbc.setState(0x26f3, 0xbfa4, 0xeba0, 0x5ea, 0xb3a1, 0x475d, 0x1, 0x0);
        gbc.writeMem(0x26f3, { 0x12 });
        gbc.writeMem(0xb3a1, { 0x0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xbfa4, gbc.sp());
        EXPECT(0x26f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xb3a1));
        // 12 01B3
        gbc.setState(0xe60, 0x4ccb, 0xb8e0, 0x8c64, 0x86b9, 0x5533, 0x1, 0x0);
        gbc.writeMem(0xe60, { 0x12 });
        gbc.writeMem(0x86b9, { 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4ccb, gbc.sp());
        EXPECT(0xe61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0x86b9));
        // 12 01B5
        gbc.setState(0xe31d, 0x724c, 0x6960, 0xfa8e, 0xec39, 0x58d5, 0x1, 0x1);
        gbc.writeMem(0xe31d, { 0x12 });
        gbc.writeMem(0xec39, { 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x724c, gbc.sp());
        EXPECT(0xe31e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xe31d));
        EXPECT(0x69, gbc.readMem(0xec39));
        // 12 01B6
        gbc.setState(0xc086, 0x76f6, 0xbac0, 0xaeca, 0x9ca4, 0xf7f6, 0x1, 0x1);
        gbc.writeMem(0x9ca4, { 0x0 });
        gbc.writeMem(0xc086, { 0x12 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x76f6, gbc.sp());
        EXPECT(0xc087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0x9ca4));
        EXPECT(0x12, gbc.readMem(0xc086));
        // 12 01B9
        gbc.setState(0xe477, 0xc684, 0x7a50, 0x47df, 0xbb73, 0xb5f8, 0x1, 0x1);
        gbc.writeMem(0xbb73, { 0x0 });
        gbc.writeMem(0xe477, { 0x12 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xc684, gbc.sp());
        EXPECT(0xe478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xbb73));
        EXPECT(0x12, gbc.readMem(0xe477));
        // 12 01BA
        gbc.setState(0xd5f8, 0x4df6, 0xc640, 0xa215, 0xa4fd, 0x1b28, 0x0, 0x0);
        gbc.writeMem(0xa4fd, { 0x0 });
        gbc.writeMem(0xd5f8, { 0x12 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4df6, gbc.sp());
        EXPECT(0xd5f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xa4fd));
        EXPECT(0x12, gbc.readMem(0xd5f8));
        // 12 01BB
        gbc.setState(0xe91, 0x937f, 0x43f0, 0xf111, 0xb9be, 0x86a4, 0x0, 0x1);
        gbc.writeMem(0xe91, { 0x12 });
        gbc.writeMem(0xb9be, { 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x937f, gbc.sp());
        EXPECT(0xe92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb9be));
        // 12 01BD
        gbc.setState(0x51b9, 0xa992, 0xbf40, 0x94a6, 0xefaf, 0xd277, 0x1, 0x0);
        gbc.writeMem(0x51b9, { 0x12 });
        gbc.writeMem(0xefaf, { 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa992, gbc.sp());
        EXPECT(0x51ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xefaf));
        // 12 01BE
        gbc.setState(0xbf8b, 0x7964, 0x3070, 0xcb06, 0xce70, 0x6d2e, 0x0, 0x1);
        gbc.writeMem(0xbf8b, { 0x12 });
        gbc.writeMem(0xce70, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7964, gbc.sp());
        EXPECT(0xbf8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xbf8b));
        EXPECT(0x30, gbc.readMem(0xce70));
        // 12 01BF
        gbc.setState(0xede4, 0x8ec5, 0x44c0, 0xff17, 0xa15c, 0xb6a, 0x1, 0x1);
        gbc.writeMem(0xa15c, { 0x0 });
        gbc.writeMem(0xede4, { 0x12 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8ec5, gbc.sp());
        EXPECT(0xede5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa15c));
        EXPECT(0x12, gbc.readMem(0xede4));
        // 12 01C2
        gbc.setState(0x847, 0x8c9f, 0x7f50, 0x90d8, 0xc0a6, 0x6c08, 0x0, 0x1);
        gbc.writeMem(0x847, { 0x12 });
        gbc.writeMem(0xc0a6, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8c9f, gbc.sp());
        EXPECT(0x848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xc0a6));
        // 12 01C3
        gbc.setState(0x58d, 0xfeff, 0x4720, 0xf2bb, 0xda46, 0xa5ad, 0x1, 0x0);
        gbc.writeMem(0x58d, { 0x12 });
        gbc.writeMem(0xda46, { 0x0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xfeff, gbc.sp());
        EXPECT(0x58e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xda46));
        // 12 01C4
        gbc.setState(0xdb8a, 0x838e, 0x11e0, 0xb9c8, 0xf27e, 0x8e5f, 0x0, 0x0);
        gbc.writeMem(0xdb8a, { 0x12 });
        gbc.writeMem(0xf27e, { 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x838e, gbc.sp());
        EXPECT(0xdb8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xdb8a));
        EXPECT(0x11, gbc.readMem(0xf27e));
        // 12 01C7
        gbc.setState(0xc98f, 0x2df, 0xa4e0, 0xb5e7, 0xf530, 0x4243, 0x0, 0x1);
        gbc.writeMem(0xc98f, { 0x12 });
        gbc.writeMem(0xf530, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2df, gbc.sp());
        EXPECT(0xc990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xc98f));
        EXPECT(0xa4, gbc.readMem(0xf530));
        // 12 01C8
        gbc.setState(0x8a11, 0x60ca, 0xfd10, 0x89e7, 0x8bf9, 0x731c, 0x0, 0x1);
        gbc.writeMem(0x8a11, { 0x12 });
        gbc.writeMem(0x8bf9, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x60ca, gbc.sp());
        EXPECT(0x8a12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x8a11));
        EXPECT(0xfd, gbc.readMem(0x8bf9));
        // 12 01CA
        gbc.setState(0x5735, 0xdfcc, 0x71a0, 0x7a9b, 0xea4d, 0x31a9, 0x1, 0x1);
        gbc.writeMem(0x5735, { 0x12 });
        gbc.writeMem(0xea4d, { 0x0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xdfcc, gbc.sp());
        EXPECT(0x5736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xea4d));
        // 12 01CB
        gbc.setState(0x5a3e, 0x84d0, 0xed0, 0xfc88, 0x8c22, 0x3350, 0x0, 0x0);
        gbc.writeMem(0x5a3e, { 0x12 });
        gbc.writeMem(0x8c22, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x84d0, gbc.sp());
        EXPECT(0x5a3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8c22));
        // 12 01CE
        gbc.setState(0xd6e8, 0xb687, 0x9c60, 0x97d6, 0x83cd, 0x3386, 0x0, 0x0);
        gbc.writeMem(0x83cd, { 0x0 });
        gbc.writeMem(0xd6e8, { 0x12 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb687, gbc.sp());
        EXPECT(0xd6e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x83cd));
        EXPECT(0x12, gbc.readMem(0xd6e8));
        // 12 01D0
        gbc.setState(0x3054, 0xea44, 0xdc90, 0xd999, 0xda91, 0x16b8, 0x0, 0x0);
        gbc.writeMem(0x3054, { 0x12 });
        gbc.writeMem(0xda91, { 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xea44, gbc.sp());
        EXPECT(0x3055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xda91));
        // 12 01D2
        gbc.setState(0x8fa3, 0x195e, 0xc000, 0x66f8, 0xe8a2, 0xadc8, 0x1, 0x0);
        gbc.writeMem(0x8fa3, { 0x12 });
        gbc.writeMem(0xe8a2, { 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x195e, gbc.sp());
        EXPECT(0x8fa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x8fa3));
        EXPECT(0xc0, gbc.readMem(0xe8a2));
        // 12 01D3
        gbc.setState(0x6224, 0x9f21, 0xa10, 0x13cd, 0xa2dc, 0xee2d, 0x0, 0x0);
        gbc.writeMem(0x6224, { 0x12 });
        gbc.writeMem(0xa2dc, { 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9f21, gbc.sp());
        EXPECT(0x6225, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa2dc));
        // 12 01D9
        gbc.setState(0x829f, 0xb538, 0x3280, 0x9985, 0xe3c0, 0x38af, 0x1, 0x1);
        gbc.writeMem(0x829f, { 0x12 });
        gbc.writeMem(0xe3c0, { 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb538, gbc.sp());
        EXPECT(0x82a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x829f));
        EXPECT(0x32, gbc.readMem(0xe3c0));
        // 12 01DD
        gbc.setState(0xee3e, 0xf925, 0xbe10, 0x4364, 0xb880, 0x8e2f, 0x0, 0x0);
        gbc.writeMem(0xb880, { 0x0 });
        gbc.writeMem(0xee3e, { 0x12 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf925, gbc.sp());
        EXPECT(0xee3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xb880));
        EXPECT(0x12, gbc.readMem(0xee3e));
        // 12 01E3
        gbc.setState(0xe1c8, 0x2a3a, 0xe150, 0x1ca2, 0x9443, 0xecfc, 0x0, 0x0);
        gbc.writeMem(0x9443, { 0x0 });
        gbc.writeMem(0xe1c8, { 0x12 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2a3a, gbc.sp());
        EXPECT(0xe1c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9443));
        EXPECT(0x12, gbc.readMem(0xe1c8));
        // 12 01E4
        gbc.setState(0x6591, 0xa213, 0x22e0, 0xb501, 0xd308, 0xb1f0, 0x1, 0x0);
        gbc.writeMem(0x6591, { 0x12 });
        gbc.writeMem(0xd308, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa213, gbc.sp());
        EXPECT(0x6592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xd308));
        // 12 01E7
        gbc.setState(0xaf08, 0x6426, 0xb850, 0x2fd3, 0xe255, 0xccf6, 0x0, 0x0);
        gbc.writeMem(0xaf08, { 0x12 });
        gbc.writeMem(0xe255, { 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x6426, gbc.sp());
        EXPECT(0xaf09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xaf08));
        EXPECT(0xb8, gbc.readMem(0xe255));
        // 12 01E8
        gbc.setState(0x314f, 0xad0c, 0x9310, 0x1939, 0x8a92, 0x972d, 0x1, 0x1);
        gbc.writeMem(0x314f, { 0x12 });
        gbc.writeMem(0x8a92, { 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xad0c, gbc.sp());
        EXPECT(0x3150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8a92));
        // 12 01E9
        gbc.setState(0x25c0, 0x4250, 0xfb90, 0x4b72, 0xb881, 0xdb1d, 0x1, 0x0);
        gbc.writeMem(0x25c0, { 0x12 });
        gbc.writeMem(0xb881, { 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4250, gbc.sp());
        EXPECT(0x25c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xb881));
        // 12 01EA
        gbc.setState(0xc07, 0xd91b, 0x6f10, 0x3362, 0xbf98, 0x4794, 0x0, 0x0);
        gbc.writeMem(0xc07, { 0x12 });
        gbc.writeMem(0xbf98, { 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd91b, gbc.sp());
        EXPECT(0xc08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xbf98));
        // 12 01EB
        gbc.setState(0xd10a, 0xc9e3, 0x2f80, 0xc0b, 0xe91e, 0x3fa6, 0x1, 0x1);
        gbc.writeMem(0xd10a, { 0x12 });
        gbc.writeMem(0xe91e, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc9e3, gbc.sp());
        EXPECT(0xd10b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xd10a));
        EXPECT(0x2f, gbc.readMem(0xe91e));
        // 12 01ED
        gbc.setState(0x5e53, 0x4549, 0xdef0, 0xc11, 0xf59f, 0x5fc1, 0x0, 0x1);
        gbc.writeMem(0x5e53, { 0x12 });
        gbc.writeMem(0xf59f, { 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4549, gbc.sp());
        EXPECT(0x5e54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xf59f));
        // 12 01F2
        gbc.setState(0x4385, 0x7b8d, 0x7760, 0x774d, 0xfd3e, 0xebf5, 0x1, 0x1);
        gbc.writeMem(0x4385, { 0x12 });
        gbc.writeMem(0xfd3e, { 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7b8d, gbc.sp());
        EXPECT(0x4386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xfd3e));
        // 12 01F4
        gbc.setState(0x9ee9, 0xf5ef, 0x3280, 0x7f9c, 0xa70d, 0xdc61, 0x1, 0x0);
        gbc.writeMem(0x9ee9, { 0x12 });
        gbc.writeMem(0xa70d, { 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf5ef, gbc.sp());
        EXPECT(0x9eea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9ee9));
        EXPECT(0x32, gbc.readMem(0xa70d));
        // 12 01F6
        gbc.setState(0x9300, 0x4ce1, 0x44a0, 0xa9cb, 0x85f5, 0x5ccf, 0x1, 0x0);
        gbc.writeMem(0x85f5, { 0x0 });
        gbc.writeMem(0x9300, { 0x12 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4ce1, gbc.sp());
        EXPECT(0x9301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x85f5));
        EXPECT(0x12, gbc.readMem(0x9300));
        // 12 01F7
        gbc.setState(0x4e5c, 0x28da, 0xd730, 0x65e3, 0xc3a8, 0xf412, 0x0, 0x1);
        gbc.writeMem(0x4e5c, { 0x12 });
        gbc.writeMem(0xc3a8, { 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x28da, gbc.sp());
        EXPECT(0x4e5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xc3a8));
        // 12 01F9
        gbc.setState(0x3914, 0xd8ad, 0xc3c0, 0xb336, 0xbd15, 0x6626, 0x0, 0x0);
        gbc.writeMem(0x3914, { 0x12 });
        gbc.writeMem(0xbd15, { 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd8ad, gbc.sp());
        EXPECT(0x3915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xbd15));
        // 12 01FA
        gbc.setState(0xcf7b, 0x6cc4, 0x1040, 0xe506, 0xe933, 0xd2bc, 0x1, 0x0);
        gbc.writeMem(0xcf7b, { 0x12 });
        gbc.writeMem(0xe933, { 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6cc4, gbc.sp());
        EXPECT(0xcf7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xcf7b));
        EXPECT(0x10, gbc.readMem(0xe933));
        // 12 01FB
        gbc.setState(0x9542, 0x6f32, 0x2e40, 0xf772, 0xcd4c, 0x3134, 0x1, 0x1);
        gbc.writeMem(0x9542, { 0x12 });
        gbc.writeMem(0xcd4c, { 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6f32, gbc.sp());
        EXPECT(0x9543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9542));
        EXPECT(0x2e, gbc.readMem(0xcd4c));
        // 12 01FD
        gbc.setState(0x2942, 0x713a, 0x4200, 0x2364, 0xa212, 0xed03, 0x0, 0x1);
        gbc.writeMem(0x2942, { 0x12 });
        gbc.writeMem(0xa212, { 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x713a, gbc.sp());
        EXPECT(0x2943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa212));
        // 12 01FF
        gbc.setState(0xa159, 0x7769, 0xa950, 0x5fff, 0xe114, 0xaf0c, 0x1, 0x1);
        gbc.writeMem(0xa159, { 0x12 });
        gbc.writeMem(0xe114, { 0x0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7769, gbc.sp());
        EXPECT(0xa15a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xa159));
        EXPECT(0xa9, gbc.readMem(0xe114));
        // 12 0204
        gbc.setState(0x53a9, 0x3ed, 0xa650, 0xaf1c, 0xb3c2, 0x1fa3, 0x1, 0x1);
        gbc.writeMem(0x53a9, { 0x12 });
        gbc.writeMem(0xb3c2, { 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3ed, gbc.sp());
        EXPECT(0x53aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb3c2));
        // 12 0205
        gbc.setState(0x8d95, 0xb7b4, 0x5b10, 0x3725, 0xc3b1, 0xda91, 0x1, 0x1);
        gbc.writeMem(0x8d95, { 0x12 });
        gbc.writeMem(0xc3b1, { 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb7b4, gbc.sp());
        EXPECT(0x8d96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x8d95));
        EXPECT(0x5b, gbc.readMem(0xc3b1));
        // 12 0208
        gbc.setState(0xb9ea, 0xf179, 0xe950, 0x2e26, 0xdf00, 0x643d, 0x1, 0x1);
        gbc.writeMem(0xb9ea, { 0x12 });
        gbc.writeMem(0xdf00, { 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf179, gbc.sp());
        EXPECT(0xb9eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xb9ea));
        EXPECT(0xe9, gbc.readMem(0xdf00));
        // 12 020C
        gbc.setState(0x84a1, 0x39e4, 0x2d40, 0x430e, 0xb775, 0x5d79, 0x1, 0x1);
        gbc.writeMem(0x84a1, { 0x12 });
        gbc.writeMem(0xb775, { 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x39e4, gbc.sp());
        EXPECT(0x84a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x84a1));
        EXPECT(0x2d, gbc.readMem(0xb775));
        // 12 020E
        gbc.setState(0x7db0, 0xdd20, 0x6a50, 0xfcf0, 0xd3e6, 0xdc80, 0x1, 0x0);
        gbc.writeMem(0x7db0, { 0x12 });
        gbc.writeMem(0xd3e6, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xdd20, gbc.sp());
        EXPECT(0x7db1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd3e6));
        // 12 0210
        gbc.setState(0x94e7, 0x310c, 0x7f20, 0xf2c, 0x8a7d, 0x176, 0x0, 0x1);
        gbc.writeMem(0x8a7d, { 0x0 });
        gbc.writeMem(0x94e7, { 0x12 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x310c, gbc.sp());
        EXPECT(0x94e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0x8a7d));
        EXPECT(0x12, gbc.readMem(0x94e7));
        // 12 0211
        gbc.setState(0x1904, 0xb8e1, 0xd540, 0x5458, 0x89fa, 0xbdfc, 0x1, 0x1);
        gbc.writeMem(0x1904, { 0x12 });
        gbc.writeMem(0x89fa, { 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb8e1, gbc.sp());
        EXPECT(0x1905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x89fa));
        // 12 0213
        gbc.setState(0x9ac4, 0xb969, 0x2d70, 0xed7f, 0xad1e, 0x108e, 0x1, 0x1);
        gbc.writeMem(0x9ac4, { 0x12 });
        gbc.writeMem(0xad1e, { 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb969, gbc.sp());
        EXPECT(0x9ac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9ac4));
        EXPECT(0x2d, gbc.readMem(0xad1e));
        // 12 0215
        gbc.setState(0xed51, 0xbac8, 0x35c0, 0x9d7c, 0x9db6, 0x3b79, 0x1, 0x0);
        gbc.writeMem(0x9db6, { 0x0 });
        gbc.writeMem(0xed51, { 0x12 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xbac8, gbc.sp());
        EXPECT(0xed52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x9db6));
        EXPECT(0x12, gbc.readMem(0xed51));
        // 12 0217
        gbc.setState(0xcb12, 0x72a, 0x8070, 0x7562, 0x9e0d, 0xa5a8, 0x1, 0x0);
        gbc.writeMem(0x9e0d, { 0x0 });
        gbc.writeMem(0xcb12, { 0x12 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x72a, gbc.sp());
        EXPECT(0xcb13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9e0d));
        EXPECT(0x12, gbc.readMem(0xcb12));
        // 12 021B
        gbc.setState(0x2357, 0x9a5c, 0xb5d0, 0x59c1, 0xb2ec, 0x650d, 0x1, 0x0);
        gbc.writeMem(0x2357, { 0x12 });
        gbc.writeMem(0xb2ec, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9a5c, gbc.sp());
        EXPECT(0x2358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb2ec));
        // 12 021C
        gbc.setState(0x87bc, 0xbc58, 0x1700, 0x9fd6, 0xbd27, 0x7afd, 0x0, 0x1);
        gbc.writeMem(0x87bc, { 0x12 });
        gbc.writeMem(0xbd27, { 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xbc58, gbc.sp());
        EXPECT(0x87bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x87bc));
        EXPECT(0x17, gbc.readMem(0xbd27));
        // 12 021D
        gbc.setState(0x5564, 0x138a, 0xe5c0, 0x9e04, 0xb676, 0x501a, 0x1, 0x1);
        gbc.writeMem(0x5564, { 0x12 });
        gbc.writeMem(0xb676, { 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x138a, gbc.sp());
        EXPECT(0x5565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xb676));
        // 12 0224
        gbc.setState(0x5ce1, 0x1fb2, 0x1810, 0xe0ee, 0xfecf, 0x2c29, 0x1, 0x1);
        gbc.writeMem(0x5ce1, { 0x12 });
        gbc.writeMem(0xfecf, { 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1fb2, gbc.sp());
        EXPECT(0x5ce2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xfecf));
        // 12 0226
        gbc.setState(0xacde, 0x3017, 0x5cd0, 0xbc52, 0xb5f8, 0xf396, 0x1, 0x1);
        gbc.writeMem(0xacde, { 0x12 });
        gbc.writeMem(0xb5f8, { 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3017, gbc.sp());
        EXPECT(0xacdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xacde));
        EXPECT(0x5c, gbc.readMem(0xb5f8));
        // 12 0228
        gbc.setState(0x2fd7, 0x4ab9, 0x6150, 0xbaa4, 0xbb57, 0xde25, 0x0, 0x1);
        gbc.writeMem(0x2fd7, { 0x12 });
        gbc.writeMem(0xbb57, { 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4ab9, gbc.sp());
        EXPECT(0x2fd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xbb57));
        // 12 0229
        gbc.setState(0x5775, 0x2924, 0x6db0, 0xce9b, 0x9321, 0x5ba7, 0x1, 0x0);
        gbc.writeMem(0x5775, { 0x12 });
        gbc.writeMem(0x9321, { 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2924, gbc.sp());
        EXPECT(0x5776, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x9321));
        // 12 022A
        gbc.setState(0x8280, 0xc909, 0xa990, 0x7a3f, 0xc165, 0xd707, 0x1, 0x1);
        gbc.writeMem(0x8280, { 0x12 });
        gbc.writeMem(0xc165, { 0x0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc909, gbc.sp());
        EXPECT(0x8281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x8280));
        EXPECT(0xa9, gbc.readMem(0xc165));
        // 12 022B
        gbc.setState(0x6fff, 0xe511, 0x9530, 0xec93, 0xe426, 0xde71, 0x0, 0x1);
        gbc.writeMem(0x6fff, { 0x12 });
        gbc.writeMem(0xe426, { 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe511, gbc.sp());
        EXPECT(0x7000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe426));
        // 12 022C
        gbc.setState(0x815a, 0x69c8, 0x4650, 0xf259, 0xbb8c, 0xfea9, 0x1, 0x1);
        gbc.writeMem(0x815a, { 0x12 });
        gbc.writeMem(0xbb8c, { 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x69c8, gbc.sp());
        EXPECT(0x815b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x815a));
        EXPECT(0x46, gbc.readMem(0xbb8c));
        // 12 022D
        gbc.setState(0x18f2, 0x3595, 0x1340, 0xe788, 0xae40, 0xb124, 0x1, 0x0);
        gbc.writeMem(0x18f2, { 0x12 });
        gbc.writeMem(0xae40, { 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3595, gbc.sp());
        EXPECT(0x18f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xae40));
        // 12 0230
        gbc.setState(0x4d58, 0x8c09, 0x22a0, 0xd033, 0xccd8, 0xbeea, 0x0, 0x0);
        gbc.writeMem(0x4d58, { 0x12 });
        gbc.writeMem(0xccd8, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8c09, gbc.sp());
        EXPECT(0x4d59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xccd8));
        // 12 0231
        gbc.setState(0xc860, 0x2be9, 0xe3d0, 0xfe18, 0xeb10, 0x3743, 0x1, 0x0);
        gbc.writeMem(0xc860, { 0x12 });
        gbc.writeMem(0xeb10, { 0x0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2be9, gbc.sp());
        EXPECT(0xc861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xc860));
        EXPECT(0xe3, gbc.readMem(0xeb10));
        // 12 0232
        gbc.setState(0xb4a1, 0xcacd, 0xcf30, 0x7eea, 0x8e12, 0x9eba, 0x1, 0x0);
        gbc.writeMem(0x8e12, { 0x0 });
        gbc.writeMem(0xb4a1, { 0x12 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xcacd, gbc.sp());
        EXPECT(0xb4a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0x8e12));
        EXPECT(0x12, gbc.readMem(0xb4a1));
        // 12 0234
        gbc.setState(0xa9d5, 0xaff, 0x9b0, 0x6d52, 0xd17d, 0x4f0c, 0x0, 0x0);
        gbc.writeMem(0xa9d5, { 0x12 });
        gbc.writeMem(0xd17d, { 0x0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xaff, gbc.sp());
        EXPECT(0xa9d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xa9d5));
        EXPECT(0x9, gbc.readMem(0xd17d));
        // 12 0236
        gbc.setState(0x6045, 0x4fd4, 0x4250, 0x159d, 0x8ca3, 0xc9de, 0x0, 0x1);
        gbc.writeMem(0x6045, { 0x12 });
        gbc.writeMem(0x8ca3, { 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4fd4, gbc.sp());
        EXPECT(0x6046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8ca3));
        // 12 0238
        gbc.setState(0x2080, 0x61c5, 0x6470, 0x8836, 0xa89c, 0x79f0, 0x1, 0x1);
        gbc.writeMem(0x2080, { 0x12 });
        gbc.writeMem(0xa89c, { 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x61c5, gbc.sp());
        EXPECT(0x2081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa89c));
        // 12 0239
        gbc.setState(0x50d4, 0x4df5, 0xd510, 0xbdb2, 0x9e40, 0x4857, 0x0, 0x0);
        gbc.writeMem(0x50d4, { 0x12 });
        gbc.writeMem(0x9e40, { 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4df5, gbc.sp());
        EXPECT(0x50d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x9e40));
        // 12 023A
        gbc.setState(0x27cb, 0x330c, 0x71a0, 0x1e08, 0xb231, 0x6781, 0x0, 0x0);
        gbc.writeMem(0x27cb, { 0x12 });
        gbc.writeMem(0xb231, { 0x0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x330c, gbc.sp());
        EXPECT(0x27cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xb231));
        // 12 023B
        gbc.setState(0x877e, 0x7b60, 0xd6f0, 0x7e30, 0xa210, 0xb431, 0x1, 0x0);
        gbc.writeMem(0x877e, { 0x12 });
        gbc.writeMem(0xa210, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7b60, gbc.sp());
        EXPECT(0x877f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x877e));
        EXPECT(0xd6, gbc.readMem(0xa210));
        // 12 023E
        gbc.setState(0xde3a, 0x8180, 0x1fd0, 0xb75f, 0xc181, 0xbe26, 0x1, 0x0);
        gbc.writeMem(0xc181, { 0x0 });
        gbc.writeMem(0xde3a, { 0x12 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x8180, gbc.sp());
        EXPECT(0xde3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xc181));
        EXPECT(0x12, gbc.readMem(0xde3a));
        // 12 0240
        gbc.setState(0x5129, 0xfc53, 0x1f70, 0xa895, 0xd43d, 0xc1fe, 0x1, 0x0);
        gbc.writeMem(0x5129, { 0x12 });
        gbc.writeMem(0xd43d, { 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xfc53, gbc.sp());
        EXPECT(0x512a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xd43d));
        // 12 0241
        gbc.setState(0xbfcc, 0x741b, 0xe790, 0x4f14, 0x9048, 0xb0cf, 0x0, 0x1);
        gbc.writeMem(0x9048, { 0x0 });
        gbc.writeMem(0xbfcc, { 0x12 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x741b, gbc.sp());
        EXPECT(0xbfcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x9048));
        EXPECT(0x12, gbc.readMem(0xbfcc));
        // 12 0243
        gbc.setState(0xa854, 0x489d, 0xf1f0, 0xf979, 0x807a, 0xb259, 0x0, 0x1);
        gbc.writeMem(0x807a, { 0x0 });
        gbc.writeMem(0xa854, { 0x12 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x489d, gbc.sp());
        EXPECT(0xa855, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x807a));
        EXPECT(0x12, gbc.readMem(0xa854));
        // 12 0244
        gbc.setState(0xdb0d, 0x8a0a, 0x8b50, 0x306c, 0xbbcc, 0x4511, 0x0, 0x0);
        gbc.writeMem(0xbbcc, { 0x0 });
        gbc.writeMem(0xdb0d, { 0x12 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8a0a, gbc.sp());
        EXPECT(0xdb0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xbbcc));
        EXPECT(0x12, gbc.readMem(0xdb0d));
        // 12 0246
        gbc.setState(0xec84, 0x5e40, 0x670, 0x8d3, 0xe3dc, 0xb761, 0x1, 0x0);
        gbc.writeMem(0xe3dc, { 0x0 });
        gbc.writeMem(0xec84, { 0x12 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5e40, gbc.sp());
        EXPECT(0xec85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe3dc));
        EXPECT(0x12, gbc.readMem(0xec84));
        // 12 0248
        gbc.setState(0xa85b, 0x37e, 0x9f10, 0x4ad2, 0xe6eb, 0xf542, 0x1, 0x1);
        gbc.writeMem(0xa85b, { 0x12 });
        gbc.writeMem(0xe6eb, { 0x0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x37e, gbc.sp());
        EXPECT(0xa85c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xa85b));
        EXPECT(0x9f, gbc.readMem(0xe6eb));
        // 12 0249
        gbc.setState(0xc84c, 0x263, 0x9ae0, 0xd5bb, 0x92e1, 0x2b58, 0x0, 0x1);
        gbc.writeMem(0x92e1, { 0x0 });
        gbc.writeMem(0xc84c, { 0x12 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x263, gbc.sp());
        EXPECT(0xc84d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x92e1));
        EXPECT(0x12, gbc.readMem(0xc84c));
        // 12 024A
        gbc.setState(0x6cbf, 0x8d21, 0x9e20, 0x3edc, 0xdeac, 0x62f, 0x1, 0x1);
        gbc.writeMem(0x6cbf, { 0x12 });
        gbc.writeMem(0xdeac, { 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8d21, gbc.sp());
        EXPECT(0x6cc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xdeac));
        // 12 024B
        gbc.setState(0xa744, 0xa55d, 0xf4a0, 0x7fd, 0x8114, 0x902b, 0x1, 0x0);
        gbc.writeMem(0x8114, { 0x0 });
        gbc.writeMem(0xa744, { 0x12 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa55d, gbc.sp());
        EXPECT(0xa745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0x8114));
        EXPECT(0x12, gbc.readMem(0xa744));
        // 12 024C
        gbc.setState(0xbaa9, 0xec32, 0xa470, 0x67cc, 0xe338, 0xa7a2, 0x0, 0x1);
        gbc.writeMem(0xbaa9, { 0x12 });
        gbc.writeMem(0xe338, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xec32, gbc.sp());
        EXPECT(0xbaaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xbaa9));
        EXPECT(0xa4, gbc.readMem(0xe338));
        // 12 024D
        gbc.setState(0x45ef, 0xaac, 0x88d0, 0x6cb9, 0xe2d4, 0x2c52, 0x0, 0x1);
        gbc.writeMem(0x45ef, { 0x12 });
        gbc.writeMem(0xe2d4, { 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xaac, gbc.sp());
        EXPECT(0x45f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe2d4));
        // 12 0250
        gbc.setState(0xe0be, 0xa6a4, 0x590, 0xc550, 0xce68, 0xd507, 0x1, 0x1);
        gbc.writeMem(0xce68, { 0x0 });
        gbc.writeMem(0xe0be, { 0x12 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa6a4, gbc.sp());
        EXPECT(0xe0bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xce68));
        EXPECT(0x12, gbc.readMem(0xe0be));
        // 12 0251
        gbc.setState(0xbe7a, 0xc2e2, 0x8990, 0xa922, 0x82e4, 0xa87c, 0x1, 0x0);
        gbc.writeMem(0x82e4, { 0x0 });
        gbc.writeMem(0xbe7a, { 0x12 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc2e2, gbc.sp());
        EXPECT(0xbe7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x82e4));
        EXPECT(0x12, gbc.readMem(0xbe7a));
        // 12 0258
        gbc.setState(0xd30e, 0x3816, 0xf30, 0x1877, 0x8460, 0xff9f, 0x1, 0x1);
        gbc.writeMem(0x8460, { 0x0 });
        gbc.writeMem(0xd30e, { 0x12 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3816, gbc.sp());
        EXPECT(0xd30f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0x8460));
        EXPECT(0x12, gbc.readMem(0xd30e));
        // 12 025B
        gbc.setState(0x4872, 0xf8f0, 0xac50, 0x1d6b, 0xba4a, 0x2edb, 0x0, 0x1);
        gbc.writeMem(0x4872, { 0x12 });
        gbc.writeMem(0xba4a, { 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf8f0, gbc.sp());
        EXPECT(0x4873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xba4a));
        // 12 025C
        gbc.setState(0xc2ca, 0xa8d5, 0xbce0, 0xc5ca, 0xf30c, 0x4a81, 0x0, 0x0);
        gbc.writeMem(0xc2ca, { 0x12 });
        gbc.writeMem(0xf30c, { 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa8d5, gbc.sp());
        EXPECT(0xc2cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xc2ca));
        EXPECT(0xbc, gbc.readMem(0xf30c));
        // 12 025E
        gbc.setState(0xd5be, 0xb83f, 0xb920, 0x52ae, 0x9f45, 0xb2da, 0x0, 0x1);
        gbc.writeMem(0x9f45, { 0x0 });
        gbc.writeMem(0xd5be, { 0x12 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb83f, gbc.sp());
        EXPECT(0xd5bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9f45));
        EXPECT(0x12, gbc.readMem(0xd5be));
        // 12 025F
        gbc.setState(0x4cc7, 0x16a2, 0x4380, 0x1d19, 0xcca5, 0x261c, 0x1, 0x0);
        gbc.writeMem(0x4cc7, { 0x12 });
        gbc.writeMem(0xcca5, { 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x16a2, gbc.sp());
        EXPECT(0x4cc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xcca5));
        // 12 0264
        gbc.setState(0x154d, 0x167b, 0xab00, 0xca3f, 0x9884, 0x55f5, 0x0, 0x1);
        gbc.writeMem(0x154d, { 0x12 });
        gbc.writeMem(0x9884, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x167b, gbc.sp());
        EXPECT(0x154e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0x9884));
        // 12 0266
        gbc.setState(0xbe57, 0xc87a, 0xa110, 0xe2e, 0xd4ee, 0x9dd0, 0x0, 0x1);
        gbc.writeMem(0xbe57, { 0x12 });
        gbc.writeMem(0xd4ee, { 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc87a, gbc.sp());
        EXPECT(0xbe58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xbe57));
        EXPECT(0xa1, gbc.readMem(0xd4ee));
        // 12 0267
        gbc.setState(0x142e, 0xb53c, 0x6a40, 0xf290, 0xba36, 0xbe47, 0x1, 0x0);
        gbc.writeMem(0x142e, { 0x12 });
        gbc.writeMem(0xba36, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb53c, gbc.sp());
        EXPECT(0x142f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xba36));
        // 12 0268
        gbc.setState(0x1943, 0x5471, 0x7b60, 0x28c3, 0xd172, 0x36d4, 0x0, 0x0);
        gbc.writeMem(0x1943, { 0x12 });
        gbc.writeMem(0xd172, { 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5471, gbc.sp());
        EXPECT(0x1944, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd172));
        // 12 0269
        gbc.setState(0xa80e, 0xf543, 0xff0, 0x22ce, 0x88a9, 0x1dfd, 0x1, 0x0);
        gbc.writeMem(0x88a9, { 0x0 });
        gbc.writeMem(0xa80e, { 0x12 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf543, gbc.sp());
        EXPECT(0xa80f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0x88a9));
        EXPECT(0x12, gbc.readMem(0xa80e));
        // 12 026B
        gbc.setState(0xa4f1, 0x126c, 0xe860, 0x6802, 0xe06e, 0x56a7, 0x1, 0x0);
        gbc.writeMem(0xa4f1, { 0x12 });
        gbc.writeMem(0xe06e, { 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x126c, gbc.sp());
        EXPECT(0xa4f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xa4f1));
        EXPECT(0xe8, gbc.readMem(0xe06e));
        // 12 026D
        gbc.setState(0x2c36, 0xb74f, 0xd410, 0x3a14, 0xde67, 0x876d, 0x0, 0x0);
        gbc.writeMem(0x2c36, { 0x12 });
        gbc.writeMem(0xde67, { 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb74f, gbc.sp());
        EXPECT(0x2c37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xde67));
        // 12 0273
        gbc.setState(0xdccc, 0x694e, 0x61e0, 0xa309, 0xebc6, 0x95c4, 0x1, 0x0);
        gbc.writeMem(0xdccc, { 0x12 });
        gbc.writeMem(0xebc6, { 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x694e, gbc.sp());
        EXPECT(0xdccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xdccc));
        EXPECT(0x61, gbc.readMem(0xebc6));
        // 12 0274
        gbc.setState(0x922c, 0x6217, 0xfc30, 0xe04d, 0xb7fe, 0x1e20, 0x1, 0x0);
        gbc.writeMem(0x922c, { 0x12 });
        gbc.writeMem(0xb7fe, { 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6217, gbc.sp());
        EXPECT(0x922d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x922c));
        EXPECT(0xfc, gbc.readMem(0xb7fe));
        // 12 0275
        gbc.setState(0x689e, 0xe354, 0xeb60, 0x8805, 0x837a, 0xd58d, 0x1, 0x0);
        gbc.writeMem(0x689e, { 0x12 });
        gbc.writeMem(0x837a, { 0x0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe354, gbc.sp());
        EXPECT(0x689f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0x837a));
        // 12 0277
        gbc.setState(0x9317, 0x839a, 0x9b40, 0xe38c, 0xe241, 0x2758, 0x1, 0x1);
        gbc.writeMem(0x9317, { 0x12 });
        gbc.writeMem(0xe241, { 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x839a, gbc.sp());
        EXPECT(0x9318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9317));
        EXPECT(0x9b, gbc.readMem(0xe241));
        // 12 0279
        gbc.setState(0x4b36, 0xf55d, 0x7320, 0x5d24, 0xc985, 0x361d, 0x0, 0x0);
        gbc.writeMem(0x4b36, { 0x12 });
        gbc.writeMem(0xc985, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf55d, gbc.sp());
        EXPECT(0x4b37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xc985));
        // 12 0281
        gbc.setState(0x961e, 0xd49, 0x9550, 0x8350, 0xb1e6, 0x7e2b, 0x0, 0x1);
        gbc.writeMem(0x961e, { 0x12 });
        gbc.writeMem(0xb1e6, { 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd49, gbc.sp());
        EXPECT(0x961f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x961e));
        EXPECT(0x95, gbc.readMem(0xb1e6));
        // 12 0282
        gbc.setState(0xc8f0, 0x6df3, 0x22b0, 0x9aa4, 0xfa2d, 0xdba6, 0x1, 0x0);
        gbc.writeMem(0xc8f0, { 0x12 });
        gbc.writeMem(0xfa2d, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6df3, gbc.sp());
        EXPECT(0xc8f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xc8f0));
        EXPECT(0x22, gbc.readMem(0xfa2d));
        // 12 0283
        gbc.setState(0xbafd, 0xb442, 0xd580, 0x23b6, 0xea76, 0xcf12, 0x1, 0x0);
        gbc.writeMem(0xbafd, { 0x12 });
        gbc.writeMem(0xea76, { 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb442, gbc.sp());
        EXPECT(0xbafe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xbafd));
        EXPECT(0xd5, gbc.readMem(0xea76));
        // 12 0284
        gbc.setState(0x6120, 0xb384, 0x7250, 0xe686, 0x99fe, 0xcc6e, 0x0, 0x0);
        gbc.writeMem(0x6120, { 0x12 });
        gbc.writeMem(0x99fe, { 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb384, gbc.sp());
        EXPECT(0x6121, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x99fe));
        // 12 0287
        gbc.setState(0xa779, 0xada7, 0x2e0, 0x5991, 0xff51, 0x9837, 0x1, 0x0);
        gbc.writeMem(0xa779, { 0x12 });
        gbc.writeMem(0xff51, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xada7, gbc.sp());
        EXPECT(0xa77a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xa779));
        EXPECT(0x2, gbc.readMem(0xff51));
        // 12 0288
        gbc.setState(0x3292, 0xa15e, 0x70a0, 0x956, 0xf2f5, 0x9826, 0x0, 0x1);
        gbc.writeMem(0x3292, { 0x12 });
        gbc.writeMem(0xf2f5, { 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa15e, gbc.sp());
        EXPECT(0x3293, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xf2f5));
        // 12 028A
        gbc.setState(0x5c05, 0xea85, 0xf430, 0x2346, 0xbfdb, 0xb597, 0x1, 0x1);
        gbc.writeMem(0x5c05, { 0x12 });
        gbc.writeMem(0xbfdb, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xea85, gbc.sp());
        EXPECT(0x5c06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xbfdb));
        // 12 028E
        gbc.setState(0x2ff8, 0xd793, 0xe4d0, 0x3962, 0xe8a0, 0x8c7a, 0x1, 0x1);
        gbc.writeMem(0x2ff8, { 0x12 });
        gbc.writeMem(0xe8a0, { 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd793, gbc.sp());
        EXPECT(0x2ff9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xe8a0));
        // 12 0290
        gbc.setState(0x9b2b, 0x5613, 0xa2d0, 0xf2f7, 0xfa02, 0xc712, 0x0, 0x1);
        gbc.writeMem(0x9b2b, { 0x12 });
        gbc.writeMem(0xfa02, { 0x0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5613, gbc.sp());
        EXPECT(0x9b2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9b2b));
        EXPECT(0xa2, gbc.readMem(0xfa02));
        // 12 0294
        gbc.setState(0x5502, 0x80cd, 0x1350, 0xa853, 0xfdfb, 0xeb99, 0x1, 0x0);
        gbc.writeMem(0x5502, { 0x12 });
        gbc.writeMem(0xfdfb, { 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x80cd, gbc.sp());
        EXPECT(0x5503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xfdfb));
        // 12 0298
        gbc.setState(0xba70, 0xee93, 0x61e0, 0xb434, 0x8c2d, 0x48e3, 0x0, 0x1);
        gbc.writeMem(0x8c2d, { 0x0 });
        gbc.writeMem(0xba70, { 0x12 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xee93, gbc.sp());
        EXPECT(0xba71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8c2d));
        EXPECT(0x12, gbc.readMem(0xba70));
        // 12 029A
        gbc.setState(0x94f6, 0x41c, 0x65c0, 0xe989, 0xbdd7, 0x26fc, 0x0, 0x1);
        gbc.writeMem(0x94f6, { 0x12 });
        gbc.writeMem(0xbdd7, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x41c, gbc.sp());
        EXPECT(0x94f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x94f6));
        EXPECT(0x65, gbc.readMem(0xbdd7));
        // 12 029B
        gbc.setState(0x78b2, 0xb246, 0xe170, 0x9d78, 0x812f, 0x7a6, 0x1, 0x1);
        gbc.writeMem(0x78b2, { 0x12 });
        gbc.writeMem(0x812f, { 0x0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb246, gbc.sp());
        EXPECT(0x78b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x812f));
        // 12 029C
        gbc.setState(0xbe7b, 0xf7e4, 0x2e50, 0xb393, 0xb329, 0x5038, 0x0, 0x0);
        gbc.writeMem(0xb329, { 0x0 });
        gbc.writeMem(0xbe7b, { 0x12 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf7e4, gbc.sp());
        EXPECT(0xbe7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb329));
        EXPECT(0x12, gbc.readMem(0xbe7b));
        // 12 029F
        gbc.setState(0xed5d, 0x58b7, 0x5930, 0x7c16, 0xa410, 0xad63, 0x0, 0x0);
        gbc.writeMem(0xa410, { 0x0 });
        gbc.writeMem(0xed5d, { 0x12 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x58b7, gbc.sp());
        EXPECT(0xed5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xa410));
        EXPECT(0x12, gbc.readMem(0xed5d));
        // 12 02A4
        gbc.setState(0x82c2, 0x7337, 0xd8b0, 0x59dd, 0xf77c, 0x3953, 0x1, 0x1);
        gbc.writeMem(0x82c2, { 0x12 });
        gbc.writeMem(0xf77c, { 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7337, gbc.sp());
        EXPECT(0x82c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x82c2));
        EXPECT(0xd8, gbc.readMem(0xf77c));
        // 12 02A5
        gbc.setState(0xadf4, 0xc021, 0xd690, 0x9937, 0xd4a7, 0xe881, 0x0, 0x0);
        gbc.writeMem(0xadf4, { 0x12 });
        gbc.writeMem(0xd4a7, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc021, gbc.sp());
        EXPECT(0xadf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xadf4));
        EXPECT(0xd6, gbc.readMem(0xd4a7));
        // 12 02A6
        gbc.setState(0x8cfc, 0x560f, 0x3810, 0xba52, 0xdb06, 0xd82a, 0x0, 0x0);
        gbc.writeMem(0x8cfc, { 0x12 });
        gbc.writeMem(0xdb06, { 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x560f, gbc.sp());
        EXPECT(0x8cfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x8cfc));
        EXPECT(0x38, gbc.readMem(0xdb06));
        // 12 02A7
        gbc.setState(0xe00c, 0x3552, 0xe570, 0xd774, 0xc709, 0x292c, 0x1, 0x1);
        gbc.writeMem(0xc709, { 0x0 });
        gbc.writeMem(0xe00c, { 0x12 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3552, gbc.sp());
        EXPECT(0xe00d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xc709));
        EXPECT(0x12, gbc.readMem(0xe00c));
        // 12 02A9
        gbc.setState(0xdbcf, 0x5f8c, 0xb990, 0xb9a2, 0xfe82, 0x8ebc, 0x0, 0x0);
        gbc.writeMem(0xdbcf, { 0x12 });
        gbc.writeMem(0xfe82, { 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5f8c, gbc.sp());
        EXPECT(0xdbd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xdbcf));
        EXPECT(0xb9, gbc.readMem(0xfe82));
        // 12 02AC
        gbc.setState(0x61a9, 0x13d4, 0x75a0, 0x22a7, 0x827d, 0x33a2, 0x0, 0x1);
        gbc.writeMem(0x61a9, { 0x12 });
        gbc.writeMem(0x827d, { 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x13d4, gbc.sp());
        EXPECT(0x61aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x827d));
        // 12 02AE
        gbc.setState(0xa994, 0xc983, 0x3b50, 0xc693, 0x925c, 0xf157, 0x0, 0x0);
        gbc.writeMem(0x925c, { 0x0 });
        gbc.writeMem(0xa994, { 0x12 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc983, gbc.sp());
        EXPECT(0xa995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x925c));
        EXPECT(0x12, gbc.readMem(0xa994));
        // 12 02AF
        gbc.setState(0xbe80, 0xd497, 0xbe10, 0xb94e, 0xf955, 0x62b0, 0x1, 0x1);
        gbc.writeMem(0xbe80, { 0x12 });
        gbc.writeMem(0xf955, { 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd497, gbc.sp());
        EXPECT(0xbe81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xbe80));
        EXPECT(0xbe, gbc.readMem(0xf955));
        // 12 02B0
        gbc.setState(0x4453, 0xf6b3, 0x82f0, 0x2951, 0x9ee4, 0x6333, 0x0, 0x0);
        gbc.writeMem(0x4453, { 0x12 });
        gbc.writeMem(0x9ee4, { 0x0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf6b3, gbc.sp());
        EXPECT(0x4454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9ee4));
        // 12 02B4
        gbc.setState(0xd136, 0xfa94, 0xcb80, 0x73e5, 0x9970, 0xd2dd, 0x1, 0x1);
        gbc.writeMem(0x9970, { 0x0 });
        gbc.writeMem(0xd136, { 0x12 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xfa94, gbc.sp());
        EXPECT(0xd137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9970));
        EXPECT(0x12, gbc.readMem(0xd136));
        // 12 02BA
        gbc.setState(0x2fee, 0xcd5d, 0xf0, 0x5184, 0x7f66, 0xa1ed, 0x0, 0x1);
        gbc.writeMem(0x2fee, { 0x12 });
        gbc.writeMem(0x7f66, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xcd5d, gbc.sp());
        EXPECT(0x2fef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 12 02BB
        gbc.setState(0xad2a, 0x616c, 0x7820, 0x84c6, 0x9901, 0x438, 0x0, 0x1);
        gbc.writeMem(0x9901, { 0x0 });
        gbc.writeMem(0xad2a, { 0x12 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x616c, gbc.sp());
        EXPECT(0xad2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9901));
        EXPECT(0x12, gbc.readMem(0xad2a));
        // 12 02BF
        gbc.setState(0x9a0f, 0xef16, 0x6970, 0xdf8c, 0xcca6, 0x8f0d, 0x1, 0x0);
        gbc.writeMem(0x9a0f, { 0x12 });
        gbc.writeMem(0xcca6, { 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xef16, gbc.sp());
        EXPECT(0x9a10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9a0f));
        EXPECT(0x69, gbc.readMem(0xcca6));
        // 12 02C2
        gbc.setState(0x1aad, 0x2185, 0xd170, 0x4370, 0xb1af, 0xe284, 0x0, 0x1);
        gbc.writeMem(0x1aad, { 0x12 });
        gbc.writeMem(0xb1af, { 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2185, gbc.sp());
        EXPECT(0x1aae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xb1af));
        // 12 02C5
        gbc.setState(0x125e, 0x1af4, 0xdbe0, 0x3013, 0xc9cc, 0xdb14, 0x0, 0x0);
        gbc.writeMem(0x125e, { 0x12 });
        gbc.writeMem(0xc9cc, { 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1af4, gbc.sp());
        EXPECT(0x125f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xc9cc));
        // 12 02C9
        gbc.setState(0xb08c, 0xa024, 0x100, 0x41cb, 0xcad2, 0x1571, 0x1, 0x0);
        gbc.writeMem(0xb08c, { 0x12 });
        gbc.writeMem(0xcad2, { 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa024, gbc.sp());
        EXPECT(0xb08d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xb08c));
        EXPECT(0x1, gbc.readMem(0xcad2));
        // 12 02CA
        gbc.setState(0x4958, 0x5f21, 0x2540, 0x9644, 0xa731, 0x9390, 0x0, 0x1);
        gbc.writeMem(0x4958, { 0x12 });
        gbc.writeMem(0xa731, { 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5f21, gbc.sp());
        EXPECT(0x4959, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa731));
        // 12 02CB
        gbc.setState(0xe93c, 0xcdcc, 0x5580, 0x1974, 0x8d0e, 0x3fe5, 0x0, 0x0);
        gbc.writeMem(0x8d0e, { 0x0 });
        gbc.writeMem(0xe93c, { 0x12 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcdcc, gbc.sp());
        EXPECT(0xe93d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8d0e));
        EXPECT(0x12, gbc.readMem(0xe93c));
        // 12 02CD
        gbc.setState(0x89b6, 0x2753, 0xfee0, 0xf23e, 0xa12a, 0x5c7e, 0x1, 0x0);
        gbc.writeMem(0x89b6, { 0x12 });
        gbc.writeMem(0xa12a, { 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2753, gbc.sp());
        EXPECT(0x89b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x89b6));
        EXPECT(0xfe, gbc.readMem(0xa12a));
        // 12 02CE
        gbc.setState(0x3c34, 0x4823, 0xd5f0, 0x41d0, 0x8428, 0x47b, 0x1, 0x0);
        gbc.writeMem(0x3c34, { 0x12 });
        gbc.writeMem(0x8428, { 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4823, gbc.sp());
        EXPECT(0x3c35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x8428));
        // 12 02CF
        gbc.setState(0xb4f8, 0x1f2d, 0x4600, 0xb47b, 0xd505, 0xa1e, 0x0, 0x0);
        gbc.writeMem(0xb4f8, { 0x12 });
        gbc.writeMem(0xd505, { 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1f2d, gbc.sp());
        EXPECT(0xb4f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xb4f8));
        EXPECT(0x46, gbc.readMem(0xd505));
        // 12 02D1
        gbc.setState(0x5a95, 0x5852, 0x3490, 0x95eb, 0xd3ba, 0xb0c9, 0x0, 0x1);
        gbc.writeMem(0x5a95, { 0x12 });
        gbc.writeMem(0xd3ba, { 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5852, gbc.sp());
        EXPECT(0x5a96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xd3ba));
        // 12 02D3
        gbc.setState(0xaa26, 0xe3f9, 0xbe30, 0xd203, 0xc3a9, 0x4473, 0x1, 0x1);
        gbc.writeMem(0xaa26, { 0x12 });
        gbc.writeMem(0xc3a9, { 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe3f9, gbc.sp());
        EXPECT(0xaa27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xaa26));
        EXPECT(0xbe, gbc.readMem(0xc3a9));
        // 12 02D6
        gbc.setState(0xcfe5, 0x3cfa, 0x73e0, 0xa783, 0xa8e2, 0xcf4a, 0x1, 0x0);
        gbc.writeMem(0xa8e2, { 0x0 });
        gbc.writeMem(0xcfe5, { 0x12 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3cfa, gbc.sp());
        EXPECT(0xcfe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xa8e2));
        EXPECT(0x12, gbc.readMem(0xcfe5));
        // 12 02D7
        gbc.setState(0x5922, 0xa874, 0x4e30, 0x1d09, 0xf073, 0x779d, 0x0, 0x1);
        gbc.writeMem(0x5922, { 0x12 });
        gbc.writeMem(0xf073, { 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa874, gbc.sp());
        EXPECT(0x5923, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xf073));
        // 12 02DA
        gbc.setState(0xb41a, 0x1f62, 0x1c30, 0x852b, 0xcc66, 0x848e, 0x0, 0x0);
        gbc.writeMem(0xb41a, { 0x12 });
        gbc.writeMem(0xcc66, { 0x0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1f62, gbc.sp());
        EXPECT(0xb41b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xb41a));
        EXPECT(0x1c, gbc.readMem(0xcc66));
        // 12 02DC
        gbc.setState(0xb39e, 0x2068, 0xf100, 0x330e, 0x8f42, 0x44f2, 0x1, 0x0);
        gbc.writeMem(0x8f42, { 0x0 });
        gbc.writeMem(0xb39e, { 0x12 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2068, gbc.sp());
        EXPECT(0xb39f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8f42));
        EXPECT(0x12, gbc.readMem(0xb39e));
        // 12 02DE
        gbc.setState(0x68a, 0xe289, 0x5800, 0xd87c, 0xd914, 0x69a1, 0x0, 0x0);
        gbc.writeMem(0x68a, { 0x12 });
        gbc.writeMem(0xd914, { 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe289, gbc.sp());
        EXPECT(0x68b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd914));
        // 12 02E0
        gbc.setState(0xd94, 0xd48a, 0xf0c0, 0x23d7, 0xd771, 0xb1e6, 0x0, 0x1);
        gbc.writeMem(0xd94, { 0x12 });
        gbc.writeMem(0xd771, { 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd48a, gbc.sp());
        EXPECT(0xd95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd771));
        // 12 02E1
        gbc.setState(0xac5d, 0xbd5f, 0xf450, 0xe45c, 0xe7db, 0x2b52, 0x1, 0x1);
        gbc.writeMem(0xac5d, { 0x12 });
        gbc.writeMem(0xe7db, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xbd5f, gbc.sp());
        EXPECT(0xac5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xac5d));
        EXPECT(0xf4, gbc.readMem(0xe7db));
        // 12 02E2
        gbc.setState(0x5908, 0x84bb, 0x5de0, 0x60af, 0xba44, 0x2329, 0x0, 0x0);
        gbc.writeMem(0x5908, { 0x12 });
        gbc.writeMem(0xba44, { 0x0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x84bb, gbc.sp());
        EXPECT(0x5909, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xba44));
        // 12 02E5
        gbc.setState(0x7b1a, 0xd1f6, 0xb440, 0xe0f0, 0x984b, 0xc493, 0x0, 0x1);
        gbc.writeMem(0x7b1a, { 0x12 });
        gbc.writeMem(0x984b, { 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd1f6, gbc.sp());
        EXPECT(0x7b1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0x984b));
        // 12 02E6
        gbc.setState(0x551d, 0xfa32, 0xbb40, 0x993d, 0xad1a, 0x620d, 0x0, 0x0);
        gbc.writeMem(0x551d, { 0x12 });
        gbc.writeMem(0xad1a, { 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xfa32, gbc.sp());
        EXPECT(0x551e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xad1a));
        // 12 02E7
        gbc.setState(0xab67, 0x541e, 0x4d70, 0xc830, 0xdc14, 0xfe0b, 0x0, 0x1);
        gbc.writeMem(0xab67, { 0x12 });
        gbc.writeMem(0xdc14, { 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x541e, gbc.sp());
        EXPECT(0xab68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xab67));
        EXPECT(0x4d, gbc.readMem(0xdc14));
        // 12 02EA
        gbc.setState(0xd72f, 0xdc14, 0xc680, 0x3955, 0xf1b2, 0x9737, 0x1, 0x1);
        gbc.writeMem(0xd72f, { 0x12 });
        gbc.writeMem(0xf1b2, { 0x0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xdc14, gbc.sp());
        EXPECT(0xd730, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xd72f));
        EXPECT(0xc6, gbc.readMem(0xf1b2));
        // 12 02EC
        gbc.setState(0xa385, 0xeac4, 0x7a10, 0xc3b4, 0x8dc0, 0x343f, 0x1, 0x1);
        gbc.writeMem(0x8dc0, { 0x0 });
        gbc.writeMem(0xa385, { 0x12 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xeac4, gbc.sp());
        EXPECT(0xa386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8dc0));
        EXPECT(0x12, gbc.readMem(0xa385));
        // 12 02ED
        gbc.setState(0x49d9, 0xd847, 0xf670, 0x37c4, 0xb668, 0xd941, 0x0, 0x0);
        gbc.writeMem(0x49d9, { 0x12 });
        gbc.writeMem(0xb668, { 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd847, gbc.sp());
        EXPECT(0x49da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xb668));
        // 12 02F0
        gbc.setState(0x897c, 0x5f55, 0xb270, 0x4c23, 0x9d45, 0x8b91, 0x0, 0x0);
        gbc.writeMem(0x897c, { 0x12 });
        gbc.writeMem(0x9d45, { 0x0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5f55, gbc.sp());
        EXPECT(0x897d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x897c));
        EXPECT(0xb2, gbc.readMem(0x9d45));
        // 12 02F5
        gbc.setState(0x8a2, 0x5992, 0x9dd0, 0x31ba, 0xe77b, 0x4e0b, 0x1, 0x0);
        gbc.writeMem(0x8a2, { 0x12 });
        gbc.writeMem(0xe77b, { 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5992, gbc.sp());
        EXPECT(0x8a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe77b));
        // 12 02F8
        gbc.setState(0x35d1, 0x1a3, 0x2620, 0xab96, 0xd830, 0x573a, 0x0, 0x1);
        gbc.writeMem(0x35d1, { 0x12 });
        gbc.writeMem(0xd830, { 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1a3, gbc.sp());
        EXPECT(0x35d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd830));
        // 12 02FB
        gbc.setState(0xb3b6, 0x8c88, 0xe860, 0x5d5b, 0xb1e4, 0x30a6, 0x1, 0x0);
        gbc.writeMem(0xb1e4, { 0x0 });
        gbc.writeMem(0xb3b6, { 0x12 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8c88, gbc.sp());
        EXPECT(0xb3b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xb1e4));
        EXPECT(0x12, gbc.readMem(0xb3b6));
        // 12 02FC
        gbc.setState(0xa365, 0x2bad, 0xa10, 0xdd4c, 0x8fda, 0xa031, 0x0, 0x0);
        gbc.writeMem(0x8fda, { 0x0 });
        gbc.writeMem(0xa365, { 0x12 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2bad, gbc.sp());
        EXPECT(0xa366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8fda));
        EXPECT(0x12, gbc.readMem(0xa365));
        // 12 02FE
        gbc.setState(0x82b4, 0x5cb2, 0x11b0, 0xf05e, 0xe32d, 0x1e28, 0x0, 0x0);
        gbc.writeMem(0x82b4, { 0x12 });
        gbc.writeMem(0xe32d, { 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5cb2, gbc.sp());
        EXPECT(0x82b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x82b4));
        EXPECT(0x11, gbc.readMem(0xe32d));
        // 12 0303
        gbc.setState(0x9ac6, 0xa3b3, 0xe660, 0x971f, 0x9691, 0x1c87, 0x0, 0x0);
        gbc.writeMem(0x9691, { 0x0 });
        gbc.writeMem(0x9ac6, { 0x12 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa3b3, gbc.sp());
        EXPECT(0x9ac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9691));
        EXPECT(0x12, gbc.readMem(0x9ac6));
        // 12 0305
        gbc.setState(0x5fc, 0x3980, 0x78f0, 0xea08, 0xdb1b, 0x388c, 0x1, 0x0);
        gbc.writeMem(0x5fc, { 0x12 });
        gbc.writeMem(0xdb1b, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3980, gbc.sp());
        EXPECT(0x5fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xdb1b));
        // 12 0307
        gbc.setState(0x73de, 0x99bb, 0xfa70, 0x9677, 0xb768, 0xf728, 0x1, 0x1);
        gbc.writeMem(0x73de, { 0x12 });
        gbc.writeMem(0xb768, { 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x99bb, gbc.sp());
        EXPECT(0x73df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb768));
        // 12 0309
        gbc.setState(0x9787, 0xb753, 0x600, 0x2236, 0xa75f, 0xf426, 0x0, 0x1);
        gbc.writeMem(0x9787, { 0x12 });
        gbc.writeMem(0xa75f, { 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb753, gbc.sp());
        EXPECT(0x9788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9787));
        EXPECT(0x6, gbc.readMem(0xa75f));
        // 12 030A
        gbc.setState(0x9638, 0xd7f3, 0x8f90, 0x8c20, 0xfa4d, 0x6c4f, 0x1, 0x0);
        gbc.writeMem(0x9638, { 0x12 });
        gbc.writeMem(0xfa4d, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd7f3, gbc.sp());
        EXPECT(0x9639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9638));
        EXPECT(0x8f, gbc.readMem(0xfa4d));
        // 12 030C
        gbc.setState(0x48b8, 0xf950, 0x5b70, 0xad0e, 0xb9c7, 0xe338, 0x1, 0x0);
        gbc.writeMem(0x48b8, { 0x12 });
        gbc.writeMem(0xb9c7, { 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf950, gbc.sp());
        EXPECT(0x48b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb9c7));
        // 12 030D
        gbc.setState(0xeff0, 0xbd7b, 0xd5a0, 0x55d8, 0xf3cf, 0x2ab2, 0x0, 0x0);
        gbc.writeMem(0xeff0, { 0x12 });
        gbc.writeMem(0xf3cf, { 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xbd7b, gbc.sp());
        EXPECT(0xeff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xeff0));
        EXPECT(0xd5, gbc.readMem(0xf3cf));
        // 12 030E
        gbc.setState(0x92be, 0xc06c, 0x1080, 0xef69, 0xe7f6, 0x559a, 0x0, 0x1);
        gbc.writeMem(0x92be, { 0x12 });
        gbc.writeMem(0xe7f6, { 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc06c, gbc.sp());
        EXPECT(0x92bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x92be));
        EXPECT(0x10, gbc.readMem(0xe7f6));
        // 12 030F
        gbc.setState(0xc0f5, 0xb982, 0x3a0, 0xbfac, 0x87a4, 0x3ecd, 0x0, 0x0);
        gbc.writeMem(0x87a4, { 0x0 });
        gbc.writeMem(0xc0f5, { 0x12 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb982, gbc.sp());
        EXPECT(0xc0f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x87a4));
        EXPECT(0x12, gbc.readMem(0xc0f5));
        // 12 0310
        gbc.setState(0x9a71, 0x404d, 0x3fa0, 0x3c0, 0x9df9, 0x70f6, 0x0, 0x0);
        gbc.writeMem(0x9a71, { 0x12 });
        gbc.writeMem(0x9df9, { 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x404d, gbc.sp());
        EXPECT(0x9a72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9a71));
        EXPECT(0x3f, gbc.readMem(0x9df9));
        // 12 0313
        gbc.setState(0x20ce, 0x33ac, 0xbe90, 0xc48b, 0xed8c, 0x8c9c, 0x0, 0x0);
        gbc.writeMem(0x20ce, { 0x12 });
        gbc.writeMem(0xed8c, { 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x33ac, gbc.sp());
        EXPECT(0x20cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xed8c));
        // 12 0317
        gbc.setState(0x92fe, 0xcbbe, 0xcaa0, 0xbf44, 0xb372, 0x1ae0, 0x0, 0x1);
        gbc.writeMem(0x92fe, { 0x12 });
        gbc.writeMem(0xb372, { 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xcbbe, gbc.sp());
        EXPECT(0x92ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x92fe));
        EXPECT(0xca, gbc.readMem(0xb372));
        // 12 0319
        gbc.setState(0xca96, 0x4842, 0x860, 0xacce, 0x95b2, 0xe50, 0x0, 0x1);
        gbc.writeMem(0x95b2, { 0x0 });
        gbc.writeMem(0xca96, { 0x12 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4842, gbc.sp());
        EXPECT(0xca97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0x95b2));
        EXPECT(0x12, gbc.readMem(0xca96));
        // 12 031C
        gbc.setState(0xe75f, 0x35e1, 0xbdc0, 0x796a, 0x91d5, 0x6185, 0x1, 0x1);
        gbc.writeMem(0x91d5, { 0x0 });
        gbc.writeMem(0xe75f, { 0x12 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x35e1, gbc.sp());
        EXPECT(0xe760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x91d5));
        EXPECT(0x12, gbc.readMem(0xe75f));
        // 12 031D
        gbc.setState(0x3cc0, 0xcd2e, 0xed10, 0x41d, 0xad51, 0xe012, 0x0, 0x0);
        gbc.writeMem(0x3cc0, { 0x12 });
        gbc.writeMem(0xad51, { 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xcd2e, gbc.sp());
        EXPECT(0x3cc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xad51));
        // 12 031E
        gbc.setState(0xb87c, 0x645a, 0x28c0, 0xef8e, 0xc2ea, 0x2216, 0x1, 0x0);
        gbc.writeMem(0xb87c, { 0x12 });
        gbc.writeMem(0xc2ea, { 0x0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x645a, gbc.sp());
        EXPECT(0xb87d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xb87c));
        EXPECT(0x28, gbc.readMem(0xc2ea));
        // 12 031F
        gbc.setState(0x7b29, 0xb28b, 0xb5e0, 0x191c, 0xd713, 0xe27d, 0x1, 0x0);
        gbc.writeMem(0x7b29, { 0x12 });
        gbc.writeMem(0xd713, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb28b, gbc.sp());
        EXPECT(0x7b2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd713));
        // 12 0320
        gbc.setState(0xb990, 0x2ab3, 0xb5b0, 0x8fa3, 0xa230, 0xed7e, 0x1, 0x0);
        gbc.writeMem(0xa230, { 0x0 });
        gbc.writeMem(0xb990, { 0x12 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2ab3, gbc.sp());
        EXPECT(0xb991, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa230));
        EXPECT(0x12, gbc.readMem(0xb990));
        // 12 0323
        gbc.setState(0x3d18, 0xc036, 0xc50, 0x5baf, 0xfb61, 0x2d74, 0x1, 0x0);
        gbc.writeMem(0x3d18, { 0x12 });
        gbc.writeMem(0xfb61, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc036, gbc.sp());
        EXPECT(0x3d19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xfb61));
        // 12 0325
        gbc.setState(0x6f96, 0x5f6c, 0x7b20, 0x480a, 0xa64b, 0xa16b, 0x1, 0x0);
        gbc.writeMem(0x6f96, { 0x12 });
        gbc.writeMem(0xa64b, { 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5f6c, gbc.sp());
        EXPECT(0x6f97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa64b));
        // 12 0326
        gbc.setState(0x99d, 0x8574, 0x4bd0, 0x1f69, 0xbfaa, 0x4800, 0x0, 0x1);
        gbc.writeMem(0x99d, { 0x12 });
        gbc.writeMem(0xbfaa, { 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8574, gbc.sp());
        EXPECT(0x99e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xbfaa));
        // 12 0327
        gbc.setState(0x63ad, 0xb686, 0x6370, 0xe54, 0xba6e, 0xaf15, 0x1, 0x1);
        gbc.writeMem(0x63ad, { 0x12 });
        gbc.writeMem(0xba6e, { 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb686, gbc.sp());
        EXPECT(0x63ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xba6e));
        // 12 0328
        gbc.setState(0xc0e0, 0xa248, 0x80b0, 0xd178, 0xc199, 0x5135, 0x1, 0x1);
        gbc.writeMem(0xc0e0, { 0x12 });
        gbc.writeMem(0xc199, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa248, gbc.sp());
        EXPECT(0xc0e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xc0e0));
        EXPECT(0x80, gbc.readMem(0xc199));
        // 12 032A
        gbc.setState(0x5f56, 0xbc8d, 0x4db0, 0x2c4d, 0xa587, 0xe0d6, 0x0, 0x0);
        gbc.writeMem(0x5f56, { 0x12 });
        gbc.writeMem(0xa587, { 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xbc8d, gbc.sp());
        EXPECT(0x5f57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa587));
        // 12 032E
        gbc.setState(0xa7a7, 0xa56a, 0x19d0, 0x8e0c, 0x9ac5, 0x599e, 0x1, 0x0);
        gbc.writeMem(0x9ac5, { 0x0 });
        gbc.writeMem(0xa7a7, { 0x12 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa56a, gbc.sp());
        EXPECT(0xa7a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9ac5));
        EXPECT(0x12, gbc.readMem(0xa7a7));
        // 12 032F
        gbc.setState(0xe4e3, 0x67be, 0x4810, 0xd42e, 0xda27, 0xcf57, 0x1, 0x0);
        gbc.writeMem(0xda27, { 0x0 });
        gbc.writeMem(0xe4e3, { 0x12 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x67be, gbc.sp());
        EXPECT(0xe4e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xda27));
        EXPECT(0x12, gbc.readMem(0xe4e3));
        // 12 0331
        gbc.setState(0x3ee3, 0xb297, 0x220, 0x9d39, 0x863f, 0x1eae, 0x0, 0x0);
        gbc.writeMem(0x3ee3, { 0x12 });
        gbc.writeMem(0x863f, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb297, gbc.sp());
        EXPECT(0x3ee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0x863f));
        // 12 0334
        gbc.setState(0xb49c, 0xf9ca, 0xfe00, 0xba6b, 0xdd7e, 0x83c0, 0x1, 0x1);
        gbc.writeMem(0xb49c, { 0x12 });
        gbc.writeMem(0xdd7e, { 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf9ca, gbc.sp());
        EXPECT(0xb49d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xb49c));
        EXPECT(0xfe, gbc.readMem(0xdd7e));
        // 12 0335
        gbc.setState(0x3a06, 0x70cb, 0x9510, 0x7e45, 0xb36a, 0xbec6, 0x0, 0x1);
        gbc.writeMem(0x3a06, { 0x12 });
        gbc.writeMem(0xb36a, { 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x70cb, gbc.sp());
        EXPECT(0x3a07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb36a));
        // 12 0337
        gbc.setState(0xed0, 0x29d5, 0x40f0, 0x90da, 0xf04a, 0xe07e, 0x1, 0x1);
        gbc.writeMem(0xed0, { 0x12 });
        gbc.writeMem(0xf04a, { 0x0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x29d5, gbc.sp());
        EXPECT(0xed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xf04a));
        // 12 0338
        gbc.setState(0xd40b, 0x22bf, 0xaf80, 0x3ed5, 0xc319, 0x356c, 0x1, 0x1);
        gbc.writeMem(0xc319, { 0x0 });
        gbc.writeMem(0xd40b, { 0x12 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x22bf, gbc.sp());
        EXPECT(0xd40c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xc319));
        EXPECT(0x12, gbc.readMem(0xd40b));
        // 12 033D
        gbc.setState(0xd21a, 0x36e2, 0xf750, 0xbb51, 0xe6e1, 0x91f0, 0x1, 0x1);
        gbc.writeMem(0xd21a, { 0x12 });
        gbc.writeMem(0xe6e1, { 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x36e2, gbc.sp());
        EXPECT(0xd21b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xd21a));
        EXPECT(0xf7, gbc.readMem(0xe6e1));
        // 12 033F
        gbc.setState(0x84c9, 0x8ecc, 0x6620, 0xa28d, 0x845b, 0x20d4, 0x0, 0x0);
        gbc.writeMem(0x845b, { 0x0 });
        gbc.writeMem(0x84c9, { 0x12 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8ecc, gbc.sp());
        EXPECT(0x84ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x845b));
        EXPECT(0x12, gbc.readMem(0x84c9));
        // 12 0340
        gbc.setState(0xc024, 0xdca4, 0xf410, 0xa708, 0x93d3, 0x3ea8, 0x1, 0x0);
        gbc.writeMem(0x93d3, { 0x0 });
        gbc.writeMem(0xc024, { 0x12 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xdca4, gbc.sp());
        EXPECT(0xc025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0x93d3));
        EXPECT(0x12, gbc.readMem(0xc024));
        // 12 0341
        gbc.setState(0x880f, 0x2ef7, 0xf910, 0xc0a0, 0xa292, 0xb302, 0x1, 0x0);
        gbc.writeMem(0x880f, { 0x12 });
        gbc.writeMem(0xa292, { 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2ef7, gbc.sp());
        EXPECT(0x8810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x880f));
        EXPECT(0xf9, gbc.readMem(0xa292));
        // 12 0342
        gbc.setState(0xb015, 0x16f9, 0x5d90, 0x41f2, 0xb02c, 0xfbe3, 0x1, 0x0);
        gbc.writeMem(0xb015, { 0x12 });
        gbc.writeMem(0xb02c, { 0x0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x16f9, gbc.sp());
        EXPECT(0xb016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xb015));
        EXPECT(0x5d, gbc.readMem(0xb02c));
        // 12 0343
        gbc.setState(0xb45f, 0x1dde, 0x2fd0, 0xadea, 0x9d96, 0x3c96, 0x0, 0x0);
        gbc.writeMem(0x9d96, { 0x0 });
        gbc.writeMem(0xb45f, { 0x12 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1dde, gbc.sp());
        EXPECT(0xb460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9d96));
        EXPECT(0x12, gbc.readMem(0xb45f));
        // 12 0344
        gbc.setState(0xd5f, 0xb3c7, 0x73a0, 0xea95, 0xb2a2, 0xb7cb, 0x1, 0x1);
        gbc.writeMem(0xd5f, { 0x12 });
        gbc.writeMem(0xb2a2, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb3c7, gbc.sp());
        EXPECT(0xd60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xb2a2));
        // 12 034A
        gbc.setState(0x2e86, 0xe065, 0xe240, 0x81a7, 0xb95d, 0x7f29, 0x0, 0x0);
        gbc.writeMem(0x2e86, { 0x12 });
        gbc.writeMem(0xb95d, { 0x0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe065, gbc.sp());
        EXPECT(0x2e87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb95d));
        // 12 034B
        gbc.setState(0x1e34, 0x1307, 0x11b0, 0x368d, 0x9ab3, 0x2e42, 0x0, 0x1);
        gbc.writeMem(0x1e34, { 0x12 });
        gbc.writeMem(0x9ab3, { 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1307, gbc.sp());
        EXPECT(0x1e35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x9ab3));
        // 12 034D
        gbc.setState(0x19da, 0x683e, 0x4200, 0x4a70, 0x9546, 0x994f, 0x1, 0x0);
        gbc.writeMem(0x19da, { 0x12 });
        gbc.writeMem(0x9546, { 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x683e, gbc.sp());
        EXPECT(0x19db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9546));
        // 12 034E
        gbc.setState(0xc5c, 0xaafa, 0x4ca0, 0x6968, 0xdbf5, 0x5834, 0x1, 0x0);
        gbc.writeMem(0xc5c, { 0x12 });
        gbc.writeMem(0xdbf5, { 0x0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xaafa, gbc.sp());
        EXPECT(0xc5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xdbf5));
        // 12 034F
        gbc.setState(0xdf29, 0x6bd6, 0xbb50, 0xba3f, 0xf4e7, 0x9961, 0x1, 0x1);
        gbc.writeMem(0xdf29, { 0x12 });
        gbc.writeMem(0xf4e7, { 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6bd6, gbc.sp());
        EXPECT(0xdf2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xdf29));
        EXPECT(0xbb, gbc.readMem(0xf4e7));
        // 12 0350
        gbc.setState(0x7a56, 0xf3c3, 0xf760, 0x20c3, 0xf34a, 0xb276, 0x1, 0x1);
        gbc.writeMem(0x7a56, { 0x12 });
        gbc.writeMem(0xf34a, { 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf3c3, gbc.sp());
        EXPECT(0x7a57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xf34a));
        // 12 0351
        gbc.setState(0x9c1e, 0x6e3d, 0xd0, 0xb4f1, 0x3a3b, 0xef56, 0x1, 0x0);
        gbc.writeMem(0x3a3b, { 0x0 });
        gbc.writeMem(0x9c1e, { 0x12 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6e3d, gbc.sp());
        EXPECT(0x9c1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9c1e));
        // 12 0355
        gbc.setState(0x321d, 0xf3da, 0xd050, 0x9886, 0x915a, 0x933, 0x1, 0x1);
        gbc.writeMem(0x321d, { 0x12 });
        gbc.writeMem(0x915a, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf3da, gbc.sp());
        EXPECT(0x321e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x915a));
        // 12 035B
        gbc.setState(0xaf40, 0x2d9e, 0x3a0, 0x4b24, 0x829c, 0x57e8, 0x1, 0x1);
        gbc.writeMem(0x829c, { 0x0 });
        gbc.writeMem(0xaf40, { 0x12 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2d9e, gbc.sp());
        EXPECT(0xaf41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x829c));
        EXPECT(0x12, gbc.readMem(0xaf40));
        // 12 035D
        gbc.setState(0x5881, 0x34b2, 0x4210, 0xf105, 0xc185, 0xdc1d, 0x0, 0x1);
        gbc.writeMem(0x5881, { 0x12 });
        gbc.writeMem(0xc185, { 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x34b2, gbc.sp());
        EXPECT(0x5882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc185));
        // 12 035E
        gbc.setState(0x49f1, 0xf50b, 0x3270, 0xea0e, 0xf549, 0xdc63, 0x1, 0x1);
        gbc.writeMem(0x49f1, { 0x12 });
        gbc.writeMem(0xf549, { 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf50b, gbc.sp());
        EXPECT(0x49f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xf549));
        // 12 035F
        gbc.setState(0x36b0, 0x2d9d, 0x31a0, 0x6e50, 0x96ef, 0xe2e3, 0x0, 0x0);
        gbc.writeMem(0x36b0, { 0x12 });
        gbc.writeMem(0x96ef, { 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2d9d, gbc.sp());
        EXPECT(0x36b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x96ef));
        // 12 0360
        gbc.setState(0xaa06, 0x594f, 0x4d60, 0x8e07, 0xbe45, 0xc6c6, 0x1, 0x1);
        gbc.writeMem(0xaa06, { 0x12 });
        gbc.writeMem(0xbe45, { 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x594f, gbc.sp());
        EXPECT(0xaa07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xaa06));
        EXPECT(0x4d, gbc.readMem(0xbe45));
        // 12 0361
        gbc.setState(0x481d, 0x991d, 0xbb0, 0x5af3, 0xa134, 0x1677, 0x1, 0x1);
        gbc.writeMem(0x481d, { 0x12 });
        gbc.writeMem(0xa134, { 0x0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x991d, gbc.sp());
        EXPECT(0x481e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa134));
        // 12 0362
        gbc.setState(0x93d8, 0x1539, 0x54d0, 0xba4e, 0x9026, 0x6e2a, 0x0, 0x0);
        gbc.writeMem(0x9026, { 0x0 });
        gbc.writeMem(0x93d8, { 0x12 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1539, gbc.sp());
        EXPECT(0x93d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0x9026));
        EXPECT(0x12, gbc.readMem(0x93d8));
        // 12 0363
        gbc.setState(0x6a17, 0x2a5c, 0x8ce0, 0xbe05, 0xaf8e, 0x6b1f, 0x0, 0x1);
        gbc.writeMem(0x6a17, { 0x12 });
        gbc.writeMem(0xaf8e, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2a5c, gbc.sp());
        EXPECT(0x6a18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xaf8e));
        // 12 0365
        gbc.setState(0x6719, 0x99e9, 0x8430, 0xacd1, 0x9807, 0x8cd8, 0x1, 0x1);
        gbc.writeMem(0x6719, { 0x12 });
        gbc.writeMem(0x9807, { 0x0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x99e9, gbc.sp());
        EXPECT(0x671a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0x9807));
        // 12 0368
        gbc.setState(0xd1ee, 0xca06, 0x5b40, 0x278f, 0xa941, 0xd7ac, 0x0, 0x0);
        gbc.writeMem(0xa941, { 0x0 });
        gbc.writeMem(0xd1ee, { 0x12 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xca06, gbc.sp());
        EXPECT(0xd1ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa941));
        EXPECT(0x12, gbc.readMem(0xd1ee));
        // 12 0369
        gbc.setState(0xee1a, 0x892e, 0x8830, 0x41be, 0x8182, 0x8fca, 0x0, 0x0);
        gbc.writeMem(0x8182, { 0x0 });
        gbc.writeMem(0xee1a, { 0x12 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x892e, gbc.sp());
        EXPECT(0xee1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8182));
        EXPECT(0x12, gbc.readMem(0xee1a));
        // 12 036A
        gbc.setState(0x13d1, 0xbec2, 0x8f30, 0xb3a, 0xd285, 0x1c4c, 0x1, 0x0);
        gbc.writeMem(0x13d1, { 0x12 });
        gbc.writeMem(0xd285, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xbec2, gbc.sp());
        EXPECT(0x13d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd285));
        // 12 036B
        gbc.setState(0x60be, 0xbe44, 0xfd10, 0x8144, 0x8b28, 0x3748, 0x1, 0x1);
        gbc.writeMem(0x60be, { 0x12 });
        gbc.writeMem(0x8b28, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbe44, gbc.sp());
        EXPECT(0x60bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0x8b28));
        // 12 0371
        gbc.setState(0x5b8d, 0x4753, 0xf420, 0xa082, 0xe8a8, 0x6a64, 0x1, 0x0);
        gbc.writeMem(0x5b8d, { 0x12 });
        gbc.writeMem(0xe8a8, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4753, gbc.sp());
        EXPECT(0x5b8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xe8a8));
        // 12 0372
        gbc.setState(0x4f10, 0xc9e9, 0xd2f0, 0xcc8d, 0x8722, 0xe418, 0x0, 0x0);
        gbc.writeMem(0x4f10, { 0x12 });
        gbc.writeMem(0x8722, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc9e9, gbc.sp());
        EXPECT(0x4f11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0x8722));
        // 12 0373
        gbc.setState(0x4b69, 0x2d56, 0x46e0, 0x318f, 0xf643, 0xfab8, 0x1, 0x0);
        gbc.writeMem(0x4b69, { 0x12 });
        gbc.writeMem(0xf643, { 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2d56, gbc.sp());
        EXPECT(0x4b6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xf643));
        // 12 0374
        gbc.setState(0xc94c, 0xf65c, 0x6bc0, 0x94c6, 0xd82e, 0xc0b5, 0x1, 0x1);
        gbc.writeMem(0xc94c, { 0x12 });
        gbc.writeMem(0xd82e, { 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf65c, gbc.sp());
        EXPECT(0xc94d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xc94c));
        EXPECT(0x6b, gbc.readMem(0xd82e));
        // 12 0375
        gbc.setState(0xcc5f, 0xdbeb, 0xa6b0, 0xe860, 0xb9fd, 0x29ce, 0x1, 0x0);
        gbc.writeMem(0xb9fd, { 0x0 });
        gbc.writeMem(0xcc5f, { 0x12 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xdbeb, gbc.sp());
        EXPECT(0xcc60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb9fd));
        EXPECT(0x12, gbc.readMem(0xcc5f));
        // 12 037A
        gbc.setState(0x735b, 0xbbe2, 0xade0, 0xed72, 0xcf8e, 0x739, 0x1, 0x1);
        gbc.writeMem(0x735b, { 0x12 });
        gbc.writeMem(0xcf8e, { 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xbbe2, gbc.sp());
        EXPECT(0x735c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xcf8e));
        // 12 037B
        gbc.setState(0x21fa, 0xf1b3, 0x77e0, 0x7514, 0xc3ed, 0x280b, 0x1, 0x1);
        gbc.writeMem(0x21fa, { 0x12 });
        gbc.writeMem(0xc3ed, { 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf1b3, gbc.sp());
        EXPECT(0x21fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xc3ed));
        // 12 037C
        gbc.setState(0xa69c, 0x1071, 0xe610, 0x2937, 0xf68c, 0xdad7, 0x0, 0x0);
        gbc.writeMem(0xa69c, { 0x12 });
        gbc.writeMem(0xf68c, { 0x0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1071, gbc.sp());
        EXPECT(0xa69d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xa69c));
        EXPECT(0xe6, gbc.readMem(0xf68c));
        // 12 037D
        gbc.setState(0x7e0f, 0xf4bc, 0xdef0, 0x91da, 0x9b7a, 0x5983, 0x1, 0x1);
        gbc.writeMem(0x7e0f, { 0x12 });
        gbc.writeMem(0x9b7a, { 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf4bc, gbc.sp());
        EXPECT(0x7e10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0x9b7a));
        // 12 037F
        gbc.setState(0x8b82, 0x319c, 0x8820, 0x63ec, 0x80b8, 0xec8b, 0x1, 0x0);
        gbc.writeMem(0x80b8, { 0x0 });
        gbc.writeMem(0x8b82, { 0x12 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x319c, gbc.sp());
        EXPECT(0x8b83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x80b8));
        EXPECT(0x12, gbc.readMem(0x8b82));
        // 12 0385
        gbc.setState(0x87c6, 0xcc1e, 0x56e0, 0xccb4, 0xf708, 0xb943, 0x1, 0x0);
        gbc.writeMem(0x87c6, { 0x12 });
        gbc.writeMem(0xf708, { 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xcc1e, gbc.sp());
        EXPECT(0x87c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x87c6));
        EXPECT(0x56, gbc.readMem(0xf708));
        // 12 0389
        gbc.setState(0xe3f1, 0xfda8, 0x6da0, 0x2911, 0xf39d, 0x416e, 0x1, 0x0);
        gbc.writeMem(0xe3f1, { 0x12 });
        gbc.writeMem(0xf39d, { 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xfda8, gbc.sp());
        EXPECT(0xe3f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xe3f1));
        EXPECT(0x6d, gbc.readMem(0xf39d));
        // 12 038B
        gbc.setState(0xbaf4, 0x3cc, 0xd8e0, 0x84fd, 0x9490, 0x39bb, 0x1, 0x1);
        gbc.writeMem(0x9490, { 0x0 });
        gbc.writeMem(0xbaf4, { 0x12 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3cc, gbc.sp());
        EXPECT(0xbaf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0x9490));
        EXPECT(0x12, gbc.readMem(0xbaf4));
        // 12 038C
        gbc.setState(0x9e94, 0xe43, 0xe0f0, 0xbee4, 0xd668, 0x30f1, 0x1, 0x1);
        gbc.writeMem(0x9e94, { 0x12 });
        gbc.writeMem(0xd668, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe43, gbc.sp());
        EXPECT(0x9e95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9e94));
        EXPECT(0xe0, gbc.readMem(0xd668));
        // 12 038E
        gbc.setState(0x6cb5, 0x3580, 0xb840, 0x1b70, 0xfb7d, 0xae6f, 0x0, 0x0);
        gbc.writeMem(0x6cb5, { 0x12 });
        gbc.writeMem(0xfb7d, { 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3580, gbc.sp());
        EXPECT(0x6cb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xfb7d));
        // 12 038F
        gbc.setState(0x727b, 0x7bbe, 0xcf10, 0xe0f7, 0xb4b6, 0x22c4, 0x1, 0x1);
        gbc.writeMem(0x727b, { 0x12 });
        gbc.writeMem(0xb4b6, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7bbe, gbc.sp());
        EXPECT(0x727c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xb4b6));
        // 12 0392
        gbc.setState(0x51d9, 0x9535, 0xc830, 0xc064, 0xef70, 0xe47c, 0x0, 0x1);
        gbc.writeMem(0x51d9, { 0x12 });
        gbc.writeMem(0xef70, { 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9535, gbc.sp());
        EXPECT(0x51da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xef70));
        // 12 0394
        gbc.setState(0xe8a9, 0xb88a, 0x5170, 0x3ac8, 0x831b, 0x212b, 0x0, 0x1);
        gbc.writeMem(0x831b, { 0x0 });
        gbc.writeMem(0xe8a9, { 0x12 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb88a, gbc.sp());
        EXPECT(0xe8aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x831b));
        EXPECT(0x12, gbc.readMem(0xe8a9));
        // 12 0395
        gbc.setState(0x603c, 0xa5fa, 0xe3b0, 0x25ec, 0xbb09, 0x4623, 0x0, 0x0);
        gbc.writeMem(0x603c, { 0x12 });
        gbc.writeMem(0xbb09, { 0x0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa5fa, gbc.sp());
        EXPECT(0x603d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xbb09));
        // 12 0396
        gbc.setState(0x1157, 0x817c, 0xa880, 0xfc97, 0x8c30, 0x30e9, 0x1, 0x1);
        gbc.writeMem(0x1157, { 0x12 });
        gbc.writeMem(0x8c30, { 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x817c, gbc.sp());
        EXPECT(0x1158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0x8c30));
        // 12 0398
        gbc.setState(0xbdee, 0xe1bb, 0x1e20, 0x823d, 0xe657, 0x7f1e, 0x0, 0x1);
        gbc.writeMem(0xbdee, { 0x12 });
        gbc.writeMem(0xe657, { 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe1bb, gbc.sp());
        EXPECT(0xbdef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xbdee));
        EXPECT(0x1e, gbc.readMem(0xe657));
        // 12 039A
        gbc.setState(0x6623, 0xe600, 0xb4f0, 0x142a, 0xe098, 0x623, 0x0, 0x0);
        gbc.writeMem(0x6623, { 0x12 });
        gbc.writeMem(0xe098, { 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe600, gbc.sp());
        EXPECT(0x6624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xe098));
        // 12 03A0
        gbc.setState(0x60e1, 0xee5b, 0x3e10, 0x403d, 0xbaf9, 0x938e, 0x1, 0x1);
        gbc.writeMem(0x60e1, { 0x12 });
        gbc.writeMem(0xbaf9, { 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xee5b, gbc.sp());
        EXPECT(0x60e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xbaf9));
        // 12 03A3
        gbc.setState(0x792d, 0xaaa, 0x32b0, 0xb43c, 0xe415, 0x378d, 0x1, 0x0);
        gbc.writeMem(0x792d, { 0x12 });
        gbc.writeMem(0xe415, { 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xaaa, gbc.sp());
        EXPECT(0x792e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xe415));
        // 12 03A6
        gbc.setState(0xba98, 0xbd2, 0xcf80, 0x8985, 0xf7e7, 0xd4e, 0x1, 0x0);
        gbc.writeMem(0xba98, { 0x12 });
        gbc.writeMem(0xf7e7, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xbd2, gbc.sp());
        EXPECT(0xba99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xba98));
        EXPECT(0xcf, gbc.readMem(0xf7e7));
        // 12 03A9
        gbc.setState(0xc259, 0x775, 0x5f50, 0xea09, 0x9f85, 0xc889, 0x1, 0x1);
        gbc.writeMem(0x9f85, { 0x0 });
        gbc.writeMem(0xc259, { 0x12 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x775, gbc.sp());
        EXPECT(0xc25a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0x9f85));
        EXPECT(0x12, gbc.readMem(0xc259));
        // 12 03AA
        gbc.setState(0x10e2, 0x8ad2, 0x2730, 0x6542, 0x9891, 0xf68c, 0x0, 0x0);
        gbc.writeMem(0x10e2, { 0x12 });
        gbc.writeMem(0x9891, { 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8ad2, gbc.sp());
        EXPECT(0x10e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9891));
        // 12 03B0
        gbc.setState(0x5215, 0x4c82, 0x4650, 0xe26e, 0x9aa8, 0xc8de, 0x0, 0x1);
        gbc.writeMem(0x5215, { 0x12 });
        gbc.writeMem(0x9aa8, { 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4c82, gbc.sp());
        EXPECT(0x5216, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0x9aa8));
        // 12 03B1
        gbc.setState(0x9f2b, 0xabfe, 0xe620, 0x625b, 0xbf8b, 0xa9fe, 0x0, 0x1);
        gbc.writeMem(0x9f2b, { 0x12 });
        gbc.writeMem(0xbf8b, { 0x0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xabfe, gbc.sp());
        EXPECT(0x9f2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9f2b));
        EXPECT(0xe6, gbc.readMem(0xbf8b));
        // 12 03B3
        gbc.setState(0xd3b0, 0x96b4, 0x8630, 0x7e5, 0xce4d, 0x4ec7, 0x1, 0x0);
        gbc.writeMem(0xce4d, { 0x0 });
        gbc.writeMem(0xd3b0, { 0x12 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x96b4, gbc.sp());
        EXPECT(0xd3b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xce4d));
        EXPECT(0x12, gbc.readMem(0xd3b0));
        // 12 03B4
        gbc.setState(0x5369, 0x1599, 0xc3f0, 0xa29c, 0xe970, 0xc64d, 0x1, 0x0);
        gbc.writeMem(0x5369, { 0x12 });
        gbc.writeMem(0xe970, { 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1599, gbc.sp());
        EXPECT(0x536a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe970));
        // 12 03B8
        gbc.setState(0xc4ff, 0x7f59, 0x6d50, 0x5778, 0xa992, 0xf28d, 0x1, 0x1);
        gbc.writeMem(0xa992, { 0x0 });
        gbc.writeMem(0xc4ff, { 0x12 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7f59, gbc.sp());
        EXPECT(0xc500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa992));
        EXPECT(0x12, gbc.readMem(0xc4ff));
        // 12 03BB
        gbc.setState(0xb7, 0x2bc5, 0x8b40, 0x26c6, 0xe939, 0xdb75, 0x1, 0x1);
        gbc.writeMem(0xb7, { 0x12 });
        gbc.writeMem(0xe939, { 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2bc5, gbc.sp());
        EXPECT(0xb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xe939));
        // 12 03BC
        gbc.setState(0xa4a4, 0x4c09, 0x1860, 0x97d4, 0xa273, 0x10, 0x0, 0x1);
        gbc.writeMem(0xa273, { 0x0 });
        gbc.writeMem(0xa4a4, { 0x12 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4c09, gbc.sp());
        EXPECT(0xa4a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xa273));
        EXPECT(0x12, gbc.readMem(0xa4a4));
        // 12 03BF
        gbc.setState(0xc272, 0x8df4, 0x5250, 0x82df, 0xd3fd, 0x5a97, 0x0, 0x1);
        gbc.writeMem(0xc272, { 0x12 });
        gbc.writeMem(0xd3fd, { 0x0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8df4, gbc.sp());
        EXPECT(0xc273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xc272));
        EXPECT(0x52, gbc.readMem(0xd3fd));
        // 12 03C0
        gbc.setState(0xc0c1, 0x9d34, 0x9e00, 0x8261, 0xc018, 0x1948, 0x0, 0x1);
        gbc.writeMem(0xc018, { 0x0 });
        gbc.writeMem(0xc0c1, { 0x12 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9d34, gbc.sp());
        EXPECT(0xc0c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc018));
        EXPECT(0x12, gbc.readMem(0xc0c1));
        // 12 03C1
        gbc.setState(0x14ed, 0x6277, 0xcc80, 0x51ad, 0x875e, 0xf18e, 0x1, 0x1);
        gbc.writeMem(0x14ed, { 0x12 });
        gbc.writeMem(0x875e, { 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6277, gbc.sp());
        EXPECT(0x14ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0x875e));
        // 12 03C4
        gbc.setState(0x3368, 0xc932, 0x9480, 0xb2b4, 0xaf29, 0x1aad, 0x0, 0x0);
        gbc.writeMem(0x3368, { 0x12 });
        gbc.writeMem(0xaf29, { 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc932, gbc.sp());
        EXPECT(0x3369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xaf29));
        // 12 03C7
        gbc.setState(0xa7cc, 0x6e14, 0x89c0, 0x28c5, 0xfd31, 0x2ad6, 0x1, 0x1);
        gbc.writeMem(0xa7cc, { 0x12 });
        gbc.writeMem(0xfd31, { 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6e14, gbc.sp());
        EXPECT(0xa7cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xa7cc));
        EXPECT(0x89, gbc.readMem(0xfd31));
        // 12 03C9
        gbc.setState(0x2696, 0x9b3e, 0x91d0, 0x354d, 0xe4c0, 0x2b04, 0x1, 0x0);
        gbc.writeMem(0x2696, { 0x12 });
        gbc.writeMem(0xe4c0, { 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9b3e, gbc.sp());
        EXPECT(0x2697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe4c0));
        // 12 03D1
        gbc.setState(0x1753, 0x5815, 0x9200, 0x7bd2, 0xcbba, 0x4e0d, 0x0, 0x0);
        gbc.writeMem(0x1753, { 0x12 });
        gbc.writeMem(0xcbba, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5815, gbc.sp());
        EXPECT(0x1754, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xcbba));
        // 12 03D3
        gbc.setState(0x9590, 0xbc68, 0xcde0, 0x76e1, 0x9ec1, 0xa6a7, 0x1, 0x0);
        gbc.writeMem(0x9590, { 0x12 });
        gbc.writeMem(0x9ec1, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xbc68, gbc.sp());
        EXPECT(0x9591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9590));
        EXPECT(0xcd, gbc.readMem(0x9ec1));
        // 12 03D5
        gbc.setState(0x4ce6, 0xb13e, 0x4b50, 0x670, 0xca53, 0x19b8, 0x0, 0x0);
        gbc.writeMem(0x4ce6, { 0x12 });
        gbc.writeMem(0xca53, { 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb13e, gbc.sp());
        EXPECT(0x4ce7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xca53));
        // 12 03D7
        gbc.setState(0x47b4, 0xdda2, 0x7340, 0x664d, 0xe9ec, 0x8343, 0x0, 0x0);
        gbc.writeMem(0x47b4, { 0x12 });
        gbc.writeMem(0xe9ec, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xdda2, gbc.sp());
        EXPECT(0x47b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xe9ec));
        // 12 03DA
        gbc.setState(0x3a8a, 0x5851, 0x2270, 0x3fea, 0xb494, 0xc303, 0x0, 0x1);
        gbc.writeMem(0x3a8a, { 0x12 });
        gbc.writeMem(0xb494, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5851, gbc.sp());
        EXPECT(0x3a8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xb494));
        // 12 03E4
        gbc.setState(0x8a62, 0xc4f7, 0xf050, 0xc44e, 0xce5b, 0x18a2, 0x0, 0x0);
        gbc.writeMem(0x8a62, { 0x12 });
        gbc.writeMem(0xce5b, { 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc4f7, gbc.sp());
        EXPECT(0x8a63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x8a62));
        EXPECT(0xf0, gbc.readMem(0xce5b));
        // 12 03E7
        gbc.setState(0x722f, 0xc45a, 0x9c80, 0xc3b7, 0xfde3, 0xf8b9, 0x1, 0x0);
        gbc.writeMem(0x722f, { 0x12 });
        gbc.writeMem(0xfde3, { 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc45a, gbc.sp());
        EXPECT(0x7230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xfde3));
    }
