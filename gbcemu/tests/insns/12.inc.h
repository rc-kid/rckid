    TEST(gbcemu, opcode_12) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 12 0005
        gbc.setState(0x8a4, 0xd5ad, 0xb1a0, 0x6df4, 0xfc1c, 0x5675, 0x0, 0x1);
        gbc.writeMem(0x8a4, { 0x12 });
        gbc.writeMem(0xfc1c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xd5ad);
        EXPECT(gbc.pc(), 0x8a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfc1c), 0xb1);
        // 12 0008
        gbc.setState(0xeb36, 0xe2ed, 0x2650, 0x50d5, 0xc785, 0xb001, 0x0, 0x0);
        gbc.writeMem(0xc785, { 0x0 });
        gbc.writeMem(0xeb36, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xe2ed);
        EXPECT(gbc.pc(), 0xeb37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc785), 0x26);
        EXPECT(gbc.readMem(0xeb36), 0x12);
        // 12 0009
        gbc.setState(0xc062, 0x416f, 0x980, 0x6095, 0xe8fc, 0x9a71, 0x1, 0x0);
        gbc.writeMem(0xc062, { 0x12 });
        gbc.writeMem(0xe8fc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x416f);
        EXPECT(gbc.pc(), 0xc063);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc062), 0x12);
        EXPECT(gbc.readMem(0xe8fc), 0x9);
        // 12 000C
        gbc.setState(0x6c5b, 0x2630, 0x7ab0, 0x46a5, 0xfe0c, 0x236, 0x0, 0x0);
        gbc.writeMem(0x6c5b, { 0x12 });
        gbc.writeMem(0xfe0c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x2630);
        EXPECT(gbc.pc(), 0x6c5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfe0c), 0x7a);
        // 12 000E
        gbc.setState(0x42c3, 0x9ea1, 0x88d0, 0x7e31, 0xf86f, 0x251e, 0x1, 0x0);
        gbc.writeMem(0x42c3, { 0x12 });
        gbc.writeMem(0xf86f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x9ea1);
        EXPECT(gbc.pc(), 0x42c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf86f), 0x88);
        // 12 0010
        gbc.setState(0xab3c, 0x1c78, 0x3040, 0xf9c2, 0xc548, 0x81fb, 0x1, 0x1);
        gbc.writeMem(0xab3c, { 0x12 });
        gbc.writeMem(0xc548, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x1c78);
        EXPECT(gbc.pc(), 0xab3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab3c), 0x12);
        EXPECT(gbc.readMem(0xc548), 0x30);
        // 12 0011
        gbc.setState(0xeec, 0xa0b8, 0xd2f0, 0xae1, 0x9a11, 0x66cb, 0x1, 0x1);
        gbc.writeMem(0xeec, { 0x12 });
        gbc.writeMem(0x9a11, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa0b8);
        EXPECT(gbc.pc(), 0xeed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a11), 0xd2);
        // 12 0012
        gbc.setState(0xe64e, 0xfd6f, 0xd940, 0xae5b, 0xe235, 0xe4c4, 0x0, 0x0);
        gbc.writeMem(0xe235, { 0x0 });
        gbc.writeMem(0xe64e, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xfd6f);
        EXPECT(gbc.pc(), 0xe64f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe235), 0xd9);
        EXPECT(gbc.readMem(0xe64e), 0x12);
        // 12 0013
        gbc.setState(0xbe, 0xaaa, 0x890, 0xaafd, 0xafa2, 0x1c4f, 0x0, 0x0);
        gbc.writeMem(0xbe, { 0x12 });
        gbc.writeMem(0xafa2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xaaa);
        EXPECT(gbc.pc(), 0xbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafa2), 0x8);
        // 12 0014
        gbc.setState(0x14e2, 0x6a31, 0xd290, 0xa93a, 0xb3f2, 0x3443, 0x0, 0x0);
        gbc.writeMem(0x14e2, { 0x12 });
        gbc.writeMem(0xb3f2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x6a31);
        EXPECT(gbc.pc(), 0x14e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3f2), 0xd2);
        // 12 0015
        gbc.setState(0x41f1, 0x722d, 0x55f0, 0x45e8, 0xafd3, 0xf1d2, 0x0, 0x1);
        gbc.writeMem(0x41f1, { 0x12 });
        gbc.writeMem(0xafd3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x722d);
        EXPECT(gbc.pc(), 0x41f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafd3), 0x55);
        // 12 0019
        gbc.setState(0x8414, 0xa25f, 0x2c30, 0x54a, 0x9706, 0x869d, 0x1, 0x1);
        gbc.writeMem(0x8414, { 0x12 });
        gbc.writeMem(0x9706, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa25f);
        EXPECT(gbc.pc(), 0x8415);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8414), 0x12);
        EXPECT(gbc.readMem(0x9706), 0x2c);
        // 12 001A
        gbc.setState(0x14ee, 0xac0e, 0x8470, 0x3370, 0xf5cd, 0xc63b, 0x1, 0x1);
        gbc.writeMem(0x14ee, { 0x12 });
        gbc.writeMem(0xf5cd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xac0e);
        EXPECT(gbc.pc(), 0x14ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf5cd), 0x84);
        // 12 001B
        gbc.setState(0xb151, 0x77cc, 0x6400, 0x53f, 0xf44b, 0x8342, 0x0, 0x1);
        gbc.writeMem(0xb151, { 0x12 });
        gbc.writeMem(0xf44b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x77cc);
        EXPECT(gbc.pc(), 0xb152);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb151), 0x12);
        EXPECT(gbc.readMem(0xf44b), 0x64);
        // 12 001C
        gbc.setState(0xf42, 0x4633, 0x7a60, 0x4e36, 0xcfd5, 0xe962, 0x0, 0x0);
        gbc.writeMem(0xf42, { 0x12 });
        gbc.writeMem(0xcfd5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4633);
        EXPECT(gbc.pc(), 0xf43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfd5), 0x7a);
        // 12 001D
        gbc.setState(0x9580, 0x9a11, 0x1c90, 0xded8, 0xb0f4, 0xf436, 0x0, 0x1);
        gbc.writeMem(0x9580, { 0x12 });
        gbc.writeMem(0xb0f4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x9a11);
        EXPECT(gbc.pc(), 0x9581);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9580), 0x12);
        EXPECT(gbc.readMem(0xb0f4), 0x1c);
        // 12 001E
        gbc.setState(0x9ce9, 0xb63b, 0xff90, 0x9646, 0xca33, 0xe29d, 0x0, 0x0);
        gbc.writeMem(0x9ce9, { 0x12 });
        gbc.writeMem(0xca33, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xb63b);
        EXPECT(gbc.pc(), 0x9cea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ce9), 0x12);
        EXPECT(gbc.readMem(0xca33), 0xff);
        // 12 001F
        gbc.setState(0x35ee, 0x9c22, 0x7f50, 0x7128, 0x89ad, 0xec72, 0x0, 0x0);
        gbc.writeMem(0x35ee, { 0x12 });
        gbc.writeMem(0x89ad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x9c22);
        EXPECT(gbc.pc(), 0x35ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89ad), 0x7f);
        // 12 0021
        gbc.setState(0x4d75, 0x2f37, 0x9350, 0xe095, 0xb616, 0x3401, 0x1, 0x0);
        gbc.writeMem(0x4d75, { 0x12 });
        gbc.writeMem(0xb616, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x2f37);
        EXPECT(gbc.pc(), 0x4d76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb616), 0x93);
        // 12 0022
        gbc.setState(0xe37, 0x88d3, 0x8ad0, 0x135c, 0xe180, 0x7973, 0x1, 0x0);
        gbc.writeMem(0xe37, { 0x12 });
        gbc.writeMem(0xe180, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x88d3);
        EXPECT(gbc.pc(), 0xe38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe180), 0x8a);
        // 12 0025
        gbc.setState(0xd99, 0x5998, 0xc130, 0x5e3e, 0xfd32, 0xc457, 0x1, 0x1);
        gbc.writeMem(0xd99, { 0x12 });
        gbc.writeMem(0xfd32, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x5998);
        EXPECT(gbc.pc(), 0xd9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfd32), 0xc1);
        // 12 0027
        gbc.setState(0x2bc3, 0x38e, 0x4630, 0xf1b, 0xb1ce, 0x7362, 0x1, 0x1);
        gbc.writeMem(0x2bc3, { 0x12 });
        gbc.writeMem(0xb1ce, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x38e);
        EXPECT(gbc.pc(), 0x2bc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1ce), 0x46);
        // 12 0028
        gbc.setState(0xafc6, 0x26b6, 0x92f0, 0xad34, 0xd771, 0x1ae1, 0x0, 0x0);
        gbc.writeMem(0xafc6, { 0x12 });
        gbc.writeMem(0xd771, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x26b6);
        EXPECT(gbc.pc(), 0xafc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafc6), 0x12);
        EXPECT(gbc.readMem(0xd771), 0x92);
        // 12 002D
        gbc.setState(0x14c0, 0xd1f4, 0x490, 0x1070, 0x8b99, 0xbac4, 0x1, 0x0);
        gbc.writeMem(0x14c0, { 0x12 });
        gbc.writeMem(0x8b99, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xd1f4);
        EXPECT(gbc.pc(), 0x14c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b99), 0x4);
        // 12 0030
        gbc.setState(0x66d, 0x7dae, 0x3640, 0x820e, 0x8815, 0xf273, 0x0, 0x0);
        gbc.writeMem(0x66d, { 0x12 });
        gbc.writeMem(0x8815, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x7dae);
        EXPECT(gbc.pc(), 0x66e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8815), 0x36);
        // 12 0031
        gbc.setState(0xe94, 0x3366, 0x1400, 0xc692, 0xc86f, 0x8651, 0x1, 0x0);
        gbc.writeMem(0xe94, { 0x12 });
        gbc.writeMem(0xc86f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x3366);
        EXPECT(gbc.pc(), 0xe95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc86f), 0x14);
        // 12 0032
        gbc.setState(0x360c, 0xef5b, 0xeaa0, 0xa3d9, 0xced4, 0x3fa, 0x0, 0x0);
        gbc.writeMem(0x360c, { 0x12 });
        gbc.writeMem(0xced4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xef5b);
        EXPECT(gbc.pc(), 0x360d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xced4), 0xea);
        // 12 0036
        gbc.setState(0x9aa2, 0x67fb, 0x5280, 0x741a, 0xe5ba, 0xbdcb, 0x1, 0x0);
        gbc.writeMem(0x9aa2, { 0x12 });
        gbc.writeMem(0xe5ba, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x67fb);
        EXPECT(gbc.pc(), 0x9aa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aa2), 0x12);
        EXPECT(gbc.readMem(0xe5ba), 0x52);
        // 12 003A
        gbc.setState(0xe1e8, 0xd6bb, 0x3610, 0x9d5b, 0xdda8, 0x7d65, 0x1, 0x0);
        gbc.writeMem(0xdda8, { 0x0 });
        gbc.writeMem(0xe1e8, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xd6bb);
        EXPECT(gbc.pc(), 0xe1e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdda8), 0x36);
        EXPECT(gbc.readMem(0xe1e8), 0x12);
        // 12 003B
        gbc.setState(0x4873, 0xe49a, 0x5700, 0x25fe, 0xa7b1, 0x299a, 0x1, 0x1);
        gbc.writeMem(0x4873, { 0x12 });
        gbc.writeMem(0xa7b1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xe49a);
        EXPECT(gbc.pc(), 0x4874);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7b1), 0x57);
        // 12 003C
        gbc.setState(0xef63, 0x6ab3, 0x2c70, 0x38ac, 0xe6ca, 0x2f2a, 0x0, 0x1);
        gbc.writeMem(0xe6ca, { 0x0 });
        gbc.writeMem(0xef63, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x6ab3);
        EXPECT(gbc.pc(), 0xef64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6ca), 0x2c);
        EXPECT(gbc.readMem(0xef63), 0x12);
        // 12 003F
        gbc.setState(0x5d2c, 0xe35b, 0x2430, 0xbf40, 0xaf45, 0xf088, 0x1, 0x1);
        gbc.writeMem(0x5d2c, { 0x12 });
        gbc.writeMem(0xaf45, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe35b);
        EXPECT(gbc.pc(), 0x5d2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf45), 0x24);
        // 12 0042
        gbc.setState(0x1142, 0xd15d, 0xd920, 0x74b8, 0xcbd0, 0x3f1b, 0x1, 0x0);
        gbc.writeMem(0x1142, { 0x12 });
        gbc.writeMem(0xcbd0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xd15d);
        EXPECT(gbc.pc(), 0x1143);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbd0), 0xd9);
        // 12 0043
        gbc.setState(0xd13e, 0xd320, 0xee40, 0x1ee2, 0x9d09, 0xe39, 0x1, 0x1);
        gbc.writeMem(0x9d09, { 0x0 });
        gbc.writeMem(0xd13e, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd320);
        EXPECT(gbc.pc(), 0xd13f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d09), 0xee);
        EXPECT(gbc.readMem(0xd13e), 0x12);
        // 12 0048
        gbc.setState(0x74a6, 0xa1dc, 0x7610, 0x765a, 0xe6da, 0x908f, 0x0, 0x1);
        gbc.writeMem(0x74a6, { 0x12 });
        gbc.writeMem(0xe6da, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa1dc);
        EXPECT(gbc.pc(), 0x74a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6da), 0x76);
        // 12 004A
        gbc.setState(0x1d4e, 0x562c, 0x9a50, 0x272e, 0xbed4, 0x3850, 0x0, 0x1);
        gbc.writeMem(0x1d4e, { 0x12 });
        gbc.writeMem(0xbed4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x562c);
        EXPECT(gbc.pc(), 0x1d4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbed4), 0x9a);
        // 12 004E
        gbc.setState(0xb8f1, 0x9b2b, 0x3f10, 0x638, 0xf04a, 0x97f3, 0x0, 0x0);
        gbc.writeMem(0xb8f1, { 0x12 });
        gbc.writeMem(0xf04a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x9b2b);
        EXPECT(gbc.pc(), 0xb8f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8f1), 0x12);
        EXPECT(gbc.readMem(0xf04a), 0x3f);
        // 12 0053
        gbc.setState(0x22af, 0xc576, 0xad10, 0xacac, 0x9810, 0x4c15, 0x1, 0x1);
        gbc.writeMem(0x22af, { 0x12 });
        gbc.writeMem(0x9810, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xc576);
        EXPECT(gbc.pc(), 0x22b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9810), 0xad);
        // 12 0055
        gbc.setState(0x49ee, 0x6bd7, 0x73d0, 0xc0b2, 0xa98d, 0x488e, 0x1, 0x1);
        gbc.writeMem(0x49ee, { 0x12 });
        gbc.writeMem(0xa98d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x6bd7);
        EXPECT(gbc.pc(), 0x49ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa98d), 0x73);
        // 12 0056
        gbc.setState(0xe992, 0x5d5b, 0x1c30, 0x374e, 0xb8a2, 0xebf9, 0x1, 0x0);
        gbc.writeMem(0xb8a2, { 0x0 });
        gbc.writeMem(0xe992, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x5d5b);
        EXPECT(gbc.pc(), 0xe993);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8a2), 0x1c);
        EXPECT(gbc.readMem(0xe992), 0x12);
        // 12 0058
        gbc.setState(0xaaca, 0x1ea8, 0xea00, 0xad6b, 0x9722, 0x167e, 0x0, 0x1);
        gbc.writeMem(0x9722, { 0x0 });
        gbc.writeMem(0xaaca, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x1ea8);
        EXPECT(gbc.pc(), 0xaacb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9722), 0xea);
        EXPECT(gbc.readMem(0xaaca), 0x12);
        // 12 0059
        gbc.setState(0x22a0, 0xf53a, 0x700, 0x2ea5, 0xe7c7, 0x4c26, 0x1, 0x0);
        gbc.writeMem(0x22a0, { 0x12 });
        gbc.writeMem(0xe7c7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf53a);
        EXPECT(gbc.pc(), 0x22a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7c7), 0x7);
        // 12 005A
        gbc.setState(0x5484, 0xb7da, 0x22e0, 0x8e0f, 0xe301, 0x2158, 0x1, 0x1);
        gbc.writeMem(0x5484, { 0x12 });
        gbc.writeMem(0xe301, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb7da);
        EXPECT(gbc.pc(), 0x5485);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe301), 0x22);
        // 12 005B
        gbc.setState(0xc3f1, 0x921d, 0x7b90, 0xc1f5, 0xa8d0, 0x46d8, 0x1, 0x1);
        gbc.writeMem(0xa8d0, { 0x0 });
        gbc.writeMem(0xc3f1, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x921d);
        EXPECT(gbc.pc(), 0xc3f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8d0), 0x7b);
        EXPECT(gbc.readMem(0xc3f1), 0x12);
        // 12 005C
        gbc.setState(0xef9c, 0x6747, 0x10d0, 0x6505, 0xb8f7, 0x2b1e, 0x0, 0x0);
        gbc.writeMem(0xb8f7, { 0x0 });
        gbc.writeMem(0xef9c, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6747);
        EXPECT(gbc.pc(), 0xef9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8f7), 0x10);
        EXPECT(gbc.readMem(0xef9c), 0x12);
        // 12 005F
        gbc.setState(0xd00d, 0xa9f8, 0xbdf0, 0xec04, 0x973d, 0x6752, 0x1, 0x1);
        gbc.writeMem(0x973d, { 0x0 });
        gbc.writeMem(0xd00d, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa9f8);
        EXPECT(gbc.pc(), 0xd00e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x973d), 0xbd);
        EXPECT(gbc.readMem(0xd00d), 0x12);
        // 12 0062
        gbc.setState(0xc775, 0x6500, 0x7690, 0x1341, 0xfd87, 0x5c73, 0x1, 0x1);
        gbc.writeMem(0xc775, { 0x12 });
        gbc.writeMem(0xfd87, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x6500);
        EXPECT(gbc.pc(), 0xc776);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc775), 0x12);
        EXPECT(gbc.readMem(0xfd87), 0x76);
        // 12 0063
        gbc.setState(0x9aa4, 0xe677, 0x58e0, 0xf29d, 0xbf96, 0xda5c, 0x1, 0x0);
        gbc.writeMem(0x9aa4, { 0x12 });
        gbc.writeMem(0xbf96, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xe677);
        EXPECT(gbc.pc(), 0x9aa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aa4), 0x12);
        EXPECT(gbc.readMem(0xbf96), 0x58);
        // 12 0064
        gbc.setState(0x9d42, 0xb025, 0x1c00, 0xcd91, 0x9aa9, 0xee17, 0x0, 0x0);
        gbc.writeMem(0x9aa9, { 0x0 });
        gbc.writeMem(0x9d42, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb025);
        EXPECT(gbc.pc(), 0x9d43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aa9), 0x1c);
        EXPECT(gbc.readMem(0x9d42), 0x12);
        // 12 0068
        gbc.setState(0xac8f, 0x13c6, 0xe720, 0x511, 0xc4fc, 0xa402, 0x0, 0x0);
        gbc.writeMem(0xac8f, { 0x12 });
        gbc.writeMem(0xc4fc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x13c6);
        EXPECT(gbc.pc(), 0xac90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac8f), 0x12);
        EXPECT(gbc.readMem(0xc4fc), 0xe7);
        // 12 0069
        gbc.setState(0xa3c, 0x12ce, 0x82e0, 0xb2f1, 0x8767, 0xa1f5, 0x0, 0x0);
        gbc.writeMem(0xa3c, { 0x12 });
        gbc.writeMem(0x8767, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x12ce);
        EXPECT(gbc.pc(), 0xa3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8767), 0x82);
        // 12 006A
        gbc.setState(0x482b, 0xe000, 0x3ef0, 0x75d8, 0xf28e, 0xdda, 0x1, 0x1);
        gbc.writeMem(0x482b, { 0x12 });
        gbc.writeMem(0xf28e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xe000);
        EXPECT(gbc.pc(), 0x482c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf28e), 0x3e);
        // 12 006D
        gbc.setState(0xcb6f, 0x48f1, 0x4af0, 0xcb7c, 0xcedf, 0x1a2d, 0x1, 0x1);
        gbc.writeMem(0xcb6f, { 0x12 });
        gbc.writeMem(0xcedf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x48f1);
        EXPECT(gbc.pc(), 0xcb70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb6f), 0x12);
        EXPECT(gbc.readMem(0xcedf), 0x4a);
        // 12 006E
        gbc.setState(0x84a4, 0x9b44, 0x14a0, 0x5c76, 0x80d9, 0xa5e5, 0x1, 0x0);
        gbc.writeMem(0x80d9, { 0x0 });
        gbc.writeMem(0x84a4, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x9b44);
        EXPECT(gbc.pc(), 0x84a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80d9), 0x14);
        EXPECT(gbc.readMem(0x84a4), 0x12);
        // 12 006F
        gbc.setState(0xde02, 0x750e, 0x45e0, 0x43bc, 0xad95, 0x292b, 0x0, 0x1);
        gbc.writeMem(0xad95, { 0x0 });
        gbc.writeMem(0xde02, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x750e);
        EXPECT(gbc.pc(), 0xde03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad95), 0x45);
        EXPECT(gbc.readMem(0xde02), 0x12);
        // 12 0072
        gbc.setState(0xb187, 0xbfd7, 0x1df0, 0xc68f, 0x823c, 0x2d16, 0x0, 0x1);
        gbc.writeMem(0x823c, { 0x0 });
        gbc.writeMem(0xb187, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xbfd7);
        EXPECT(gbc.pc(), 0xb188);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x823c), 0x1d);
        EXPECT(gbc.readMem(0xb187), 0x12);
        // 12 0073
        gbc.setState(0xa7a0, 0xc4a3, 0x7390, 0xe814, 0x8768, 0x9a85, 0x1, 0x1);
        gbc.writeMem(0x8768, { 0x0 });
        gbc.writeMem(0xa7a0, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xc4a3);
        EXPECT(gbc.pc(), 0xa7a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8768), 0x73);
        EXPECT(gbc.readMem(0xa7a0), 0x12);
        // 12 0075
        gbc.setState(0x9573, 0xab0b, 0x3830, 0xeb0d, 0xc732, 0x21fe, 0x0, 0x1);
        gbc.writeMem(0x9573, { 0x12 });
        gbc.writeMem(0xc732, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xab0b);
        EXPECT(gbc.pc(), 0x9574);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9573), 0x12);
        EXPECT(gbc.readMem(0xc732), 0x38);
        // 12 0079
        gbc.setState(0x23d5, 0x3115, 0xd290, 0x89fc, 0xf596, 0xc161, 0x0, 0x1);
        gbc.writeMem(0x23d5, { 0x12 });
        gbc.writeMem(0xf596, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3115);
        EXPECT(gbc.pc(), 0x23d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf596), 0xd2);
        // 12 007A
        gbc.setState(0xbb99, 0x8624, 0xf3c0, 0x59e6, 0xb94e, 0x51d6, 0x1, 0x0);
        gbc.writeMem(0xb94e, { 0x0 });
        gbc.writeMem(0xbb99, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x8624);
        EXPECT(gbc.pc(), 0xbb9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb94e), 0xf3);
        EXPECT(gbc.readMem(0xbb99), 0x12);
        // 12 007C
        gbc.setState(0x66a9, 0x960f, 0xa060, 0xcbd1, 0xd828, 0x382c, 0x1, 0x1);
        gbc.writeMem(0x66a9, { 0x12 });
        gbc.writeMem(0xd828, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x960f);
        EXPECT(gbc.pc(), 0x66aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd828), 0xa0);
        // 12 007E
        gbc.setState(0x1992, 0xcaef, 0xf250, 0xb629, 0xd96b, 0xc277, 0x1, 0x1);
        gbc.writeMem(0x1992, { 0x12 });
        gbc.writeMem(0xd96b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xcaef);
        EXPECT(gbc.pc(), 0x1993);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd96b), 0xf2);
        // 12 007F
        gbc.setState(0xb57e, 0x5753, 0xb370, 0x73b, 0x94d7, 0x764e, 0x1, 0x1);
        gbc.writeMem(0x94d7, { 0x0 });
        gbc.writeMem(0xb57e, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x5753);
        EXPECT(gbc.pc(), 0xb57f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94d7), 0xb3);
        EXPECT(gbc.readMem(0xb57e), 0x12);
        // 12 0080
        gbc.setState(0x1ea2, 0x36f6, 0x1240, 0xf185, 0xa85e, 0x2ea8, 0x0, 0x1);
        gbc.writeMem(0x1ea2, { 0x12 });
        gbc.writeMem(0xa85e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x36f6);
        EXPECT(gbc.pc(), 0x1ea3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa85e), 0x12);
        // 12 0082
        gbc.setState(0x99af, 0x2485, 0xd770, 0xebc4, 0xb51a, 0x2b2a, 0x1, 0x0);
        gbc.writeMem(0x99af, { 0x12 });
        gbc.writeMem(0xb51a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2485);
        EXPECT(gbc.pc(), 0x99b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99af), 0x12);
        EXPECT(gbc.readMem(0xb51a), 0xd7);
        // 12 0083
        gbc.setState(0xbd5, 0xaf3, 0x8630, 0x547b, 0xe2d0, 0x51f1, 0x0, 0x0);
        gbc.writeMem(0xbd5, { 0x12 });
        gbc.writeMem(0xe2d0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xaf3);
        EXPECT(gbc.pc(), 0xbd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2d0), 0x86);
        // 12 0084
        gbc.setState(0xbca3, 0xb2a5, 0xaac0, 0x81, 0xe621, 0x1d9a, 0x1, 0x1);
        gbc.writeMem(0xbca3, { 0x12 });
        gbc.writeMem(0xe621, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xb2a5);
        EXPECT(gbc.pc(), 0xbca4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbca3), 0x12);
        EXPECT(gbc.readMem(0xe621), 0xaa);
        // 12 0085
        gbc.setState(0x9a65, 0x743b, 0xd040, 0xe499, 0xc593, 0x601f, 0x1, 0x1);
        gbc.writeMem(0x9a65, { 0x12 });
        gbc.writeMem(0xc593, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x743b);
        EXPECT(gbc.pc(), 0x9a66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a65), 0x12);
        EXPECT(gbc.readMem(0xc593), 0xd0);
        // 12 0086
        gbc.setState(0xef28, 0xdf7a, 0x9e0, 0x8821, 0xa258, 0x7487, 0x1, 0x1);
        gbc.writeMem(0xa258, { 0x0 });
        gbc.writeMem(0xef28, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xdf7a);
        EXPECT(gbc.pc(), 0xef29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa258), 0x9);
        EXPECT(gbc.readMem(0xef28), 0x12);
        // 12 0087
        gbc.setState(0xca1f, 0xe3f0, 0x6c30, 0x8795, 0xab31, 0x2c51, 0x0, 0x0);
        gbc.writeMem(0xab31, { 0x0 });
        gbc.writeMem(0xca1f, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe3f0);
        EXPECT(gbc.pc(), 0xca20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab31), 0x6c);
        EXPECT(gbc.readMem(0xca1f), 0x12);
        // 12 008A
        gbc.setState(0x70a7, 0xea4e, 0xa680, 0x12b9, 0xf9ec, 0x922b, 0x1, 0x0);
        gbc.writeMem(0x70a7, { 0x12 });
        gbc.writeMem(0xf9ec, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xea4e);
        EXPECT(gbc.pc(), 0x70a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf9ec), 0xa6);
        // 12 008B
        gbc.setState(0x73e4, 0xbd98, 0x11f0, 0x13b7, 0xdec3, 0x12af, 0x0, 0x1);
        gbc.writeMem(0x73e4, { 0x12 });
        gbc.writeMem(0xdec3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xbd98);
        EXPECT(gbc.pc(), 0x73e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdec3), 0x11);
        // 12 008D
        gbc.setState(0x5a5c, 0xaa44, 0xb900, 0xa6d2, 0x8b69, 0x7365, 0x1, 0x1);
        gbc.writeMem(0x5a5c, { 0x12 });
        gbc.writeMem(0x8b69, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xaa44);
        EXPECT(gbc.pc(), 0x5a5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b69), 0xb9);
        // 12 008E
        gbc.setState(0x3cf5, 0x293f, 0x8810, 0x11d6, 0xee47, 0x73f7, 0x0, 0x1);
        gbc.writeMem(0x3cf5, { 0x12 });
        gbc.writeMem(0xee47, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x293f);
        EXPECT(gbc.pc(), 0x3cf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee47), 0x88);
        // 12 0092
        gbc.setState(0xabca, 0xc6f6, 0xe5c0, 0x2e02, 0xeb64, 0x5814, 0x1, 0x1);
        gbc.writeMem(0xabca, { 0x12 });
        gbc.writeMem(0xeb64, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xc6f6);
        EXPECT(gbc.pc(), 0xabcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabca), 0x12);
        EXPECT(gbc.readMem(0xeb64), 0xe5);
        // 12 0094
        gbc.setState(0x193b, 0xc2c5, 0xe590, 0x7df3, 0x9d87, 0x7872, 0x1, 0x1);
        gbc.writeMem(0x193b, { 0x12 });
        gbc.writeMem(0x9d87, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xc2c5);
        EXPECT(gbc.pc(), 0x193c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d87), 0xe5);
        // 12 0096
        gbc.setState(0x29f6, 0xea48, 0x16e0, 0xfc67, 0xd15f, 0x9039, 0x0, 0x1);
        gbc.writeMem(0x29f6, { 0x12 });
        gbc.writeMem(0xd15f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xea48);
        EXPECT(gbc.pc(), 0x29f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd15f), 0x16);
        // 12 0098
        gbc.setState(0x1152, 0x3baf, 0xe4f0, 0x8352, 0x8026, 0x108, 0x1, 0x1);
        gbc.writeMem(0x1152, { 0x12 });
        gbc.writeMem(0x8026, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x3baf);
        EXPECT(gbc.pc(), 0x1153);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8026), 0xe4);
        // 12 0099
        gbc.setState(0x73aa, 0xada8, 0x240, 0x76a9, 0x9f3c, 0x3f7f, 0x1, 0x0);
        gbc.writeMem(0x73aa, { 0x12 });
        gbc.writeMem(0x9f3c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xada8);
        EXPECT(gbc.pc(), 0x73ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f3c), 0x2);
        // 12 009C
        gbc.setState(0x7a67, 0xcb1e, 0x6cb0, 0xd211, 0xc92e, 0x965b, 0x1, 0x1);
        gbc.writeMem(0x7a67, { 0x12 });
        gbc.writeMem(0xc92e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xcb1e);
        EXPECT(gbc.pc(), 0x7a68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc92e), 0x6c);
        // 12 009F
        gbc.setState(0xeb7d, 0x52e0, 0x74e0, 0xec4, 0xe61b, 0xd751, 0x0, 0x1);
        gbc.writeMem(0xe61b, { 0x0 });
        gbc.writeMem(0xeb7d, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x52e0);
        EXPECT(gbc.pc(), 0xeb7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe61b), 0x74);
        EXPECT(gbc.readMem(0xeb7d), 0x12);
        // 12 00A0
        gbc.setState(0x12a7, 0x1615, 0xb720, 0x250b, 0x8f47, 0x344a, 0x0, 0x0);
        gbc.writeMem(0x12a7, { 0x12 });
        gbc.writeMem(0x8f47, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x1615);
        EXPECT(gbc.pc(), 0x12a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f47), 0xb7);
        // 12 00A2
        gbc.setState(0x9320, 0x83d4, 0xb780, 0x1624, 0xd2c0, 0xaaf3, 0x0, 0x0);
        gbc.writeMem(0x9320, { 0x12 });
        gbc.writeMem(0xd2c0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x83d4);
        EXPECT(gbc.pc(), 0x9321);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9320), 0x12);
        EXPECT(gbc.readMem(0xd2c0), 0xb7);
        // 12 00A4
        gbc.setState(0xd27c, 0x461a, 0x6640, 0x33f5, 0xfcc4, 0x205e, 0x1, 0x1);
        gbc.writeMem(0xd27c, { 0x12 });
        gbc.writeMem(0xfcc4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x461a);
        EXPECT(gbc.pc(), 0xd27d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd27c), 0x12);
        EXPECT(gbc.readMem(0xfcc4), 0x66);
        // 12 00A6
        gbc.setState(0x7de4, 0x9b06, 0x2280, 0x8bd8, 0xc3c5, 0x35c0, 0x1, 0x0);
        gbc.writeMem(0x7de4, { 0x12 });
        gbc.writeMem(0xc3c5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x9b06);
        EXPECT(gbc.pc(), 0x7de5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3c5), 0x22);
        // 12 00A7
        gbc.setState(0x463b, 0x701a, 0xdb30, 0x7379, 0xa74e, 0x1453, 0x1, 0x1);
        gbc.writeMem(0x463b, { 0x12 });
        gbc.writeMem(0xa74e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x701a);
        EXPECT(gbc.pc(), 0x463c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa74e), 0xdb);
        // 12 00A9
        gbc.setState(0xe03b, 0xb2b3, 0xcb40, 0xa52e, 0xc145, 0xccf1, 0x1, 0x1);
        gbc.writeMem(0xc145, { 0x0 });
        gbc.writeMem(0xe03b, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xb2b3);
        EXPECT(gbc.pc(), 0xe03c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc145), 0xcb);
        EXPECT(gbc.readMem(0xe03b), 0x12);
        // 12 00AA
        gbc.setState(0xe21c, 0x6486, 0x8660, 0x4cd9, 0xa47c, 0x903a, 0x0, 0x0);
        gbc.writeMem(0xa47c, { 0x0 });
        gbc.writeMem(0xe21c, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x6486);
        EXPECT(gbc.pc(), 0xe21d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa47c), 0x86);
        EXPECT(gbc.readMem(0xe21c), 0x12);
        // 12 00AE
        gbc.setState(0xd782, 0x2878, 0x2f10, 0xb9cd, 0xe158, 0xd339, 0x1, 0x1);
        gbc.writeMem(0xd782, { 0x12 });
        gbc.writeMem(0xe158, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2878);
        EXPECT(gbc.pc(), 0xd783);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd782), 0x12);
        EXPECT(gbc.readMem(0xe158), 0x2f);
        // 12 00AF
        gbc.setState(0x2cd6, 0x5295, 0xbb90, 0x762c, 0x9d90, 0x4c5, 0x1, 0x0);
        gbc.writeMem(0x2cd6, { 0x12 });
        gbc.writeMem(0x9d90, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x5295);
        EXPECT(gbc.pc(), 0x2cd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d90), 0xbb);
        // 12 00B6
        gbc.setState(0x8066, 0x2f5, 0x6b10, 0x196c, 0xcca8, 0x8b74, 0x0, 0x0);
        gbc.writeMem(0x8066, { 0x12 });
        gbc.writeMem(0xcca8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x2f5);
        EXPECT(gbc.pc(), 0x8067);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8066), 0x12);
        EXPECT(gbc.readMem(0xcca8), 0x6b);
        // 12 00B9
        gbc.setState(0x65e, 0xe726, 0xae20, 0xe3f0, 0xd96c, 0x43ac, 0x1, 0x1);
        gbc.writeMem(0x65e, { 0x12 });
        gbc.writeMem(0xd96c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xe726);
        EXPECT(gbc.pc(), 0x65f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd96c), 0xae);
        // 12 00BA
        gbc.setState(0xaa45, 0x73e6, 0xe210, 0x5a3f, 0x9f95, 0x866b, 0x0, 0x1);
        gbc.writeMem(0x9f95, { 0x0 });
        gbc.writeMem(0xaa45, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x73e6);
        EXPECT(gbc.pc(), 0xaa46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f95), 0xe2);
        EXPECT(gbc.readMem(0xaa45), 0x12);
        // 12 00BB
        gbc.setState(0x6b6, 0x988a, 0x9e70, 0x9b05, 0xeeca, 0x8704, 0x0, 0x0);
        gbc.writeMem(0x6b6, { 0x12 });
        gbc.writeMem(0xeeca, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x988a);
        EXPECT(gbc.pc(), 0x6b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeca), 0x9e);
        // 12 00BD
        gbc.setState(0x937b, 0x541c, 0x4010, 0x9b66, 0xbef0, 0xa676, 0x0, 0x0);
        gbc.writeMem(0x937b, { 0x12 });
        gbc.writeMem(0xbef0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x541c);
        EXPECT(gbc.pc(), 0x937c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x937b), 0x12);
        EXPECT(gbc.readMem(0xbef0), 0x40);
        // 12 00C0
        gbc.setState(0x65b9, 0x21c8, 0x560, 0x67c2, 0xaf99, 0x5324, 0x1, 0x0);
        gbc.writeMem(0x65b9, { 0x12 });
        gbc.writeMem(0xaf99, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x21c8);
        EXPECT(gbc.pc(), 0x65ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf99), 0x5);
        // 12 00C3
        gbc.setState(0x1945, 0x587, 0x5f40, 0x5352, 0xbab9, 0x89cf, 0x0, 0x0);
        gbc.writeMem(0x1945, { 0x12 });
        gbc.writeMem(0xbab9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x587);
        EXPECT(gbc.pc(), 0x1946);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbab9), 0x5f);
        // 12 00C5
        gbc.setState(0x8d49, 0x117f, 0xd1e0, 0xa777, 0xc2e7, 0x7d3e, 0x0, 0x1);
        gbc.writeMem(0x8d49, { 0x12 });
        gbc.writeMem(0xc2e7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x117f);
        EXPECT(gbc.pc(), 0x8d4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d49), 0x12);
        EXPECT(gbc.readMem(0xc2e7), 0xd1);
        // 12 00C9
        gbc.setState(0x2cae, 0xbb03, 0xb2d0, 0xe66c, 0xd67e, 0xcaaf, 0x1, 0x0);
        gbc.writeMem(0x2cae, { 0x12 });
        gbc.writeMem(0xd67e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xbb03);
        EXPECT(gbc.pc(), 0x2caf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd67e), 0xb2);
        // 12 00CA
        gbc.setState(0x2a39, 0xfbd3, 0x5450, 0x3d47, 0xbf40, 0x5120, 0x0, 0x1);
        gbc.writeMem(0x2a39, { 0x12 });
        gbc.writeMem(0xbf40, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xfbd3);
        EXPECT(gbc.pc(), 0x2a3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf40), 0x54);
        // 12 00CB
        gbc.setState(0x4a26, 0x14c8, 0x2030, 0x24d1, 0xfdc8, 0x5f03, 0x0, 0x0);
        gbc.writeMem(0x4a26, { 0x12 });
        gbc.writeMem(0xfdc8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x14c8);
        EXPECT(gbc.pc(), 0x4a27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfdc8), 0x20);
        // 12 00CC
        gbc.setState(0x37ff, 0x5304, 0xafa0, 0x42d8, 0x80cd, 0x74b7, 0x1, 0x0);
        gbc.writeMem(0x37ff, { 0x12 });
        gbc.writeMem(0x80cd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x5304);
        EXPECT(gbc.pc(), 0x3800);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80cd), 0xaf);
        // 12 00CD
        gbc.setState(0x416e, 0x60c1, 0x44b0, 0x3d4f, 0xab7d, 0x9a70, 0x0, 0x1);
        gbc.writeMem(0x416e, { 0x12 });
        gbc.writeMem(0xab7d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x60c1);
        EXPECT(gbc.pc(), 0x416f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab7d), 0x44);
        // 12 00D0
        gbc.setState(0x5c1a, 0x2943, 0xd660, 0x9c36, 0x830c, 0x4bcf, 0x1, 0x0);
        gbc.writeMem(0x5c1a, { 0x12 });
        gbc.writeMem(0x830c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2943);
        EXPECT(gbc.pc(), 0x5c1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x830c), 0xd6);
        // 12 00D3
        gbc.setState(0x9438, 0xbe64, 0x96b0, 0xf8ce, 0xdcf8, 0x2021, 0x1, 0x1);
        gbc.writeMem(0x9438, { 0x12 });
        gbc.writeMem(0xdcf8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xbe64);
        EXPECT(gbc.pc(), 0x9439);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9438), 0x12);
        EXPECT(gbc.readMem(0xdcf8), 0x96);
        // 12 00D8
        gbc.setState(0x1bab, 0x893e, 0xda40, 0xba78, 0x90c7, 0x9727, 0x1, 0x1);
        gbc.writeMem(0x1bab, { 0x12 });
        gbc.writeMem(0x90c7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x893e);
        EXPECT(gbc.pc(), 0x1bac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90c7), 0xda);
        // 12 00D9
        gbc.setState(0xd698, 0xb2c1, 0xb160, 0x5ffb, 0x9f5f, 0x63cf, 0x0, 0x1);
        gbc.writeMem(0x9f5f, { 0x0 });
        gbc.writeMem(0xd698, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xb2c1);
        EXPECT(gbc.pc(), 0xd699);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f5f), 0xb1);
        EXPECT(gbc.readMem(0xd698), 0x12);
        // 12 00DA
        gbc.setState(0x66f7, 0xe887, 0x8cb0, 0x4554, 0xddae, 0x81ba, 0x1, 0x0);
        gbc.writeMem(0x66f7, { 0x12 });
        gbc.writeMem(0xddae, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xe887);
        EXPECT(gbc.pc(), 0x66f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddae), 0x8c);
        // 12 00DE
        gbc.setState(0xb277, 0xbdb1, 0x7560, 0x350a, 0xe0c7, 0x354c, 0x1, 0x1);
        gbc.writeMem(0xb277, { 0x12 });
        gbc.writeMem(0xe0c7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xbdb1);
        EXPECT(gbc.pc(), 0xb278);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb277), 0x12);
        EXPECT(gbc.readMem(0xe0c7), 0x75);
        // 12 00DF
        gbc.setState(0x178f, 0xd6d3, 0x64c0, 0xe9c5, 0xccf9, 0xd0c1, 0x1, 0x1);
        gbc.writeMem(0x178f, { 0x12 });
        gbc.writeMem(0xccf9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xd6d3);
        EXPECT(gbc.pc(), 0x1790);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccf9), 0x64);
        // 12 00E0
        gbc.setState(0x7997, 0x21dc, 0x2ea0, 0x5be6, 0xc8f1, 0x1419, 0x0, 0x0);
        gbc.writeMem(0x7997, { 0x12 });
        gbc.writeMem(0xc8f1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x21dc);
        EXPECT(gbc.pc(), 0x7998);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8f1), 0x2e);
        // 12 00E2
        gbc.setState(0xeb8f, 0x4b57, 0xab70, 0xf071, 0xb187, 0x3886, 0x0, 0x0);
        gbc.writeMem(0xb187, { 0x0 });
        gbc.writeMem(0xeb8f, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4b57);
        EXPECT(gbc.pc(), 0xeb90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb187), 0xab);
        EXPECT(gbc.readMem(0xeb8f), 0x12);
        // 12 00E3
        gbc.setState(0xc3ef, 0x6e6, 0x2560, 0x40a9, 0xc269, 0x9534, 0x0, 0x0);
        gbc.writeMem(0xc269, { 0x0 });
        gbc.writeMem(0xc3ef, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x6e6);
        EXPECT(gbc.pc(), 0xc3f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc269), 0x25);
        EXPECT(gbc.readMem(0xc3ef), 0x12);
        // 12 00E4
        gbc.setState(0xba6e, 0xcb28, 0xba20, 0xa979, 0xc9bd, 0x6c9f, 0x0, 0x1);
        gbc.writeMem(0xba6e, { 0x12 });
        gbc.writeMem(0xc9bd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xcb28);
        EXPECT(gbc.pc(), 0xba6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba6e), 0x12);
        EXPECT(gbc.readMem(0xc9bd), 0xba);
        // 12 00E5
        gbc.setState(0x75c9, 0x1f5b, 0x8fc0, 0xda72, 0xdccd, 0xc405, 0x0, 0x0);
        gbc.writeMem(0x75c9, { 0x12 });
        gbc.writeMem(0xdccd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x1f5b);
        EXPECT(gbc.pc(), 0x75ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdccd), 0x8f);
        // 12 00E7
        gbc.setState(0x6673, 0x3ae6, 0xb380, 0x92d9, 0xf073, 0x931f, 0x0, 0x1);
        gbc.writeMem(0x6673, { 0x12 });
        gbc.writeMem(0xf073, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x3ae6);
        EXPECT(gbc.pc(), 0x6674);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf073), 0xb3);
        // 12 00E9
        gbc.setState(0xa021, 0xe2ad, 0x9280, 0xe62d, 0x84d3, 0xf205, 0x0, 0x0);
        gbc.writeMem(0x84d3, { 0x0 });
        gbc.writeMem(0xa021, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xe2ad);
        EXPECT(gbc.pc(), 0xa022);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84d3), 0x92);
        EXPECT(gbc.readMem(0xa021), 0x12);
        // 12 00EA
        gbc.setState(0xed6b, 0x99ef, 0xce00, 0x6c2b, 0xadf7, 0xd461, 0x0, 0x0);
        gbc.writeMem(0xadf7, { 0x0 });
        gbc.writeMem(0xed6b, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x99ef);
        EXPECT(gbc.pc(), 0xed6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadf7), 0xce);
        EXPECT(gbc.readMem(0xed6b), 0x12);
        // 12 00EF
        gbc.setState(0x5878, 0x54b3, 0xcbf0, 0x1efd, 0xbd0f, 0x3f73, 0x0, 0x1);
        gbc.writeMem(0x5878, { 0x12 });
        gbc.writeMem(0xbd0f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x54b3);
        EXPECT(gbc.pc(), 0x5879);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd0f), 0xcb);
        // 12 00F0
        gbc.setState(0x8eef, 0x1957, 0x1bd0, 0x9f5, 0xba6c, 0x750f, 0x1, 0x1);
        gbc.writeMem(0x8eef, { 0x12 });
        gbc.writeMem(0xba6c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x1957);
        EXPECT(gbc.pc(), 0x8ef0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eef), 0x12);
        EXPECT(gbc.readMem(0xba6c), 0x1b);
        // 12 00F5
        gbc.setState(0x5af8, 0x5bcb, 0x770, 0x7912, 0xbdc8, 0x28c8, 0x0, 0x0);
        gbc.writeMem(0x5af8, { 0x12 });
        gbc.writeMem(0xbdc8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x5bcb);
        EXPECT(gbc.pc(), 0x5af9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdc8), 0x7);
        // 12 00F6
        gbc.setState(0x90c4, 0xf1b7, 0x6370, 0x64db, 0xf209, 0x2df4, 0x1, 0x0);
        gbc.writeMem(0x90c4, { 0x12 });
        gbc.writeMem(0xf209, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xf1b7);
        EXPECT(gbc.pc(), 0x90c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90c4), 0x12);
        EXPECT(gbc.readMem(0xf209), 0x63);
        // 12 00F9
        gbc.setState(0xc38d, 0x9a47, 0xfdf0, 0xb0b3, 0x97c4, 0x7c81, 0x0, 0x1);
        gbc.writeMem(0x97c4, { 0x0 });
        gbc.writeMem(0xc38d, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x9a47);
        EXPECT(gbc.pc(), 0xc38e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97c4), 0xfd);
        EXPECT(gbc.readMem(0xc38d), 0x12);
        // 12 00FA
        gbc.setState(0x7a3e, 0x56f7, 0xe5f0, 0x6d66, 0x9505, 0x75ff, 0x0, 0x1);
        gbc.writeMem(0x7a3e, { 0x12 });
        gbc.writeMem(0x9505, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x56f7);
        EXPECT(gbc.pc(), 0x7a3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9505), 0xe5);
        // 12 00FC
        gbc.setState(0x870e, 0xeaf2, 0x74d0, 0x5de, 0xab80, 0x942e, 0x1, 0x0);
        gbc.writeMem(0x870e, { 0x12 });
        gbc.writeMem(0xab80, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xeaf2);
        EXPECT(gbc.pc(), 0x870f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x870e), 0x12);
        EXPECT(gbc.readMem(0xab80), 0x74);
        // 12 00FF
        gbc.setState(0x5cf8, 0xb650, 0x9060, 0x202c, 0xb72b, 0x7f38, 0x0, 0x1);
        gbc.writeMem(0x5cf8, { 0x12 });
        gbc.writeMem(0xb72b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb650);
        EXPECT(gbc.pc(), 0x5cf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb72b), 0x90);
        // 12 0101
        gbc.setState(0xc294, 0x69a, 0x8c00, 0xd500, 0xe81a, 0xcda7, 0x1, 0x1);
        gbc.writeMem(0xc294, { 0x12 });
        gbc.writeMem(0xe81a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x69a);
        EXPECT(gbc.pc(), 0xc295);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc294), 0x12);
        EXPECT(gbc.readMem(0xe81a), 0x8c);
        // 12 0103
        gbc.setState(0x4cbc, 0x6c66, 0xbfc0, 0xcc2f, 0xc310, 0xc747, 0x0, 0x1);
        gbc.writeMem(0x4cbc, { 0x12 });
        gbc.writeMem(0xc310, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x6c66);
        EXPECT(gbc.pc(), 0x4cbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc310), 0xbf);
        // 12 0104
        gbc.setState(0x5bf8, 0xf797, 0xdb0, 0x8667, 0xaab3, 0xfb51, 0x1, 0x1);
        gbc.writeMem(0x5bf8, { 0x12 });
        gbc.writeMem(0xaab3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf797);
        EXPECT(gbc.pc(), 0x5bf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaab3), 0xd);
        // 12 0108
        gbc.setState(0xd1c1, 0x4c44, 0xdb10, 0x68bc, 0xe716, 0xd973, 0x0, 0x0);
        gbc.writeMem(0xd1c1, { 0x12 });
        gbc.writeMem(0xe716, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x4c44);
        EXPECT(gbc.pc(), 0xd1c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1c1), 0x12);
        EXPECT(gbc.readMem(0xe716), 0xdb);
        // 12 0109
        gbc.setState(0x9530, 0x4a5d, 0x27c0, 0x6100, 0xc5cb, 0xc210, 0x0, 0x0);
        gbc.writeMem(0x9530, { 0x12 });
        gbc.writeMem(0xc5cb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x4a5d);
        EXPECT(gbc.pc(), 0x9531);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9530), 0x12);
        EXPECT(gbc.readMem(0xc5cb), 0x27);
        // 12 010B
        gbc.setState(0x10be, 0xe79a, 0xe870, 0x9e24, 0x999c, 0x3cca, 0x1, 0x1);
        gbc.writeMem(0x10be, { 0x12 });
        gbc.writeMem(0x999c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xe79a);
        EXPECT(gbc.pc(), 0x10bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x999c), 0xe8);
        // 12 010C
        gbc.setState(0xd33c, 0xe297, 0x5ee0, 0xe8d, 0xf828, 0x9274, 0x0, 0x1);
        gbc.writeMem(0xd33c, { 0x12 });
        gbc.writeMem(0xf828, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xe297);
        EXPECT(gbc.pc(), 0xd33d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd33c), 0x12);
        EXPECT(gbc.readMem(0xf828), 0x5e);
        // 12 010F
        gbc.setState(0x9865, 0xeb81, 0xcd20, 0x68f0, 0xcab8, 0xe71b, 0x0, 0x0);
        gbc.writeMem(0x9865, { 0x12 });
        gbc.writeMem(0xcab8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xeb81);
        EXPECT(gbc.pc(), 0x9866);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9865), 0x12);
        EXPECT(gbc.readMem(0xcab8), 0xcd);
        // 12 0112
        gbc.setState(0xcf02, 0xd08f, 0xeb00, 0x14ef, 0xb4f1, 0xb571, 0x1, 0x0);
        gbc.writeMem(0xb4f1, { 0x0 });
        gbc.writeMem(0xcf02, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xd08f);
        EXPECT(gbc.pc(), 0xcf03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4f1), 0xeb);
        EXPECT(gbc.readMem(0xcf02), 0x12);
        // 12 0114
        gbc.setState(0x7e80, 0x90bc, 0x9460, 0x6e1, 0xb240, 0xa851, 0x1, 0x1);
        gbc.writeMem(0x7e80, { 0x12 });
        gbc.writeMem(0xb240, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x90bc);
        EXPECT(gbc.pc(), 0x7e81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb240), 0x94);
        // 12 0115
        gbc.setState(0xdc58, 0x331, 0xb8e0, 0xce51, 0xd50d, 0xa95, 0x1, 0x1);
        gbc.writeMem(0xd50d, { 0x0 });
        gbc.writeMem(0xdc58, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x331);
        EXPECT(gbc.pc(), 0xdc59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd50d), 0xb8);
        EXPECT(gbc.readMem(0xdc58), 0x12);
        // 12 0118
        gbc.setState(0xc8cc, 0x5e65, 0xeec0, 0x5f46, 0xbabc, 0x8b5a, 0x0, 0x0);
        gbc.writeMem(0xbabc, { 0x0 });
        gbc.writeMem(0xc8cc, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x5e65);
        EXPECT(gbc.pc(), 0xc8cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbabc), 0xee);
        EXPECT(gbc.readMem(0xc8cc), 0x12);
        // 12 011B
        gbc.setState(0x7c29, 0x4282, 0xf1f0, 0xff06, 0xf65e, 0x2097, 0x1, 0x0);
        gbc.writeMem(0x7c29, { 0x12 });
        gbc.writeMem(0xf65e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x4282);
        EXPECT(gbc.pc(), 0x7c2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf65e), 0xf1);
        // 12 011D
        gbc.setState(0xe489, 0x6fb, 0x2f60, 0x79a9, 0xf5ea, 0xda1c, 0x1, 0x0);
        gbc.writeMem(0xe489, { 0x12 });
        gbc.writeMem(0xf5ea, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x6fb);
        EXPECT(gbc.pc(), 0xe48a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe489), 0x12);
        EXPECT(gbc.readMem(0xf5ea), 0x2f);
        // 12 0123
        gbc.setState(0x6b96, 0x1343, 0xb1b0, 0xf51d, 0xcd1b, 0x4081, 0x0, 0x0);
        gbc.writeMem(0x6b96, { 0x12 });
        gbc.writeMem(0xcd1b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x1343);
        EXPECT(gbc.pc(), 0x6b97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd1b), 0xb1);
        // 12 0126
        gbc.setState(0x9ee0, 0x231d, 0x75c0, 0x9ab8, 0x99bb, 0x24db, 0x1, 0x0);
        gbc.writeMem(0x99bb, { 0x0 });
        gbc.writeMem(0x9ee0, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x231d);
        EXPECT(gbc.pc(), 0x9ee1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99bb), 0x75);
        EXPECT(gbc.readMem(0x9ee0), 0x12);
        // 12 012B
        gbc.setState(0xaed3, 0x54ec, 0xe1c0, 0x92, 0xc732, 0x9af6, 0x0, 0x1);
        gbc.writeMem(0xaed3, { 0x12 });
        gbc.writeMem(0xc732, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x54ec);
        EXPECT(gbc.pc(), 0xaed4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaed3), 0x12);
        EXPECT(gbc.readMem(0xc732), 0xe1);
        // 12 012F
        gbc.setState(0xc028, 0xcd5e, 0x9210, 0xf465, 0xab23, 0x3066, 0x0, 0x0);
        gbc.writeMem(0xab23, { 0x0 });
        gbc.writeMem(0xc028, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xcd5e);
        EXPECT(gbc.pc(), 0xc029);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab23), 0x92);
        EXPECT(gbc.readMem(0xc028), 0x12);
        // 12 0131
        gbc.setState(0xc085, 0xdb8e, 0x9da0, 0x8447, 0x92d5, 0xc96a, 0x0, 0x0);
        gbc.writeMem(0x92d5, { 0x0 });
        gbc.writeMem(0xc085, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xdb8e);
        EXPECT(gbc.pc(), 0xc086);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92d5), 0x9d);
        EXPECT(gbc.readMem(0xc085), 0x12);
        // 12 0135
        gbc.setState(0xb0f4, 0x8bda, 0x750, 0x7cd, 0xe549, 0xde63, 0x0, 0x0);
        gbc.writeMem(0xb0f4, { 0x12 });
        gbc.writeMem(0xe549, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x8bda);
        EXPECT(gbc.pc(), 0xb0f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0f4), 0x12);
        EXPECT(gbc.readMem(0xe549), 0x7);
        // 12 0138
        gbc.setState(0xee96, 0xbf0f, 0xfc30, 0xc0e8, 0xd499, 0x6ff2, 0x0, 0x1);
        gbc.writeMem(0xd499, { 0x0 });
        gbc.writeMem(0xee96, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xbf0f);
        EXPECT(gbc.pc(), 0xee97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd499), 0xfc);
        EXPECT(gbc.readMem(0xee96), 0x12);
        // 12 0139
        gbc.setState(0x6df2, 0xaf96, 0xde20, 0xfba9, 0x8916, 0x6e4f, 0x1, 0x0);
        gbc.writeMem(0x6df2, { 0x12 });
        gbc.writeMem(0x8916, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xaf96);
        EXPECT(gbc.pc(), 0x6df3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8916), 0xde);
        // 12 013B
        gbc.setState(0xbfda, 0xcb36, 0xc180, 0xcbc0, 0xb920, 0xbda4, 0x0, 0x0);
        gbc.writeMem(0xb920, { 0x0 });
        gbc.writeMem(0xbfda, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xcb36);
        EXPECT(gbc.pc(), 0xbfdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb920), 0xc1);
        EXPECT(gbc.readMem(0xbfda), 0x12);
        // 12 013C
        gbc.setState(0xc174, 0xa68f, 0x3620, 0x8844, 0x9119, 0x9097, 0x0, 0x1);
        gbc.writeMem(0x9119, { 0x0 });
        gbc.writeMem(0xc174, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xa68f);
        EXPECT(gbc.pc(), 0xc175);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9119), 0x36);
        EXPECT(gbc.readMem(0xc174), 0x12);
        // 12 013D
        gbc.setState(0xdf16, 0x9a3a, 0x23a0, 0x572d, 0x8d01, 0x1dbe, 0x0, 0x1);
        gbc.writeMem(0x8d01, { 0x0 });
        gbc.writeMem(0xdf16, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x9a3a);
        EXPECT(gbc.pc(), 0xdf17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d01), 0x23);
        EXPECT(gbc.readMem(0xdf16), 0x12);
        // 12 013F
        gbc.setState(0x79d7, 0x1d99, 0x9c80, 0x2efd, 0xbbd9, 0x958a, 0x1, 0x0);
        gbc.writeMem(0x79d7, { 0x12 });
        gbc.writeMem(0xbbd9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x1d99);
        EXPECT(gbc.pc(), 0x79d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbd9), 0x9c);
        // 12 0140
        gbc.setState(0x950e, 0xe827, 0xcd10, 0x31c8, 0xd125, 0x55f7, 0x1, 0x0);
        gbc.writeMem(0x950e, { 0x12 });
        gbc.writeMem(0xd125, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xe827);
        EXPECT(gbc.pc(), 0x950f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x950e), 0x12);
        EXPECT(gbc.readMem(0xd125), 0xcd);
        // 12 0141
        gbc.setState(0xf7a, 0x5716, 0x630, 0x3b90, 0xe94d, 0x5951, 0x0, 0x1);
        gbc.writeMem(0xf7a, { 0x12 });
        gbc.writeMem(0xe94d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x5716);
        EXPECT(gbc.pc(), 0xf7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe94d), 0x6);
        // 12 0142
        gbc.setState(0xc0ab, 0x141a, 0x9610, 0x110b, 0x8c03, 0xe87a, 0x0, 0x0);
        gbc.writeMem(0x8c03, { 0x0 });
        gbc.writeMem(0xc0ab, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x141a);
        EXPECT(gbc.pc(), 0xc0ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c03), 0x96);
        EXPECT(gbc.readMem(0xc0ab), 0x12);
        // 12 0143
        gbc.setState(0x343c, 0x8d1f, 0x7220, 0xeb04, 0xb390, 0xef91, 0x1, 0x1);
        gbc.writeMem(0x343c, { 0x12 });
        gbc.writeMem(0xb390, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x8d1f);
        EXPECT(gbc.pc(), 0x343d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb390), 0x72);
        // 12 0146
        gbc.setState(0xe580, 0x1dda, 0xb620, 0x938, 0xe174, 0x760d, 0x0, 0x1);
        gbc.writeMem(0xe174, { 0x0 });
        gbc.writeMem(0xe580, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x1dda);
        EXPECT(gbc.pc(), 0xe581);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe174), 0xb6);
        EXPECT(gbc.readMem(0xe580), 0x12);
        // 12 0149
        gbc.setState(0xdd30, 0xac03, 0xe5c0, 0xa557, 0xeb0e, 0xdff7, 0x1, 0x0);
        gbc.writeMem(0xdd30, { 0x12 });
        gbc.writeMem(0xeb0e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xac03);
        EXPECT(gbc.pc(), 0xdd31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd30), 0x12);
        EXPECT(gbc.readMem(0xeb0e), 0xe5);
        // 12 014A
        gbc.setState(0x9cc4, 0x4bc3, 0xd6c0, 0x4acb, 0xd416, 0x140d, 0x0, 0x1);
        gbc.writeMem(0x9cc4, { 0x12 });
        gbc.writeMem(0xd416, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x4bc3);
        EXPECT(gbc.pc(), 0x9cc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cc4), 0x12);
        EXPECT(gbc.readMem(0xd416), 0xd6);
        // 12 014B
        gbc.setState(0xc5d0, 0x1e08, 0x4600, 0xf05a, 0xd84f, 0xb35d, 0x0, 0x1);
        gbc.writeMem(0xc5d0, { 0x12 });
        gbc.writeMem(0xd84f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x1e08);
        EXPECT(gbc.pc(), 0xc5d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5d0), 0x12);
        EXPECT(gbc.readMem(0xd84f), 0x46);
        // 12 014E
        gbc.setState(0x5f2c, 0x2c25, 0xc9f0, 0x61b7, 0xdc5c, 0x8255, 0x1, 0x1);
        gbc.writeMem(0x5f2c, { 0x12 });
        gbc.writeMem(0xdc5c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x2c25);
        EXPECT(gbc.pc(), 0x5f2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc5c), 0xc9);
        // 12 0150
        gbc.setState(0x753c, 0xe080, 0x8500, 0x6b0, 0xec74, 0x20fd, 0x1, 0x0);
        gbc.writeMem(0x753c, { 0x12 });
        gbc.writeMem(0xec74, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xe080);
        EXPECT(gbc.pc(), 0x753d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec74), 0x85);
        // 12 0151
        gbc.setState(0xe259, 0xd865, 0x8a80, 0x6f91, 0xc7ac, 0x6d2b, 0x1, 0x1);
        gbc.writeMem(0xc7ac, { 0x0 });
        gbc.writeMem(0xe259, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xd865);
        EXPECT(gbc.pc(), 0xe25a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7ac), 0x8a);
        EXPECT(gbc.readMem(0xe259), 0x12);
        // 12 0153
        gbc.setState(0x2870, 0xddda, 0x92d0, 0x9232, 0xf742, 0xe389, 0x1, 0x1);
        gbc.writeMem(0x2870, { 0x12 });
        gbc.writeMem(0xf742, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xddda);
        EXPECT(gbc.pc(), 0x2871);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf742), 0x92);
        // 12 0154
        gbc.setState(0xa503, 0x1319, 0xdc90, 0x3100, 0xc30a, 0x62b6, 0x0, 0x1);
        gbc.writeMem(0xa503, { 0x12 });
        gbc.writeMem(0xc30a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x1319);
        EXPECT(gbc.pc(), 0xa504);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa503), 0x12);
        EXPECT(gbc.readMem(0xc30a), 0xdc);
        // 12 0155
        gbc.setState(0xdc0a, 0x1fc3, 0xc070, 0xaa14, 0xce6e, 0x2317, 0x0, 0x0);
        gbc.writeMem(0xce6e, { 0x0 });
        gbc.writeMem(0xdc0a, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x1fc3);
        EXPECT(gbc.pc(), 0xdc0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce6e), 0xc0);
        EXPECT(gbc.readMem(0xdc0a), 0x12);
        // 12 0159
        gbc.setState(0xe502, 0xff7b, 0x7280, 0x7a9c, 0xc813, 0xb745, 0x1, 0x1);
        gbc.writeMem(0xc813, { 0x0 });
        gbc.writeMem(0xe502, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xff7b);
        EXPECT(gbc.pc(), 0xe503);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc813), 0x72);
        EXPECT(gbc.readMem(0xe502), 0x12);
        // 12 015A
        gbc.setState(0x411b, 0x5d27, 0x7c10, 0xb421, 0xa7ea, 0x78aa, 0x1, 0x1);
        gbc.writeMem(0x411b, { 0x12 });
        gbc.writeMem(0xa7ea, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x5d27);
        EXPECT(gbc.pc(), 0x411c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7ea), 0x7c);
        // 12 015B
        gbc.setState(0x87be, 0xce94, 0xbfa0, 0x100f, 0xabdd, 0x8abf, 0x1, 0x1);
        gbc.writeMem(0x87be, { 0x12 });
        gbc.writeMem(0xabdd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xce94);
        EXPECT(gbc.pc(), 0x87bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87be), 0x12);
        EXPECT(gbc.readMem(0xabdd), 0xbf);
        // 12 015C
        gbc.setState(0x603b, 0xafe4, 0xf250, 0x4cb8, 0x889f, 0x1663, 0x1, 0x1);
        gbc.writeMem(0x603b, { 0x12 });
        gbc.writeMem(0x889f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xafe4);
        EXPECT(gbc.pc(), 0x603c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x889f), 0xf2);
        // 12 015D
        gbc.setState(0xa430, 0xfba2, 0xe530, 0xc7c7, 0xf8bf, 0x9371, 0x0, 0x0);
        gbc.writeMem(0xa430, { 0x12 });
        gbc.writeMem(0xf8bf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xfba2);
        EXPECT(gbc.pc(), 0xa431);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa430), 0x12);
        EXPECT(gbc.readMem(0xf8bf), 0xe5);
        // 12 015F
        gbc.setState(0x398f, 0x8578, 0x2390, 0xc4ba, 0xf20a, 0xf479, 0x1, 0x0);
        gbc.writeMem(0x398f, { 0x12 });
        gbc.writeMem(0xf20a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x8578);
        EXPECT(gbc.pc(), 0x3990);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf20a), 0x23);
        // 12 0160
        gbc.setState(0x682d, 0x9674, 0x3a10, 0x75a, 0xd687, 0xebda, 0x0, 0x0);
        gbc.writeMem(0x682d, { 0x12 });
        gbc.writeMem(0xd687, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x9674);
        EXPECT(gbc.pc(), 0x682e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd687), 0x3a);
        // 12 0161
        gbc.setState(0x2e34, 0x1003, 0x7ae0, 0xc7a3, 0xfcc5, 0x5b6, 0x1, 0x0);
        gbc.writeMem(0x2e34, { 0x12 });
        gbc.writeMem(0xfcc5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x1003);
        EXPECT(gbc.pc(), 0x2e35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfcc5), 0x7a);
        // 12 0162
        gbc.setState(0xe75, 0xd1fc, 0xc7a0, 0x6de7, 0xeaa6, 0xe94b, 0x0, 0x0);
        gbc.writeMem(0xe75, { 0x12 });
        gbc.writeMem(0xeaa6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xd1fc);
        EXPECT(gbc.pc(), 0xe76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaa6), 0xc7);
        // 12 0166
        gbc.setState(0x4e21, 0x22, 0x730, 0x8536, 0xcc33, 0x2148, 0x0, 0x1);
        gbc.writeMem(0x4e21, { 0x12 });
        gbc.writeMem(0xcc33, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x22);
        EXPECT(gbc.pc(), 0x4e22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc33), 0x7);
        // 12 0168
        gbc.setState(0x336, 0xc8da, 0xf5a0, 0xae01, 0xb0ad, 0xa7a7, 0x1, 0x0);
        gbc.writeMem(0x336, { 0x12 });
        gbc.writeMem(0xb0ad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xc8da);
        EXPECT(gbc.pc(), 0x337);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0ad), 0xf5);
        // 12 0169
        gbc.setState(0x4df1, 0x4bce, 0xa3d0, 0x6b57, 0xd748, 0x31a3, 0x1, 0x1);
        gbc.writeMem(0x4df1, { 0x12 });
        gbc.writeMem(0xd748, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x4bce);
        EXPECT(gbc.pc(), 0x4df2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd748), 0xa3);
        // 12 016D
        gbc.setState(0x1c16, 0x7055, 0x7930, 0x282, 0xa845, 0x945a, 0x0, 0x1);
        gbc.writeMem(0x1c16, { 0x12 });
        gbc.writeMem(0xa845, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x7055);
        EXPECT(gbc.pc(), 0x1c17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa845), 0x79);
        // 12 016E
        gbc.setState(0xbc7a, 0x8e1c, 0x3d60, 0xc079, 0x9d14, 0x8444, 0x0, 0x1);
        gbc.writeMem(0x9d14, { 0x0 });
        gbc.writeMem(0xbc7a, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x8e1c);
        EXPECT(gbc.pc(), 0xbc7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d14), 0x3d);
        EXPECT(gbc.readMem(0xbc7a), 0x12);
        // 12 016F
        gbc.setState(0x94a7, 0x8422, 0x4e50, 0xf7cd, 0xf0c3, 0x69eb, 0x1, 0x1);
        gbc.writeMem(0x94a7, { 0x12 });
        gbc.writeMem(0xf0c3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x8422);
        EXPECT(gbc.pc(), 0x94a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94a7), 0x12);
        EXPECT(gbc.readMem(0xf0c3), 0x4e);
        // 12 0174
        gbc.setState(0x481a, 0xbae2, 0x1c80, 0xd2a0, 0x923b, 0x6e66, 0x0, 0x1);
        gbc.writeMem(0x481a, { 0x12 });
        gbc.writeMem(0x923b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xbae2);
        EXPECT(gbc.pc(), 0x481b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x923b), 0x1c);
        // 12 0175
        gbc.setState(0xe43c, 0x4225, 0x3c60, 0x3004, 0xe00b, 0xcdc1, 0x1, 0x1);
        gbc.writeMem(0xe00b, { 0x0 });
        gbc.writeMem(0xe43c, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4225);
        EXPECT(gbc.pc(), 0xe43d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe00b), 0x3c);
        EXPECT(gbc.readMem(0xe43c), 0x12);
        // 12 0176
        gbc.setState(0x4666, 0x5d1c, 0x39f0, 0x599d, 0xd684, 0x3050, 0x1, 0x1);
        gbc.writeMem(0x4666, { 0x12 });
        gbc.writeMem(0xd684, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5d1c);
        EXPECT(gbc.pc(), 0x4667);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd684), 0x39);
        // 12 0177
        gbc.setState(0xb054, 0x5bcc, 0xaff0, 0xf7f5, 0x99af, 0xfdd2, 0x1, 0x1);
        gbc.writeMem(0x99af, { 0x0 });
        gbc.writeMem(0xb054, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x5bcc);
        EXPECT(gbc.pc(), 0xb055);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99af), 0xaf);
        EXPECT(gbc.readMem(0xb054), 0x12);
        // 12 0178
        gbc.setState(0xd8e3, 0x740b, 0xa100, 0x395c, 0xf09d, 0xce7d, 0x0, 0x0);
        gbc.writeMem(0xd8e3, { 0x12 });
        gbc.writeMem(0xf09d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x740b);
        EXPECT(gbc.pc(), 0xd8e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8e3), 0x12);
        EXPECT(gbc.readMem(0xf09d), 0xa1);
        // 12 017A
        gbc.setState(0xed48, 0xe770, 0xc840, 0xb7c2, 0xb066, 0xbfc0, 0x0, 0x0);
        gbc.writeMem(0xb066, { 0x0 });
        gbc.writeMem(0xed48, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xe770);
        EXPECT(gbc.pc(), 0xed49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb066), 0xc8);
        EXPECT(gbc.readMem(0xed48), 0x12);
        // 12 017B
        gbc.setState(0xc0a3, 0x6124, 0xb300, 0xc9e0, 0xc2ac, 0x316e, 0x0, 0x0);
        gbc.writeMem(0xc0a3, { 0x12 });
        gbc.writeMem(0xc2ac, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x6124);
        EXPECT(gbc.pc(), 0xc0a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0a3), 0x12);
        EXPECT(gbc.readMem(0xc2ac), 0xb3);
        // 12 017C
        gbc.setState(0x5bca, 0x27e5, 0xba40, 0xecf5, 0xc5d4, 0x5b38, 0x0, 0x0);
        gbc.writeMem(0x5bca, { 0x12 });
        gbc.writeMem(0xc5d4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x27e5);
        EXPECT(gbc.pc(), 0x5bcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5d4), 0xba);
        // 12 0184
        gbc.setState(0xb2f9, 0xbaf5, 0xe50, 0x1230, 0x952a, 0x5961, 0x1, 0x1);
        gbc.writeMem(0x952a, { 0x0 });
        gbc.writeMem(0xb2f9, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xbaf5);
        EXPECT(gbc.pc(), 0xb2fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x952a), 0xe);
        EXPECT(gbc.readMem(0xb2f9), 0x12);
        // 12 0185
        gbc.setState(0x212b, 0x4b74, 0xb060, 0xae51, 0xc37f, 0xeef8, 0x0, 0x1);
        gbc.writeMem(0x212b, { 0x12 });
        gbc.writeMem(0xc37f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x4b74);
        EXPECT(gbc.pc(), 0x212c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc37f), 0xb0);
        // 12 0186
        gbc.setState(0x24ee, 0xc620, 0x5740, 0x989f, 0xb4e2, 0xf369, 0x1, 0x0);
        gbc.writeMem(0x24ee, { 0x12 });
        gbc.writeMem(0xb4e2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xc620);
        EXPECT(gbc.pc(), 0x24ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4e2), 0x57);
        // 12 0187
        gbc.setState(0x2a37, 0x8f70, 0x2af0, 0x6ad5, 0xb6d4, 0x796f, 0x1, 0x1);
        gbc.writeMem(0x2a37, { 0x12 });
        gbc.writeMem(0xb6d4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x8f70);
        EXPECT(gbc.pc(), 0x2a38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6d4), 0x2a);
        // 12 0188
        gbc.setState(0xadeb, 0x4863, 0xe10, 0x2173, 0x9bd2, 0xd96c, 0x1, 0x0);
        gbc.writeMem(0x9bd2, { 0x0 });
        gbc.writeMem(0xadeb, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4863);
        EXPECT(gbc.pc(), 0xadec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bd2), 0xe);
        EXPECT(gbc.readMem(0xadeb), 0x12);
        // 12 018F
        gbc.setState(0xb27b, 0x493b, 0x4dc0, 0x969d, 0x9daf, 0xfa9f, 0x0, 0x1);
        gbc.writeMem(0x9daf, { 0x0 });
        gbc.writeMem(0xb27b, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x493b);
        EXPECT(gbc.pc(), 0xb27c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9daf), 0x4d);
        EXPECT(gbc.readMem(0xb27b), 0x12);
        // 12 0193
        gbc.setState(0xd7d, 0x15f7, 0x2960, 0x4a1, 0xc239, 0xae8a, 0x1, 0x0);
        gbc.writeMem(0xd7d, { 0x12 });
        gbc.writeMem(0xc239, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x15f7);
        EXPECT(gbc.pc(), 0xd7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc239), 0x29);
        // 12 0194
        gbc.setState(0x7f90, 0x534e, 0x7ed0, 0x2d62, 0xaf88, 0x3334, 0x1, 0x0);
        gbc.writeMem(0x7f90, { 0x12 });
        gbc.writeMem(0xaf88, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x534e);
        EXPECT(gbc.pc(), 0x7f91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf88), 0x7e);
        // 12 0195
        gbc.setState(0xdc7f, 0x59c2, 0xdc50, 0x2ac5, 0xa298, 0xa512, 0x0, 0x0);
        gbc.writeMem(0xa298, { 0x0 });
        gbc.writeMem(0xdc7f, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x59c2);
        EXPECT(gbc.pc(), 0xdc80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa298), 0xdc);
        EXPECT(gbc.readMem(0xdc7f), 0x12);
        // 12 0196
        gbc.setState(0x6359, 0x2e5d, 0x5820, 0xfd24, 0xcd77, 0xdd0f, 0x1, 0x1);
        gbc.writeMem(0x6359, { 0x12 });
        gbc.writeMem(0xcd77, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x2e5d);
        EXPECT(gbc.pc(), 0x635a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd77), 0x58);
        // 12 0199
        gbc.setState(0xebe6, 0x9a2f, 0x68d0, 0xfa23, 0xb5af, 0xc4c5, 0x1, 0x0);
        gbc.writeMem(0xb5af, { 0x0 });
        gbc.writeMem(0xebe6, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x9a2f);
        EXPECT(gbc.pc(), 0xebe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5af), 0x68);
        EXPECT(gbc.readMem(0xebe6), 0x12);
        // 12 019A
        gbc.setState(0x74bc, 0x8b6f, 0x2a0, 0x50d, 0x9e04, 0x6383, 0x1, 0x0);
        gbc.writeMem(0x74bc, { 0x12 });
        gbc.writeMem(0x9e04, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x8b6f);
        EXPECT(gbc.pc(), 0x74bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e04), 0x2);
        // 12 019D
        gbc.setState(0x5aca, 0xe036, 0x9af0, 0xb87a, 0xa60c, 0x9864, 0x0, 0x0);
        gbc.writeMem(0x5aca, { 0x12 });
        gbc.writeMem(0xa60c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xe036);
        EXPECT(gbc.pc(), 0x5acb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa60c), 0x9a);
        // 12 019E
        gbc.setState(0x7a7d, 0xcfd7, 0xd0e0, 0xda30, 0xc516, 0x8966, 0x1, 0x0);
        gbc.writeMem(0x7a7d, { 0x12 });
        gbc.writeMem(0xc516, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xcfd7);
        EXPECT(gbc.pc(), 0x7a7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc516), 0xd0);
        // 12 019F
        gbc.setState(0xa7d1, 0xfae0, 0x3ac0, 0xbd1f, 0x9666, 0x2f57, 0x0, 0x1);
        gbc.writeMem(0x9666, { 0x0 });
        gbc.writeMem(0xa7d1, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xfae0);
        EXPECT(gbc.pc(), 0xa7d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9666), 0x3a);
        EXPECT(gbc.readMem(0xa7d1), 0x12);
        // 12 01A0
        gbc.setState(0x5a2b, 0xffd7, 0x5620, 0xf711, 0xb000, 0xe557, 0x0, 0x1);
        gbc.writeMem(0x5a2b, { 0x12 });
        gbc.writeMem(0xb000, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xffd7);
        EXPECT(gbc.pc(), 0x5a2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb000), 0x56);
        // 12 01A2
        gbc.setState(0xdcd8, 0x6e31, 0xdb0, 0x590e, 0xfb49, 0xc755, 0x0, 0x0);
        gbc.writeMem(0xdcd8, { 0x12 });
        gbc.writeMem(0xfb49, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6e31);
        EXPECT(gbc.pc(), 0xdcd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcd8), 0x12);
        EXPECT(gbc.readMem(0xfb49), 0xd);
        // 12 01A5
        gbc.setState(0x9262, 0x2473, 0x7470, 0xa0af, 0xf9fb, 0x9702, 0x0, 0x0);
        gbc.writeMem(0x9262, { 0x12 });
        gbc.writeMem(0xf9fb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x2473);
        EXPECT(gbc.pc(), 0x9263);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9262), 0x12);
        EXPECT(gbc.readMem(0xf9fb), 0x74);
        // 12 01A7
        gbc.setState(0x9030, 0x4e67, 0xaa00, 0x1d23, 0xd399, 0xb9db, 0x1, 0x0);
        gbc.writeMem(0x9030, { 0x12 });
        gbc.writeMem(0xd399, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4e67);
        EXPECT(gbc.pc(), 0x9031);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9030), 0x12);
        EXPECT(gbc.readMem(0xd399), 0xaa);
        // 12 01A8
        gbc.setState(0x1cdd, 0xf3d1, 0x6280, 0x13bc, 0x84e7, 0x3672, 0x1, 0x1);
        gbc.writeMem(0x1cdd, { 0x12 });
        gbc.writeMem(0x84e7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xf3d1);
        EXPECT(gbc.pc(), 0x1cde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84e7), 0x62);
        // 12 01A9
        gbc.setState(0xec90, 0x6a4c, 0xb180, 0xde0b, 0xd7ed, 0x373e, 0x1, 0x1);
        gbc.writeMem(0xd7ed, { 0x0 });
        gbc.writeMem(0xec90, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x6a4c);
        EXPECT(gbc.pc(), 0xec91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7ed), 0xb1);
        EXPECT(gbc.readMem(0xec90), 0x12);
        // 12 01AB
        gbc.setState(0xcb27, 0xb467, 0xfec0, 0xb039, 0xfa88, 0x7c3, 0x0, 0x0);
        gbc.writeMem(0xcb27, { 0x12 });
        gbc.writeMem(0xfa88, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xb467);
        EXPECT(gbc.pc(), 0xcb28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb27), 0x12);
        EXPECT(gbc.readMem(0xfa88), 0xfe);
        // 12 01AD
        gbc.setState(0x83ce, 0x4d4, 0xec0, 0xadc5, 0x84e1, 0xd6d2, 0x1, 0x0);
        gbc.writeMem(0x83ce, { 0x12 });
        gbc.writeMem(0x84e1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x4d4);
        EXPECT(gbc.pc(), 0x83cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83ce), 0x12);
        EXPECT(gbc.readMem(0x84e1), 0xe);
        // 12 01AE
        gbc.setState(0x2345, 0x2efa, 0x1c60, 0x6321, 0xb2d1, 0x48f9, 0x0, 0x0);
        gbc.writeMem(0x2345, { 0x12 });
        gbc.writeMem(0xb2d1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x2efa);
        EXPECT(gbc.pc(), 0x2346);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2d1), 0x1c);
        // 12 01AF
        gbc.setState(0xc6f4, 0x95bf, 0xc8b0, 0x96c6, 0xb589, 0x11bc, 0x1, 0x0);
        gbc.writeMem(0xb589, { 0x0 });
        gbc.writeMem(0xc6f4, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x95bf);
        EXPECT(gbc.pc(), 0xc6f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb589), 0xc8);
        EXPECT(gbc.readMem(0xc6f4), 0x12);
        // 12 01B1
        gbc.setState(0x26f3, 0xbfa4, 0xeba0, 0x5ea, 0xb3a1, 0x475d, 0x1, 0x0);
        gbc.writeMem(0x26f3, { 0x12 });
        gbc.writeMem(0xb3a1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xbfa4);
        EXPECT(gbc.pc(), 0x26f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3a1), 0xeb);
        // 12 01B3
        gbc.setState(0xe60, 0x4ccb, 0xb8e0, 0x8c64, 0x86b9, 0x5533, 0x1, 0x0);
        gbc.writeMem(0xe60, { 0x12 });
        gbc.writeMem(0x86b9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4ccb);
        EXPECT(gbc.pc(), 0xe61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86b9), 0xb8);
        // 12 01B5
        gbc.setState(0xe31d, 0x724c, 0x6960, 0xfa8e, 0xec39, 0x58d5, 0x1, 0x1);
        gbc.writeMem(0xe31d, { 0x12 });
        gbc.writeMem(0xec39, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x724c);
        EXPECT(gbc.pc(), 0xe31e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe31d), 0x12);
        EXPECT(gbc.readMem(0xec39), 0x69);
        // 12 01B6
        gbc.setState(0xc086, 0x76f6, 0xbac0, 0xaeca, 0x9ca4, 0xf7f6, 0x1, 0x1);
        gbc.writeMem(0x9ca4, { 0x0 });
        gbc.writeMem(0xc086, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x76f6);
        EXPECT(gbc.pc(), 0xc087);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ca4), 0xba);
        EXPECT(gbc.readMem(0xc086), 0x12);
        // 12 01B9
        gbc.setState(0xe477, 0xc684, 0x7a50, 0x47df, 0xbb73, 0xb5f8, 0x1, 0x1);
        gbc.writeMem(0xbb73, { 0x0 });
        gbc.writeMem(0xe477, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xc684);
        EXPECT(gbc.pc(), 0xe478);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb73), 0x7a);
        EXPECT(gbc.readMem(0xe477), 0x12);
        // 12 01BA
        gbc.setState(0xd5f8, 0x4df6, 0xc640, 0xa215, 0xa4fd, 0x1b28, 0x0, 0x0);
        gbc.writeMem(0xa4fd, { 0x0 });
        gbc.writeMem(0xd5f8, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x4df6);
        EXPECT(gbc.pc(), 0xd5f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4fd), 0xc6);
        EXPECT(gbc.readMem(0xd5f8), 0x12);
        // 12 01BB
        gbc.setState(0xe91, 0x937f, 0x43f0, 0xf111, 0xb9be, 0x86a4, 0x0, 0x1);
        gbc.writeMem(0xe91, { 0x12 });
        gbc.writeMem(0xb9be, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x937f);
        EXPECT(gbc.pc(), 0xe92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9be), 0x43);
        // 12 01BD
        gbc.setState(0x51b9, 0xa992, 0xbf40, 0x94a6, 0xefaf, 0xd277, 0x1, 0x0);
        gbc.writeMem(0x51b9, { 0x12 });
        gbc.writeMem(0xefaf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xa992);
        EXPECT(gbc.pc(), 0x51ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefaf), 0xbf);
        // 12 01BE
        gbc.setState(0xbf8b, 0x7964, 0x3070, 0xcb06, 0xce70, 0x6d2e, 0x0, 0x1);
        gbc.writeMem(0xbf8b, { 0x12 });
        gbc.writeMem(0xce70, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7964);
        EXPECT(gbc.pc(), 0xbf8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf8b), 0x12);
        EXPECT(gbc.readMem(0xce70), 0x30);
        // 12 01BF
        gbc.setState(0xede4, 0x8ec5, 0x44c0, 0xff17, 0xa15c, 0xb6a, 0x1, 0x1);
        gbc.writeMem(0xa15c, { 0x0 });
        gbc.writeMem(0xede4, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x8ec5);
        EXPECT(gbc.pc(), 0xede5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa15c), 0x44);
        EXPECT(gbc.readMem(0xede4), 0x12);
        // 12 01C2
        gbc.setState(0x847, 0x8c9f, 0x7f50, 0x90d8, 0xc0a6, 0x6c08, 0x0, 0x1);
        gbc.writeMem(0x847, { 0x12 });
        gbc.writeMem(0xc0a6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x8c9f);
        EXPECT(gbc.pc(), 0x848);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0a6), 0x7f);
        // 12 01C3
        gbc.setState(0x58d, 0xfeff, 0x4720, 0xf2bb, 0xda46, 0xa5ad, 0x1, 0x0);
        gbc.writeMem(0x58d, { 0x12 });
        gbc.writeMem(0xda46, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xfeff);
        EXPECT(gbc.pc(), 0x58e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda46), 0x47);
        // 12 01C4
        gbc.setState(0xdb8a, 0x838e, 0x11e0, 0xb9c8, 0xf27e, 0x8e5f, 0x0, 0x0);
        gbc.writeMem(0xdb8a, { 0x12 });
        gbc.writeMem(0xf27e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x838e);
        EXPECT(gbc.pc(), 0xdb8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb8a), 0x12);
        EXPECT(gbc.readMem(0xf27e), 0x11);
        // 12 01C7
        gbc.setState(0xc98f, 0x2df, 0xa4e0, 0xb5e7, 0xf530, 0x4243, 0x0, 0x1);
        gbc.writeMem(0xc98f, { 0x12 });
        gbc.writeMem(0xf530, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2df);
        EXPECT(gbc.pc(), 0xc990);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc98f), 0x12);
        EXPECT(gbc.readMem(0xf530), 0xa4);
        // 12 01C8
        gbc.setState(0x8a11, 0x60ca, 0xfd10, 0x89e7, 0x8bf9, 0x731c, 0x0, 0x1);
        gbc.writeMem(0x8a11, { 0x12 });
        gbc.writeMem(0x8bf9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x60ca);
        EXPECT(gbc.pc(), 0x8a12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a11), 0x12);
        EXPECT(gbc.readMem(0x8bf9), 0xfd);
        // 12 01CA
        gbc.setState(0x5735, 0xdfcc, 0x71a0, 0x7a9b, 0xea4d, 0x31a9, 0x1, 0x1);
        gbc.writeMem(0x5735, { 0x12 });
        gbc.writeMem(0xea4d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xdfcc);
        EXPECT(gbc.pc(), 0x5736);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea4d), 0x71);
        // 12 01CB
        gbc.setState(0x5a3e, 0x84d0, 0xed0, 0xfc88, 0x8c22, 0x3350, 0x0, 0x0);
        gbc.writeMem(0x5a3e, { 0x12 });
        gbc.writeMem(0x8c22, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x84d0);
        EXPECT(gbc.pc(), 0x5a3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c22), 0xe);
        // 12 01CE
        gbc.setState(0xd6e8, 0xb687, 0x9c60, 0x97d6, 0x83cd, 0x3386, 0x0, 0x0);
        gbc.writeMem(0x83cd, { 0x0 });
        gbc.writeMem(0xd6e8, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xb687);
        EXPECT(gbc.pc(), 0xd6e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83cd), 0x9c);
        EXPECT(gbc.readMem(0xd6e8), 0x12);
        // 12 01D0
        gbc.setState(0x3054, 0xea44, 0xdc90, 0xd999, 0xda91, 0x16b8, 0x0, 0x0);
        gbc.writeMem(0x3054, { 0x12 });
        gbc.writeMem(0xda91, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xea44);
        EXPECT(gbc.pc(), 0x3055);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda91), 0xdc);
        // 12 01D2
        gbc.setState(0x8fa3, 0x195e, 0xc000, 0x66f8, 0xe8a2, 0xadc8, 0x1, 0x0);
        gbc.writeMem(0x8fa3, { 0x12 });
        gbc.writeMem(0xe8a2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x195e);
        EXPECT(gbc.pc(), 0x8fa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fa3), 0x12);
        EXPECT(gbc.readMem(0xe8a2), 0xc0);
        // 12 01D3
        gbc.setState(0x6224, 0x9f21, 0xa10, 0x13cd, 0xa2dc, 0xee2d, 0x0, 0x0);
        gbc.writeMem(0x6224, { 0x12 });
        gbc.writeMem(0xa2dc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x9f21);
        EXPECT(gbc.pc(), 0x6225);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2dc), 0xa);
        // 12 01D9
        gbc.setState(0x829f, 0xb538, 0x3280, 0x9985, 0xe3c0, 0x38af, 0x1, 0x1);
        gbc.writeMem(0x829f, { 0x12 });
        gbc.writeMem(0xe3c0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xb538);
        EXPECT(gbc.pc(), 0x82a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x829f), 0x12);
        EXPECT(gbc.readMem(0xe3c0), 0x32);
        // 12 01DD
        gbc.setState(0xee3e, 0xf925, 0xbe10, 0x4364, 0xb880, 0x8e2f, 0x0, 0x0);
        gbc.writeMem(0xb880, { 0x0 });
        gbc.writeMem(0xee3e, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xf925);
        EXPECT(gbc.pc(), 0xee3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb880), 0xbe);
        EXPECT(gbc.readMem(0xee3e), 0x12);
        // 12 01E3
        gbc.setState(0xe1c8, 0x2a3a, 0xe150, 0x1ca2, 0x9443, 0xecfc, 0x0, 0x0);
        gbc.writeMem(0x9443, { 0x0 });
        gbc.writeMem(0xe1c8, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2a3a);
        EXPECT(gbc.pc(), 0xe1c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9443), 0xe1);
        EXPECT(gbc.readMem(0xe1c8), 0x12);
        // 12 01E4
        gbc.setState(0x6591, 0xa213, 0x22e0, 0xb501, 0xd308, 0xb1f0, 0x1, 0x0);
        gbc.writeMem(0x6591, { 0x12 });
        gbc.writeMem(0xd308, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xa213);
        EXPECT(gbc.pc(), 0x6592);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd308), 0x22);
        // 12 01E7
        gbc.setState(0xaf08, 0x6426, 0xb850, 0x2fd3, 0xe255, 0xccf6, 0x0, 0x0);
        gbc.writeMem(0xaf08, { 0x12 });
        gbc.writeMem(0xe255, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x6426);
        EXPECT(gbc.pc(), 0xaf09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf08), 0x12);
        EXPECT(gbc.readMem(0xe255), 0xb8);
        // 12 01E8
        gbc.setState(0x314f, 0xad0c, 0x9310, 0x1939, 0x8a92, 0x972d, 0x1, 0x1);
        gbc.writeMem(0x314f, { 0x12 });
        gbc.writeMem(0x8a92, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xad0c);
        EXPECT(gbc.pc(), 0x3150);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a92), 0x93);
        // 12 01E9
        gbc.setState(0x25c0, 0x4250, 0xfb90, 0x4b72, 0xb881, 0xdb1d, 0x1, 0x0);
        gbc.writeMem(0x25c0, { 0x12 });
        gbc.writeMem(0xb881, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x4250);
        EXPECT(gbc.pc(), 0x25c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb881), 0xfb);
        // 12 01EA
        gbc.setState(0xc07, 0xd91b, 0x6f10, 0x3362, 0xbf98, 0x4794, 0x0, 0x0);
        gbc.writeMem(0xc07, { 0x12 });
        gbc.writeMem(0xbf98, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xd91b);
        EXPECT(gbc.pc(), 0xc08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf98), 0x6f);
        // 12 01EB
        gbc.setState(0xd10a, 0xc9e3, 0x2f80, 0xc0b, 0xe91e, 0x3fa6, 0x1, 0x1);
        gbc.writeMem(0xd10a, { 0x12 });
        gbc.writeMem(0xe91e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc9e3);
        EXPECT(gbc.pc(), 0xd10b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd10a), 0x12);
        EXPECT(gbc.readMem(0xe91e), 0x2f);
        // 12 01ED
        gbc.setState(0x5e53, 0x4549, 0xdef0, 0xc11, 0xf59f, 0x5fc1, 0x0, 0x1);
        gbc.writeMem(0x5e53, { 0x12 });
        gbc.writeMem(0xf59f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4549);
        EXPECT(gbc.pc(), 0x5e54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf59f), 0xde);
        // 12 01F2
        gbc.setState(0x4385, 0x7b8d, 0x7760, 0x774d, 0xfd3e, 0xebf5, 0x1, 0x1);
        gbc.writeMem(0x4385, { 0x12 });
        gbc.writeMem(0xfd3e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x7b8d);
        EXPECT(gbc.pc(), 0x4386);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfd3e), 0x77);
        // 12 01F4
        gbc.setState(0x9ee9, 0xf5ef, 0x3280, 0x7f9c, 0xa70d, 0xdc61, 0x1, 0x0);
        gbc.writeMem(0x9ee9, { 0x12 });
        gbc.writeMem(0xa70d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xf5ef);
        EXPECT(gbc.pc(), 0x9eea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ee9), 0x12);
        EXPECT(gbc.readMem(0xa70d), 0x32);
        // 12 01F6
        gbc.setState(0x9300, 0x4ce1, 0x44a0, 0xa9cb, 0x85f5, 0x5ccf, 0x1, 0x0);
        gbc.writeMem(0x85f5, { 0x0 });
        gbc.writeMem(0x9300, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x4ce1);
        EXPECT(gbc.pc(), 0x9301);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85f5), 0x44);
        EXPECT(gbc.readMem(0x9300), 0x12);
        // 12 01F7
        gbc.setState(0x4e5c, 0x28da, 0xd730, 0x65e3, 0xc3a8, 0xf412, 0x0, 0x1);
        gbc.writeMem(0x4e5c, { 0x12 });
        gbc.writeMem(0xc3a8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x28da);
        EXPECT(gbc.pc(), 0x4e5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3a8), 0xd7);
        // 12 01F9
        gbc.setState(0x3914, 0xd8ad, 0xc3c0, 0xb336, 0xbd15, 0x6626, 0x0, 0x0);
        gbc.writeMem(0x3914, { 0x12 });
        gbc.writeMem(0xbd15, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xd8ad);
        EXPECT(gbc.pc(), 0x3915);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd15), 0xc3);
        // 12 01FA
        gbc.setState(0xcf7b, 0x6cc4, 0x1040, 0xe506, 0xe933, 0xd2bc, 0x1, 0x0);
        gbc.writeMem(0xcf7b, { 0x12 });
        gbc.writeMem(0xe933, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x6cc4);
        EXPECT(gbc.pc(), 0xcf7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf7b), 0x12);
        EXPECT(gbc.readMem(0xe933), 0x10);
        // 12 01FB
        gbc.setState(0x9542, 0x6f32, 0x2e40, 0xf772, 0xcd4c, 0x3134, 0x1, 0x1);
        gbc.writeMem(0x9542, { 0x12 });
        gbc.writeMem(0xcd4c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x6f32);
        EXPECT(gbc.pc(), 0x9543);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9542), 0x12);
        EXPECT(gbc.readMem(0xcd4c), 0x2e);
        // 12 01FD
        gbc.setState(0x2942, 0x713a, 0x4200, 0x2364, 0xa212, 0xed03, 0x0, 0x1);
        gbc.writeMem(0x2942, { 0x12 });
        gbc.writeMem(0xa212, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x713a);
        EXPECT(gbc.pc(), 0x2943);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa212), 0x42);
        // 12 01FF
        gbc.setState(0xa159, 0x7769, 0xa950, 0x5fff, 0xe114, 0xaf0c, 0x1, 0x1);
        gbc.writeMem(0xa159, { 0x12 });
        gbc.writeMem(0xe114, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x7769);
        EXPECT(gbc.pc(), 0xa15a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa159), 0x12);
        EXPECT(gbc.readMem(0xe114), 0xa9);
        // 12 0204
        gbc.setState(0x53a9, 0x3ed, 0xa650, 0xaf1c, 0xb3c2, 0x1fa3, 0x1, 0x1);
        gbc.writeMem(0x53a9, { 0x12 });
        gbc.writeMem(0xb3c2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x3ed);
        EXPECT(gbc.pc(), 0x53aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3c2), 0xa6);
        // 12 0205
        gbc.setState(0x8d95, 0xb7b4, 0x5b10, 0x3725, 0xc3b1, 0xda91, 0x1, 0x1);
        gbc.writeMem(0x8d95, { 0x12 });
        gbc.writeMem(0xc3b1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xb7b4);
        EXPECT(gbc.pc(), 0x8d96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d95), 0x12);
        EXPECT(gbc.readMem(0xc3b1), 0x5b);
        // 12 0208
        gbc.setState(0xb9ea, 0xf179, 0xe950, 0x2e26, 0xdf00, 0x643d, 0x1, 0x1);
        gbc.writeMem(0xb9ea, { 0x12 });
        gbc.writeMem(0xdf00, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf179);
        EXPECT(gbc.pc(), 0xb9eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9ea), 0x12);
        EXPECT(gbc.readMem(0xdf00), 0xe9);
        // 12 020C
        gbc.setState(0x84a1, 0x39e4, 0x2d40, 0x430e, 0xb775, 0x5d79, 0x1, 0x1);
        gbc.writeMem(0x84a1, { 0x12 });
        gbc.writeMem(0xb775, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x39e4);
        EXPECT(gbc.pc(), 0x84a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84a1), 0x12);
        EXPECT(gbc.readMem(0xb775), 0x2d);
        // 12 020E
        gbc.setState(0x7db0, 0xdd20, 0x6a50, 0xfcf0, 0xd3e6, 0xdc80, 0x1, 0x0);
        gbc.writeMem(0x7db0, { 0x12 });
        gbc.writeMem(0xd3e6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xdd20);
        EXPECT(gbc.pc(), 0x7db1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3e6), 0x6a);
        // 12 0210
        gbc.setState(0x94e7, 0x310c, 0x7f20, 0xf2c, 0x8a7d, 0x176, 0x0, 0x1);
        gbc.writeMem(0x8a7d, { 0x0 });
        gbc.writeMem(0x94e7, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x310c);
        EXPECT(gbc.pc(), 0x94e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a7d), 0x7f);
        EXPECT(gbc.readMem(0x94e7), 0x12);
        // 12 0211
        gbc.setState(0x1904, 0xb8e1, 0xd540, 0x5458, 0x89fa, 0xbdfc, 0x1, 0x1);
        gbc.writeMem(0x1904, { 0x12 });
        gbc.writeMem(0x89fa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xb8e1);
        EXPECT(gbc.pc(), 0x1905);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89fa), 0xd5);
        // 12 0213
        gbc.setState(0x9ac4, 0xb969, 0x2d70, 0xed7f, 0xad1e, 0x108e, 0x1, 0x1);
        gbc.writeMem(0x9ac4, { 0x12 });
        gbc.writeMem(0xad1e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb969);
        EXPECT(gbc.pc(), 0x9ac5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ac4), 0x12);
        EXPECT(gbc.readMem(0xad1e), 0x2d);
        // 12 0215
        gbc.setState(0xed51, 0xbac8, 0x35c0, 0x9d7c, 0x9db6, 0x3b79, 0x1, 0x0);
        gbc.writeMem(0x9db6, { 0x0 });
        gbc.writeMem(0xed51, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xbac8);
        EXPECT(gbc.pc(), 0xed52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9db6), 0x35);
        EXPECT(gbc.readMem(0xed51), 0x12);
        // 12 0217
        gbc.setState(0xcb12, 0x72a, 0x8070, 0x7562, 0x9e0d, 0xa5a8, 0x1, 0x0);
        gbc.writeMem(0x9e0d, { 0x0 });
        gbc.writeMem(0xcb12, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x72a);
        EXPECT(gbc.pc(), 0xcb13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e0d), 0x80);
        EXPECT(gbc.readMem(0xcb12), 0x12);
        // 12 021B
        gbc.setState(0x2357, 0x9a5c, 0xb5d0, 0x59c1, 0xb2ec, 0x650d, 0x1, 0x0);
        gbc.writeMem(0x2357, { 0x12 });
        gbc.writeMem(0xb2ec, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x9a5c);
        EXPECT(gbc.pc(), 0x2358);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2ec), 0xb5);
        // 12 021C
        gbc.setState(0x87bc, 0xbc58, 0x1700, 0x9fd6, 0xbd27, 0x7afd, 0x0, 0x1);
        gbc.writeMem(0x87bc, { 0x12 });
        gbc.writeMem(0xbd27, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xbc58);
        EXPECT(gbc.pc(), 0x87bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87bc), 0x12);
        EXPECT(gbc.readMem(0xbd27), 0x17);
        // 12 021D
        gbc.setState(0x5564, 0x138a, 0xe5c0, 0x9e04, 0xb676, 0x501a, 0x1, 0x1);
        gbc.writeMem(0x5564, { 0x12 });
        gbc.writeMem(0xb676, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x138a);
        EXPECT(gbc.pc(), 0x5565);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb676), 0xe5);
        // 12 0224
        gbc.setState(0x5ce1, 0x1fb2, 0x1810, 0xe0ee, 0xfecf, 0x2c29, 0x1, 0x1);
        gbc.writeMem(0x5ce1, { 0x12 });
        gbc.writeMem(0xfecf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x1fb2);
        EXPECT(gbc.pc(), 0x5ce2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfecf), 0x18);
        // 12 0226
        gbc.setState(0xacde, 0x3017, 0x5cd0, 0xbc52, 0xb5f8, 0xf396, 0x1, 0x1);
        gbc.writeMem(0xacde, { 0x12 });
        gbc.writeMem(0xb5f8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x3017);
        EXPECT(gbc.pc(), 0xacdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacde), 0x12);
        EXPECT(gbc.readMem(0xb5f8), 0x5c);
        // 12 0228
        gbc.setState(0x2fd7, 0x4ab9, 0x6150, 0xbaa4, 0xbb57, 0xde25, 0x0, 0x1);
        gbc.writeMem(0x2fd7, { 0x12 });
        gbc.writeMem(0xbb57, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4ab9);
        EXPECT(gbc.pc(), 0x2fd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb57), 0x61);
        // 12 0229
        gbc.setState(0x5775, 0x2924, 0x6db0, 0xce9b, 0x9321, 0x5ba7, 0x1, 0x0);
        gbc.writeMem(0x5775, { 0x12 });
        gbc.writeMem(0x9321, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x2924);
        EXPECT(gbc.pc(), 0x5776);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9321), 0x6d);
        // 12 022A
        gbc.setState(0x8280, 0xc909, 0xa990, 0x7a3f, 0xc165, 0xd707, 0x1, 0x1);
        gbc.writeMem(0x8280, { 0x12 });
        gbc.writeMem(0xc165, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xc909);
        EXPECT(gbc.pc(), 0x8281);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8280), 0x12);
        EXPECT(gbc.readMem(0xc165), 0xa9);
        // 12 022B
        gbc.setState(0x6fff, 0xe511, 0x9530, 0xec93, 0xe426, 0xde71, 0x0, 0x1);
        gbc.writeMem(0x6fff, { 0x12 });
        gbc.writeMem(0xe426, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xe511);
        EXPECT(gbc.pc(), 0x7000);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe426), 0x95);
        // 12 022C
        gbc.setState(0x815a, 0x69c8, 0x4650, 0xf259, 0xbb8c, 0xfea9, 0x1, 0x1);
        gbc.writeMem(0x815a, { 0x12 });
        gbc.writeMem(0xbb8c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x69c8);
        EXPECT(gbc.pc(), 0x815b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x815a), 0x12);
        EXPECT(gbc.readMem(0xbb8c), 0x46);
        // 12 022D
        gbc.setState(0x18f2, 0x3595, 0x1340, 0xe788, 0xae40, 0xb124, 0x1, 0x0);
        gbc.writeMem(0x18f2, { 0x12 });
        gbc.writeMem(0xae40, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3595);
        EXPECT(gbc.pc(), 0x18f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae40), 0x13);
        // 12 0230
        gbc.setState(0x4d58, 0x8c09, 0x22a0, 0xd033, 0xccd8, 0xbeea, 0x0, 0x0);
        gbc.writeMem(0x4d58, { 0x12 });
        gbc.writeMem(0xccd8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x8c09);
        EXPECT(gbc.pc(), 0x4d59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccd8), 0x22);
        // 12 0231
        gbc.setState(0xc860, 0x2be9, 0xe3d0, 0xfe18, 0xeb10, 0x3743, 0x1, 0x0);
        gbc.writeMem(0xc860, { 0x12 });
        gbc.writeMem(0xeb10, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2be9);
        EXPECT(gbc.pc(), 0xc861);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc860), 0x12);
        EXPECT(gbc.readMem(0xeb10), 0xe3);
        // 12 0232
        gbc.setState(0xb4a1, 0xcacd, 0xcf30, 0x7eea, 0x8e12, 0x9eba, 0x1, 0x0);
        gbc.writeMem(0x8e12, { 0x0 });
        gbc.writeMem(0xb4a1, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xcacd);
        EXPECT(gbc.pc(), 0xb4a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e12), 0xcf);
        EXPECT(gbc.readMem(0xb4a1), 0x12);
        // 12 0234
        gbc.setState(0xa9d5, 0xaff, 0x9b0, 0x6d52, 0xd17d, 0x4f0c, 0x0, 0x0);
        gbc.writeMem(0xa9d5, { 0x12 });
        gbc.writeMem(0xd17d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xaff);
        EXPECT(gbc.pc(), 0xa9d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9d5), 0x12);
        EXPECT(gbc.readMem(0xd17d), 0x9);
        // 12 0236
        gbc.setState(0x6045, 0x4fd4, 0x4250, 0x159d, 0x8ca3, 0xc9de, 0x0, 0x1);
        gbc.writeMem(0x6045, { 0x12 });
        gbc.writeMem(0x8ca3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x4fd4);
        EXPECT(gbc.pc(), 0x6046);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ca3), 0x42);
        // 12 0238
        gbc.setState(0x2080, 0x61c5, 0x6470, 0x8836, 0xa89c, 0x79f0, 0x1, 0x1);
        gbc.writeMem(0x2080, { 0x12 });
        gbc.writeMem(0xa89c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x61c5);
        EXPECT(gbc.pc(), 0x2081);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa89c), 0x64);
        // 12 0239
        gbc.setState(0x50d4, 0x4df5, 0xd510, 0xbdb2, 0x9e40, 0x4857, 0x0, 0x0);
        gbc.writeMem(0x50d4, { 0x12 });
        gbc.writeMem(0x9e40, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x4df5);
        EXPECT(gbc.pc(), 0x50d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e40), 0xd5);
        // 12 023A
        gbc.setState(0x27cb, 0x330c, 0x71a0, 0x1e08, 0xb231, 0x6781, 0x0, 0x0);
        gbc.writeMem(0x27cb, { 0x12 });
        gbc.writeMem(0xb231, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x330c);
        EXPECT(gbc.pc(), 0x27cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb231), 0x71);
        // 12 023B
        gbc.setState(0x877e, 0x7b60, 0xd6f0, 0x7e30, 0xa210, 0xb431, 0x1, 0x0);
        gbc.writeMem(0x877e, { 0x12 });
        gbc.writeMem(0xa210, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x7b60);
        EXPECT(gbc.pc(), 0x877f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x877e), 0x12);
        EXPECT(gbc.readMem(0xa210), 0xd6);
        // 12 023E
        gbc.setState(0xde3a, 0x8180, 0x1fd0, 0xb75f, 0xc181, 0xbe26, 0x1, 0x0);
        gbc.writeMem(0xc181, { 0x0 });
        gbc.writeMem(0xde3a, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x8180);
        EXPECT(gbc.pc(), 0xde3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc181), 0x1f);
        EXPECT(gbc.readMem(0xde3a), 0x12);
        // 12 0240
        gbc.setState(0x5129, 0xfc53, 0x1f70, 0xa895, 0xd43d, 0xc1fe, 0x1, 0x0);
        gbc.writeMem(0x5129, { 0x12 });
        gbc.writeMem(0xd43d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xfc53);
        EXPECT(gbc.pc(), 0x512a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd43d), 0x1f);
        // 12 0241
        gbc.setState(0xbfcc, 0x741b, 0xe790, 0x4f14, 0x9048, 0xb0cf, 0x0, 0x1);
        gbc.writeMem(0x9048, { 0x0 });
        gbc.writeMem(0xbfcc, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x741b);
        EXPECT(gbc.pc(), 0xbfcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9048), 0xe7);
        EXPECT(gbc.readMem(0xbfcc), 0x12);
        // 12 0243
        gbc.setState(0xa854, 0x489d, 0xf1f0, 0xf979, 0x807a, 0xb259, 0x0, 0x1);
        gbc.writeMem(0x807a, { 0x0 });
        gbc.writeMem(0xa854, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x489d);
        EXPECT(gbc.pc(), 0xa855);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x807a), 0xf1);
        EXPECT(gbc.readMem(0xa854), 0x12);
        // 12 0244
        gbc.setState(0xdb0d, 0x8a0a, 0x8b50, 0x306c, 0xbbcc, 0x4511, 0x0, 0x0);
        gbc.writeMem(0xbbcc, { 0x0 });
        gbc.writeMem(0xdb0d, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x8a0a);
        EXPECT(gbc.pc(), 0xdb0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbcc), 0x8b);
        EXPECT(gbc.readMem(0xdb0d), 0x12);
        // 12 0246
        gbc.setState(0xec84, 0x5e40, 0x670, 0x8d3, 0xe3dc, 0xb761, 0x1, 0x0);
        gbc.writeMem(0xe3dc, { 0x0 });
        gbc.writeMem(0xec84, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x5e40);
        EXPECT(gbc.pc(), 0xec85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3dc), 0x6);
        EXPECT(gbc.readMem(0xec84), 0x12);
        // 12 0248
        gbc.setState(0xa85b, 0x37e, 0x9f10, 0x4ad2, 0xe6eb, 0xf542, 0x1, 0x1);
        gbc.writeMem(0xa85b, { 0x12 });
        gbc.writeMem(0xe6eb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x37e);
        EXPECT(gbc.pc(), 0xa85c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa85b), 0x12);
        EXPECT(gbc.readMem(0xe6eb), 0x9f);
        // 12 0249
        gbc.setState(0xc84c, 0x263, 0x9ae0, 0xd5bb, 0x92e1, 0x2b58, 0x0, 0x1);
        gbc.writeMem(0x92e1, { 0x0 });
        gbc.writeMem(0xc84c, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x263);
        EXPECT(gbc.pc(), 0xc84d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92e1), 0x9a);
        EXPECT(gbc.readMem(0xc84c), 0x12);
        // 12 024A
        gbc.setState(0x6cbf, 0x8d21, 0x9e20, 0x3edc, 0xdeac, 0x62f, 0x1, 0x1);
        gbc.writeMem(0x6cbf, { 0x12 });
        gbc.writeMem(0xdeac, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x8d21);
        EXPECT(gbc.pc(), 0x6cc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeac), 0x9e);
        // 12 024B
        gbc.setState(0xa744, 0xa55d, 0xf4a0, 0x7fd, 0x8114, 0x902b, 0x1, 0x0);
        gbc.writeMem(0x8114, { 0x0 });
        gbc.writeMem(0xa744, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xa55d);
        EXPECT(gbc.pc(), 0xa745);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8114), 0xf4);
        EXPECT(gbc.readMem(0xa744), 0x12);
        // 12 024C
        gbc.setState(0xbaa9, 0xec32, 0xa470, 0x67cc, 0xe338, 0xa7a2, 0x0, 0x1);
        gbc.writeMem(0xbaa9, { 0x12 });
        gbc.writeMem(0xe338, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xec32);
        EXPECT(gbc.pc(), 0xbaaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaa9), 0x12);
        EXPECT(gbc.readMem(0xe338), 0xa4);
        // 12 024D
        gbc.setState(0x45ef, 0xaac, 0x88d0, 0x6cb9, 0xe2d4, 0x2c52, 0x0, 0x1);
        gbc.writeMem(0x45ef, { 0x12 });
        gbc.writeMem(0xe2d4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xaac);
        EXPECT(gbc.pc(), 0x45f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2d4), 0x88);
        // 12 0250
        gbc.setState(0xe0be, 0xa6a4, 0x590, 0xc550, 0xce68, 0xd507, 0x1, 0x1);
        gbc.writeMem(0xce68, { 0x0 });
        gbc.writeMem(0xe0be, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xa6a4);
        EXPECT(gbc.pc(), 0xe0bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce68), 0x5);
        EXPECT(gbc.readMem(0xe0be), 0x12);
        // 12 0251
        gbc.setState(0xbe7a, 0xc2e2, 0x8990, 0xa922, 0x82e4, 0xa87c, 0x1, 0x0);
        gbc.writeMem(0x82e4, { 0x0 });
        gbc.writeMem(0xbe7a, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xc2e2);
        EXPECT(gbc.pc(), 0xbe7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82e4), 0x89);
        EXPECT(gbc.readMem(0xbe7a), 0x12);
        // 12 0258
        gbc.setState(0xd30e, 0x3816, 0xf30, 0x1877, 0x8460, 0xff9f, 0x1, 0x1);
        gbc.writeMem(0x8460, { 0x0 });
        gbc.writeMem(0xd30e, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x3816);
        EXPECT(gbc.pc(), 0xd30f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8460), 0xf);
        EXPECT(gbc.readMem(0xd30e), 0x12);
        // 12 025B
        gbc.setState(0x4872, 0xf8f0, 0xac50, 0x1d6b, 0xba4a, 0x2edb, 0x0, 0x1);
        gbc.writeMem(0x4872, { 0x12 });
        gbc.writeMem(0xba4a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xf8f0);
        EXPECT(gbc.pc(), 0x4873);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba4a), 0xac);
        // 12 025C
        gbc.setState(0xc2ca, 0xa8d5, 0xbce0, 0xc5ca, 0xf30c, 0x4a81, 0x0, 0x0);
        gbc.writeMem(0xc2ca, { 0x12 });
        gbc.writeMem(0xf30c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa8d5);
        EXPECT(gbc.pc(), 0xc2cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2ca), 0x12);
        EXPECT(gbc.readMem(0xf30c), 0xbc);
        // 12 025E
        gbc.setState(0xd5be, 0xb83f, 0xb920, 0x52ae, 0x9f45, 0xb2da, 0x0, 0x1);
        gbc.writeMem(0x9f45, { 0x0 });
        gbc.writeMem(0xd5be, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xb83f);
        EXPECT(gbc.pc(), 0xd5bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f45), 0xb9);
        EXPECT(gbc.readMem(0xd5be), 0x12);
        // 12 025F
        gbc.setState(0x4cc7, 0x16a2, 0x4380, 0x1d19, 0xcca5, 0x261c, 0x1, 0x0);
        gbc.writeMem(0x4cc7, { 0x12 });
        gbc.writeMem(0xcca5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x16a2);
        EXPECT(gbc.pc(), 0x4cc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcca5), 0x43);
        // 12 0264
        gbc.setState(0x154d, 0x167b, 0xab00, 0xca3f, 0x9884, 0x55f5, 0x0, 0x1);
        gbc.writeMem(0x154d, { 0x12 });
        gbc.writeMem(0x9884, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x167b);
        EXPECT(gbc.pc(), 0x154e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9884), 0xab);
        // 12 0266
        gbc.setState(0xbe57, 0xc87a, 0xa110, 0xe2e, 0xd4ee, 0x9dd0, 0x0, 0x1);
        gbc.writeMem(0xbe57, { 0x12 });
        gbc.writeMem(0xd4ee, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xc87a);
        EXPECT(gbc.pc(), 0xbe58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe57), 0x12);
        EXPECT(gbc.readMem(0xd4ee), 0xa1);
        // 12 0267
        gbc.setState(0x142e, 0xb53c, 0x6a40, 0xf290, 0xba36, 0xbe47, 0x1, 0x0);
        gbc.writeMem(0x142e, { 0x12 });
        gbc.writeMem(0xba36, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xb53c);
        EXPECT(gbc.pc(), 0x142f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba36), 0x6a);
        // 12 0268
        gbc.setState(0x1943, 0x5471, 0x7b60, 0x28c3, 0xd172, 0x36d4, 0x0, 0x0);
        gbc.writeMem(0x1943, { 0x12 });
        gbc.writeMem(0xd172, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x5471);
        EXPECT(gbc.pc(), 0x1944);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd172), 0x7b);
        // 12 0269
        gbc.setState(0xa80e, 0xf543, 0xff0, 0x22ce, 0x88a9, 0x1dfd, 0x1, 0x0);
        gbc.writeMem(0x88a9, { 0x0 });
        gbc.writeMem(0xa80e, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xf543);
        EXPECT(gbc.pc(), 0xa80f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88a9), 0xf);
        EXPECT(gbc.readMem(0xa80e), 0x12);
        // 12 026B
        gbc.setState(0xa4f1, 0x126c, 0xe860, 0x6802, 0xe06e, 0x56a7, 0x1, 0x0);
        gbc.writeMem(0xa4f1, { 0x12 });
        gbc.writeMem(0xe06e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x126c);
        EXPECT(gbc.pc(), 0xa4f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4f1), 0x12);
        EXPECT(gbc.readMem(0xe06e), 0xe8);
        // 12 026D
        gbc.setState(0x2c36, 0xb74f, 0xd410, 0x3a14, 0xde67, 0x876d, 0x0, 0x0);
        gbc.writeMem(0x2c36, { 0x12 });
        gbc.writeMem(0xde67, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xb74f);
        EXPECT(gbc.pc(), 0x2c37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde67), 0xd4);
        // 12 0273
        gbc.setState(0xdccc, 0x694e, 0x61e0, 0xa309, 0xebc6, 0x95c4, 0x1, 0x0);
        gbc.writeMem(0xdccc, { 0x12 });
        gbc.writeMem(0xebc6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x694e);
        EXPECT(gbc.pc(), 0xdccd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdccc), 0x12);
        EXPECT(gbc.readMem(0xebc6), 0x61);
        // 12 0274
        gbc.setState(0x922c, 0x6217, 0xfc30, 0xe04d, 0xb7fe, 0x1e20, 0x1, 0x0);
        gbc.writeMem(0x922c, { 0x12 });
        gbc.writeMem(0xb7fe, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x6217);
        EXPECT(gbc.pc(), 0x922d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x922c), 0x12);
        EXPECT(gbc.readMem(0xb7fe), 0xfc);
        // 12 0275
        gbc.setState(0x689e, 0xe354, 0xeb60, 0x8805, 0x837a, 0xd58d, 0x1, 0x0);
        gbc.writeMem(0x689e, { 0x12 });
        gbc.writeMem(0x837a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xe354);
        EXPECT(gbc.pc(), 0x689f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x837a), 0xeb);
        // 12 0277
        gbc.setState(0x9317, 0x839a, 0x9b40, 0xe38c, 0xe241, 0x2758, 0x1, 0x1);
        gbc.writeMem(0x9317, { 0x12 });
        gbc.writeMem(0xe241, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x839a);
        EXPECT(gbc.pc(), 0x9318);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9317), 0x12);
        EXPECT(gbc.readMem(0xe241), 0x9b);
        // 12 0279
        gbc.setState(0x4b36, 0xf55d, 0x7320, 0x5d24, 0xc985, 0x361d, 0x0, 0x0);
        gbc.writeMem(0x4b36, { 0x12 });
        gbc.writeMem(0xc985, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xf55d);
        EXPECT(gbc.pc(), 0x4b37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc985), 0x73);
        // 12 0281
        gbc.setState(0x961e, 0xd49, 0x9550, 0x8350, 0xb1e6, 0x7e2b, 0x0, 0x1);
        gbc.writeMem(0x961e, { 0x12 });
        gbc.writeMem(0xb1e6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xd49);
        EXPECT(gbc.pc(), 0x961f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x961e), 0x12);
        EXPECT(gbc.readMem(0xb1e6), 0x95);
        // 12 0282
        gbc.setState(0xc8f0, 0x6df3, 0x22b0, 0x9aa4, 0xfa2d, 0xdba6, 0x1, 0x0);
        gbc.writeMem(0xc8f0, { 0x12 });
        gbc.writeMem(0xfa2d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x6df3);
        EXPECT(gbc.pc(), 0xc8f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8f0), 0x12);
        EXPECT(gbc.readMem(0xfa2d), 0x22);
        // 12 0283
        gbc.setState(0xbafd, 0xb442, 0xd580, 0x23b6, 0xea76, 0xcf12, 0x1, 0x0);
        gbc.writeMem(0xbafd, { 0x12 });
        gbc.writeMem(0xea76, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xb442);
        EXPECT(gbc.pc(), 0xbafe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbafd), 0x12);
        EXPECT(gbc.readMem(0xea76), 0xd5);
        // 12 0284
        gbc.setState(0x6120, 0xb384, 0x7250, 0xe686, 0x99fe, 0xcc6e, 0x0, 0x0);
        gbc.writeMem(0x6120, { 0x12 });
        gbc.writeMem(0x99fe, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xb384);
        EXPECT(gbc.pc(), 0x6121);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99fe), 0x72);
        // 12 0287
        gbc.setState(0xa779, 0xada7, 0x2e0, 0x5991, 0xff51, 0x9837, 0x1, 0x0);
        gbc.writeMem(0xa779, { 0x12 });
        gbc.writeMem(0xff51, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xada7);
        EXPECT(gbc.pc(), 0xa77a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa779), 0x12);
        EXPECT(gbc.readMem(0xff51), 0x2);
        // 12 0288
        gbc.setState(0x3292, 0xa15e, 0x70a0, 0x956, 0xf2f5, 0x9826, 0x0, 0x1);
        gbc.writeMem(0x3292, { 0x12 });
        gbc.writeMem(0xf2f5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xa15e);
        EXPECT(gbc.pc(), 0x3293);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf2f5), 0x70);
        // 12 028A
        gbc.setState(0x5c05, 0xea85, 0xf430, 0x2346, 0xbfdb, 0xb597, 0x1, 0x1);
        gbc.writeMem(0x5c05, { 0x12 });
        gbc.writeMem(0xbfdb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xea85);
        EXPECT(gbc.pc(), 0x5c06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfdb), 0xf4);
        // 12 028E
        gbc.setState(0x2ff8, 0xd793, 0xe4d0, 0x3962, 0xe8a0, 0x8c7a, 0x1, 0x1);
        gbc.writeMem(0x2ff8, { 0x12 });
        gbc.writeMem(0xe8a0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd793);
        EXPECT(gbc.pc(), 0x2ff9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8a0), 0xe4);
        // 12 0290
        gbc.setState(0x9b2b, 0x5613, 0xa2d0, 0xf2f7, 0xfa02, 0xc712, 0x0, 0x1);
        gbc.writeMem(0x9b2b, { 0x12 });
        gbc.writeMem(0xfa02, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x5613);
        EXPECT(gbc.pc(), 0x9b2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b2b), 0x12);
        EXPECT(gbc.readMem(0xfa02), 0xa2);
        // 12 0294
        gbc.setState(0x5502, 0x80cd, 0x1350, 0xa853, 0xfdfb, 0xeb99, 0x1, 0x0);
        gbc.writeMem(0x5502, { 0x12 });
        gbc.writeMem(0xfdfb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x80cd);
        EXPECT(gbc.pc(), 0x5503);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfdfb), 0x13);
        // 12 0298
        gbc.setState(0xba70, 0xee93, 0x61e0, 0xb434, 0x8c2d, 0x48e3, 0x0, 0x1);
        gbc.writeMem(0x8c2d, { 0x0 });
        gbc.writeMem(0xba70, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xee93);
        EXPECT(gbc.pc(), 0xba71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c2d), 0x61);
        EXPECT(gbc.readMem(0xba70), 0x12);
        // 12 029A
        gbc.setState(0x94f6, 0x41c, 0x65c0, 0xe989, 0xbdd7, 0x26fc, 0x0, 0x1);
        gbc.writeMem(0x94f6, { 0x12 });
        gbc.writeMem(0xbdd7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x41c);
        EXPECT(gbc.pc(), 0x94f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94f6), 0x12);
        EXPECT(gbc.readMem(0xbdd7), 0x65);
        // 12 029B
        gbc.setState(0x78b2, 0xb246, 0xe170, 0x9d78, 0x812f, 0x7a6, 0x1, 0x1);
        gbc.writeMem(0x78b2, { 0x12 });
        gbc.writeMem(0x812f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xb246);
        EXPECT(gbc.pc(), 0x78b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x812f), 0xe1);
        // 12 029C
        gbc.setState(0xbe7b, 0xf7e4, 0x2e50, 0xb393, 0xb329, 0x5038, 0x0, 0x0);
        gbc.writeMem(0xb329, { 0x0 });
        gbc.writeMem(0xbe7b, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xf7e4);
        EXPECT(gbc.pc(), 0xbe7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb329), 0x2e);
        EXPECT(gbc.readMem(0xbe7b), 0x12);
        // 12 029F
        gbc.setState(0xed5d, 0x58b7, 0x5930, 0x7c16, 0xa410, 0xad63, 0x0, 0x0);
        gbc.writeMem(0xa410, { 0x0 });
        gbc.writeMem(0xed5d, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x58b7);
        EXPECT(gbc.pc(), 0xed5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa410), 0x59);
        EXPECT(gbc.readMem(0xed5d), 0x12);
        // 12 02A4
        gbc.setState(0x82c2, 0x7337, 0xd8b0, 0x59dd, 0xf77c, 0x3953, 0x1, 0x1);
        gbc.writeMem(0x82c2, { 0x12 });
        gbc.writeMem(0xf77c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x7337);
        EXPECT(gbc.pc(), 0x82c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82c2), 0x12);
        EXPECT(gbc.readMem(0xf77c), 0xd8);
        // 12 02A5
        gbc.setState(0xadf4, 0xc021, 0xd690, 0x9937, 0xd4a7, 0xe881, 0x0, 0x0);
        gbc.writeMem(0xadf4, { 0x12 });
        gbc.writeMem(0xd4a7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xc021);
        EXPECT(gbc.pc(), 0xadf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadf4), 0x12);
        EXPECT(gbc.readMem(0xd4a7), 0xd6);
        // 12 02A6
        gbc.setState(0x8cfc, 0x560f, 0x3810, 0xba52, 0xdb06, 0xd82a, 0x0, 0x0);
        gbc.writeMem(0x8cfc, { 0x12 });
        gbc.writeMem(0xdb06, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x560f);
        EXPECT(gbc.pc(), 0x8cfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cfc), 0x12);
        EXPECT(gbc.readMem(0xdb06), 0x38);
        // 12 02A7
        gbc.setState(0xe00c, 0x3552, 0xe570, 0xd774, 0xc709, 0x292c, 0x1, 0x1);
        gbc.writeMem(0xc709, { 0x0 });
        gbc.writeMem(0xe00c, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x3552);
        EXPECT(gbc.pc(), 0xe00d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc709), 0xe5);
        EXPECT(gbc.readMem(0xe00c), 0x12);
        // 12 02A9
        gbc.setState(0xdbcf, 0x5f8c, 0xb990, 0xb9a2, 0xfe82, 0x8ebc, 0x0, 0x0);
        gbc.writeMem(0xdbcf, { 0x12 });
        gbc.writeMem(0xfe82, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x5f8c);
        EXPECT(gbc.pc(), 0xdbd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbcf), 0x12);
        EXPECT(gbc.readMem(0xfe82), 0xb9);
        // 12 02AC
        gbc.setState(0x61a9, 0x13d4, 0x75a0, 0x22a7, 0x827d, 0x33a2, 0x0, 0x1);
        gbc.writeMem(0x61a9, { 0x12 });
        gbc.writeMem(0x827d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x13d4);
        EXPECT(gbc.pc(), 0x61aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x827d), 0x75);
        // 12 02AE
        gbc.setState(0xa994, 0xc983, 0x3b50, 0xc693, 0x925c, 0xf157, 0x0, 0x0);
        gbc.writeMem(0x925c, { 0x0 });
        gbc.writeMem(0xa994, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc983);
        EXPECT(gbc.pc(), 0xa995);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x925c), 0x3b);
        EXPECT(gbc.readMem(0xa994), 0x12);
        // 12 02AF
        gbc.setState(0xbe80, 0xd497, 0xbe10, 0xb94e, 0xf955, 0x62b0, 0x1, 0x1);
        gbc.writeMem(0xbe80, { 0x12 });
        gbc.writeMem(0xf955, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xd497);
        EXPECT(gbc.pc(), 0xbe81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe80), 0x12);
        EXPECT(gbc.readMem(0xf955), 0xbe);
        // 12 02B0
        gbc.setState(0x4453, 0xf6b3, 0x82f0, 0x2951, 0x9ee4, 0x6333, 0x0, 0x0);
        gbc.writeMem(0x4453, { 0x12 });
        gbc.writeMem(0x9ee4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xf6b3);
        EXPECT(gbc.pc(), 0x4454);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ee4), 0x82);
        // 12 02B4
        gbc.setState(0xd136, 0xfa94, 0xcb80, 0x73e5, 0x9970, 0xd2dd, 0x1, 0x1);
        gbc.writeMem(0x9970, { 0x0 });
        gbc.writeMem(0xd136, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xfa94);
        EXPECT(gbc.pc(), 0xd137);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9970), 0xcb);
        EXPECT(gbc.readMem(0xd136), 0x12);
        // 12 02BA
        gbc.setState(0x2fee, 0xcd5d, 0xf0, 0x5184, 0x7f66, 0xa1ed, 0x0, 0x1);
        gbc.writeMem(0x2fee, { 0x12 });
        gbc.writeMem(0x7f66, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xcd5d);
        EXPECT(gbc.pc(), 0x2fef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 12 02BB
        gbc.setState(0xad2a, 0x616c, 0x7820, 0x84c6, 0x9901, 0x438, 0x0, 0x1);
        gbc.writeMem(0x9901, { 0x0 });
        gbc.writeMem(0xad2a, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x616c);
        EXPECT(gbc.pc(), 0xad2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9901), 0x78);
        EXPECT(gbc.readMem(0xad2a), 0x12);
        // 12 02BF
        gbc.setState(0x9a0f, 0xef16, 0x6970, 0xdf8c, 0xcca6, 0x8f0d, 0x1, 0x0);
        gbc.writeMem(0x9a0f, { 0x12 });
        gbc.writeMem(0xcca6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xef16);
        EXPECT(gbc.pc(), 0x9a10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a0f), 0x12);
        EXPECT(gbc.readMem(0xcca6), 0x69);
        // 12 02C2
        gbc.setState(0x1aad, 0x2185, 0xd170, 0x4370, 0xb1af, 0xe284, 0x0, 0x1);
        gbc.writeMem(0x1aad, { 0x12 });
        gbc.writeMem(0xb1af, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x2185);
        EXPECT(gbc.pc(), 0x1aae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1af), 0xd1);
        // 12 02C5
        gbc.setState(0x125e, 0x1af4, 0xdbe0, 0x3013, 0xc9cc, 0xdb14, 0x0, 0x0);
        gbc.writeMem(0x125e, { 0x12 });
        gbc.writeMem(0xc9cc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x1af4);
        EXPECT(gbc.pc(), 0x125f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9cc), 0xdb);
        // 12 02C9
        gbc.setState(0xb08c, 0xa024, 0x100, 0x41cb, 0xcad2, 0x1571, 0x1, 0x0);
        gbc.writeMem(0xb08c, { 0x12 });
        gbc.writeMem(0xcad2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xa024);
        EXPECT(gbc.pc(), 0xb08d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb08c), 0x12);
        EXPECT(gbc.readMem(0xcad2), 0x1);
        // 12 02CA
        gbc.setState(0x4958, 0x5f21, 0x2540, 0x9644, 0xa731, 0x9390, 0x0, 0x1);
        gbc.writeMem(0x4958, { 0x12 });
        gbc.writeMem(0xa731, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x5f21);
        EXPECT(gbc.pc(), 0x4959);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa731), 0x25);
        // 12 02CB
        gbc.setState(0xe93c, 0xcdcc, 0x5580, 0x1974, 0x8d0e, 0x3fe5, 0x0, 0x0);
        gbc.writeMem(0x8d0e, { 0x0 });
        gbc.writeMem(0xe93c, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xcdcc);
        EXPECT(gbc.pc(), 0xe93d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d0e), 0x55);
        EXPECT(gbc.readMem(0xe93c), 0x12);
        // 12 02CD
        gbc.setState(0x89b6, 0x2753, 0xfee0, 0xf23e, 0xa12a, 0x5c7e, 0x1, 0x0);
        gbc.writeMem(0x89b6, { 0x12 });
        gbc.writeMem(0xa12a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x2753);
        EXPECT(gbc.pc(), 0x89b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89b6), 0x12);
        EXPECT(gbc.readMem(0xa12a), 0xfe);
        // 12 02CE
        gbc.setState(0x3c34, 0x4823, 0xd5f0, 0x41d0, 0x8428, 0x47b, 0x1, 0x0);
        gbc.writeMem(0x3c34, { 0x12 });
        gbc.writeMem(0x8428, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x4823);
        EXPECT(gbc.pc(), 0x3c35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8428), 0xd5);
        // 12 02CF
        gbc.setState(0xb4f8, 0x1f2d, 0x4600, 0xb47b, 0xd505, 0xa1e, 0x0, 0x0);
        gbc.writeMem(0xb4f8, { 0x12 });
        gbc.writeMem(0xd505, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1f2d);
        EXPECT(gbc.pc(), 0xb4f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4f8), 0x12);
        EXPECT(gbc.readMem(0xd505), 0x46);
        // 12 02D1
        gbc.setState(0x5a95, 0x5852, 0x3490, 0x95eb, 0xd3ba, 0xb0c9, 0x0, 0x1);
        gbc.writeMem(0x5a95, { 0x12 });
        gbc.writeMem(0xd3ba, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x5852);
        EXPECT(gbc.pc(), 0x5a96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3ba), 0x34);
        // 12 02D3
        gbc.setState(0xaa26, 0xe3f9, 0xbe30, 0xd203, 0xc3a9, 0x4473, 0x1, 0x1);
        gbc.writeMem(0xaa26, { 0x12 });
        gbc.writeMem(0xc3a9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe3f9);
        EXPECT(gbc.pc(), 0xaa27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa26), 0x12);
        EXPECT(gbc.readMem(0xc3a9), 0xbe);
        // 12 02D6
        gbc.setState(0xcfe5, 0x3cfa, 0x73e0, 0xa783, 0xa8e2, 0xcf4a, 0x1, 0x0);
        gbc.writeMem(0xa8e2, { 0x0 });
        gbc.writeMem(0xcfe5, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x3cfa);
        EXPECT(gbc.pc(), 0xcfe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8e2), 0x73);
        EXPECT(gbc.readMem(0xcfe5), 0x12);
        // 12 02D7
        gbc.setState(0x5922, 0xa874, 0x4e30, 0x1d09, 0xf073, 0x779d, 0x0, 0x1);
        gbc.writeMem(0x5922, { 0x12 });
        gbc.writeMem(0xf073, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa874);
        EXPECT(gbc.pc(), 0x5923);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf073), 0x4e);
        // 12 02DA
        gbc.setState(0xb41a, 0x1f62, 0x1c30, 0x852b, 0xcc66, 0x848e, 0x0, 0x0);
        gbc.writeMem(0xb41a, { 0x12 });
        gbc.writeMem(0xcc66, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x1f62);
        EXPECT(gbc.pc(), 0xb41b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb41a), 0x12);
        EXPECT(gbc.readMem(0xcc66), 0x1c);
        // 12 02DC
        gbc.setState(0xb39e, 0x2068, 0xf100, 0x330e, 0x8f42, 0x44f2, 0x1, 0x0);
        gbc.writeMem(0x8f42, { 0x0 });
        gbc.writeMem(0xb39e, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x2068);
        EXPECT(gbc.pc(), 0xb39f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f42), 0xf1);
        EXPECT(gbc.readMem(0xb39e), 0x12);
        // 12 02DE
        gbc.setState(0x68a, 0xe289, 0x5800, 0xd87c, 0xd914, 0x69a1, 0x0, 0x0);
        gbc.writeMem(0x68a, { 0x12 });
        gbc.writeMem(0xd914, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xe289);
        EXPECT(gbc.pc(), 0x68b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd914), 0x58);
        // 12 02E0
        gbc.setState(0xd94, 0xd48a, 0xf0c0, 0x23d7, 0xd771, 0xb1e6, 0x0, 0x1);
        gbc.writeMem(0xd94, { 0x12 });
        gbc.writeMem(0xd771, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xd48a);
        EXPECT(gbc.pc(), 0xd95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd771), 0xf0);
        // 12 02E1
        gbc.setState(0xac5d, 0xbd5f, 0xf450, 0xe45c, 0xe7db, 0x2b52, 0x1, 0x1);
        gbc.writeMem(0xac5d, { 0x12 });
        gbc.writeMem(0xe7db, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xbd5f);
        EXPECT(gbc.pc(), 0xac5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac5d), 0x12);
        EXPECT(gbc.readMem(0xe7db), 0xf4);
        // 12 02E2
        gbc.setState(0x5908, 0x84bb, 0x5de0, 0x60af, 0xba44, 0x2329, 0x0, 0x0);
        gbc.writeMem(0x5908, { 0x12 });
        gbc.writeMem(0xba44, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x84bb);
        EXPECT(gbc.pc(), 0x5909);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba44), 0x5d);
        // 12 02E5
        gbc.setState(0x7b1a, 0xd1f6, 0xb440, 0xe0f0, 0x984b, 0xc493, 0x0, 0x1);
        gbc.writeMem(0x7b1a, { 0x12 });
        gbc.writeMem(0x984b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xd1f6);
        EXPECT(gbc.pc(), 0x7b1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x984b), 0xb4);
        // 12 02E6
        gbc.setState(0x551d, 0xfa32, 0xbb40, 0x993d, 0xad1a, 0x620d, 0x0, 0x0);
        gbc.writeMem(0x551d, { 0x12 });
        gbc.writeMem(0xad1a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xfa32);
        EXPECT(gbc.pc(), 0x551e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad1a), 0xbb);
        // 12 02E7
        gbc.setState(0xab67, 0x541e, 0x4d70, 0xc830, 0xdc14, 0xfe0b, 0x0, 0x1);
        gbc.writeMem(0xab67, { 0x12 });
        gbc.writeMem(0xdc14, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x541e);
        EXPECT(gbc.pc(), 0xab68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab67), 0x12);
        EXPECT(gbc.readMem(0xdc14), 0x4d);
        // 12 02EA
        gbc.setState(0xd72f, 0xdc14, 0xc680, 0x3955, 0xf1b2, 0x9737, 0x1, 0x1);
        gbc.writeMem(0xd72f, { 0x12 });
        gbc.writeMem(0xf1b2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xdc14);
        EXPECT(gbc.pc(), 0xd730);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd72f), 0x12);
        EXPECT(gbc.readMem(0xf1b2), 0xc6);
        // 12 02EC
        gbc.setState(0xa385, 0xeac4, 0x7a10, 0xc3b4, 0x8dc0, 0x343f, 0x1, 0x1);
        gbc.writeMem(0x8dc0, { 0x0 });
        gbc.writeMem(0xa385, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xeac4);
        EXPECT(gbc.pc(), 0xa386);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dc0), 0x7a);
        EXPECT(gbc.readMem(0xa385), 0x12);
        // 12 02ED
        gbc.setState(0x49d9, 0xd847, 0xf670, 0x37c4, 0xb668, 0xd941, 0x0, 0x0);
        gbc.writeMem(0x49d9, { 0x12 });
        gbc.writeMem(0xb668, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xd847);
        EXPECT(gbc.pc(), 0x49da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb668), 0xf6);
        // 12 02F0
        gbc.setState(0x897c, 0x5f55, 0xb270, 0x4c23, 0x9d45, 0x8b91, 0x0, 0x0);
        gbc.writeMem(0x897c, { 0x12 });
        gbc.writeMem(0x9d45, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x5f55);
        EXPECT(gbc.pc(), 0x897d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x897c), 0x12);
        EXPECT(gbc.readMem(0x9d45), 0xb2);
        // 12 02F5
        gbc.setState(0x8a2, 0x5992, 0x9dd0, 0x31ba, 0xe77b, 0x4e0b, 0x1, 0x0);
        gbc.writeMem(0x8a2, { 0x12 });
        gbc.writeMem(0xe77b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x5992);
        EXPECT(gbc.pc(), 0x8a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe77b), 0x9d);
        // 12 02F8
        gbc.setState(0x35d1, 0x1a3, 0x2620, 0xab96, 0xd830, 0x573a, 0x0, 0x1);
        gbc.writeMem(0x35d1, { 0x12 });
        gbc.writeMem(0xd830, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x1a3);
        EXPECT(gbc.pc(), 0x35d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd830), 0x26);
        // 12 02FB
        gbc.setState(0xb3b6, 0x8c88, 0xe860, 0x5d5b, 0xb1e4, 0x30a6, 0x1, 0x0);
        gbc.writeMem(0xb1e4, { 0x0 });
        gbc.writeMem(0xb3b6, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x8c88);
        EXPECT(gbc.pc(), 0xb3b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1e4), 0xe8);
        EXPECT(gbc.readMem(0xb3b6), 0x12);
        // 12 02FC
        gbc.setState(0xa365, 0x2bad, 0xa10, 0xdd4c, 0x8fda, 0xa031, 0x0, 0x0);
        gbc.writeMem(0x8fda, { 0x0 });
        gbc.writeMem(0xa365, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x2bad);
        EXPECT(gbc.pc(), 0xa366);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fda), 0xa);
        EXPECT(gbc.readMem(0xa365), 0x12);
        // 12 02FE
        gbc.setState(0x82b4, 0x5cb2, 0x11b0, 0xf05e, 0xe32d, 0x1e28, 0x0, 0x0);
        gbc.writeMem(0x82b4, { 0x12 });
        gbc.writeMem(0xe32d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x5cb2);
        EXPECT(gbc.pc(), 0x82b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82b4), 0x12);
        EXPECT(gbc.readMem(0xe32d), 0x11);
        // 12 0303
        gbc.setState(0x9ac6, 0xa3b3, 0xe660, 0x971f, 0x9691, 0x1c87, 0x0, 0x0);
        gbc.writeMem(0x9691, { 0x0 });
        gbc.writeMem(0x9ac6, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xa3b3);
        EXPECT(gbc.pc(), 0x9ac7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9691), 0xe6);
        EXPECT(gbc.readMem(0x9ac6), 0x12);
        // 12 0305
        gbc.setState(0x5fc, 0x3980, 0x78f0, 0xea08, 0xdb1b, 0x388c, 0x1, 0x0);
        gbc.writeMem(0x5fc, { 0x12 });
        gbc.writeMem(0xdb1b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x3980);
        EXPECT(gbc.pc(), 0x5fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb1b), 0x78);
        // 12 0307
        gbc.setState(0x73de, 0x99bb, 0xfa70, 0x9677, 0xb768, 0xf728, 0x1, 0x1);
        gbc.writeMem(0x73de, { 0x12 });
        gbc.writeMem(0xb768, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x99bb);
        EXPECT(gbc.pc(), 0x73df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb768), 0xfa);
        // 12 0309
        gbc.setState(0x9787, 0xb753, 0x600, 0x2236, 0xa75f, 0xf426, 0x0, 0x1);
        gbc.writeMem(0x9787, { 0x12 });
        gbc.writeMem(0xa75f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xb753);
        EXPECT(gbc.pc(), 0x9788);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9787), 0x12);
        EXPECT(gbc.readMem(0xa75f), 0x6);
        // 12 030A
        gbc.setState(0x9638, 0xd7f3, 0x8f90, 0x8c20, 0xfa4d, 0x6c4f, 0x1, 0x0);
        gbc.writeMem(0x9638, { 0x12 });
        gbc.writeMem(0xfa4d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd7f3);
        EXPECT(gbc.pc(), 0x9639);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9638), 0x12);
        EXPECT(gbc.readMem(0xfa4d), 0x8f);
        // 12 030C
        gbc.setState(0x48b8, 0xf950, 0x5b70, 0xad0e, 0xb9c7, 0xe338, 0x1, 0x0);
        gbc.writeMem(0x48b8, { 0x12 });
        gbc.writeMem(0xb9c7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xf950);
        EXPECT(gbc.pc(), 0x48b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9c7), 0x5b);
        // 12 030D
        gbc.setState(0xeff0, 0xbd7b, 0xd5a0, 0x55d8, 0xf3cf, 0x2ab2, 0x0, 0x0);
        gbc.writeMem(0xeff0, { 0x12 });
        gbc.writeMem(0xf3cf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xbd7b);
        EXPECT(gbc.pc(), 0xeff1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeff0), 0x12);
        EXPECT(gbc.readMem(0xf3cf), 0xd5);
        // 12 030E
        gbc.setState(0x92be, 0xc06c, 0x1080, 0xef69, 0xe7f6, 0x559a, 0x0, 0x1);
        gbc.writeMem(0x92be, { 0x12 });
        gbc.writeMem(0xe7f6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xc06c);
        EXPECT(gbc.pc(), 0x92bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92be), 0x12);
        EXPECT(gbc.readMem(0xe7f6), 0x10);
        // 12 030F
        gbc.setState(0xc0f5, 0xb982, 0x3a0, 0xbfac, 0x87a4, 0x3ecd, 0x0, 0x0);
        gbc.writeMem(0x87a4, { 0x0 });
        gbc.writeMem(0xc0f5, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xb982);
        EXPECT(gbc.pc(), 0xc0f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87a4), 0x3);
        EXPECT(gbc.readMem(0xc0f5), 0x12);
        // 12 0310
        gbc.setState(0x9a71, 0x404d, 0x3fa0, 0x3c0, 0x9df9, 0x70f6, 0x0, 0x0);
        gbc.writeMem(0x9a71, { 0x12 });
        gbc.writeMem(0x9df9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x404d);
        EXPECT(gbc.pc(), 0x9a72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a71), 0x12);
        EXPECT(gbc.readMem(0x9df9), 0x3f);
        // 12 0313
        gbc.setState(0x20ce, 0x33ac, 0xbe90, 0xc48b, 0xed8c, 0x8c9c, 0x0, 0x0);
        gbc.writeMem(0x20ce, { 0x12 });
        gbc.writeMem(0xed8c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x33ac);
        EXPECT(gbc.pc(), 0x20cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed8c), 0xbe);
        // 12 0317
        gbc.setState(0x92fe, 0xcbbe, 0xcaa0, 0xbf44, 0xb372, 0x1ae0, 0x0, 0x1);
        gbc.writeMem(0x92fe, { 0x12 });
        gbc.writeMem(0xb372, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xcbbe);
        EXPECT(gbc.pc(), 0x92ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92fe), 0x12);
        EXPECT(gbc.readMem(0xb372), 0xca);
        // 12 0319
        gbc.setState(0xca96, 0x4842, 0x860, 0xacce, 0x95b2, 0xe50, 0x0, 0x1);
        gbc.writeMem(0x95b2, { 0x0 });
        gbc.writeMem(0xca96, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x4842);
        EXPECT(gbc.pc(), 0xca97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95b2), 0x8);
        EXPECT(gbc.readMem(0xca96), 0x12);
        // 12 031C
        gbc.setState(0xe75f, 0x35e1, 0xbdc0, 0x796a, 0x91d5, 0x6185, 0x1, 0x1);
        gbc.writeMem(0x91d5, { 0x0 });
        gbc.writeMem(0xe75f, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x35e1);
        EXPECT(gbc.pc(), 0xe760);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91d5), 0xbd);
        EXPECT(gbc.readMem(0xe75f), 0x12);
        // 12 031D
        gbc.setState(0x3cc0, 0xcd2e, 0xed10, 0x41d, 0xad51, 0xe012, 0x0, 0x0);
        gbc.writeMem(0x3cc0, { 0x12 });
        gbc.writeMem(0xad51, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xcd2e);
        EXPECT(gbc.pc(), 0x3cc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad51), 0xed);
        // 12 031E
        gbc.setState(0xb87c, 0x645a, 0x28c0, 0xef8e, 0xc2ea, 0x2216, 0x1, 0x0);
        gbc.writeMem(0xb87c, { 0x12 });
        gbc.writeMem(0xc2ea, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x645a);
        EXPECT(gbc.pc(), 0xb87d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb87c), 0x12);
        EXPECT(gbc.readMem(0xc2ea), 0x28);
        // 12 031F
        gbc.setState(0x7b29, 0xb28b, 0xb5e0, 0x191c, 0xd713, 0xe27d, 0x1, 0x0);
        gbc.writeMem(0x7b29, { 0x12 });
        gbc.writeMem(0xd713, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb28b);
        EXPECT(gbc.pc(), 0x7b2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd713), 0xb5);
        // 12 0320
        gbc.setState(0xb990, 0x2ab3, 0xb5b0, 0x8fa3, 0xa230, 0xed7e, 0x1, 0x0);
        gbc.writeMem(0xa230, { 0x0 });
        gbc.writeMem(0xb990, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x2ab3);
        EXPECT(gbc.pc(), 0xb991);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa230), 0xb5);
        EXPECT(gbc.readMem(0xb990), 0x12);
        // 12 0323
        gbc.setState(0x3d18, 0xc036, 0xc50, 0x5baf, 0xfb61, 0x2d74, 0x1, 0x0);
        gbc.writeMem(0x3d18, { 0x12 });
        gbc.writeMem(0xfb61, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xc036);
        EXPECT(gbc.pc(), 0x3d19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfb61), 0xc);
        // 12 0325
        gbc.setState(0x6f96, 0x5f6c, 0x7b20, 0x480a, 0xa64b, 0xa16b, 0x1, 0x0);
        gbc.writeMem(0x6f96, { 0x12 });
        gbc.writeMem(0xa64b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x5f6c);
        EXPECT(gbc.pc(), 0x6f97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa64b), 0x7b);
        // 12 0326
        gbc.setState(0x99d, 0x8574, 0x4bd0, 0x1f69, 0xbfaa, 0x4800, 0x0, 0x1);
        gbc.writeMem(0x99d, { 0x12 });
        gbc.writeMem(0xbfaa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x8574);
        EXPECT(gbc.pc(), 0x99e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfaa), 0x4b);
        // 12 0327
        gbc.setState(0x63ad, 0xb686, 0x6370, 0xe54, 0xba6e, 0xaf15, 0x1, 0x1);
        gbc.writeMem(0x63ad, { 0x12 });
        gbc.writeMem(0xba6e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xb686);
        EXPECT(gbc.pc(), 0x63ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba6e), 0x63);
        // 12 0328
        gbc.setState(0xc0e0, 0xa248, 0x80b0, 0xd178, 0xc199, 0x5135, 0x1, 0x1);
        gbc.writeMem(0xc0e0, { 0x12 });
        gbc.writeMem(0xc199, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xa248);
        EXPECT(gbc.pc(), 0xc0e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0e0), 0x12);
        EXPECT(gbc.readMem(0xc199), 0x80);
        // 12 032A
        gbc.setState(0x5f56, 0xbc8d, 0x4db0, 0x2c4d, 0xa587, 0xe0d6, 0x0, 0x0);
        gbc.writeMem(0x5f56, { 0x12 });
        gbc.writeMem(0xa587, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xbc8d);
        EXPECT(gbc.pc(), 0x5f57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa587), 0x4d);
        // 12 032E
        gbc.setState(0xa7a7, 0xa56a, 0x19d0, 0x8e0c, 0x9ac5, 0x599e, 0x1, 0x0);
        gbc.writeMem(0x9ac5, { 0x0 });
        gbc.writeMem(0xa7a7, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa56a);
        EXPECT(gbc.pc(), 0xa7a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ac5), 0x19);
        EXPECT(gbc.readMem(0xa7a7), 0x12);
        // 12 032F
        gbc.setState(0xe4e3, 0x67be, 0x4810, 0xd42e, 0xda27, 0xcf57, 0x1, 0x0);
        gbc.writeMem(0xda27, { 0x0 });
        gbc.writeMem(0xe4e3, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x67be);
        EXPECT(gbc.pc(), 0xe4e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda27), 0x48);
        EXPECT(gbc.readMem(0xe4e3), 0x12);
        // 12 0331
        gbc.setState(0x3ee3, 0xb297, 0x220, 0x9d39, 0x863f, 0x1eae, 0x0, 0x0);
        gbc.writeMem(0x3ee3, { 0x12 });
        gbc.writeMem(0x863f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xb297);
        EXPECT(gbc.pc(), 0x3ee4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x863f), 0x2);
        // 12 0334
        gbc.setState(0xb49c, 0xf9ca, 0xfe00, 0xba6b, 0xdd7e, 0x83c0, 0x1, 0x1);
        gbc.writeMem(0xb49c, { 0x12 });
        gbc.writeMem(0xdd7e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xf9ca);
        EXPECT(gbc.pc(), 0xb49d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb49c), 0x12);
        EXPECT(gbc.readMem(0xdd7e), 0xfe);
        // 12 0335
        gbc.setState(0x3a06, 0x70cb, 0x9510, 0x7e45, 0xb36a, 0xbec6, 0x0, 0x1);
        gbc.writeMem(0x3a06, { 0x12 });
        gbc.writeMem(0xb36a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x70cb);
        EXPECT(gbc.pc(), 0x3a07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb36a), 0x95);
        // 12 0337
        gbc.setState(0xed0, 0x29d5, 0x40f0, 0x90da, 0xf04a, 0xe07e, 0x1, 0x1);
        gbc.writeMem(0xed0, { 0x12 });
        gbc.writeMem(0xf04a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x29d5);
        EXPECT(gbc.pc(), 0xed1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf04a), 0x40);
        // 12 0338
        gbc.setState(0xd40b, 0x22bf, 0xaf80, 0x3ed5, 0xc319, 0x356c, 0x1, 0x1);
        gbc.writeMem(0xc319, { 0x0 });
        gbc.writeMem(0xd40b, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x22bf);
        EXPECT(gbc.pc(), 0xd40c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc319), 0xaf);
        EXPECT(gbc.readMem(0xd40b), 0x12);
        // 12 033D
        gbc.setState(0xd21a, 0x36e2, 0xf750, 0xbb51, 0xe6e1, 0x91f0, 0x1, 0x1);
        gbc.writeMem(0xd21a, { 0x12 });
        gbc.writeMem(0xe6e1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x36e2);
        EXPECT(gbc.pc(), 0xd21b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd21a), 0x12);
        EXPECT(gbc.readMem(0xe6e1), 0xf7);
        // 12 033F
        gbc.setState(0x84c9, 0x8ecc, 0x6620, 0xa28d, 0x845b, 0x20d4, 0x0, 0x0);
        gbc.writeMem(0x845b, { 0x0 });
        gbc.writeMem(0x84c9, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8ecc);
        EXPECT(gbc.pc(), 0x84ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x845b), 0x66);
        EXPECT(gbc.readMem(0x84c9), 0x12);
        // 12 0340
        gbc.setState(0xc024, 0xdca4, 0xf410, 0xa708, 0x93d3, 0x3ea8, 0x1, 0x0);
        gbc.writeMem(0x93d3, { 0x0 });
        gbc.writeMem(0xc024, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xdca4);
        EXPECT(gbc.pc(), 0xc025);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93d3), 0xf4);
        EXPECT(gbc.readMem(0xc024), 0x12);
        // 12 0341
        gbc.setState(0x880f, 0x2ef7, 0xf910, 0xc0a0, 0xa292, 0xb302, 0x1, 0x0);
        gbc.writeMem(0x880f, { 0x12 });
        gbc.writeMem(0xa292, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x2ef7);
        EXPECT(gbc.pc(), 0x8810);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x880f), 0x12);
        EXPECT(gbc.readMem(0xa292), 0xf9);
        // 12 0342
        gbc.setState(0xb015, 0x16f9, 0x5d90, 0x41f2, 0xb02c, 0xfbe3, 0x1, 0x0);
        gbc.writeMem(0xb015, { 0x12 });
        gbc.writeMem(0xb02c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x16f9);
        EXPECT(gbc.pc(), 0xb016);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb015), 0x12);
        EXPECT(gbc.readMem(0xb02c), 0x5d);
        // 12 0343
        gbc.setState(0xb45f, 0x1dde, 0x2fd0, 0xadea, 0x9d96, 0x3c96, 0x0, 0x0);
        gbc.writeMem(0x9d96, { 0x0 });
        gbc.writeMem(0xb45f, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x1dde);
        EXPECT(gbc.pc(), 0xb460);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d96), 0x2f);
        EXPECT(gbc.readMem(0xb45f), 0x12);
        // 12 0344
        gbc.setState(0xd5f, 0xb3c7, 0x73a0, 0xea95, 0xb2a2, 0xb7cb, 0x1, 0x1);
        gbc.writeMem(0xd5f, { 0x12 });
        gbc.writeMem(0xb2a2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xb3c7);
        EXPECT(gbc.pc(), 0xd60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2a2), 0x73);
        // 12 034A
        gbc.setState(0x2e86, 0xe065, 0xe240, 0x81a7, 0xb95d, 0x7f29, 0x0, 0x0);
        gbc.writeMem(0x2e86, { 0x12 });
        gbc.writeMem(0xb95d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xe065);
        EXPECT(gbc.pc(), 0x2e87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb95d), 0xe2);
        // 12 034B
        gbc.setState(0x1e34, 0x1307, 0x11b0, 0x368d, 0x9ab3, 0x2e42, 0x0, 0x1);
        gbc.writeMem(0x1e34, { 0x12 });
        gbc.writeMem(0x9ab3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x1307);
        EXPECT(gbc.pc(), 0x1e35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ab3), 0x11);
        // 12 034D
        gbc.setState(0x19da, 0x683e, 0x4200, 0x4a70, 0x9546, 0x994f, 0x1, 0x0);
        gbc.writeMem(0x19da, { 0x12 });
        gbc.writeMem(0x9546, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x683e);
        EXPECT(gbc.pc(), 0x19db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9546), 0x42);
        // 12 034E
        gbc.setState(0xc5c, 0xaafa, 0x4ca0, 0x6968, 0xdbf5, 0x5834, 0x1, 0x0);
        gbc.writeMem(0xc5c, { 0x12 });
        gbc.writeMem(0xdbf5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xaafa);
        EXPECT(gbc.pc(), 0xc5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbf5), 0x4c);
        // 12 034F
        gbc.setState(0xdf29, 0x6bd6, 0xbb50, 0xba3f, 0xf4e7, 0x9961, 0x1, 0x1);
        gbc.writeMem(0xdf29, { 0x12 });
        gbc.writeMem(0xf4e7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x6bd6);
        EXPECT(gbc.pc(), 0xdf2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf29), 0x12);
        EXPECT(gbc.readMem(0xf4e7), 0xbb);
        // 12 0350
        gbc.setState(0x7a56, 0xf3c3, 0xf760, 0x20c3, 0xf34a, 0xb276, 0x1, 0x1);
        gbc.writeMem(0x7a56, { 0x12 });
        gbc.writeMem(0xf34a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xf3c3);
        EXPECT(gbc.pc(), 0x7a57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf34a), 0xf7);
        // 12 0351
        gbc.setState(0x9c1e, 0x6e3d, 0xd0, 0xb4f1, 0x3a3b, 0xef56, 0x1, 0x0);
        gbc.writeMem(0x3a3b, { 0x0 });
        gbc.writeMem(0x9c1e, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x6e3d);
        EXPECT(gbc.pc(), 0x9c1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c1e), 0x12);
        // 12 0355
        gbc.setState(0x321d, 0xf3da, 0xd050, 0x9886, 0x915a, 0x933, 0x1, 0x1);
        gbc.writeMem(0x321d, { 0x12 });
        gbc.writeMem(0x915a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xf3da);
        EXPECT(gbc.pc(), 0x321e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x915a), 0xd0);
        // 12 035B
        gbc.setState(0xaf40, 0x2d9e, 0x3a0, 0x4b24, 0x829c, 0x57e8, 0x1, 0x1);
        gbc.writeMem(0x829c, { 0x0 });
        gbc.writeMem(0xaf40, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x2d9e);
        EXPECT(gbc.pc(), 0xaf41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x829c), 0x3);
        EXPECT(gbc.readMem(0xaf40), 0x12);
        // 12 035D
        gbc.setState(0x5881, 0x34b2, 0x4210, 0xf105, 0xc185, 0xdc1d, 0x0, 0x1);
        gbc.writeMem(0x5881, { 0x12 });
        gbc.writeMem(0xc185, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x34b2);
        EXPECT(gbc.pc(), 0x5882);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc185), 0x42);
        // 12 035E
        gbc.setState(0x49f1, 0xf50b, 0x3270, 0xea0e, 0xf549, 0xdc63, 0x1, 0x1);
        gbc.writeMem(0x49f1, { 0x12 });
        gbc.writeMem(0xf549, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xf50b);
        EXPECT(gbc.pc(), 0x49f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf549), 0x32);
        // 12 035F
        gbc.setState(0x36b0, 0x2d9d, 0x31a0, 0x6e50, 0x96ef, 0xe2e3, 0x0, 0x0);
        gbc.writeMem(0x36b0, { 0x12 });
        gbc.writeMem(0x96ef, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x2d9d);
        EXPECT(gbc.pc(), 0x36b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96ef), 0x31);
        // 12 0360
        gbc.setState(0xaa06, 0x594f, 0x4d60, 0x8e07, 0xbe45, 0xc6c6, 0x1, 0x1);
        gbc.writeMem(0xaa06, { 0x12 });
        gbc.writeMem(0xbe45, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x594f);
        EXPECT(gbc.pc(), 0xaa07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa06), 0x12);
        EXPECT(gbc.readMem(0xbe45), 0x4d);
        // 12 0361
        gbc.setState(0x481d, 0x991d, 0xbb0, 0x5af3, 0xa134, 0x1677, 0x1, 0x1);
        gbc.writeMem(0x481d, { 0x12 });
        gbc.writeMem(0xa134, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x991d);
        EXPECT(gbc.pc(), 0x481e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa134), 0xb);
        // 12 0362
        gbc.setState(0x93d8, 0x1539, 0x54d0, 0xba4e, 0x9026, 0x6e2a, 0x0, 0x0);
        gbc.writeMem(0x9026, { 0x0 });
        gbc.writeMem(0x93d8, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x1539);
        EXPECT(gbc.pc(), 0x93d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9026), 0x54);
        EXPECT(gbc.readMem(0x93d8), 0x12);
        // 12 0363
        gbc.setState(0x6a17, 0x2a5c, 0x8ce0, 0xbe05, 0xaf8e, 0x6b1f, 0x0, 0x1);
        gbc.writeMem(0x6a17, { 0x12 });
        gbc.writeMem(0xaf8e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x2a5c);
        EXPECT(gbc.pc(), 0x6a18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf8e), 0x8c);
        // 12 0365
        gbc.setState(0x6719, 0x99e9, 0x8430, 0xacd1, 0x9807, 0x8cd8, 0x1, 0x1);
        gbc.writeMem(0x6719, { 0x12 });
        gbc.writeMem(0x9807, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x99e9);
        EXPECT(gbc.pc(), 0x671a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9807), 0x84);
        // 12 0368
        gbc.setState(0xd1ee, 0xca06, 0x5b40, 0x278f, 0xa941, 0xd7ac, 0x0, 0x0);
        gbc.writeMem(0xa941, { 0x0 });
        gbc.writeMem(0xd1ee, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xca06);
        EXPECT(gbc.pc(), 0xd1ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa941), 0x5b);
        EXPECT(gbc.readMem(0xd1ee), 0x12);
        // 12 0369
        gbc.setState(0xee1a, 0x892e, 0x8830, 0x41be, 0x8182, 0x8fca, 0x0, 0x0);
        gbc.writeMem(0x8182, { 0x0 });
        gbc.writeMem(0xee1a, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x892e);
        EXPECT(gbc.pc(), 0xee1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8182), 0x88);
        EXPECT(gbc.readMem(0xee1a), 0x12);
        // 12 036A
        gbc.setState(0x13d1, 0xbec2, 0x8f30, 0xb3a, 0xd285, 0x1c4c, 0x1, 0x0);
        gbc.writeMem(0x13d1, { 0x12 });
        gbc.writeMem(0xd285, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xbec2);
        EXPECT(gbc.pc(), 0x13d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd285), 0x8f);
        // 12 036B
        gbc.setState(0x60be, 0xbe44, 0xfd10, 0x8144, 0x8b28, 0x3748, 0x1, 0x1);
        gbc.writeMem(0x60be, { 0x12 });
        gbc.writeMem(0x8b28, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xbe44);
        EXPECT(gbc.pc(), 0x60bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b28), 0xfd);
        // 12 0371
        gbc.setState(0x5b8d, 0x4753, 0xf420, 0xa082, 0xe8a8, 0x6a64, 0x1, 0x0);
        gbc.writeMem(0x5b8d, { 0x12 });
        gbc.writeMem(0xe8a8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x4753);
        EXPECT(gbc.pc(), 0x5b8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8a8), 0xf4);
        // 12 0372
        gbc.setState(0x4f10, 0xc9e9, 0xd2f0, 0xcc8d, 0x8722, 0xe418, 0x0, 0x0);
        gbc.writeMem(0x4f10, { 0x12 });
        gbc.writeMem(0x8722, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xc9e9);
        EXPECT(gbc.pc(), 0x4f11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8722), 0xd2);
        // 12 0373
        gbc.setState(0x4b69, 0x2d56, 0x46e0, 0x318f, 0xf643, 0xfab8, 0x1, 0x0);
        gbc.writeMem(0x4b69, { 0x12 });
        gbc.writeMem(0xf643, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x2d56);
        EXPECT(gbc.pc(), 0x4b6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf643), 0x46);
        // 12 0374
        gbc.setState(0xc94c, 0xf65c, 0x6bc0, 0x94c6, 0xd82e, 0xc0b5, 0x1, 0x1);
        gbc.writeMem(0xc94c, { 0x12 });
        gbc.writeMem(0xd82e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xf65c);
        EXPECT(gbc.pc(), 0xc94d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc94c), 0x12);
        EXPECT(gbc.readMem(0xd82e), 0x6b);
        // 12 0375
        gbc.setState(0xcc5f, 0xdbeb, 0xa6b0, 0xe860, 0xb9fd, 0x29ce, 0x1, 0x0);
        gbc.writeMem(0xb9fd, { 0x0 });
        gbc.writeMem(0xcc5f, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xdbeb);
        EXPECT(gbc.pc(), 0xcc60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9fd), 0xa6);
        EXPECT(gbc.readMem(0xcc5f), 0x12);
        // 12 037A
        gbc.setState(0x735b, 0xbbe2, 0xade0, 0xed72, 0xcf8e, 0x739, 0x1, 0x1);
        gbc.writeMem(0x735b, { 0x12 });
        gbc.writeMem(0xcf8e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xbbe2);
        EXPECT(gbc.pc(), 0x735c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf8e), 0xad);
        // 12 037B
        gbc.setState(0x21fa, 0xf1b3, 0x77e0, 0x7514, 0xc3ed, 0x280b, 0x1, 0x1);
        gbc.writeMem(0x21fa, { 0x12 });
        gbc.writeMem(0xc3ed, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xf1b3);
        EXPECT(gbc.pc(), 0x21fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3ed), 0x77);
        // 12 037C
        gbc.setState(0xa69c, 0x1071, 0xe610, 0x2937, 0xf68c, 0xdad7, 0x0, 0x0);
        gbc.writeMem(0xa69c, { 0x12 });
        gbc.writeMem(0xf68c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x1071);
        EXPECT(gbc.pc(), 0xa69d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa69c), 0x12);
        EXPECT(gbc.readMem(0xf68c), 0xe6);
        // 12 037D
        gbc.setState(0x7e0f, 0xf4bc, 0xdef0, 0x91da, 0x9b7a, 0x5983, 0x1, 0x1);
        gbc.writeMem(0x7e0f, { 0x12 });
        gbc.writeMem(0x9b7a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xf4bc);
        EXPECT(gbc.pc(), 0x7e10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b7a), 0xde);
        // 12 037F
        gbc.setState(0x8b82, 0x319c, 0x8820, 0x63ec, 0x80b8, 0xec8b, 0x1, 0x0);
        gbc.writeMem(0x80b8, { 0x0 });
        gbc.writeMem(0x8b82, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x319c);
        EXPECT(gbc.pc(), 0x8b83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80b8), 0x88);
        EXPECT(gbc.readMem(0x8b82), 0x12);
        // 12 0385
        gbc.setState(0x87c6, 0xcc1e, 0x56e0, 0xccb4, 0xf708, 0xb943, 0x1, 0x0);
        gbc.writeMem(0x87c6, { 0x12 });
        gbc.writeMem(0xf708, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xcc1e);
        EXPECT(gbc.pc(), 0x87c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87c6), 0x12);
        EXPECT(gbc.readMem(0xf708), 0x56);
        // 12 0389
        gbc.setState(0xe3f1, 0xfda8, 0x6da0, 0x2911, 0xf39d, 0x416e, 0x1, 0x0);
        gbc.writeMem(0xe3f1, { 0x12 });
        gbc.writeMem(0xf39d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xfda8);
        EXPECT(gbc.pc(), 0xe3f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3f1), 0x12);
        EXPECT(gbc.readMem(0xf39d), 0x6d);
        // 12 038B
        gbc.setState(0xbaf4, 0x3cc, 0xd8e0, 0x84fd, 0x9490, 0x39bb, 0x1, 0x1);
        gbc.writeMem(0x9490, { 0x0 });
        gbc.writeMem(0xbaf4, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x3cc);
        EXPECT(gbc.pc(), 0xbaf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9490), 0xd8);
        EXPECT(gbc.readMem(0xbaf4), 0x12);
        // 12 038C
        gbc.setState(0x9e94, 0xe43, 0xe0f0, 0xbee4, 0xd668, 0x30f1, 0x1, 0x1);
        gbc.writeMem(0x9e94, { 0x12 });
        gbc.writeMem(0xd668, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xe43);
        EXPECT(gbc.pc(), 0x9e95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e94), 0x12);
        EXPECT(gbc.readMem(0xd668), 0xe0);
        // 12 038E
        gbc.setState(0x6cb5, 0x3580, 0xb840, 0x1b70, 0xfb7d, 0xae6f, 0x0, 0x0);
        gbc.writeMem(0x6cb5, { 0x12 });
        gbc.writeMem(0xfb7d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x3580);
        EXPECT(gbc.pc(), 0x6cb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfb7d), 0xb8);
        // 12 038F
        gbc.setState(0x727b, 0x7bbe, 0xcf10, 0xe0f7, 0xb4b6, 0x22c4, 0x1, 0x1);
        gbc.writeMem(0x727b, { 0x12 });
        gbc.writeMem(0xb4b6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x7bbe);
        EXPECT(gbc.pc(), 0x727c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4b6), 0xcf);
        // 12 0392
        gbc.setState(0x51d9, 0x9535, 0xc830, 0xc064, 0xef70, 0xe47c, 0x0, 0x1);
        gbc.writeMem(0x51d9, { 0x12 });
        gbc.writeMem(0xef70, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x9535);
        EXPECT(gbc.pc(), 0x51da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef70), 0xc8);
        // 12 0394
        gbc.setState(0xe8a9, 0xb88a, 0x5170, 0x3ac8, 0x831b, 0x212b, 0x0, 0x1);
        gbc.writeMem(0x831b, { 0x0 });
        gbc.writeMem(0xe8a9, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xb88a);
        EXPECT(gbc.pc(), 0xe8aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x831b), 0x51);
        EXPECT(gbc.readMem(0xe8a9), 0x12);
        // 12 0395
        gbc.setState(0x603c, 0xa5fa, 0xe3b0, 0x25ec, 0xbb09, 0x4623, 0x0, 0x0);
        gbc.writeMem(0x603c, { 0x12 });
        gbc.writeMem(0xbb09, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xa5fa);
        EXPECT(gbc.pc(), 0x603d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb09), 0xe3);
        // 12 0396
        gbc.setState(0x1157, 0x817c, 0xa880, 0xfc97, 0x8c30, 0x30e9, 0x1, 0x1);
        gbc.writeMem(0x1157, { 0x12 });
        gbc.writeMem(0x8c30, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x817c);
        EXPECT(gbc.pc(), 0x1158);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c30), 0xa8);
        // 12 0398
        gbc.setState(0xbdee, 0xe1bb, 0x1e20, 0x823d, 0xe657, 0x7f1e, 0x0, 0x1);
        gbc.writeMem(0xbdee, { 0x12 });
        gbc.writeMem(0xe657, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xe1bb);
        EXPECT(gbc.pc(), 0xbdef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdee), 0x12);
        EXPECT(gbc.readMem(0xe657), 0x1e);
        // 12 039A
        gbc.setState(0x6623, 0xe600, 0xb4f0, 0x142a, 0xe098, 0x623, 0x0, 0x0);
        gbc.writeMem(0x6623, { 0x12 });
        gbc.writeMem(0xe098, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xe600);
        EXPECT(gbc.pc(), 0x6624);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe098), 0xb4);
        // 12 03A0
        gbc.setState(0x60e1, 0xee5b, 0x3e10, 0x403d, 0xbaf9, 0x938e, 0x1, 0x1);
        gbc.writeMem(0x60e1, { 0x12 });
        gbc.writeMem(0xbaf9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xee5b);
        EXPECT(gbc.pc(), 0x60e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaf9), 0x3e);
        // 12 03A3
        gbc.setState(0x792d, 0xaaa, 0x32b0, 0xb43c, 0xe415, 0x378d, 0x1, 0x0);
        gbc.writeMem(0x792d, { 0x12 });
        gbc.writeMem(0xe415, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xaaa);
        EXPECT(gbc.pc(), 0x792e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe415), 0x32);
        // 12 03A6
        gbc.setState(0xba98, 0xbd2, 0xcf80, 0x8985, 0xf7e7, 0xd4e, 0x1, 0x0);
        gbc.writeMem(0xba98, { 0x12 });
        gbc.writeMem(0xf7e7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xbd2);
        EXPECT(gbc.pc(), 0xba99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba98), 0x12);
        EXPECT(gbc.readMem(0xf7e7), 0xcf);
        // 12 03A9
        gbc.setState(0xc259, 0x775, 0x5f50, 0xea09, 0x9f85, 0xc889, 0x1, 0x1);
        gbc.writeMem(0x9f85, { 0x0 });
        gbc.writeMem(0xc259, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x775);
        EXPECT(gbc.pc(), 0xc25a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f85), 0x5f);
        EXPECT(gbc.readMem(0xc259), 0x12);
        // 12 03AA
        gbc.setState(0x10e2, 0x8ad2, 0x2730, 0x6542, 0x9891, 0xf68c, 0x0, 0x0);
        gbc.writeMem(0x10e2, { 0x12 });
        gbc.writeMem(0x9891, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x8ad2);
        EXPECT(gbc.pc(), 0x10e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9891), 0x27);
        // 12 03B0
        gbc.setState(0x5215, 0x4c82, 0x4650, 0xe26e, 0x9aa8, 0xc8de, 0x0, 0x1);
        gbc.writeMem(0x5215, { 0x12 });
        gbc.writeMem(0x9aa8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x4c82);
        EXPECT(gbc.pc(), 0x5216);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9aa8), 0x46);
        // 12 03B1
        gbc.setState(0x9f2b, 0xabfe, 0xe620, 0x625b, 0xbf8b, 0xa9fe, 0x0, 0x1);
        gbc.writeMem(0x9f2b, { 0x12 });
        gbc.writeMem(0xbf8b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xabfe);
        EXPECT(gbc.pc(), 0x9f2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f2b), 0x12);
        EXPECT(gbc.readMem(0xbf8b), 0xe6);
        // 12 03B3
        gbc.setState(0xd3b0, 0x96b4, 0x8630, 0x7e5, 0xce4d, 0x4ec7, 0x1, 0x0);
        gbc.writeMem(0xce4d, { 0x0 });
        gbc.writeMem(0xd3b0, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x96b4);
        EXPECT(gbc.pc(), 0xd3b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce4d), 0x86);
        EXPECT(gbc.readMem(0xd3b0), 0x12);
        // 12 03B4
        gbc.setState(0x5369, 0x1599, 0xc3f0, 0xa29c, 0xe970, 0xc64d, 0x1, 0x0);
        gbc.writeMem(0x5369, { 0x12 });
        gbc.writeMem(0xe970, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x1599);
        EXPECT(gbc.pc(), 0x536a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe970), 0xc3);
        // 12 03B8
        gbc.setState(0xc4ff, 0x7f59, 0x6d50, 0x5778, 0xa992, 0xf28d, 0x1, 0x1);
        gbc.writeMem(0xa992, { 0x0 });
        gbc.writeMem(0xc4ff, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x7f59);
        EXPECT(gbc.pc(), 0xc500);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa992), 0x6d);
        EXPECT(gbc.readMem(0xc4ff), 0x12);
        // 12 03BB
        gbc.setState(0xb7, 0x2bc5, 0x8b40, 0x26c6, 0xe939, 0xdb75, 0x1, 0x1);
        gbc.writeMem(0xb7, { 0x12 });
        gbc.writeMem(0xe939, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x2bc5);
        EXPECT(gbc.pc(), 0xb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe939), 0x8b);
        // 12 03BC
        gbc.setState(0xa4a4, 0x4c09, 0x1860, 0x97d4, 0xa273, 0x10, 0x0, 0x1);
        gbc.writeMem(0xa273, { 0x0 });
        gbc.writeMem(0xa4a4, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x4c09);
        EXPECT(gbc.pc(), 0xa4a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa273), 0x18);
        EXPECT(gbc.readMem(0xa4a4), 0x12);
        // 12 03BF
        gbc.setState(0xc272, 0x8df4, 0x5250, 0x82df, 0xd3fd, 0x5a97, 0x0, 0x1);
        gbc.writeMem(0xc272, { 0x12 });
        gbc.writeMem(0xd3fd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8df4);
        EXPECT(gbc.pc(), 0xc273);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc272), 0x12);
        EXPECT(gbc.readMem(0xd3fd), 0x52);
        // 12 03C0
        gbc.setState(0xc0c1, 0x9d34, 0x9e00, 0x8261, 0xc018, 0x1948, 0x0, 0x1);
        gbc.writeMem(0xc018, { 0x0 });
        gbc.writeMem(0xc0c1, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x9d34);
        EXPECT(gbc.pc(), 0xc0c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc018), 0x9e);
        EXPECT(gbc.readMem(0xc0c1), 0x12);
        // 12 03C1
        gbc.setState(0x14ed, 0x6277, 0xcc80, 0x51ad, 0x875e, 0xf18e, 0x1, 0x1);
        gbc.writeMem(0x14ed, { 0x12 });
        gbc.writeMem(0x875e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x6277);
        EXPECT(gbc.pc(), 0x14ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x875e), 0xcc);
        // 12 03C4
        gbc.setState(0x3368, 0xc932, 0x9480, 0xb2b4, 0xaf29, 0x1aad, 0x0, 0x0);
        gbc.writeMem(0x3368, { 0x12 });
        gbc.writeMem(0xaf29, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc932);
        EXPECT(gbc.pc(), 0x3369);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf29), 0x94);
        // 12 03C7
        gbc.setState(0xa7cc, 0x6e14, 0x89c0, 0x28c5, 0xfd31, 0x2ad6, 0x1, 0x1);
        gbc.writeMem(0xa7cc, { 0x12 });
        gbc.writeMem(0xfd31, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x6e14);
        EXPECT(gbc.pc(), 0xa7cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7cc), 0x12);
        EXPECT(gbc.readMem(0xfd31), 0x89);
        // 12 03C9
        gbc.setState(0x2696, 0x9b3e, 0x91d0, 0x354d, 0xe4c0, 0x2b04, 0x1, 0x0);
        gbc.writeMem(0x2696, { 0x12 });
        gbc.writeMem(0xe4c0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x9b3e);
        EXPECT(gbc.pc(), 0x2697);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4c0), 0x91);
        // 12 03D1
        gbc.setState(0x1753, 0x5815, 0x9200, 0x7bd2, 0xcbba, 0x4e0d, 0x0, 0x0);
        gbc.writeMem(0x1753, { 0x12 });
        gbc.writeMem(0xcbba, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5815);
        EXPECT(gbc.pc(), 0x1754);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbba), 0x92);
        // 12 03D3
        gbc.setState(0x9590, 0xbc68, 0xcde0, 0x76e1, 0x9ec1, 0xa6a7, 0x1, 0x0);
        gbc.writeMem(0x9590, { 0x12 });
        gbc.writeMem(0x9ec1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xbc68);
        EXPECT(gbc.pc(), 0x9591);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9590), 0x12);
        EXPECT(gbc.readMem(0x9ec1), 0xcd);
        // 12 03D5
        gbc.setState(0x4ce6, 0xb13e, 0x4b50, 0x670, 0xca53, 0x19b8, 0x0, 0x0);
        gbc.writeMem(0x4ce6, { 0x12 });
        gbc.writeMem(0xca53, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb13e);
        EXPECT(gbc.pc(), 0x4ce7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca53), 0x4b);
        // 12 03D7
        gbc.setState(0x47b4, 0xdda2, 0x7340, 0x664d, 0xe9ec, 0x8343, 0x0, 0x0);
        gbc.writeMem(0x47b4, { 0x12 });
        gbc.writeMem(0xe9ec, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xdda2);
        EXPECT(gbc.pc(), 0x47b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ec), 0x73);
        // 12 03DA
        gbc.setState(0x3a8a, 0x5851, 0x2270, 0x3fea, 0xb494, 0xc303, 0x0, 0x1);
        gbc.writeMem(0x3a8a, { 0x12 });
        gbc.writeMem(0xb494, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x5851);
        EXPECT(gbc.pc(), 0x3a8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb494), 0x22);
        // 12 03E4
        gbc.setState(0x8a62, 0xc4f7, 0xf050, 0xc44e, 0xce5b, 0x18a2, 0x0, 0x0);
        gbc.writeMem(0x8a62, { 0x12 });
        gbc.writeMem(0xce5b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xc4f7);
        EXPECT(gbc.pc(), 0x8a63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a62), 0x12);
        EXPECT(gbc.readMem(0xce5b), 0xf0);
        // 12 03E7
        gbc.setState(0x722f, 0xc45a, 0x9c80, 0xc3b7, 0xfde3, 0xf8b9, 0x1, 0x0);
        gbc.writeMem(0x722f, { 0x12 });
        gbc.writeMem(0xfde3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xc45a);
        EXPECT(gbc.pc(), 0x7230);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfde3), 0x9c);
    }
