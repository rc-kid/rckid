    TEST(gbcemu, opcode_36) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 36 0001
        gbc.setState(0x46ff, 0x2c3b, 0xb10, 0x5af9, 0xe949, 0xf239, 0x1, 0x0);
        gbc.writeMem(0x46ff, { 0x36, 0xbe });
        gbc.writeMem(0xf239, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2c3b);
        EXPECT(gbc.pc(), 0x4701);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf239), 0xbe);
        // 36 0002
        gbc.setState(0x2481, 0x1fb, 0x7a80, 0xf7f6, 0x86e5, 0x8cd2, 0x0, 0x0);
        gbc.writeMem(0x2481, { 0x36, 0xc4 });
        gbc.writeMem(0x8cd2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x1fb);
        EXPECT(gbc.pc(), 0x2483);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cd2), 0xc4);
        // 36 0003
        gbc.setState(0x39db, 0x39a9, 0xb4a0, 0x2690, 0xc576, 0x87b1, 0x0, 0x0);
        gbc.writeMem(0x39db, { 0x36, 0xd2 });
        gbc.writeMem(0x87b1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x39a9);
        EXPECT(gbc.pc(), 0x39dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87b1), 0xd2);
        // 36 0005
        gbc.setState(0x849e, 0xbcc5, 0x1890, 0x60ee, 0x3dec, 0xe749, 0x0, 0x1);
        gbc.writeMem(0x849e, { 0x36, 0x11 });
        gbc.writeMem(0xe749, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xbcc5);
        EXPECT(gbc.pc(), 0x84a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x849e), 0x36);
        EXPECT(gbc.readMem(0x849f), 0x11);
        EXPECT(gbc.readMem(0xe749), 0x11);
        // 36 0007
        gbc.setState(0x4e82, 0x5cd4, 0x66f0, 0x55cd, 0xf59e, 0xbd3d, 0x1, 0x1);
        gbc.writeMem(0x4e82, { 0x36, 0x6d });
        gbc.writeMem(0xbd3d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5cd4);
        EXPECT(gbc.pc(), 0x4e84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd3d), 0x6d);
        // 36 0008
        gbc.setState(0xddec, 0xaecc, 0xa250, 0x57bc, 0xebce, 0x8ebe, 0x1, 0x0);
        gbc.writeMem(0x8ebe, { 0x0 });
        gbc.writeMem(0xddec, { 0x36, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xaecc);
        EXPECT(gbc.pc(), 0xddee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ebe), 0xe6);
        EXPECT(gbc.readMem(0xddec), 0x36);
        EXPECT(gbc.readMem(0xdded), 0xe6);
        // 36 0009
        gbc.setState(0x517, 0x2f99, 0x88b0, 0xc95e, 0x5ed0, 0xfc33, 0x0, 0x0);
        gbc.writeMem(0x517, { 0x36, 0xc4 });
        gbc.writeMem(0xfc33, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x2f99);
        EXPECT(gbc.pc(), 0x519);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfc33), 0xc4);
        // 36 000A
        gbc.setState(0x9630, 0x366d, 0x5750, 0xc9a, 0x5a7, 0xfb6e, 0x1, 0x1);
        gbc.writeMem(0x9630, { 0x36, 0x13 });
        gbc.writeMem(0xfb6e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x366d);
        EXPECT(gbc.pc(), 0x9632);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9630), 0x36);
        EXPECT(gbc.readMem(0x9631), 0x13);
        EXPECT(gbc.readMem(0xfb6e), 0x13);
        // 36 000D
        gbc.setState(0x3273, 0x103, 0x6530, 0x5ed, 0x21f0, 0xf549, 0x0, 0x1);
        gbc.writeMem(0x3273, { 0x36, 0xb7 });
        gbc.writeMem(0xf549, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x103);
        EXPECT(gbc.pc(), 0x3275);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf549), 0xb7);
        // 36 000F
        gbc.setState(0xaa71, 0x7ffd, 0x9740, 0x185c, 0x6d06, 0xaf91, 0x1, 0x0);
        gbc.writeMem(0xaa71, { 0x36, 0xc8 });
        gbc.writeMem(0xaf91, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x7ffd);
        EXPECT(gbc.pc(), 0xaa73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa71), 0x36);
        EXPECT(gbc.readMem(0xaa72), 0xc8);
        EXPECT(gbc.readMem(0xaf91), 0xc8);
        // 36 0010
        gbc.setState(0xb828, 0xb200, 0xe020, 0x2ce1, 0x8b9d, 0xb10e, 0x1, 0x1);
        gbc.writeMem(0xb10e, { 0x0 });
        gbc.writeMem(0xb828, { 0x36, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xb200);
        EXPECT(gbc.pc(), 0xb82a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb10e), 0xc1);
        EXPECT(gbc.readMem(0xb828), 0x36);
        EXPECT(gbc.readMem(0xb829), 0xc1);
        // 36 0012
        gbc.setState(0xdcfd, 0x8ce9, 0x8920, 0x3029, 0x7388, 0x8b91, 0x1, 0x1);
        gbc.writeMem(0x8b91, { 0x0 });
        gbc.writeMem(0xdcfd, { 0x36, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x8ce9);
        EXPECT(gbc.pc(), 0xdcff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b91), 0xe2);
        EXPECT(gbc.readMem(0xdcfd), 0x36);
        EXPECT(gbc.readMem(0xdcfe), 0xe2);
        // 36 0013
        gbc.setState(0x6d8, 0x89f8, 0x44c0, 0xc873, 0xc4df, 0xadf6, 0x1, 0x0);
        gbc.writeMem(0x6d8, { 0x36, 0x60 });
        gbc.writeMem(0xadf6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x89f8);
        EXPECT(gbc.pc(), 0x6da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadf6), 0x60);
        // 36 0017
        gbc.setState(0xaa5e, 0xa580, 0x6210, 0xbf6d, 0xeda7, 0xc095, 0x0, 0x0);
        gbc.writeMem(0xaa5e, { 0x36, 0x17 });
        gbc.writeMem(0xc095, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xa580);
        EXPECT(gbc.pc(), 0xaa60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa5e), 0x36);
        EXPECT(gbc.readMem(0xaa5f), 0x17);
        EXPECT(gbc.readMem(0xc095), 0x17);
        // 36 001C
        gbc.setState(0xd390, 0xf80b, 0xc4f0, 0x8321, 0xb40b, 0xed50, 0x1, 0x0);
        gbc.writeMem(0xd390, { 0x36, 0xe });
        gbc.writeMem(0xed50, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xf80b);
        EXPECT(gbc.pc(), 0xd392);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd390), 0x36);
        EXPECT(gbc.readMem(0xd391), 0xe);
        EXPECT(gbc.readMem(0xed50), 0xe);
        // 36 001D
        gbc.setState(0x2f12, 0x40ff, 0x3910, 0x9c68, 0xf886, 0xbda0, 0x1, 0x1);
        gbc.writeMem(0x2f12, { 0x36, 0xad });
        gbc.writeMem(0xbda0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x40ff);
        EXPECT(gbc.pc(), 0x2f14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbda0), 0xad);
        // 36 0020
        gbc.setState(0xe201, 0x1059, 0x6d00, 0x5903, 0xc7ce, 0xa321, 0x0, 0x1);
        gbc.writeMem(0xa321, { 0x0 });
        gbc.writeMem(0xe201, { 0x36, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x1059);
        EXPECT(gbc.pc(), 0xe203);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa321), 0xa3);
        EXPECT(gbc.readMem(0xe201), 0x36);
        EXPECT(gbc.readMem(0xe202), 0xa3);
        // 36 0021
        gbc.setState(0x9096, 0xbeb7, 0x8570, 0xfd60, 0x47d4, 0xc947, 0x1, 0x0);
        gbc.writeMem(0x9096, { 0x36, 0x63 });
        gbc.writeMem(0xc947, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xbeb7);
        EXPECT(gbc.pc(), 0x9098);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9096), 0x36);
        EXPECT(gbc.readMem(0x9097), 0x63);
        EXPECT(gbc.readMem(0xc947), 0x63);
        // 36 0022
        gbc.setState(0x88bc, 0xf322, 0x2050, 0xefca, 0x68cd, 0x8da0, 0x0, 0x1);
        gbc.writeMem(0x88bc, { 0x36, 0x5 });
        gbc.writeMem(0x8da0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xf322);
        EXPECT(gbc.pc(), 0x88be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88bc), 0x36);
        EXPECT(gbc.readMem(0x88bd), 0x5);
        EXPECT(gbc.readMem(0x8da0), 0x5);
        // 36 0025
        gbc.setState(0x9b9c, 0x7ec7, 0x4810, 0x2e3e, 0x6fe4, 0xe25d, 0x1, 0x0);
        gbc.writeMem(0x9b9c, { 0x36, 0xe6 });
        gbc.writeMem(0xe25d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x7ec7);
        EXPECT(gbc.pc(), 0x9b9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b9c), 0x36);
        EXPECT(gbc.readMem(0x9b9d), 0xe6);
        EXPECT(gbc.readMem(0xe25d), 0xe6);
        // 36 0027
        gbc.setState(0x4f06, 0xf66, 0xb050, 0x8798, 0x80a5, 0xf51c, 0x1, 0x1);
        gbc.writeMem(0x4f06, { 0x36, 0xc6 });
        gbc.writeMem(0xf51c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xf66);
        EXPECT(gbc.pc(), 0x4f08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf51c), 0xc6);
        // 36 0029
        gbc.setState(0x9978, 0xcdd0, 0x4e60, 0x66b9, 0x5e88, 0xe079, 0x1, 0x0);
        gbc.writeMem(0x9978, { 0x36, 0x8d });
        gbc.writeMem(0xe079, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xcdd0);
        EXPECT(gbc.pc(), 0x997a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9978), 0x36);
        EXPECT(gbc.readMem(0x9979), 0x8d);
        EXPECT(gbc.readMem(0xe079), 0x8d);
        // 36 002B
        gbc.setState(0x9f44, 0x1ad3, 0x7ca0, 0x2afb, 0x6d3d, 0xdbab, 0x0, 0x1);
        gbc.writeMem(0x9f44, { 0x36, 0xa2 });
        gbc.writeMem(0xdbab, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x1ad3);
        EXPECT(gbc.pc(), 0x9f46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f44), 0x36);
        EXPECT(gbc.readMem(0x9f45), 0xa2);
        EXPECT(gbc.readMem(0xdbab), 0xa2);
        // 36 002D
        gbc.setState(0x7d49, 0xc5eb, 0x9cd0, 0x8e0a, 0xe8c8, 0x8a95, 0x0, 0x0);
        gbc.writeMem(0x7d49, { 0x36, 0x8e });
        gbc.writeMem(0x8a95, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xc5eb);
        EXPECT(gbc.pc(), 0x7d4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a95), 0x8e);
        // 36 002E
        gbc.setState(0xba87, 0x18cd, 0x5660, 0x95c0, 0xf9c7, 0xf82a, 0x1, 0x1);
        gbc.writeMem(0xba87, { 0x36, 0xd3 });
        gbc.writeMem(0xf82a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x18cd);
        EXPECT(gbc.pc(), 0xba89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba87), 0x36);
        EXPECT(gbc.readMem(0xba88), 0xd3);
        EXPECT(gbc.readMem(0xf82a), 0xd3);
        // 36 0030
        gbc.setState(0x7cf8, 0xfb1, 0xb830, 0x1621, 0x7da6, 0xd528, 0x0, 0x0);
        gbc.writeMem(0x7cf8, { 0x36, 0xcf });
        gbc.writeMem(0xd528, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xfb1);
        EXPECT(gbc.pc(), 0x7cfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd528), 0xcf);
        // 36 0032
        gbc.setState(0xc0c7, 0x7ee, 0xe9e0, 0xd996, 0x46d8, 0xf517, 0x0, 0x1);
        gbc.writeMem(0xc0c7, { 0x36, 0x54 });
        gbc.writeMem(0xf517, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7ee);
        EXPECT(gbc.pc(), 0xc0c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0c7), 0x36);
        EXPECT(gbc.readMem(0xc0c8), 0x54);
        EXPECT(gbc.readMem(0xf517), 0x54);
        // 36 0035
        gbc.setState(0x9d84, 0x4024, 0x7500, 0xfa5b, 0xaee2, 0xb388, 0x1, 0x1);
        gbc.writeMem(0x9d84, { 0x36, 0xc4 });
        gbc.writeMem(0xb388, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x4024);
        EXPECT(gbc.pc(), 0x9d86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d84), 0x36);
        EXPECT(gbc.readMem(0x9d85), 0xc4);
        EXPECT(gbc.readMem(0xb388), 0xc4);
        // 36 0037
        gbc.setState(0xbcb3, 0x29c8, 0xfdf0, 0xed48, 0x6e5b, 0xf405, 0x1, 0x0);
        gbc.writeMem(0xbcb3, { 0x36, 0x45 });
        gbc.writeMem(0xf405, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x29c8);
        EXPECT(gbc.pc(), 0xbcb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcb3), 0x36);
        EXPECT(gbc.readMem(0xbcb4), 0x45);
        EXPECT(gbc.readMem(0xf405), 0x45);
        // 36 0038
        gbc.setState(0x97bc, 0x29d1, 0xfe10, 0x56a6, 0x4830, 0xc484, 0x1, 0x1);
        gbc.writeMem(0x97bc, { 0x36, 0x8b });
        gbc.writeMem(0xc484, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x29d1);
        EXPECT(gbc.pc(), 0x97be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97bc), 0x36);
        EXPECT(gbc.readMem(0x97bd), 0x8b);
        EXPECT(gbc.readMem(0xc484), 0x8b);
        // 36 003B
        gbc.setState(0x14aa, 0x3ca, 0x2830, 0xd5f1, 0x2b80, 0xfe4d, 0x0, 0x0);
        gbc.writeMem(0x14aa, { 0x36, 0x45 });
        gbc.writeMem(0xfe4d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x3ca);
        EXPECT(gbc.pc(), 0x14ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfe4d), 0x45);
        // 36 003E
        gbc.setState(0x18e0, 0xd4e2, 0xe7e0, 0xb6f2, 0x6c7f, 0x94d2, 0x0, 0x0);
        gbc.writeMem(0x18e0, { 0x36, 0xca });
        gbc.writeMem(0x94d2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xd4e2);
        EXPECT(gbc.pc(), 0x18e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94d2), 0xca);
        // 36 0042
        gbc.setState(0x2740, 0xedc7, 0x61a0, 0xc683, 0xb661, 0xb9e8, 0x1, 0x1);
        gbc.writeMem(0x2740, { 0x36, 0x27 });
        gbc.writeMem(0xb9e8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xedc7);
        EXPECT(gbc.pc(), 0x2742);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9e8), 0x27);
        // 36 0045
        gbc.setState(0x8405, 0xf89d, 0x6830, 0x58ca, 0x6c5d, 0x82a8, 0x1, 0x0);
        gbc.writeMem(0x82a8, { 0x0 });
        gbc.writeMem(0x8405, { 0x36, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xf89d);
        EXPECT(gbc.pc(), 0x8407);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82a8), 0x31);
        EXPECT(gbc.readMem(0x8405), 0x36);
        EXPECT(gbc.readMem(0x8406), 0x31);
        // 36 0046
        gbc.setState(0xbb, 0x475, 0x35f0, 0x81d, 0x31d7, 0x83ba, 0x0, 0x1);
        gbc.writeMem(0xbb, { 0x36, 0xf3 });
        gbc.writeMem(0x83ba, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x475);
        EXPECT(gbc.pc(), 0xbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83ba), 0xf3);
        // 36 004A
        gbc.setState(0xef28, 0xd1e0, 0x5340, 0x9ba0, 0x1904, 0xb9bc, 0x0, 0x1);
        gbc.writeMem(0xb9bc, { 0x0 });
        gbc.writeMem(0xef28, { 0x36, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xd1e0);
        EXPECT(gbc.pc(), 0xef2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9bc), 0x36);
        EXPECT(gbc.readMem(0xef28), 0x36);
        EXPECT(gbc.readMem(0xef29), 0x36);
        // 36 004F
        gbc.setState(0xb6b3, 0x2992, 0xa4a0, 0xcce5, 0x498d, 0xc837, 0x1, 0x1);
        gbc.writeMem(0xb6b3, { 0x36, 0x15 });
        gbc.writeMem(0xc837, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x2992);
        EXPECT(gbc.pc(), 0xb6b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6b3), 0x36);
        EXPECT(gbc.readMem(0xb6b4), 0x15);
        EXPECT(gbc.readMem(0xc837), 0x15);
        // 36 0053
        gbc.setState(0x8c5d, 0x3987, 0x340, 0x859d, 0x1930, 0x9757, 0x1, 0x0);
        gbc.writeMem(0x8c5d, { 0x36, 0x72 });
        gbc.writeMem(0x9757, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x3987);
        EXPECT(gbc.pc(), 0x8c5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c5d), 0x36);
        EXPECT(gbc.readMem(0x8c5e), 0x72);
        EXPECT(gbc.readMem(0x9757), 0x72);
        // 36 0055
        gbc.setState(0xc59d, 0xd26b, 0xecd0, 0x679a, 0xf888, 0xac4b, 0x1, 0x0);
        gbc.writeMem(0xac4b, { 0x0 });
        gbc.writeMem(0xc59d, { 0x36, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xd26b);
        EXPECT(gbc.pc(), 0xc59f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac4b), 0x36);
        EXPECT(gbc.readMem(0xc59d), 0x36);
        EXPECT(gbc.readMem(0xc59e), 0x36);
        // 36 0056
        gbc.setState(0x5b52, 0x33cf, 0x27d0, 0x1247, 0x8584, 0xd782, 0x1, 0x0);
        gbc.writeMem(0x5b52, { 0x36, 0x33 });
        gbc.writeMem(0xd782, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x33cf);
        EXPECT(gbc.pc(), 0x5b54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd782), 0x33);
        // 36 005A
        gbc.setState(0xca63, 0x10d4, 0x6320, 0x7639, 0x4fae, 0xdb48, 0x1, 0x0);
        gbc.writeMem(0xca63, { 0x36, 0xd5 });
        gbc.writeMem(0xdb48, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x10d4);
        EXPECT(gbc.pc(), 0xca65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca63), 0x36);
        EXPECT(gbc.readMem(0xca64), 0xd5);
        EXPECT(gbc.readMem(0xdb48), 0xd5);
        // 36 005C
        gbc.setState(0x971, 0x4674, 0x16e0, 0xbf01, 0xee94, 0xbc59, 0x0, 0x0);
        gbc.writeMem(0x971, { 0x36, 0x3b });
        gbc.writeMem(0xbc59, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x4674);
        EXPECT(gbc.pc(), 0x973);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc59), 0x3b);
        // 36 005D
        gbc.setState(0x34bf, 0x4dad, 0xa40, 0xa30, 0xc285, 0x9bdd, 0x1, 0x0);
        gbc.writeMem(0x34bf, { 0x36, 0x66 });
        gbc.writeMem(0x9bdd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x4dad);
        EXPECT(gbc.pc(), 0x34c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bdd), 0x66);
        // 36 005F
        gbc.setState(0x3fed, 0xb198, 0x72f0, 0x1d82, 0x17fc, 0x8ff2, 0x1, 0x0);
        gbc.writeMem(0x3fed, { 0x36, 0xc0 });
        gbc.writeMem(0x8ff2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xb198);
        EXPECT(gbc.pc(), 0x3fef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ff2), 0xc0);
        // 36 0060
        gbc.setState(0x94b5, 0x2004, 0xd6e0, 0x7b42, 0xd1a7, 0xdf98, 0x0, 0x0);
        gbc.writeMem(0x94b5, { 0x36, 0x91 });
        gbc.writeMem(0xdf98, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x2004);
        EXPECT(gbc.pc(), 0x94b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94b5), 0x36);
        EXPECT(gbc.readMem(0x94b6), 0x91);
        EXPECT(gbc.readMem(0xdf98), 0x91);
        // 36 0062
        gbc.setState(0xcd95, 0x3812, 0x1bf0, 0xd47f, 0xf467, 0xe695, 0x0, 0x0);
        gbc.writeMem(0xcd95, { 0x36, 0x63 });
        gbc.writeMem(0xe695, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x3812);
        EXPECT(gbc.pc(), 0xcd97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd95), 0x36);
        EXPECT(gbc.readMem(0xcd96), 0x63);
        EXPECT(gbc.readMem(0xe695), 0x63);
        // 36 0065
        gbc.setState(0x2a2, 0x2971, 0xe470, 0xe10, 0xa2d2, 0xacaf, 0x1, 0x0);
        gbc.writeMem(0x2a2, { 0x36, 0xd7 });
        gbc.writeMem(0xacaf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x2971);
        EXPECT(gbc.pc(), 0x2a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacaf), 0xd7);
        // 36 0068
        gbc.setState(0x2eda, 0x2e75, 0x4c40, 0x71a5, 0x4f17, 0x9b72, 0x0, 0x0);
        gbc.writeMem(0x2eda, { 0x36, 0xc2 });
        gbc.writeMem(0x9b72, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2e75);
        EXPECT(gbc.pc(), 0x2edc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b72), 0xc2);
        // 36 0069
        gbc.setState(0x9bdc, 0x8555, 0x1400, 0x9472, 0x9306, 0x9829, 0x1, 0x0);
        gbc.writeMem(0x9829, { 0x0 });
        gbc.writeMem(0x9bdc, { 0x36, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x8555);
        EXPECT(gbc.pc(), 0x9bde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9829), 0x77);
        EXPECT(gbc.readMem(0x9bdc), 0x36);
        EXPECT(gbc.readMem(0x9bdd), 0x77);
        // 36 006A
        gbc.setState(0x136c, 0x331c, 0x9130, 0xfa7c, 0xb594, 0x985b, 0x1, 0x0);
        gbc.writeMem(0x136c, { 0x36, 0x8b });
        gbc.writeMem(0x985b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x331c);
        EXPECT(gbc.pc(), 0x136e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x985b), 0x8b);
        // 36 006B
        gbc.setState(0x64b8, 0x590b, 0xa1a0, 0xaf67, 0xb1e8, 0xd5d2, 0x1, 0x1);
        gbc.writeMem(0x64b8, { 0x36, 0x95 });
        gbc.writeMem(0xd5d2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x590b);
        EXPECT(gbc.pc(), 0x64ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5d2), 0x95);
        // 36 006C
        gbc.setState(0x2442, 0x5f02, 0x3690, 0x64fd, 0x2a82, 0xb574, 0x0, 0x1);
        gbc.writeMem(0x2442, { 0x36, 0xfa });
        gbc.writeMem(0xb574, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5f02);
        EXPECT(gbc.pc(), 0x2444);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb574), 0xfa);
        // 36 006E
        gbc.setState(0x692c, 0xb20f, 0xdd20, 0xfa21, 0xba6f, 0xddbf, 0x0, 0x1);
        gbc.writeMem(0x692c, { 0x36, 0x65 });
        gbc.writeMem(0xddbf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xb20f);
        EXPECT(gbc.pc(), 0x692e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddbf), 0x65);
        // 36 0070
        gbc.setState(0x7407, 0x8a81, 0x3bc0, 0xa4e7, 0xda5, 0xba61, 0x0, 0x1);
        gbc.writeMem(0x7407, { 0x36, 0xd3 });
        gbc.writeMem(0xba61, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8a81);
        EXPECT(gbc.pc(), 0x7409);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba61), 0xd3);
        // 36 0072
        gbc.setState(0x8457, 0xc4b8, 0x3d90, 0xbbeb, 0x362d, 0x9d71, 0x0, 0x1);
        gbc.writeMem(0x8457, { 0x36, 0xc0 });
        gbc.writeMem(0x9d71, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xc4b8);
        EXPECT(gbc.pc(), 0x8459);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8457), 0x36);
        EXPECT(gbc.readMem(0x8458), 0xc0);
        EXPECT(gbc.readMem(0x9d71), 0xc0);
        // 36 0076
        gbc.setState(0x4cd7, 0xb9f8, 0x7c70, 0x6e67, 0xc8e5, 0xabf4, 0x0, 0x0);
        gbc.writeMem(0x4cd7, { 0x36, 0xb2 });
        gbc.writeMem(0xabf4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xb9f8);
        EXPECT(gbc.pc(), 0x4cd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabf4), 0xb2);
        // 36 0079
        gbc.setState(0x3587, 0xde89, 0x3fb0, 0xa1a7, 0xacf6, 0xf4ee, 0x0, 0x1);
        gbc.writeMem(0x3587, { 0x36, 0x42 });
        gbc.writeMem(0xf4ee, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xde89);
        EXPECT(gbc.pc(), 0x3589);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf4ee), 0x42);
        // 36 007B
        gbc.setState(0x8ce1, 0x63e8, 0xb150, 0x6814, 0x6c6f, 0xd01c, 0x0, 0x1);
        gbc.writeMem(0x8ce1, { 0x36, 0x7 });
        gbc.writeMem(0xd01c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x63e8);
        EXPECT(gbc.pc(), 0x8ce3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ce1), 0x36);
        EXPECT(gbc.readMem(0x8ce2), 0x7);
        EXPECT(gbc.readMem(0xd01c), 0x7);
        // 36 007C
        gbc.setState(0x55c3, 0xfe4f, 0xe050, 0xccab, 0xea68, 0xad2d, 0x0, 0x1);
        gbc.writeMem(0x55c3, { 0x36, 0x3a });
        gbc.writeMem(0xad2d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xfe4f);
        EXPECT(gbc.pc(), 0x55c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad2d), 0x3a);
        // 36 007D
        gbc.setState(0xd35e, 0xe828, 0xeca0, 0xad06, 0xe5a4, 0xd4a9, 0x1, 0x1);
        gbc.writeMem(0xd35e, { 0x36, 0xc1 });
        gbc.writeMem(0xd4a9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe828);
        EXPECT(gbc.pc(), 0xd360);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd35e), 0x36);
        EXPECT(gbc.readMem(0xd35f), 0xc1);
        EXPECT(gbc.readMem(0xd4a9), 0xc1);
        // 36 007E
        gbc.setState(0x4601, 0xa3e1, 0xfe50, 0x7aea, 0x2f0d, 0x9253, 0x0, 0x0);
        gbc.writeMem(0x4601, { 0x36, 0xb9 });
        gbc.writeMem(0x9253, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xa3e1);
        EXPECT(gbc.pc(), 0x4603);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9253), 0xb9);
        // 36 007F
        gbc.setState(0xe20a, 0x1e5e, 0x2f80, 0x87b, 0x79b5, 0xc86c, 0x0, 0x1);
        gbc.writeMem(0xc86c, { 0x0 });
        gbc.writeMem(0xe20a, { 0x36, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1e5e);
        EXPECT(gbc.pc(), 0xe20c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc86c), 0x96);
        EXPECT(gbc.readMem(0xe20a), 0x36);
        EXPECT(gbc.readMem(0xe20b), 0x96);
        // 36 0082
        gbc.setState(0x9c09, 0x7e1c, 0xb100, 0x806c, 0x45b9, 0xe6b0, 0x0, 0x0);
        gbc.writeMem(0x9c09, { 0x36, 0xf4 });
        gbc.writeMem(0xe6b0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x7e1c);
        EXPECT(gbc.pc(), 0x9c0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c09), 0x36);
        EXPECT(gbc.readMem(0x9c0a), 0xf4);
        EXPECT(gbc.readMem(0xe6b0), 0xf4);
        // 36 0083
        gbc.setState(0x6446, 0x5a28, 0xc50, 0x86b6, 0x6a7d, 0xa88d, 0x0, 0x1);
        gbc.writeMem(0x6446, { 0x36, 0x4 });
        gbc.writeMem(0xa88d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5a28);
        EXPECT(gbc.pc(), 0x6448);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa88d), 0x4);
        // 36 0084
        gbc.setState(0x2359, 0x7202, 0xe2c0, 0xe8b6, 0x79d1, 0xdd89, 0x1, 0x0);
        gbc.writeMem(0x2359, { 0x36, 0x46 });
        gbc.writeMem(0xdd89, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x7202);
        EXPECT(gbc.pc(), 0x235b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd89), 0x46);
        // 36 0085
        gbc.setState(0x3985, 0x5f6f, 0x1e10, 0x8407, 0xebab, 0xc52a, 0x1, 0x0);
        gbc.writeMem(0x3985, { 0x36, 0x27 });
        gbc.writeMem(0xc52a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x5f6f);
        EXPECT(gbc.pc(), 0x3987);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc52a), 0x27);
        // 36 0087
        gbc.setState(0xa8e1, 0xd04f, 0x7ac0, 0xa089, 0xed4d, 0xb9bf, 0x1, 0x0);
        gbc.writeMem(0xa8e1, { 0x36, 0xb2 });
        gbc.writeMem(0xb9bf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xd04f);
        EXPECT(gbc.pc(), 0xa8e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8e1), 0x36);
        EXPECT(gbc.readMem(0xa8e2), 0xb2);
        EXPECT(gbc.readMem(0xb9bf), 0xb2);
        // 36 008A
        gbc.setState(0xc758, 0x5904, 0xdb70, 0x19f7, 0xfa4e, 0x9902, 0x1, 0x0);
        gbc.writeMem(0x9902, { 0x0 });
        gbc.writeMem(0xc758, { 0x36, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x5904);
        EXPECT(gbc.pc(), 0xc75a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9902), 0xb5);
        EXPECT(gbc.readMem(0xc758), 0x36);
        EXPECT(gbc.readMem(0xc759), 0xb5);
        // 36 008C
        gbc.setState(0x7a32, 0xa3c5, 0x9390, 0x6b0b, 0xc0c6, 0xaad2, 0x1, 0x1);
        gbc.writeMem(0x7a32, { 0x36, 0x3e });
        gbc.writeMem(0xaad2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa3c5);
        EXPECT(gbc.pc(), 0x7a34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaad2), 0x3e);
        // 36 008E
        gbc.setState(0xb870, 0x3fb9, 0x78a0, 0x61fb, 0xd577, 0xeccb, 0x0, 0x1);
        gbc.writeMem(0xb870, { 0x36, 0xaa });
        gbc.writeMem(0xeccb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x3fb9);
        EXPECT(gbc.pc(), 0xb872);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb870), 0x36);
        EXPECT(gbc.readMem(0xb871), 0xaa);
        EXPECT(gbc.readMem(0xeccb), 0xaa);
        // 36 0093
        gbc.setState(0x5f53, 0xbdb1, 0xdff0, 0x7468, 0xac0b, 0x835a, 0x0, 0x1);
        gbc.writeMem(0x5f53, { 0x36, 0x83 });
        gbc.writeMem(0x835a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xbdb1);
        EXPECT(gbc.pc(), 0x5f55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x835a), 0x83);
        // 36 0094
        gbc.setState(0x91f7, 0xe493, 0x2b60, 0xac4f, 0xb5bd, 0xbf62, 0x1, 0x1);
        gbc.writeMem(0x91f7, { 0x36, 0x3f });
        gbc.writeMem(0xbf62, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xe493);
        EXPECT(gbc.pc(), 0x91f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91f7), 0x36);
        EXPECT(gbc.readMem(0x91f8), 0x3f);
        EXPECT(gbc.readMem(0xbf62), 0x3f);
        // 36 0096
        gbc.setState(0xaa41, 0xd5f, 0x1410, 0x9c52, 0xf9d3, 0xed91, 0x0, 0x1);
        gbc.writeMem(0xaa41, { 0x36, 0xa5 });
        gbc.writeMem(0xed91, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xd5f);
        EXPECT(gbc.pc(), 0xaa43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa41), 0x36);
        EXPECT(gbc.readMem(0xaa42), 0xa5);
        EXPECT(gbc.readMem(0xed91), 0xa5);
        // 36 0097
        gbc.setState(0x3229, 0xbf21, 0x47d0, 0xf2a5, 0xc470, 0xe4be, 0x1, 0x0);
        gbc.writeMem(0x3229, { 0x36, 0xa5 });
        gbc.writeMem(0xe4be, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xbf21);
        EXPECT(gbc.pc(), 0x322b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4be), 0xa5);
        // 36 009A
        gbc.setState(0x1d43, 0xfb3e, 0xed10, 0x1b5a, 0x8d41, 0xaef6, 0x0, 0x0);
        gbc.writeMem(0x1d43, { 0x36, 0x62 });
        gbc.writeMem(0xaef6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xfb3e);
        EXPECT(gbc.pc(), 0x1d45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaef6), 0x62);
        // 36 009C
        gbc.setState(0x148f, 0x1da7, 0x1d00, 0x779d, 0x82e6, 0xbb8b, 0x1, 0x0);
        gbc.writeMem(0x148f, { 0x36, 0xf8 });
        gbc.writeMem(0xbb8b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x1da7);
        EXPECT(gbc.pc(), 0x1491);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb8b), 0xf8);
        // 36 009E
        gbc.setState(0xb002, 0x2882, 0x38f0, 0x15b2, 0x5893, 0x8940, 0x0, 0x1);
        gbc.writeMem(0x8940, { 0x0 });
        gbc.writeMem(0xb002, { 0x36, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x2882);
        EXPECT(gbc.pc(), 0xb004);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8940), 0x2c);
        EXPECT(gbc.readMem(0xb002), 0x36);
        EXPECT(gbc.readMem(0xb003), 0x2c);
        // 36 00A3
        gbc.setState(0x9993, 0x5588, 0xda30, 0x343c, 0x157f, 0xa381, 0x0, 0x0);
        gbc.writeMem(0x9993, { 0x36, 0x5c });
        gbc.writeMem(0xa381, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x5588);
        EXPECT(gbc.pc(), 0x9995);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9993), 0x36);
        EXPECT(gbc.readMem(0x9994), 0x5c);
        EXPECT(gbc.readMem(0xa381), 0x5c);
        // 36 00A4
        gbc.setState(0xb173, 0x8bdc, 0x19f0, 0x70b4, 0xcdc0, 0x91c3, 0x0, 0x0);
        gbc.writeMem(0x91c3, { 0x0 });
        gbc.writeMem(0xb173, { 0x36, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x8bdc);
        EXPECT(gbc.pc(), 0xb175);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91c3), 0xe3);
        EXPECT(gbc.readMem(0xb173), 0x36);
        EXPECT(gbc.readMem(0xb174), 0xe3);
        // 36 00A6
        gbc.setState(0xbddd, 0xcaef, 0x1c10, 0x61, 0xd630, 0xb062, 0x0, 0x0);
        gbc.writeMem(0xb062, { 0x0 });
        gbc.writeMem(0xbddd, { 0x36, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xcaef);
        EXPECT(gbc.pc(), 0xbddf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb062), 0xc9);
        EXPECT(gbc.readMem(0xbddd), 0x36);
        EXPECT(gbc.readMem(0xbdde), 0xc9);
        // 36 00A8
        gbc.setState(0xa049, 0xf953, 0x3c40, 0x6dda, 0x70e7, 0xf2a2, 0x0, 0x0);
        gbc.writeMem(0xa049, { 0x36, 0xf1 });
        gbc.writeMem(0xf2a2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf953);
        EXPECT(gbc.pc(), 0xa04b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa049), 0x36);
        EXPECT(gbc.readMem(0xa04a), 0xf1);
        EXPECT(gbc.readMem(0xf2a2), 0xf1);
        // 36 00AC
        gbc.setState(0xd8b9, 0xacef, 0xa590, 0xaa01, 0xe44f, 0x914b, 0x0, 0x1);
        gbc.writeMem(0x914b, { 0x0 });
        gbc.writeMem(0xd8b9, { 0x36, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xacef);
        EXPECT(gbc.pc(), 0xd8bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x914b), 0x9a);
        EXPECT(gbc.readMem(0xd8b9), 0x36);
        EXPECT(gbc.readMem(0xd8ba), 0x9a);
        // 36 00AD
        gbc.setState(0xb85a, 0xf3c5, 0xfc30, 0x3847, 0xc103, 0xb4ff, 0x0, 0x0);
        gbc.writeMem(0xb4ff, { 0x0 });
        gbc.writeMem(0xb85a, { 0x36, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xf3c5);
        EXPECT(gbc.pc(), 0xb85c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4ff), 0xe8);
        EXPECT(gbc.readMem(0xb85a), 0x36);
        EXPECT(gbc.readMem(0xb85b), 0xe8);
        // 36 00AF
        gbc.setState(0xcd38, 0x6496, 0x1230, 0x35c0, 0xfc19, 0x9be6, 0x0, 0x0);
        gbc.writeMem(0x9be6, { 0x0 });
        gbc.writeMem(0xcd38, { 0x36, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x6496);
        EXPECT(gbc.pc(), 0xcd3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9be6), 0x9d);
        EXPECT(gbc.readMem(0xcd38), 0x36);
        EXPECT(gbc.readMem(0xcd39), 0x9d);
        // 36 00B1
        gbc.setState(0x14c0, 0xbb22, 0x700, 0x6df5, 0x2cae, 0xfcc2, 0x1, 0x0);
        gbc.writeMem(0x14c0, { 0x36, 0xd8 });
        gbc.writeMem(0xfcc2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xbb22);
        EXPECT(gbc.pc(), 0x14c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfcc2), 0xd8);
        // 36 00B4
        gbc.setState(0xcc4a, 0x54b3, 0x6060, 0x45c1, 0x7f23, 0xf40c, 0x0, 0x1);
        gbc.writeMem(0xcc4a, { 0x36, 0x19 });
        gbc.writeMem(0xf40c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x54b3);
        EXPECT(gbc.pc(), 0xcc4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc4a), 0x36);
        EXPECT(gbc.readMem(0xcc4b), 0x19);
        EXPECT(gbc.readMem(0xf40c), 0x19);
        // 36 00B6
        gbc.setState(0xaff6, 0x3c41, 0x180, 0x55a1, 0x9599, 0xa479, 0x1, 0x1);
        gbc.writeMem(0xa479, { 0x0 });
        gbc.writeMem(0xaff6, { 0x36, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x3c41);
        EXPECT(gbc.pc(), 0xaff8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa479), 0x4a);
        EXPECT(gbc.readMem(0xaff6), 0x36);
        EXPECT(gbc.readMem(0xaff7), 0x4a);
        // 36 00B8
        gbc.setState(0x27a7, 0x8233, 0x93d0, 0x70bf, 0x2cb4, 0x9de3, 0x1, 0x0);
        gbc.writeMem(0x27a7, { 0x36, 0xab });
        gbc.writeMem(0x9de3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x8233);
        EXPECT(gbc.pc(), 0x27a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9de3), 0xab);
        // 36 00BC
        gbc.setState(0xcfa6, 0x9c80, 0xc3e0, 0xac32, 0xf8c2, 0xcc25, 0x0, 0x1);
        gbc.writeMem(0xcc25, { 0x0 });
        gbc.writeMem(0xcfa6, { 0x36, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x9c80);
        EXPECT(gbc.pc(), 0xcfa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc25), 0xca);
        EXPECT(gbc.readMem(0xcfa6), 0x36);
        EXPECT(gbc.readMem(0xcfa7), 0xca);
        // 36 00BD
        gbc.setState(0x59ec, 0x3d72, 0xfe10, 0x7a9c, 0x7296, 0xd922, 0x1, 0x1);
        gbc.writeMem(0x59ec, { 0x36, 0x1b });
        gbc.writeMem(0xd922, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x3d72);
        EXPECT(gbc.pc(), 0x59ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd922), 0x1b);
        // 36 00C1
        gbc.setState(0x5311, 0x22c9, 0x760, 0x56a4, 0x7747, 0x8dcc, 0x0, 0x0);
        gbc.writeMem(0x5311, { 0x36, 0xbe });
        gbc.writeMem(0x8dcc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x22c9);
        EXPECT(gbc.pc(), 0x5313);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dcc), 0xbe);
        // 36 00C2
        gbc.setState(0x6a13, 0x9b13, 0xe2f0, 0x771b, 0xf859, 0xfc86, 0x0, 0x1);
        gbc.writeMem(0x6a13, { 0x36, 0x76 });
        gbc.writeMem(0xfc86, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x9b13);
        EXPECT(gbc.pc(), 0x6a15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfc86), 0x76);
        // 36 00C6
        gbc.setState(0xe74b, 0x97b9, 0x84f0, 0x58e6, 0x801e, 0x9c58, 0x0, 0x0);
        gbc.writeMem(0x9c58, { 0x0 });
        gbc.writeMem(0xe74b, { 0x36, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x97b9);
        EXPECT(gbc.pc(), 0xe74d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c58), 0x37);
        EXPECT(gbc.readMem(0xe74b), 0x36);
        EXPECT(gbc.readMem(0xe74c), 0x37);
        // 36 00CA
        gbc.setState(0x16a0, 0x3702, 0x6550, 0x9202, 0x55ff, 0xac30, 0x1, 0x0);
        gbc.writeMem(0x16a0, { 0x36, 0x23 });
        gbc.writeMem(0xac30, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x3702);
        EXPECT(gbc.pc(), 0x16a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac30), 0x23);
        // 36 00D0
        gbc.setState(0x52ba, 0x6a5, 0x3820, 0x411f, 0xa9a0, 0xacc4, 0x0, 0x0);
        gbc.writeMem(0x52ba, { 0x36, 0x30 });
        gbc.writeMem(0xacc4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x6a5);
        EXPECT(gbc.pc(), 0x52bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacc4), 0x30);
        // 36 00D2
        gbc.setState(0x3a68, 0x1b3e, 0x8d00, 0x60d4, 0x5003, 0xddd8, 0x0, 0x0);
        gbc.writeMem(0x3a68, { 0x36, 0x94 });
        gbc.writeMem(0xddd8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1b3e);
        EXPECT(gbc.pc(), 0x3a6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddd8), 0x94);
        // 36 00D4
        gbc.setState(0x43fe, 0x9361, 0xa4f0, 0x5804, 0x9339, 0xefdf, 0x0, 0x1);
        gbc.writeMem(0x43fe, { 0x36, 0x5b });
        gbc.writeMem(0xefdf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x9361);
        EXPECT(gbc.pc(), 0x4400);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefdf), 0x5b);
        // 36 00D6
        gbc.setState(0x80f5, 0x339a, 0x1670, 0x566b, 0xbf2c, 0xbca1, 0x0, 0x1);
        gbc.writeMem(0x80f5, { 0x36, 0x41 });
        gbc.writeMem(0xbca1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x339a);
        EXPECT(gbc.pc(), 0x80f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80f5), 0x36);
        EXPECT(gbc.readMem(0x80f6), 0x41);
        EXPECT(gbc.readMem(0xbca1), 0x41);
        // 36 00D8
        gbc.setState(0x4150, 0x14af, 0x4e50, 0x949c, 0x6f95, 0xb089, 0x1, 0x1);
        gbc.writeMem(0x4150, { 0x36, 0x4c });
        gbc.writeMem(0xb089, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x14af);
        EXPECT(gbc.pc(), 0x4152);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb089), 0x4c);
        // 36 00DA
        gbc.setState(0x83e2, 0x2514, 0x7f50, 0x226f, 0x7dda, 0x9a81, 0x1, 0x0);
        gbc.writeMem(0x83e2, { 0x36, 0x6 });
        gbc.writeMem(0x9a81, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x2514);
        EXPECT(gbc.pc(), 0x83e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83e2), 0x36);
        EXPECT(gbc.readMem(0x83e3), 0x6);
        EXPECT(gbc.readMem(0x9a81), 0x6);
        // 36 00DC
        gbc.setState(0x3241, 0x5aca, 0xd560, 0x319f, 0xb45a, 0xb725, 0x0, 0x1);
        gbc.writeMem(0x3241, { 0x36, 0xd4 });
        gbc.writeMem(0xb725, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5aca);
        EXPECT(gbc.pc(), 0x3243);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb725), 0xd4);
        // 36 00DD
        gbc.setState(0x58c7, 0x439f, 0xc770, 0x25ce, 0x9105, 0xaf76, 0x1, 0x0);
        gbc.writeMem(0x58c7, { 0x36, 0x91 });
        gbc.writeMem(0xaf76, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x439f);
        EXPECT(gbc.pc(), 0x58c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf76), 0x91);
        // 36 00DF
        gbc.setState(0x26c2, 0x2f0c, 0x7fa0, 0x90ce, 0xbb78, 0xdd83, 0x0, 0x0);
        gbc.writeMem(0x26c2, { 0x36, 0x3f });
        gbc.writeMem(0xdd83, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x2f0c);
        EXPECT(gbc.pc(), 0x26c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd83), 0x3f);
        // 36 00E0
        gbc.setState(0xca34, 0xc385, 0x4f80, 0x7b7e, 0x8ca9, 0xd735, 0x0, 0x0);
        gbc.writeMem(0xca34, { 0x36, 0xff });
        gbc.writeMem(0xd735, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xc385);
        EXPECT(gbc.pc(), 0xca36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca34), 0x36);
        EXPECT(gbc.readMem(0xca35), 0xff);
        EXPECT(gbc.readMem(0xd735), 0xff);
        // 36 00E2
        gbc.setState(0x8677, 0x4906, 0xa170, 0xe253, 0xf8b1, 0xc83a, 0x1, 0x0);
        gbc.writeMem(0x8677, { 0x36, 0xf0 });
        gbc.writeMem(0xc83a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x4906);
        EXPECT(gbc.pc(), 0x8679);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8677), 0x36);
        EXPECT(gbc.readMem(0x8678), 0xf0);
        EXPECT(gbc.readMem(0xc83a), 0xf0);
        // 36 00E5
        gbc.setState(0x1ac6, 0xb067, 0xacb0, 0xd4d3, 0xd4a9, 0xe5ea, 0x0, 0x0);
        gbc.writeMem(0x1ac6, { 0x36, 0x1c });
        gbc.writeMem(0xe5ea, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb067);
        EXPECT(gbc.pc(), 0x1ac8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5ea), 0x1c);
        // 36 00E8
        gbc.setState(0xbbd5, 0x9172, 0x9ef0, 0xa8eb, 0x31ab, 0xff6d, 0x1, 0x1);
        gbc.writeMem(0xbbd5, { 0x36, 0xaa });
        gbc.writeMem(0xff6d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x9172);
        EXPECT(gbc.pc(), 0xbbd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbd5), 0x36);
        EXPECT(gbc.readMem(0xbbd6), 0xaa);
        EXPECT(gbc.readMem(0xff6d), 0xaa);
        // 36 00EA
        gbc.setState(0x927d, 0xcfb0, 0x10b0, 0x7d48, 0x2f91, 0xdec0, 0x1, 0x1);
        gbc.writeMem(0x927d, { 0x36, 0x94 });
        gbc.writeMem(0xdec0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xcfb0);
        EXPECT(gbc.pc(), 0x927f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x927d), 0x36);
        EXPECT(gbc.readMem(0x927e), 0x94);
        EXPECT(gbc.readMem(0xdec0), 0x94);
        // 36 00ED
        gbc.setState(0x8a2c, 0x96fa, 0x23a0, 0x2f5d, 0x75e7, 0x9271, 0x0, 0x0);
        gbc.writeMem(0x8a2c, { 0x36, 0x56 });
        gbc.writeMem(0x9271, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x96fa);
        EXPECT(gbc.pc(), 0x8a2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a2c), 0x36);
        EXPECT(gbc.readMem(0x8a2d), 0x56);
        EXPECT(gbc.readMem(0x9271), 0x56);
        // 36 00F1
        gbc.setState(0xb693, 0x8bd4, 0x45c0, 0x6379, 0x4c4b, 0xfe66, 0x0, 0x1);
        gbc.writeMem(0xb693, { 0x36, 0xb0 });
        gbc.writeMem(0xfe66, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x8bd4);
        EXPECT(gbc.pc(), 0xb695);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb693), 0x36);
        EXPECT(gbc.readMem(0xb694), 0xb0);
        EXPECT(gbc.readMem(0xfe66), 0xb0);
        // 36 00F3
        gbc.setState(0xa41d, 0x6e80, 0x1750, 0xe4d, 0xb2d, 0x868d, 0x1, 0x1);
        gbc.writeMem(0x868d, { 0x0 });
        gbc.writeMem(0xa41d, { 0x36, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6e80);
        EXPECT(gbc.pc(), 0xa41f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x868d), 0xcf);
        EXPECT(gbc.readMem(0xa41d), 0x36);
        EXPECT(gbc.readMem(0xa41e), 0xcf);
        // 36 00F4
        gbc.setState(0xc03c, 0x2884, 0xd8b0, 0x75c3, 0x758e, 0xd435, 0x0, 0x0);
        gbc.writeMem(0xc03c, { 0x36, 0x75 });
        gbc.writeMem(0xd435, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x2884);
        EXPECT(gbc.pc(), 0xc03e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc03c), 0x36);
        EXPECT(gbc.readMem(0xc03d), 0x75);
        EXPECT(gbc.readMem(0xd435), 0x75);
        // 36 00F5
        gbc.setState(0xe361, 0xb2c3, 0x450, 0x7467, 0x1172, 0xa697, 0x1, 0x0);
        gbc.writeMem(0xa697, { 0x0 });
        gbc.writeMem(0xe361, { 0x36, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xb2c3);
        EXPECT(gbc.pc(), 0xe363);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa697), 0xf3);
        EXPECT(gbc.readMem(0xe361), 0x36);
        EXPECT(gbc.readMem(0xe362), 0xf3);
        // 36 00F8
        gbc.setState(0x9637, 0x4a12, 0x8f10, 0xa8e2, 0x15b7, 0xbf71, 0x0, 0x1);
        gbc.writeMem(0x9637, { 0x36, 0xe7 });
        gbc.writeMem(0xbf71, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x4a12);
        EXPECT(gbc.pc(), 0x9639);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9637), 0x36);
        EXPECT(gbc.readMem(0x9638), 0xe7);
        EXPECT(gbc.readMem(0xbf71), 0xe7);
        // 36 00F9
        gbc.setState(0x6d45, 0x71f7, 0xc320, 0x2e49, 0xb95b, 0xbd98, 0x1, 0x1);
        gbc.writeMem(0x6d45, { 0x36, 0xe2 });
        gbc.writeMem(0xbd98, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x71f7);
        EXPECT(gbc.pc(), 0x6d47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd98), 0xe2);
        // 36 00FA
        gbc.setState(0x6c54, 0x27a4, 0xd740, 0xca10, 0x5703, 0xd3ed, 0x0, 0x0);
        gbc.writeMem(0x6c54, { 0x36, 0xa2 });
        gbc.writeMem(0xd3ed, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x27a4);
        EXPECT(gbc.pc(), 0x6c56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3ed), 0xa2);
        // 36 00FD
        gbc.setState(0x7891, 0x5b03, 0xe10, 0xb6e1, 0xe17d, 0xfca0, 0x0, 0x1);
        gbc.writeMem(0x7891, { 0x36, 0x93 });
        gbc.writeMem(0xfca0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x5b03);
        EXPECT(gbc.pc(), 0x7893);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfca0), 0x93);
        // 36 00FE
        gbc.setState(0xa6e9, 0xa206, 0x72b0, 0x3e19, 0x8ea9, 0x9a55, 0x1, 0x0);
        gbc.writeMem(0x9a55, { 0x0 });
        gbc.writeMem(0xa6e9, { 0x36, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xa206);
        EXPECT(gbc.pc(), 0xa6eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a55), 0x1f);
        EXPECT(gbc.readMem(0xa6e9), 0x36);
        EXPECT(gbc.readMem(0xa6ea), 0x1f);
        // 36 00FF
        gbc.setState(0xa157, 0x5d83, 0xc910, 0x52e1, 0x9f7a, 0xe370, 0x1, 0x1);
        gbc.writeMem(0xa157, { 0x36, 0xaa });
        gbc.writeMem(0xe370, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5d83);
        EXPECT(gbc.pc(), 0xa159);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa157), 0x36);
        EXPECT(gbc.readMem(0xa158), 0xaa);
        EXPECT(gbc.readMem(0xe370), 0xaa);
        // 36 0101
        gbc.setState(0xd8b9, 0x6a37, 0x7830, 0x3baa, 0xd91d, 0x8aec, 0x1, 0x1);
        gbc.writeMem(0x8aec, { 0x0 });
        gbc.writeMem(0xd8b9, { 0x36, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x6a37);
        EXPECT(gbc.pc(), 0xd8bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8aec), 0x9a);
        EXPECT(gbc.readMem(0xd8b9), 0x36);
        EXPECT(gbc.readMem(0xd8ba), 0x9a);
        // 36 0102
        gbc.setState(0xd71b, 0xda19, 0x96d0, 0xb7b, 0x8cbf, 0xdd27, 0x1, 0x1);
        gbc.writeMem(0xd71b, { 0x36, 0xbd });
        gbc.writeMem(0xdd27, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xda19);
        EXPECT(gbc.pc(), 0xd71d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd71b), 0x36);
        EXPECT(gbc.readMem(0xd71c), 0xbd);
        EXPECT(gbc.readMem(0xdd27), 0xbd);
        // 36 0103
        gbc.setState(0x40a7, 0x525c, 0x6ef0, 0x66a6, 0xe00b, 0xeb2a, 0x0, 0x1);
        gbc.writeMem(0x40a7, { 0x36, 0x94 });
        gbc.writeMem(0xeb2a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x525c);
        EXPECT(gbc.pc(), 0x40a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb2a), 0x94);
        // 36 0106
        gbc.setState(0x69c7, 0x9faf, 0xd2c0, 0x3718, 0xcc89, 0xe9ed, 0x1, 0x0);
        gbc.writeMem(0x69c7, { 0x36, 0x8f });
        gbc.writeMem(0xe9ed, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9faf);
        EXPECT(gbc.pc(), 0x69c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ed), 0x8f);
        // 36 0107
        gbc.setState(0x99d7, 0x6e8e, 0xf8d0, 0x602b, 0xd1f6, 0xf1f3, 0x1, 0x0);
        gbc.writeMem(0x99d7, { 0x36, 0x63 });
        gbc.writeMem(0xf1f3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x6e8e);
        EXPECT(gbc.pc(), 0x99d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99d7), 0x36);
        EXPECT(gbc.readMem(0x99d8), 0x63);
        EXPECT(gbc.readMem(0xf1f3), 0x63);
        // 36 0108
        gbc.setState(0x265e, 0x11cf, 0x3800, 0x84b, 0x64cb, 0xc80f, 0x0, 0x0);
        gbc.writeMem(0x265e, { 0x36, 0x17 });
        gbc.writeMem(0xc80f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x11cf);
        EXPECT(gbc.pc(), 0x2660);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc80f), 0x17);
        // 36 0109
        gbc.setState(0x5b94, 0x92b2, 0x1580, 0x714b, 0x4e1c, 0xea98, 0x1, 0x0);
        gbc.writeMem(0x5b94, { 0x36, 0xf9 });
        gbc.writeMem(0xea98, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x92b2);
        EXPECT(gbc.pc(), 0x5b96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea98), 0xf9);
        // 36 010B
        gbc.setState(0x297e, 0x49e8, 0x7840, 0x433c, 0x878b, 0xf943, 0x0, 0x1);
        gbc.writeMem(0x297e, { 0x36, 0x72 });
        gbc.writeMem(0xf943, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x49e8);
        EXPECT(gbc.pc(), 0x2980);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf943), 0x72);
        // 36 010E
        gbc.setState(0x6ee3, 0x3bc0, 0xe550, 0x2e41, 0x7298, 0xcd5e, 0x1, 0x0);
        gbc.writeMem(0x6ee3, { 0x36, 0xd6 });
        gbc.writeMem(0xcd5e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x3bc0);
        EXPECT(gbc.pc(), 0x6ee5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd5e), 0xd6);
        // 36 010F
        gbc.setState(0x89a3, 0xcd7c, 0xe9a0, 0x194c, 0x43a1, 0xc6d5, 0x1, 0x1);
        gbc.writeMem(0x89a3, { 0x36, 0x96 });
        gbc.writeMem(0xc6d5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xcd7c);
        EXPECT(gbc.pc(), 0x89a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89a3), 0x36);
        EXPECT(gbc.readMem(0x89a4), 0x96);
        EXPECT(gbc.readMem(0xc6d5), 0x96);
        // 36 0111
        gbc.setState(0xb9, 0x1a1f, 0xb9d0, 0x3bb8, 0x20d, 0xe713, 0x1, 0x1);
        gbc.writeMem(0xb9, { 0x36, 0xbc });
        gbc.writeMem(0xe713, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x1a1f);
        EXPECT(gbc.pc(), 0xbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe713), 0xbc);
        // 36 0113
        gbc.setState(0xc63c, 0x1887, 0x8b20, 0x8a56, 0x494d, 0xe295, 0x1, 0x1);
        gbc.writeMem(0xc63c, { 0x36, 0x3e });
        gbc.writeMem(0xe295, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x1887);
        EXPECT(gbc.pc(), 0xc63e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc63c), 0x36);
        EXPECT(gbc.readMem(0xc63d), 0x3e);
        EXPECT(gbc.readMem(0xe295), 0x3e);
        // 36 0118
        gbc.setState(0x3fd5, 0x8e5a, 0x84f0, 0xc30f, 0x37bb, 0xa666, 0x1, 0x0);
        gbc.writeMem(0x3fd5, { 0x36, 0xd8 });
        gbc.writeMem(0xa666, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x8e5a);
        EXPECT(gbc.pc(), 0x3fd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa666), 0xd8);
        // 36 011A
        gbc.setState(0x15a9, 0x22e5, 0x7b0, 0x956c, 0x8ef6, 0xdc50, 0x0, 0x0);
        gbc.writeMem(0x15a9, { 0x36, 0xa4 });
        gbc.writeMem(0xdc50, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x22e5);
        EXPECT(gbc.pc(), 0x15ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc50), 0xa4);
        // 36 011C
        gbc.setState(0xc2a5, 0x59c7, 0xabc0, 0xe151, 0x4941, 0xfd29, 0x1, 0x0);
        gbc.writeMem(0xc2a5, { 0x36, 0xc6 });
        gbc.writeMem(0xfd29, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x59c7);
        EXPECT(gbc.pc(), 0xc2a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2a5), 0x36);
        EXPECT(gbc.readMem(0xc2a6), 0xc6);
        EXPECT(gbc.readMem(0xfd29), 0xc6);
        // 36 011F
        gbc.setState(0xc0a4, 0x328b, 0x7870, 0xa88f, 0xb8dd, 0xc70a, 0x0, 0x1);
        gbc.writeMem(0xc0a4, { 0x36, 0x51 });
        gbc.writeMem(0xc70a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x328b);
        EXPECT(gbc.pc(), 0xc0a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0a4), 0x36);
        EXPECT(gbc.readMem(0xc0a5), 0x51);
        EXPECT(gbc.readMem(0xc70a), 0x51);
        // 36 0120
        gbc.setState(0xbce1, 0x51f4, 0x4e40, 0x2ca7, 0xe20, 0x8661, 0x0, 0x1);
        gbc.writeMem(0x8661, { 0x0 });
        gbc.writeMem(0xbce1, { 0x36, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x51f4);
        EXPECT(gbc.pc(), 0xbce3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8661), 0x4f);
        EXPECT(gbc.readMem(0xbce1), 0x36);
        EXPECT(gbc.readMem(0xbce2), 0x4f);
        // 36 0121
        gbc.setState(0x5d5f, 0xfb14, 0x3c70, 0x8add, 0xb391, 0xc71c, 0x1, 0x1);
        gbc.writeMem(0x5d5f, { 0x36, 0x76 });
        gbc.writeMem(0xc71c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xfb14);
        EXPECT(gbc.pc(), 0x5d61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc71c), 0x76);
        // 36 0122
        gbc.setState(0xbe32, 0x7659, 0xabc0, 0x55a6, 0xafd7, 0xdaa9, 0x0, 0x0);
        gbc.writeMem(0xbe32, { 0x36, 0xfe });
        gbc.writeMem(0xdaa9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x7659);
        EXPECT(gbc.pc(), 0xbe34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe32), 0x36);
        EXPECT(gbc.readMem(0xbe33), 0xfe);
        EXPECT(gbc.readMem(0xdaa9), 0xfe);
        // 36 0123
        gbc.setState(0xb3f5, 0xdab4, 0x6230, 0xa8b, 0xdeec, 0x9af3, 0x1, 0x0);
        gbc.writeMem(0x9af3, { 0x0 });
        gbc.writeMem(0xb3f5, { 0x36, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xdab4);
        EXPECT(gbc.pc(), 0xb3f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9af3), 0x63);
        EXPECT(gbc.readMem(0xb3f5), 0x36);
        EXPECT(gbc.readMem(0xb3f6), 0x63);
        // 36 0124
        gbc.setState(0xbf46, 0x430c, 0x9930, 0x1402, 0x8ea3, 0xfca2, 0x1, 0x1);
        gbc.writeMem(0xbf46, { 0x36, 0xe0 });
        gbc.writeMem(0xfca2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x430c);
        EXPECT(gbc.pc(), 0xbf48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf46), 0x36);
        EXPECT(gbc.readMem(0xbf47), 0xe0);
        EXPECT(gbc.readMem(0xfca2), 0xe0);
        // 36 0125
        gbc.setState(0x69c6, 0xa79a, 0xd930, 0xd129, 0xcb3a, 0xe649, 0x0, 0x1);
        gbc.writeMem(0x69c6, { 0x36, 0xd3 });
        gbc.writeMem(0xe649, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa79a);
        EXPECT(gbc.pc(), 0x69c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe649), 0xd3);
        // 36 0127
        gbc.setState(0x8216, 0x625a, 0x69f0, 0xfc83, 0x7436, 0x88b1, 0x0, 0x0);
        gbc.writeMem(0x8216, { 0x36, 0x22 });
        gbc.writeMem(0x88b1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x625a);
        EXPECT(gbc.pc(), 0x8218);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8216), 0x36);
        EXPECT(gbc.readMem(0x8217), 0x22);
        EXPECT(gbc.readMem(0x88b1), 0x22);
        // 36 0128
        gbc.setState(0xd4c4, 0x79c8, 0x70e0, 0xab9c, 0xbe64, 0xdd5b, 0x0, 0x1);
        gbc.writeMem(0xd4c4, { 0x36, 0x51 });
        gbc.writeMem(0xdd5b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x79c8);
        EXPECT(gbc.pc(), 0xd4c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4c4), 0x36);
        EXPECT(gbc.readMem(0xd4c5), 0x51);
        EXPECT(gbc.readMem(0xdd5b), 0x51);
        // 36 012C
        gbc.setState(0x657c, 0xe31f, 0xfc20, 0x9599, 0x19be, 0xd54a, 0x1, 0x1);
        gbc.writeMem(0x657c, { 0x36, 0x17 });
        gbc.writeMem(0xd54a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xe31f);
        EXPECT(gbc.pc(), 0x657e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd54a), 0x17);
        // 36 0131
        gbc.setState(0x5a22, 0x86c1, 0x2b20, 0x6e7, 0x3ff3, 0xcda9, 0x0, 0x1);
        gbc.writeMem(0x5a22, { 0x36, 0x19 });
        gbc.writeMem(0xcda9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x86c1);
        EXPECT(gbc.pc(), 0x5a24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcda9), 0x19);
        // 36 0134
        gbc.setState(0x30b1, 0x196, 0x36c0, 0x9c28, 0x9488, 0xc3c9, 0x0, 0x1);
        gbc.writeMem(0x30b1, { 0x36, 0x5 });
        gbc.writeMem(0xc3c9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x196);
        EXPECT(gbc.pc(), 0x30b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3c9), 0x5);
        // 36 0136
        gbc.setState(0xadc1, 0x2dec, 0x7280, 0xcbb8, 0x9703, 0xffcf, 0x1, 0x1);
        gbc.writeMem(0xadc1, { 0x36, 0xd9 });
        gbc.writeMem(0xffcf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2dec);
        EXPECT(gbc.pc(), 0xadc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadc1), 0x36);
        EXPECT(gbc.readMem(0xadc2), 0xd9);
        EXPECT(gbc.readMem(0xffcf), 0xd9);
        // 36 0137
        gbc.setState(0xb6b8, 0x78c2, 0x8880, 0xd09c, 0x4450, 0xab16, 0x0, 0x1);
        gbc.writeMem(0xab16, { 0x0 });
        gbc.writeMem(0xb6b8, { 0x36, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x78c2);
        EXPECT(gbc.pc(), 0xb6ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab16), 0x6d);
        EXPECT(gbc.readMem(0xb6b8), 0x36);
        EXPECT(gbc.readMem(0xb6b9), 0x6d);
        // 36 0138
        gbc.setState(0x3cfa, 0x2f0c, 0xfe20, 0xef13, 0xba3e, 0xe7e3, 0x0, 0x1);
        gbc.writeMem(0x3cfa, { 0x36, 0x4c });
        gbc.writeMem(0xe7e3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x2f0c);
        EXPECT(gbc.pc(), 0x3cfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7e3), 0x4c);
        // 36 013A
        gbc.setState(0x4db2, 0xdffe, 0x1790, 0x26e2, 0xde57, 0x9182, 0x0, 0x0);
        gbc.writeMem(0x4db2, { 0x36, 0xf6 });
        gbc.writeMem(0x9182, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xdffe);
        EXPECT(gbc.pc(), 0x4db4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9182), 0xf6);
        // 36 013E
        gbc.setState(0x7329, 0xbd24, 0x85c0, 0x57b0, 0x24ab, 0x8632, 0x0, 0x1);
        gbc.writeMem(0x7329, { 0x36, 0xcb });
        gbc.writeMem(0x8632, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xbd24);
        EXPECT(gbc.pc(), 0x732b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8632), 0xcb);
        // 36 0143
        gbc.setState(0x5169, 0x1621, 0xa170, 0xb2d1, 0x2d1e, 0xb566, 0x1, 0x1);
        gbc.writeMem(0x5169, { 0x36, 0xd3 });
        gbc.writeMem(0xb566, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x1621);
        EXPECT(gbc.pc(), 0x516b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb566), 0xd3);
        // 36 0145
        gbc.setState(0x6e72, 0xa00a, 0x4f0, 0xa117, 0x9330, 0xc601, 0x0, 0x1);
        gbc.writeMem(0x6e72, { 0x36, 0x9f });
        gbc.writeMem(0xc601, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xa00a);
        EXPECT(gbc.pc(), 0x6e74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc601), 0x9f);
        // 36 0146
        gbc.setState(0xb7b9, 0x973c, 0x7e10, 0x91c5, 0xe5d3, 0x9e82, 0x1, 0x1);
        gbc.writeMem(0x9e82, { 0x0 });
        gbc.writeMem(0xb7b9, { 0x36, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x973c);
        EXPECT(gbc.pc(), 0xb7bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e82), 0x66);
        EXPECT(gbc.readMem(0xb7b9), 0x36);
        EXPECT(gbc.readMem(0xb7ba), 0x66);
        // 36 0147
        gbc.setState(0xddee, 0x980c, 0xdb80, 0x4c32, 0xbc6a, 0xe3bb, 0x1, 0x1);
        gbc.writeMem(0xddee, { 0x36, 0x32 });
        gbc.writeMem(0xe3bb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x980c);
        EXPECT(gbc.pc(), 0xddf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddee), 0x36);
        EXPECT(gbc.readMem(0xddef), 0x32);
        EXPECT(gbc.readMem(0xe3bb), 0x32);
        // 36 0149
        gbc.setState(0xd721, 0xaa1, 0xef40, 0xa3e, 0xed4a, 0xcef4, 0x0, 0x0);
        gbc.writeMem(0xcef4, { 0x0 });
        gbc.writeMem(0xd721, { 0x36, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xaa1);
        EXPECT(gbc.pc(), 0xd723);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcef4), 0xfe);
        EXPECT(gbc.readMem(0xd721), 0x36);
        EXPECT(gbc.readMem(0xd722), 0xfe);
        // 36 014A
        gbc.setState(0xa160, 0xd004, 0xa100, 0xd34c, 0x6376, 0x83a8, 0x1, 0x1);
        gbc.writeMem(0x83a8, { 0x0 });
        gbc.writeMem(0xa160, { 0x36, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xd004);
        EXPECT(gbc.pc(), 0xa162);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83a8), 0x17);
        EXPECT(gbc.readMem(0xa160), 0x36);
        EXPECT(gbc.readMem(0xa161), 0x17);
        // 36 014B
        gbc.setState(0x1989, 0x60c6, 0xd530, 0x7835, 0x9d7e, 0xb17e, 0x0, 0x1);
        gbc.writeMem(0x1989, { 0x36, 0x51 });
        gbc.writeMem(0xb17e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x60c6);
        EXPECT(gbc.pc(), 0x198b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb17e), 0x51);
        // 36 014D
        gbc.setState(0x3ed1, 0x18f, 0x92d0, 0x35e9, 0x47a9, 0x8a13, 0x1, 0x1);
        gbc.writeMem(0x3ed1, { 0x36, 0x58 });
        gbc.writeMem(0x8a13, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x18f);
        EXPECT(gbc.pc(), 0x3ed3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a13), 0x58);
        // 36 014E
        gbc.setState(0x14a1, 0x37a3, 0xfb10, 0x4198, 0xcfa6, 0xee07, 0x0, 0x0);
        gbc.writeMem(0x14a1, { 0x36, 0x2 });
        gbc.writeMem(0xee07, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x37a3);
        EXPECT(gbc.pc(), 0x14a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee07), 0x2);
        // 36 0150
        gbc.setState(0xeda0, 0xad2d, 0x510, 0x3c2b, 0x7589, 0x8253, 0x1, 0x1);
        gbc.writeMem(0x8253, { 0x0 });
        gbc.writeMem(0xeda0, { 0x36, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xad2d);
        EXPECT(gbc.pc(), 0xeda2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8253), 0x51);
        EXPECT(gbc.readMem(0xeda0), 0x36);
        EXPECT(gbc.readMem(0xeda1), 0x51);
        // 36 0154
        gbc.setState(0xa6f, 0xe50d, 0xdb00, 0x4661, 0xe9cb, 0xc733, 0x0, 0x1);
        gbc.writeMem(0xa6f, { 0x36, 0x54 });
        gbc.writeMem(0xc733, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xe50d);
        EXPECT(gbc.pc(), 0xa71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc733), 0x54);
        // 36 0156
        gbc.setState(0x4436, 0xc9a3, 0xe4d0, 0x5199, 0x81cf, 0xc872, 0x1, 0x0);
        gbc.writeMem(0x4436, { 0x36, 0x2f });
        gbc.writeMem(0xc872, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xc9a3);
        EXPECT(gbc.pc(), 0x4438);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc872), 0x2f);
        // 36 0157
        gbc.setState(0xb64a, 0x982a, 0x11c0, 0x8f29, 0xab2b, 0xb0b4, 0x1, 0x1);
        gbc.writeMem(0xb0b4, { 0x0 });
        gbc.writeMem(0xb64a, { 0x36, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x982a);
        EXPECT(gbc.pc(), 0xb64c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0b4), 0xa3);
        EXPECT(gbc.readMem(0xb64a), 0x36);
        EXPECT(gbc.readMem(0xb64b), 0xa3);
        // 36 0158
        gbc.setState(0x1c65, 0xccf9, 0xf7b0, 0x53bc, 0x7495, 0xcb4f, 0x0, 0x0);
        gbc.writeMem(0x1c65, { 0x36, 0xde });
        gbc.writeMem(0xcb4f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xccf9);
        EXPECT(gbc.pc(), 0x1c67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb4f), 0xde);
        // 36 015A
        gbc.setState(0xd896, 0xfd9f, 0x1150, 0x8be3, 0xdd7e, 0x8f7d, 0x0, 0x0);
        gbc.writeMem(0x8f7d, { 0x0 });
        gbc.writeMem(0xd896, { 0x36, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xfd9f);
        EXPECT(gbc.pc(), 0xd898);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f7d), 0x9b);
        EXPECT(gbc.readMem(0xd896), 0x36);
        EXPECT(gbc.readMem(0xd897), 0x9b);
        // 36 015F
        gbc.setState(0xde06, 0x8e12, 0x9e40, 0x7aa3, 0x7718, 0xa303, 0x0, 0x0);
        gbc.writeMem(0xa303, { 0x0 });
        gbc.writeMem(0xde06, { 0x36, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x8e12);
        EXPECT(gbc.pc(), 0xde08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa303), 0xec);
        EXPECT(gbc.readMem(0xde06), 0x36);
        EXPECT(gbc.readMem(0xde07), 0xec);
        // 36 0163
        gbc.setState(0x899d, 0x86e0, 0xde70, 0xb3fe, 0x4404, 0xadb9, 0x1, 0x0);
        gbc.writeMem(0x899d, { 0x36, 0x5f });
        gbc.writeMem(0xadb9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x86e0);
        EXPECT(gbc.pc(), 0x899f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x899d), 0x36);
        EXPECT(gbc.readMem(0x899e), 0x5f);
        EXPECT(gbc.readMem(0xadb9), 0x5f);
        // 36 0166
        gbc.setState(0x2cfd, 0x5a49, 0xcfa0, 0x57c4, 0x6492, 0xb301, 0x1, 0x0);
        gbc.writeMem(0x2cfd, { 0x36, 0x99 });
        gbc.writeMem(0xb301, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5a49);
        EXPECT(gbc.pc(), 0x2cff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb301), 0x99);
        // 36 016A
        gbc.setState(0x213e, 0x1972, 0x89a0, 0x2eb8, 0x3ef, 0xc02d, 0x0, 0x1);
        gbc.writeMem(0x213e, { 0x36, 0xad });
        gbc.writeMem(0xc02d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1972);
        EXPECT(gbc.pc(), 0x2140);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc02d), 0xad);
        // 36 016C
        gbc.setState(0x678c, 0xf05, 0xe580, 0x7760, 0x77a9, 0xa605, 0x1, 0x1);
        gbc.writeMem(0x678c, { 0x36, 0x76 });
        gbc.writeMem(0xa605, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xf05);
        EXPECT(gbc.pc(), 0x678e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa605), 0x76);
        // 36 016D
        gbc.setState(0x8d20, 0xa48d, 0xbd60, 0xe626, 0xf3d3, 0x866a, 0x1, 0x1);
        gbc.writeMem(0x866a, { 0x0 });
        gbc.writeMem(0x8d20, { 0x36, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xa48d);
        EXPECT(gbc.pc(), 0x8d22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x866a), 0x63);
        EXPECT(gbc.readMem(0x8d20), 0x36);
        EXPECT(gbc.readMem(0x8d21), 0x63);
        // 36 016E
        gbc.setState(0xb4fc, 0xd096, 0x4c40, 0xba93, 0x58ae, 0xb674, 0x0, 0x1);
        gbc.writeMem(0xb4fc, { 0x36, 0x8e });
        gbc.writeMem(0xb674, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xd096);
        EXPECT(gbc.pc(), 0xb4fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4fc), 0x36);
        EXPECT(gbc.readMem(0xb4fd), 0x8e);
        EXPECT(gbc.readMem(0xb674), 0x8e);
        // 36 0170
        gbc.setState(0x5180, 0x3ceb, 0xd610, 0xf5d7, 0x5c7d, 0xf030, 0x0, 0x0);
        gbc.writeMem(0x5180, { 0x36, 0x2f });
        gbc.writeMem(0xf030, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x3ceb);
        EXPECT(gbc.pc(), 0x5182);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf030), 0x2f);
        // 36 0175
        gbc.setState(0x3a1d, 0xd726, 0x20, 0x130d, 0x53b3, 0xe447, 0x1, 0x0);
        gbc.writeMem(0x3a1d, { 0x36, 0xaa });
        gbc.writeMem(0xe447, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xd726);
        EXPECT(gbc.pc(), 0x3a1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe447), 0xaa);
        // 36 0177
        gbc.setState(0x1b7b, 0x4d21, 0xa810, 0x5205, 0xb376, 0xac43, 0x1, 0x1);
        gbc.writeMem(0x1b7b, { 0x36, 0x3a });
        gbc.writeMem(0xac43, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x4d21);
        EXPECT(gbc.pc(), 0x1b7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac43), 0x3a);
        // 36 0178
        gbc.setState(0x5e64, 0xff50, 0x8cd0, 0xd77e, 0xa102, 0xa673, 0x0, 0x0);
        gbc.writeMem(0x5e64, { 0x36, 0x3d });
        gbc.writeMem(0xa673, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xff50);
        EXPECT(gbc.pc(), 0x5e66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa673), 0x3d);
        // 36 0179
        gbc.setState(0xeb8c, 0x824e, 0xd550, 0x2412, 0x316f, 0xe7cb, 0x0, 0x0);
        gbc.writeMem(0xe7cb, { 0x0 });
        gbc.writeMem(0xeb8c, { 0x36, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x824e);
        EXPECT(gbc.pc(), 0xeb8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7cb), 0x94);
        EXPECT(gbc.readMem(0xeb8c), 0x36);
        EXPECT(gbc.readMem(0xeb8d), 0x94);
        // 36 017C
        gbc.setState(0x928e, 0xb710, 0xd4e0, 0x8802, 0x9314, 0xb2a8, 0x1, 0x1);
        gbc.writeMem(0x928e, { 0x36, 0xc8 });
        gbc.writeMem(0xb2a8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb710);
        EXPECT(gbc.pc(), 0x9290);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x928e), 0x36);
        EXPECT(gbc.readMem(0x928f), 0xc8);
        EXPECT(gbc.readMem(0xb2a8), 0xc8);
        // 36 017D
        gbc.setState(0x8031, 0x5c8, 0x9a00, 0x86dc, 0x1406, 0xb9a1, 0x1, 0x0);
        gbc.writeMem(0x8031, { 0x36, 0xf9 });
        gbc.writeMem(0xb9a1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x5c8);
        EXPECT(gbc.pc(), 0x8033);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8031), 0x36);
        EXPECT(gbc.readMem(0x8032), 0xf9);
        EXPECT(gbc.readMem(0xb9a1), 0xf9);
        // 36 0188
        gbc.setState(0xa2c6, 0x3824, 0x9360, 0xebea, 0x9e41, 0xade4, 0x0, 0x1);
        gbc.writeMem(0xa2c6, { 0x36, 0x9f });
        gbc.writeMem(0xade4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x3824);
        EXPECT(gbc.pc(), 0xa2c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2c6), 0x36);
        EXPECT(gbc.readMem(0xa2c7), 0x9f);
        EXPECT(gbc.readMem(0xade4), 0x9f);
        // 36 018A
        gbc.setState(0x8289, 0x467e, 0x7c70, 0xf57e, 0xe5c, 0x9f2a, 0x1, 0x1);
        gbc.writeMem(0x8289, { 0x36, 0xdc });
        gbc.writeMem(0x9f2a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x467e);
        EXPECT(gbc.pc(), 0x828b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8289), 0x36);
        EXPECT(gbc.readMem(0x828a), 0xdc);
        EXPECT(gbc.readMem(0x9f2a), 0xdc);
        // 36 018D
        gbc.setState(0x568d, 0x5c80, 0x800, 0xe8e7, 0x2001, 0x951a, 0x1, 0x0);
        gbc.writeMem(0x568d, { 0x36, 0x91 });
        gbc.writeMem(0x951a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x5c80);
        EXPECT(gbc.pc(), 0x568f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x951a), 0x91);
        // 36 018F
        gbc.setState(0x6f44, 0x2a89, 0xdc20, 0x4b7d, 0xdbb, 0x8ea0, 0x1, 0x1);
        gbc.writeMem(0x6f44, { 0x36, 0x8 });
        gbc.writeMem(0x8ea0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x2a89);
        EXPECT(gbc.pc(), 0x6f46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ea0), 0x8);
        // 36 0190
        gbc.setState(0xd9ff, 0x941d, 0x650, 0x6709, 0x5d44, 0x9141, 0x0, 0x1);
        gbc.writeMem(0x9141, { 0x0 });
        gbc.writeMem(0xd9ff, { 0x36, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x941d);
        EXPECT(gbc.pc(), 0xda01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9141), 0xa6);
        EXPECT(gbc.readMem(0xd9ff), 0x36);
        EXPECT(gbc.readMem(0xda00), 0xa6);
        // 36 0193
        gbc.setState(0x2c01, 0xa3b5, 0xba20, 0x8732, 0x275a, 0xe42f, 0x0, 0x1);
        gbc.writeMem(0x2c01, { 0x36, 0x7a });
        gbc.writeMem(0xe42f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa3b5);
        EXPECT(gbc.pc(), 0x2c03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe42f), 0x7a);
        // 36 0196
        gbc.setState(0x709c, 0x3b00, 0xe100, 0xe46b, 0x7a5a, 0xd554, 0x0, 0x0);
        gbc.writeMem(0x709c, { 0x36, 0x53 });
        gbc.writeMem(0xd554, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x3b00);
        EXPECT(gbc.pc(), 0x709e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd554), 0x53);
        // 36 0197
        gbc.setState(0x9fcb, 0x93bf, 0xfec0, 0xe9b5, 0xe4c8, 0xc15c, 0x0, 0x0);
        gbc.writeMem(0x9fcb, { 0x36, 0x78 });
        gbc.writeMem(0xc15c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x93bf);
        EXPECT(gbc.pc(), 0x9fcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fcb), 0x36);
        EXPECT(gbc.readMem(0x9fcc), 0x78);
        EXPECT(gbc.readMem(0xc15c), 0x78);
        // 36 0199
        gbc.setState(0x1680, 0x32b3, 0x3580, 0xe602, 0x879a, 0xb834, 0x0, 0x0);
        gbc.writeMem(0x1680, { 0x36, 0x44 });
        gbc.writeMem(0xb834, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x32b3);
        EXPECT(gbc.pc(), 0x1682);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb834), 0x44);
        // 36 019A
        gbc.setState(0x133b, 0x1b26, 0xe6e0, 0x9e83, 0x2f8a, 0xc1bf, 0x1, 0x0);
        gbc.writeMem(0x133b, { 0x36, 0x40 });
        gbc.writeMem(0xc1bf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x1b26);
        EXPECT(gbc.pc(), 0x133d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1bf), 0x40);
        // 36 019B
        gbc.setState(0x7197, 0x7d6f, 0x1f20, 0x81b4, 0x49de, 0x8b11, 0x0, 0x0);
        gbc.writeMem(0x7197, { 0x36, 0xd2 });
        gbc.writeMem(0x8b11, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x7d6f);
        EXPECT(gbc.pc(), 0x7199);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b11), 0xd2);
        // 36 019C
        gbc.setState(0x9308, 0x59a4, 0x8730, 0xa2fa, 0xa6a0, 0xf77e, 0x0, 0x1);
        gbc.writeMem(0x9308, { 0x36, 0xc });
        gbc.writeMem(0xf77e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x59a4);
        EXPECT(gbc.pc(), 0x930a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9308), 0x36);
        EXPECT(gbc.readMem(0x9309), 0xc);
        EXPECT(gbc.readMem(0xf77e), 0xc);
        // 36 019D
        gbc.setState(0x2810, 0x708c, 0xf5e0, 0x32f4, 0xdbed, 0x9243, 0x0, 0x1);
        gbc.writeMem(0x2810, { 0x36, 0x65 });
        gbc.writeMem(0x9243, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x708c);
        EXPECT(gbc.pc(), 0x2812);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9243), 0x65);
        // 36 01A0
        gbc.setState(0x142a, 0x771f, 0x5a60, 0x42e5, 0x7637, 0x96b7, 0x0, 0x0);
        gbc.writeMem(0x142a, { 0x36, 0xe1 });
        gbc.writeMem(0x96b7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x771f);
        EXPECT(gbc.pc(), 0x142c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96b7), 0xe1);
        // 36 01A2
        gbc.setState(0xcfe9, 0x83e1, 0x5110, 0x37b8, 0xfdba, 0xf1a6, 0x1, 0x0);
        gbc.writeMem(0xcfe9, { 0x36, 0x8d });
        gbc.writeMem(0xf1a6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x83e1);
        EXPECT(gbc.pc(), 0xcfeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfe9), 0x36);
        EXPECT(gbc.readMem(0xcfea), 0x8d);
        EXPECT(gbc.readMem(0xf1a6), 0x8d);
        // 36 01A4
        gbc.setState(0xe50b, 0xfd28, 0xccb0, 0xaedd, 0xefab, 0xf0eb, 0x0, 0x0);
        gbc.writeMem(0xe50b, { 0x36, 0x77 });
        gbc.writeMem(0xf0eb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xfd28);
        EXPECT(gbc.pc(), 0xe50d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe50b), 0x36);
        EXPECT(gbc.readMem(0xe50c), 0x77);
        EXPECT(gbc.readMem(0xf0eb), 0x77);
        // 36 01A6
        gbc.setState(0x651f, 0xa179, 0xc930, 0x89f8, 0xa823, 0xd31f, 0x1, 0x1);
        gbc.writeMem(0x651f, { 0x36, 0x9c });
        gbc.writeMem(0xd31f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xa179);
        EXPECT(gbc.pc(), 0x6521);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd31f), 0x9c);
        // 36 01A7
        gbc.setState(0x8971, 0x1510, 0x59c0, 0x5186, 0xebff, 0xbbb4, 0x0, 0x0);
        gbc.writeMem(0x8971, { 0x36, 0x3c });
        gbc.writeMem(0xbbb4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x1510);
        EXPECT(gbc.pc(), 0x8973);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8971), 0x36);
        EXPECT(gbc.readMem(0x8972), 0x3c);
        EXPECT(gbc.readMem(0xbbb4), 0x3c);
        // 36 01A8
        gbc.setState(0x8771, 0xc459, 0xe1b0, 0x74c6, 0xfda9, 0x814e, 0x1, 0x0);
        gbc.writeMem(0x814e, { 0x0 });
        gbc.writeMem(0x8771, { 0x36, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc459);
        EXPECT(gbc.pc(), 0x8773);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x814e), 0xb);
        EXPECT(gbc.readMem(0x8771), 0x36);
        EXPECT(gbc.readMem(0x8772), 0xb);
        // 36 01AA
        gbc.setState(0x5833, 0x7deb, 0x4950, 0x5fba, 0xf48b, 0xd60a, 0x1, 0x0);
        gbc.writeMem(0x5833, { 0x36, 0x6e });
        gbc.writeMem(0xd60a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x7deb);
        EXPECT(gbc.pc(), 0x5835);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd60a), 0x6e);
        // 36 01AC
        gbc.setState(0x5c76, 0x4807, 0x3a40, 0xc1e2, 0xbc99, 0xb330, 0x0, 0x0);
        gbc.writeMem(0x5c76, { 0x36, 0xe3 });
        gbc.writeMem(0xb330, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x4807);
        EXPECT(gbc.pc(), 0x5c78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb330), 0xe3);
        // 36 01AD
        gbc.setState(0x750d, 0x704a, 0x9070, 0x62f8, 0xc14b, 0x9069, 0x1, 0x0);
        gbc.writeMem(0x750d, { 0x36, 0x13 });
        gbc.writeMem(0x9069, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x704a);
        EXPECT(gbc.pc(), 0x750f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9069), 0x13);
        // 36 01AF
        gbc.setState(0x9ff2, 0xe0c, 0xeb30, 0x99ec, 0xff4d, 0xb6b5, 0x0, 0x0);
        gbc.writeMem(0x9ff2, { 0x36, 0xd9 });
        gbc.writeMem(0xb6b5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xe0c);
        EXPECT(gbc.pc(), 0x9ff4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ff2), 0x36);
        EXPECT(gbc.readMem(0x9ff3), 0xd9);
        EXPECT(gbc.readMem(0xb6b5), 0xd9);
        // 36 01B0
        gbc.setState(0x7f52, 0x8201, 0x2300, 0x5f57, 0x4980, 0x8db5, 0x1, 0x1);
        gbc.writeMem(0x7f52, { 0x36, 0x48 });
        gbc.writeMem(0x8db5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x8201);
        EXPECT(gbc.pc(), 0x7f54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8db5), 0x48);
        // 36 01B1
        gbc.setState(0x8d87, 0x3fe8, 0x7530, 0x74cb, 0xae34, 0xc1ca, 0x1, 0x0);
        gbc.writeMem(0x8d87, { 0x36, 0xb4 });
        gbc.writeMem(0xc1ca, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x3fe8);
        EXPECT(gbc.pc(), 0x8d89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d87), 0x36);
        EXPECT(gbc.readMem(0x8d88), 0xb4);
        EXPECT(gbc.readMem(0xc1ca), 0xb4);
        // 36 01B2
        gbc.setState(0xe0e, 0x3fc4, 0xdb0, 0x176b, 0xdc27, 0xe968, 0x1, 0x1);
        gbc.writeMem(0xe0e, { 0x36, 0xf0 });
        gbc.writeMem(0xe968, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x3fc4);
        EXPECT(gbc.pc(), 0xe10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe968), 0xf0);
        // 36 01B3
        gbc.setState(0x9932, 0xd988, 0x3d10, 0x8381, 0x673d, 0xa4d7, 0x0, 0x0);
        gbc.writeMem(0x9932, { 0x36, 0xd3 });
        gbc.writeMem(0xa4d7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xd988);
        EXPECT(gbc.pc(), 0x9934);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9932), 0x36);
        EXPECT(gbc.readMem(0x9933), 0xd3);
        EXPECT(gbc.readMem(0xa4d7), 0xd3);
        // 36 01B7
        gbc.setState(0x1b95, 0x9aaa, 0xe230, 0x40de, 0x261d, 0xd327, 0x0, 0x0);
        gbc.writeMem(0x1b95, { 0x36, 0x63 });
        gbc.writeMem(0xd327, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9aaa);
        EXPECT(gbc.pc(), 0x1b97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd327), 0x63);
        // 36 01B8
        gbc.setState(0x8aeb, 0xa3ca, 0xdc50, 0x6832, 0xe7eb, 0x8c77, 0x1, 0x0);
        gbc.writeMem(0x8aeb, { 0x36, 0x97 });
        gbc.writeMem(0x8c77, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xa3ca);
        EXPECT(gbc.pc(), 0x8aed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8aeb), 0x36);
        EXPECT(gbc.readMem(0x8aec), 0x97);
        EXPECT(gbc.readMem(0x8c77), 0x97);
        // 36 01B9
        gbc.setState(0xe47f, 0x6363, 0x9000, 0x6327, 0xfe63, 0xf028, 0x0, 0x1);
        gbc.writeMem(0xe47f, { 0x36, 0xfa });
        gbc.writeMem(0xf028, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x6363);
        EXPECT(gbc.pc(), 0xe481);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe47f), 0x36);
        EXPECT(gbc.readMem(0xe480), 0xfa);
        EXPECT(gbc.readMem(0xf028), 0xfa);
        // 36 01BA
        gbc.setState(0xbdff, 0xe8f5, 0x2160, 0xc725, 0x4375, 0xcefc, 0x0, 0x0);
        gbc.writeMem(0xbdff, { 0x36, 0xb5 });
        gbc.writeMem(0xcefc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xe8f5);
        EXPECT(gbc.pc(), 0xbe01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdff), 0x36);
        EXPECT(gbc.readMem(0xbe00), 0xb5);
        EXPECT(gbc.readMem(0xcefc), 0xb5);
        // 36 01BD
        gbc.setState(0x207f, 0x8299, 0xb5d0, 0xeb47, 0x9243, 0x9275, 0x0, 0x1);
        gbc.writeMem(0x207f, { 0x36, 0x34 });
        gbc.writeMem(0x9275, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x8299);
        EXPECT(gbc.pc(), 0x2081);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9275), 0x34);
        // 36 01BE
        gbc.setState(0x4f1b, 0x9d2f, 0x58c0, 0xa281, 0x89dc, 0xc002, 0x0, 0x0);
        gbc.writeMem(0x4f1b, { 0x36, 0x13 });
        gbc.writeMem(0xc002, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x9d2f);
        EXPECT(gbc.pc(), 0x4f1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc002), 0x13);
        // 36 01BF
        gbc.setState(0x3cb8, 0x1064, 0x5c10, 0x4549, 0xbcf, 0xadad, 0x1, 0x0);
        gbc.writeMem(0x3cb8, { 0x36, 0x2a });
        gbc.writeMem(0xadad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x1064);
        EXPECT(gbc.pc(), 0x3cba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadad), 0x2a);
        // 36 01C0
        gbc.setState(0x4808, 0xcb66, 0x77d0, 0xdab3, 0xef36, 0xe246, 0x0, 0x0);
        gbc.writeMem(0x4808, { 0x36, 0x2 });
        gbc.writeMem(0xe246, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xcb66);
        EXPECT(gbc.pc(), 0x480a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe246), 0x2);
        // 36 01C1
        gbc.setState(0x3b14, 0x8333, 0x6aa0, 0x69df, 0x1801, 0xe479, 0x1, 0x0);
        gbc.writeMem(0x3b14, { 0x36, 0xb0 });
        gbc.writeMem(0xe479, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x8333);
        EXPECT(gbc.pc(), 0x3b16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe479), 0xb0);
        // 36 01C9
        gbc.setState(0x6ab9, 0xe5, 0x83d0, 0x1aca, 0x267a, 0x8258, 0x1, 0x1);
        gbc.writeMem(0x6ab9, { 0x36, 0xaa });
        gbc.writeMem(0x8258, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xe5);
        EXPECT(gbc.pc(), 0x6abb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8258), 0xaa);
        // 36 01CA
        gbc.setState(0xb7e3, 0x1292, 0x6710, 0xe1ef, 0x6cc5, 0xcdb4, 0x0, 0x0);
        gbc.writeMem(0xb7e3, { 0x36, 0x2d });
        gbc.writeMem(0xcdb4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x1292);
        EXPECT(gbc.pc(), 0xb7e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7e3), 0x36);
        EXPECT(gbc.readMem(0xb7e4), 0x2d);
        EXPECT(gbc.readMem(0xcdb4), 0x2d);
        // 36 01CB
        gbc.setState(0x83f8, 0x6210, 0x7370, 0x2f24, 0x6f6a, 0xfd81, 0x0, 0x0);
        gbc.writeMem(0x83f8, { 0x36, 0x88 });
        gbc.writeMem(0xfd81, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6210);
        EXPECT(gbc.pc(), 0x83fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83f8), 0x36);
        EXPECT(gbc.readMem(0x83f9), 0x88);
        EXPECT(gbc.readMem(0xfd81), 0x88);
        // 36 01CD
        gbc.setState(0x579c, 0xb72b, 0xdd0, 0x341c, 0xd95f, 0xc7c3, 0x0, 0x0);
        gbc.writeMem(0x579c, { 0x36, 0xee });
        gbc.writeMem(0xc7c3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xb72b);
        EXPECT(gbc.pc(), 0x579e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7c3), 0xee);
        // 36 01D1
        gbc.setState(0xe2a, 0x429d, 0x1f60, 0xe9e5, 0x606b, 0xa5d2, 0x1, 0x0);
        gbc.writeMem(0xe2a, { 0x36, 0xec });
        gbc.writeMem(0xa5d2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x429d);
        EXPECT(gbc.pc(), 0xe2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5d2), 0xec);
        // 36 01D3
        gbc.setState(0x9af4, 0x7854, 0xf4d0, 0xdc1d, 0x7b40, 0x9be7, 0x0, 0x0);
        gbc.writeMem(0x9af4, { 0x36, 0x3b });
        gbc.writeMem(0x9be7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x7854);
        EXPECT(gbc.pc(), 0x9af6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9af4), 0x36);
        EXPECT(gbc.readMem(0x9af5), 0x3b);
        EXPECT(gbc.readMem(0x9be7), 0x3b);
        // 36 01D5
        gbc.setState(0xfe9, 0xea96, 0xc80, 0xbfca, 0xb61e, 0xf32e, 0x0, 0x1);
        gbc.writeMem(0xfe9, { 0x36, 0x4e });
        gbc.writeMem(0xf32e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xea96);
        EXPECT(gbc.pc(), 0xfeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf32e), 0x4e);
        // 36 01D7
        gbc.setState(0x32c7, 0x4160, 0x3e70, 0xdff4, 0xb235, 0xf39e, 0x1, 0x0);
        gbc.writeMem(0x32c7, { 0x36, 0x4a });
        gbc.writeMem(0xf39e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x4160);
        EXPECT(gbc.pc(), 0x32c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf39e), 0x4a);
        // 36 01DA
        gbc.setState(0xce74, 0xf2ec, 0xf070, 0x87d8, 0x4a81, 0x8003, 0x0, 0x1);
        gbc.writeMem(0x8003, { 0x0 });
        gbc.writeMem(0xce74, { 0x36, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf2ec);
        EXPECT(gbc.pc(), 0xce76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8003), 0xc0);
        EXPECT(gbc.readMem(0xce74), 0x36);
        EXPECT(gbc.readMem(0xce75), 0xc0);
        // 36 01DD
        gbc.setState(0xdbe, 0x357f, 0xa540, 0x96f5, 0x84d2, 0xcd5c, 0x1, 0x0);
        gbc.writeMem(0xdbe, { 0x36, 0x3b });
        gbc.writeMem(0xcd5c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x357f);
        EXPECT(gbc.pc(), 0xdc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd5c), 0x3b);
        // 36 01DE
        gbc.setState(0x9730, 0x318b, 0x9f20, 0xddde, 0x7c71, 0x880f, 0x1, 0x0);
        gbc.writeMem(0x880f, { 0x0 });
        gbc.writeMem(0x9730, { 0x36, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x318b);
        EXPECT(gbc.pc(), 0x9732);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x880f), 0xed);
        EXPECT(gbc.readMem(0x9730), 0x36);
        EXPECT(gbc.readMem(0x9731), 0xed);
        // 36 01DF
        gbc.setState(0xe652, 0xa087, 0x7000, 0x2255, 0x5a16, 0x8f2f, 0x0, 0x0);
        gbc.writeMem(0x8f2f, { 0x0 });
        gbc.writeMem(0xe652, { 0x36, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa087);
        EXPECT(gbc.pc(), 0xe654);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f2f), 0x36);
        EXPECT(gbc.readMem(0xe652), 0x36);
        EXPECT(gbc.readMem(0xe653), 0x36);
        // 36 01E1
        gbc.setState(0xb760, 0x9a20, 0x5ab0, 0x7a9f, 0xe00d, 0xa56f, 0x0, 0x0);
        gbc.writeMem(0xa56f, { 0x0 });
        gbc.writeMem(0xb760, { 0x36, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9a20);
        EXPECT(gbc.pc(), 0xb762);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa56f), 0xcb);
        EXPECT(gbc.readMem(0xb760), 0x36);
        EXPECT(gbc.readMem(0xb761), 0xcb);
        // 36 01E2
        gbc.setState(0x2851, 0x96b2, 0xc9c0, 0x5b5e, 0xce5b, 0x9c1f, 0x1, 0x1);
        gbc.writeMem(0x2851, { 0x36, 0x58 });
        gbc.writeMem(0x9c1f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x96b2);
        EXPECT(gbc.pc(), 0x2853);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c1f), 0x58);
        // 36 01E4
        gbc.setState(0xa780, 0x87f3, 0x4100, 0x2a36, 0xdb23, 0xb4d7, 0x1, 0x0);
        gbc.writeMem(0xa780, { 0x36, 0xca });
        gbc.writeMem(0xb4d7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x87f3);
        EXPECT(gbc.pc(), 0xa782);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa780), 0x36);
        EXPECT(gbc.readMem(0xa781), 0xca);
        EXPECT(gbc.readMem(0xb4d7), 0xca);
        // 36 01E7
        gbc.setState(0x60fa, 0xd7ef, 0x7c40, 0xba22, 0xcd80, 0xf0f6, 0x1, 0x0);
        gbc.writeMem(0x60fa, { 0x36, 0x72 });
        gbc.writeMem(0xf0f6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd7ef);
        EXPECT(gbc.pc(), 0x60fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf0f6), 0x72);
        // 36 01E9
        gbc.setState(0x435f, 0x1f2b, 0x7360, 0xb80e, 0xb32e, 0xc667, 0x1, 0x0);
        gbc.writeMem(0x435f, { 0x36, 0xa4 });
        gbc.writeMem(0xc667, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x1f2b);
        EXPECT(gbc.pc(), 0x4361);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc667), 0xa4);
        // 36 01EE
        gbc.setState(0x40a4, 0x9afb, 0x67e0, 0x9dcc, 0x7e8b, 0xe463, 0x1, 0x1);
        gbc.writeMem(0x40a4, { 0x36, 0x6d });
        gbc.writeMem(0xe463, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x9afb);
        EXPECT(gbc.pc(), 0x40a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe463), 0x6d);
        // 36 01F0
        gbc.setState(0x7ede, 0x9975, 0xb760, 0xe810, 0xb99c, 0x847a, 0x1, 0x1);
        gbc.writeMem(0x7ede, { 0x36, 0x7a });
        gbc.writeMem(0x847a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x9975);
        EXPECT(gbc.pc(), 0x7ee0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x847a), 0x7a);
        // 36 01F1
        gbc.setState(0xbf9, 0xca76, 0x95f0, 0x6b14, 0xfded, 0x80d8, 0x0, 0x1);
        gbc.writeMem(0xbf9, { 0x36, 0xcb });
        gbc.writeMem(0x80d8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xca76);
        EXPECT(gbc.pc(), 0xbfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80d8), 0xcb);
        // 36 01F5
        gbc.setState(0x90fb, 0x6721, 0x79f0, 0xac65, 0x2a9b, 0x84fd, 0x1, 0x1);
        gbc.writeMem(0x84fd, { 0x0 });
        gbc.writeMem(0x90fb, { 0x36, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x6721);
        EXPECT(gbc.pc(), 0x90fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84fd), 0x9c);
        EXPECT(gbc.readMem(0x90fb), 0x36);
        EXPECT(gbc.readMem(0x90fc), 0x9c);
        // 36 01F6
        gbc.setState(0xc973, 0x42c2, 0x7c70, 0xce36, 0xa27c, 0xbc9e, 0x0, 0x0);
        gbc.writeMem(0xbc9e, { 0x0 });
        gbc.writeMem(0xc973, { 0x36, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x42c2);
        EXPECT(gbc.pc(), 0xc975);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc9e), 0xee);
        EXPECT(gbc.readMem(0xc973), 0x36);
        EXPECT(gbc.readMem(0xc974), 0xee);
        // 36 01FA
        gbc.setState(0xa930, 0xa9bc, 0x4200, 0xaa33, 0x267e, 0x846d, 0x1, 0x1);
        gbc.writeMem(0x846d, { 0x0 });
        gbc.writeMem(0xa930, { 0x36, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xa9bc);
        EXPECT(gbc.pc(), 0xa932);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x846d), 0xdc);
        EXPECT(gbc.readMem(0xa930), 0x36);
        EXPECT(gbc.readMem(0xa931), 0xdc);
        // 36 01FB
        gbc.setState(0xb987, 0x4d2d, 0x3400, 0x8fba, 0xbd22, 0x9ab0, 0x1, 0x0);
        gbc.writeMem(0x9ab0, { 0x0 });
        gbc.writeMem(0xb987, { 0x36, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x4d2d);
        EXPECT(gbc.pc(), 0xb989);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ab0), 0x25);
        EXPECT(gbc.readMem(0xb987), 0x36);
        EXPECT(gbc.readMem(0xb988), 0x25);
        // 36 01FC
        gbc.setState(0x5678, 0xcdc9, 0xcec0, 0xde08, 0x35b3, 0xa84a, 0x0, 0x1);
        gbc.writeMem(0x5678, { 0x36, 0x93 });
        gbc.writeMem(0xa84a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xcdc9);
        EXPECT(gbc.pc(), 0x567a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa84a), 0x93);
        // 36 01FF
        gbc.setState(0xb9ca, 0x7940, 0x8460, 0xf942, 0xcf04, 0xb508, 0x1, 0x1);
        gbc.writeMem(0xb508, { 0x0 });
        gbc.writeMem(0xb9ca, { 0x36, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x7940);
        EXPECT(gbc.pc(), 0xb9cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb508), 0x15);
        EXPECT(gbc.readMem(0xb9ca), 0x36);
        EXPECT(gbc.readMem(0xb9cb), 0x15);
        // 36 0200
        gbc.setState(0x22a9, 0x1f7c, 0x3a20, 0x9fdc, 0x52fd, 0xc7aa, 0x1, 0x0);
        gbc.writeMem(0x22a9, { 0x36, 0xa6 });
        gbc.writeMem(0xc7aa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x1f7c);
        EXPECT(gbc.pc(), 0x22ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7aa), 0xa6);
        // 36 0202
        gbc.setState(0xd46b, 0xd3ab, 0x3090, 0xabc8, 0xb794, 0xc1c1, 0x0, 0x0);
        gbc.writeMem(0xc1c1, { 0x0 });
        gbc.writeMem(0xd46b, { 0x36, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xd3ab);
        EXPECT(gbc.pc(), 0xd46d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1c1), 0xf);
        EXPECT(gbc.readMem(0xd46b), 0x36);
        EXPECT(gbc.readMem(0xd46c), 0xf);
        // 36 0203
        gbc.setState(0x8b38, 0xeaa3, 0xfb10, 0x7a74, 0x9315, 0xda49, 0x0, 0x1);
        gbc.writeMem(0x8b38, { 0x36, 0xc6 });
        gbc.writeMem(0xda49, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xeaa3);
        EXPECT(gbc.pc(), 0x8b3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b38), 0x36);
        EXPECT(gbc.readMem(0x8b39), 0xc6);
        EXPECT(gbc.readMem(0xda49), 0xc6);
        // 36 0204
        gbc.setState(0x5542, 0xccb5, 0x65a0, 0x41f6, 0xea78, 0xcc29, 0x0, 0x1);
        gbc.writeMem(0x5542, { 0x36, 0x29 });
        gbc.writeMem(0xcc29, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xccb5);
        EXPECT(gbc.pc(), 0x5544);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc29), 0x29);
        // 36 0206
        gbc.setState(0x3181, 0x4308, 0x77e0, 0x5c96, 0x641c, 0xe160, 0x0, 0x1);
        gbc.writeMem(0x3181, { 0x36, 0x3f });
        gbc.writeMem(0xe160, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x4308);
        EXPECT(gbc.pc(), 0x3183);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe160), 0x3f);
        // 36 0208
        gbc.setState(0xe302, 0xfc2d, 0xd2d0, 0xba1f, 0xce09, 0x967b, 0x0, 0x1);
        gbc.writeMem(0x967b, { 0x0 });
        gbc.writeMem(0xe302, { 0x36, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xfc2d);
        EXPECT(gbc.pc(), 0xe304);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x967b), 0x62);
        EXPECT(gbc.readMem(0xe302), 0x36);
        EXPECT(gbc.readMem(0xe303), 0x62);
        // 36 0209
        gbc.setState(0xc819, 0xc5ca, 0x4150, 0x69ab, 0x9caf, 0x89c6, 0x0, 0x1);
        gbc.writeMem(0x89c6, { 0x0 });
        gbc.writeMem(0xc819, { 0x36, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xc5ca);
        EXPECT(gbc.pc(), 0xc81b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89c6), 0x17);
        EXPECT(gbc.readMem(0xc819), 0x36);
        EXPECT(gbc.readMem(0xc81a), 0x17);
        // 36 020C
        gbc.setState(0x5918, 0xbb27, 0x4810, 0x8896, 0x2d74, 0xbf5d, 0x0, 0x0);
        gbc.writeMem(0x5918, { 0x36, 0xc8 });
        gbc.writeMem(0xbf5d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xbb27);
        EXPECT(gbc.pc(), 0x591a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf5d), 0xc8);
        // 36 020D
        gbc.setState(0x20d7, 0x5aa2, 0xda10, 0xfdf1, 0x3425, 0xa65b, 0x1, 0x0);
        gbc.writeMem(0x20d7, { 0x36, 0x6b });
        gbc.writeMem(0xa65b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x5aa2);
        EXPECT(gbc.pc(), 0x20d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa65b), 0x6b);
        // 36 020E
        gbc.setState(0x891a, 0x6376, 0xc250, 0xf553, 0x5169, 0xa544, 0x0, 0x1);
        gbc.writeMem(0x891a, { 0x36, 0xe3 });
        gbc.writeMem(0xa544, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x6376);
        EXPECT(gbc.pc(), 0x891c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x891a), 0x36);
        EXPECT(gbc.readMem(0x891b), 0xe3);
        EXPECT(gbc.readMem(0xa544), 0xe3);
        // 36 020F
        gbc.setState(0x607c, 0x1714, 0x73b0, 0x99ae, 0x3636, 0x987c, 0x0, 0x1);
        gbc.writeMem(0x607c, { 0x36, 0xc });
        gbc.writeMem(0x987c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x1714);
        EXPECT(gbc.pc(), 0x607e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x987c), 0xc);
        // 36 0211
        gbc.setState(0xb5c6, 0x4388, 0x7560, 0x1693, 0x2c02, 0x928d, 0x1, 0x1);
        gbc.writeMem(0x928d, { 0x0 });
        gbc.writeMem(0xb5c6, { 0x36, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x4388);
        EXPECT(gbc.pc(), 0xb5c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x928d), 0xd1);
        EXPECT(gbc.readMem(0xb5c6), 0x36);
        EXPECT(gbc.readMem(0xb5c7), 0xd1);
        // 36 0212
        gbc.setState(0x47c0, 0x79e9, 0xa250, 0x5880, 0x3b42, 0x9226, 0x0, 0x1);
        gbc.writeMem(0x47c0, { 0x36, 0xbd });
        gbc.writeMem(0x9226, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x79e9);
        EXPECT(gbc.pc(), 0x47c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9226), 0xbd);
        // 36 0214
        gbc.setState(0xcbb, 0x5ec5, 0x2ad0, 0x8d49, 0x2590, 0x9955, 0x1, 0x1);
        gbc.writeMem(0xcbb, { 0x36, 0xaa });
        gbc.writeMem(0x9955, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x5ec5);
        EXPECT(gbc.pc(), 0xcbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9955), 0xaa);
        // 36 0215
        gbc.setState(0x63c, 0x3d4e, 0xdd90, 0xde, 0x5ffc, 0x832c, 0x0, 0x0);
        gbc.writeMem(0x63c, { 0x36, 0x77 });
        gbc.writeMem(0x832c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x3d4e);
        EXPECT(gbc.pc(), 0x63e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x832c), 0x77);
        // 36 021B
        gbc.setState(0x5811, 0x3e87, 0x3010, 0x378e, 0xba70, 0x970a, 0x0, 0x0);
        gbc.writeMem(0x5811, { 0x36, 0x4c });
        gbc.writeMem(0x970a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x3e87);
        EXPECT(gbc.pc(), 0x5813);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x970a), 0x4c);
        // 36 021F
        gbc.setState(0xb7d9, 0xd5e9, 0xe950, 0x94ff, 0x8740, 0xe2b7, 0x1, 0x1);
        gbc.writeMem(0xb7d9, { 0x36, 0xd8 });
        gbc.writeMem(0xe2b7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xd5e9);
        EXPECT(gbc.pc(), 0xb7db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7d9), 0x36);
        EXPECT(gbc.readMem(0xb7da), 0xd8);
        EXPECT(gbc.readMem(0xe2b7), 0xd8);
        // 36 0221
        gbc.setState(0xa183, 0x14dc, 0xf710, 0x78aa, 0x9c0f, 0xf41e, 0x1, 0x0);
        gbc.writeMem(0xa183, { 0x36, 0x45 });
        gbc.writeMem(0xf41e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x14dc);
        EXPECT(gbc.pc(), 0xa185);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa183), 0x36);
        EXPECT(gbc.readMem(0xa184), 0x45);
        EXPECT(gbc.readMem(0xf41e), 0x45);
        // 36 0222
        gbc.setState(0x758e, 0xa7a7, 0x4800, 0x56e1, 0xb402, 0x8794, 0x1, 0x1);
        gbc.writeMem(0x758e, { 0x36, 0x16 });
        gbc.writeMem(0x8794, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xa7a7);
        EXPECT(gbc.pc(), 0x7590);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8794), 0x16);
        // 36 0223
        gbc.setState(0x1873, 0x46bc, 0xfaa0, 0xf9f5, 0xde8b, 0xd4fa, 0x0, 0x1);
        gbc.writeMem(0x1873, { 0x36, 0x8c });
        gbc.writeMem(0xd4fa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x46bc);
        EXPECT(gbc.pc(), 0x1875);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4fa), 0x8c);
        // 36 0224
        gbc.setState(0x4ae8, 0x2547, 0x8090, 0x1043, 0x4844, 0xf9a1, 0x0, 0x1);
        gbc.writeMem(0x4ae8, { 0x36, 0x9a });
        gbc.writeMem(0xf9a1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x2547);
        EXPECT(gbc.pc(), 0x4aea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf9a1), 0x9a);
        // 36 0225
        gbc.setState(0x2886, 0xca3c, 0x47f0, 0xdc15, 0x1a25, 0x8556, 0x1, 0x1);
        gbc.writeMem(0x2886, { 0x36, 0x92 });
        gbc.writeMem(0x8556, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xca3c);
        EXPECT(gbc.pc(), 0x2888);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8556), 0x92);
        // 36 0227
        gbc.setState(0x6b04, 0xcfd1, 0x74b0, 0x228a, 0xa3ac, 0xf720, 0x0, 0x1);
        gbc.writeMem(0x6b04, { 0x36, 0xda });
        gbc.writeMem(0xf720, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xcfd1);
        EXPECT(gbc.pc(), 0x6b06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf720), 0xda);
        // 36 0228
        gbc.setState(0x61c, 0xe158, 0xabe0, 0xdd30, 0x9e9c, 0xd6a2, 0x1, 0x0);
        gbc.writeMem(0x61c, { 0x36, 0xe1 });
        gbc.writeMem(0xd6a2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xe158);
        EXPECT(gbc.pc(), 0x61e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6a2), 0xe1);
        // 36 0229
        gbc.setState(0xdb1e, 0x57a6, 0xa1d0, 0x247a, 0x8d55, 0x80fd, 0x1, 0x1);
        gbc.writeMem(0x80fd, { 0x0 });
        gbc.writeMem(0xdb1e, { 0x36, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x57a6);
        EXPECT(gbc.pc(), 0xdb20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80fd), 0x3b);
        EXPECT(gbc.readMem(0xdb1e), 0x36);
        EXPECT(gbc.readMem(0xdb1f), 0x3b);
        // 36 022A
        gbc.setState(0xd00f, 0x3aca, 0x9710, 0x6fa6, 0xdf69, 0xf84d, 0x0, 0x1);
        gbc.writeMem(0xd00f, { 0x36, 0x45 });
        gbc.writeMem(0xf84d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x3aca);
        EXPECT(gbc.pc(), 0xd011);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd00f), 0x36);
        EXPECT(gbc.readMem(0xd010), 0x45);
        EXPECT(gbc.readMem(0xf84d), 0x45);
        // 36 022C
        gbc.setState(0x8670, 0x7452, 0xe830, 0x7785, 0x4f93, 0xe4b8, 0x0, 0x1);
        gbc.writeMem(0x8670, { 0x36, 0x76 });
        gbc.writeMem(0xe4b8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x7452);
        EXPECT(gbc.pc(), 0x8672);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8670), 0x36);
        EXPECT(gbc.readMem(0x8671), 0x76);
        EXPECT(gbc.readMem(0xe4b8), 0x76);
        // 36 022D
        gbc.setState(0x8b3c, 0x8859, 0x5c00, 0x9ea3, 0x8461, 0xab35, 0x1, 0x0);
        gbc.writeMem(0x8b3c, { 0x36, 0x3b });
        gbc.writeMem(0xab35, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x8859);
        EXPECT(gbc.pc(), 0x8b3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b3c), 0x36);
        EXPECT(gbc.readMem(0x8b3d), 0x3b);
        EXPECT(gbc.readMem(0xab35), 0x3b);
        // 36 022E
        gbc.setState(0x5196, 0xf3e3, 0xa0, 0x1db2, 0x71cd, 0xbc08, 0x0, 0x0);
        gbc.writeMem(0x5196, { 0x36, 0x28 });
        gbc.writeMem(0xbc08, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xf3e3);
        EXPECT(gbc.pc(), 0x5198);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc08), 0x28);
        // 36 022F
        gbc.setState(0x59fd, 0x391, 0xd9e0, 0x91df, 0x52f9, 0xf29e, 0x0, 0x0);
        gbc.writeMem(0x59fd, { 0x36, 0xb8 });
        gbc.writeMem(0xf29e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x391);
        EXPECT(gbc.pc(), 0x59ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf29e), 0xb8);
        // 36 0230
        gbc.setState(0x6dc7, 0x7c01, 0xd920, 0x1e4e, 0x69bd, 0xe624, 0x1, 0x0);
        gbc.writeMem(0x6dc7, { 0x36, 0x2e });
        gbc.writeMem(0xe624, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x7c01);
        EXPECT(gbc.pc(), 0x6dc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe624), 0x2e);
        // 36 0232
        gbc.setState(0xe9b4, 0x9744, 0x1800, 0x883d, 0x764d, 0xe241, 0x1, 0x1);
        gbc.writeMem(0xe241, { 0x0 });
        gbc.writeMem(0xe9b4, { 0x36, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x9744);
        EXPECT(gbc.pc(), 0xe9b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe241), 0xb9);
        EXPECT(gbc.readMem(0xe9b4), 0x36);
        EXPECT(gbc.readMem(0xe9b5), 0xb9);
        // 36 0236
        gbc.setState(0xef6, 0x6601, 0x7420, 0x3b55, 0x913f, 0xf521, 0x0, 0x1);
        gbc.writeMem(0xef6, { 0x36, 0x2b });
        gbc.writeMem(0xf521, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x6601);
        EXPECT(gbc.pc(), 0xef8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf521), 0x2b);
        // 36 0237
        gbc.setState(0x5a2e, 0xf9c8, 0xa880, 0x1cfd, 0xf0d6, 0xb68e, 0x0, 0x1);
        gbc.writeMem(0x5a2e, { 0x36, 0x4c });
        gbc.writeMem(0xb68e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xf9c8);
        EXPECT(gbc.pc(), 0x5a30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb68e), 0x4c);
        // 36 0238
        gbc.setState(0xa698, 0xa20e, 0x5020, 0xd84c, 0x8e1, 0x803b, 0x1, 0x0);
        gbc.writeMem(0x803b, { 0x0 });
        gbc.writeMem(0xa698, { 0x36, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xa20e);
        EXPECT(gbc.pc(), 0xa69a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x803b), 0xbb);
        EXPECT(gbc.readMem(0xa698), 0x36);
        EXPECT(gbc.readMem(0xa699), 0xbb);
        // 36 023D
        gbc.setState(0xa352, 0x8ba6, 0x870, 0x19f9, 0x4dc5, 0xc5b4, 0x1, 0x1);
        gbc.writeMem(0xa352, { 0x36, 0xe8 });
        gbc.writeMem(0xc5b4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x8ba6);
        EXPECT(gbc.pc(), 0xa354);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa352), 0x36);
        EXPECT(gbc.readMem(0xa353), 0xe8);
        EXPECT(gbc.readMem(0xc5b4), 0xe8);
        // 36 023F
        gbc.setState(0x2a3c, 0xf336, 0xb8d0, 0x49dd, 0x5da8, 0xaccd, 0x0, 0x0);
        gbc.writeMem(0x2a3c, { 0x36, 0xba });
        gbc.writeMem(0xaccd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xf336);
        EXPECT(gbc.pc(), 0x2a3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaccd), 0xba);
        // 36 0240
        gbc.setState(0xbfe9, 0xc416, 0xc00, 0x6228, 0x14a1, 0xa208, 0x1, 0x1);
        gbc.writeMem(0xa208, { 0x0 });
        gbc.writeMem(0xbfe9, { 0x36, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc416);
        EXPECT(gbc.pc(), 0xbfeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa208), 0x10);
        EXPECT(gbc.readMem(0xbfe9), 0x36);
        EXPECT(gbc.readMem(0xbfea), 0x10);
        // 36 0241
        gbc.setState(0x5995, 0x2f70, 0xdca0, 0x1fb5, 0x30c8, 0xcf88, 0x0, 0x0);
        gbc.writeMem(0x5995, { 0x36, 0x77 });
        gbc.writeMem(0xcf88, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x2f70);
        EXPECT(gbc.pc(), 0x5997);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf88), 0x77);
        // 36 0244
        gbc.setState(0x2d49, 0xde5, 0xd5e0, 0x2a4c, 0xb82a, 0xfd9c, 0x1, 0x0);
        gbc.writeMem(0x2d49, { 0x36, 0x7c });
        gbc.writeMem(0xfd9c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xde5);
        EXPECT(gbc.pc(), 0x2d4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfd9c), 0x7c);
        // 36 0248
        gbc.setState(0x6906, 0xf725, 0xa330, 0xab9f, 0x5646, 0xbeb2, 0x0, 0x0);
        gbc.writeMem(0x6906, { 0x36, 0x60 });
        gbc.writeMem(0xbeb2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xf725);
        EXPECT(gbc.pc(), 0x6908);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbeb2), 0x60);
        // 36 0249
        gbc.setState(0x3a44, 0x629b, 0x9170, 0x8803, 0x492b, 0xa8a3, 0x1, 0x1);
        gbc.writeMem(0x3a44, { 0x36, 0xa2 });
        gbc.writeMem(0xa8a3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x629b);
        EXPECT(gbc.pc(), 0x3a46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8a3), 0xa2);
        // 36 024B
        gbc.setState(0x1927, 0x8a18, 0xee50, 0x68a9, 0xf71e, 0x8574, 0x0, 0x1);
        gbc.writeMem(0x1927, { 0x36, 0xb9 });
        gbc.writeMem(0x8574, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x8a18);
        EXPECT(gbc.pc(), 0x1929);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8574), 0xb9);
        // 36 024E
        gbc.setState(0x89c1, 0x4754, 0x7d0, 0xf30, 0x5bb8, 0x9f47, 0x0, 0x0);
        gbc.writeMem(0x89c1, { 0x36, 0xa });
        gbc.writeMem(0x9f47, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x4754);
        EXPECT(gbc.pc(), 0x89c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89c1), 0x36);
        EXPECT(gbc.readMem(0x89c2), 0xa);
        EXPECT(gbc.readMem(0x9f47), 0xa);
        // 36 024F
        gbc.setState(0x7965, 0xad81, 0xda60, 0x2226, 0x9d1f, 0xfb17, 0x0, 0x0);
        gbc.writeMem(0x7965, { 0x36, 0x8c });
        gbc.writeMem(0xfb17, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xad81);
        EXPECT(gbc.pc(), 0x7967);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfb17), 0x8c);
        // 36 0250
        gbc.setState(0x5501, 0xebc0, 0x6c30, 0xd41a, 0x8d0a, 0xe4d7, 0x0, 0x1);
        gbc.writeMem(0x5501, { 0x36, 0x6b });
        gbc.writeMem(0xe4d7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xebc0);
        EXPECT(gbc.pc(), 0x5503);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4d7), 0x6b);
        // 36 0255
        gbc.setState(0xc7dd, 0xdbf0, 0xfd90, 0xce21, 0xd653, 0x8e89, 0x0, 0x1);
        gbc.writeMem(0x8e89, { 0x0 });
        gbc.writeMem(0xc7dd, { 0x36, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xdbf0);
        EXPECT(gbc.pc(), 0xc7df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e89), 0xf7);
        EXPECT(gbc.readMem(0xc7dd), 0x36);
        EXPECT(gbc.readMem(0xc7de), 0xf7);
        // 36 0257
        gbc.setState(0x5225, 0x290e, 0x8f80, 0x6cf8, 0x123e, 0xcf80, 0x1, 0x0);
        gbc.writeMem(0x5225, { 0x36, 0xcd });
        gbc.writeMem(0xcf80, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x290e);
        EXPECT(gbc.pc(), 0x5227);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf80), 0xcd);
        // 36 0258
        gbc.setState(0xeef9, 0x1491, 0xeb50, 0x955a, 0x6d92, 0xde0b, 0x1, 0x1);
        gbc.writeMem(0xde0b, { 0x0 });
        gbc.writeMem(0xeef9, { 0x36, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x1491);
        EXPECT(gbc.pc(), 0xeefb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde0b), 0xdb);
        EXPECT(gbc.readMem(0xeef9), 0x36);
        EXPECT(gbc.readMem(0xeefa), 0xdb);
        // 36 0259
        gbc.setState(0x9846, 0x14cc, 0x5050, 0xb6fd, 0xcb82, 0xb083, 0x1, 0x0);
        gbc.writeMem(0x9846, { 0x36, 0xb2 });
        gbc.writeMem(0xb083, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x14cc);
        EXPECT(gbc.pc(), 0x9848);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9846), 0x36);
        EXPECT(gbc.readMem(0x9847), 0xb2);
        EXPECT(gbc.readMem(0xb083), 0xb2);
        // 36 025F
        gbc.setState(0xaa43, 0x643c, 0xd1b0, 0xc5c0, 0x38f4, 0xc7b2, 0x1, 0x0);
        gbc.writeMem(0xaa43, { 0x36, 0xe3 });
        gbc.writeMem(0xc7b2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x643c);
        EXPECT(gbc.pc(), 0xaa45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa43), 0x36);
        EXPECT(gbc.readMem(0xaa44), 0xe3);
        EXPECT(gbc.readMem(0xc7b2), 0xe3);
        // 36 0260
        gbc.setState(0x7239, 0x38a2, 0x34a0, 0xc7e, 0x7a57, 0xb50c, 0x0, 0x0);
        gbc.writeMem(0x7239, { 0x36, 0x87 });
        gbc.writeMem(0xb50c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x38a2);
        EXPECT(gbc.pc(), 0x723b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb50c), 0x87);
        // 36 0261
        gbc.setState(0x12fe, 0x3f4a, 0xd20, 0xa478, 0xfc59, 0xb567, 0x1, 0x0);
        gbc.writeMem(0x12fe, { 0x36, 0x37 });
        gbc.writeMem(0xb567, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x3f4a);
        EXPECT(gbc.pc(), 0x1300);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb567), 0x37);
        // 36 0262
        gbc.setState(0x1c19, 0x6617, 0x6550, 0xf067, 0xbff7, 0xac52, 0x1, 0x1);
        gbc.writeMem(0x1c19, { 0x36, 0x5e });
        gbc.writeMem(0xac52, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x6617);
        EXPECT(gbc.pc(), 0x1c1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac52), 0x5e);
        // 36 0265
        gbc.setState(0xa494, 0xc608, 0xc040, 0x893b, 0x607c, 0x8bc8, 0x0, 0x0);
        gbc.writeMem(0x8bc8, { 0x0 });
        gbc.writeMem(0xa494, { 0x36, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc608);
        EXPECT(gbc.pc(), 0xa496);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bc8), 0x5a);
        EXPECT(gbc.readMem(0xa494), 0x36);
        EXPECT(gbc.readMem(0xa495), 0x5a);
        // 36 0266
        gbc.setState(0x6ba1, 0x2744, 0x76b0, 0xeae3, 0xbcac, 0x8394, 0x0, 0x1);
        gbc.writeMem(0x6ba1, { 0x36, 0x8a });
        gbc.writeMem(0x8394, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2744);
        EXPECT(gbc.pc(), 0x6ba3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8394), 0x8a);
        // 36 0267
        gbc.setState(0x94fb, 0x7505, 0x8e50, 0xb571, 0x43f9, 0xdeae, 0x1, 0x1);
        gbc.writeMem(0x94fb, { 0x36, 0x18 });
        gbc.writeMem(0xdeae, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x7505);
        EXPECT(gbc.pc(), 0x94fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94fb), 0x36);
        EXPECT(gbc.readMem(0x94fc), 0x18);
        EXPECT(gbc.readMem(0xdeae), 0x18);
        // 36 026D
        gbc.setState(0xd3a5, 0x7dea, 0x46f0, 0x2c16, 0x8025, 0xb3ea, 0x1, 0x1);
        gbc.writeMem(0xb3ea, { 0x0 });
        gbc.writeMem(0xd3a5, { 0x36, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x7dea);
        EXPECT(gbc.pc(), 0xd3a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3ea), 0xf7);
        EXPECT(gbc.readMem(0xd3a5), 0x36);
        EXPECT(gbc.readMem(0xd3a6), 0xf7);
        // 36 0273
        gbc.setState(0x3f93, 0x7333, 0x6540, 0x20dd, 0xa2b, 0xd948, 0x1, 0x1);
        gbc.writeMem(0x3f93, { 0x36, 0xd6 });
        gbc.writeMem(0xd948, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x7333);
        EXPECT(gbc.pc(), 0x3f95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd948), 0xd6);
        // 36 0274
        gbc.setState(0xbebb, 0x9c91, 0xde60, 0x514c, 0x70ec, 0x8c9a, 0x0, 0x1);
        gbc.writeMem(0x8c9a, { 0x0 });
        gbc.writeMem(0xbebb, { 0x36, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9c91);
        EXPECT(gbc.pc(), 0xbebd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c9a), 0xda);
        EXPECT(gbc.readMem(0xbebb), 0x36);
        EXPECT(gbc.readMem(0xbebc), 0xda);
        // 36 0275
        gbc.setState(0x3e81, 0xd3ee, 0x4440, 0x9748, 0x4109, 0x94c7, 0x1, 0x0);
        gbc.writeMem(0x3e81, { 0x36, 0xdb });
        gbc.writeMem(0x94c7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xd3ee);
        EXPECT(gbc.pc(), 0x3e83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94c7), 0xdb);
        // 36 0277
        gbc.setState(0x78d0, 0x2848, 0x1180, 0xd9fc, 0xc80f, 0x93bb, 0x1, 0x0);
        gbc.writeMem(0x78d0, { 0x36, 0xb0 });
        gbc.writeMem(0x93bb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x2848);
        EXPECT(gbc.pc(), 0x78d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93bb), 0xb0);
        // 36 0279
        gbc.setState(0x82ee, 0x52b0, 0xa190, 0xce27, 0x5a82, 0x836a, 0x1, 0x0);
        gbc.writeMem(0x82ee, { 0x36, 0xeb });
        gbc.writeMem(0x836a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x52b0);
        EXPECT(gbc.pc(), 0x82f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82ee), 0x36);
        EXPECT(gbc.readMem(0x82ef), 0xeb);
        EXPECT(gbc.readMem(0x836a), 0xeb);
        // 36 0283
        gbc.setState(0xa969, 0xc7e0, 0xe830, 0xa244, 0x19c8, 0xc1be, 0x0, 0x1);
        gbc.writeMem(0xa969, { 0x36, 0xc0 });
        gbc.writeMem(0xc1be, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xc7e0);
        EXPECT(gbc.pc(), 0xa96b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa969), 0x36);
        EXPECT(gbc.readMem(0xa96a), 0xc0);
        EXPECT(gbc.readMem(0xc1be), 0xc0);
        // 36 0285
        gbc.setState(0x72c0, 0xaec2, 0xaea0, 0xcc06, 0x642b, 0xd3a0, 0x0, 0x1);
        gbc.writeMem(0x72c0, { 0x36, 0x55 });
        gbc.writeMem(0xd3a0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xaec2);
        EXPECT(gbc.pc(), 0x72c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3a0), 0x55);
        // 36 0286
        gbc.setState(0x316c, 0xda85, 0xfb10, 0x4625, 0x1a7a, 0xc7ad, 0x1, 0x0);
        gbc.writeMem(0x316c, { 0x36, 0xbf });
        gbc.writeMem(0xc7ad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xda85);
        EXPECT(gbc.pc(), 0x316e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7ad), 0xbf);
        // 36 0287
        gbc.setState(0xdf19, 0x678d, 0xbd10, 0x12c1, 0x1ecf, 0xd198, 0x0, 0x1);
        gbc.writeMem(0xd198, { 0x0 });
        gbc.writeMem(0xdf19, { 0x36, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x678d);
        EXPECT(gbc.pc(), 0xdf1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd198), 0xf5);
        EXPECT(gbc.readMem(0xdf19), 0x36);
        EXPECT(gbc.readMem(0xdf1a), 0xf5);
        // 36 0289
        gbc.setState(0x8263, 0x8f80, 0x2180, 0x861d, 0x8fa6, 0xa081, 0x1, 0x1);
        gbc.writeMem(0x8263, { 0x36, 0x83 });
        gbc.writeMem(0xa081, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x8f80);
        EXPECT(gbc.pc(), 0x8265);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8263), 0x36);
        EXPECT(gbc.readMem(0x8264), 0x83);
        EXPECT(gbc.readMem(0xa081), 0x83);
        // 36 028D
        gbc.setState(0xc3de, 0x6640, 0xe740, 0x3037, 0x7d3d, 0xd390, 0x0, 0x1);
        gbc.writeMem(0xc3de, { 0x36, 0x27 });
        gbc.writeMem(0xd390, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x6640);
        EXPECT(gbc.pc(), 0xc3e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3de), 0x36);
        EXPECT(gbc.readMem(0xc3df), 0x27);
        EXPECT(gbc.readMem(0xd390), 0x27);
        // 36 028E
        gbc.setState(0xe9bd, 0x1973, 0x7ba0, 0xce4a, 0x2329, 0xe266, 0x0, 0x0);
        gbc.writeMem(0xe266, { 0x0 });
        gbc.writeMem(0xe9bd, { 0x36, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x1973);
        EXPECT(gbc.pc(), 0xe9bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe266), 0x3f);
        EXPECT(gbc.readMem(0xe9bd), 0x36);
        EXPECT(gbc.readMem(0xe9be), 0x3f);
        // 36 0298
        gbc.setState(0x2fdc, 0x25a2, 0xf5c0, 0xe418, 0x450c, 0xafc0, 0x1, 0x1);
        gbc.writeMem(0x2fdc, { 0x36, 0x62 });
        gbc.writeMem(0xafc0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x25a2);
        EXPECT(gbc.pc(), 0x2fde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafc0), 0x62);
        // 36 0299
        gbc.setState(0xb6eb, 0x12a7, 0x20a0, 0xf1eb, 0xae74, 0xcfd1, 0x0, 0x0);
        gbc.writeMem(0xb6eb, { 0x36, 0x54 });
        gbc.writeMem(0xcfd1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x12a7);
        EXPECT(gbc.pc(), 0xb6ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6eb), 0x36);
        EXPECT(gbc.readMem(0xb6ec), 0x54);
        EXPECT(gbc.readMem(0xcfd1), 0x54);
        // 36 029A
        gbc.setState(0xb57b, 0xcc44, 0xa540, 0x97e5, 0x6987, 0xe703, 0x0, 0x1);
        gbc.writeMem(0xb57b, { 0x36, 0xa6 });
        gbc.writeMem(0xe703, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xcc44);
        EXPECT(gbc.pc(), 0xb57d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb57b), 0x36);
        EXPECT(gbc.readMem(0xb57c), 0xa6);
        EXPECT(gbc.readMem(0xe703), 0xa6);
        // 36 029C
        gbc.setState(0x913f, 0xc7e, 0xac00, 0xeb8, 0x5f07, 0xee46, 0x1, 0x1);
        gbc.writeMem(0x913f, { 0x36, 0x16 });
        gbc.writeMem(0xee46, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc7e);
        EXPECT(gbc.pc(), 0x9141);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x913f), 0x36);
        EXPECT(gbc.readMem(0x9140), 0x16);
        EXPECT(gbc.readMem(0xee46), 0x16);
        // 36 02AB
        gbc.setState(0xd3ed, 0x2340, 0xa770, 0x8315, 0xa037, 0xdcd8, 0x0, 0x0);
        gbc.writeMem(0xd3ed, { 0x36, 0xe0 });
        gbc.writeMem(0xdcd8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x2340);
        EXPECT(gbc.pc(), 0xd3ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3ed), 0x36);
        EXPECT(gbc.readMem(0xd3ee), 0xe0);
        EXPECT(gbc.readMem(0xdcd8), 0xe0);
        // 36 02AC
        gbc.setState(0xd27a, 0x19b5, 0x8600, 0x8fed, 0xef5b, 0x8748, 0x0, 0x0);
        gbc.writeMem(0x8748, { 0x0 });
        gbc.writeMem(0xd27a, { 0x36, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x19b5);
        EXPECT(gbc.pc(), 0xd27c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8748), 0x5e);
        EXPECT(gbc.readMem(0xd27a), 0x36);
        EXPECT(gbc.readMem(0xd27b), 0x5e);
        // 36 02AD
        gbc.setState(0xd37a, 0x903e, 0xea80, 0x84de, 0x1050, 0xbee4, 0x1, 0x0);
        gbc.writeMem(0xbee4, { 0x0 });
        gbc.writeMem(0xd37a, { 0x36, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x903e);
        EXPECT(gbc.pc(), 0xd37c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbee4), 0xb2);
        EXPECT(gbc.readMem(0xd37a), 0x36);
        EXPECT(gbc.readMem(0xd37b), 0xb2);
        // 36 02AF
        gbc.setState(0x9680, 0xc694, 0x9030, 0x3237, 0x1d60, 0x8205, 0x1, 0x1);
        gbc.writeMem(0x8205, { 0x0 });
        gbc.writeMem(0x9680, { 0x36, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xc694);
        EXPECT(gbc.pc(), 0x9682);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8205), 0x5);
        EXPECT(gbc.readMem(0x9680), 0x36);
        EXPECT(gbc.readMem(0x9681), 0x5);
        // 36 02B1
        gbc.setState(0x6bfb, 0xfb9a, 0x9a70, 0x3853, 0xfbdb, 0xc19d, 0x1, 0x1);
        gbc.writeMem(0x6bfb, { 0x36, 0xb8 });
        gbc.writeMem(0xc19d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xfb9a);
        EXPECT(gbc.pc(), 0x6bfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc19d), 0xb8);
        // 36 02B2
        gbc.setState(0x1d2b, 0x63c0, 0xc910, 0x4812, 0xecc4, 0xccbd, 0x0, 0x1);
        gbc.writeMem(0x1d2b, { 0x36, 0xff });
        gbc.writeMem(0xccbd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x63c0);
        EXPECT(gbc.pc(), 0x1d2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccbd), 0xff);
        // 36 02B3
        gbc.setState(0xee5a, 0x38f5, 0xc890, 0x7393, 0xaebf, 0x9fcf, 0x0, 0x0);
        gbc.writeMem(0x9fcf, { 0x0 });
        gbc.writeMem(0xee5a, { 0x36, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x38f5);
        EXPECT(gbc.pc(), 0xee5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fcf), 0x9f);
        EXPECT(gbc.readMem(0xee5a), 0x36);
        EXPECT(gbc.readMem(0xee5b), 0x9f);
        // 36 02B5
        gbc.setState(0x291c, 0xaf3a, 0x3ba0, 0x9d85, 0xb873, 0xc034, 0x1, 0x0);
        gbc.writeMem(0x291c, { 0x36, 0xf1 });
        gbc.writeMem(0xc034, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xaf3a);
        EXPECT(gbc.pc(), 0x291e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc034), 0xf1);
        // 36 02B9
        gbc.setState(0xe8fb, 0x703, 0xda0, 0xfa88, 0xa8ba, 0xeeb0, 0x1, 0x0);
        gbc.writeMem(0xe8fb, { 0x36, 0xe9 });
        gbc.writeMem(0xeeb0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x703);
        EXPECT(gbc.pc(), 0xe8fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8fb), 0x36);
        EXPECT(gbc.readMem(0xe8fc), 0xe9);
        EXPECT(gbc.readMem(0xeeb0), 0xe9);
        // 36 02BC
        gbc.setState(0x2ae5, 0x8206, 0x6f70, 0x43fb, 0xa1a8, 0xc52b, 0x1, 0x1);
        gbc.writeMem(0x2ae5, { 0x36, 0xf0 });
        gbc.writeMem(0xc52b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x8206);
        EXPECT(gbc.pc(), 0x2ae7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc52b), 0xf0);
        // 36 02BD
        gbc.setState(0xacc1, 0xdad, 0xb2f0, 0xe914, 0x673c, 0xefdb, 0x0, 0x1);
        gbc.writeMem(0xacc1, { 0x36, 0xdb });
        gbc.writeMem(0xefdb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xdad);
        EXPECT(gbc.pc(), 0xacc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacc1), 0x36);
        EXPECT(gbc.readMem(0xacc2), 0xdb);
        EXPECT(gbc.readMem(0xefdb), 0xdb);
        // 36 02BE
        gbc.setState(0x653e, 0x3a17, 0x55a0, 0xd283, 0xd225, 0xc71b, 0x0, 0x0);
        gbc.writeMem(0x653e, { 0x36, 0x58 });
        gbc.writeMem(0xc71b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x3a17);
        EXPECT(gbc.pc(), 0x6540);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc71b), 0x58);
        // 36 02BF
        gbc.setState(0xd3b4, 0x75c6, 0x2650, 0xb6d5, 0x3c9d, 0xde13, 0x1, 0x1);
        gbc.writeMem(0xd3b4, { 0x36, 0x27 });
        gbc.writeMem(0xde13, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x75c6);
        EXPECT(gbc.pc(), 0xd3b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3b4), 0x36);
        EXPECT(gbc.readMem(0xd3b5), 0x27);
        EXPECT(gbc.readMem(0xde13), 0x27);
        // 36 02C0
        gbc.setState(0x7fca, 0x1aef, 0xff30, 0x33e8, 0x6235, 0xa4d7, 0x0, 0x1);
        gbc.writeMem(0x7fca, { 0x36, 0xac });
        gbc.writeMem(0xa4d7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x1aef);
        EXPECT(gbc.pc(), 0x7fcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4d7), 0xac);
        // 36 02C1
        gbc.setState(0x137d, 0x911c, 0xb020, 0xb88a, 0xba65, 0xb08c, 0x0, 0x1);
        gbc.writeMem(0x137d, { 0x36, 0xeb });
        gbc.writeMem(0xb08c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x911c);
        EXPECT(gbc.pc(), 0x137f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb08c), 0xeb);
        // 36 02C2
        gbc.setState(0xd0c0, 0x6689, 0x3ad0, 0x85eb, 0x6f65, 0x96a8, 0x0, 0x1);
        gbc.writeMem(0x96a8, { 0x0 });
        gbc.writeMem(0xd0c0, { 0x36, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x6689);
        EXPECT(gbc.pc(), 0xd0c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96a8), 0x88);
        EXPECT(gbc.readMem(0xd0c0), 0x36);
        EXPECT(gbc.readMem(0xd0c1), 0x88);
        // 36 02C3
        gbc.setState(0xd574, 0x16b7, 0xc00, 0x6d77, 0x9574, 0xe7fc, 0x0, 0x0);
        gbc.writeMem(0xd574, { 0x36, 0x49 });
        gbc.writeMem(0xe7fc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x16b7);
        EXPECT(gbc.pc(), 0xd576);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd574), 0x36);
        EXPECT(gbc.readMem(0xd575), 0x49);
        EXPECT(gbc.readMem(0xe7fc), 0x49);
        // 36 02C7
        gbc.setState(0x78cd, 0xec29, 0x7270, 0x8ef3, 0xfc9b, 0xca64, 0x1, 0x0);
        gbc.writeMem(0x78cd, { 0x36, 0xec });
        gbc.writeMem(0xca64, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xec29);
        EXPECT(gbc.pc(), 0x78cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca64), 0xec);
        // 36 02CA
        gbc.setState(0x7e54, 0xd72, 0x8970, 0xad1e, 0xd878, 0xd8c7, 0x0, 0x0);
        gbc.writeMem(0x7e54, { 0x36, 0x2b });
        gbc.writeMem(0xd8c7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xd72);
        EXPECT(gbc.pc(), 0x7e56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8c7), 0x2b);
        // 36 02CC
        gbc.setState(0x45c, 0xe12b, 0x7ec0, 0x5789, 0x8cad, 0xff9f, 0x0, 0x0);
        gbc.writeMem(0x45c, { 0x36, 0xa5 });
        gbc.writeMem(0xff9f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xe12b);
        EXPECT(gbc.pc(), 0x45e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff9f), 0xa5);
        // 36 02CF
        gbc.setState(0x152a, 0x9427, 0x460, 0xa2eb, 0xcb9e, 0xc25a, 0x0, 0x1);
        gbc.writeMem(0x152a, { 0x36, 0x2d });
        gbc.writeMem(0xc25a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x9427);
        EXPECT(gbc.pc(), 0x152c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc25a), 0x2d);
        // 36 02D1
        gbc.setState(0xc146, 0xd420, 0x7060, 0xa297, 0x3f32, 0xf892, 0x1, 0x0);
        gbc.writeMem(0xc146, { 0x36, 0x65 });
        gbc.writeMem(0xf892, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xd420);
        EXPECT(gbc.pc(), 0xc148);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc146), 0x36);
        EXPECT(gbc.readMem(0xc147), 0x65);
        EXPECT(gbc.readMem(0xf892), 0x65);
        // 36 02D2
        gbc.setState(0x94a8, 0xed0a, 0x5c80, 0x81d6, 0xb08c, 0xa3bb, 0x1, 0x0);
        gbc.writeMem(0x94a8, { 0x36, 0xc1 });
        gbc.writeMem(0xa3bb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xed0a);
        EXPECT(gbc.pc(), 0x94aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94a8), 0x36);
        EXPECT(gbc.readMem(0x94a9), 0xc1);
        EXPECT(gbc.readMem(0xa3bb), 0xc1);
        // 36 02D3
        gbc.setState(0xb90d, 0x448b, 0x28d0, 0x912b, 0xbc67, 0xf677, 0x0, 0x1);
        gbc.writeMem(0xb90d, { 0x36, 0x6d });
        gbc.writeMem(0xf677, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x448b);
        EXPECT(gbc.pc(), 0xb90f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb90d), 0x36);
        EXPECT(gbc.readMem(0xb90e), 0x6d);
        EXPECT(gbc.readMem(0xf677), 0x6d);
        // 36 02D6
        gbc.setState(0xe028, 0xc56a, 0xaaf0, 0xf792, 0xd673, 0xfd7d, 0x0, 0x0);
        gbc.writeMem(0xe028, { 0x36, 0x2c });
        gbc.writeMem(0xfd7d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xc56a);
        EXPECT(gbc.pc(), 0xe02a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe028), 0x36);
        EXPECT(gbc.readMem(0xe029), 0x2c);
        EXPECT(gbc.readMem(0xfd7d), 0x2c);
        // 36 02D7
        gbc.setState(0x552e, 0xd862, 0x6820, 0x598c, 0xf2a1, 0x9673, 0x0, 0x0);
        gbc.writeMem(0x552e, { 0x36, 0xa2 });
        gbc.writeMem(0x9673, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd862);
        EXPECT(gbc.pc(), 0x5530);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9673), 0xa2);
        // 36 02D8
        gbc.setState(0xe23b, 0x78fa, 0xdb10, 0x1627, 0xcf19, 0x9d80, 0x1, 0x1);
        gbc.writeMem(0x9d80, { 0x0 });
        gbc.writeMem(0xe23b, { 0x36, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x78fa);
        EXPECT(gbc.pc(), 0xe23d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d80), 0x84);
        EXPECT(gbc.readMem(0xe23b), 0x36);
        EXPECT(gbc.readMem(0xe23c), 0x84);
        // 36 02DC
        gbc.setState(0x7866, 0xd80f, 0xad70, 0x475e, 0x8d9b, 0x8eac, 0x0, 0x0);
        gbc.writeMem(0x7866, { 0x36, 0x67 });
        gbc.writeMem(0x8eac, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xd80f);
        EXPECT(gbc.pc(), 0x7868);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eac), 0x67);
        // 36 02DE
        gbc.setState(0x8071, 0x9a4, 0xf6e0, 0x4fee, 0x6846, 0xbb83, 0x1, 0x1);
        gbc.writeMem(0x8071, { 0x36, 0xfb });
        gbc.writeMem(0xbb83, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x9a4);
        EXPECT(gbc.pc(), 0x8073);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8071), 0x36);
        EXPECT(gbc.readMem(0x8072), 0xfb);
        EXPECT(gbc.readMem(0xbb83), 0xfb);
        // 36 02E1
        gbc.setState(0x86e2, 0xb5e2, 0xaae0, 0xa484, 0x9c60, 0xaa2e, 0x1, 0x1);
        gbc.writeMem(0x86e2, { 0x36, 0xef });
        gbc.writeMem(0xaa2e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xb5e2);
        EXPECT(gbc.pc(), 0x86e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86e2), 0x36);
        EXPECT(gbc.readMem(0x86e3), 0xef);
        EXPECT(gbc.readMem(0xaa2e), 0xef);
        // 36 02E5
        gbc.setState(0x4c41, 0x2cf4, 0x8460, 0x6d69, 0x8e8d, 0xcc87, 0x1, 0x1);
        gbc.writeMem(0x4c41, { 0x36, 0x6f });
        gbc.writeMem(0xcc87, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x2cf4);
        EXPECT(gbc.pc(), 0x4c43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc87), 0x6f);
        // 36 02E7
        gbc.setState(0x185d, 0x2c07, 0xc2e0, 0x39e6, 0x80ea, 0xfc5d, 0x0, 0x1);
        gbc.writeMem(0x185d, { 0x36, 0x78 });
        gbc.writeMem(0xfc5d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x2c07);
        EXPECT(gbc.pc(), 0x185f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfc5d), 0x78);
        // 36 02E8
        gbc.setState(0x4710, 0xbe7a, 0x4320, 0xbff, 0x3482, 0xd0c7, 0x0, 0x1);
        gbc.writeMem(0x4710, { 0x36, 0x2e });
        gbc.writeMem(0xd0c7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xbe7a);
        EXPECT(gbc.pc(), 0x4712);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0c7), 0x2e);
        // 36 02EF
        gbc.setState(0xd417, 0x7d07, 0xac90, 0x6e90, 0x88f2, 0x8b10, 0x1, 0x0);
        gbc.writeMem(0x8b10, { 0x0 });
        gbc.writeMem(0xd417, { 0x36, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x7d07);
        EXPECT(gbc.pc(), 0xd419);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b10), 0x9c);
        EXPECT(gbc.readMem(0xd417), 0x36);
        EXPECT(gbc.readMem(0xd418), 0x9c);
        // 36 02F2
        gbc.setState(0xb62f, 0x7043, 0x2b50, 0x962d, 0xf08a, 0xa58b, 0x1, 0x0);
        gbc.writeMem(0xa58b, { 0x0 });
        gbc.writeMem(0xb62f, { 0x36, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x7043);
        EXPECT(gbc.pc(), 0xb631);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa58b), 0x1b);
        EXPECT(gbc.readMem(0xb62f), 0x36);
        EXPECT(gbc.readMem(0xb630), 0x1b);
        // 36 02F3
        gbc.setState(0xe7d0, 0x8842, 0x8a70, 0x28f6, 0x9953, 0xcf58, 0x0, 0x1);
        gbc.writeMem(0xcf58, { 0x0 });
        gbc.writeMem(0xe7d0, { 0x36, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x8842);
        EXPECT(gbc.pc(), 0xe7d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf58), 0x46);
        EXPECT(gbc.readMem(0xe7d0), 0x36);
        EXPECT(gbc.readMem(0xe7d1), 0x46);
        // 36 02F6
        gbc.setState(0x4b26, 0xaea4, 0x2610, 0x4356, 0x5bb7, 0xccb1, 0x0, 0x1);
        gbc.writeMem(0x4b26, { 0x36, 0xef });
        gbc.writeMem(0xccb1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xaea4);
        EXPECT(gbc.pc(), 0x4b28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccb1), 0xef);
        // 36 02F9
        gbc.setState(0x84ea, 0xc736, 0xba80, 0x1ba3, 0x7c95, 0x84d4, 0x1, 0x0);
        gbc.writeMem(0x84d4, { 0x0 });
        gbc.writeMem(0x84ea, { 0x36, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xc736);
        EXPECT(gbc.pc(), 0x84ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84d4), 0x6d);
        EXPECT(gbc.readMem(0x84ea), 0x36);
        EXPECT(gbc.readMem(0x84eb), 0x6d);
        // 36 02FA
        gbc.setState(0x5e5c, 0x23c6, 0xf0f0, 0x121, 0xb3e1, 0xc5b4, 0x1, 0x1);
        gbc.writeMem(0x5e5c, { 0x36, 0xc3 });
        gbc.writeMem(0xc5b4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x23c6);
        EXPECT(gbc.pc(), 0x5e5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5b4), 0xc3);
        // 36 02FC
        gbc.setState(0x173a, 0x1b5f, 0xac0, 0x7b43, 0xf334, 0x9d4e, 0x0, 0x0);
        gbc.writeMem(0x173a, { 0x36, 0xbe });
        gbc.writeMem(0x9d4e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x1b5f);
        EXPECT(gbc.pc(), 0x173c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d4e), 0xbe);
        // 36 02FE
        gbc.setState(0xe493, 0xf9e0, 0x84f0, 0xc80, 0xae45, 0x9d5c, 0x0, 0x0);
        gbc.writeMem(0x9d5c, { 0x0 });
        gbc.writeMem(0xe493, { 0x36, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xf9e0);
        EXPECT(gbc.pc(), 0xe495);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d5c), 0x4);
        EXPECT(gbc.readMem(0xe493), 0x36);
        EXPECT(gbc.readMem(0xe494), 0x4);
        // 36 0300
        gbc.setState(0xffc, 0xa01f, 0xe940, 0x16e1, 0x4970, 0xf543, 0x0, 0x1);
        gbc.writeMem(0xffc, { 0x36, 0x5 });
        gbc.writeMem(0xf543, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa01f);
        EXPECT(gbc.pc(), 0xffe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf543), 0x5);
        // 36 0301
        gbc.setState(0xa17d, 0x3341, 0xd600, 0xeeea, 0x53ee, 0xf527, 0x1, 0x0);
        gbc.writeMem(0xa17d, { 0x36, 0x19 });
        gbc.writeMem(0xf527, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3341);
        EXPECT(gbc.pc(), 0xa17f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa17d), 0x36);
        EXPECT(gbc.readMem(0xa17e), 0x19);
        EXPECT(gbc.readMem(0xf527), 0x19);
        // 36 0302
        gbc.setState(0xd73, 0xfb02, 0xa960, 0xe554, 0xf186, 0x8a59, 0x1, 0x0);
        gbc.writeMem(0xd73, { 0x36, 0xa7 });
        gbc.writeMem(0x8a59, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xfb02);
        EXPECT(gbc.pc(), 0xd75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a59), 0xa7);
        // 36 0304
        gbc.setState(0x719e, 0xac33, 0x4ea0, 0xfb76, 0x5ab5, 0x869f, 0x0, 0x0);
        gbc.writeMem(0x719e, { 0x36, 0x51 });
        gbc.writeMem(0x869f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xac33);
        EXPECT(gbc.pc(), 0x71a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x869f), 0x51);
        // 36 0308
        gbc.setState(0xc8f3, 0x61f3, 0xe0a0, 0xd90c, 0x89cd, 0xbc72, 0x1, 0x1);
        gbc.writeMem(0xbc72, { 0x0 });
        gbc.writeMem(0xc8f3, { 0x36, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x61f3);
        EXPECT(gbc.pc(), 0xc8f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc72), 0xeb);
        EXPECT(gbc.readMem(0xc8f3), 0x36);
        EXPECT(gbc.readMem(0xc8f4), 0xeb);
        // 36 030A
        gbc.setState(0xe3ef, 0x1358, 0x93b0, 0x8f94, 0x4bb1, 0x86fd, 0x1, 0x0);
        gbc.writeMem(0x86fd, { 0x0 });
        gbc.writeMem(0xe3ef, { 0x36, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1358);
        EXPECT(gbc.pc(), 0xe3f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86fd), 0x65);
        EXPECT(gbc.readMem(0xe3ef), 0x36);
        EXPECT(gbc.readMem(0xe3f0), 0x65);
        // 36 030D
        gbc.setState(0xb48f, 0x18df, 0xa10, 0x1e2c, 0x30c4, 0xa50f, 0x0, 0x1);
        gbc.writeMem(0xa50f, { 0x0 });
        gbc.writeMem(0xb48f, { 0x36, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x18df);
        EXPECT(gbc.pc(), 0xb491);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa50f), 0x8d);
        EXPECT(gbc.readMem(0xb48f), 0x36);
        EXPECT(gbc.readMem(0xb490), 0x8d);
        // 36 030E
        gbc.setState(0xdf7a, 0x43d2, 0x4ca0, 0xde8c, 0x1767, 0xa85d, 0x0, 0x1);
        gbc.writeMem(0xa85d, { 0x0 });
        gbc.writeMem(0xdf7a, { 0x36, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x43d2);
        EXPECT(gbc.pc(), 0xdf7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa85d), 0xed);
        EXPECT(gbc.readMem(0xdf7a), 0x36);
        EXPECT(gbc.readMem(0xdf7b), 0xed);
        // 36 030F
        gbc.setState(0xda6a, 0x1154, 0xd510, 0xd843, 0x884c, 0xaf0e, 0x0, 0x0);
        gbc.writeMem(0xaf0e, { 0x0 });
        gbc.writeMem(0xda6a, { 0x36, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x1154);
        EXPECT(gbc.pc(), 0xda6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf0e), 0x71);
        EXPECT(gbc.readMem(0xda6a), 0x36);
        EXPECT(gbc.readMem(0xda6b), 0x71);
        // 36 0310
        gbc.setState(0x978d, 0x8410, 0x35c0, 0x70e4, 0xa59c, 0x9989, 0x1, 0x0);
        gbc.writeMem(0x978d, { 0x36, 0x28 });
        gbc.writeMem(0x9989, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x8410);
        EXPECT(gbc.pc(), 0x978f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x978d), 0x36);
        EXPECT(gbc.readMem(0x978e), 0x28);
        EXPECT(gbc.readMem(0x9989), 0x28);
        // 36 0311
        gbc.setState(0x2676, 0x5832, 0x38b0, 0x8760, 0xa23e, 0xcfae, 0x1, 0x1);
        gbc.writeMem(0x2676, { 0x36, 0x78 });
        gbc.writeMem(0xcfae, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x5832);
        EXPECT(gbc.pc(), 0x2678);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfae), 0x78);
        // 36 0313
        gbc.setState(0x36e, 0x7186, 0x3020, 0x3292, 0x1ece, 0xa42a, 0x0, 0x0);
        gbc.writeMem(0x36e, { 0x36, 0x1a });
        gbc.writeMem(0xa42a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x7186);
        EXPECT(gbc.pc(), 0x370);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa42a), 0x1a);
        // 36 0314
        gbc.setState(0x70c9, 0xff5d, 0xc6a0, 0x828d, 0xe848, 0xefea, 0x1, 0x1);
        gbc.writeMem(0x70c9, { 0x36, 0xb7 });
        gbc.writeMem(0xefea, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xff5d);
        EXPECT(gbc.pc(), 0x70cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefea), 0xb7);
        // 36 0315
        gbc.setState(0x892d, 0x6827, 0xc800, 0xb56c, 0x5702, 0xee5d, 0x0, 0x0);
        gbc.writeMem(0x892d, { 0x36, 0x2a });
        gbc.writeMem(0xee5d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x6827);
        EXPECT(gbc.pc(), 0x892f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x892d), 0x36);
        EXPECT(gbc.readMem(0x892e), 0x2a);
        EXPECT(gbc.readMem(0xee5d), 0x2a);
        // 36 031A
        gbc.setState(0xeb23, 0x31a3, 0xe460, 0x908f, 0x3948, 0xa2c4, 0x1, 0x1);
        gbc.writeMem(0xa2c4, { 0x0 });
        gbc.writeMem(0xeb23, { 0x36, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x31a3);
        EXPECT(gbc.pc(), 0xeb25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2c4), 0xe2);
        EXPECT(gbc.readMem(0xeb23), 0x36);
        EXPECT(gbc.readMem(0xeb24), 0xe2);
        // 36 031D
        gbc.setState(0x23fb, 0xc5f5, 0x4960, 0xd202, 0xdcbb, 0x872d, 0x1, 0x1);
        gbc.writeMem(0x23fb, { 0x36, 0x20 });
        gbc.writeMem(0x872d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xc5f5);
        EXPECT(gbc.pc(), 0x23fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x872d), 0x20);
        // 36 031E
        gbc.setState(0x65ae, 0x8fbd, 0x2460, 0x9cce, 0x2913, 0xf513, 0x1, 0x1);
        gbc.writeMem(0x65ae, { 0x36, 0x20 });
        gbc.writeMem(0xf513, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x8fbd);
        EXPECT(gbc.pc(), 0x65b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf513), 0x20);
        // 36 0320
        gbc.setState(0x6d56, 0x407a, 0x6290, 0xdcb5, 0xfce2, 0x8d71, 0x0, 0x0);
        gbc.writeMem(0x6d56, { 0x36, 0x34 });
        gbc.writeMem(0x8d71, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x407a);
        EXPECT(gbc.pc(), 0x6d58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d71), 0x34);
        // 36 0321
        gbc.setState(0x7707, 0xfc9f, 0xec80, 0x3a04, 0x96fe, 0x9f97, 0x0, 0x0);
        gbc.writeMem(0x7707, { 0x36, 0xfe });
        gbc.writeMem(0x9f97, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xfc9f);
        EXPECT(gbc.pc(), 0x7709);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f97), 0xfe);
        // 36 0322
        gbc.setState(0x197d, 0x38c7, 0xdc50, 0x6ad5, 0xc81c, 0xdbb0, 0x0, 0x0);
        gbc.writeMem(0x197d, { 0x36, 0xb8 });
        gbc.writeMem(0xdbb0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x38c7);
        EXPECT(gbc.pc(), 0x197f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbb0), 0xb8);
        // 36 0323
        gbc.setState(0x696a, 0xaf27, 0xca10, 0x2b5, 0x70d8, 0x8304, 0x1, 0x0);
        gbc.writeMem(0x696a, { 0x36, 0x87 });
        gbc.writeMem(0x8304, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xaf27);
        EXPECT(gbc.pc(), 0x696c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8304), 0x87);
        // 36 0324
        gbc.setState(0x8f7e, 0x9e48, 0x9720, 0x21d3, 0x2d75, 0xa710, 0x0, 0x1);
        gbc.writeMem(0x8f7e, { 0x36, 0x11 });
        gbc.writeMem(0xa710, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x9e48);
        EXPECT(gbc.pc(), 0x8f80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f7e), 0x36);
        EXPECT(gbc.readMem(0x8f7f), 0x11);
        EXPECT(gbc.readMem(0xa710), 0x11);
        // 36 0325
        gbc.setState(0x3c70, 0x19d7, 0x6d0, 0xac6b, 0x9f95, 0xb910, 0x1, 0x0);
        gbc.writeMem(0x3c70, { 0x36, 0xf2 });
        gbc.writeMem(0xb910, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x19d7);
        EXPECT(gbc.pc(), 0x3c72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb910), 0xf2);
        // 36 0327
        gbc.setState(0x9fb3, 0xa790, 0x85f0, 0x3cf5, 0xe928, 0xa5b9, 0x1, 0x1);
        gbc.writeMem(0x9fb3, { 0x36, 0x90 });
        gbc.writeMem(0xa5b9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xa790);
        EXPECT(gbc.pc(), 0x9fb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fb3), 0x36);
        EXPECT(gbc.readMem(0x9fb4), 0x90);
        EXPECT(gbc.readMem(0xa5b9), 0x90);
        // 36 032B
        gbc.setState(0x720d, 0xb6f5, 0x2880, 0xc086, 0xe494, 0x95f7, 0x0, 0x1);
        gbc.writeMem(0x720d, { 0x36, 0xa1 });
        gbc.writeMem(0x95f7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb6f5);
        EXPECT(gbc.pc(), 0x720f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95f7), 0xa1);
        // 36 032D
        gbc.setState(0x5af, 0x91e0, 0x6d40, 0x45e3, 0x115a, 0xbdb4, 0x1, 0x0);
        gbc.writeMem(0x5af, { 0x36, 0xd5 });
        gbc.writeMem(0xbdb4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x91e0);
        EXPECT(gbc.pc(), 0x5b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdb4), 0xd5);
        // 36 032E
        gbc.setState(0x7ba3, 0x8e32, 0x5b40, 0x7f95, 0xb18, 0xe245, 0x0, 0x0);
        gbc.writeMem(0x7ba3, { 0x36, 0xb6 });
        gbc.writeMem(0xe245, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x8e32);
        EXPECT(gbc.pc(), 0x7ba5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe245), 0xb6);
        // 36 0330
        gbc.setState(0xef39, 0xe3ed, 0xe360, 0xab7d, 0xa205, 0xe63f, 0x1, 0x0);
        gbc.writeMem(0xe63f, { 0x0 });
        gbc.writeMem(0xef39, { 0x36, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xe3ed);
        EXPECT(gbc.pc(), 0xef3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe63f), 0x25);
        EXPECT(gbc.readMem(0xef39), 0x36);
        EXPECT(gbc.readMem(0xef3a), 0x25);
        // 36 0331
        gbc.setState(0x3be2, 0xb517, 0xb1f0, 0xe1ec, 0x4a3e, 0x9696, 0x1, 0x0);
        gbc.writeMem(0x3be2, { 0x36, 0xc6 });
        gbc.writeMem(0x9696, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xb517);
        EXPECT(gbc.pc(), 0x3be4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9696), 0xc6);
        // 36 0332
        gbc.setState(0xcc5b, 0x8b9e, 0xf020, 0x696d, 0xc81c, 0xc0ff, 0x0, 0x0);
        gbc.writeMem(0xc0ff, { 0x0 });
        gbc.writeMem(0xcc5b, { 0x36, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x8b9e);
        EXPECT(gbc.pc(), 0xcc5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0ff), 0x21);
        EXPECT(gbc.readMem(0xcc5b), 0x36);
        EXPECT(gbc.readMem(0xcc5c), 0x21);
        // 36 033B
        gbc.setState(0x465d, 0xb8d4, 0x4b70, 0x7abb, 0x3913, 0x8c93, 0x1, 0x0);
        gbc.writeMem(0x465d, { 0x36, 0xac });
        gbc.writeMem(0x8c93, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb8d4);
        EXPECT(gbc.pc(), 0x465f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c93), 0xac);
        // 36 033D
        gbc.setState(0xba6a, 0xe136, 0xf8b0, 0xc51e, 0x630f, 0xfbc8, 0x0, 0x0);
        gbc.writeMem(0xba6a, { 0x36, 0x42 });
        gbc.writeMem(0xfbc8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xe136);
        EXPECT(gbc.pc(), 0xba6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba6a), 0x36);
        EXPECT(gbc.readMem(0xba6b), 0x42);
        EXPECT(gbc.readMem(0xfbc8), 0x42);
        // 36 0342
        gbc.setState(0xe1b0, 0x452b, 0x9f80, 0xea3e, 0x3bbf, 0xd597, 0x1, 0x1);
        gbc.writeMem(0xd597, { 0x0 });
        gbc.writeMem(0xe1b0, { 0x36, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x452b);
        EXPECT(gbc.pc(), 0xe1b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd597), 0x3c);
        EXPECT(gbc.readMem(0xe1b0), 0x36);
        EXPECT(gbc.readMem(0xe1b1), 0x3c);
        // 36 0345
        gbc.setState(0x68c6, 0x324e, 0xb2b0, 0x900c, 0xa0a1, 0xb209, 0x0, 0x0);
        gbc.writeMem(0x68c6, { 0x36, 0x59 });
        gbc.writeMem(0xb209, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x324e);
        EXPECT(gbc.pc(), 0x68c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb209), 0x59);
        // 36 0346
        gbc.setState(0x23dc, 0x39aa, 0x1d00, 0xb3a, 0xd241, 0xaf91, 0x1, 0x1);
        gbc.writeMem(0x23dc, { 0x36, 0x8a });
        gbc.writeMem(0xaf91, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x39aa);
        EXPECT(gbc.pc(), 0x23de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf91), 0x8a);
        // 36 0347
        gbc.setState(0x5087, 0x7f31, 0xe1b0, 0x68ef, 0xc645, 0xdd76, 0x0, 0x0);
        gbc.writeMem(0x5087, { 0x36, 0x12 });
        gbc.writeMem(0xdd76, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x7f31);
        EXPECT(gbc.pc(), 0x5089);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd76), 0x12);
        // 36 0349
        gbc.setState(0xd5a2, 0x23ad, 0xd380, 0x8e59, 0xa443, 0x8095, 0x1, 0x1);
        gbc.writeMem(0x8095, { 0x0 });
        gbc.writeMem(0xd5a2, { 0x36, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x23ad);
        EXPECT(gbc.pc(), 0xd5a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8095), 0x3b);
        EXPECT(gbc.readMem(0xd5a2), 0x36);
        EXPECT(gbc.readMem(0xd5a3), 0x3b);
        // 36 034A
        gbc.setState(0x88d0, 0x456, 0x4230, 0x4239, 0x9e5f, 0x920a, 0x1, 0x1);
        gbc.writeMem(0x88d0, { 0x36, 0xd4 });
        gbc.writeMem(0x920a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x456);
        EXPECT(gbc.pc(), 0x88d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88d0), 0x36);
        EXPECT(gbc.readMem(0x88d1), 0xd4);
        EXPECT(gbc.readMem(0x920a), 0xd4);
        // 36 034B
        gbc.setState(0x2a9e, 0xda66, 0xab90, 0x1cae, 0x68c5, 0xccd7, 0x0, 0x1);
        gbc.writeMem(0x2a9e, { 0x36, 0x2b });
        gbc.writeMem(0xccd7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xda66);
        EXPECT(gbc.pc(), 0x2aa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccd7), 0x2b);
        // 36 034C
        gbc.setState(0x9eaf, 0x2766, 0x1920, 0x3499, 0xe611, 0xb20d, 0x0, 0x1);
        gbc.writeMem(0x9eaf, { 0x36, 0xd3 });
        gbc.writeMem(0xb20d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x2766);
        EXPECT(gbc.pc(), 0x9eb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eaf), 0x36);
        EXPECT(gbc.readMem(0x9eb0), 0xd3);
        EXPECT(gbc.readMem(0xb20d), 0xd3);
        // 36 0352
        gbc.setState(0x1507, 0x89c3, 0xbb40, 0x276d, 0x9d8, 0xb7b5, 0x0, 0x1);
        gbc.writeMem(0x1507, { 0x36, 0xe1 });
        gbc.writeMem(0xb7b5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x89c3);
        EXPECT(gbc.pc(), 0x1509);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7b5), 0xe1);
        // 36 0353
        gbc.setState(0xa580, 0xfc6d, 0x80f0, 0x7464, 0x4901, 0xefd5, 0x1, 0x0);
        gbc.writeMem(0xa580, { 0x36, 0xa7 });
        gbc.writeMem(0xefd5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xfc6d);
        EXPECT(gbc.pc(), 0xa582);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa580), 0x36);
        EXPECT(gbc.readMem(0xa581), 0xa7);
        EXPECT(gbc.readMem(0xefd5), 0xa7);
        // 36 0355
        gbc.setState(0xe51f, 0x82ee, 0x2180, 0x16cf, 0x6720, 0xa5d0, 0x0, 0x0);
        gbc.writeMem(0xa5d0, { 0x0 });
        gbc.writeMem(0xe51f, { 0x36, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x82ee);
        EXPECT(gbc.pc(), 0xe521);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5d0), 0x1);
        EXPECT(gbc.readMem(0xe51f), 0x36);
        EXPECT(gbc.readMem(0xe520), 0x1);
        // 36 0359
        gbc.setState(0x5baa, 0x8e56, 0x5940, 0xdcdb, 0xedd6, 0xc083, 0x1, 0x1);
        gbc.writeMem(0x5baa, { 0x36, 0x38 });
        gbc.writeMem(0xc083, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x8e56);
        EXPECT(gbc.pc(), 0x5bac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc083), 0x38);
        // 36 035D
        gbc.setState(0xeebe, 0xdc53, 0xcfc0, 0xc84f, 0x3cb, 0xf2b1, 0x0, 0x0);
        gbc.writeMem(0xeebe, { 0x36, 0x94 });
        gbc.writeMem(0xf2b1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xdc53);
        EXPECT(gbc.pc(), 0xeec0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeebe), 0x36);
        EXPECT(gbc.readMem(0xeebf), 0x94);
        EXPECT(gbc.readMem(0xf2b1), 0x94);
        // 36 035E
        gbc.setState(0xb41d, 0x7119, 0xfec0, 0x8778, 0x934d, 0xbb37, 0x0, 0x0);
        gbc.writeMem(0xb41d, { 0x36, 0x78 });
        gbc.writeMem(0xbb37, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x7119);
        EXPECT(gbc.pc(), 0xb41f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb41d), 0x36);
        EXPECT(gbc.readMem(0xb41e), 0x78);
        EXPECT(gbc.readMem(0xbb37), 0x78);
        // 36 035F
        gbc.setState(0x1efe, 0x980b, 0x2320, 0xb4c, 0xd4e, 0xac82, 0x1, 0x1);
        gbc.writeMem(0x1efe, { 0x36, 0x8d });
        gbc.writeMem(0xac82, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x980b);
        EXPECT(gbc.pc(), 0x1f00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac82), 0x8d);
        // 36 0360
        gbc.setState(0x30ec, 0xcdfc, 0x3ad0, 0x4eb0, 0xf9c2, 0xf05e, 0x1, 0x1);
        gbc.writeMem(0x30ec, { 0x36, 0x9f });
        gbc.writeMem(0xf05e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xcdfc);
        EXPECT(gbc.pc(), 0x30ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf05e), 0x9f);
        // 36 0362
        gbc.setState(0xa223, 0x400, 0x68a0, 0x1200, 0xe9e3, 0xb4c6, 0x1, 0x1);
        gbc.writeMem(0xa223, { 0x36, 0xf1 });
        gbc.writeMem(0xb4c6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x400);
        EXPECT(gbc.pc(), 0xa225);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa223), 0x36);
        EXPECT(gbc.readMem(0xa224), 0xf1);
        EXPECT(gbc.readMem(0xb4c6), 0xf1);
        // 36 0366
        gbc.setState(0xb1dc, 0xc40c, 0x67b0, 0xd00f, 0x3440, 0x89b5, 0x1, 0x0);
        gbc.writeMem(0x89b5, { 0x0 });
        gbc.writeMem(0xb1dc, { 0x36, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xc40c);
        EXPECT(gbc.pc(), 0xb1de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89b5), 0x8b);
        EXPECT(gbc.readMem(0xb1dc), 0x36);
        EXPECT(gbc.readMem(0xb1dd), 0x8b);
        // 36 0369
        gbc.setState(0x7486, 0x1ac5, 0x9e10, 0x3dc0, 0x66fe, 0x90f5, 0x1, 0x1);
        gbc.writeMem(0x7486, { 0x36, 0x9f });
        gbc.writeMem(0x90f5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1ac5);
        EXPECT(gbc.pc(), 0x7488);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90f5), 0x9f);
        // 36 036A
        gbc.setState(0x70e3, 0x99a9, 0xeb70, 0x62dd, 0xcae7, 0xde07, 0x0, 0x1);
        gbc.writeMem(0x70e3, { 0x36, 0xad });
        gbc.writeMem(0xde07, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x99a9);
        EXPECT(gbc.pc(), 0x70e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde07), 0xad);
        // 36 036D
        gbc.setState(0xd439, 0xebd9, 0x13c0, 0xef8b, 0xa554, 0xd167, 0x1, 0x0);
        gbc.writeMem(0xd167, { 0x0 });
        gbc.writeMem(0xd439, { 0x36, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xebd9);
        EXPECT(gbc.pc(), 0xd43b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd167), 0xc6);
        EXPECT(gbc.readMem(0xd439), 0x36);
        EXPECT(gbc.readMem(0xd43a), 0xc6);
        // 36 036E
        gbc.setState(0x387e, 0x3b2c, 0xc860, 0xa2b2, 0x88e6, 0xce45, 0x0, 0x0);
        gbc.writeMem(0x387e, { 0x36, 0xf0 });
        gbc.writeMem(0xce45, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x3b2c);
        EXPECT(gbc.pc(), 0x3880);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce45), 0xf0);
        // 36 036F
        gbc.setState(0x208f, 0xf4e, 0x9d00, 0xdfde, 0xf9d5, 0x918c, 0x1, 0x1);
        gbc.writeMem(0x208f, { 0x36, 0xc2 });
        gbc.writeMem(0x918c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xf4e);
        EXPECT(gbc.pc(), 0x2091);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x918c), 0xc2);
        // 36 0370
        gbc.setState(0xdcd8, 0x722e, 0xee80, 0xfb9e, 0xf757, 0xbaa6, 0x0, 0x0);
        gbc.writeMem(0xbaa6, { 0x0 });
        gbc.writeMem(0xdcd8, { 0x36, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x722e);
        EXPECT(gbc.pc(), 0xdcda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaa6), 0xf0);
        EXPECT(gbc.readMem(0xdcd8), 0x36);
        EXPECT(gbc.readMem(0xdcd9), 0xf0);
        // 36 0372
        gbc.setState(0x4dcd, 0x34c, 0x69a0, 0xb73c, 0x1e0c, 0xa25a, 0x1, 0x1);
        gbc.writeMem(0x4dcd, { 0x36, 0xc2 });
        gbc.writeMem(0xa25a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x34c);
        EXPECT(gbc.pc(), 0x4dcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa25a), 0xc2);
        // 36 0374
        gbc.setState(0x8121, 0x9d0, 0x310, 0xd61b, 0x166, 0xd798, 0x0, 0x1);
        gbc.writeMem(0x8121, { 0x36, 0x9b });
        gbc.writeMem(0xd798, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x9d0);
        EXPECT(gbc.pc(), 0x8123);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8121), 0x36);
        EXPECT(gbc.readMem(0x8122), 0x9b);
        EXPECT(gbc.readMem(0xd798), 0x9b);
        // 36 0375
        gbc.setState(0xb0b5, 0xbbe2, 0xff40, 0xcfaa, 0x1375, 0xc2c5, 0x0, 0x1);
        gbc.writeMem(0xb0b5, { 0x36, 0x7d });
        gbc.writeMem(0xc2c5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xbbe2);
        EXPECT(gbc.pc(), 0xb0b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0b5), 0x36);
        EXPECT(gbc.readMem(0xb0b6), 0x7d);
        EXPECT(gbc.readMem(0xc2c5), 0x7d);
        // 36 0376
        gbc.setState(0x5780, 0x4e3d, 0x6c40, 0x7e46, 0x90c3, 0xa558, 0x1, 0x1);
        gbc.writeMem(0x5780, { 0x36, 0xd7 });
        gbc.writeMem(0xa558, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x4e3d);
        EXPECT(gbc.pc(), 0x5782);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa558), 0xd7);
        // 36 0377
        gbc.setState(0x43b2, 0x111, 0xfe30, 0xb74, 0x67a7, 0xdb46, 0x0, 0x1);
        gbc.writeMem(0x43b2, { 0x36, 0x32 });
        gbc.writeMem(0xdb46, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x111);
        EXPECT(gbc.pc(), 0x43b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb46), 0x32);
        // 36 0379
        gbc.setState(0x332e, 0xc227, 0x7fa0, 0xa097, 0x38d2, 0x80ad, 0x0, 0x1);
        gbc.writeMem(0x332e, { 0x36, 0x86 });
        gbc.writeMem(0x80ad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc227);
        EXPECT(gbc.pc(), 0x3330);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80ad), 0x86);
        // 36 037B
        gbc.setState(0x944, 0x6b57, 0xed60, 0x8845, 0xd943, 0xde68, 0x0, 0x0);
        gbc.writeMem(0x944, { 0x36, 0xc4 });
        gbc.writeMem(0xde68, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x6b57);
        EXPECT(gbc.pc(), 0x946);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde68), 0xc4);
        // 36 037C
        gbc.setState(0x9e15, 0x4a15, 0x2490, 0x7298, 0x24ad, 0xde91, 0x0, 0x1);
        gbc.writeMem(0x9e15, { 0x36, 0x2e });
        gbc.writeMem(0xde91, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x4a15);
        EXPECT(gbc.pc(), 0x9e17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e15), 0x36);
        EXPECT(gbc.readMem(0x9e16), 0x2e);
        EXPECT(gbc.readMem(0xde91), 0x2e);
        // 36 0382
        gbc.setState(0x45e8, 0xfc83, 0x64d0, 0x13e4, 0x911c, 0xc981, 0x0, 0x1);
        gbc.writeMem(0x45e8, { 0x36, 0xfc });
        gbc.writeMem(0xc981, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xfc83);
        EXPECT(gbc.pc(), 0x45ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc981), 0xfc);
        // 36 0383
        gbc.setState(0xafea, 0xf669, 0x3110, 0x62bc, 0x683a, 0xbcf4, 0x0, 0x0);
        gbc.writeMem(0xafea, { 0x36, 0xb7 });
        gbc.writeMem(0xbcf4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xf669);
        EXPECT(gbc.pc(), 0xafec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafea), 0x36);
        EXPECT(gbc.readMem(0xafeb), 0xb7);
        EXPECT(gbc.readMem(0xbcf4), 0xb7);
        // 36 0384
        gbc.setState(0x9d81, 0x271f, 0x6d50, 0x12c0, 0xf121, 0xcbf7, 0x1, 0x0);
        gbc.writeMem(0x9d81, { 0x36, 0x5b });
        gbc.writeMem(0xcbf7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x271f);
        EXPECT(gbc.pc(), 0x9d83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d81), 0x36);
        EXPECT(gbc.readMem(0x9d82), 0x5b);
        EXPECT(gbc.readMem(0xcbf7), 0x5b);
        // 36 0385
        gbc.setState(0x8d7c, 0x32ea, 0xbe80, 0x9f9, 0x7b90, 0xaace, 0x1, 0x0);
        gbc.writeMem(0x8d7c, { 0x36, 0xa4 });
        gbc.writeMem(0xaace, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x32ea);
        EXPECT(gbc.pc(), 0x8d7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d7c), 0x36);
        EXPECT(gbc.readMem(0x8d7d), 0xa4);
        EXPECT(gbc.readMem(0xaace), 0xa4);
        // 36 0386
        gbc.setState(0x804e, 0x1e83, 0x42d0, 0xb069, 0xffa1, 0x8139, 0x1, 0x0);
        gbc.writeMem(0x804e, { 0x36, 0xe9 });
        gbc.writeMem(0x8139, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x1e83);
        EXPECT(gbc.pc(), 0x8050);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x804e), 0x36);
        EXPECT(gbc.readMem(0x804f), 0xe9);
        EXPECT(gbc.readMem(0x8139), 0xe9);
        // 36 0387
        gbc.setState(0xa1d0, 0x34d7, 0xade0, 0xa37b, 0xdb0c, 0xbf04, 0x1, 0x1);
        gbc.writeMem(0xa1d0, { 0x36, 0xe6 });
        gbc.writeMem(0xbf04, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x34d7);
        EXPECT(gbc.pc(), 0xa1d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1d0), 0x36);
        EXPECT(gbc.readMem(0xa1d1), 0xe6);
        EXPECT(gbc.readMem(0xbf04), 0xe6);
        // 36 0389
        gbc.setState(0xde28, 0x7eb3, 0x1ec0, 0xa2d6, 0x993a, 0x8781, 0x1, 0x1);
        gbc.writeMem(0x8781, { 0x0 });
        gbc.writeMem(0xde28, { 0x36, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x7eb3);
        EXPECT(gbc.pc(), 0xde2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8781), 0x79);
        EXPECT(gbc.readMem(0xde28), 0x36);
        EXPECT(gbc.readMem(0xde29), 0x79);
        // 36 038A
        gbc.setState(0xb8f7, 0x9d, 0xa550, 0x4e9d, 0x199c, 0x8e0c, 0x0, 0x0);
        gbc.writeMem(0x8e0c, { 0x0 });
        gbc.writeMem(0xb8f7, { 0x36, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x9d);
        EXPECT(gbc.pc(), 0xb8f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e0c), 0x98);
        EXPECT(gbc.readMem(0xb8f7), 0x36);
        EXPECT(gbc.readMem(0xb8f8), 0x98);
        // 36 038C
        gbc.setState(0x8c5b, 0xf4aa, 0x1840, 0x1362, 0x3e01, 0x9b9d, 0x0, 0x0);
        gbc.writeMem(0x8c5b, { 0x36, 0xd8 });
        gbc.writeMem(0x9b9d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xf4aa);
        EXPECT(gbc.pc(), 0x8c5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c5b), 0x36);
        EXPECT(gbc.readMem(0x8c5c), 0xd8);
        EXPECT(gbc.readMem(0x9b9d), 0xd8);
        // 36 038D
        gbc.setState(0x2906, 0xec99, 0x9e60, 0x881e, 0x57d8, 0xa8ad, 0x1, 0x1);
        gbc.writeMem(0x2906, { 0x36, 0x66 });
        gbc.writeMem(0xa8ad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xec99);
        EXPECT(gbc.pc(), 0x2908);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8ad), 0x66);
        // 36 038F
        gbc.setState(0xbb40, 0xf77d, 0xcc00, 0x5ed9, 0x1461, 0xfe7c, 0x1, 0x0);
        gbc.writeMem(0xbb40, { 0x36, 0xe7 });
        gbc.writeMem(0xfe7c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xf77d);
        EXPECT(gbc.pc(), 0xbb42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb40), 0x36);
        EXPECT(gbc.readMem(0xbb41), 0xe7);
        EXPECT(gbc.readMem(0xfe7c), 0xe7);
        // 36 0390
        gbc.setState(0xc92c, 0x5138, 0xdda0, 0x4d4f, 0x4978, 0x8441, 0x1, 0x1);
        gbc.writeMem(0x8441, { 0x0 });
        gbc.writeMem(0xc92c, { 0x36, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x5138);
        EXPECT(gbc.pc(), 0xc92e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8441), 0x90);
        EXPECT(gbc.readMem(0xc92c), 0x36);
        EXPECT(gbc.readMem(0xc92d), 0x90);
        // 36 0391
        gbc.setState(0x5f69, 0x2d6c, 0xccd0, 0x9c69, 0xc2c0, 0xc9f8, 0x1, 0x0);
        gbc.writeMem(0x5f69, { 0x36, 0xcd });
        gbc.writeMem(0xc9f8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2d6c);
        EXPECT(gbc.pc(), 0x5f6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9f8), 0xcd);
        // 36 0392
        gbc.setState(0x4f9a, 0x7e08, 0x76b0, 0x1c77, 0x6800, 0xe45e, 0x0, 0x1);
        gbc.writeMem(0x4f9a, { 0x36, 0xfb });
        gbc.writeMem(0xe45e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x7e08);
        EXPECT(gbc.pc(), 0x4f9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe45e), 0xfb);
        // 36 0396
        gbc.setState(0xb1cf, 0x4404, 0xa2e0, 0xebdc, 0x1320, 0xd2a8, 0x0, 0x1);
        gbc.writeMem(0xb1cf, { 0x36, 0xb1 });
        gbc.writeMem(0xd2a8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x4404);
        EXPECT(gbc.pc(), 0xb1d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1cf), 0x36);
        EXPECT(gbc.readMem(0xb1d0), 0xb1);
        EXPECT(gbc.readMem(0xd2a8), 0xb1);
        // 36 0397
        gbc.setState(0xa8c8, 0xb568, 0xdaf0, 0x3cf, 0x3f41, 0x8c30, 0x0, 0x1);
        gbc.writeMem(0x8c30, { 0x0 });
        gbc.writeMem(0xa8c8, { 0x36, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xb568);
        EXPECT(gbc.pc(), 0xa8ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c30), 0x6c);
        EXPECT(gbc.readMem(0xa8c8), 0x36);
        EXPECT(gbc.readMem(0xa8c9), 0x6c);
        // 36 0399
        gbc.setState(0x5760, 0x7f99, 0xe0d0, 0x425f, 0x82a0, 0x9adc, 0x0, 0x1);
        gbc.writeMem(0x5760, { 0x36, 0x2c });
        gbc.writeMem(0x9adc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x7f99);
        EXPECT(gbc.pc(), 0x5762);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9adc), 0x2c);
        // 36 039A
        gbc.setState(0x19ff, 0x7d86, 0x8fa0, 0x460a, 0xc6cc, 0xa7f6, 0x1, 0x0);
        gbc.writeMem(0x19ff, { 0x36, 0xaf });
        gbc.writeMem(0xa7f6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7d86);
        EXPECT(gbc.pc(), 0x1a01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7f6), 0xaf);
        // 36 039C
        gbc.setState(0x5b9, 0x46af, 0x6600, 0x639a, 0xd3d7, 0xc744, 0x0, 0x0);
        gbc.writeMem(0x5b9, { 0x36, 0x2c });
        gbc.writeMem(0xc744, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x46af);
        EXPECT(gbc.pc(), 0x5bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc744), 0x2c);
        // 36 039F
        gbc.setState(0xc07, 0xfd1d, 0x6a60, 0xa921, 0x3ebd, 0xbf7c, 0x1, 0x0);
        gbc.writeMem(0xc07, { 0x36, 0x43 });
        gbc.writeMem(0xbf7c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xfd1d);
        EXPECT(gbc.pc(), 0xc09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf7c), 0x43);
        // 36 03A1
        gbc.setState(0x8da3, 0x2802, 0xbf00, 0x9836, 0xacd2, 0x8592, 0x1, 0x1);
        gbc.writeMem(0x8592, { 0x0 });
        gbc.writeMem(0x8da3, { 0x36, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2802);
        EXPECT(gbc.pc(), 0x8da5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8592), 0x94);
        EXPECT(gbc.readMem(0x8da3), 0x36);
        EXPECT(gbc.readMem(0x8da4), 0x94);
        // 36 03A2
        gbc.setState(0x3f94, 0x6d67, 0x5cf0, 0xa83f, 0x6d5e, 0xa3e9, 0x1, 0x0);
        gbc.writeMem(0x3f94, { 0x36, 0x84 });
        gbc.writeMem(0xa3e9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x6d67);
        EXPECT(gbc.pc(), 0x3f96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3e9), 0x84);
        // 36 03A4
        gbc.setState(0xde6b, 0xdb0b, 0x5140, 0x4103, 0xbca4, 0xab72, 0x1, 0x0);
        gbc.writeMem(0xab72, { 0x0 });
        gbc.writeMem(0xde6b, { 0x36, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xdb0b);
        EXPECT(gbc.pc(), 0xde6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab72), 0x8b);
        EXPECT(gbc.readMem(0xde6b), 0x36);
        EXPECT(gbc.readMem(0xde6c), 0x8b);
        // 36 03A5
        gbc.setState(0x5830, 0x1588, 0xe2a0, 0x5256, 0x54e2, 0x8567, 0x1, 0x1);
        gbc.writeMem(0x5830, { 0x36, 0x8f });
        gbc.writeMem(0x8567, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x1588);
        EXPECT(gbc.pc(), 0x5832);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8567), 0x8f);
        // 36 03A6
        gbc.setState(0x2c88, 0x1000, 0xb0b0, 0x9cc7, 0x5602, 0xaaac, 0x0, 0x0);
        gbc.writeMem(0x2c88, { 0x36, 0x7f });
        gbc.writeMem(0xaaac, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x1000);
        EXPECT(gbc.pc(), 0x2c8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaac), 0x7f);
        // 36 03A7
        gbc.setState(0x661e, 0x1b7d, 0x4520, 0xe637, 0xca90, 0x8233, 0x0, 0x1);
        gbc.writeMem(0x661e, { 0x36, 0x38 });
        gbc.writeMem(0x8233, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x1b7d);
        EXPECT(gbc.pc(), 0x6620);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8233), 0x38);
        // 36 03A8
        gbc.setState(0xe8c6, 0x7a4f, 0xd010, 0x531d, 0xf949, 0xae26, 0x1, 0x0);
        gbc.writeMem(0xae26, { 0x0 });
        gbc.writeMem(0xe8c6, { 0x36, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x7a4f);
        EXPECT(gbc.pc(), 0xe8c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae26), 0xb4);
        EXPECT(gbc.readMem(0xe8c6), 0x36);
        EXPECT(gbc.readMem(0xe8c7), 0xb4);
        // 36 03AC
        gbc.setState(0x9f9f, 0x5de4, 0xf930, 0x51b9, 0x655b, 0xae3c, 0x1, 0x1);
        gbc.writeMem(0x9f9f, { 0x36, 0xa9 });
        gbc.writeMem(0xae3c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x5de4);
        EXPECT(gbc.pc(), 0x9fa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f9f), 0x36);
        EXPECT(gbc.readMem(0x9fa0), 0xa9);
        EXPECT(gbc.readMem(0xae3c), 0xa9);
        // 36 03B0
        gbc.setState(0x8c1, 0x414, 0x6580, 0x744d, 0x9594, 0xfa25, 0x0, 0x0);
        gbc.writeMem(0x8c1, { 0x36, 0x61 });
        gbc.writeMem(0xfa25, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x414);
        EXPECT(gbc.pc(), 0x8c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfa25), 0x61);
        // 36 03B1
        gbc.setState(0xc71e, 0xd01f, 0x1630, 0x2db5, 0x5713, 0xf541, 0x1, 0x1);
        gbc.writeMem(0xc71e, { 0x36, 0x0 });
        gbc.writeMem(0xf541, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xd01f);
        EXPECT(gbc.pc(), 0xc720);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc71e), 0x36);
        EXPECT(gbc.readMem(0xc71f), 0x0);
        EXPECT(gbc.readMem(0xf541), 0x0);
        // 36 03B3
        gbc.setState(0xb6cb, 0x5d5f, 0x8f20, 0xe2c9, 0x126d, 0xbe45, 0x1, 0x1);
        gbc.writeMem(0xb6cb, { 0x36, 0x8d });
        gbc.writeMem(0xbe45, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x5d5f);
        EXPECT(gbc.pc(), 0xb6cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6cb), 0x36);
        EXPECT(gbc.readMem(0xb6cc), 0x8d);
        EXPECT(gbc.readMem(0xbe45), 0x8d);
        // 36 03B5
        gbc.setState(0xa5aa, 0x352b, 0x400, 0x8671, 0x42a, 0xb667, 0x0, 0x1);
        gbc.writeMem(0xa5aa, { 0x36, 0xa2 });
        gbc.writeMem(0xb667, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x352b);
        EXPECT(gbc.pc(), 0xa5ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5aa), 0x36);
        EXPECT(gbc.readMem(0xa5ab), 0xa2);
        EXPECT(gbc.readMem(0xb667), 0xa2);
        // 36 03B6
        gbc.setState(0xb973, 0x714c, 0x2a50, 0x7b6b, 0xf24a, 0xa88f, 0x1, 0x1);
        gbc.writeMem(0xa88f, { 0x0 });
        gbc.writeMem(0xb973, { 0x36, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x714c);
        EXPECT(gbc.pc(), 0xb975);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa88f), 0xd7);
        EXPECT(gbc.readMem(0xb973), 0x36);
        EXPECT(gbc.readMem(0xb974), 0xd7);
        // 36 03BA
        gbc.setState(0x7807, 0x77ec, 0x7270, 0x9088, 0xc94, 0xae9b, 0x0, 0x0);
        gbc.writeMem(0x7807, { 0x36, 0x2 });
        gbc.writeMem(0xae9b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x77ec);
        EXPECT(gbc.pc(), 0x7809);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae9b), 0x2);
        // 36 03BB
        gbc.setState(0x5ecf, 0x8c69, 0xfab0, 0x1f57, 0xdb50, 0xf383, 0x0, 0x1);
        gbc.writeMem(0x5ecf, { 0x36, 0xca });
        gbc.writeMem(0xf383, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x8c69);
        EXPECT(gbc.pc(), 0x5ed1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf383), 0xca);
        // 36 03BF
        gbc.setState(0x43bd, 0x9f66, 0xc700, 0xe176, 0x48fc, 0xb620, 0x0, 0x1);
        gbc.writeMem(0x43bd, { 0x36, 0xa4 });
        gbc.writeMem(0xb620, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x9f66);
        EXPECT(gbc.pc(), 0x43bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb620), 0xa4);
        // 36 03C1
        gbc.setState(0x86f8, 0x5eeb, 0x9780, 0x5605, 0xc0bc, 0xc9d8, 0x0, 0x1);
        gbc.writeMem(0x86f8, { 0x36, 0x0 });
        gbc.writeMem(0xc9d8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x5eeb);
        EXPECT(gbc.pc(), 0x86fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86f8), 0x36);
        EXPECT(gbc.readMem(0x86f9), 0x0);
        EXPECT(gbc.readMem(0xc9d8), 0x0);
        // 36 03C3
        gbc.setState(0x7176, 0xed5a, 0x2f0, 0xde76, 0xab3e, 0xd08b, 0x0, 0x1);
        gbc.writeMem(0x7176, { 0x36, 0xef });
        gbc.writeMem(0xd08b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xed5a);
        EXPECT(gbc.pc(), 0x7178);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd08b), 0xef);
        // 36 03C8
        gbc.setState(0x86fd, 0x60cc, 0xcb30, 0x364d, 0xf13, 0xef29, 0x0, 0x1);
        gbc.writeMem(0x86fd, { 0x36, 0xfc });
        gbc.writeMem(0xef29, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x60cc);
        EXPECT(gbc.pc(), 0x86ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86fd), 0x36);
        EXPECT(gbc.readMem(0x86fe), 0xfc);
        EXPECT(gbc.readMem(0xef29), 0xfc);
        // 36 03CB
        gbc.setState(0x1f63, 0x805, 0xfdc0, 0x6933, 0x9ef1, 0xb96d, 0x1, 0x1);
        gbc.writeMem(0x1f63, { 0x36, 0xd9 });
        gbc.writeMem(0xb96d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x805);
        EXPECT(gbc.pc(), 0x1f65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb96d), 0xd9);
        // 36 03CC
        gbc.setState(0xc51f, 0x28ed, 0x4180, 0x49a8, 0xf216, 0xf230, 0x0, 0x0);
        gbc.writeMem(0xc51f, { 0x36, 0x10 });
        gbc.writeMem(0xf230, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x28ed);
        EXPECT(gbc.pc(), 0xc521);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc51f), 0x36);
        EXPECT(gbc.readMem(0xc520), 0x10);
        EXPECT(gbc.readMem(0xf230), 0x10);
        // 36 03CD
        gbc.setState(0xad91, 0xd6e3, 0xd20, 0xa321, 0x46a2, 0xea77, 0x0, 0x0);
        gbc.writeMem(0xad91, { 0x36, 0x32 });
        gbc.writeMem(0xea77, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd6e3);
        EXPECT(gbc.pc(), 0xad93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad91), 0x36);
        EXPECT(gbc.readMem(0xad92), 0x32);
        EXPECT(gbc.readMem(0xea77), 0x32);
        // 36 03CE
        gbc.setState(0x3b02, 0x21ff, 0xc1b0, 0x4ad9, 0xe4b9, 0xb0ed, 0x1, 0x1);
        gbc.writeMem(0x3b02, { 0x36, 0x76 });
        gbc.writeMem(0xb0ed, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x21ff);
        EXPECT(gbc.pc(), 0x3b04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0ed), 0x76);
        // 36 03CF
        gbc.setState(0xdc4e, 0xf75b, 0xca50, 0xe287, 0x13cb, 0xfc0f, 0x1, 0x0);
        gbc.writeMem(0xdc4e, { 0x36, 0x5a });
        gbc.writeMem(0xfc0f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xf75b);
        EXPECT(gbc.pc(), 0xdc50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc4e), 0x36);
        EXPECT(gbc.readMem(0xdc4f), 0x5a);
        EXPECT(gbc.readMem(0xfc0f), 0x5a);
        // 36 03D0
        gbc.setState(0x617c, 0x9d6, 0x48c0, 0x6b02, 0x6e1c, 0xbbf0, 0x1, 0x0);
        gbc.writeMem(0x617c, { 0x36, 0x75 });
        gbc.writeMem(0xbbf0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x9d6);
        EXPECT(gbc.pc(), 0x617e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbf0), 0x75);
        // 36 03D2
        gbc.setState(0x48b6, 0x88e5, 0x5d50, 0xb6e9, 0xb5, 0x60d, 0x0, 0x1);
        gbc.writeMem(0x60d, { 0x0 });
        gbc.writeMem(0x48b6, { 0x36, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x88e5);
        EXPECT(gbc.pc(), 0x48b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 36 03D4
        gbc.setState(0xb92d, 0x4267, 0x3d80, 0xf696, 0x2f67, 0xf9f4, 0x1, 0x0);
        gbc.writeMem(0xb92d, { 0x36, 0xa3 });
        gbc.writeMem(0xf9f4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x4267);
        EXPECT(gbc.pc(), 0xb92f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb92d), 0x36);
        EXPECT(gbc.readMem(0xb92e), 0xa3);
        EXPECT(gbc.readMem(0xf9f4), 0xa3);
        // 36 03D5
        gbc.setState(0x574b, 0xf7e1, 0x3ec0, 0xbea6, 0x8fd0, 0x6dc3, 0x0, 0x0);
        gbc.writeMem(0x574b, { 0x36, 0x0 });
        gbc.writeMem(0x6dc3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf7e1);
        EXPECT(gbc.pc(), 0x574d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 36 03D9
        gbc.setState(0xcd8c, 0x4d16, 0x3300, 0xbb2c, 0x52f3, 0x9d2f, 0x1, 0x1);
        gbc.writeMem(0x9d2f, { 0x0 });
        gbc.writeMem(0xcd8c, { 0x36, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x4d16);
        EXPECT(gbc.pc(), 0xcd8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d2f), 0x16);
        EXPECT(gbc.readMem(0xcd8c), 0x36);
        EXPECT(gbc.readMem(0xcd8d), 0x16);
        // 36 03DA
        gbc.setState(0x77d9, 0xc6bb, 0x4950, 0x288d, 0x794c, 0x8c25, 0x0, 0x0);
        gbc.writeMem(0x77d9, { 0x36, 0x22 });
        gbc.writeMem(0x8c25, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xc6bb);
        EXPECT(gbc.pc(), 0x77db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c25), 0x22);
        // 36 03DB
        gbc.setState(0x4f3, 0x84a4, 0x9250, 0x9b84, 0x284d, 0xde5a, 0x0, 0x0);
        gbc.writeMem(0x4f3, { 0x36, 0xaf });
        gbc.writeMem(0xde5a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x84a4);
        EXPECT(gbc.pc(), 0x4f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde5a), 0xaf);
        // 36 03DC
        gbc.setState(0x7d91, 0x9ed6, 0xaf30, 0x9d20, 0xed00, 0xdf6c, 0x1, 0x0);
        gbc.writeMem(0x7d91, { 0x36, 0xed });
        gbc.writeMem(0xdf6c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x9ed6);
        EXPECT(gbc.pc(), 0x7d93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf6c), 0xed);
        // 36 03DE
        gbc.setState(0x2ea8, 0x38d5, 0xc30, 0xe1d1, 0x9bd, 0xce5b, 0x0, 0x0);
        gbc.writeMem(0x2ea8, { 0x36, 0x89 });
        gbc.writeMem(0xce5b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x38d5);
        EXPECT(gbc.pc(), 0x2eaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce5b), 0x89);
        // 36 03DF
        gbc.setState(0x1ca3, 0xdb3e, 0xbe50, 0x7a69, 0x6222, 0x9158, 0x0, 0x1);
        gbc.writeMem(0x1ca3, { 0x36, 0x59 });
        gbc.writeMem(0x9158, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xdb3e);
        EXPECT(gbc.pc(), 0x1ca5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9158), 0x59);
        // 36 03E1
        gbc.setState(0x8974, 0xa4ff, 0x80c0, 0xfc4, 0xbc57, 0xfd2d, 0x0, 0x1);
        gbc.writeMem(0x8974, { 0x36, 0xc9 });
        gbc.writeMem(0xfd2d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xa4ff);
        EXPECT(gbc.pc(), 0x8976);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8974), 0x36);
        EXPECT(gbc.readMem(0x8975), 0xc9);
        EXPECT(gbc.readMem(0xfd2d), 0xc9);
        // 36 03E2
        gbc.setState(0xe741, 0xdb34, 0x84f0, 0x29, 0xcd70, 0x9c4f, 0x0, 0x0);
        gbc.writeMem(0x9c4f, { 0x0 });
        gbc.writeMem(0xe741, { 0x36, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xdb34);
        EXPECT(gbc.pc(), 0xe743);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c4f), 0xf9);
        EXPECT(gbc.readMem(0xe741), 0x36);
        EXPECT(gbc.readMem(0xe742), 0xf9);
        // 36 03E4
        gbc.setState(0x9c54, 0x9f57, 0xcb20, 0xc18f, 0x879b, 0xd4e4, 0x0, 0x0);
        gbc.writeMem(0x9c54, { 0x36, 0xa4 });
        gbc.writeMem(0xd4e4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x9f57);
        EXPECT(gbc.pc(), 0x9c56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c54), 0x36);
        EXPECT(gbc.readMem(0x9c55), 0xa4);
        EXPECT(gbc.readMem(0xd4e4), 0xa4);
        // 36 03E5
        gbc.setState(0xcbb, 0x9d4b, 0x1740, 0xd713, 0x3684, 0xff80, 0x1, 0x1);
        gbc.writeMem(0xcbb, { 0x36, 0xaa });
        gbc.writeMem(0xff80, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x9d4b);
        EXPECT(gbc.pc(), 0xcbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff80), 0xaa);
        // 36 03E6
        gbc.setState(0x84b6, 0xe6d1, 0x29e0, 0xca37, 0x495d, 0xda40, 0x0, 0x1);
        gbc.writeMem(0x84b6, { 0x36, 0x8d });
        gbc.writeMem(0xda40, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xe6d1);
        EXPECT(gbc.pc(), 0x84b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84b6), 0x36);
        EXPECT(gbc.readMem(0x84b7), 0x8d);
        EXPECT(gbc.readMem(0xda40), 0x8d);
        // 36 03E7
        gbc.setState(0x85a, 0xcbeb, 0xc760, 0x197d, 0x8f85, 0x9b06, 0x1, 0x0);
        gbc.writeMem(0x85a, { 0x36, 0xa6 });
        gbc.writeMem(0x9b06, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xcbeb);
        EXPECT(gbc.pc(), 0x85c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b06), 0xa6);
    }
