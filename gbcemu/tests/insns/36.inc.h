    TEST(gbcemu, opcode_36) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 36 0001
        gbc.setState(0x46ff, 0x2c3b, 0xb10, 0x5af9, 0xe949, 0xf239, 0x1, 0x0);
        gbc.writeMem(0x46ff, { 0x36, 0xbe });
        gbc.writeMem(0xf239, { 0x0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2c3b, gbc.sp());
        EXPECT(0x4701, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xf239));
        // 36 0002
        gbc.setState(0x2481, 0x1fb, 0x7a80, 0xf7f6, 0x86e5, 0x8cd2, 0x0, 0x0);
        gbc.writeMem(0x2481, { 0x36, 0xc4 });
        gbc.writeMem(0x8cd2, { 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1fb, gbc.sp());
        EXPECT(0x2483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0x8cd2));
        // 36 0003
        gbc.setState(0x39db, 0x39a9, 0xb4a0, 0x2690, 0xc576, 0x87b1, 0x0, 0x0);
        gbc.writeMem(0x39db, { 0x36, 0xd2 });
        gbc.writeMem(0x87b1, { 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x39a9, gbc.sp());
        EXPECT(0x39dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0x87b1));
        // 36 0005
        gbc.setState(0x849e, 0xbcc5, 0x1890, 0x60ee, 0x3dec, 0xe749, 0x0, 0x1);
        gbc.writeMem(0x849e, { 0x36, 0x11 });
        gbc.writeMem(0xe749, { 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbcc5, gbc.sp());
        EXPECT(0x84a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x849e));
        EXPECT(0x11, gbc.readMem(0x849f));
        EXPECT(0x11, gbc.readMem(0xe749));
        // 36 0007
        gbc.setState(0x4e82, 0x5cd4, 0x66f0, 0x55cd, 0xf59e, 0xbd3d, 0x1, 0x1);
        gbc.writeMem(0x4e82, { 0x36, 0x6d });
        gbc.writeMem(0xbd3d, { 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5cd4, gbc.sp());
        EXPECT(0x4e84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xbd3d));
        // 36 0008
        gbc.setState(0xddec, 0xaecc, 0xa250, 0x57bc, 0xebce, 0x8ebe, 0x1, 0x0);
        gbc.writeMem(0x8ebe, { 0x0 });
        gbc.writeMem(0xddec, { 0x36, 0xe6 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xaecc, gbc.sp());
        EXPECT(0xddee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8ebe));
        EXPECT(0x36, gbc.readMem(0xddec));
        EXPECT(0xe6, gbc.readMem(0xdded));
        // 36 0009
        gbc.setState(0x517, 0x2f99, 0x88b0, 0xc95e, 0x5ed0, 0xfc33, 0x0, 0x0);
        gbc.writeMem(0x517, { 0x36, 0xc4 });
        gbc.writeMem(0xfc33, { 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2f99, gbc.sp());
        EXPECT(0x519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xfc33));
        // 36 000A
        gbc.setState(0x9630, 0x366d, 0x5750, 0xc9a, 0x5a7, 0xfb6e, 0x1, 0x1);
        gbc.writeMem(0x9630, { 0x36, 0x13 });
        gbc.writeMem(0xfb6e, { 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x366d, gbc.sp());
        EXPECT(0x9632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x9630));
        EXPECT(0x13, gbc.readMem(0x9631));
        EXPECT(0x13, gbc.readMem(0xfb6e));
        // 36 000D
        gbc.setState(0x3273, 0x103, 0x6530, 0x5ed, 0x21f0, 0xf549, 0x0, 0x1);
        gbc.writeMem(0x3273, { 0x36, 0xb7 });
        gbc.writeMem(0xf549, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x103, gbc.sp());
        EXPECT(0x3275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xf549));
        // 36 000F
        gbc.setState(0xaa71, 0x7ffd, 0x9740, 0x185c, 0x6d06, 0xaf91, 0x1, 0x0);
        gbc.writeMem(0xaa71, { 0x36, 0xc8 });
        gbc.writeMem(0xaf91, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7ffd, gbc.sp());
        EXPECT(0xaa73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xaa71));
        EXPECT(0xc8, gbc.readMem(0xaa72));
        EXPECT(0xc8, gbc.readMem(0xaf91));
        // 36 0010
        gbc.setState(0xb828, 0xb200, 0xe020, 0x2ce1, 0x8b9d, 0xb10e, 0x1, 0x1);
        gbc.writeMem(0xb10e, { 0x0 });
        gbc.writeMem(0xb828, { 0x36, 0xc1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb200, gbc.sp());
        EXPECT(0xb82a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb10e));
        EXPECT(0x36, gbc.readMem(0xb828));
        EXPECT(0xc1, gbc.readMem(0xb829));
        // 36 0012
        gbc.setState(0xdcfd, 0x8ce9, 0x8920, 0x3029, 0x7388, 0x8b91, 0x1, 0x1);
        gbc.writeMem(0x8b91, { 0x0 });
        gbc.writeMem(0xdcfd, { 0x36, 0xe2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8ce9, gbc.sp());
        EXPECT(0xdcff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x8b91));
        EXPECT(0x36, gbc.readMem(0xdcfd));
        EXPECT(0xe2, gbc.readMem(0xdcfe));
        // 36 0013
        gbc.setState(0x6d8, 0x89f8, 0x44c0, 0xc873, 0xc4df, 0xadf6, 0x1, 0x0);
        gbc.writeMem(0x6d8, { 0x36, 0x60 });
        gbc.writeMem(0xadf6, { 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x89f8, gbc.sp());
        EXPECT(0x6da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xadf6));
        // 36 0017
        gbc.setState(0xaa5e, 0xa580, 0x6210, 0xbf6d, 0xeda7, 0xc095, 0x0, 0x0);
        gbc.writeMem(0xaa5e, { 0x36, 0x17 });
        gbc.writeMem(0xc095, { 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa580, gbc.sp());
        EXPECT(0xaa60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xaa5e));
        EXPECT(0x17, gbc.readMem(0xaa5f));
        EXPECT(0x17, gbc.readMem(0xc095));
        // 36 001C
        gbc.setState(0xd390, 0xf80b, 0xc4f0, 0x8321, 0xb40b, 0xed50, 0x1, 0x0);
        gbc.writeMem(0xd390, { 0x36, 0xe });
        gbc.writeMem(0xed50, { 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf80b, gbc.sp());
        EXPECT(0xd392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xd390));
        EXPECT(0xe, gbc.readMem(0xd391));
        EXPECT(0xe, gbc.readMem(0xed50));
        // 36 001D
        gbc.setState(0x2f12, 0x40ff, 0x3910, 0x9c68, 0xf886, 0xbda0, 0x1, 0x1);
        gbc.writeMem(0x2f12, { 0x36, 0xad });
        gbc.writeMem(0xbda0, { 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x40ff, gbc.sp());
        EXPECT(0x2f14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xbda0));
        // 36 0020
        gbc.setState(0xe201, 0x1059, 0x6d00, 0x5903, 0xc7ce, 0xa321, 0x0, 0x1);
        gbc.writeMem(0xa321, { 0x0 });
        gbc.writeMem(0xe201, { 0x36, 0xa3 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1059, gbc.sp());
        EXPECT(0xe203, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa321));
        EXPECT(0x36, gbc.readMem(0xe201));
        EXPECT(0xa3, gbc.readMem(0xe202));
        // 36 0021
        gbc.setState(0x9096, 0xbeb7, 0x8570, 0xfd60, 0x47d4, 0xc947, 0x1, 0x0);
        gbc.writeMem(0x9096, { 0x36, 0x63 });
        gbc.writeMem(0xc947, { 0x0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xbeb7, gbc.sp());
        EXPECT(0x9098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x9096));
        EXPECT(0x63, gbc.readMem(0x9097));
        EXPECT(0x63, gbc.readMem(0xc947));
        // 36 0022
        gbc.setState(0x88bc, 0xf322, 0x2050, 0xefca, 0x68cd, 0x8da0, 0x0, 0x1);
        gbc.writeMem(0x88bc, { 0x36, 0x5 });
        gbc.writeMem(0x8da0, { 0x0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf322, gbc.sp());
        EXPECT(0x88be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x88bc));
        EXPECT(0x5, gbc.readMem(0x88bd));
        EXPECT(0x5, gbc.readMem(0x8da0));
        // 36 0025
        gbc.setState(0x9b9c, 0x7ec7, 0x4810, 0x2e3e, 0x6fe4, 0xe25d, 0x1, 0x0);
        gbc.writeMem(0x9b9c, { 0x36, 0xe6 });
        gbc.writeMem(0xe25d, { 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7ec7, gbc.sp());
        EXPECT(0x9b9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x9b9c));
        EXPECT(0xe6, gbc.readMem(0x9b9d));
        EXPECT(0xe6, gbc.readMem(0xe25d));
        // 36 0027
        gbc.setState(0x4f06, 0xf66, 0xb050, 0x8798, 0x80a5, 0xf51c, 0x1, 0x1);
        gbc.writeMem(0x4f06, { 0x36, 0xc6 });
        gbc.writeMem(0xf51c, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf66, gbc.sp());
        EXPECT(0x4f08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xf51c));
        // 36 0029
        gbc.setState(0x9978, 0xcdd0, 0x4e60, 0x66b9, 0x5e88, 0xe079, 0x1, 0x0);
        gbc.writeMem(0x9978, { 0x36, 0x8d });
        gbc.writeMem(0xe079, { 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xcdd0, gbc.sp());
        EXPECT(0x997a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x9978));
        EXPECT(0x8d, gbc.readMem(0x9979));
        EXPECT(0x8d, gbc.readMem(0xe079));
        // 36 002B
        gbc.setState(0x9f44, 0x1ad3, 0x7ca0, 0x2afb, 0x6d3d, 0xdbab, 0x0, 0x1);
        gbc.writeMem(0x9f44, { 0x36, 0xa2 });
        gbc.writeMem(0xdbab, { 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1ad3, gbc.sp());
        EXPECT(0x9f46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x9f44));
        EXPECT(0xa2, gbc.readMem(0x9f45));
        EXPECT(0xa2, gbc.readMem(0xdbab));
        // 36 002D
        gbc.setState(0x7d49, 0xc5eb, 0x9cd0, 0x8e0a, 0xe8c8, 0x8a95, 0x0, 0x0);
        gbc.writeMem(0x7d49, { 0x36, 0x8e });
        gbc.writeMem(0x8a95, { 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc5eb, gbc.sp());
        EXPECT(0x7d4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x8a95));
        // 36 002E
        gbc.setState(0xba87, 0x18cd, 0x5660, 0x95c0, 0xf9c7, 0xf82a, 0x1, 0x1);
        gbc.writeMem(0xba87, { 0x36, 0xd3 });
        gbc.writeMem(0xf82a, { 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x18cd, gbc.sp());
        EXPECT(0xba89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xba87));
        EXPECT(0xd3, gbc.readMem(0xba88));
        EXPECT(0xd3, gbc.readMem(0xf82a));
        // 36 0030
        gbc.setState(0x7cf8, 0xfb1, 0xb830, 0x1621, 0x7da6, 0xd528, 0x0, 0x0);
        gbc.writeMem(0x7cf8, { 0x36, 0xcf });
        gbc.writeMem(0xd528, { 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xfb1, gbc.sp());
        EXPECT(0x7cfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xd528));
        // 36 0032
        gbc.setState(0xc0c7, 0x7ee, 0xe9e0, 0xd996, 0x46d8, 0xf517, 0x0, 0x1);
        gbc.writeMem(0xc0c7, { 0x36, 0x54 });
        gbc.writeMem(0xf517, { 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7ee, gbc.sp());
        EXPECT(0xc0c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xc0c7));
        EXPECT(0x54, gbc.readMem(0xc0c8));
        EXPECT(0x54, gbc.readMem(0xf517));
        // 36 0035
        gbc.setState(0x9d84, 0x4024, 0x7500, 0xfa5b, 0xaee2, 0xb388, 0x1, 0x1);
        gbc.writeMem(0x9d84, { 0x36, 0xc4 });
        gbc.writeMem(0xb388, { 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4024, gbc.sp());
        EXPECT(0x9d86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x9d84));
        EXPECT(0xc4, gbc.readMem(0x9d85));
        EXPECT(0xc4, gbc.readMem(0xb388));
        // 36 0037
        gbc.setState(0xbcb3, 0x29c8, 0xfdf0, 0xed48, 0x6e5b, 0xf405, 0x1, 0x0);
        gbc.writeMem(0xbcb3, { 0x36, 0x45 });
        gbc.writeMem(0xf405, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x29c8, gbc.sp());
        EXPECT(0xbcb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xbcb3));
        EXPECT(0x45, gbc.readMem(0xbcb4));
        EXPECT(0x45, gbc.readMem(0xf405));
        // 36 0038
        gbc.setState(0x97bc, 0x29d1, 0xfe10, 0x56a6, 0x4830, 0xc484, 0x1, 0x1);
        gbc.writeMem(0x97bc, { 0x36, 0x8b });
        gbc.writeMem(0xc484, { 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x29d1, gbc.sp());
        EXPECT(0x97be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x97bc));
        EXPECT(0x8b, gbc.readMem(0x97bd));
        EXPECT(0x8b, gbc.readMem(0xc484));
        // 36 003B
        gbc.setState(0x14aa, 0x3ca, 0x2830, 0xd5f1, 0x2b80, 0xfe4d, 0x0, 0x0);
        gbc.writeMem(0x14aa, { 0x36, 0x45 });
        gbc.writeMem(0xfe4d, { 0x0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3ca, gbc.sp());
        EXPECT(0x14ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xfe4d));
        // 36 003E
        gbc.setState(0x18e0, 0xd4e2, 0xe7e0, 0xb6f2, 0x6c7f, 0x94d2, 0x0, 0x0);
        gbc.writeMem(0x18e0, { 0x36, 0xca });
        gbc.writeMem(0x94d2, { 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd4e2, gbc.sp());
        EXPECT(0x18e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0x94d2));
        // 36 0042
        gbc.setState(0x2740, 0xedc7, 0x61a0, 0xc683, 0xb661, 0xb9e8, 0x1, 0x1);
        gbc.writeMem(0x2740, { 0x36, 0x27 });
        gbc.writeMem(0xb9e8, { 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xedc7, gbc.sp());
        EXPECT(0x2742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb9e8));
        // 36 0045
        gbc.setState(0x8405, 0xf89d, 0x6830, 0x58ca, 0x6c5d, 0x82a8, 0x1, 0x0);
        gbc.writeMem(0x82a8, { 0x0 });
        gbc.writeMem(0x8405, { 0x36, 0x31 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf89d, gbc.sp());
        EXPECT(0x8407, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x82a8));
        EXPECT(0x36, gbc.readMem(0x8405));
        EXPECT(0x31, gbc.readMem(0x8406));
        // 36 0046
        gbc.setState(0xbb, 0x475, 0x35f0, 0x81d, 0x31d7, 0x83ba, 0x0, 0x1);
        gbc.writeMem(0xbb, { 0x36, 0xf3 });
        gbc.writeMem(0x83ba, { 0x0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x475, gbc.sp());
        EXPECT(0xbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0x83ba));
        // 36 004A
        gbc.setState(0xef28, 0xd1e0, 0x5340, 0x9ba0, 0x1904, 0xb9bc, 0x0, 0x1);
        gbc.writeMem(0xb9bc, { 0x0 });
        gbc.writeMem(0xef28, { 0x36, 0x36 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd1e0, gbc.sp());
        EXPECT(0xef2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xb9bc));
        EXPECT(0x36, gbc.readMem(0xef28));
        EXPECT(0x36, gbc.readMem(0xef29));
        // 36 004F
        gbc.setState(0xb6b3, 0x2992, 0xa4a0, 0xcce5, 0x498d, 0xc837, 0x1, 0x1);
        gbc.writeMem(0xb6b3, { 0x36, 0x15 });
        gbc.writeMem(0xc837, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2992, gbc.sp());
        EXPECT(0xb6b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xb6b3));
        EXPECT(0x15, gbc.readMem(0xb6b4));
        EXPECT(0x15, gbc.readMem(0xc837));
        // 36 0053
        gbc.setState(0x8c5d, 0x3987, 0x340, 0x859d, 0x1930, 0x9757, 0x1, 0x0);
        gbc.writeMem(0x8c5d, { 0x36, 0x72 });
        gbc.writeMem(0x9757, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3987, gbc.sp());
        EXPECT(0x8c5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8c5d));
        EXPECT(0x72, gbc.readMem(0x8c5e));
        EXPECT(0x72, gbc.readMem(0x9757));
        // 36 0055
        gbc.setState(0xc59d, 0xd26b, 0xecd0, 0x679a, 0xf888, 0xac4b, 0x1, 0x0);
        gbc.writeMem(0xac4b, { 0x0 });
        gbc.writeMem(0xc59d, { 0x36, 0x36 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd26b, gbc.sp());
        EXPECT(0xc59f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xac4b));
        EXPECT(0x36, gbc.readMem(0xc59d));
        EXPECT(0x36, gbc.readMem(0xc59e));
        // 36 0056
        gbc.setState(0x5b52, 0x33cf, 0x27d0, 0x1247, 0x8584, 0xd782, 0x1, 0x0);
        gbc.writeMem(0x5b52, { 0x36, 0x33 });
        gbc.writeMem(0xd782, { 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x33cf, gbc.sp());
        EXPECT(0x5b54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd782));
        // 36 005A
        gbc.setState(0xca63, 0x10d4, 0x6320, 0x7639, 0x4fae, 0xdb48, 0x1, 0x0);
        gbc.writeMem(0xca63, { 0x36, 0xd5 });
        gbc.writeMem(0xdb48, { 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x10d4, gbc.sp());
        EXPECT(0xca65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xca63));
        EXPECT(0xd5, gbc.readMem(0xca64));
        EXPECT(0xd5, gbc.readMem(0xdb48));
        // 36 005C
        gbc.setState(0x971, 0x4674, 0x16e0, 0xbf01, 0xee94, 0xbc59, 0x0, 0x0);
        gbc.writeMem(0x971, { 0x36, 0x3b });
        gbc.writeMem(0xbc59, { 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4674, gbc.sp());
        EXPECT(0x973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xbc59));
        // 36 005D
        gbc.setState(0x34bf, 0x4dad, 0xa40, 0xa30, 0xc285, 0x9bdd, 0x1, 0x0);
        gbc.writeMem(0x34bf, { 0x36, 0x66 });
        gbc.writeMem(0x9bdd, { 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4dad, gbc.sp());
        EXPECT(0x34c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9bdd));
        // 36 005F
        gbc.setState(0x3fed, 0xb198, 0x72f0, 0x1d82, 0x17fc, 0x8ff2, 0x1, 0x0);
        gbc.writeMem(0x3fed, { 0x36, 0xc0 });
        gbc.writeMem(0x8ff2, { 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb198, gbc.sp());
        EXPECT(0x3fef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0x8ff2));
        // 36 0060
        gbc.setState(0x94b5, 0x2004, 0xd6e0, 0x7b42, 0xd1a7, 0xdf98, 0x0, 0x0);
        gbc.writeMem(0x94b5, { 0x36, 0x91 });
        gbc.writeMem(0xdf98, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2004, gbc.sp());
        EXPECT(0x94b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x94b5));
        EXPECT(0x91, gbc.readMem(0x94b6));
        EXPECT(0x91, gbc.readMem(0xdf98));
        // 36 0062
        gbc.setState(0xcd95, 0x3812, 0x1bf0, 0xd47f, 0xf467, 0xe695, 0x0, 0x0);
        gbc.writeMem(0xcd95, { 0x36, 0x63 });
        gbc.writeMem(0xe695, { 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3812, gbc.sp());
        EXPECT(0xcd97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xcd95));
        EXPECT(0x63, gbc.readMem(0xcd96));
        EXPECT(0x63, gbc.readMem(0xe695));
        // 36 0065
        gbc.setState(0x2a2, 0x2971, 0xe470, 0xe10, 0xa2d2, 0xacaf, 0x1, 0x0);
        gbc.writeMem(0x2a2, { 0x36, 0xd7 });
        gbc.writeMem(0xacaf, { 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2971, gbc.sp());
        EXPECT(0x2a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xacaf));
        // 36 0068
        gbc.setState(0x2eda, 0x2e75, 0x4c40, 0x71a5, 0x4f17, 0x9b72, 0x0, 0x0);
        gbc.writeMem(0x2eda, { 0x36, 0xc2 });
        gbc.writeMem(0x9b72, { 0x0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2e75, gbc.sp());
        EXPECT(0x2edc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9b72));
        // 36 0069
        gbc.setState(0x9bdc, 0x8555, 0x1400, 0x9472, 0x9306, 0x9829, 0x1, 0x0);
        gbc.writeMem(0x9829, { 0x0 });
        gbc.writeMem(0x9bdc, { 0x36, 0x77 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8555, gbc.sp());
        EXPECT(0x9bde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x9829));
        EXPECT(0x36, gbc.readMem(0x9bdc));
        EXPECT(0x77, gbc.readMem(0x9bdd));
        // 36 006A
        gbc.setState(0x136c, 0x331c, 0x9130, 0xfa7c, 0xb594, 0x985b, 0x1, 0x0);
        gbc.writeMem(0x136c, { 0x36, 0x8b });
        gbc.writeMem(0x985b, { 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x331c, gbc.sp());
        EXPECT(0x136e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x985b));
        // 36 006B
        gbc.setState(0x64b8, 0x590b, 0xa1a0, 0xaf67, 0xb1e8, 0xd5d2, 0x1, 0x1);
        gbc.writeMem(0x64b8, { 0x36, 0x95 });
        gbc.writeMem(0xd5d2, { 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x590b, gbc.sp());
        EXPECT(0x64ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd5d2));
        // 36 006C
        gbc.setState(0x2442, 0x5f02, 0x3690, 0x64fd, 0x2a82, 0xb574, 0x0, 0x1);
        gbc.writeMem(0x2442, { 0x36, 0xfa });
        gbc.writeMem(0xb574, { 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5f02, gbc.sp());
        EXPECT(0x2444, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb574));
        // 36 006E
        gbc.setState(0x692c, 0xb20f, 0xdd20, 0xfa21, 0xba6f, 0xddbf, 0x0, 0x1);
        gbc.writeMem(0x692c, { 0x36, 0x65 });
        gbc.writeMem(0xddbf, { 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb20f, gbc.sp());
        EXPECT(0x692e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xddbf));
        // 36 0070
        gbc.setState(0x7407, 0x8a81, 0x3bc0, 0xa4e7, 0xda5, 0xba61, 0x0, 0x1);
        gbc.writeMem(0x7407, { 0x36, 0xd3 });
        gbc.writeMem(0xba61, { 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8a81, gbc.sp());
        EXPECT(0x7409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xba61));
        // 36 0072
        gbc.setState(0x8457, 0xc4b8, 0x3d90, 0xbbeb, 0x362d, 0x9d71, 0x0, 0x1);
        gbc.writeMem(0x8457, { 0x36, 0xc0 });
        gbc.writeMem(0x9d71, { 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc4b8, gbc.sp());
        EXPECT(0x8459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8457));
        EXPECT(0xc0, gbc.readMem(0x8458));
        EXPECT(0xc0, gbc.readMem(0x9d71));
        // 36 0076
        gbc.setState(0x4cd7, 0xb9f8, 0x7c70, 0x6e67, 0xc8e5, 0xabf4, 0x0, 0x0);
        gbc.writeMem(0x4cd7, { 0x36, 0xb2 });
        gbc.writeMem(0xabf4, { 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb9f8, gbc.sp());
        EXPECT(0x4cd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xabf4));
        // 36 0079
        gbc.setState(0x3587, 0xde89, 0x3fb0, 0xa1a7, 0xacf6, 0xf4ee, 0x0, 0x1);
        gbc.writeMem(0x3587, { 0x36, 0x42 });
        gbc.writeMem(0xf4ee, { 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xde89, gbc.sp());
        EXPECT(0x3589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xf4ee));
        // 36 007B
        gbc.setState(0x8ce1, 0x63e8, 0xb150, 0x6814, 0x6c6f, 0xd01c, 0x0, 0x1);
        gbc.writeMem(0x8ce1, { 0x36, 0x7 });
        gbc.writeMem(0xd01c, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x63e8, gbc.sp());
        EXPECT(0x8ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8ce1));
        EXPECT(0x7, gbc.readMem(0x8ce2));
        EXPECT(0x7, gbc.readMem(0xd01c));
        // 36 007C
        gbc.setState(0x55c3, 0xfe4f, 0xe050, 0xccab, 0xea68, 0xad2d, 0x0, 0x1);
        gbc.writeMem(0x55c3, { 0x36, 0x3a });
        gbc.writeMem(0xad2d, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xfe4f, gbc.sp());
        EXPECT(0x55c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xad2d));
        // 36 007D
        gbc.setState(0xd35e, 0xe828, 0xeca0, 0xad06, 0xe5a4, 0xd4a9, 0x1, 0x1);
        gbc.writeMem(0xd35e, { 0x36, 0xc1 });
        gbc.writeMem(0xd4a9, { 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe828, gbc.sp());
        EXPECT(0xd360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xd35e));
        EXPECT(0xc1, gbc.readMem(0xd35f));
        EXPECT(0xc1, gbc.readMem(0xd4a9));
        // 36 007E
        gbc.setState(0x4601, 0xa3e1, 0xfe50, 0x7aea, 0x2f0d, 0x9253, 0x0, 0x0);
        gbc.writeMem(0x4601, { 0x36, 0xb9 });
        gbc.writeMem(0x9253, { 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa3e1, gbc.sp());
        EXPECT(0x4603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9253));
        // 36 007F
        gbc.setState(0xe20a, 0x1e5e, 0x2f80, 0x87b, 0x79b5, 0xc86c, 0x0, 0x1);
        gbc.writeMem(0xc86c, { 0x0 });
        gbc.writeMem(0xe20a, { 0x36, 0x96 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1e5e, gbc.sp());
        EXPECT(0xe20c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xc86c));
        EXPECT(0x36, gbc.readMem(0xe20a));
        EXPECT(0x96, gbc.readMem(0xe20b));
        // 36 0082
        gbc.setState(0x9c09, 0x7e1c, 0xb100, 0x806c, 0x45b9, 0xe6b0, 0x0, 0x0);
        gbc.writeMem(0x9c09, { 0x36, 0xf4 });
        gbc.writeMem(0xe6b0, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7e1c, gbc.sp());
        EXPECT(0x9c0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x9c09));
        EXPECT(0xf4, gbc.readMem(0x9c0a));
        EXPECT(0xf4, gbc.readMem(0xe6b0));
        // 36 0083
        gbc.setState(0x6446, 0x5a28, 0xc50, 0x86b6, 0x6a7d, 0xa88d, 0x0, 0x1);
        gbc.writeMem(0x6446, { 0x36, 0x4 });
        gbc.writeMem(0xa88d, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5a28, gbc.sp());
        EXPECT(0x6448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa88d));
        // 36 0084
        gbc.setState(0x2359, 0x7202, 0xe2c0, 0xe8b6, 0x79d1, 0xdd89, 0x1, 0x0);
        gbc.writeMem(0x2359, { 0x36, 0x46 });
        gbc.writeMem(0xdd89, { 0x0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7202, gbc.sp());
        EXPECT(0x235b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xdd89));
        // 36 0085
        gbc.setState(0x3985, 0x5f6f, 0x1e10, 0x8407, 0xebab, 0xc52a, 0x1, 0x0);
        gbc.writeMem(0x3985, { 0x36, 0x27 });
        gbc.writeMem(0xc52a, { 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5f6f, gbc.sp());
        EXPECT(0x3987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc52a));
        // 36 0087
        gbc.setState(0xa8e1, 0xd04f, 0x7ac0, 0xa089, 0xed4d, 0xb9bf, 0x1, 0x0);
        gbc.writeMem(0xa8e1, { 0x36, 0xb2 });
        gbc.writeMem(0xb9bf, { 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd04f, gbc.sp());
        EXPECT(0xa8e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xa8e1));
        EXPECT(0xb2, gbc.readMem(0xa8e2));
        EXPECT(0xb2, gbc.readMem(0xb9bf));
        // 36 008A
        gbc.setState(0xc758, 0x5904, 0xdb70, 0x19f7, 0xfa4e, 0x9902, 0x1, 0x0);
        gbc.writeMem(0x9902, { 0x0 });
        gbc.writeMem(0xc758, { 0x36, 0xb5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5904, gbc.sp());
        EXPECT(0xc75a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9902));
        EXPECT(0x36, gbc.readMem(0xc758));
        EXPECT(0xb5, gbc.readMem(0xc759));
        // 36 008C
        gbc.setState(0x7a32, 0xa3c5, 0x9390, 0x6b0b, 0xc0c6, 0xaad2, 0x1, 0x1);
        gbc.writeMem(0x7a32, { 0x36, 0x3e });
        gbc.writeMem(0xaad2, { 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa3c5, gbc.sp());
        EXPECT(0x7a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xaad2));
        // 36 008E
        gbc.setState(0xb870, 0x3fb9, 0x78a0, 0x61fb, 0xd577, 0xeccb, 0x0, 0x1);
        gbc.writeMem(0xb870, { 0x36, 0xaa });
        gbc.writeMem(0xeccb, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3fb9, gbc.sp());
        EXPECT(0xb872, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xb870));
        EXPECT(0xaa, gbc.readMem(0xb871));
        EXPECT(0xaa, gbc.readMem(0xeccb));
        // 36 0093
        gbc.setState(0x5f53, 0xbdb1, 0xdff0, 0x7468, 0xac0b, 0x835a, 0x0, 0x1);
        gbc.writeMem(0x5f53, { 0x36, 0x83 });
        gbc.writeMem(0x835a, { 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbdb1, gbc.sp());
        EXPECT(0x5f55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x835a));
        // 36 0094
        gbc.setState(0x91f7, 0xe493, 0x2b60, 0xac4f, 0xb5bd, 0xbf62, 0x1, 0x1);
        gbc.writeMem(0x91f7, { 0x36, 0x3f });
        gbc.writeMem(0xbf62, { 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe493, gbc.sp());
        EXPECT(0x91f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x91f7));
        EXPECT(0x3f, gbc.readMem(0x91f8));
        EXPECT(0x3f, gbc.readMem(0xbf62));
        // 36 0096
        gbc.setState(0xaa41, 0xd5f, 0x1410, 0x9c52, 0xf9d3, 0xed91, 0x0, 0x1);
        gbc.writeMem(0xaa41, { 0x36, 0xa5 });
        gbc.writeMem(0xed91, { 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd5f, gbc.sp());
        EXPECT(0xaa43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xaa41));
        EXPECT(0xa5, gbc.readMem(0xaa42));
        EXPECT(0xa5, gbc.readMem(0xed91));
        // 36 0097
        gbc.setState(0x3229, 0xbf21, 0x47d0, 0xf2a5, 0xc470, 0xe4be, 0x1, 0x0);
        gbc.writeMem(0x3229, { 0x36, 0xa5 });
        gbc.writeMem(0xe4be, { 0x0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xbf21, gbc.sp());
        EXPECT(0x322b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xe4be));
        // 36 009A
        gbc.setState(0x1d43, 0xfb3e, 0xed10, 0x1b5a, 0x8d41, 0xaef6, 0x0, 0x0);
        gbc.writeMem(0x1d43, { 0x36, 0x62 });
        gbc.writeMem(0xaef6, { 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xfb3e, gbc.sp());
        EXPECT(0x1d45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xaef6));
        // 36 009C
        gbc.setState(0x148f, 0x1da7, 0x1d00, 0x779d, 0x82e6, 0xbb8b, 0x1, 0x0);
        gbc.writeMem(0x148f, { 0x36, 0xf8 });
        gbc.writeMem(0xbb8b, { 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1da7, gbc.sp());
        EXPECT(0x1491, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xbb8b));
        // 36 009E
        gbc.setState(0xb002, 0x2882, 0x38f0, 0x15b2, 0x5893, 0x8940, 0x0, 0x1);
        gbc.writeMem(0x8940, { 0x0 });
        gbc.writeMem(0xb002, { 0x36, 0x2c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2882, gbc.sp());
        EXPECT(0xb004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8940));
        EXPECT(0x36, gbc.readMem(0xb002));
        EXPECT(0x2c, gbc.readMem(0xb003));
        // 36 00A3
        gbc.setState(0x9993, 0x5588, 0xda30, 0x343c, 0x157f, 0xa381, 0x0, 0x0);
        gbc.writeMem(0x9993, { 0x36, 0x5c });
        gbc.writeMem(0xa381, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x5588, gbc.sp());
        EXPECT(0x9995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x9993));
        EXPECT(0x5c, gbc.readMem(0x9994));
        EXPECT(0x5c, gbc.readMem(0xa381));
        // 36 00A4
        gbc.setState(0xb173, 0x8bdc, 0x19f0, 0x70b4, 0xcdc0, 0x91c3, 0x0, 0x0);
        gbc.writeMem(0x91c3, { 0x0 });
        gbc.writeMem(0xb173, { 0x36, 0xe3 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8bdc, gbc.sp());
        EXPECT(0xb175, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x91c3));
        EXPECT(0x36, gbc.readMem(0xb173));
        EXPECT(0xe3, gbc.readMem(0xb174));
        // 36 00A6
        gbc.setState(0xbddd, 0xcaef, 0x1c10, 0x61, 0xd630, 0xb062, 0x0, 0x0);
        gbc.writeMem(0xb062, { 0x0 });
        gbc.writeMem(0xbddd, { 0x36, 0xc9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xcaef, gbc.sp());
        EXPECT(0xbddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb062));
        EXPECT(0x36, gbc.readMem(0xbddd));
        EXPECT(0xc9, gbc.readMem(0xbdde));
        // 36 00A8
        gbc.setState(0xa049, 0xf953, 0x3c40, 0x6dda, 0x70e7, 0xf2a2, 0x0, 0x0);
        gbc.writeMem(0xa049, { 0x36, 0xf1 });
        gbc.writeMem(0xf2a2, { 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf953, gbc.sp());
        EXPECT(0xa04b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xa049));
        EXPECT(0xf1, gbc.readMem(0xa04a));
        EXPECT(0xf1, gbc.readMem(0xf2a2));
        // 36 00AC
        gbc.setState(0xd8b9, 0xacef, 0xa590, 0xaa01, 0xe44f, 0x914b, 0x0, 0x1);
        gbc.writeMem(0x914b, { 0x0 });
        gbc.writeMem(0xd8b9, { 0x36, 0x9a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xacef, gbc.sp());
        EXPECT(0xd8bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x914b));
        EXPECT(0x36, gbc.readMem(0xd8b9));
        EXPECT(0x9a, gbc.readMem(0xd8ba));
        // 36 00AD
        gbc.setState(0xb85a, 0xf3c5, 0xfc30, 0x3847, 0xc103, 0xb4ff, 0x0, 0x0);
        gbc.writeMem(0xb4ff, { 0x0 });
        gbc.writeMem(0xb85a, { 0x36, 0xe8 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf3c5, gbc.sp());
        EXPECT(0xb85c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xb4ff));
        EXPECT(0x36, gbc.readMem(0xb85a));
        EXPECT(0xe8, gbc.readMem(0xb85b));
        // 36 00AF
        gbc.setState(0xcd38, 0x6496, 0x1230, 0x35c0, 0xfc19, 0x9be6, 0x0, 0x0);
        gbc.writeMem(0x9be6, { 0x0 });
        gbc.writeMem(0xcd38, { 0x36, 0x9d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6496, gbc.sp());
        EXPECT(0xcd3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9be6));
        EXPECT(0x36, gbc.readMem(0xcd38));
        EXPECT(0x9d, gbc.readMem(0xcd39));
        // 36 00B1
        gbc.setState(0x14c0, 0xbb22, 0x700, 0x6df5, 0x2cae, 0xfcc2, 0x1, 0x0);
        gbc.writeMem(0x14c0, { 0x36, 0xd8 });
        gbc.writeMem(0xfcc2, { 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xbb22, gbc.sp());
        EXPECT(0x14c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xfcc2));
        // 36 00B4
        gbc.setState(0xcc4a, 0x54b3, 0x6060, 0x45c1, 0x7f23, 0xf40c, 0x0, 0x1);
        gbc.writeMem(0xcc4a, { 0x36, 0x19 });
        gbc.writeMem(0xf40c, { 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x54b3, gbc.sp());
        EXPECT(0xcc4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xcc4a));
        EXPECT(0x19, gbc.readMem(0xcc4b));
        EXPECT(0x19, gbc.readMem(0xf40c));
        // 36 00B6
        gbc.setState(0xaff6, 0x3c41, 0x180, 0x55a1, 0x9599, 0xa479, 0x1, 0x1);
        gbc.writeMem(0xa479, { 0x0 });
        gbc.writeMem(0xaff6, { 0x36, 0x4a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3c41, gbc.sp());
        EXPECT(0xaff8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xa479));
        EXPECT(0x36, gbc.readMem(0xaff6));
        EXPECT(0x4a, gbc.readMem(0xaff7));
        // 36 00B8
        gbc.setState(0x27a7, 0x8233, 0x93d0, 0x70bf, 0x2cb4, 0x9de3, 0x1, 0x0);
        gbc.writeMem(0x27a7, { 0x36, 0xab });
        gbc.writeMem(0x9de3, { 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8233, gbc.sp());
        EXPECT(0x27a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0x9de3));
        // 36 00BC
        gbc.setState(0xcfa6, 0x9c80, 0xc3e0, 0xac32, 0xf8c2, 0xcc25, 0x0, 0x1);
        gbc.writeMem(0xcc25, { 0x0 });
        gbc.writeMem(0xcfa6, { 0x36, 0xca });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9c80, gbc.sp());
        EXPECT(0xcfa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xcc25));
        EXPECT(0x36, gbc.readMem(0xcfa6));
        EXPECT(0xca, gbc.readMem(0xcfa7));
        // 36 00BD
        gbc.setState(0x59ec, 0x3d72, 0xfe10, 0x7a9c, 0x7296, 0xd922, 0x1, 0x1);
        gbc.writeMem(0x59ec, { 0x36, 0x1b });
        gbc.writeMem(0xd922, { 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3d72, gbc.sp());
        EXPECT(0x59ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xd922));
        // 36 00C1
        gbc.setState(0x5311, 0x22c9, 0x760, 0x56a4, 0x7747, 0x8dcc, 0x0, 0x0);
        gbc.writeMem(0x5311, { 0x36, 0xbe });
        gbc.writeMem(0x8dcc, { 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x22c9, gbc.sp());
        EXPECT(0x5313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0x8dcc));
        // 36 00C2
        gbc.setState(0x6a13, 0x9b13, 0xe2f0, 0x771b, 0xf859, 0xfc86, 0x0, 0x1);
        gbc.writeMem(0x6a13, { 0x36, 0x76 });
        gbc.writeMem(0xfc86, { 0x0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9b13, gbc.sp());
        EXPECT(0x6a15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xfc86));
        // 36 00C6
        gbc.setState(0xe74b, 0x97b9, 0x84f0, 0x58e6, 0x801e, 0x9c58, 0x0, 0x0);
        gbc.writeMem(0x9c58, { 0x0 });
        gbc.writeMem(0xe74b, { 0x36, 0x37 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x97b9, gbc.sp());
        EXPECT(0xe74d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9c58));
        EXPECT(0x36, gbc.readMem(0xe74b));
        EXPECT(0x37, gbc.readMem(0xe74c));
        // 36 00CA
        gbc.setState(0x16a0, 0x3702, 0x6550, 0x9202, 0x55ff, 0xac30, 0x1, 0x0);
        gbc.writeMem(0x16a0, { 0x36, 0x23 });
        gbc.writeMem(0xac30, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3702, gbc.sp());
        EXPECT(0x16a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xac30));
        // 36 00D0
        gbc.setState(0x52ba, 0x6a5, 0x3820, 0x411f, 0xa9a0, 0xacc4, 0x0, 0x0);
        gbc.writeMem(0x52ba, { 0x36, 0x30 });
        gbc.writeMem(0xacc4, { 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6a5, gbc.sp());
        EXPECT(0x52bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xacc4));
        // 36 00D2
        gbc.setState(0x3a68, 0x1b3e, 0x8d00, 0x60d4, 0x5003, 0xddd8, 0x0, 0x0);
        gbc.writeMem(0x3a68, { 0x36, 0x94 });
        gbc.writeMem(0xddd8, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1b3e, gbc.sp());
        EXPECT(0x3a6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xddd8));
        // 36 00D4
        gbc.setState(0x43fe, 0x9361, 0xa4f0, 0x5804, 0x9339, 0xefdf, 0x0, 0x1);
        gbc.writeMem(0x43fe, { 0x36, 0x5b });
        gbc.writeMem(0xefdf, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9361, gbc.sp());
        EXPECT(0x4400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xefdf));
        // 36 00D6
        gbc.setState(0x80f5, 0x339a, 0x1670, 0x566b, 0xbf2c, 0xbca1, 0x0, 0x1);
        gbc.writeMem(0x80f5, { 0x36, 0x41 });
        gbc.writeMem(0xbca1, { 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x339a, gbc.sp());
        EXPECT(0x80f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x80f5));
        EXPECT(0x41, gbc.readMem(0x80f6));
        EXPECT(0x41, gbc.readMem(0xbca1));
        // 36 00D8
        gbc.setState(0x4150, 0x14af, 0x4e50, 0x949c, 0x6f95, 0xb089, 0x1, 0x1);
        gbc.writeMem(0x4150, { 0x36, 0x4c });
        gbc.writeMem(0xb089, { 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x14af, gbc.sp());
        EXPECT(0x4152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb089));
        // 36 00DA
        gbc.setState(0x83e2, 0x2514, 0x7f50, 0x226f, 0x7dda, 0x9a81, 0x1, 0x0);
        gbc.writeMem(0x83e2, { 0x36, 0x6 });
        gbc.writeMem(0x9a81, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2514, gbc.sp());
        EXPECT(0x83e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x83e2));
        EXPECT(0x6, gbc.readMem(0x83e3));
        EXPECT(0x6, gbc.readMem(0x9a81));
        // 36 00DC
        gbc.setState(0x3241, 0x5aca, 0xd560, 0x319f, 0xb45a, 0xb725, 0x0, 0x1);
        gbc.writeMem(0x3241, { 0x36, 0xd4 });
        gbc.writeMem(0xb725, { 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5aca, gbc.sp());
        EXPECT(0x3243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb725));
        // 36 00DD
        gbc.setState(0x58c7, 0x439f, 0xc770, 0x25ce, 0x9105, 0xaf76, 0x1, 0x0);
        gbc.writeMem(0x58c7, { 0x36, 0x91 });
        gbc.writeMem(0xaf76, { 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x439f, gbc.sp());
        EXPECT(0x58c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xaf76));
        // 36 00DF
        gbc.setState(0x26c2, 0x2f0c, 0x7fa0, 0x90ce, 0xbb78, 0xdd83, 0x0, 0x0);
        gbc.writeMem(0x26c2, { 0x36, 0x3f });
        gbc.writeMem(0xdd83, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2f0c, gbc.sp());
        EXPECT(0x26c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xdd83));
        // 36 00E0
        gbc.setState(0xca34, 0xc385, 0x4f80, 0x7b7e, 0x8ca9, 0xd735, 0x0, 0x0);
        gbc.writeMem(0xca34, { 0x36, 0xff });
        gbc.writeMem(0xd735, { 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc385, gbc.sp());
        EXPECT(0xca36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xca34));
        EXPECT(0xff, gbc.readMem(0xca35));
        EXPECT(0xff, gbc.readMem(0xd735));
        // 36 00E2
        gbc.setState(0x8677, 0x4906, 0xa170, 0xe253, 0xf8b1, 0xc83a, 0x1, 0x0);
        gbc.writeMem(0x8677, { 0x36, 0xf0 });
        gbc.writeMem(0xc83a, { 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4906, gbc.sp());
        EXPECT(0x8679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8677));
        EXPECT(0xf0, gbc.readMem(0x8678));
        EXPECT(0xf0, gbc.readMem(0xc83a));
        // 36 00E5
        gbc.setState(0x1ac6, 0xb067, 0xacb0, 0xd4d3, 0xd4a9, 0xe5ea, 0x0, 0x0);
        gbc.writeMem(0x1ac6, { 0x36, 0x1c });
        gbc.writeMem(0xe5ea, { 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb067, gbc.sp());
        EXPECT(0x1ac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xe5ea));
        // 36 00E8
        gbc.setState(0xbbd5, 0x9172, 0x9ef0, 0xa8eb, 0x31ab, 0xff6d, 0x1, 0x1);
        gbc.writeMem(0xbbd5, { 0x36, 0xaa });
        gbc.writeMem(0xff6d, { 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9172, gbc.sp());
        EXPECT(0xbbd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xbbd5));
        EXPECT(0xaa, gbc.readMem(0xbbd6));
        EXPECT(0xaa, gbc.readMem(0xff6d));
        // 36 00EA
        gbc.setState(0x927d, 0xcfb0, 0x10b0, 0x7d48, 0x2f91, 0xdec0, 0x1, 0x1);
        gbc.writeMem(0x927d, { 0x36, 0x94 });
        gbc.writeMem(0xdec0, { 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xcfb0, gbc.sp());
        EXPECT(0x927f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x927d));
        EXPECT(0x94, gbc.readMem(0x927e));
        EXPECT(0x94, gbc.readMem(0xdec0));
        // 36 00ED
        gbc.setState(0x8a2c, 0x96fa, 0x23a0, 0x2f5d, 0x75e7, 0x9271, 0x0, 0x0);
        gbc.writeMem(0x8a2c, { 0x36, 0x56 });
        gbc.writeMem(0x9271, { 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x96fa, gbc.sp());
        EXPECT(0x8a2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8a2c));
        EXPECT(0x56, gbc.readMem(0x8a2d));
        EXPECT(0x56, gbc.readMem(0x9271));
        // 36 00F1
        gbc.setState(0xb693, 0x8bd4, 0x45c0, 0x6379, 0x4c4b, 0xfe66, 0x0, 0x1);
        gbc.writeMem(0xb693, { 0x36, 0xb0 });
        gbc.writeMem(0xfe66, { 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8bd4, gbc.sp());
        EXPECT(0xb695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xb693));
        EXPECT(0xb0, gbc.readMem(0xb694));
        EXPECT(0xb0, gbc.readMem(0xfe66));
        // 36 00F3
        gbc.setState(0xa41d, 0x6e80, 0x1750, 0xe4d, 0xb2d, 0x868d, 0x1, 0x1);
        gbc.writeMem(0x868d, { 0x0 });
        gbc.writeMem(0xa41d, { 0x36, 0xcf });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6e80, gbc.sp());
        EXPECT(0xa41f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0x868d));
        EXPECT(0x36, gbc.readMem(0xa41d));
        EXPECT(0xcf, gbc.readMem(0xa41e));
        // 36 00F4
        gbc.setState(0xc03c, 0x2884, 0xd8b0, 0x75c3, 0x758e, 0xd435, 0x0, 0x0);
        gbc.writeMem(0xc03c, { 0x36, 0x75 });
        gbc.writeMem(0xd435, { 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2884, gbc.sp());
        EXPECT(0xc03e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xc03c));
        EXPECT(0x75, gbc.readMem(0xc03d));
        EXPECT(0x75, gbc.readMem(0xd435));
        // 36 00F5
        gbc.setState(0xe361, 0xb2c3, 0x450, 0x7467, 0x1172, 0xa697, 0x1, 0x0);
        gbc.writeMem(0xa697, { 0x0 });
        gbc.writeMem(0xe361, { 0x36, 0xf3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb2c3, gbc.sp());
        EXPECT(0xe363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xa697));
        EXPECT(0x36, gbc.readMem(0xe361));
        EXPECT(0xf3, gbc.readMem(0xe362));
        // 36 00F8
        gbc.setState(0x9637, 0x4a12, 0x8f10, 0xa8e2, 0x15b7, 0xbf71, 0x0, 0x1);
        gbc.writeMem(0x9637, { 0x36, 0xe7 });
        gbc.writeMem(0xbf71, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4a12, gbc.sp());
        EXPECT(0x9639, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x9637));
        EXPECT(0xe7, gbc.readMem(0x9638));
        EXPECT(0xe7, gbc.readMem(0xbf71));
        // 36 00F9
        gbc.setState(0x6d45, 0x71f7, 0xc320, 0x2e49, 0xb95b, 0xbd98, 0x1, 0x1);
        gbc.writeMem(0x6d45, { 0x36, 0xe2 });
        gbc.writeMem(0xbd98, { 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x71f7, gbc.sp());
        EXPECT(0x6d47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xbd98));
        // 36 00FA
        gbc.setState(0x6c54, 0x27a4, 0xd740, 0xca10, 0x5703, 0xd3ed, 0x0, 0x0);
        gbc.writeMem(0x6c54, { 0x36, 0xa2 });
        gbc.writeMem(0xd3ed, { 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x27a4, gbc.sp());
        EXPECT(0x6c56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xd3ed));
        // 36 00FD
        gbc.setState(0x7891, 0x5b03, 0xe10, 0xb6e1, 0xe17d, 0xfca0, 0x0, 0x1);
        gbc.writeMem(0x7891, { 0x36, 0x93 });
        gbc.writeMem(0xfca0, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5b03, gbc.sp());
        EXPECT(0x7893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xfca0));
        // 36 00FE
        gbc.setState(0xa6e9, 0xa206, 0x72b0, 0x3e19, 0x8ea9, 0x9a55, 0x1, 0x0);
        gbc.writeMem(0x9a55, { 0x0 });
        gbc.writeMem(0xa6e9, { 0x36, 0x1f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa206, gbc.sp());
        EXPECT(0xa6eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0x9a55));
        EXPECT(0x36, gbc.readMem(0xa6e9));
        EXPECT(0x1f, gbc.readMem(0xa6ea));
        // 36 00FF
        gbc.setState(0xa157, 0x5d83, 0xc910, 0x52e1, 0x9f7a, 0xe370, 0x1, 0x1);
        gbc.writeMem(0xa157, { 0x36, 0xaa });
        gbc.writeMem(0xe370, { 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5d83, gbc.sp());
        EXPECT(0xa159, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xa157));
        EXPECT(0xaa, gbc.readMem(0xa158));
        EXPECT(0xaa, gbc.readMem(0xe370));
        // 36 0101
        gbc.setState(0xd8b9, 0x6a37, 0x7830, 0x3baa, 0xd91d, 0x8aec, 0x1, 0x1);
        gbc.writeMem(0x8aec, { 0x0 });
        gbc.writeMem(0xd8b9, { 0x36, 0x9a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6a37, gbc.sp());
        EXPECT(0xd8bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8aec));
        EXPECT(0x36, gbc.readMem(0xd8b9));
        EXPECT(0x9a, gbc.readMem(0xd8ba));
        // 36 0102
        gbc.setState(0xd71b, 0xda19, 0x96d0, 0xb7b, 0x8cbf, 0xdd27, 0x1, 0x1);
        gbc.writeMem(0xd71b, { 0x36, 0xbd });
        gbc.writeMem(0xdd27, { 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xda19, gbc.sp());
        EXPECT(0xd71d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xd71b));
        EXPECT(0xbd, gbc.readMem(0xd71c));
        EXPECT(0xbd, gbc.readMem(0xdd27));
        // 36 0103
        gbc.setState(0x40a7, 0x525c, 0x6ef0, 0x66a6, 0xe00b, 0xeb2a, 0x0, 0x1);
        gbc.writeMem(0x40a7, { 0x36, 0x94 });
        gbc.writeMem(0xeb2a, { 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x525c, gbc.sp());
        EXPECT(0x40a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xeb2a));
        // 36 0106
        gbc.setState(0x69c7, 0x9faf, 0xd2c0, 0x3718, 0xcc89, 0xe9ed, 0x1, 0x0);
        gbc.writeMem(0x69c7, { 0x36, 0x8f });
        gbc.writeMem(0xe9ed, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9faf, gbc.sp());
        EXPECT(0x69c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe9ed));
        // 36 0107
        gbc.setState(0x99d7, 0x6e8e, 0xf8d0, 0x602b, 0xd1f6, 0xf1f3, 0x1, 0x0);
        gbc.writeMem(0x99d7, { 0x36, 0x63 });
        gbc.writeMem(0xf1f3, { 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6e8e, gbc.sp());
        EXPECT(0x99d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x99d7));
        EXPECT(0x63, gbc.readMem(0x99d8));
        EXPECT(0x63, gbc.readMem(0xf1f3));
        // 36 0108
        gbc.setState(0x265e, 0x11cf, 0x3800, 0x84b, 0x64cb, 0xc80f, 0x0, 0x0);
        gbc.writeMem(0x265e, { 0x36, 0x17 });
        gbc.writeMem(0xc80f, { 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x11cf, gbc.sp());
        EXPECT(0x2660, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xc80f));
        // 36 0109
        gbc.setState(0x5b94, 0x92b2, 0x1580, 0x714b, 0x4e1c, 0xea98, 0x1, 0x0);
        gbc.writeMem(0x5b94, { 0x36, 0xf9 });
        gbc.writeMem(0xea98, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x92b2, gbc.sp());
        EXPECT(0x5b96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xea98));
        // 36 010B
        gbc.setState(0x297e, 0x49e8, 0x7840, 0x433c, 0x878b, 0xf943, 0x0, 0x1);
        gbc.writeMem(0x297e, { 0x36, 0x72 });
        gbc.writeMem(0xf943, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x49e8, gbc.sp());
        EXPECT(0x2980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xf943));
        // 36 010E
        gbc.setState(0x6ee3, 0x3bc0, 0xe550, 0x2e41, 0x7298, 0xcd5e, 0x1, 0x0);
        gbc.writeMem(0x6ee3, { 0x36, 0xd6 });
        gbc.writeMem(0xcd5e, { 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3bc0, gbc.sp());
        EXPECT(0x6ee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xcd5e));
        // 36 010F
        gbc.setState(0x89a3, 0xcd7c, 0xe9a0, 0x194c, 0x43a1, 0xc6d5, 0x1, 0x1);
        gbc.writeMem(0x89a3, { 0x36, 0x96 });
        gbc.writeMem(0xc6d5, { 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xcd7c, gbc.sp());
        EXPECT(0x89a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x89a3));
        EXPECT(0x96, gbc.readMem(0x89a4));
        EXPECT(0x96, gbc.readMem(0xc6d5));
        // 36 0111
        gbc.setState(0xb9, 0x1a1f, 0xb9d0, 0x3bb8, 0x20d, 0xe713, 0x1, 0x1);
        gbc.writeMem(0xb9, { 0x36, 0xbc });
        gbc.writeMem(0xe713, { 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1a1f, gbc.sp());
        EXPECT(0xbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe713));
        // 36 0113
        gbc.setState(0xc63c, 0x1887, 0x8b20, 0x8a56, 0x494d, 0xe295, 0x1, 0x1);
        gbc.writeMem(0xc63c, { 0x36, 0x3e });
        gbc.writeMem(0xe295, { 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1887, gbc.sp());
        EXPECT(0xc63e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xc63c));
        EXPECT(0x3e, gbc.readMem(0xc63d));
        EXPECT(0x3e, gbc.readMem(0xe295));
        // 36 0118
        gbc.setState(0x3fd5, 0x8e5a, 0x84f0, 0xc30f, 0x37bb, 0xa666, 0x1, 0x0);
        gbc.writeMem(0x3fd5, { 0x36, 0xd8 });
        gbc.writeMem(0xa666, { 0x0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8e5a, gbc.sp());
        EXPECT(0x3fd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xa666));
        // 36 011A
        gbc.setState(0x15a9, 0x22e5, 0x7b0, 0x956c, 0x8ef6, 0xdc50, 0x0, 0x0);
        gbc.writeMem(0x15a9, { 0x36, 0xa4 });
        gbc.writeMem(0xdc50, { 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x22e5, gbc.sp());
        EXPECT(0x15ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xdc50));
        // 36 011C
        gbc.setState(0xc2a5, 0x59c7, 0xabc0, 0xe151, 0x4941, 0xfd29, 0x1, 0x0);
        gbc.writeMem(0xc2a5, { 0x36, 0xc6 });
        gbc.writeMem(0xfd29, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x59c7, gbc.sp());
        EXPECT(0xc2a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xc2a5));
        EXPECT(0xc6, gbc.readMem(0xc2a6));
        EXPECT(0xc6, gbc.readMem(0xfd29));
        // 36 011F
        gbc.setState(0xc0a4, 0x328b, 0x7870, 0xa88f, 0xb8dd, 0xc70a, 0x0, 0x1);
        gbc.writeMem(0xc0a4, { 0x36, 0x51 });
        gbc.writeMem(0xc70a, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x328b, gbc.sp());
        EXPECT(0xc0a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xc0a4));
        EXPECT(0x51, gbc.readMem(0xc0a5));
        EXPECT(0x51, gbc.readMem(0xc70a));
        // 36 0120
        gbc.setState(0xbce1, 0x51f4, 0x4e40, 0x2ca7, 0xe20, 0x8661, 0x0, 0x1);
        gbc.writeMem(0x8661, { 0x0 });
        gbc.writeMem(0xbce1, { 0x36, 0x4f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x51f4, gbc.sp());
        EXPECT(0xbce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0x8661));
        EXPECT(0x36, gbc.readMem(0xbce1));
        EXPECT(0x4f, gbc.readMem(0xbce2));
        // 36 0121
        gbc.setState(0x5d5f, 0xfb14, 0x3c70, 0x8add, 0xb391, 0xc71c, 0x1, 0x1);
        gbc.writeMem(0x5d5f, { 0x36, 0x76 });
        gbc.writeMem(0xc71c, { 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xfb14, gbc.sp());
        EXPECT(0x5d61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc71c));
        // 36 0122
        gbc.setState(0xbe32, 0x7659, 0xabc0, 0x55a6, 0xafd7, 0xdaa9, 0x0, 0x0);
        gbc.writeMem(0xbe32, { 0x36, 0xfe });
        gbc.writeMem(0xdaa9, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x7659, gbc.sp());
        EXPECT(0xbe34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xbe32));
        EXPECT(0xfe, gbc.readMem(0xbe33));
        EXPECT(0xfe, gbc.readMem(0xdaa9));
        // 36 0123
        gbc.setState(0xb3f5, 0xdab4, 0x6230, 0xa8b, 0xdeec, 0x9af3, 0x1, 0x0);
        gbc.writeMem(0x9af3, { 0x0 });
        gbc.writeMem(0xb3f5, { 0x36, 0x63 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xdab4, gbc.sp());
        EXPECT(0xb3f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0x9af3));
        EXPECT(0x36, gbc.readMem(0xb3f5));
        EXPECT(0x63, gbc.readMem(0xb3f6));
        // 36 0124
        gbc.setState(0xbf46, 0x430c, 0x9930, 0x1402, 0x8ea3, 0xfca2, 0x1, 0x1);
        gbc.writeMem(0xbf46, { 0x36, 0xe0 });
        gbc.writeMem(0xfca2, { 0x0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x430c, gbc.sp());
        EXPECT(0xbf48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xbf46));
        EXPECT(0xe0, gbc.readMem(0xbf47));
        EXPECT(0xe0, gbc.readMem(0xfca2));
        // 36 0125
        gbc.setState(0x69c6, 0xa79a, 0xd930, 0xd129, 0xcb3a, 0xe649, 0x0, 0x1);
        gbc.writeMem(0x69c6, { 0x36, 0xd3 });
        gbc.writeMem(0xe649, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa79a, gbc.sp());
        EXPECT(0x69c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xe649));
        // 36 0127
        gbc.setState(0x8216, 0x625a, 0x69f0, 0xfc83, 0x7436, 0x88b1, 0x0, 0x0);
        gbc.writeMem(0x8216, { 0x36, 0x22 });
        gbc.writeMem(0x88b1, { 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x625a, gbc.sp());
        EXPECT(0x8218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8216));
        EXPECT(0x22, gbc.readMem(0x8217));
        EXPECT(0x22, gbc.readMem(0x88b1));
        // 36 0128
        gbc.setState(0xd4c4, 0x79c8, 0x70e0, 0xab9c, 0xbe64, 0xdd5b, 0x0, 0x1);
        gbc.writeMem(0xd4c4, { 0x36, 0x51 });
        gbc.writeMem(0xdd5b, { 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x79c8, gbc.sp());
        EXPECT(0xd4c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xd4c4));
        EXPECT(0x51, gbc.readMem(0xd4c5));
        EXPECT(0x51, gbc.readMem(0xdd5b));
        // 36 012C
        gbc.setState(0x657c, 0xe31f, 0xfc20, 0x9599, 0x19be, 0xd54a, 0x1, 0x1);
        gbc.writeMem(0x657c, { 0x36, 0x17 });
        gbc.writeMem(0xd54a, { 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe31f, gbc.sp());
        EXPECT(0x657e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xd54a));
        // 36 0131
        gbc.setState(0x5a22, 0x86c1, 0x2b20, 0x6e7, 0x3ff3, 0xcda9, 0x0, 0x1);
        gbc.writeMem(0x5a22, { 0x36, 0x19 });
        gbc.writeMem(0xcda9, { 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x86c1, gbc.sp());
        EXPECT(0x5a24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xcda9));
        // 36 0134
        gbc.setState(0x30b1, 0x196, 0x36c0, 0x9c28, 0x9488, 0xc3c9, 0x0, 0x1);
        gbc.writeMem(0x30b1, { 0x36, 0x5 });
        gbc.writeMem(0xc3c9, { 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x196, gbc.sp());
        EXPECT(0x30b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc3c9));
        // 36 0136
        gbc.setState(0xadc1, 0x2dec, 0x7280, 0xcbb8, 0x9703, 0xffcf, 0x1, 0x1);
        gbc.writeMem(0xadc1, { 0x36, 0xd9 });
        gbc.writeMem(0xffcf, { 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2dec, gbc.sp());
        EXPECT(0xadc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xadc1));
        EXPECT(0xd9, gbc.readMem(0xadc2));
        EXPECT(0xd9, gbc.readMem(0xffcf));
        // 36 0137
        gbc.setState(0xb6b8, 0x78c2, 0x8880, 0xd09c, 0x4450, 0xab16, 0x0, 0x1);
        gbc.writeMem(0xab16, { 0x0 });
        gbc.writeMem(0xb6b8, { 0x36, 0x6d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x78c2, gbc.sp());
        EXPECT(0xb6ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xab16));
        EXPECT(0x36, gbc.readMem(0xb6b8));
        EXPECT(0x6d, gbc.readMem(0xb6b9));
        // 36 0138
        gbc.setState(0x3cfa, 0x2f0c, 0xfe20, 0xef13, 0xba3e, 0xe7e3, 0x0, 0x1);
        gbc.writeMem(0x3cfa, { 0x36, 0x4c });
        gbc.writeMem(0xe7e3, { 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2f0c, gbc.sp());
        EXPECT(0x3cfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe7e3));
        // 36 013A
        gbc.setState(0x4db2, 0xdffe, 0x1790, 0x26e2, 0xde57, 0x9182, 0x0, 0x0);
        gbc.writeMem(0x4db2, { 0x36, 0xf6 });
        gbc.writeMem(0x9182, { 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xdffe, gbc.sp());
        EXPECT(0x4db4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0x9182));
        // 36 013E
        gbc.setState(0x7329, 0xbd24, 0x85c0, 0x57b0, 0x24ab, 0x8632, 0x0, 0x1);
        gbc.writeMem(0x7329, { 0x36, 0xcb });
        gbc.writeMem(0x8632, { 0x0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbd24, gbc.sp());
        EXPECT(0x732b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8632));
        // 36 0143
        gbc.setState(0x5169, 0x1621, 0xa170, 0xb2d1, 0x2d1e, 0xb566, 0x1, 0x1);
        gbc.writeMem(0x5169, { 0x36, 0xd3 });
        gbc.writeMem(0xb566, { 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1621, gbc.sp());
        EXPECT(0x516b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xb566));
        // 36 0145
        gbc.setState(0x6e72, 0xa00a, 0x4f0, 0xa117, 0x9330, 0xc601, 0x0, 0x1);
        gbc.writeMem(0x6e72, { 0x36, 0x9f });
        gbc.writeMem(0xc601, { 0x0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa00a, gbc.sp());
        EXPECT(0x6e74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc601));
        // 36 0146
        gbc.setState(0xb7b9, 0x973c, 0x7e10, 0x91c5, 0xe5d3, 0x9e82, 0x1, 0x1);
        gbc.writeMem(0x9e82, { 0x0 });
        gbc.writeMem(0xb7b9, { 0x36, 0x66 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x973c, gbc.sp());
        EXPECT(0xb7bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9e82));
        EXPECT(0x36, gbc.readMem(0xb7b9));
        EXPECT(0x66, gbc.readMem(0xb7ba));
        // 36 0147
        gbc.setState(0xddee, 0x980c, 0xdb80, 0x4c32, 0xbc6a, 0xe3bb, 0x1, 0x1);
        gbc.writeMem(0xddee, { 0x36, 0x32 });
        gbc.writeMem(0xe3bb, { 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x980c, gbc.sp());
        EXPECT(0xddf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xddee));
        EXPECT(0x32, gbc.readMem(0xddef));
        EXPECT(0x32, gbc.readMem(0xe3bb));
        // 36 0149
        gbc.setState(0xd721, 0xaa1, 0xef40, 0xa3e, 0xed4a, 0xcef4, 0x0, 0x0);
        gbc.writeMem(0xcef4, { 0x0 });
        gbc.writeMem(0xd721, { 0x36, 0xfe });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xaa1, gbc.sp());
        EXPECT(0xd723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xcef4));
        EXPECT(0x36, gbc.readMem(0xd721));
        EXPECT(0xfe, gbc.readMem(0xd722));
        // 36 014A
        gbc.setState(0xa160, 0xd004, 0xa100, 0xd34c, 0x6376, 0x83a8, 0x1, 0x1);
        gbc.writeMem(0x83a8, { 0x0 });
        gbc.writeMem(0xa160, { 0x36, 0x17 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd004, gbc.sp());
        EXPECT(0xa162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0x83a8));
        EXPECT(0x36, gbc.readMem(0xa160));
        EXPECT(0x17, gbc.readMem(0xa161));
        // 36 014B
        gbc.setState(0x1989, 0x60c6, 0xd530, 0x7835, 0x9d7e, 0xb17e, 0x0, 0x1);
        gbc.writeMem(0x1989, { 0x36, 0x51 });
        gbc.writeMem(0xb17e, { 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x60c6, gbc.sp());
        EXPECT(0x198b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb17e));
        // 36 014D
        gbc.setState(0x3ed1, 0x18f, 0x92d0, 0x35e9, 0x47a9, 0x8a13, 0x1, 0x1);
        gbc.writeMem(0x3ed1, { 0x36, 0x58 });
        gbc.writeMem(0x8a13, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x18f, gbc.sp());
        EXPECT(0x3ed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8a13));
        // 36 014E
        gbc.setState(0x14a1, 0x37a3, 0xfb10, 0x4198, 0xcfa6, 0xee07, 0x0, 0x0);
        gbc.writeMem(0x14a1, { 0x36, 0x2 });
        gbc.writeMem(0xee07, { 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x37a3, gbc.sp());
        EXPECT(0x14a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xee07));
        // 36 0150
        gbc.setState(0xeda0, 0xad2d, 0x510, 0x3c2b, 0x7589, 0x8253, 0x1, 0x1);
        gbc.writeMem(0x8253, { 0x0 });
        gbc.writeMem(0xeda0, { 0x36, 0x51 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xad2d, gbc.sp());
        EXPECT(0xeda2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8253));
        EXPECT(0x36, gbc.readMem(0xeda0));
        EXPECT(0x51, gbc.readMem(0xeda1));
        // 36 0154
        gbc.setState(0xa6f, 0xe50d, 0xdb00, 0x4661, 0xe9cb, 0xc733, 0x0, 0x1);
        gbc.writeMem(0xa6f, { 0x36, 0x54 });
        gbc.writeMem(0xc733, { 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe50d, gbc.sp());
        EXPECT(0xa71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xc733));
        // 36 0156
        gbc.setState(0x4436, 0xc9a3, 0xe4d0, 0x5199, 0x81cf, 0xc872, 0x1, 0x0);
        gbc.writeMem(0x4436, { 0x36, 0x2f });
        gbc.writeMem(0xc872, { 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc9a3, gbc.sp());
        EXPECT(0x4438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc872));
        // 36 0157
        gbc.setState(0xb64a, 0x982a, 0x11c0, 0x8f29, 0xab2b, 0xb0b4, 0x1, 0x1);
        gbc.writeMem(0xb0b4, { 0x0 });
        gbc.writeMem(0xb64a, { 0x36, 0xa3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x982a, gbc.sp());
        EXPECT(0xb64c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb0b4));
        EXPECT(0x36, gbc.readMem(0xb64a));
        EXPECT(0xa3, gbc.readMem(0xb64b));
        // 36 0158
        gbc.setState(0x1c65, 0xccf9, 0xf7b0, 0x53bc, 0x7495, 0xcb4f, 0x0, 0x0);
        gbc.writeMem(0x1c65, { 0x36, 0xde });
        gbc.writeMem(0xcb4f, { 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xccf9, gbc.sp());
        EXPECT(0x1c67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xcb4f));
        // 36 015A
        gbc.setState(0xd896, 0xfd9f, 0x1150, 0x8be3, 0xdd7e, 0x8f7d, 0x0, 0x0);
        gbc.writeMem(0x8f7d, { 0x0 });
        gbc.writeMem(0xd896, { 0x36, 0x9b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfd9f, gbc.sp());
        EXPECT(0xd898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8f7d));
        EXPECT(0x36, gbc.readMem(0xd896));
        EXPECT(0x9b, gbc.readMem(0xd897));
        // 36 015F
        gbc.setState(0xde06, 0x8e12, 0x9e40, 0x7aa3, 0x7718, 0xa303, 0x0, 0x0);
        gbc.writeMem(0xa303, { 0x0 });
        gbc.writeMem(0xde06, { 0x36, 0xec });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8e12, gbc.sp());
        EXPECT(0xde08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xa303));
        EXPECT(0x36, gbc.readMem(0xde06));
        EXPECT(0xec, gbc.readMem(0xde07));
        // 36 0163
        gbc.setState(0x899d, 0x86e0, 0xde70, 0xb3fe, 0x4404, 0xadb9, 0x1, 0x0);
        gbc.writeMem(0x899d, { 0x36, 0x5f });
        gbc.writeMem(0xadb9, { 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x86e0, gbc.sp());
        EXPECT(0x899f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x899d));
        EXPECT(0x5f, gbc.readMem(0x899e));
        EXPECT(0x5f, gbc.readMem(0xadb9));
        // 36 0166
        gbc.setState(0x2cfd, 0x5a49, 0xcfa0, 0x57c4, 0x6492, 0xb301, 0x1, 0x0);
        gbc.writeMem(0x2cfd, { 0x36, 0x99 });
        gbc.writeMem(0xb301, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5a49, gbc.sp());
        EXPECT(0x2cff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb301));
        // 36 016A
        gbc.setState(0x213e, 0x1972, 0x89a0, 0x2eb8, 0x3ef, 0xc02d, 0x0, 0x1);
        gbc.writeMem(0x213e, { 0x36, 0xad });
        gbc.writeMem(0xc02d, { 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1972, gbc.sp());
        EXPECT(0x2140, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xc02d));
        // 36 016C
        gbc.setState(0x678c, 0xf05, 0xe580, 0x7760, 0x77a9, 0xa605, 0x1, 0x1);
        gbc.writeMem(0x678c, { 0x36, 0x76 });
        gbc.writeMem(0xa605, { 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf05, gbc.sp());
        EXPECT(0x678e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa605));
        // 36 016D
        gbc.setState(0x8d20, 0xa48d, 0xbd60, 0xe626, 0xf3d3, 0x866a, 0x1, 0x1);
        gbc.writeMem(0x866a, { 0x0 });
        gbc.writeMem(0x8d20, { 0x36, 0x63 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa48d, gbc.sp());
        EXPECT(0x8d22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0x866a));
        EXPECT(0x36, gbc.readMem(0x8d20));
        EXPECT(0x63, gbc.readMem(0x8d21));
        // 36 016E
        gbc.setState(0xb4fc, 0xd096, 0x4c40, 0xba93, 0x58ae, 0xb674, 0x0, 0x1);
        gbc.writeMem(0xb4fc, { 0x36, 0x8e });
        gbc.writeMem(0xb674, { 0x0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd096, gbc.sp());
        EXPECT(0xb4fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xb4fc));
        EXPECT(0x8e, gbc.readMem(0xb4fd));
        EXPECT(0x8e, gbc.readMem(0xb674));
        // 36 0170
        gbc.setState(0x5180, 0x3ceb, 0xd610, 0xf5d7, 0x5c7d, 0xf030, 0x0, 0x0);
        gbc.writeMem(0x5180, { 0x36, 0x2f });
        gbc.writeMem(0xf030, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3ceb, gbc.sp());
        EXPECT(0x5182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xf030));
        // 36 0175
        gbc.setState(0x3a1d, 0xd726, 0x20, 0x130d, 0x53b3, 0xe447, 0x1, 0x0);
        gbc.writeMem(0x3a1d, { 0x36, 0xaa });
        gbc.writeMem(0xe447, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd726, gbc.sp());
        EXPECT(0x3a1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe447));
        // 36 0177
        gbc.setState(0x1b7b, 0x4d21, 0xa810, 0x5205, 0xb376, 0xac43, 0x1, 0x1);
        gbc.writeMem(0x1b7b, { 0x36, 0x3a });
        gbc.writeMem(0xac43, { 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4d21, gbc.sp());
        EXPECT(0x1b7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xac43));
        // 36 0178
        gbc.setState(0x5e64, 0xff50, 0x8cd0, 0xd77e, 0xa102, 0xa673, 0x0, 0x0);
        gbc.writeMem(0x5e64, { 0x36, 0x3d });
        gbc.writeMem(0xa673, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xff50, gbc.sp());
        EXPECT(0x5e66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xa673));
        // 36 0179
        gbc.setState(0xeb8c, 0x824e, 0xd550, 0x2412, 0x316f, 0xe7cb, 0x0, 0x0);
        gbc.writeMem(0xe7cb, { 0x0 });
        gbc.writeMem(0xeb8c, { 0x36, 0x94 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x824e, gbc.sp());
        EXPECT(0xeb8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe7cb));
        EXPECT(0x36, gbc.readMem(0xeb8c));
        EXPECT(0x94, gbc.readMem(0xeb8d));
        // 36 017C
        gbc.setState(0x928e, 0xb710, 0xd4e0, 0x8802, 0x9314, 0xb2a8, 0x1, 0x1);
        gbc.writeMem(0x928e, { 0x36, 0xc8 });
        gbc.writeMem(0xb2a8, { 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb710, gbc.sp());
        EXPECT(0x9290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x928e));
        EXPECT(0xc8, gbc.readMem(0x928f));
        EXPECT(0xc8, gbc.readMem(0xb2a8));
        // 36 017D
        gbc.setState(0x8031, 0x5c8, 0x9a00, 0x86dc, 0x1406, 0xb9a1, 0x1, 0x0);
        gbc.writeMem(0x8031, { 0x36, 0xf9 });
        gbc.writeMem(0xb9a1, { 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5c8, gbc.sp());
        EXPECT(0x8033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8031));
        EXPECT(0xf9, gbc.readMem(0x8032));
        EXPECT(0xf9, gbc.readMem(0xb9a1));
        // 36 0188
        gbc.setState(0xa2c6, 0x3824, 0x9360, 0xebea, 0x9e41, 0xade4, 0x0, 0x1);
        gbc.writeMem(0xa2c6, { 0x36, 0x9f });
        gbc.writeMem(0xade4, { 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3824, gbc.sp());
        EXPECT(0xa2c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xa2c6));
        EXPECT(0x9f, gbc.readMem(0xa2c7));
        EXPECT(0x9f, gbc.readMem(0xade4));
        // 36 018A
        gbc.setState(0x8289, 0x467e, 0x7c70, 0xf57e, 0xe5c, 0x9f2a, 0x1, 0x1);
        gbc.writeMem(0x8289, { 0x36, 0xdc });
        gbc.writeMem(0x9f2a, { 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x467e, gbc.sp());
        EXPECT(0x828b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8289));
        EXPECT(0xdc, gbc.readMem(0x828a));
        EXPECT(0xdc, gbc.readMem(0x9f2a));
        // 36 018D
        gbc.setState(0x568d, 0x5c80, 0x800, 0xe8e7, 0x2001, 0x951a, 0x1, 0x0);
        gbc.writeMem(0x568d, { 0x36, 0x91 });
        gbc.writeMem(0x951a, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5c80, gbc.sp());
        EXPECT(0x568f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x951a));
        // 36 018F
        gbc.setState(0x6f44, 0x2a89, 0xdc20, 0x4b7d, 0xdbb, 0x8ea0, 0x1, 0x1);
        gbc.writeMem(0x6f44, { 0x36, 0x8 });
        gbc.writeMem(0x8ea0, { 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2a89, gbc.sp());
        EXPECT(0x6f46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0x8ea0));
        // 36 0190
        gbc.setState(0xd9ff, 0x941d, 0x650, 0x6709, 0x5d44, 0x9141, 0x0, 0x1);
        gbc.writeMem(0x9141, { 0x0 });
        gbc.writeMem(0xd9ff, { 0x36, 0xa6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x941d, gbc.sp());
        EXPECT(0xda01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9141));
        EXPECT(0x36, gbc.readMem(0xd9ff));
        EXPECT(0xa6, gbc.readMem(0xda00));
        // 36 0193
        gbc.setState(0x2c01, 0xa3b5, 0xba20, 0x8732, 0x275a, 0xe42f, 0x0, 0x1);
        gbc.writeMem(0x2c01, { 0x36, 0x7a });
        gbc.writeMem(0xe42f, { 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa3b5, gbc.sp());
        EXPECT(0x2c03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe42f));
        // 36 0196
        gbc.setState(0x709c, 0x3b00, 0xe100, 0xe46b, 0x7a5a, 0xd554, 0x0, 0x0);
        gbc.writeMem(0x709c, { 0x36, 0x53 });
        gbc.writeMem(0xd554, { 0x0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3b00, gbc.sp());
        EXPECT(0x709e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd554));
        // 36 0197
        gbc.setState(0x9fcb, 0x93bf, 0xfec0, 0xe9b5, 0xe4c8, 0xc15c, 0x0, 0x0);
        gbc.writeMem(0x9fcb, { 0x36, 0x78 });
        gbc.writeMem(0xc15c, { 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x93bf, gbc.sp());
        EXPECT(0x9fcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x9fcb));
        EXPECT(0x78, gbc.readMem(0x9fcc));
        EXPECT(0x78, gbc.readMem(0xc15c));
        // 36 0199
        gbc.setState(0x1680, 0x32b3, 0x3580, 0xe602, 0x879a, 0xb834, 0x0, 0x0);
        gbc.writeMem(0x1680, { 0x36, 0x44 });
        gbc.writeMem(0xb834, { 0x0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x32b3, gbc.sp());
        EXPECT(0x1682, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb834));
        // 36 019A
        gbc.setState(0x133b, 0x1b26, 0xe6e0, 0x9e83, 0x2f8a, 0xc1bf, 0x1, 0x0);
        gbc.writeMem(0x133b, { 0x36, 0x40 });
        gbc.writeMem(0xc1bf, { 0x0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1b26, gbc.sp());
        EXPECT(0x133d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc1bf));
        // 36 019B
        gbc.setState(0x7197, 0x7d6f, 0x1f20, 0x81b4, 0x49de, 0x8b11, 0x0, 0x0);
        gbc.writeMem(0x7197, { 0x36, 0xd2 });
        gbc.writeMem(0x8b11, { 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7d6f, gbc.sp());
        EXPECT(0x7199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0x8b11));
        // 36 019C
        gbc.setState(0x9308, 0x59a4, 0x8730, 0xa2fa, 0xa6a0, 0xf77e, 0x0, 0x1);
        gbc.writeMem(0x9308, { 0x36, 0xc });
        gbc.writeMem(0xf77e, { 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x59a4, gbc.sp());
        EXPECT(0x930a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x9308));
        EXPECT(0xc, gbc.readMem(0x9309));
        EXPECT(0xc, gbc.readMem(0xf77e));
        // 36 019D
        gbc.setState(0x2810, 0x708c, 0xf5e0, 0x32f4, 0xdbed, 0x9243, 0x0, 0x1);
        gbc.writeMem(0x2810, { 0x36, 0x65 });
        gbc.writeMem(0x9243, { 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x708c, gbc.sp());
        EXPECT(0x2812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9243));
        // 36 01A0
        gbc.setState(0x142a, 0x771f, 0x5a60, 0x42e5, 0x7637, 0x96b7, 0x0, 0x0);
        gbc.writeMem(0x142a, { 0x36, 0xe1 });
        gbc.writeMem(0x96b7, { 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x771f, gbc.sp());
        EXPECT(0x142c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x96b7));
        // 36 01A2
        gbc.setState(0xcfe9, 0x83e1, 0x5110, 0x37b8, 0xfdba, 0xf1a6, 0x1, 0x0);
        gbc.writeMem(0xcfe9, { 0x36, 0x8d });
        gbc.writeMem(0xf1a6, { 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x83e1, gbc.sp());
        EXPECT(0xcfeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xcfe9));
        EXPECT(0x8d, gbc.readMem(0xcfea));
        EXPECT(0x8d, gbc.readMem(0xf1a6));
        // 36 01A4
        gbc.setState(0xe50b, 0xfd28, 0xccb0, 0xaedd, 0xefab, 0xf0eb, 0x0, 0x0);
        gbc.writeMem(0xe50b, { 0x36, 0x77 });
        gbc.writeMem(0xf0eb, { 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfd28, gbc.sp());
        EXPECT(0xe50d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xe50b));
        EXPECT(0x77, gbc.readMem(0xe50c));
        EXPECT(0x77, gbc.readMem(0xf0eb));
        // 36 01A6
        gbc.setState(0x651f, 0xa179, 0xc930, 0x89f8, 0xa823, 0xd31f, 0x1, 0x1);
        gbc.writeMem(0x651f, { 0x36, 0x9c });
        gbc.writeMem(0xd31f, { 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa179, gbc.sp());
        EXPECT(0x6521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd31f));
        // 36 01A7
        gbc.setState(0x8971, 0x1510, 0x59c0, 0x5186, 0xebff, 0xbbb4, 0x0, 0x0);
        gbc.writeMem(0x8971, { 0x36, 0x3c });
        gbc.writeMem(0xbbb4, { 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1510, gbc.sp());
        EXPECT(0x8973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8971));
        EXPECT(0x3c, gbc.readMem(0x8972));
        EXPECT(0x3c, gbc.readMem(0xbbb4));
        // 36 01A8
        gbc.setState(0x8771, 0xc459, 0xe1b0, 0x74c6, 0xfda9, 0x814e, 0x1, 0x0);
        gbc.writeMem(0x814e, { 0x0 });
        gbc.writeMem(0x8771, { 0x36, 0xb });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc459, gbc.sp());
        EXPECT(0x8773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x814e));
        EXPECT(0x36, gbc.readMem(0x8771));
        EXPECT(0xb, gbc.readMem(0x8772));
        // 36 01AA
        gbc.setState(0x5833, 0x7deb, 0x4950, 0x5fba, 0xf48b, 0xd60a, 0x1, 0x0);
        gbc.writeMem(0x5833, { 0x36, 0x6e });
        gbc.writeMem(0xd60a, { 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7deb, gbc.sp());
        EXPECT(0x5835, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xd60a));
        // 36 01AC
        gbc.setState(0x5c76, 0x4807, 0x3a40, 0xc1e2, 0xbc99, 0xb330, 0x0, 0x0);
        gbc.writeMem(0x5c76, { 0x36, 0xe3 });
        gbc.writeMem(0xb330, { 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4807, gbc.sp());
        EXPECT(0x5c78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xb330));
        // 36 01AD
        gbc.setState(0x750d, 0x704a, 0x9070, 0x62f8, 0xc14b, 0x9069, 0x1, 0x0);
        gbc.writeMem(0x750d, { 0x36, 0x13 });
        gbc.writeMem(0x9069, { 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x704a, gbc.sp());
        EXPECT(0x750f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9069));
        // 36 01AF
        gbc.setState(0x9ff2, 0xe0c, 0xeb30, 0x99ec, 0xff4d, 0xb6b5, 0x0, 0x0);
        gbc.writeMem(0x9ff2, { 0x36, 0xd9 });
        gbc.writeMem(0xb6b5, { 0x0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe0c, gbc.sp());
        EXPECT(0x9ff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x9ff2));
        EXPECT(0xd9, gbc.readMem(0x9ff3));
        EXPECT(0xd9, gbc.readMem(0xb6b5));
        // 36 01B0
        gbc.setState(0x7f52, 0x8201, 0x2300, 0x5f57, 0x4980, 0x8db5, 0x1, 0x1);
        gbc.writeMem(0x7f52, { 0x36, 0x48 });
        gbc.writeMem(0x8db5, { 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8201, gbc.sp());
        EXPECT(0x7f54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8db5));
        // 36 01B1
        gbc.setState(0x8d87, 0x3fe8, 0x7530, 0x74cb, 0xae34, 0xc1ca, 0x1, 0x0);
        gbc.writeMem(0x8d87, { 0x36, 0xb4 });
        gbc.writeMem(0xc1ca, { 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3fe8, gbc.sp());
        EXPECT(0x8d89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8d87));
        EXPECT(0xb4, gbc.readMem(0x8d88));
        EXPECT(0xb4, gbc.readMem(0xc1ca));
        // 36 01B2
        gbc.setState(0xe0e, 0x3fc4, 0xdb0, 0x176b, 0xdc27, 0xe968, 0x1, 0x1);
        gbc.writeMem(0xe0e, { 0x36, 0xf0 });
        gbc.writeMem(0xe968, { 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3fc4, gbc.sp());
        EXPECT(0xe10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe968));
        // 36 01B3
        gbc.setState(0x9932, 0xd988, 0x3d10, 0x8381, 0x673d, 0xa4d7, 0x0, 0x0);
        gbc.writeMem(0x9932, { 0x36, 0xd3 });
        gbc.writeMem(0xa4d7, { 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd988, gbc.sp());
        EXPECT(0x9934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x9932));
        EXPECT(0xd3, gbc.readMem(0x9933));
        EXPECT(0xd3, gbc.readMem(0xa4d7));
        // 36 01B7
        gbc.setState(0x1b95, 0x9aaa, 0xe230, 0x40de, 0x261d, 0xd327, 0x0, 0x0);
        gbc.writeMem(0x1b95, { 0x36, 0x63 });
        gbc.writeMem(0xd327, { 0x0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9aaa, gbc.sp());
        EXPECT(0x1b97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xd327));
        // 36 01B8
        gbc.setState(0x8aeb, 0xa3ca, 0xdc50, 0x6832, 0xe7eb, 0x8c77, 0x1, 0x0);
        gbc.writeMem(0x8aeb, { 0x36, 0x97 });
        gbc.writeMem(0x8c77, { 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa3ca, gbc.sp());
        EXPECT(0x8aed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8aeb));
        EXPECT(0x97, gbc.readMem(0x8aec));
        EXPECT(0x97, gbc.readMem(0x8c77));
        // 36 01B9
        gbc.setState(0xe47f, 0x6363, 0x9000, 0x6327, 0xfe63, 0xf028, 0x0, 0x1);
        gbc.writeMem(0xe47f, { 0x36, 0xfa });
        gbc.writeMem(0xf028, { 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6363, gbc.sp());
        EXPECT(0xe481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xe47f));
        EXPECT(0xfa, gbc.readMem(0xe480));
        EXPECT(0xfa, gbc.readMem(0xf028));
        // 36 01BA
        gbc.setState(0xbdff, 0xe8f5, 0x2160, 0xc725, 0x4375, 0xcefc, 0x0, 0x0);
        gbc.writeMem(0xbdff, { 0x36, 0xb5 });
        gbc.writeMem(0xcefc, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe8f5, gbc.sp());
        EXPECT(0xbe01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xbdff));
        EXPECT(0xb5, gbc.readMem(0xbe00));
        EXPECT(0xb5, gbc.readMem(0xcefc));
        // 36 01BD
        gbc.setState(0x207f, 0x8299, 0xb5d0, 0xeb47, 0x9243, 0x9275, 0x0, 0x1);
        gbc.writeMem(0x207f, { 0x36, 0x34 });
        gbc.writeMem(0x9275, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8299, gbc.sp());
        EXPECT(0x2081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x9275));
        // 36 01BE
        gbc.setState(0x4f1b, 0x9d2f, 0x58c0, 0xa281, 0x89dc, 0xc002, 0x0, 0x0);
        gbc.writeMem(0x4f1b, { 0x36, 0x13 });
        gbc.writeMem(0xc002, { 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9d2f, gbc.sp());
        EXPECT(0x4f1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc002));
        // 36 01BF
        gbc.setState(0x3cb8, 0x1064, 0x5c10, 0x4549, 0xbcf, 0xadad, 0x1, 0x0);
        gbc.writeMem(0x3cb8, { 0x36, 0x2a });
        gbc.writeMem(0xadad, { 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1064, gbc.sp());
        EXPECT(0x3cba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xadad));
        // 36 01C0
        gbc.setState(0x4808, 0xcb66, 0x77d0, 0xdab3, 0xef36, 0xe246, 0x0, 0x0);
        gbc.writeMem(0x4808, { 0x36, 0x2 });
        gbc.writeMem(0xe246, { 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xcb66, gbc.sp());
        EXPECT(0x480a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xe246));
        // 36 01C1
        gbc.setState(0x3b14, 0x8333, 0x6aa0, 0x69df, 0x1801, 0xe479, 0x1, 0x0);
        gbc.writeMem(0x3b14, { 0x36, 0xb0 });
        gbc.writeMem(0xe479, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8333, gbc.sp());
        EXPECT(0x3b16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe479));
        // 36 01C9
        gbc.setState(0x6ab9, 0xe5, 0x83d0, 0x1aca, 0x267a, 0x8258, 0x1, 0x1);
        gbc.writeMem(0x6ab9, { 0x36, 0xaa });
        gbc.writeMem(0x8258, { 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe5, gbc.sp());
        EXPECT(0x6abb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8258));
        // 36 01CA
        gbc.setState(0xb7e3, 0x1292, 0x6710, 0xe1ef, 0x6cc5, 0xcdb4, 0x0, 0x0);
        gbc.writeMem(0xb7e3, { 0x36, 0x2d });
        gbc.writeMem(0xcdb4, { 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1292, gbc.sp());
        EXPECT(0xb7e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xb7e3));
        EXPECT(0x2d, gbc.readMem(0xb7e4));
        EXPECT(0x2d, gbc.readMem(0xcdb4));
        // 36 01CB
        gbc.setState(0x83f8, 0x6210, 0x7370, 0x2f24, 0x6f6a, 0xfd81, 0x0, 0x0);
        gbc.writeMem(0x83f8, { 0x36, 0x88 });
        gbc.writeMem(0xfd81, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6210, gbc.sp());
        EXPECT(0x83fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x83f8));
        EXPECT(0x88, gbc.readMem(0x83f9));
        EXPECT(0x88, gbc.readMem(0xfd81));
        // 36 01CD
        gbc.setState(0x579c, 0xb72b, 0xdd0, 0x341c, 0xd95f, 0xc7c3, 0x0, 0x0);
        gbc.writeMem(0x579c, { 0x36, 0xee });
        gbc.writeMem(0xc7c3, { 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb72b, gbc.sp());
        EXPECT(0x579e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xc7c3));
        // 36 01D1
        gbc.setState(0xe2a, 0x429d, 0x1f60, 0xe9e5, 0x606b, 0xa5d2, 0x1, 0x0);
        gbc.writeMem(0xe2a, { 0x36, 0xec });
        gbc.writeMem(0xa5d2, { 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x429d, gbc.sp());
        EXPECT(0xe2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xa5d2));
        // 36 01D3
        gbc.setState(0x9af4, 0x7854, 0xf4d0, 0xdc1d, 0x7b40, 0x9be7, 0x0, 0x0);
        gbc.writeMem(0x9af4, { 0x36, 0x3b });
        gbc.writeMem(0x9be7, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7854, gbc.sp());
        EXPECT(0x9af6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x9af4));
        EXPECT(0x3b, gbc.readMem(0x9af5));
        EXPECT(0x3b, gbc.readMem(0x9be7));
        // 36 01D5
        gbc.setState(0xfe9, 0xea96, 0xc80, 0xbfca, 0xb61e, 0xf32e, 0x0, 0x1);
        gbc.writeMem(0xfe9, { 0x36, 0x4e });
        gbc.writeMem(0xf32e, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xea96, gbc.sp());
        EXPECT(0xfeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xf32e));
        // 36 01D7
        gbc.setState(0x32c7, 0x4160, 0x3e70, 0xdff4, 0xb235, 0xf39e, 0x1, 0x0);
        gbc.writeMem(0x32c7, { 0x36, 0x4a });
        gbc.writeMem(0xf39e, { 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4160, gbc.sp());
        EXPECT(0x32c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xf39e));
        // 36 01DA
        gbc.setState(0xce74, 0xf2ec, 0xf070, 0x87d8, 0x4a81, 0x8003, 0x0, 0x1);
        gbc.writeMem(0x8003, { 0x0 });
        gbc.writeMem(0xce74, { 0x36, 0xc0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf2ec, gbc.sp());
        EXPECT(0xce76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0x8003));
        EXPECT(0x36, gbc.readMem(0xce74));
        EXPECT(0xc0, gbc.readMem(0xce75));
        // 36 01DD
        gbc.setState(0xdbe, 0x357f, 0xa540, 0x96f5, 0x84d2, 0xcd5c, 0x1, 0x0);
        gbc.writeMem(0xdbe, { 0x36, 0x3b });
        gbc.writeMem(0xcd5c, { 0x0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x357f, gbc.sp());
        EXPECT(0xdc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xcd5c));
        // 36 01DE
        gbc.setState(0x9730, 0x318b, 0x9f20, 0xddde, 0x7c71, 0x880f, 0x1, 0x0);
        gbc.writeMem(0x880f, { 0x0 });
        gbc.writeMem(0x9730, { 0x36, 0xed });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x318b, gbc.sp());
        EXPECT(0x9732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x880f));
        EXPECT(0x36, gbc.readMem(0x9730));
        EXPECT(0xed, gbc.readMem(0x9731));
        // 36 01DF
        gbc.setState(0xe652, 0xa087, 0x7000, 0x2255, 0x5a16, 0x8f2f, 0x0, 0x0);
        gbc.writeMem(0x8f2f, { 0x0 });
        gbc.writeMem(0xe652, { 0x36, 0x36 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa087, gbc.sp());
        EXPECT(0xe654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8f2f));
        EXPECT(0x36, gbc.readMem(0xe652));
        EXPECT(0x36, gbc.readMem(0xe653));
        // 36 01E1
        gbc.setState(0xb760, 0x9a20, 0x5ab0, 0x7a9f, 0xe00d, 0xa56f, 0x0, 0x0);
        gbc.writeMem(0xa56f, { 0x0 });
        gbc.writeMem(0xb760, { 0x36, 0xcb });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9a20, gbc.sp());
        EXPECT(0xb762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa56f));
        EXPECT(0x36, gbc.readMem(0xb760));
        EXPECT(0xcb, gbc.readMem(0xb761));
        // 36 01E2
        gbc.setState(0x2851, 0x96b2, 0xc9c0, 0x5b5e, 0xce5b, 0x9c1f, 0x1, 0x1);
        gbc.writeMem(0x2851, { 0x36, 0x58 });
        gbc.writeMem(0x9c1f, { 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x96b2, gbc.sp());
        EXPECT(0x2853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9c1f));
        // 36 01E4
        gbc.setState(0xa780, 0x87f3, 0x4100, 0x2a36, 0xdb23, 0xb4d7, 0x1, 0x0);
        gbc.writeMem(0xa780, { 0x36, 0xca });
        gbc.writeMem(0xb4d7, { 0x0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x87f3, gbc.sp());
        EXPECT(0xa782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xa780));
        EXPECT(0xca, gbc.readMem(0xa781));
        EXPECT(0xca, gbc.readMem(0xb4d7));
        // 36 01E7
        gbc.setState(0x60fa, 0xd7ef, 0x7c40, 0xba22, 0xcd80, 0xf0f6, 0x1, 0x0);
        gbc.writeMem(0x60fa, { 0x36, 0x72 });
        gbc.writeMem(0xf0f6, { 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd7ef, gbc.sp());
        EXPECT(0x60fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xf0f6));
        // 36 01E9
        gbc.setState(0x435f, 0x1f2b, 0x7360, 0xb80e, 0xb32e, 0xc667, 0x1, 0x0);
        gbc.writeMem(0x435f, { 0x36, 0xa4 });
        gbc.writeMem(0xc667, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1f2b, gbc.sp());
        EXPECT(0x4361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc667));
        // 36 01EE
        gbc.setState(0x40a4, 0x9afb, 0x67e0, 0x9dcc, 0x7e8b, 0xe463, 0x1, 0x1);
        gbc.writeMem(0x40a4, { 0x36, 0x6d });
        gbc.writeMem(0xe463, { 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9afb, gbc.sp());
        EXPECT(0x40a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe463));
        // 36 01F0
        gbc.setState(0x7ede, 0x9975, 0xb760, 0xe810, 0xb99c, 0x847a, 0x1, 0x1);
        gbc.writeMem(0x7ede, { 0x36, 0x7a });
        gbc.writeMem(0x847a, { 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9975, gbc.sp());
        EXPECT(0x7ee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x847a));
        // 36 01F1
        gbc.setState(0xbf9, 0xca76, 0x95f0, 0x6b14, 0xfded, 0x80d8, 0x0, 0x1);
        gbc.writeMem(0xbf9, { 0x36, 0xcb });
        gbc.writeMem(0x80d8, { 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xca76, gbc.sp());
        EXPECT(0xbfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80d8));
        // 36 01F5
        gbc.setState(0x90fb, 0x6721, 0x79f0, 0xac65, 0x2a9b, 0x84fd, 0x1, 0x1);
        gbc.writeMem(0x84fd, { 0x0 });
        gbc.writeMem(0x90fb, { 0x36, 0x9c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6721, gbc.sp());
        EXPECT(0x90fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x84fd));
        EXPECT(0x36, gbc.readMem(0x90fb));
        EXPECT(0x9c, gbc.readMem(0x90fc));
        // 36 01F6
        gbc.setState(0xc973, 0x42c2, 0x7c70, 0xce36, 0xa27c, 0xbc9e, 0x0, 0x0);
        gbc.writeMem(0xbc9e, { 0x0 });
        gbc.writeMem(0xc973, { 0x36, 0xee });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x42c2, gbc.sp());
        EXPECT(0xc975, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xbc9e));
        EXPECT(0x36, gbc.readMem(0xc973));
        EXPECT(0xee, gbc.readMem(0xc974));
        // 36 01FA
        gbc.setState(0xa930, 0xa9bc, 0x4200, 0xaa33, 0x267e, 0x846d, 0x1, 0x1);
        gbc.writeMem(0x846d, { 0x0 });
        gbc.writeMem(0xa930, { 0x36, 0xdc });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa9bc, gbc.sp());
        EXPECT(0xa932, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0x846d));
        EXPECT(0x36, gbc.readMem(0xa930));
        EXPECT(0xdc, gbc.readMem(0xa931));
        // 36 01FB
        gbc.setState(0xb987, 0x4d2d, 0x3400, 0x8fba, 0xbd22, 0x9ab0, 0x1, 0x0);
        gbc.writeMem(0x9ab0, { 0x0 });
        gbc.writeMem(0xb987, { 0x36, 0x25 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4d2d, gbc.sp());
        EXPECT(0xb989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9ab0));
        EXPECT(0x36, gbc.readMem(0xb987));
        EXPECT(0x25, gbc.readMem(0xb988));
        // 36 01FC
        gbc.setState(0x5678, 0xcdc9, 0xcec0, 0xde08, 0x35b3, 0xa84a, 0x0, 0x1);
        gbc.writeMem(0x5678, { 0x36, 0x93 });
        gbc.writeMem(0xa84a, { 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xcdc9, gbc.sp());
        EXPECT(0x567a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa84a));
        // 36 01FF
        gbc.setState(0xb9ca, 0x7940, 0x8460, 0xf942, 0xcf04, 0xb508, 0x1, 0x1);
        gbc.writeMem(0xb508, { 0x0 });
        gbc.writeMem(0xb9ca, { 0x36, 0x15 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7940, gbc.sp());
        EXPECT(0xb9cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb508));
        EXPECT(0x36, gbc.readMem(0xb9ca));
        EXPECT(0x15, gbc.readMem(0xb9cb));
        // 36 0200
        gbc.setState(0x22a9, 0x1f7c, 0x3a20, 0x9fdc, 0x52fd, 0xc7aa, 0x1, 0x0);
        gbc.writeMem(0x22a9, { 0x36, 0xa6 });
        gbc.writeMem(0xc7aa, { 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1f7c, gbc.sp());
        EXPECT(0x22ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xc7aa));
        // 36 0202
        gbc.setState(0xd46b, 0xd3ab, 0x3090, 0xabc8, 0xb794, 0xc1c1, 0x0, 0x0);
        gbc.writeMem(0xc1c1, { 0x0 });
        gbc.writeMem(0xd46b, { 0x36, 0xf });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd3ab, gbc.sp());
        EXPECT(0xd46d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xc1c1));
        EXPECT(0x36, gbc.readMem(0xd46b));
        EXPECT(0xf, gbc.readMem(0xd46c));
        // 36 0203
        gbc.setState(0x8b38, 0xeaa3, 0xfb10, 0x7a74, 0x9315, 0xda49, 0x0, 0x1);
        gbc.writeMem(0x8b38, { 0x36, 0xc6 });
        gbc.writeMem(0xda49, { 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xeaa3, gbc.sp());
        EXPECT(0x8b3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8b38));
        EXPECT(0xc6, gbc.readMem(0x8b39));
        EXPECT(0xc6, gbc.readMem(0xda49));
        // 36 0204
        gbc.setState(0x5542, 0xccb5, 0x65a0, 0x41f6, 0xea78, 0xcc29, 0x0, 0x1);
        gbc.writeMem(0x5542, { 0x36, 0x29 });
        gbc.writeMem(0xcc29, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xccb5, gbc.sp());
        EXPECT(0x5544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xcc29));
        // 36 0206
        gbc.setState(0x3181, 0x4308, 0x77e0, 0x5c96, 0x641c, 0xe160, 0x0, 0x1);
        gbc.writeMem(0x3181, { 0x36, 0x3f });
        gbc.writeMem(0xe160, { 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4308, gbc.sp());
        EXPECT(0x3183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xe160));
        // 36 0208
        gbc.setState(0xe302, 0xfc2d, 0xd2d0, 0xba1f, 0xce09, 0x967b, 0x0, 0x1);
        gbc.writeMem(0x967b, { 0x0 });
        gbc.writeMem(0xe302, { 0x36, 0x62 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xfc2d, gbc.sp());
        EXPECT(0xe304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0x967b));
        EXPECT(0x36, gbc.readMem(0xe302));
        EXPECT(0x62, gbc.readMem(0xe303));
        // 36 0209
        gbc.setState(0xc819, 0xc5ca, 0x4150, 0x69ab, 0x9caf, 0x89c6, 0x0, 0x1);
        gbc.writeMem(0x89c6, { 0x0 });
        gbc.writeMem(0xc819, { 0x36, 0x17 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc5ca, gbc.sp());
        EXPECT(0xc81b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0x89c6));
        EXPECT(0x36, gbc.readMem(0xc819));
        EXPECT(0x17, gbc.readMem(0xc81a));
        // 36 020C
        gbc.setState(0x5918, 0xbb27, 0x4810, 0x8896, 0x2d74, 0xbf5d, 0x0, 0x0);
        gbc.writeMem(0x5918, { 0x36, 0xc8 });
        gbc.writeMem(0xbf5d, { 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xbb27, gbc.sp());
        EXPECT(0x591a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xbf5d));
        // 36 020D
        gbc.setState(0x20d7, 0x5aa2, 0xda10, 0xfdf1, 0x3425, 0xa65b, 0x1, 0x0);
        gbc.writeMem(0x20d7, { 0x36, 0x6b });
        gbc.writeMem(0xa65b, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5aa2, gbc.sp());
        EXPECT(0x20d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xa65b));
        // 36 020E
        gbc.setState(0x891a, 0x6376, 0xc250, 0xf553, 0x5169, 0xa544, 0x0, 0x1);
        gbc.writeMem(0x891a, { 0x36, 0xe3 });
        gbc.writeMem(0xa544, { 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6376, gbc.sp());
        EXPECT(0x891c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x891a));
        EXPECT(0xe3, gbc.readMem(0x891b));
        EXPECT(0xe3, gbc.readMem(0xa544));
        // 36 020F
        gbc.setState(0x607c, 0x1714, 0x73b0, 0x99ae, 0x3636, 0x987c, 0x0, 0x1);
        gbc.writeMem(0x607c, { 0x36, 0xc });
        gbc.writeMem(0x987c, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1714, gbc.sp());
        EXPECT(0x607e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x987c));
        // 36 0211
        gbc.setState(0xb5c6, 0x4388, 0x7560, 0x1693, 0x2c02, 0x928d, 0x1, 0x1);
        gbc.writeMem(0x928d, { 0x0 });
        gbc.writeMem(0xb5c6, { 0x36, 0xd1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4388, gbc.sp());
        EXPECT(0xb5c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0x928d));
        EXPECT(0x36, gbc.readMem(0xb5c6));
        EXPECT(0xd1, gbc.readMem(0xb5c7));
        // 36 0212
        gbc.setState(0x47c0, 0x79e9, 0xa250, 0x5880, 0x3b42, 0x9226, 0x0, 0x1);
        gbc.writeMem(0x47c0, { 0x36, 0xbd });
        gbc.writeMem(0x9226, { 0x0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x79e9, gbc.sp());
        EXPECT(0x47c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x9226));
        // 36 0214
        gbc.setState(0xcbb, 0x5ec5, 0x2ad0, 0x8d49, 0x2590, 0x9955, 0x1, 0x1);
        gbc.writeMem(0xcbb, { 0x36, 0xaa });
        gbc.writeMem(0x9955, { 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5ec5, gbc.sp());
        EXPECT(0xcbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9955));
        // 36 0215
        gbc.setState(0x63c, 0x3d4e, 0xdd90, 0xde, 0x5ffc, 0x832c, 0x0, 0x0);
        gbc.writeMem(0x63c, { 0x36, 0x77 });
        gbc.writeMem(0x832c, { 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3d4e, gbc.sp());
        EXPECT(0x63e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x832c));
        // 36 021B
        gbc.setState(0x5811, 0x3e87, 0x3010, 0x378e, 0xba70, 0x970a, 0x0, 0x0);
        gbc.writeMem(0x5811, { 0x36, 0x4c });
        gbc.writeMem(0x970a, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3e87, gbc.sp());
        EXPECT(0x5813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x970a));
        // 36 021F
        gbc.setState(0xb7d9, 0xd5e9, 0xe950, 0x94ff, 0x8740, 0xe2b7, 0x1, 0x1);
        gbc.writeMem(0xb7d9, { 0x36, 0xd8 });
        gbc.writeMem(0xe2b7, { 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd5e9, gbc.sp());
        EXPECT(0xb7db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xb7d9));
        EXPECT(0xd8, gbc.readMem(0xb7da));
        EXPECT(0xd8, gbc.readMem(0xe2b7));
        // 36 0221
        gbc.setState(0xa183, 0x14dc, 0xf710, 0x78aa, 0x9c0f, 0xf41e, 0x1, 0x0);
        gbc.writeMem(0xa183, { 0x36, 0x45 });
        gbc.writeMem(0xf41e, { 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x14dc, gbc.sp());
        EXPECT(0xa185, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xa183));
        EXPECT(0x45, gbc.readMem(0xa184));
        EXPECT(0x45, gbc.readMem(0xf41e));
        // 36 0222
        gbc.setState(0x758e, 0xa7a7, 0x4800, 0x56e1, 0xb402, 0x8794, 0x1, 0x1);
        gbc.writeMem(0x758e, { 0x36, 0x16 });
        gbc.writeMem(0x8794, { 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa7a7, gbc.sp());
        EXPECT(0x7590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8794));
        // 36 0223
        gbc.setState(0x1873, 0x46bc, 0xfaa0, 0xf9f5, 0xde8b, 0xd4fa, 0x0, 0x1);
        gbc.writeMem(0x1873, { 0x36, 0x8c });
        gbc.writeMem(0xd4fa, { 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x46bc, gbc.sp());
        EXPECT(0x1875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd4fa));
        // 36 0224
        gbc.setState(0x4ae8, 0x2547, 0x8090, 0x1043, 0x4844, 0xf9a1, 0x0, 0x1);
        gbc.writeMem(0x4ae8, { 0x36, 0x9a });
        gbc.writeMem(0xf9a1, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2547, gbc.sp());
        EXPECT(0x4aea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xf9a1));
        // 36 0225
        gbc.setState(0x2886, 0xca3c, 0x47f0, 0xdc15, 0x1a25, 0x8556, 0x1, 0x1);
        gbc.writeMem(0x2886, { 0x36, 0x92 });
        gbc.writeMem(0x8556, { 0x0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xca3c, gbc.sp());
        EXPECT(0x2888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8556));
        // 36 0227
        gbc.setState(0x6b04, 0xcfd1, 0x74b0, 0x228a, 0xa3ac, 0xf720, 0x0, 0x1);
        gbc.writeMem(0x6b04, { 0x36, 0xda });
        gbc.writeMem(0xf720, { 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xcfd1, gbc.sp());
        EXPECT(0x6b06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xf720));
        // 36 0228
        gbc.setState(0x61c, 0xe158, 0xabe0, 0xdd30, 0x9e9c, 0xd6a2, 0x1, 0x0);
        gbc.writeMem(0x61c, { 0x36, 0xe1 });
        gbc.writeMem(0xd6a2, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe158, gbc.sp());
        EXPECT(0x61e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd6a2));
        // 36 0229
        gbc.setState(0xdb1e, 0x57a6, 0xa1d0, 0x247a, 0x8d55, 0x80fd, 0x1, 0x1);
        gbc.writeMem(0x80fd, { 0x0 });
        gbc.writeMem(0xdb1e, { 0x36, 0x3b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x57a6, gbc.sp());
        EXPECT(0xdb20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x80fd));
        EXPECT(0x36, gbc.readMem(0xdb1e));
        EXPECT(0x3b, gbc.readMem(0xdb1f));
        // 36 022A
        gbc.setState(0xd00f, 0x3aca, 0x9710, 0x6fa6, 0xdf69, 0xf84d, 0x0, 0x1);
        gbc.writeMem(0xd00f, { 0x36, 0x45 });
        gbc.writeMem(0xf84d, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3aca, gbc.sp());
        EXPECT(0xd011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xd00f));
        EXPECT(0x45, gbc.readMem(0xd010));
        EXPECT(0x45, gbc.readMem(0xf84d));
        // 36 022C
        gbc.setState(0x8670, 0x7452, 0xe830, 0x7785, 0x4f93, 0xe4b8, 0x0, 0x1);
        gbc.writeMem(0x8670, { 0x36, 0x76 });
        gbc.writeMem(0xe4b8, { 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7452, gbc.sp());
        EXPECT(0x8672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8670));
        EXPECT(0x76, gbc.readMem(0x8671));
        EXPECT(0x76, gbc.readMem(0xe4b8));
        // 36 022D
        gbc.setState(0x8b3c, 0x8859, 0x5c00, 0x9ea3, 0x8461, 0xab35, 0x1, 0x0);
        gbc.writeMem(0x8b3c, { 0x36, 0x3b });
        gbc.writeMem(0xab35, { 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8859, gbc.sp());
        EXPECT(0x8b3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8b3c));
        EXPECT(0x3b, gbc.readMem(0x8b3d));
        EXPECT(0x3b, gbc.readMem(0xab35));
        // 36 022E
        gbc.setState(0x5196, 0xf3e3, 0xa0, 0x1db2, 0x71cd, 0xbc08, 0x0, 0x0);
        gbc.writeMem(0x5196, { 0x36, 0x28 });
        gbc.writeMem(0xbc08, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf3e3, gbc.sp());
        EXPECT(0x5198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xbc08));
        // 36 022F
        gbc.setState(0x59fd, 0x391, 0xd9e0, 0x91df, 0x52f9, 0xf29e, 0x0, 0x0);
        gbc.writeMem(0x59fd, { 0x36, 0xb8 });
        gbc.writeMem(0xf29e, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x391, gbc.sp());
        EXPECT(0x59ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xf29e));
        // 36 0230
        gbc.setState(0x6dc7, 0x7c01, 0xd920, 0x1e4e, 0x69bd, 0xe624, 0x1, 0x0);
        gbc.writeMem(0x6dc7, { 0x36, 0x2e });
        gbc.writeMem(0xe624, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7c01, gbc.sp());
        EXPECT(0x6dc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe624));
        // 36 0232
        gbc.setState(0xe9b4, 0x9744, 0x1800, 0x883d, 0x764d, 0xe241, 0x1, 0x1);
        gbc.writeMem(0xe241, { 0x0 });
        gbc.writeMem(0xe9b4, { 0x36, 0xb9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9744, gbc.sp());
        EXPECT(0xe9b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe241));
        EXPECT(0x36, gbc.readMem(0xe9b4));
        EXPECT(0xb9, gbc.readMem(0xe9b5));
        // 36 0236
        gbc.setState(0xef6, 0x6601, 0x7420, 0x3b55, 0x913f, 0xf521, 0x0, 0x1);
        gbc.writeMem(0xef6, { 0x36, 0x2b });
        gbc.writeMem(0xf521, { 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6601, gbc.sp());
        EXPECT(0xef8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xf521));
        // 36 0237
        gbc.setState(0x5a2e, 0xf9c8, 0xa880, 0x1cfd, 0xf0d6, 0xb68e, 0x0, 0x1);
        gbc.writeMem(0x5a2e, { 0x36, 0x4c });
        gbc.writeMem(0xb68e, { 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf9c8, gbc.sp());
        EXPECT(0x5a30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb68e));
        // 36 0238
        gbc.setState(0xa698, 0xa20e, 0x5020, 0xd84c, 0x8e1, 0x803b, 0x1, 0x0);
        gbc.writeMem(0x803b, { 0x0 });
        gbc.writeMem(0xa698, { 0x36, 0xbb });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa20e, gbc.sp());
        EXPECT(0xa69a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x803b));
        EXPECT(0x36, gbc.readMem(0xa698));
        EXPECT(0xbb, gbc.readMem(0xa699));
        // 36 023D
        gbc.setState(0xa352, 0x8ba6, 0x870, 0x19f9, 0x4dc5, 0xc5b4, 0x1, 0x1);
        gbc.writeMem(0xa352, { 0x36, 0xe8 });
        gbc.writeMem(0xc5b4, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8ba6, gbc.sp());
        EXPECT(0xa354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xa352));
        EXPECT(0xe8, gbc.readMem(0xa353));
        EXPECT(0xe8, gbc.readMem(0xc5b4));
        // 36 023F
        gbc.setState(0x2a3c, 0xf336, 0xb8d0, 0x49dd, 0x5da8, 0xaccd, 0x0, 0x0);
        gbc.writeMem(0x2a3c, { 0x36, 0xba });
        gbc.writeMem(0xaccd, { 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf336, gbc.sp());
        EXPECT(0x2a3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xaccd));
        // 36 0240
        gbc.setState(0xbfe9, 0xc416, 0xc00, 0x6228, 0x14a1, 0xa208, 0x1, 0x1);
        gbc.writeMem(0xa208, { 0x0 });
        gbc.writeMem(0xbfe9, { 0x36, 0x10 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc416, gbc.sp());
        EXPECT(0xbfeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa208));
        EXPECT(0x36, gbc.readMem(0xbfe9));
        EXPECT(0x10, gbc.readMem(0xbfea));
        // 36 0241
        gbc.setState(0x5995, 0x2f70, 0xdca0, 0x1fb5, 0x30c8, 0xcf88, 0x0, 0x0);
        gbc.writeMem(0x5995, { 0x36, 0x77 });
        gbc.writeMem(0xcf88, { 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2f70, gbc.sp());
        EXPECT(0x5997, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xcf88));
        // 36 0244
        gbc.setState(0x2d49, 0xde5, 0xd5e0, 0x2a4c, 0xb82a, 0xfd9c, 0x1, 0x0);
        gbc.writeMem(0x2d49, { 0x36, 0x7c });
        gbc.writeMem(0xfd9c, { 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xde5, gbc.sp());
        EXPECT(0x2d4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xfd9c));
        // 36 0248
        gbc.setState(0x6906, 0xf725, 0xa330, 0xab9f, 0x5646, 0xbeb2, 0x0, 0x0);
        gbc.writeMem(0x6906, { 0x36, 0x60 });
        gbc.writeMem(0xbeb2, { 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf725, gbc.sp());
        EXPECT(0x6908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xbeb2));
        // 36 0249
        gbc.setState(0x3a44, 0x629b, 0x9170, 0x8803, 0x492b, 0xa8a3, 0x1, 0x1);
        gbc.writeMem(0x3a44, { 0x36, 0xa2 });
        gbc.writeMem(0xa8a3, { 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x629b, gbc.sp());
        EXPECT(0x3a46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa8a3));
        // 36 024B
        gbc.setState(0x1927, 0x8a18, 0xee50, 0x68a9, 0xf71e, 0x8574, 0x0, 0x1);
        gbc.writeMem(0x1927, { 0x36, 0xb9 });
        gbc.writeMem(0x8574, { 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8a18, gbc.sp());
        EXPECT(0x1929, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8574));
        // 36 024E
        gbc.setState(0x89c1, 0x4754, 0x7d0, 0xf30, 0x5bb8, 0x9f47, 0x0, 0x0);
        gbc.writeMem(0x89c1, { 0x36, 0xa });
        gbc.writeMem(0x9f47, { 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4754, gbc.sp());
        EXPECT(0x89c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x89c1));
        EXPECT(0xa, gbc.readMem(0x89c2));
        EXPECT(0xa, gbc.readMem(0x9f47));
        // 36 024F
        gbc.setState(0x7965, 0xad81, 0xda60, 0x2226, 0x9d1f, 0xfb17, 0x0, 0x0);
        gbc.writeMem(0x7965, { 0x36, 0x8c });
        gbc.writeMem(0xfb17, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xad81, gbc.sp());
        EXPECT(0x7967, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xfb17));
        // 36 0250
        gbc.setState(0x5501, 0xebc0, 0x6c30, 0xd41a, 0x8d0a, 0xe4d7, 0x0, 0x1);
        gbc.writeMem(0x5501, { 0x36, 0x6b });
        gbc.writeMem(0xe4d7, { 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xebc0, gbc.sp());
        EXPECT(0x5503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xe4d7));
        // 36 0255
        gbc.setState(0xc7dd, 0xdbf0, 0xfd90, 0xce21, 0xd653, 0x8e89, 0x0, 0x1);
        gbc.writeMem(0x8e89, { 0x0 });
        gbc.writeMem(0xc7dd, { 0x36, 0xf7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xdbf0, gbc.sp());
        EXPECT(0xc7df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8e89));
        EXPECT(0x36, gbc.readMem(0xc7dd));
        EXPECT(0xf7, gbc.readMem(0xc7de));
        // 36 0257
        gbc.setState(0x5225, 0x290e, 0x8f80, 0x6cf8, 0x123e, 0xcf80, 0x1, 0x0);
        gbc.writeMem(0x5225, { 0x36, 0xcd });
        gbc.writeMem(0xcf80, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x290e, gbc.sp());
        EXPECT(0x5227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xcf80));
        // 36 0258
        gbc.setState(0xeef9, 0x1491, 0xeb50, 0x955a, 0x6d92, 0xde0b, 0x1, 0x1);
        gbc.writeMem(0xde0b, { 0x0 });
        gbc.writeMem(0xeef9, { 0x36, 0xdb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1491, gbc.sp());
        EXPECT(0xeefb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xde0b));
        EXPECT(0x36, gbc.readMem(0xeef9));
        EXPECT(0xdb, gbc.readMem(0xeefa));
        // 36 0259
        gbc.setState(0x9846, 0x14cc, 0x5050, 0xb6fd, 0xcb82, 0xb083, 0x1, 0x0);
        gbc.writeMem(0x9846, { 0x36, 0xb2 });
        gbc.writeMem(0xb083, { 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x14cc, gbc.sp());
        EXPECT(0x9848, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x9846));
        EXPECT(0xb2, gbc.readMem(0x9847));
        EXPECT(0xb2, gbc.readMem(0xb083));
        // 36 025F
        gbc.setState(0xaa43, 0x643c, 0xd1b0, 0xc5c0, 0x38f4, 0xc7b2, 0x1, 0x0);
        gbc.writeMem(0xaa43, { 0x36, 0xe3 });
        gbc.writeMem(0xc7b2, { 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x643c, gbc.sp());
        EXPECT(0xaa45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xaa43));
        EXPECT(0xe3, gbc.readMem(0xaa44));
        EXPECT(0xe3, gbc.readMem(0xc7b2));
        // 36 0260
        gbc.setState(0x7239, 0x38a2, 0x34a0, 0xc7e, 0x7a57, 0xb50c, 0x0, 0x0);
        gbc.writeMem(0x7239, { 0x36, 0x87 });
        gbc.writeMem(0xb50c, { 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x38a2, gbc.sp());
        EXPECT(0x723b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb50c));
        // 36 0261
        gbc.setState(0x12fe, 0x3f4a, 0xd20, 0xa478, 0xfc59, 0xb567, 0x1, 0x0);
        gbc.writeMem(0x12fe, { 0x36, 0x37 });
        gbc.writeMem(0xb567, { 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3f4a, gbc.sp());
        EXPECT(0x1300, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb567));
        // 36 0262
        gbc.setState(0x1c19, 0x6617, 0x6550, 0xf067, 0xbff7, 0xac52, 0x1, 0x1);
        gbc.writeMem(0x1c19, { 0x36, 0x5e });
        gbc.writeMem(0xac52, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6617, gbc.sp());
        EXPECT(0x1c1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xac52));
        // 36 0265
        gbc.setState(0xa494, 0xc608, 0xc040, 0x893b, 0x607c, 0x8bc8, 0x0, 0x0);
        gbc.writeMem(0x8bc8, { 0x0 });
        gbc.writeMem(0xa494, { 0x36, 0x5a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc608, gbc.sp());
        EXPECT(0xa496, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0x8bc8));
        EXPECT(0x36, gbc.readMem(0xa494));
        EXPECT(0x5a, gbc.readMem(0xa495));
        // 36 0266
        gbc.setState(0x6ba1, 0x2744, 0x76b0, 0xeae3, 0xbcac, 0x8394, 0x0, 0x1);
        gbc.writeMem(0x6ba1, { 0x36, 0x8a });
        gbc.writeMem(0x8394, { 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2744, gbc.sp());
        EXPECT(0x6ba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8394));
        // 36 0267
        gbc.setState(0x94fb, 0x7505, 0x8e50, 0xb571, 0x43f9, 0xdeae, 0x1, 0x1);
        gbc.writeMem(0x94fb, { 0x36, 0x18 });
        gbc.writeMem(0xdeae, { 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7505, gbc.sp());
        EXPECT(0x94fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x94fb));
        EXPECT(0x18, gbc.readMem(0x94fc));
        EXPECT(0x18, gbc.readMem(0xdeae));
        // 36 026D
        gbc.setState(0xd3a5, 0x7dea, 0x46f0, 0x2c16, 0x8025, 0xb3ea, 0x1, 0x1);
        gbc.writeMem(0xb3ea, { 0x0 });
        gbc.writeMem(0xd3a5, { 0x36, 0xf7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7dea, gbc.sp());
        EXPECT(0xd3a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xb3ea));
        EXPECT(0x36, gbc.readMem(0xd3a5));
        EXPECT(0xf7, gbc.readMem(0xd3a6));
        // 36 0273
        gbc.setState(0x3f93, 0x7333, 0x6540, 0x20dd, 0xa2b, 0xd948, 0x1, 0x1);
        gbc.writeMem(0x3f93, { 0x36, 0xd6 });
        gbc.writeMem(0xd948, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7333, gbc.sp());
        EXPECT(0x3f95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd948));
        // 36 0274
        gbc.setState(0xbebb, 0x9c91, 0xde60, 0x514c, 0x70ec, 0x8c9a, 0x0, 0x1);
        gbc.writeMem(0x8c9a, { 0x0 });
        gbc.writeMem(0xbebb, { 0x36, 0xda });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9c91, gbc.sp());
        EXPECT(0xbebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8c9a));
        EXPECT(0x36, gbc.readMem(0xbebb));
        EXPECT(0xda, gbc.readMem(0xbebc));
        // 36 0275
        gbc.setState(0x3e81, 0xd3ee, 0x4440, 0x9748, 0x4109, 0x94c7, 0x1, 0x0);
        gbc.writeMem(0x3e81, { 0x36, 0xdb });
        gbc.writeMem(0x94c7, { 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd3ee, gbc.sp());
        EXPECT(0x3e83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0x94c7));
        // 36 0277
        gbc.setState(0x78d0, 0x2848, 0x1180, 0xd9fc, 0xc80f, 0x93bb, 0x1, 0x0);
        gbc.writeMem(0x78d0, { 0x36, 0xb0 });
        gbc.writeMem(0x93bb, { 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2848, gbc.sp());
        EXPECT(0x78d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x93bb));
        // 36 0279
        gbc.setState(0x82ee, 0x52b0, 0xa190, 0xce27, 0x5a82, 0x836a, 0x1, 0x0);
        gbc.writeMem(0x82ee, { 0x36, 0xeb });
        gbc.writeMem(0x836a, { 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x52b0, gbc.sp());
        EXPECT(0x82f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x82ee));
        EXPECT(0xeb, gbc.readMem(0x82ef));
        EXPECT(0xeb, gbc.readMem(0x836a));
        // 36 0283
        gbc.setState(0xa969, 0xc7e0, 0xe830, 0xa244, 0x19c8, 0xc1be, 0x0, 0x1);
        gbc.writeMem(0xa969, { 0x36, 0xc0 });
        gbc.writeMem(0xc1be, { 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc7e0, gbc.sp());
        EXPECT(0xa96b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xa969));
        EXPECT(0xc0, gbc.readMem(0xa96a));
        EXPECT(0xc0, gbc.readMem(0xc1be));
        // 36 0285
        gbc.setState(0x72c0, 0xaec2, 0xaea0, 0xcc06, 0x642b, 0xd3a0, 0x0, 0x1);
        gbc.writeMem(0x72c0, { 0x36, 0x55 });
        gbc.writeMem(0xd3a0, { 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xaec2, gbc.sp());
        EXPECT(0x72c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd3a0));
        // 36 0286
        gbc.setState(0x316c, 0xda85, 0xfb10, 0x4625, 0x1a7a, 0xc7ad, 0x1, 0x0);
        gbc.writeMem(0x316c, { 0x36, 0xbf });
        gbc.writeMem(0xc7ad, { 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xda85, gbc.sp());
        EXPECT(0x316e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc7ad));
        // 36 0287
        gbc.setState(0xdf19, 0x678d, 0xbd10, 0x12c1, 0x1ecf, 0xd198, 0x0, 0x1);
        gbc.writeMem(0xd198, { 0x0 });
        gbc.writeMem(0xdf19, { 0x36, 0xf5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x678d, gbc.sp());
        EXPECT(0xdf1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xd198));
        EXPECT(0x36, gbc.readMem(0xdf19));
        EXPECT(0xf5, gbc.readMem(0xdf1a));
        // 36 0289
        gbc.setState(0x8263, 0x8f80, 0x2180, 0x861d, 0x8fa6, 0xa081, 0x1, 0x1);
        gbc.writeMem(0x8263, { 0x36, 0x83 });
        gbc.writeMem(0xa081, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8f80, gbc.sp());
        EXPECT(0x8265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8263));
        EXPECT(0x83, gbc.readMem(0x8264));
        EXPECT(0x83, gbc.readMem(0xa081));
        // 36 028D
        gbc.setState(0xc3de, 0x6640, 0xe740, 0x3037, 0x7d3d, 0xd390, 0x0, 0x1);
        gbc.writeMem(0xc3de, { 0x36, 0x27 });
        gbc.writeMem(0xd390, { 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6640, gbc.sp());
        EXPECT(0xc3e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xc3de));
        EXPECT(0x27, gbc.readMem(0xc3df));
        EXPECT(0x27, gbc.readMem(0xd390));
        // 36 028E
        gbc.setState(0xe9bd, 0x1973, 0x7ba0, 0xce4a, 0x2329, 0xe266, 0x0, 0x0);
        gbc.writeMem(0xe266, { 0x0 });
        gbc.writeMem(0xe9bd, { 0x36, 0x3f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1973, gbc.sp());
        EXPECT(0xe9bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xe266));
        EXPECT(0x36, gbc.readMem(0xe9bd));
        EXPECT(0x3f, gbc.readMem(0xe9be));
        // 36 0298
        gbc.setState(0x2fdc, 0x25a2, 0xf5c0, 0xe418, 0x450c, 0xafc0, 0x1, 0x1);
        gbc.writeMem(0x2fdc, { 0x36, 0x62 });
        gbc.writeMem(0xafc0, { 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x25a2, gbc.sp());
        EXPECT(0x2fde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xafc0));
        // 36 0299
        gbc.setState(0xb6eb, 0x12a7, 0x20a0, 0xf1eb, 0xae74, 0xcfd1, 0x0, 0x0);
        gbc.writeMem(0xb6eb, { 0x36, 0x54 });
        gbc.writeMem(0xcfd1, { 0x0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x12a7, gbc.sp());
        EXPECT(0xb6ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xb6eb));
        EXPECT(0x54, gbc.readMem(0xb6ec));
        EXPECT(0x54, gbc.readMem(0xcfd1));
        // 36 029A
        gbc.setState(0xb57b, 0xcc44, 0xa540, 0x97e5, 0x6987, 0xe703, 0x0, 0x1);
        gbc.writeMem(0xb57b, { 0x36, 0xa6 });
        gbc.writeMem(0xe703, { 0x0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xcc44, gbc.sp());
        EXPECT(0xb57d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xb57b));
        EXPECT(0xa6, gbc.readMem(0xb57c));
        EXPECT(0xa6, gbc.readMem(0xe703));
        // 36 029C
        gbc.setState(0x913f, 0xc7e, 0xac00, 0xeb8, 0x5f07, 0xee46, 0x1, 0x1);
        gbc.writeMem(0x913f, { 0x36, 0x16 });
        gbc.writeMem(0xee46, { 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc7e, gbc.sp());
        EXPECT(0x9141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x913f));
        EXPECT(0x16, gbc.readMem(0x9140));
        EXPECT(0x16, gbc.readMem(0xee46));
        // 36 02AB
        gbc.setState(0xd3ed, 0x2340, 0xa770, 0x8315, 0xa037, 0xdcd8, 0x0, 0x0);
        gbc.writeMem(0xd3ed, { 0x36, 0xe0 });
        gbc.writeMem(0xdcd8, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2340, gbc.sp());
        EXPECT(0xd3ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xd3ed));
        EXPECT(0xe0, gbc.readMem(0xd3ee));
        EXPECT(0xe0, gbc.readMem(0xdcd8));
        // 36 02AC
        gbc.setState(0xd27a, 0x19b5, 0x8600, 0x8fed, 0xef5b, 0x8748, 0x0, 0x0);
        gbc.writeMem(0x8748, { 0x0 });
        gbc.writeMem(0xd27a, { 0x36, 0x5e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x19b5, gbc.sp());
        EXPECT(0xd27c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8748));
        EXPECT(0x36, gbc.readMem(0xd27a));
        EXPECT(0x5e, gbc.readMem(0xd27b));
        // 36 02AD
        gbc.setState(0xd37a, 0x903e, 0xea80, 0x84de, 0x1050, 0xbee4, 0x1, 0x0);
        gbc.writeMem(0xbee4, { 0x0 });
        gbc.writeMem(0xd37a, { 0x36, 0xb2 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x903e, gbc.sp());
        EXPECT(0xd37c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xbee4));
        EXPECT(0x36, gbc.readMem(0xd37a));
        EXPECT(0xb2, gbc.readMem(0xd37b));
        // 36 02AF
        gbc.setState(0x9680, 0xc694, 0x9030, 0x3237, 0x1d60, 0x8205, 0x1, 0x1);
        gbc.writeMem(0x8205, { 0x0 });
        gbc.writeMem(0x9680, { 0x36, 0x5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc694, gbc.sp());
        EXPECT(0x9682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8205));
        EXPECT(0x36, gbc.readMem(0x9680));
        EXPECT(0x5, gbc.readMem(0x9681));
        // 36 02B1
        gbc.setState(0x6bfb, 0xfb9a, 0x9a70, 0x3853, 0xfbdb, 0xc19d, 0x1, 0x1);
        gbc.writeMem(0x6bfb, { 0x36, 0xb8 });
        gbc.writeMem(0xc19d, { 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xfb9a, gbc.sp());
        EXPECT(0x6bfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xc19d));
        // 36 02B2
        gbc.setState(0x1d2b, 0x63c0, 0xc910, 0x4812, 0xecc4, 0xccbd, 0x0, 0x1);
        gbc.writeMem(0x1d2b, { 0x36, 0xff });
        gbc.writeMem(0xccbd, { 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x63c0, gbc.sp());
        EXPECT(0x1d2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xccbd));
        // 36 02B3
        gbc.setState(0xee5a, 0x38f5, 0xc890, 0x7393, 0xaebf, 0x9fcf, 0x0, 0x0);
        gbc.writeMem(0x9fcf, { 0x0 });
        gbc.writeMem(0xee5a, { 0x36, 0x9f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x38f5, gbc.sp());
        EXPECT(0xee5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9fcf));
        EXPECT(0x36, gbc.readMem(0xee5a));
        EXPECT(0x9f, gbc.readMem(0xee5b));
        // 36 02B5
        gbc.setState(0x291c, 0xaf3a, 0x3ba0, 0x9d85, 0xb873, 0xc034, 0x1, 0x0);
        gbc.writeMem(0x291c, { 0x36, 0xf1 });
        gbc.writeMem(0xc034, { 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xaf3a, gbc.sp());
        EXPECT(0x291e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xc034));
        // 36 02B9
        gbc.setState(0xe8fb, 0x703, 0xda0, 0xfa88, 0xa8ba, 0xeeb0, 0x1, 0x0);
        gbc.writeMem(0xe8fb, { 0x36, 0xe9 });
        gbc.writeMem(0xeeb0, { 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x703, gbc.sp());
        EXPECT(0xe8fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xe8fb));
        EXPECT(0xe9, gbc.readMem(0xe8fc));
        EXPECT(0xe9, gbc.readMem(0xeeb0));
        // 36 02BC
        gbc.setState(0x2ae5, 0x8206, 0x6f70, 0x43fb, 0xa1a8, 0xc52b, 0x1, 0x1);
        gbc.writeMem(0x2ae5, { 0x36, 0xf0 });
        gbc.writeMem(0xc52b, { 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8206, gbc.sp());
        EXPECT(0x2ae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc52b));
        // 36 02BD
        gbc.setState(0xacc1, 0xdad, 0xb2f0, 0xe914, 0x673c, 0xefdb, 0x0, 0x1);
        gbc.writeMem(0xacc1, { 0x36, 0xdb });
        gbc.writeMem(0xefdb, { 0x0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xdad, gbc.sp());
        EXPECT(0xacc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xacc1));
        EXPECT(0xdb, gbc.readMem(0xacc2));
        EXPECT(0xdb, gbc.readMem(0xefdb));
        // 36 02BE
        gbc.setState(0x653e, 0x3a17, 0x55a0, 0xd283, 0xd225, 0xc71b, 0x0, 0x0);
        gbc.writeMem(0x653e, { 0x36, 0x58 });
        gbc.writeMem(0xc71b, { 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3a17, gbc.sp());
        EXPECT(0x6540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc71b));
        // 36 02BF
        gbc.setState(0xd3b4, 0x75c6, 0x2650, 0xb6d5, 0x3c9d, 0xde13, 0x1, 0x1);
        gbc.writeMem(0xd3b4, { 0x36, 0x27 });
        gbc.writeMem(0xde13, { 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x75c6, gbc.sp());
        EXPECT(0xd3b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xd3b4));
        EXPECT(0x27, gbc.readMem(0xd3b5));
        EXPECT(0x27, gbc.readMem(0xde13));
        // 36 02C0
        gbc.setState(0x7fca, 0x1aef, 0xff30, 0x33e8, 0x6235, 0xa4d7, 0x0, 0x1);
        gbc.writeMem(0x7fca, { 0x36, 0xac });
        gbc.writeMem(0xa4d7, { 0x0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1aef, gbc.sp());
        EXPECT(0x7fcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa4d7));
        // 36 02C1
        gbc.setState(0x137d, 0x911c, 0xb020, 0xb88a, 0xba65, 0xb08c, 0x0, 0x1);
        gbc.writeMem(0x137d, { 0x36, 0xeb });
        gbc.writeMem(0xb08c, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x911c, gbc.sp());
        EXPECT(0x137f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xb08c));
        // 36 02C2
        gbc.setState(0xd0c0, 0x6689, 0x3ad0, 0x85eb, 0x6f65, 0x96a8, 0x0, 0x1);
        gbc.writeMem(0x96a8, { 0x0 });
        gbc.writeMem(0xd0c0, { 0x36, 0x88 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6689, gbc.sp());
        EXPECT(0xd0c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x96a8));
        EXPECT(0x36, gbc.readMem(0xd0c0));
        EXPECT(0x88, gbc.readMem(0xd0c1));
        // 36 02C3
        gbc.setState(0xd574, 0x16b7, 0xc00, 0x6d77, 0x9574, 0xe7fc, 0x0, 0x0);
        gbc.writeMem(0xd574, { 0x36, 0x49 });
        gbc.writeMem(0xe7fc, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x16b7, gbc.sp());
        EXPECT(0xd576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xd574));
        EXPECT(0x49, gbc.readMem(0xd575));
        EXPECT(0x49, gbc.readMem(0xe7fc));
        // 36 02C7
        gbc.setState(0x78cd, 0xec29, 0x7270, 0x8ef3, 0xfc9b, 0xca64, 0x1, 0x0);
        gbc.writeMem(0x78cd, { 0x36, 0xec });
        gbc.writeMem(0xca64, { 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xec29, gbc.sp());
        EXPECT(0x78cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xca64));
        // 36 02CA
        gbc.setState(0x7e54, 0xd72, 0x8970, 0xad1e, 0xd878, 0xd8c7, 0x0, 0x0);
        gbc.writeMem(0x7e54, { 0x36, 0x2b });
        gbc.writeMem(0xd8c7, { 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd72, gbc.sp());
        EXPECT(0x7e56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd8c7));
        // 36 02CC
        gbc.setState(0x45c, 0xe12b, 0x7ec0, 0x5789, 0x8cad, 0xff9f, 0x0, 0x0);
        gbc.writeMem(0x45c, { 0x36, 0xa5 });
        gbc.writeMem(0xff9f, { 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe12b, gbc.sp());
        EXPECT(0x45e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xff9f));
        // 36 02CF
        gbc.setState(0x152a, 0x9427, 0x460, 0xa2eb, 0xcb9e, 0xc25a, 0x0, 0x1);
        gbc.writeMem(0x152a, { 0x36, 0x2d });
        gbc.writeMem(0xc25a, { 0x0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9427, gbc.sp());
        EXPECT(0x152c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc25a));
        // 36 02D1
        gbc.setState(0xc146, 0xd420, 0x7060, 0xa297, 0x3f32, 0xf892, 0x1, 0x0);
        gbc.writeMem(0xc146, { 0x36, 0x65 });
        gbc.writeMem(0xf892, { 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd420, gbc.sp());
        EXPECT(0xc148, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xc146));
        EXPECT(0x65, gbc.readMem(0xc147));
        EXPECT(0x65, gbc.readMem(0xf892));
        // 36 02D2
        gbc.setState(0x94a8, 0xed0a, 0x5c80, 0x81d6, 0xb08c, 0xa3bb, 0x1, 0x0);
        gbc.writeMem(0x94a8, { 0x36, 0xc1 });
        gbc.writeMem(0xa3bb, { 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xed0a, gbc.sp());
        EXPECT(0x94aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x94a8));
        EXPECT(0xc1, gbc.readMem(0x94a9));
        EXPECT(0xc1, gbc.readMem(0xa3bb));
        // 36 02D3
        gbc.setState(0xb90d, 0x448b, 0x28d0, 0x912b, 0xbc67, 0xf677, 0x0, 0x1);
        gbc.writeMem(0xb90d, { 0x36, 0x6d });
        gbc.writeMem(0xf677, { 0x0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x448b, gbc.sp());
        EXPECT(0xb90f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xb90d));
        EXPECT(0x6d, gbc.readMem(0xb90e));
        EXPECT(0x6d, gbc.readMem(0xf677));
        // 36 02D6
        gbc.setState(0xe028, 0xc56a, 0xaaf0, 0xf792, 0xd673, 0xfd7d, 0x0, 0x0);
        gbc.writeMem(0xe028, { 0x36, 0x2c });
        gbc.writeMem(0xfd7d, { 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc56a, gbc.sp());
        EXPECT(0xe02a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xe028));
        EXPECT(0x2c, gbc.readMem(0xe029));
        EXPECT(0x2c, gbc.readMem(0xfd7d));
        // 36 02D7
        gbc.setState(0x552e, 0xd862, 0x6820, 0x598c, 0xf2a1, 0x9673, 0x0, 0x0);
        gbc.writeMem(0x552e, { 0x36, 0xa2 });
        gbc.writeMem(0x9673, { 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd862, gbc.sp());
        EXPECT(0x5530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9673));
        // 36 02D8
        gbc.setState(0xe23b, 0x78fa, 0xdb10, 0x1627, 0xcf19, 0x9d80, 0x1, 0x1);
        gbc.writeMem(0x9d80, { 0x0 });
        gbc.writeMem(0xe23b, { 0x36, 0x84 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x78fa, gbc.sp());
        EXPECT(0xe23d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0x9d80));
        EXPECT(0x36, gbc.readMem(0xe23b));
        EXPECT(0x84, gbc.readMem(0xe23c));
        // 36 02DC
        gbc.setState(0x7866, 0xd80f, 0xad70, 0x475e, 0x8d9b, 0x8eac, 0x0, 0x0);
        gbc.writeMem(0x7866, { 0x36, 0x67 });
        gbc.writeMem(0x8eac, { 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd80f, gbc.sp());
        EXPECT(0x7868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0x8eac));
        // 36 02DE
        gbc.setState(0x8071, 0x9a4, 0xf6e0, 0x4fee, 0x6846, 0xbb83, 0x1, 0x1);
        gbc.writeMem(0x8071, { 0x36, 0xfb });
        gbc.writeMem(0xbb83, { 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9a4, gbc.sp());
        EXPECT(0x8073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8071));
        EXPECT(0xfb, gbc.readMem(0x8072));
        EXPECT(0xfb, gbc.readMem(0xbb83));
        // 36 02E1
        gbc.setState(0x86e2, 0xb5e2, 0xaae0, 0xa484, 0x9c60, 0xaa2e, 0x1, 0x1);
        gbc.writeMem(0x86e2, { 0x36, 0xef });
        gbc.writeMem(0xaa2e, { 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb5e2, gbc.sp());
        EXPECT(0x86e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x86e2));
        EXPECT(0xef, gbc.readMem(0x86e3));
        EXPECT(0xef, gbc.readMem(0xaa2e));
        // 36 02E5
        gbc.setState(0x4c41, 0x2cf4, 0x8460, 0x6d69, 0x8e8d, 0xcc87, 0x1, 0x1);
        gbc.writeMem(0x4c41, { 0x36, 0x6f });
        gbc.writeMem(0xcc87, { 0x0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2cf4, gbc.sp());
        EXPECT(0x4c43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xcc87));
        // 36 02E7
        gbc.setState(0x185d, 0x2c07, 0xc2e0, 0x39e6, 0x80ea, 0xfc5d, 0x0, 0x1);
        gbc.writeMem(0x185d, { 0x36, 0x78 });
        gbc.writeMem(0xfc5d, { 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2c07, gbc.sp());
        EXPECT(0x185f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xfc5d));
        // 36 02E8
        gbc.setState(0x4710, 0xbe7a, 0x4320, 0xbff, 0x3482, 0xd0c7, 0x0, 0x1);
        gbc.writeMem(0x4710, { 0x36, 0x2e });
        gbc.writeMem(0xd0c7, { 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xbe7a, gbc.sp());
        EXPECT(0x4712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xd0c7));
        // 36 02EF
        gbc.setState(0xd417, 0x7d07, 0xac90, 0x6e90, 0x88f2, 0x8b10, 0x1, 0x0);
        gbc.writeMem(0x8b10, { 0x0 });
        gbc.writeMem(0xd417, { 0x36, 0x9c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7d07, gbc.sp());
        EXPECT(0xd419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8b10));
        EXPECT(0x36, gbc.readMem(0xd417));
        EXPECT(0x9c, gbc.readMem(0xd418));
        // 36 02F2
        gbc.setState(0xb62f, 0x7043, 0x2b50, 0x962d, 0xf08a, 0xa58b, 0x1, 0x0);
        gbc.writeMem(0xa58b, { 0x0 });
        gbc.writeMem(0xb62f, { 0x36, 0x1b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7043, gbc.sp());
        EXPECT(0xb631, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xa58b));
        EXPECT(0x36, gbc.readMem(0xb62f));
        EXPECT(0x1b, gbc.readMem(0xb630));
        // 36 02F3
        gbc.setState(0xe7d0, 0x8842, 0x8a70, 0x28f6, 0x9953, 0xcf58, 0x0, 0x1);
        gbc.writeMem(0xcf58, { 0x0 });
        gbc.writeMem(0xe7d0, { 0x36, 0x46 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8842, gbc.sp());
        EXPECT(0xe7d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xcf58));
        EXPECT(0x36, gbc.readMem(0xe7d0));
        EXPECT(0x46, gbc.readMem(0xe7d1));
        // 36 02F6
        gbc.setState(0x4b26, 0xaea4, 0x2610, 0x4356, 0x5bb7, 0xccb1, 0x0, 0x1);
        gbc.writeMem(0x4b26, { 0x36, 0xef });
        gbc.writeMem(0xccb1, { 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xaea4, gbc.sp());
        EXPECT(0x4b28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xccb1));
        // 36 02F9
        gbc.setState(0x84ea, 0xc736, 0xba80, 0x1ba3, 0x7c95, 0x84d4, 0x1, 0x0);
        gbc.writeMem(0x84d4, { 0x0 });
        gbc.writeMem(0x84ea, { 0x36, 0x6d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc736, gbc.sp());
        EXPECT(0x84ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x84d4));
        EXPECT(0x36, gbc.readMem(0x84ea));
        EXPECT(0x6d, gbc.readMem(0x84eb));
        // 36 02FA
        gbc.setState(0x5e5c, 0x23c6, 0xf0f0, 0x121, 0xb3e1, 0xc5b4, 0x1, 0x1);
        gbc.writeMem(0x5e5c, { 0x36, 0xc3 });
        gbc.writeMem(0xc5b4, { 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x23c6, gbc.sp());
        EXPECT(0x5e5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc5b4));
        // 36 02FC
        gbc.setState(0x173a, 0x1b5f, 0xac0, 0x7b43, 0xf334, 0x9d4e, 0x0, 0x0);
        gbc.writeMem(0x173a, { 0x36, 0xbe });
        gbc.writeMem(0x9d4e, { 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1b5f, gbc.sp());
        EXPECT(0x173c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0x9d4e));
        // 36 02FE
        gbc.setState(0xe493, 0xf9e0, 0x84f0, 0xc80, 0xae45, 0x9d5c, 0x0, 0x0);
        gbc.writeMem(0x9d5c, { 0x0 });
        gbc.writeMem(0xe493, { 0x36, 0x4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf9e0, gbc.sp());
        EXPECT(0xe495, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9d5c));
        EXPECT(0x36, gbc.readMem(0xe493));
        EXPECT(0x4, gbc.readMem(0xe494));
        // 36 0300
        gbc.setState(0xffc, 0xa01f, 0xe940, 0x16e1, 0x4970, 0xf543, 0x0, 0x1);
        gbc.writeMem(0xffc, { 0x36, 0x5 });
        gbc.writeMem(0xf543, { 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa01f, gbc.sp());
        EXPECT(0xffe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xf543));
        // 36 0301
        gbc.setState(0xa17d, 0x3341, 0xd600, 0xeeea, 0x53ee, 0xf527, 0x1, 0x0);
        gbc.writeMem(0xa17d, { 0x36, 0x19 });
        gbc.writeMem(0xf527, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3341, gbc.sp());
        EXPECT(0xa17f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xa17d));
        EXPECT(0x19, gbc.readMem(0xa17e));
        EXPECT(0x19, gbc.readMem(0xf527));
        // 36 0302
        gbc.setState(0xd73, 0xfb02, 0xa960, 0xe554, 0xf186, 0x8a59, 0x1, 0x0);
        gbc.writeMem(0xd73, { 0x36, 0xa7 });
        gbc.writeMem(0x8a59, { 0x0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xfb02, gbc.sp());
        EXPECT(0xd75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8a59));
        // 36 0304
        gbc.setState(0x719e, 0xac33, 0x4ea0, 0xfb76, 0x5ab5, 0x869f, 0x0, 0x0);
        gbc.writeMem(0x719e, { 0x36, 0x51 });
        gbc.writeMem(0x869f, { 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xac33, gbc.sp());
        EXPECT(0x71a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x869f));
        // 36 0308
        gbc.setState(0xc8f3, 0x61f3, 0xe0a0, 0xd90c, 0x89cd, 0xbc72, 0x1, 0x1);
        gbc.writeMem(0xbc72, { 0x0 });
        gbc.writeMem(0xc8f3, { 0x36, 0xeb });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x61f3, gbc.sp());
        EXPECT(0xc8f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xbc72));
        EXPECT(0x36, gbc.readMem(0xc8f3));
        EXPECT(0xeb, gbc.readMem(0xc8f4));
        // 36 030A
        gbc.setState(0xe3ef, 0x1358, 0x93b0, 0x8f94, 0x4bb1, 0x86fd, 0x1, 0x0);
        gbc.writeMem(0x86fd, { 0x0 });
        gbc.writeMem(0xe3ef, { 0x36, 0x65 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1358, gbc.sp());
        EXPECT(0xe3f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x86fd));
        EXPECT(0x36, gbc.readMem(0xe3ef));
        EXPECT(0x65, gbc.readMem(0xe3f0));
        // 36 030D
        gbc.setState(0xb48f, 0x18df, 0xa10, 0x1e2c, 0x30c4, 0xa50f, 0x0, 0x1);
        gbc.writeMem(0xa50f, { 0x0 });
        gbc.writeMem(0xb48f, { 0x36, 0x8d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x18df, gbc.sp());
        EXPECT(0xb491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa50f));
        EXPECT(0x36, gbc.readMem(0xb48f));
        EXPECT(0x8d, gbc.readMem(0xb490));
        // 36 030E
        gbc.setState(0xdf7a, 0x43d2, 0x4ca0, 0xde8c, 0x1767, 0xa85d, 0x0, 0x1);
        gbc.writeMem(0xa85d, { 0x0 });
        gbc.writeMem(0xdf7a, { 0x36, 0xed });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x43d2, gbc.sp());
        EXPECT(0xdf7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xa85d));
        EXPECT(0x36, gbc.readMem(0xdf7a));
        EXPECT(0xed, gbc.readMem(0xdf7b));
        // 36 030F
        gbc.setState(0xda6a, 0x1154, 0xd510, 0xd843, 0x884c, 0xaf0e, 0x0, 0x0);
        gbc.writeMem(0xaf0e, { 0x0 });
        gbc.writeMem(0xda6a, { 0x36, 0x71 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1154, gbc.sp());
        EXPECT(0xda6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xaf0e));
        EXPECT(0x36, gbc.readMem(0xda6a));
        EXPECT(0x71, gbc.readMem(0xda6b));
        // 36 0310
        gbc.setState(0x978d, 0x8410, 0x35c0, 0x70e4, 0xa59c, 0x9989, 0x1, 0x0);
        gbc.writeMem(0x978d, { 0x36, 0x28 });
        gbc.writeMem(0x9989, { 0x0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8410, gbc.sp());
        EXPECT(0x978f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x978d));
        EXPECT(0x28, gbc.readMem(0x978e));
        EXPECT(0x28, gbc.readMem(0x9989));
        // 36 0311
        gbc.setState(0x2676, 0x5832, 0x38b0, 0x8760, 0xa23e, 0xcfae, 0x1, 0x1);
        gbc.writeMem(0x2676, { 0x36, 0x78 });
        gbc.writeMem(0xcfae, { 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5832, gbc.sp());
        EXPECT(0x2678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xcfae));
        // 36 0313
        gbc.setState(0x36e, 0x7186, 0x3020, 0x3292, 0x1ece, 0xa42a, 0x0, 0x0);
        gbc.writeMem(0x36e, { 0x36, 0x1a });
        gbc.writeMem(0xa42a, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7186, gbc.sp());
        EXPECT(0x370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa42a));
        // 36 0314
        gbc.setState(0x70c9, 0xff5d, 0xc6a0, 0x828d, 0xe848, 0xefea, 0x1, 0x1);
        gbc.writeMem(0x70c9, { 0x36, 0xb7 });
        gbc.writeMem(0xefea, { 0x0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xff5d, gbc.sp());
        EXPECT(0x70cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xefea));
        // 36 0315
        gbc.setState(0x892d, 0x6827, 0xc800, 0xb56c, 0x5702, 0xee5d, 0x0, 0x0);
        gbc.writeMem(0x892d, { 0x36, 0x2a });
        gbc.writeMem(0xee5d, { 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6827, gbc.sp());
        EXPECT(0x892f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x892d));
        EXPECT(0x2a, gbc.readMem(0x892e));
        EXPECT(0x2a, gbc.readMem(0xee5d));
        // 36 031A
        gbc.setState(0xeb23, 0x31a3, 0xe460, 0x908f, 0x3948, 0xa2c4, 0x1, 0x1);
        gbc.writeMem(0xa2c4, { 0x0 });
        gbc.writeMem(0xeb23, { 0x36, 0xe2 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x31a3, gbc.sp());
        EXPECT(0xeb25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa2c4));
        EXPECT(0x36, gbc.readMem(0xeb23));
        EXPECT(0xe2, gbc.readMem(0xeb24));
        // 36 031D
        gbc.setState(0x23fb, 0xc5f5, 0x4960, 0xd202, 0xdcbb, 0x872d, 0x1, 0x1);
        gbc.writeMem(0x23fb, { 0x36, 0x20 });
        gbc.writeMem(0x872d, { 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc5f5, gbc.sp());
        EXPECT(0x23fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x872d));
        // 36 031E
        gbc.setState(0x65ae, 0x8fbd, 0x2460, 0x9cce, 0x2913, 0xf513, 0x1, 0x1);
        gbc.writeMem(0x65ae, { 0x36, 0x20 });
        gbc.writeMem(0xf513, { 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8fbd, gbc.sp());
        EXPECT(0x65b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xf513));
        // 36 0320
        gbc.setState(0x6d56, 0x407a, 0x6290, 0xdcb5, 0xfce2, 0x8d71, 0x0, 0x0);
        gbc.writeMem(0x6d56, { 0x36, 0x34 });
        gbc.writeMem(0x8d71, { 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x407a, gbc.sp());
        EXPECT(0x6d58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x8d71));
        // 36 0321
        gbc.setState(0x7707, 0xfc9f, 0xec80, 0x3a04, 0x96fe, 0x9f97, 0x0, 0x0);
        gbc.writeMem(0x7707, { 0x36, 0xfe });
        gbc.writeMem(0x9f97, { 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xfc9f, gbc.sp());
        EXPECT(0x7709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9f97));
        // 36 0322
        gbc.setState(0x197d, 0x38c7, 0xdc50, 0x6ad5, 0xc81c, 0xdbb0, 0x0, 0x0);
        gbc.writeMem(0x197d, { 0x36, 0xb8 });
        gbc.writeMem(0xdbb0, { 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x38c7, gbc.sp());
        EXPECT(0x197f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xdbb0));
        // 36 0323
        gbc.setState(0x696a, 0xaf27, 0xca10, 0x2b5, 0x70d8, 0x8304, 0x1, 0x0);
        gbc.writeMem(0x696a, { 0x36, 0x87 });
        gbc.writeMem(0x8304, { 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xaf27, gbc.sp());
        EXPECT(0x696c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8304));
        // 36 0324
        gbc.setState(0x8f7e, 0x9e48, 0x9720, 0x21d3, 0x2d75, 0xa710, 0x0, 0x1);
        gbc.writeMem(0x8f7e, { 0x36, 0x11 });
        gbc.writeMem(0xa710, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9e48, gbc.sp());
        EXPECT(0x8f80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8f7e));
        EXPECT(0x11, gbc.readMem(0x8f7f));
        EXPECT(0x11, gbc.readMem(0xa710));
        // 36 0325
        gbc.setState(0x3c70, 0x19d7, 0x6d0, 0xac6b, 0x9f95, 0xb910, 0x1, 0x0);
        gbc.writeMem(0x3c70, { 0x36, 0xf2 });
        gbc.writeMem(0xb910, { 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x19d7, gbc.sp());
        EXPECT(0x3c72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xb910));
        // 36 0327
        gbc.setState(0x9fb3, 0xa790, 0x85f0, 0x3cf5, 0xe928, 0xa5b9, 0x1, 0x1);
        gbc.writeMem(0x9fb3, { 0x36, 0x90 });
        gbc.writeMem(0xa5b9, { 0x0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa790, gbc.sp());
        EXPECT(0x9fb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x9fb3));
        EXPECT(0x90, gbc.readMem(0x9fb4));
        EXPECT(0x90, gbc.readMem(0xa5b9));
        // 36 032B
        gbc.setState(0x720d, 0xb6f5, 0x2880, 0xc086, 0xe494, 0x95f7, 0x0, 0x1);
        gbc.writeMem(0x720d, { 0x36, 0xa1 });
        gbc.writeMem(0x95f7, { 0x0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb6f5, gbc.sp());
        EXPECT(0x720f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x95f7));
        // 36 032D
        gbc.setState(0x5af, 0x91e0, 0x6d40, 0x45e3, 0x115a, 0xbdb4, 0x1, 0x0);
        gbc.writeMem(0x5af, { 0x36, 0xd5 });
        gbc.writeMem(0xbdb4, { 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x91e0, gbc.sp());
        EXPECT(0x5b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xbdb4));
        // 36 032E
        gbc.setState(0x7ba3, 0x8e32, 0x5b40, 0x7f95, 0xb18, 0xe245, 0x0, 0x0);
        gbc.writeMem(0x7ba3, { 0x36, 0xb6 });
        gbc.writeMem(0xe245, { 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8e32, gbc.sp());
        EXPECT(0x7ba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xe245));
        // 36 0330
        gbc.setState(0xef39, 0xe3ed, 0xe360, 0xab7d, 0xa205, 0xe63f, 0x1, 0x0);
        gbc.writeMem(0xe63f, { 0x0 });
        gbc.writeMem(0xef39, { 0x36, 0x25 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe3ed, gbc.sp());
        EXPECT(0xef3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe63f));
        EXPECT(0x36, gbc.readMem(0xef39));
        EXPECT(0x25, gbc.readMem(0xef3a));
        // 36 0331
        gbc.setState(0x3be2, 0xb517, 0xb1f0, 0xe1ec, 0x4a3e, 0x9696, 0x1, 0x0);
        gbc.writeMem(0x3be2, { 0x36, 0xc6 });
        gbc.writeMem(0x9696, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb517, gbc.sp());
        EXPECT(0x3be4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9696));
        // 36 0332
        gbc.setState(0xcc5b, 0x8b9e, 0xf020, 0x696d, 0xc81c, 0xc0ff, 0x0, 0x0);
        gbc.writeMem(0xc0ff, { 0x0 });
        gbc.writeMem(0xcc5b, { 0x36, 0x21 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8b9e, gbc.sp());
        EXPECT(0xcc5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc0ff));
        EXPECT(0x36, gbc.readMem(0xcc5b));
        EXPECT(0x21, gbc.readMem(0xcc5c));
        // 36 033B
        gbc.setState(0x465d, 0xb8d4, 0x4b70, 0x7abb, 0x3913, 0x8c93, 0x1, 0x0);
        gbc.writeMem(0x465d, { 0x36, 0xac });
        gbc.writeMem(0x8c93, { 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb8d4, gbc.sp());
        EXPECT(0x465f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8c93));
        // 36 033D
        gbc.setState(0xba6a, 0xe136, 0xf8b0, 0xc51e, 0x630f, 0xfbc8, 0x0, 0x0);
        gbc.writeMem(0xba6a, { 0x36, 0x42 });
        gbc.writeMem(0xfbc8, { 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe136, gbc.sp());
        EXPECT(0xba6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xba6a));
        EXPECT(0x42, gbc.readMem(0xba6b));
        EXPECT(0x42, gbc.readMem(0xfbc8));
        // 36 0342
        gbc.setState(0xe1b0, 0x452b, 0x9f80, 0xea3e, 0x3bbf, 0xd597, 0x1, 0x1);
        gbc.writeMem(0xd597, { 0x0 });
        gbc.writeMem(0xe1b0, { 0x36, 0x3c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x452b, gbc.sp());
        EXPECT(0xe1b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd597));
        EXPECT(0x36, gbc.readMem(0xe1b0));
        EXPECT(0x3c, gbc.readMem(0xe1b1));
        // 36 0345
        gbc.setState(0x68c6, 0x324e, 0xb2b0, 0x900c, 0xa0a1, 0xb209, 0x0, 0x0);
        gbc.writeMem(0x68c6, { 0x36, 0x59 });
        gbc.writeMem(0xb209, { 0x0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x324e, gbc.sp());
        EXPECT(0x68c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xb209));
        // 36 0346
        gbc.setState(0x23dc, 0x39aa, 0x1d00, 0xb3a, 0xd241, 0xaf91, 0x1, 0x1);
        gbc.writeMem(0x23dc, { 0x36, 0x8a });
        gbc.writeMem(0xaf91, { 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x39aa, gbc.sp());
        EXPECT(0x23de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xaf91));
        // 36 0347
        gbc.setState(0x5087, 0x7f31, 0xe1b0, 0x68ef, 0xc645, 0xdd76, 0x0, 0x0);
        gbc.writeMem(0x5087, { 0x36, 0x12 });
        gbc.writeMem(0xdd76, { 0x0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7f31, gbc.sp());
        EXPECT(0x5089, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xdd76));
        // 36 0349
        gbc.setState(0xd5a2, 0x23ad, 0xd380, 0x8e59, 0xa443, 0x8095, 0x1, 0x1);
        gbc.writeMem(0x8095, { 0x0 });
        gbc.writeMem(0xd5a2, { 0x36, 0x3b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x23ad, gbc.sp());
        EXPECT(0xd5a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8095));
        EXPECT(0x36, gbc.readMem(0xd5a2));
        EXPECT(0x3b, gbc.readMem(0xd5a3));
        // 36 034A
        gbc.setState(0x88d0, 0x456, 0x4230, 0x4239, 0x9e5f, 0x920a, 0x1, 0x1);
        gbc.writeMem(0x88d0, { 0x36, 0xd4 });
        gbc.writeMem(0x920a, { 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x456, gbc.sp());
        EXPECT(0x88d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x88d0));
        EXPECT(0xd4, gbc.readMem(0x88d1));
        EXPECT(0xd4, gbc.readMem(0x920a));
        // 36 034B
        gbc.setState(0x2a9e, 0xda66, 0xab90, 0x1cae, 0x68c5, 0xccd7, 0x0, 0x1);
        gbc.writeMem(0x2a9e, { 0x36, 0x2b });
        gbc.writeMem(0xccd7, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xda66, gbc.sp());
        EXPECT(0x2aa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xccd7));
        // 36 034C
        gbc.setState(0x9eaf, 0x2766, 0x1920, 0x3499, 0xe611, 0xb20d, 0x0, 0x1);
        gbc.writeMem(0x9eaf, { 0x36, 0xd3 });
        gbc.writeMem(0xb20d, { 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2766, gbc.sp());
        EXPECT(0x9eb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x9eaf));
        EXPECT(0xd3, gbc.readMem(0x9eb0));
        EXPECT(0xd3, gbc.readMem(0xb20d));
        // 36 0352
        gbc.setState(0x1507, 0x89c3, 0xbb40, 0x276d, 0x9d8, 0xb7b5, 0x0, 0x1);
        gbc.writeMem(0x1507, { 0x36, 0xe1 });
        gbc.writeMem(0xb7b5, { 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x89c3, gbc.sp());
        EXPECT(0x1509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb7b5));
        // 36 0353
        gbc.setState(0xa580, 0xfc6d, 0x80f0, 0x7464, 0x4901, 0xefd5, 0x1, 0x0);
        gbc.writeMem(0xa580, { 0x36, 0xa7 });
        gbc.writeMem(0xefd5, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfc6d, gbc.sp());
        EXPECT(0xa582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xa580));
        EXPECT(0xa7, gbc.readMem(0xa581));
        EXPECT(0xa7, gbc.readMem(0xefd5));
        // 36 0355
        gbc.setState(0xe51f, 0x82ee, 0x2180, 0x16cf, 0x6720, 0xa5d0, 0x0, 0x0);
        gbc.writeMem(0xa5d0, { 0x0 });
        gbc.writeMem(0xe51f, { 0x36, 0x1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x82ee, gbc.sp());
        EXPECT(0xe521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xa5d0));
        EXPECT(0x36, gbc.readMem(0xe51f));
        EXPECT(0x1, gbc.readMem(0xe520));
        // 36 0359
        gbc.setState(0x5baa, 0x8e56, 0x5940, 0xdcdb, 0xedd6, 0xc083, 0x1, 0x1);
        gbc.writeMem(0x5baa, { 0x36, 0x38 });
        gbc.writeMem(0xc083, { 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8e56, gbc.sp());
        EXPECT(0x5bac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc083));
        // 36 035D
        gbc.setState(0xeebe, 0xdc53, 0xcfc0, 0xc84f, 0x3cb, 0xf2b1, 0x0, 0x0);
        gbc.writeMem(0xeebe, { 0x36, 0x94 });
        gbc.writeMem(0xf2b1, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xdc53, gbc.sp());
        EXPECT(0xeec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xeebe));
        EXPECT(0x94, gbc.readMem(0xeebf));
        EXPECT(0x94, gbc.readMem(0xf2b1));
        // 36 035E
        gbc.setState(0xb41d, 0x7119, 0xfec0, 0x8778, 0x934d, 0xbb37, 0x0, 0x0);
        gbc.writeMem(0xb41d, { 0x36, 0x78 });
        gbc.writeMem(0xbb37, { 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7119, gbc.sp());
        EXPECT(0xb41f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xb41d));
        EXPECT(0x78, gbc.readMem(0xb41e));
        EXPECT(0x78, gbc.readMem(0xbb37));
        // 36 035F
        gbc.setState(0x1efe, 0x980b, 0x2320, 0xb4c, 0xd4e, 0xac82, 0x1, 0x1);
        gbc.writeMem(0x1efe, { 0x36, 0x8d });
        gbc.writeMem(0xac82, { 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x980b, gbc.sp());
        EXPECT(0x1f00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xac82));
        // 36 0360
        gbc.setState(0x30ec, 0xcdfc, 0x3ad0, 0x4eb0, 0xf9c2, 0xf05e, 0x1, 0x1);
        gbc.writeMem(0x30ec, { 0x36, 0x9f });
        gbc.writeMem(0xf05e, { 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xcdfc, gbc.sp());
        EXPECT(0x30ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xf05e));
        // 36 0362
        gbc.setState(0xa223, 0x400, 0x68a0, 0x1200, 0xe9e3, 0xb4c6, 0x1, 0x1);
        gbc.writeMem(0xa223, { 0x36, 0xf1 });
        gbc.writeMem(0xb4c6, { 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x400, gbc.sp());
        EXPECT(0xa225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xa223));
        EXPECT(0xf1, gbc.readMem(0xa224));
        EXPECT(0xf1, gbc.readMem(0xb4c6));
        // 36 0366
        gbc.setState(0xb1dc, 0xc40c, 0x67b0, 0xd00f, 0x3440, 0x89b5, 0x1, 0x0);
        gbc.writeMem(0x89b5, { 0x0 });
        gbc.writeMem(0xb1dc, { 0x36, 0x8b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc40c, gbc.sp());
        EXPECT(0xb1de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x89b5));
        EXPECT(0x36, gbc.readMem(0xb1dc));
        EXPECT(0x8b, gbc.readMem(0xb1dd));
        // 36 0369
        gbc.setState(0x7486, 0x1ac5, 0x9e10, 0x3dc0, 0x66fe, 0x90f5, 0x1, 0x1);
        gbc.writeMem(0x7486, { 0x36, 0x9f });
        gbc.writeMem(0x90f5, { 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1ac5, gbc.sp());
        EXPECT(0x7488, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x90f5));
        // 36 036A
        gbc.setState(0x70e3, 0x99a9, 0xeb70, 0x62dd, 0xcae7, 0xde07, 0x0, 0x1);
        gbc.writeMem(0x70e3, { 0x36, 0xad });
        gbc.writeMem(0xde07, { 0x0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x99a9, gbc.sp());
        EXPECT(0x70e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xde07));
        // 36 036D
        gbc.setState(0xd439, 0xebd9, 0x13c0, 0xef8b, 0xa554, 0xd167, 0x1, 0x0);
        gbc.writeMem(0xd167, { 0x0 });
        gbc.writeMem(0xd439, { 0x36, 0xc6 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xebd9, gbc.sp());
        EXPECT(0xd43b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd167));
        EXPECT(0x36, gbc.readMem(0xd439));
        EXPECT(0xc6, gbc.readMem(0xd43a));
        // 36 036E
        gbc.setState(0x387e, 0x3b2c, 0xc860, 0xa2b2, 0x88e6, 0xce45, 0x0, 0x0);
        gbc.writeMem(0x387e, { 0x36, 0xf0 });
        gbc.writeMem(0xce45, { 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3b2c, gbc.sp());
        EXPECT(0x3880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xce45));
        // 36 036F
        gbc.setState(0x208f, 0xf4e, 0x9d00, 0xdfde, 0xf9d5, 0x918c, 0x1, 0x1);
        gbc.writeMem(0x208f, { 0x36, 0xc2 });
        gbc.writeMem(0x918c, { 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf4e, gbc.sp());
        EXPECT(0x2091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x918c));
        // 36 0370
        gbc.setState(0xdcd8, 0x722e, 0xee80, 0xfb9e, 0xf757, 0xbaa6, 0x0, 0x0);
        gbc.writeMem(0xbaa6, { 0x0 });
        gbc.writeMem(0xdcd8, { 0x36, 0xf0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x722e, gbc.sp());
        EXPECT(0xdcda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xbaa6));
        EXPECT(0x36, gbc.readMem(0xdcd8));
        EXPECT(0xf0, gbc.readMem(0xdcd9));
        // 36 0372
        gbc.setState(0x4dcd, 0x34c, 0x69a0, 0xb73c, 0x1e0c, 0xa25a, 0x1, 0x1);
        gbc.writeMem(0x4dcd, { 0x36, 0xc2 });
        gbc.writeMem(0xa25a, { 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x34c, gbc.sp());
        EXPECT(0x4dcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa25a));
        // 36 0374
        gbc.setState(0x8121, 0x9d0, 0x310, 0xd61b, 0x166, 0xd798, 0x0, 0x1);
        gbc.writeMem(0x8121, { 0x36, 0x9b });
        gbc.writeMem(0xd798, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9d0, gbc.sp());
        EXPECT(0x8123, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8121));
        EXPECT(0x9b, gbc.readMem(0x8122));
        EXPECT(0x9b, gbc.readMem(0xd798));
        // 36 0375
        gbc.setState(0xb0b5, 0xbbe2, 0xff40, 0xcfaa, 0x1375, 0xc2c5, 0x0, 0x1);
        gbc.writeMem(0xb0b5, { 0x36, 0x7d });
        gbc.writeMem(0xc2c5, { 0x0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xbbe2, gbc.sp());
        EXPECT(0xb0b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xb0b5));
        EXPECT(0x7d, gbc.readMem(0xb0b6));
        EXPECT(0x7d, gbc.readMem(0xc2c5));
        // 36 0376
        gbc.setState(0x5780, 0x4e3d, 0x6c40, 0x7e46, 0x90c3, 0xa558, 0x1, 0x1);
        gbc.writeMem(0x5780, { 0x36, 0xd7 });
        gbc.writeMem(0xa558, { 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4e3d, gbc.sp());
        EXPECT(0x5782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xa558));
        // 36 0377
        gbc.setState(0x43b2, 0x111, 0xfe30, 0xb74, 0x67a7, 0xdb46, 0x0, 0x1);
        gbc.writeMem(0x43b2, { 0x36, 0x32 });
        gbc.writeMem(0xdb46, { 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x111, gbc.sp());
        EXPECT(0x43b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xdb46));
        // 36 0379
        gbc.setState(0x332e, 0xc227, 0x7fa0, 0xa097, 0x38d2, 0x80ad, 0x0, 0x1);
        gbc.writeMem(0x332e, { 0x36, 0x86 });
        gbc.writeMem(0x80ad, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc227, gbc.sp());
        EXPECT(0x3330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x80ad));
        // 36 037B
        gbc.setState(0x944, 0x6b57, 0xed60, 0x8845, 0xd943, 0xde68, 0x0, 0x0);
        gbc.writeMem(0x944, { 0x36, 0xc4 });
        gbc.writeMem(0xde68, { 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6b57, gbc.sp());
        EXPECT(0x946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xde68));
        // 36 037C
        gbc.setState(0x9e15, 0x4a15, 0x2490, 0x7298, 0x24ad, 0xde91, 0x0, 0x1);
        gbc.writeMem(0x9e15, { 0x36, 0x2e });
        gbc.writeMem(0xde91, { 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4a15, gbc.sp());
        EXPECT(0x9e17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x9e15));
        EXPECT(0x2e, gbc.readMem(0x9e16));
        EXPECT(0x2e, gbc.readMem(0xde91));
        // 36 0382
        gbc.setState(0x45e8, 0xfc83, 0x64d0, 0x13e4, 0x911c, 0xc981, 0x0, 0x1);
        gbc.writeMem(0x45e8, { 0x36, 0xfc });
        gbc.writeMem(0xc981, { 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xfc83, gbc.sp());
        EXPECT(0x45ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xc981));
        // 36 0383
        gbc.setState(0xafea, 0xf669, 0x3110, 0x62bc, 0x683a, 0xbcf4, 0x0, 0x0);
        gbc.writeMem(0xafea, { 0x36, 0xb7 });
        gbc.writeMem(0xbcf4, { 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf669, gbc.sp());
        EXPECT(0xafec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xafea));
        EXPECT(0xb7, gbc.readMem(0xafeb));
        EXPECT(0xb7, gbc.readMem(0xbcf4));
        // 36 0384
        gbc.setState(0x9d81, 0x271f, 0x6d50, 0x12c0, 0xf121, 0xcbf7, 0x1, 0x0);
        gbc.writeMem(0x9d81, { 0x36, 0x5b });
        gbc.writeMem(0xcbf7, { 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x271f, gbc.sp());
        EXPECT(0x9d83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x9d81));
        EXPECT(0x5b, gbc.readMem(0x9d82));
        EXPECT(0x5b, gbc.readMem(0xcbf7));
        // 36 0385
        gbc.setState(0x8d7c, 0x32ea, 0xbe80, 0x9f9, 0x7b90, 0xaace, 0x1, 0x0);
        gbc.writeMem(0x8d7c, { 0x36, 0xa4 });
        gbc.writeMem(0xaace, { 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x32ea, gbc.sp());
        EXPECT(0x8d7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8d7c));
        EXPECT(0xa4, gbc.readMem(0x8d7d));
        EXPECT(0xa4, gbc.readMem(0xaace));
        // 36 0386
        gbc.setState(0x804e, 0x1e83, 0x42d0, 0xb069, 0xffa1, 0x8139, 0x1, 0x0);
        gbc.writeMem(0x804e, { 0x36, 0xe9 });
        gbc.writeMem(0x8139, { 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1e83, gbc.sp());
        EXPECT(0x8050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x804e));
        EXPECT(0xe9, gbc.readMem(0x804f));
        EXPECT(0xe9, gbc.readMem(0x8139));
        // 36 0387
        gbc.setState(0xa1d0, 0x34d7, 0xade0, 0xa37b, 0xdb0c, 0xbf04, 0x1, 0x1);
        gbc.writeMem(0xa1d0, { 0x36, 0xe6 });
        gbc.writeMem(0xbf04, { 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x34d7, gbc.sp());
        EXPECT(0xa1d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xa1d0));
        EXPECT(0xe6, gbc.readMem(0xa1d1));
        EXPECT(0xe6, gbc.readMem(0xbf04));
        // 36 0389
        gbc.setState(0xde28, 0x7eb3, 0x1ec0, 0xa2d6, 0x993a, 0x8781, 0x1, 0x1);
        gbc.writeMem(0x8781, { 0x0 });
        gbc.writeMem(0xde28, { 0x36, 0x79 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7eb3, gbc.sp());
        EXPECT(0xde2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8781));
        EXPECT(0x36, gbc.readMem(0xde28));
        EXPECT(0x79, gbc.readMem(0xde29));
        // 36 038A
        gbc.setState(0xb8f7, 0x9d, 0xa550, 0x4e9d, 0x199c, 0x8e0c, 0x0, 0x0);
        gbc.writeMem(0x8e0c, { 0x0 });
        gbc.writeMem(0xb8f7, { 0x36, 0x98 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9d, gbc.sp());
        EXPECT(0xb8f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8e0c));
        EXPECT(0x36, gbc.readMem(0xb8f7));
        EXPECT(0x98, gbc.readMem(0xb8f8));
        // 36 038C
        gbc.setState(0x8c5b, 0xf4aa, 0x1840, 0x1362, 0x3e01, 0x9b9d, 0x0, 0x0);
        gbc.writeMem(0x8c5b, { 0x36, 0xd8 });
        gbc.writeMem(0x9b9d, { 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf4aa, gbc.sp());
        EXPECT(0x8c5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8c5b));
        EXPECT(0xd8, gbc.readMem(0x8c5c));
        EXPECT(0xd8, gbc.readMem(0x9b9d));
        // 36 038D
        gbc.setState(0x2906, 0xec99, 0x9e60, 0x881e, 0x57d8, 0xa8ad, 0x1, 0x1);
        gbc.writeMem(0x2906, { 0x36, 0x66 });
        gbc.writeMem(0xa8ad, { 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xec99, gbc.sp());
        EXPECT(0x2908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa8ad));
        // 36 038F
        gbc.setState(0xbb40, 0xf77d, 0xcc00, 0x5ed9, 0x1461, 0xfe7c, 0x1, 0x0);
        gbc.writeMem(0xbb40, { 0x36, 0xe7 });
        gbc.writeMem(0xfe7c, { 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf77d, gbc.sp());
        EXPECT(0xbb42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xbb40));
        EXPECT(0xe7, gbc.readMem(0xbb41));
        EXPECT(0xe7, gbc.readMem(0xfe7c));
        // 36 0390
        gbc.setState(0xc92c, 0x5138, 0xdda0, 0x4d4f, 0x4978, 0x8441, 0x1, 0x1);
        gbc.writeMem(0x8441, { 0x0 });
        gbc.writeMem(0xc92c, { 0x36, 0x90 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5138, gbc.sp());
        EXPECT(0xc92e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x8441));
        EXPECT(0x36, gbc.readMem(0xc92c));
        EXPECT(0x90, gbc.readMem(0xc92d));
        // 36 0391
        gbc.setState(0x5f69, 0x2d6c, 0xccd0, 0x9c69, 0xc2c0, 0xc9f8, 0x1, 0x0);
        gbc.writeMem(0x5f69, { 0x36, 0xcd });
        gbc.writeMem(0xc9f8, { 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2d6c, gbc.sp());
        EXPECT(0x5f6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xc9f8));
        // 36 0392
        gbc.setState(0x4f9a, 0x7e08, 0x76b0, 0x1c77, 0x6800, 0xe45e, 0x0, 0x1);
        gbc.writeMem(0x4f9a, { 0x36, 0xfb });
        gbc.writeMem(0xe45e, { 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7e08, gbc.sp());
        EXPECT(0x4f9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xe45e));
        // 36 0396
        gbc.setState(0xb1cf, 0x4404, 0xa2e0, 0xebdc, 0x1320, 0xd2a8, 0x0, 0x1);
        gbc.writeMem(0xb1cf, { 0x36, 0xb1 });
        gbc.writeMem(0xd2a8, { 0x0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4404, gbc.sp());
        EXPECT(0xb1d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xb1cf));
        EXPECT(0xb1, gbc.readMem(0xb1d0));
        EXPECT(0xb1, gbc.readMem(0xd2a8));
        // 36 0397
        gbc.setState(0xa8c8, 0xb568, 0xdaf0, 0x3cf, 0x3f41, 0x8c30, 0x0, 0x1);
        gbc.writeMem(0x8c30, { 0x0 });
        gbc.writeMem(0xa8c8, { 0x36, 0x6c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb568, gbc.sp());
        EXPECT(0xa8ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x8c30));
        EXPECT(0x36, gbc.readMem(0xa8c8));
        EXPECT(0x6c, gbc.readMem(0xa8c9));
        // 36 0399
        gbc.setState(0x5760, 0x7f99, 0xe0d0, 0x425f, 0x82a0, 0x9adc, 0x0, 0x1);
        gbc.writeMem(0x5760, { 0x36, 0x2c });
        gbc.writeMem(0x9adc, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7f99, gbc.sp());
        EXPECT(0x5762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9adc));
        // 36 039A
        gbc.setState(0x19ff, 0x7d86, 0x8fa0, 0x460a, 0xc6cc, 0xa7f6, 0x1, 0x0);
        gbc.writeMem(0x19ff, { 0x36, 0xaf });
        gbc.writeMem(0xa7f6, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7d86, gbc.sp());
        EXPECT(0x1a01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xa7f6));
        // 36 039C
        gbc.setState(0x5b9, 0x46af, 0x6600, 0x639a, 0xd3d7, 0xc744, 0x0, 0x0);
        gbc.writeMem(0x5b9, { 0x36, 0x2c });
        gbc.writeMem(0xc744, { 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x46af, gbc.sp());
        EXPECT(0x5bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc744));
        // 36 039F
        gbc.setState(0xc07, 0xfd1d, 0x6a60, 0xa921, 0x3ebd, 0xbf7c, 0x1, 0x0);
        gbc.writeMem(0xc07, { 0x36, 0x43 });
        gbc.writeMem(0xbf7c, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xfd1d, gbc.sp());
        EXPECT(0xc09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xbf7c));
        // 36 03A1
        gbc.setState(0x8da3, 0x2802, 0xbf00, 0x9836, 0xacd2, 0x8592, 0x1, 0x1);
        gbc.writeMem(0x8592, { 0x0 });
        gbc.writeMem(0x8da3, { 0x36, 0x94 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2802, gbc.sp());
        EXPECT(0x8da5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8592));
        EXPECT(0x36, gbc.readMem(0x8da3));
        EXPECT(0x94, gbc.readMem(0x8da4));
        // 36 03A2
        gbc.setState(0x3f94, 0x6d67, 0x5cf0, 0xa83f, 0x6d5e, 0xa3e9, 0x1, 0x0);
        gbc.writeMem(0x3f94, { 0x36, 0x84 });
        gbc.writeMem(0xa3e9, { 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6d67, gbc.sp());
        EXPECT(0x3f96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xa3e9));
        // 36 03A4
        gbc.setState(0xde6b, 0xdb0b, 0x5140, 0x4103, 0xbca4, 0xab72, 0x1, 0x0);
        gbc.writeMem(0xab72, { 0x0 });
        gbc.writeMem(0xde6b, { 0x36, 0x8b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xdb0b, gbc.sp());
        EXPECT(0xde6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xab72));
        EXPECT(0x36, gbc.readMem(0xde6b));
        EXPECT(0x8b, gbc.readMem(0xde6c));
        // 36 03A5
        gbc.setState(0x5830, 0x1588, 0xe2a0, 0x5256, 0x54e2, 0x8567, 0x1, 0x1);
        gbc.writeMem(0x5830, { 0x36, 0x8f });
        gbc.writeMem(0x8567, { 0x0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1588, gbc.sp());
        EXPECT(0x5832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8567));
        // 36 03A6
        gbc.setState(0x2c88, 0x1000, 0xb0b0, 0x9cc7, 0x5602, 0xaaac, 0x0, 0x0);
        gbc.writeMem(0x2c88, { 0x36, 0x7f });
        gbc.writeMem(0xaaac, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1000, gbc.sp());
        EXPECT(0x2c8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xaaac));
        // 36 03A7
        gbc.setState(0x661e, 0x1b7d, 0x4520, 0xe637, 0xca90, 0x8233, 0x0, 0x1);
        gbc.writeMem(0x661e, { 0x36, 0x38 });
        gbc.writeMem(0x8233, { 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1b7d, gbc.sp());
        EXPECT(0x6620, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8233));
        // 36 03A8
        gbc.setState(0xe8c6, 0x7a4f, 0xd010, 0x531d, 0xf949, 0xae26, 0x1, 0x0);
        gbc.writeMem(0xae26, { 0x0 });
        gbc.writeMem(0xe8c6, { 0x36, 0xb4 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7a4f, gbc.sp());
        EXPECT(0xe8c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xae26));
        EXPECT(0x36, gbc.readMem(0xe8c6));
        EXPECT(0xb4, gbc.readMem(0xe8c7));
        // 36 03AC
        gbc.setState(0x9f9f, 0x5de4, 0xf930, 0x51b9, 0x655b, 0xae3c, 0x1, 0x1);
        gbc.writeMem(0x9f9f, { 0x36, 0xa9 });
        gbc.writeMem(0xae3c, { 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5de4, gbc.sp());
        EXPECT(0x9fa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x9f9f));
        EXPECT(0xa9, gbc.readMem(0x9fa0));
        EXPECT(0xa9, gbc.readMem(0xae3c));
        // 36 03B0
        gbc.setState(0x8c1, 0x414, 0x6580, 0x744d, 0x9594, 0xfa25, 0x0, 0x0);
        gbc.writeMem(0x8c1, { 0x36, 0x61 });
        gbc.writeMem(0xfa25, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x414, gbc.sp());
        EXPECT(0x8c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xfa25));
        // 36 03B1
        gbc.setState(0xc71e, 0xd01f, 0x1630, 0x2db5, 0x5713, 0xf541, 0x1, 0x1);
        gbc.writeMem(0xc71e, { 0x36, 0x0 });
        gbc.writeMem(0xf541, { 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd01f, gbc.sp());
        EXPECT(0xc720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xc71e));
        EXPECT(0x0, gbc.readMem(0xc71f));
        EXPECT(0x0, gbc.readMem(0xf541));
        // 36 03B3
        gbc.setState(0xb6cb, 0x5d5f, 0x8f20, 0xe2c9, 0x126d, 0xbe45, 0x1, 0x1);
        gbc.writeMem(0xb6cb, { 0x36, 0x8d });
        gbc.writeMem(0xbe45, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5d5f, gbc.sp());
        EXPECT(0xb6cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xb6cb));
        EXPECT(0x8d, gbc.readMem(0xb6cc));
        EXPECT(0x8d, gbc.readMem(0xbe45));
        // 36 03B5
        gbc.setState(0xa5aa, 0x352b, 0x400, 0x8671, 0x42a, 0xb667, 0x0, 0x1);
        gbc.writeMem(0xa5aa, { 0x36, 0xa2 });
        gbc.writeMem(0xb667, { 0x0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x352b, gbc.sp());
        EXPECT(0xa5ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xa5aa));
        EXPECT(0xa2, gbc.readMem(0xa5ab));
        EXPECT(0xa2, gbc.readMem(0xb667));
        // 36 03B6
        gbc.setState(0xb973, 0x714c, 0x2a50, 0x7b6b, 0xf24a, 0xa88f, 0x1, 0x1);
        gbc.writeMem(0xa88f, { 0x0 });
        gbc.writeMem(0xb973, { 0x36, 0xd7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x714c, gbc.sp());
        EXPECT(0xb975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xa88f));
        EXPECT(0x36, gbc.readMem(0xb973));
        EXPECT(0xd7, gbc.readMem(0xb974));
        // 36 03BA
        gbc.setState(0x7807, 0x77ec, 0x7270, 0x9088, 0xc94, 0xae9b, 0x0, 0x0);
        gbc.writeMem(0x7807, { 0x36, 0x2 });
        gbc.writeMem(0xae9b, { 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x77ec, gbc.sp());
        EXPECT(0x7809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xae9b));
        // 36 03BB
        gbc.setState(0x5ecf, 0x8c69, 0xfab0, 0x1f57, 0xdb50, 0xf383, 0x0, 0x1);
        gbc.writeMem(0x5ecf, { 0x36, 0xca });
        gbc.writeMem(0xf383, { 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8c69, gbc.sp());
        EXPECT(0x5ed1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xf383));
        // 36 03BF
        gbc.setState(0x43bd, 0x9f66, 0xc700, 0xe176, 0x48fc, 0xb620, 0x0, 0x1);
        gbc.writeMem(0x43bd, { 0x36, 0xa4 });
        gbc.writeMem(0xb620, { 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9f66, gbc.sp());
        EXPECT(0x43bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb620));
        // 36 03C1
        gbc.setState(0x86f8, 0x5eeb, 0x9780, 0x5605, 0xc0bc, 0xc9d8, 0x0, 0x1);
        gbc.writeMem(0x86f8, { 0x36, 0x0 });
        gbc.writeMem(0xc9d8, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5eeb, gbc.sp());
        EXPECT(0x86fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x86f8));
        EXPECT(0x0, gbc.readMem(0x86f9));
        EXPECT(0x0, gbc.readMem(0xc9d8));
        // 36 03C3
        gbc.setState(0x7176, 0xed5a, 0x2f0, 0xde76, 0xab3e, 0xd08b, 0x0, 0x1);
        gbc.writeMem(0x7176, { 0x36, 0xef });
        gbc.writeMem(0xd08b, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xed5a, gbc.sp());
        EXPECT(0x7178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xd08b));
        // 36 03C8
        gbc.setState(0x86fd, 0x60cc, 0xcb30, 0x364d, 0xf13, 0xef29, 0x0, 0x1);
        gbc.writeMem(0x86fd, { 0x36, 0xfc });
        gbc.writeMem(0xef29, { 0x0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x60cc, gbc.sp());
        EXPECT(0x86ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x86fd));
        EXPECT(0xfc, gbc.readMem(0x86fe));
        EXPECT(0xfc, gbc.readMem(0xef29));
        // 36 03CB
        gbc.setState(0x1f63, 0x805, 0xfdc0, 0x6933, 0x9ef1, 0xb96d, 0x1, 0x1);
        gbc.writeMem(0x1f63, { 0x36, 0xd9 });
        gbc.writeMem(0xb96d, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x805, gbc.sp());
        EXPECT(0x1f65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb96d));
        // 36 03CC
        gbc.setState(0xc51f, 0x28ed, 0x4180, 0x49a8, 0xf216, 0xf230, 0x0, 0x0);
        gbc.writeMem(0xc51f, { 0x36, 0x10 });
        gbc.writeMem(0xf230, { 0x0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x28ed, gbc.sp());
        EXPECT(0xc521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xc51f));
        EXPECT(0x10, gbc.readMem(0xc520));
        EXPECT(0x10, gbc.readMem(0xf230));
        // 36 03CD
        gbc.setState(0xad91, 0xd6e3, 0xd20, 0xa321, 0x46a2, 0xea77, 0x0, 0x0);
        gbc.writeMem(0xad91, { 0x36, 0x32 });
        gbc.writeMem(0xea77, { 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd6e3, gbc.sp());
        EXPECT(0xad93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xad91));
        EXPECT(0x32, gbc.readMem(0xad92));
        EXPECT(0x32, gbc.readMem(0xea77));
        // 36 03CE
        gbc.setState(0x3b02, 0x21ff, 0xc1b0, 0x4ad9, 0xe4b9, 0xb0ed, 0x1, 0x1);
        gbc.writeMem(0x3b02, { 0x36, 0x76 });
        gbc.writeMem(0xb0ed, { 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x21ff, gbc.sp());
        EXPECT(0x3b04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb0ed));
        // 36 03CF
        gbc.setState(0xdc4e, 0xf75b, 0xca50, 0xe287, 0x13cb, 0xfc0f, 0x1, 0x0);
        gbc.writeMem(0xdc4e, { 0x36, 0x5a });
        gbc.writeMem(0xfc0f, { 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf75b, gbc.sp());
        EXPECT(0xdc50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xdc4e));
        EXPECT(0x5a, gbc.readMem(0xdc4f));
        EXPECT(0x5a, gbc.readMem(0xfc0f));
        // 36 03D0
        gbc.setState(0x617c, 0x9d6, 0x48c0, 0x6b02, 0x6e1c, 0xbbf0, 0x1, 0x0);
        gbc.writeMem(0x617c, { 0x36, 0x75 });
        gbc.writeMem(0xbbf0, { 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9d6, gbc.sp());
        EXPECT(0x617e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xbbf0));
        // 36 03D2
        gbc.setState(0x48b6, 0x88e5, 0x5d50, 0xb6e9, 0xb5, 0x60d, 0x0, 0x1);
        gbc.writeMem(0x60d, { 0x0 });
        gbc.writeMem(0x48b6, { 0x36, 0x0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x88e5, gbc.sp());
        EXPECT(0x48b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 36 03D4
        gbc.setState(0xb92d, 0x4267, 0x3d80, 0xf696, 0x2f67, 0xf9f4, 0x1, 0x0);
        gbc.writeMem(0xb92d, { 0x36, 0xa3 });
        gbc.writeMem(0xf9f4, { 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4267, gbc.sp());
        EXPECT(0xb92f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xb92d));
        EXPECT(0xa3, gbc.readMem(0xb92e));
        EXPECT(0xa3, gbc.readMem(0xf9f4));
        // 36 03D5
        gbc.setState(0x574b, 0xf7e1, 0x3ec0, 0xbea6, 0x8fd0, 0x6dc3, 0x0, 0x0);
        gbc.writeMem(0x574b, { 0x36, 0x0 });
        gbc.writeMem(0x6dc3, { 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf7e1, gbc.sp());
        EXPECT(0x574d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 36 03D9
        gbc.setState(0xcd8c, 0x4d16, 0x3300, 0xbb2c, 0x52f3, 0x9d2f, 0x1, 0x1);
        gbc.writeMem(0x9d2f, { 0x0 });
        gbc.writeMem(0xcd8c, { 0x36, 0x16 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4d16, gbc.sp());
        EXPECT(0xcd8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9d2f));
        EXPECT(0x36, gbc.readMem(0xcd8c));
        EXPECT(0x16, gbc.readMem(0xcd8d));
        // 36 03DA
        gbc.setState(0x77d9, 0xc6bb, 0x4950, 0x288d, 0x794c, 0x8c25, 0x0, 0x0);
        gbc.writeMem(0x77d9, { 0x36, 0x22 });
        gbc.writeMem(0x8c25, { 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc6bb, gbc.sp());
        EXPECT(0x77db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x8c25));
        // 36 03DB
        gbc.setState(0x4f3, 0x84a4, 0x9250, 0x9b84, 0x284d, 0xde5a, 0x0, 0x0);
        gbc.writeMem(0x4f3, { 0x36, 0xaf });
        gbc.writeMem(0xde5a, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x84a4, gbc.sp());
        EXPECT(0x4f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xde5a));
        // 36 03DC
        gbc.setState(0x7d91, 0x9ed6, 0xaf30, 0x9d20, 0xed00, 0xdf6c, 0x1, 0x0);
        gbc.writeMem(0x7d91, { 0x36, 0xed });
        gbc.writeMem(0xdf6c, { 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9ed6, gbc.sp());
        EXPECT(0x7d93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xdf6c));
        // 36 03DE
        gbc.setState(0x2ea8, 0x38d5, 0xc30, 0xe1d1, 0x9bd, 0xce5b, 0x0, 0x0);
        gbc.writeMem(0x2ea8, { 0x36, 0x89 });
        gbc.writeMem(0xce5b, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x38d5, gbc.sp());
        EXPECT(0x2eaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xce5b));
        // 36 03DF
        gbc.setState(0x1ca3, 0xdb3e, 0xbe50, 0x7a69, 0x6222, 0x9158, 0x0, 0x1);
        gbc.writeMem(0x1ca3, { 0x36, 0x59 });
        gbc.writeMem(0x9158, { 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xdb3e, gbc.sp());
        EXPECT(0x1ca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0x9158));
        // 36 03E1
        gbc.setState(0x8974, 0xa4ff, 0x80c0, 0xfc4, 0xbc57, 0xfd2d, 0x0, 0x1);
        gbc.writeMem(0x8974, { 0x36, 0xc9 });
        gbc.writeMem(0xfd2d, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa4ff, gbc.sp());
        EXPECT(0x8976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8974));
        EXPECT(0xc9, gbc.readMem(0x8975));
        EXPECT(0xc9, gbc.readMem(0xfd2d));
        // 36 03E2
        gbc.setState(0xe741, 0xdb34, 0x84f0, 0x29, 0xcd70, 0x9c4f, 0x0, 0x0);
        gbc.writeMem(0x9c4f, { 0x0 });
        gbc.writeMem(0xe741, { 0x36, 0xf9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xdb34, gbc.sp());
        EXPECT(0xe743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0x9c4f));
        EXPECT(0x36, gbc.readMem(0xe741));
        EXPECT(0xf9, gbc.readMem(0xe742));
        // 36 03E4
        gbc.setState(0x9c54, 0x9f57, 0xcb20, 0xc18f, 0x879b, 0xd4e4, 0x0, 0x0);
        gbc.writeMem(0x9c54, { 0x36, 0xa4 });
        gbc.writeMem(0xd4e4, { 0x0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9f57, gbc.sp());
        EXPECT(0x9c56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x9c54));
        EXPECT(0xa4, gbc.readMem(0x9c55));
        EXPECT(0xa4, gbc.readMem(0xd4e4));
        // 36 03E5
        gbc.setState(0xcbb, 0x9d4b, 0x1740, 0xd713, 0x3684, 0xff80, 0x1, 0x1);
        gbc.writeMem(0xcbb, { 0x36, 0xaa });
        gbc.writeMem(0xff80, { 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9d4b, gbc.sp());
        EXPECT(0xcbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xff80));
        // 36 03E6
        gbc.setState(0x84b6, 0xe6d1, 0x29e0, 0xca37, 0x495d, 0xda40, 0x0, 0x1);
        gbc.writeMem(0x84b6, { 0x36, 0x8d });
        gbc.writeMem(0xda40, { 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe6d1, gbc.sp());
        EXPECT(0x84b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x84b6));
        EXPECT(0x8d, gbc.readMem(0x84b7));
        EXPECT(0x8d, gbc.readMem(0xda40));
        // 36 03E7
        gbc.setState(0x85a, 0xcbeb, 0xc760, 0x197d, 0x8f85, 0x9b06, 0x1, 0x0);
        gbc.writeMem(0x85a, { 0x36, 0xa6 });
        gbc.writeMem(0x9b06, { 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xcbeb, gbc.sp());
        EXPECT(0x85c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9b06));
    }
