    TEST(gbcemu, opcode_cb_34) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 34 0000
        gbc.setState(0x4aaf, 0xb03e, 0x6f20, 0x2868, 0x884, 0x1bab, 0x1, 0x0);
        gbc.writeMem(0x4aaf, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb03e, gbc.sp());
        EXPECT(0x4ab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0001
        gbc.setState(0xc4e6, 0xb043, 0xa1c0, 0xfdba, 0x7bed, 0xc21f, 0x1, 0x1);
        gbc.writeMem(0xc4e6, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb043, gbc.sp());
        EXPECT(0xc4e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4e6));
        EXPECT(0x34, gbc.readMem(0xc4e7));
        // CB 34 0002
        gbc.setState(0x3c9e, 0xcbec, 0x8b00, 0x544, 0x892f, 0xc310, 0x1, 0x0);
        gbc.writeMem(0x3c9e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcbec, gbc.sp());
        EXPECT(0x3ca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0003
        gbc.setState(0xd818, 0x5cce, 0x2cd0, 0x4b34, 0x64dd, 0xf2d, 0x1, 0x1);
        gbc.writeMem(0xd818, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5cce, gbc.sp());
        EXPECT(0xd81a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd818));
        EXPECT(0x34, gbc.readMem(0xd819));
        // CB 34 0004
        gbc.setState(0x2254, 0xf066, 0xa360, 0xc6a, 0xfbcb, 0x6725, 0x1, 0x0);
        gbc.writeMem(0x2254, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf066, gbc.sp());
        EXPECT(0x2256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0005
        gbc.setState(0xd45c, 0xb10d, 0x61c0, 0xaaea, 0x8622, 0x4511, 0x0, 0x1);
        gbc.writeMem(0xd45c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb10d, gbc.sp());
        EXPECT(0xd45e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd45c));
        EXPECT(0x34, gbc.readMem(0xd45d));
        // CB 34 0006
        gbc.setState(0x6667, 0x43c, 0xbed0, 0xddb1, 0x1bee, 0xdf78, 0x1, 0x1);
        gbc.writeMem(0x6667, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x43c, gbc.sp());
        EXPECT(0x6669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0007
        gbc.setState(0x3af9, 0x25b1, 0x57e0, 0x1168, 0x71da, 0xfc40, 0x0, 0x1);
        gbc.writeMem(0x3af9, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x25b1, gbc.sp());
        EXPECT(0x3afb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0008
        gbc.setState(0x9059, 0x9e8e, 0x8400, 0x17a1, 0xdb36, 0xb514, 0x0, 0x0);
        gbc.writeMem(0x9059, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9e8e, gbc.sp());
        EXPECT(0x905b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9059));
        EXPECT(0x34, gbc.readMem(0x905a));
        // CB 34 0009
        gbc.setState(0xc3b4, 0xcb1f, 0x1ca0, 0x298c, 0xbf28, 0xc50, 0x1, 0x0);
        gbc.writeMem(0xc3b4, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xcb1f, gbc.sp());
        EXPECT(0xc3b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3b4));
        EXPECT(0x34, gbc.readMem(0xc3b5));
        // CB 34 000A
        gbc.setState(0xb69c, 0xd569, 0xa050, 0xa66d, 0x546a, 0x4b79, 0x0, 0x1);
        gbc.writeMem(0xb69c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd569, gbc.sp());
        EXPECT(0xb69e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb69c));
        EXPECT(0x34, gbc.readMem(0xb69d));
        // CB 34 000C
        gbc.setState(0x93a4, 0xf1d5, 0xdba0, 0x7b62, 0x8048, 0x46a4, 0x1, 0x0);
        gbc.writeMem(0x93a4, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf1d5, gbc.sp());
        EXPECT(0x93a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93a4));
        EXPECT(0x34, gbc.readMem(0x93a5));
        // CB 34 000D
        gbc.setState(0x831b, 0x93cd, 0x6c50, 0xd16b, 0x9232, 0x31cb, 0x0, 0x1);
        gbc.writeMem(0x831b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x93cd, gbc.sp());
        EXPECT(0x831d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x831b));
        EXPECT(0x34, gbc.readMem(0x831c));
        // CB 34 000E
        gbc.setState(0x240, 0xabb4, 0x8da0, 0xffec, 0x42ca, 0xd05c, 0x0, 0x1);
        gbc.writeMem(0x240, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xabb4, gbc.sp());
        EXPECT(0x242, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 000F
        gbc.setState(0x32f1, 0x801c, 0x1b40, 0x9a3, 0x81, 0xbdfb, 0x0, 0x1);
        gbc.writeMem(0x32f1, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x801c, gbc.sp());
        EXPECT(0x32f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0010
        gbc.setState(0x7321, 0xce1d, 0x9840, 0x7d05, 0xa859, 0x6e1a, 0x1, 0x0);
        gbc.writeMem(0x7321, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xce1d, gbc.sp());
        EXPECT(0x7323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0012
        gbc.setState(0xbcc6, 0x70c, 0xcfd0, 0xa1c8, 0xaba8, 0x257, 0x1, 0x1);
        gbc.writeMem(0xbcc6, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x70c, gbc.sp());
        EXPECT(0xbcc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcc6));
        EXPECT(0x34, gbc.readMem(0xbcc7));
        // CB 34 0013
        gbc.setState(0x67af, 0x462e, 0x4ea0, 0xaf2a, 0x8351, 0x49b4, 0x0, 0x1);
        gbc.writeMem(0x67af, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x462e, gbc.sp());
        EXPECT(0x67b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0014
        gbc.setState(0x2b51, 0xbfe7, 0xa5a0, 0x2dd, 0xf840, 0x5602, 0x1, 0x0);
        gbc.writeMem(0x2b51, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbfe7, gbc.sp());
        EXPECT(0x2b53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0015
        gbc.setState(0xb6d9, 0x51a3, 0x18c0, 0xd59e, 0x2447, 0xca96, 0x1, 0x0);
        gbc.writeMem(0xb6d9, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x51a3, gbc.sp());
        EXPECT(0xb6db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6d9));
        EXPECT(0x34, gbc.readMem(0xb6da));
        // CB 34 0016
        gbc.setState(0xdcf4, 0x47a9, 0x7470, 0xcee, 0xb6b7, 0x8527, 0x1, 0x1);
        gbc.writeMem(0xdcf4, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x47a9, gbc.sp());
        EXPECT(0xdcf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcf4));
        EXPECT(0x34, gbc.readMem(0xdcf5));
        // CB 34 0017
        gbc.setState(0x19f8, 0x3a34, 0x25a0, 0x5917, 0x8e57, 0x8af, 0x1, 0x1);
        gbc.writeMem(0x19f8, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x3a34, gbc.sp());
        EXPECT(0x19fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0018
        gbc.setState(0xa239, 0xb2d8, 0x61c0, 0xb25b, 0xfb57, 0xfbba, 0x0, 0x0);
        gbc.writeMem(0xa239, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb2d8, gbc.sp());
        EXPECT(0xa23b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa239));
        EXPECT(0x34, gbc.readMem(0xa23a));
        // CB 34 0019
        gbc.setState(0x9622, 0x8734, 0xb1b0, 0xcca1, 0x8313, 0x3de2, 0x0, 0x1);
        gbc.writeMem(0x9622, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8734, gbc.sp());
        EXPECT(0x9624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9622));
        EXPECT(0x34, gbc.readMem(0x9623));
        // CB 34 001A
        gbc.setState(0xd0cd, 0x83f2, 0xb8c0, 0xf297, 0xf2f4, 0xc948, 0x1, 0x1);
        gbc.writeMem(0xd0cd, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x83f2, gbc.sp());
        EXPECT(0xd0cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0cd));
        EXPECT(0x34, gbc.readMem(0xd0ce));
        // CB 34 001B
        gbc.setState(0xcb9a, 0xd847, 0xded0, 0xd6e2, 0x8cf9, 0xf7df, 0x0, 0x0);
        gbc.writeMem(0xcb9a, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd847, gbc.sp());
        EXPECT(0xcb9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb9a));
        EXPECT(0x34, gbc.readMem(0xcb9b));
        // CB 34 001C
        gbc.setState(0x2151, 0x3378, 0xcba0, 0x4d9a, 0x5cd2, 0xf459, 0x0, 0x0);
        gbc.writeMem(0x2151, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3378, gbc.sp());
        EXPECT(0x2153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 001D
        gbc.setState(0x32df, 0xa57a, 0xbc90, 0x7b4a, 0x4500, 0x4763, 0x1, 0x0);
        gbc.writeMem(0x32df, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa57a, gbc.sp());
        EXPECT(0x32e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 001E
        gbc.setState(0x7e8c, 0x1d2f, 0x3460, 0x1818, 0x411f, 0xe25f, 0x1, 0x0);
        gbc.writeMem(0x7e8c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1d2f, gbc.sp());
        EXPECT(0x7e8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 001F
        gbc.setState(0x7dab, 0x537f, 0xc140, 0x16fd, 0x4ec8, 0xcf9d, 0x0, 0x1);
        gbc.writeMem(0x7dab, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x537f, gbc.sp());
        EXPECT(0x7dad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0020
        gbc.setState(0x53fd, 0xf96e, 0x2640, 0xac55, 0x5886, 0x81b7, 0x0, 0x0);
        gbc.writeMem(0x53fd, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf96e, gbc.sp());
        EXPECT(0x53ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0021
        gbc.setState(0x18bd, 0xa532, 0x5410, 0xffc7, 0xc5ab, 0xa3d9, 0x1, 0x1);
        gbc.writeMem(0x18bd, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa532, gbc.sp());
        EXPECT(0x18bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0022
        gbc.setState(0xb40f, 0x5aa3, 0xa060, 0x935a, 0x37a, 0x2a99, 0x0, 0x0);
        gbc.writeMem(0xb40f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5aa3, gbc.sp());
        EXPECT(0xb411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb40f));
        EXPECT(0x34, gbc.readMem(0xb410));
        // CB 34 0023
        gbc.setState(0x6e0e, 0x4e8c, 0x5cf0, 0x7c31, 0x29ac, 0x1851, 0x1, 0x1);
        gbc.writeMem(0x6e0e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4e8c, gbc.sp());
        EXPECT(0x6e10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0024
        gbc.setState(0xb996, 0xad6d, 0x5fe0, 0x8665, 0xa5ec, 0x94c7, 0x0, 0x0);
        gbc.writeMem(0xb996, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xad6d, gbc.sp());
        EXPECT(0xb998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb996));
        EXPECT(0x34, gbc.readMem(0xb997));
        // CB 34 0026
        gbc.setState(0x3e36, 0xceb9, 0x6ff0, 0x8eee, 0x684c, 0x6a24, 0x1, 0x0);
        gbc.writeMem(0x3e36, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xceb9, gbc.sp());
        EXPECT(0x3e38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0027
        gbc.setState(0x58e2, 0xe9e1, 0xe5b0, 0xd769, 0x72de, 0x2f5a, 0x0, 0x1);
        gbc.writeMem(0x58e2, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe9e1, gbc.sp());
        EXPECT(0x58e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0028
        gbc.setState(0xc44, 0xc418, 0x900, 0x893c, 0x7b41, 0x10c6, 0x1, 0x0);
        gbc.writeMem(0xc44, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc418, gbc.sp());
        EXPECT(0xc46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0029
        gbc.setState(0x634a, 0x1a48, 0x4ec0, 0x45d1, 0x16ed, 0x16b2, 0x1, 0x0);
        gbc.writeMem(0x634a, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1a48, gbc.sp());
        EXPECT(0x634c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 002A
        gbc.setState(0x51cd, 0x9827, 0x3340, 0x8e8a, 0x5cd6, 0x37da, 0x0, 0x0);
        gbc.writeMem(0x51cd, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9827, gbc.sp());
        EXPECT(0x51cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 002B
        gbc.setState(0xc80b, 0xdd1a, 0x6230, 0x52cc, 0xa705, 0xc6b6, 0x1, 0x0);
        gbc.writeMem(0xc80b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xdd1a, gbc.sp());
        EXPECT(0xc80d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc80b));
        EXPECT(0x34, gbc.readMem(0xc80c));
        // CB 34 002C
        gbc.setState(0x483e, 0x594a, 0x5e00, 0x692a, 0x723c, 0xc77f, 0x1, 0x1);
        gbc.writeMem(0x483e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x594a, gbc.sp());
        EXPECT(0x4840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 002D
        gbc.setState(0xdc90, 0x950f, 0x3930, 0x6293, 0x296, 0xd5c3, 0x1, 0x0);
        gbc.writeMem(0xdc90, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x950f, gbc.sp());
        EXPECT(0xdc92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc90));
        EXPECT(0x34, gbc.readMem(0xdc91));
        // CB 34 002E
        gbc.setState(0xbf51, 0x6db9, 0x65a0, 0x466d, 0xb170, 0xc01d, 0x1, 0x1);
        gbc.writeMem(0xbf51, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6db9, gbc.sp());
        EXPECT(0xbf53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf51));
        EXPECT(0x34, gbc.readMem(0xbf52));
        // CB 34 002F
        gbc.setState(0x9940, 0xaa37, 0xa760, 0x8336, 0x3b20, 0xb06c, 0x0, 0x0);
        gbc.writeMem(0x9940, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xaa37, gbc.sp());
        EXPECT(0x9942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9940));
        EXPECT(0x34, gbc.readMem(0x9941));
        // CB 34 0030
        gbc.setState(0x6723, 0x7740, 0xb30, 0xe9ca, 0xb273, 0x7217, 0x1, 0x0);
        gbc.writeMem(0x6723, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7740, gbc.sp());
        EXPECT(0x6725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0031
        gbc.setState(0x938d, 0xd931, 0x5c00, 0x4032, 0xf3b3, 0x9dc8, 0x0, 0x1);
        gbc.writeMem(0x938d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd931, gbc.sp());
        EXPECT(0x938f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x938d));
        EXPECT(0x34, gbc.readMem(0x938e));
        // CB 34 0032
        gbc.setState(0xadf7, 0x86b6, 0xc050, 0x5e80, 0xaac, 0xf0fa, 0x0, 0x0);
        gbc.writeMem(0xadf7, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x86b6, gbc.sp());
        EXPECT(0xadf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf7));
        EXPECT(0x34, gbc.readMem(0xadf8));
        // CB 34 0033
        gbc.setState(0x9629, 0x4a3b, 0xf9e0, 0xfa83, 0x348c, 0x6906, 0x1, 0x0);
        gbc.writeMem(0x9629, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4a3b, gbc.sp());
        EXPECT(0x962b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9629));
        EXPECT(0x34, gbc.readMem(0x962a));
        // CB 34 0034
        gbc.setState(0x80d, 0xe1e1, 0x2590, 0x1e7a, 0x30dd, 0xd398, 0x1, 0x0);
        gbc.writeMem(0x80d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe1e1, gbc.sp());
        EXPECT(0x80f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0035
        gbc.setState(0x62f2, 0x2492, 0xc5c0, 0x307f, 0xae4a, 0x2f42, 0x0, 0x0);
        gbc.writeMem(0x62f2, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2492, gbc.sp());
        EXPECT(0x62f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0036
        gbc.setState(0x6ba7, 0x3d01, 0x2d10, 0x3d13, 0x80e1, 0xf649, 0x1, 0x1);
        gbc.writeMem(0x6ba7, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3d01, gbc.sp());
        EXPECT(0x6ba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0037
        gbc.setState(0x952a, 0xe118, 0xc6d0, 0x8a30, 0xb1e0, 0xc4a, 0x0, 0x0);
        gbc.writeMem(0x952a, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe118, gbc.sp());
        EXPECT(0x952c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x952a));
        EXPECT(0x34, gbc.readMem(0x952b));
        // CB 34 0038
        gbc.setState(0xe90c, 0xfd39, 0xcf50, 0x401f, 0xad28, 0x3cc5, 0x1, 0x1);
        gbc.writeMem(0xe90c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xfd39, gbc.sp());
        EXPECT(0xe90e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe90c));
        EXPECT(0x34, gbc.readMem(0xe90d));
        // CB 34 0039
        gbc.setState(0xd9ab, 0x68b6, 0x4540, 0x39d3, 0xf69d, 0xa036, 0x1, 0x1);
        gbc.writeMem(0xd9ab, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x68b6, gbc.sp());
        EXPECT(0xd9ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9ab));
        EXPECT(0x34, gbc.readMem(0xd9ac));
        // CB 34 003A
        gbc.setState(0x8154, 0xc398, 0x70f0, 0x9576, 0xb686, 0x4aab, 0x1, 0x0);
        gbc.writeMem(0x8154, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc398, gbc.sp());
        EXPECT(0x8156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8154));
        EXPECT(0x34, gbc.readMem(0x8155));
        // CB 34 003B
        gbc.setState(0xf81, 0x5025, 0xc7d0, 0xf82d, 0x5a7f, 0xa37f, 0x1, 0x0);
        gbc.writeMem(0xf81, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5025, gbc.sp());
        EXPECT(0xf83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 003C
        gbc.setState(0x3d18, 0xc45, 0x43a0, 0x9a62, 0xec21, 0x61b6, 0x1, 0x0);
        gbc.writeMem(0x3d18, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc45, gbc.sp());
        EXPECT(0x3d1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 003D
        gbc.setState(0xeb5b, 0x8f5f, 0xf10, 0xffa1, 0x6095, 0x9562, 0x1, 0x1);
        gbc.writeMem(0xeb5b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8f5f, gbc.sp());
        EXPECT(0xeb5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb5b));
        EXPECT(0x34, gbc.readMem(0xeb5c));
        // CB 34 003E
        gbc.setState(0x1fcf, 0x4170, 0x3ee0, 0x94be, 0xbbd1, 0x3a2, 0x1, 0x1);
        gbc.writeMem(0x1fcf, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4170, gbc.sp());
        EXPECT(0x1fd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 003F
        gbc.setState(0xa178, 0x2f8f, 0x2220, 0xafe, 0xdbe9, 0xb1a6, 0x0, 0x0);
        gbc.writeMem(0xa178, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2f8f, gbc.sp());
        EXPECT(0xa17a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa178));
        EXPECT(0x34, gbc.readMem(0xa179));
        // CB 34 0040
        gbc.setState(0xefdf, 0xf862, 0xbce0, 0xc502, 0x9db9, 0xe118, 0x1, 0x1);
        gbc.writeMem(0xefdf, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf862, gbc.sp());
        EXPECT(0xefe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefdf));
        EXPECT(0x34, gbc.readMem(0xefe0));
        // CB 34 0041
        gbc.setState(0x98e7, 0x3f71, 0x3c00, 0x40f3, 0x7c4a, 0xd81e, 0x0, 0x1);
        gbc.writeMem(0x98e7, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3f71, gbc.sp());
        EXPECT(0x98e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98e7));
        EXPECT(0x34, gbc.readMem(0x98e8));
        // CB 34 0042
        gbc.setState(0x3dfa, 0x4fe2, 0x9540, 0x92fa, 0x1507, 0x8811, 0x1, 0x0);
        gbc.writeMem(0x3dfa, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4fe2, gbc.sp());
        EXPECT(0x3dfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0043
        gbc.setState(0xeb49, 0x19fa, 0x3950, 0xa918, 0x4acb, 0x8ec5, 0x1, 0x1);
        gbc.writeMem(0xeb49, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x19fa, gbc.sp());
        EXPECT(0xeb4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb49));
        EXPECT(0x34, gbc.readMem(0xeb4a));
        // CB 34 0044
        gbc.setState(0x1e65, 0x4fe0, 0x7350, 0xefa0, 0x6c5d, 0xc0a8, 0x0, 0x0);
        gbc.writeMem(0x1e65, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4fe0, gbc.sp());
        EXPECT(0x1e67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0045
        gbc.setState(0x9bc6, 0xbeae, 0x9d40, 0xdedd, 0x3b35, 0x944f, 0x0, 0x0);
        gbc.writeMem(0x9bc6, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xbeae, gbc.sp());
        EXPECT(0x9bc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bc6));
        EXPECT(0x34, gbc.readMem(0x9bc7));
        // CB 34 0046
        gbc.setState(0xb848, 0x50e1, 0x6210, 0xc2e4, 0xff78, 0x4f22, 0x1, 0x1);
        gbc.writeMem(0xb848, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x50e1, gbc.sp());
        EXPECT(0xb84a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb848));
        EXPECT(0x34, gbc.readMem(0xb849));
        // CB 34 0047
        gbc.setState(0xb6b7, 0x95dd, 0x2360, 0x75f3, 0xe640, 0x465c, 0x1, 0x0);
        gbc.writeMem(0xb6b7, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x95dd, gbc.sp());
        EXPECT(0xb6b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6b7));
        EXPECT(0x34, gbc.readMem(0xb6b8));
        // CB 34 0049
        gbc.setState(0xc153, 0x29e5, 0xcd00, 0xf7af, 0x7d70, 0x4f64, 0x0, 0x1);
        gbc.writeMem(0xc153, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x29e5, gbc.sp());
        EXPECT(0xc155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc153));
        EXPECT(0x34, gbc.readMem(0xc154));
        // CB 34 004A
        gbc.setState(0x4170, 0xc07a, 0xf140, 0x848, 0xd9cf, 0x3ef7, 0x0, 0x0);
        gbc.writeMem(0x4170, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc07a, gbc.sp());
        EXPECT(0x4172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 004B
        gbc.setState(0x81dc, 0x3521, 0x4400, 0x2513, 0x1ca3, 0x6806, 0x1, 0x0);
        gbc.writeMem(0x81dc, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3521, gbc.sp());
        EXPECT(0x81de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81dc));
        EXPECT(0x34, gbc.readMem(0x81dd));
        // CB 34 004C
        gbc.setState(0x769f, 0x426d, 0x7320, 0x8f28, 0x40f6, 0x783d, 0x1, 0x1);
        gbc.writeMem(0x769f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x426d, gbc.sp());
        EXPECT(0x76a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 004D
        gbc.setState(0x5b9, 0x8169, 0x87f0, 0x3e60, 0xdeea, 0x7327, 0x0, 0x0);
        gbc.writeMem(0x5b9, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8169, gbc.sp());
        EXPECT(0x5bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 004F
        gbc.setState(0x921c, 0x1f12, 0xb790, 0x3560, 0x1abb, 0x63a2, 0x1, 0x1);
        gbc.writeMem(0x921c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1f12, gbc.sp());
        EXPECT(0x921e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x921c));
        EXPECT(0x34, gbc.readMem(0x921d));
        // CB 34 0050
        gbc.setState(0xc8f8, 0xcabd, 0xd9e0, 0x90be, 0xd316, 0x6153, 0x0, 0x0);
        gbc.writeMem(0xc8f8, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xcabd, gbc.sp());
        EXPECT(0xc8fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8f8));
        EXPECT(0x34, gbc.readMem(0xc8f9));
        // CB 34 0051
        gbc.setState(0x47c2, 0xb8b0, 0x7e80, 0x1a36, 0x4140, 0x719c, 0x0, 0x1);
        gbc.writeMem(0x47c2, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb8b0, gbc.sp());
        EXPECT(0x47c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0052
        gbc.setState(0x2d39, 0xcd92, 0x1810, 0xca6, 0x257e, 0xc33a, 0x1, 0x0);
        gbc.writeMem(0x2d39, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xcd92, gbc.sp());
        EXPECT(0x2d3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0053
        gbc.setState(0xe2c, 0xe710, 0x1110, 0x4d09, 0x8ba6, 0x719b, 0x1, 0x1);
        gbc.writeMem(0xe2c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe710, gbc.sp());
        EXPECT(0xe2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0054
        gbc.setState(0xd4e1, 0x21b2, 0xb9d0, 0xd5c1, 0xb381, 0x8b8, 0x0, 0x0);
        gbc.writeMem(0xd4e1, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x21b2, gbc.sp());
        EXPECT(0xd4e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4e1));
        EXPECT(0x34, gbc.readMem(0xd4e2));
        // CB 34 0055
        gbc.setState(0x9a91, 0xe35a, 0x8dd0, 0xddb, 0x1958, 0xc870, 0x1, 0x0);
        gbc.writeMem(0x9a91, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe35a, gbc.sp());
        EXPECT(0x9a93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a91));
        EXPECT(0x34, gbc.readMem(0x9a92));
        // CB 34 0056
        gbc.setState(0x3e20, 0xd92d, 0x1e20, 0xd9fe, 0xb49d, 0x91e8, 0x1, 0x0);
        gbc.writeMem(0x3e20, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd92d, gbc.sp());
        EXPECT(0x3e22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0058
        gbc.setState(0xb01a, 0xe69b, 0xbc70, 0x6f3d, 0x11a8, 0x2d92, 0x0, 0x1);
        gbc.writeMem(0xb01a, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe69b, gbc.sp());
        EXPECT(0xb01c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb01a));
        EXPECT(0x34, gbc.readMem(0xb01b));
        // CB 34 0059
        gbc.setState(0x883f, 0x2785, 0x6d20, 0x4256, 0x3c82, 0x5fe8, 0x1, 0x0);
        gbc.writeMem(0x883f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2785, gbc.sp());
        EXPECT(0x8841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x883f));
        EXPECT(0x34, gbc.readMem(0x8840));
        // CB 34 005A
        gbc.setState(0xdaf9, 0xf655, 0x5720, 0x355a, 0x9667, 0x4181, 0x1, 0x0);
        gbc.writeMem(0xdaf9, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf655, gbc.sp());
        EXPECT(0xdafb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaf9));
        EXPECT(0x34, gbc.readMem(0xdafa));
        // CB 34 005B
        gbc.setState(0x2ba2, 0x8d99, 0x1290, 0xffaf, 0x478, 0x4341, 0x1, 0x1);
        gbc.writeMem(0x2ba2, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8d99, gbc.sp());
        EXPECT(0x2ba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 005C
        gbc.setState(0x2409, 0x1def, 0x5510, 0x1ff6, 0xa3b8, 0x4d3e, 0x0, 0x1);
        gbc.writeMem(0x2409, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1def, gbc.sp());
        EXPECT(0x240b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 005D
        gbc.setState(0x49ac, 0xbaf0, 0x94a0, 0xa118, 0xae84, 0xac32, 0x0, 0x0);
        gbc.writeMem(0x49ac, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbaf0, gbc.sp());
        EXPECT(0x49ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 005E
        gbc.setState(0x5775, 0xcd49, 0x65d0, 0x73a0, 0xa079, 0x830a, 0x1, 0x0);
        gbc.writeMem(0x5775, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xcd49, gbc.sp());
        EXPECT(0x5777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 005F
        gbc.setState(0x3ea4, 0x116c, 0x4860, 0xb99a, 0xa70, 0xd31d, 0x0, 0x1);
        gbc.writeMem(0x3ea4, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x116c, gbc.sp());
        EXPECT(0x3ea6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0060
        gbc.setState(0x2d8e, 0x9cdc, 0x4c80, 0x61c2, 0x51aa, 0x68a2, 0x0, 0x1);
        gbc.writeMem(0x2d8e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9cdc, gbc.sp());
        EXPECT(0x2d90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0061
        gbc.setState(0xc97f, 0x6bf9, 0xa0a0, 0xbb15, 0x84ac, 0x5349, 0x0, 0x1);
        gbc.writeMem(0xc97f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6bf9, gbc.sp());
        EXPECT(0xc981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc97f));
        EXPECT(0x34, gbc.readMem(0xc980));
        // CB 34 0062
        gbc.setState(0xb7e1, 0x8671, 0x7a90, 0xe53f, 0xc6f, 0xba98, 0x1, 0x1);
        gbc.writeMem(0xb7e1, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8671, gbc.sp());
        EXPECT(0xb7e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7e1));
        EXPECT(0x34, gbc.readMem(0xb7e2));
        // CB 34 0063
        gbc.setState(0xda24, 0xa5aa, 0x9820, 0x57d6, 0x438d, 0xef6b, 0x0, 0x0);
        gbc.writeMem(0xda24, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa5aa, gbc.sp());
        EXPECT(0xda26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda24));
        EXPECT(0x34, gbc.readMem(0xda25));
        // CB 34 0064
        gbc.setState(0x2c5d, 0xcb22, 0xe50, 0x7ea, 0x5c71, 0x9cd5, 0x1, 0x1);
        gbc.writeMem(0x2c5d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xcb22, gbc.sp());
        EXPECT(0x2c5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0065
        gbc.setState(0xaa33, 0x33c6, 0xdbf0, 0x676e, 0x11af, 0x9275, 0x0, 0x1);
        gbc.writeMem(0xaa33, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x33c6, gbc.sp());
        EXPECT(0xaa35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa33));
        EXPECT(0x34, gbc.readMem(0xaa34));
        // CB 34 0066
        gbc.setState(0xe7e2, 0x3ae8, 0xb440, 0x3885, 0xbc48, 0x2bf2, 0x1, 0x0);
        gbc.writeMem(0xe7e2, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3ae8, gbc.sp());
        EXPECT(0xe7e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7e2));
        EXPECT(0x34, gbc.readMem(0xe7e3));
        // CB 34 0067
        gbc.setState(0x1184, 0x79b0, 0x8410, 0xec2e, 0x1294, 0x6689, 0x0, 0x1);
        gbc.writeMem(0x1184, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x79b0, gbc.sp());
        EXPECT(0x1186, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0068
        gbc.setState(0x24f9, 0x5a66, 0xf90, 0x3a1, 0xcd11, 0x7432, 0x1, 0x0);
        gbc.writeMem(0x24f9, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5a66, gbc.sp());
        EXPECT(0x24fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0069
        gbc.setState(0x2ae0, 0x9ee0, 0x7b00, 0xbc65, 0x37dd, 0x40a7, 0x1, 0x0);
        gbc.writeMem(0x2ae0, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9ee0, gbc.sp());
        EXPECT(0x2ae2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 006A
        gbc.setState(0xddcb, 0xd1c2, 0xf8a0, 0x149a, 0x49aa, 0xba18, 0x1, 0x0);
        gbc.writeMem(0xddcb, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd1c2, gbc.sp());
        EXPECT(0xddcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddcb));
        EXPECT(0x34, gbc.readMem(0xddcc));
        // CB 34 006B
        gbc.setState(0xec1e, 0x9751, 0xce40, 0xbadf, 0x8f33, 0x51b3, 0x1, 0x0);
        gbc.writeMem(0xec1e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9751, gbc.sp());
        EXPECT(0xec20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec1e));
        EXPECT(0x34, gbc.readMem(0xec1f));
        // CB 34 006C
        gbc.setState(0x4d4b, 0x5c3a, 0xfb20, 0x9f2b, 0x3e9f, 0xace9, 0x0, 0x0);
        gbc.writeMem(0x4d4b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5c3a, gbc.sp());
        EXPECT(0x4d4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 006D
        gbc.setState(0x1f1e, 0xd8a7, 0x15a0, 0x2532, 0xcb3c, 0x9891, 0x1, 0x0);
        gbc.writeMem(0x1f1e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd8a7, gbc.sp());
        EXPECT(0x1f20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 006E
        gbc.setState(0xcfe1, 0x3ae2, 0x1530, 0xe2a1, 0xf65d, 0x2ee1, 0x0, 0x0);
        gbc.writeMem(0xcfe1, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3ae2, gbc.sp());
        EXPECT(0xcfe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfe1));
        EXPECT(0x34, gbc.readMem(0xcfe2));
        // CB 34 006F
        gbc.setState(0xa81c, 0x1f1f, 0x9c40, 0x6a92, 0x284a, 0x135b, 0x0, 0x1);
        gbc.writeMem(0xa81c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1f1f, gbc.sp());
        EXPECT(0xa81e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa81c));
        EXPECT(0x34, gbc.readMem(0xa81d));
        // CB 34 0070
        gbc.setState(0x8397, 0x9554, 0x72d0, 0xa65f, 0xeabf, 0xe8b8, 0x1, 0x0);
        gbc.writeMem(0x8397, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9554, gbc.sp());
        EXPECT(0x8399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8397));
        EXPECT(0x34, gbc.readMem(0x8398));
        // CB 34 0071
        gbc.setState(0x7561, 0x8787, 0x9900, 0x9623, 0x3739, 0xdb7c, 0x0, 0x1);
        gbc.writeMem(0x7561, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8787, gbc.sp());
        EXPECT(0x7563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0072
        gbc.setState(0xe7d9, 0xefa3, 0x8460, 0x68ca, 0xcfe0, 0x9d94, 0x1, 0x1);
        gbc.writeMem(0xe7d9, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xefa3, gbc.sp());
        EXPECT(0xe7db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7d9));
        EXPECT(0x34, gbc.readMem(0xe7da));
        // CB 34 0073
        gbc.setState(0x6400, 0x1b6e, 0x50e0, 0x5b70, 0x9898, 0xd9f1, 0x1, 0x0);
        gbc.writeMem(0x6400, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1b6e, gbc.sp());
        EXPECT(0x6402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0074
        gbc.setState(0xd99c, 0xb3e0, 0x1940, 0xbf73, 0xd5e6, 0xc2da, 0x0, 0x1);
        gbc.writeMem(0xd99c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb3e0, gbc.sp());
        EXPECT(0xd99e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd99c));
        EXPECT(0x34, gbc.readMem(0xd99d));
        // CB 34 0075
        gbc.setState(0x56a3, 0xe506, 0x7440, 0x2179, 0xcbd9, 0x655b, 0x1, 0x0);
        gbc.writeMem(0x56a3, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe506, gbc.sp());
        EXPECT(0x56a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0076
        gbc.setState(0x31d5, 0x9f7f, 0x7c70, 0x9926, 0xabad, 0x8194, 0x1, 0x1);
        gbc.writeMem(0x31d5, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9f7f, gbc.sp());
        EXPECT(0x31d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0077
        gbc.setState(0xdf2f, 0xe5c6, 0x4a50, 0x4d8c, 0x1899, 0xbf60, 0x1, 0x1);
        gbc.writeMem(0xdf2f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe5c6, gbc.sp());
        EXPECT(0xdf31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf2f));
        EXPECT(0x34, gbc.readMem(0xdf30));
        // CB 34 0078
        gbc.setState(0xcc26, 0x294c, 0x1330, 0x170e, 0x6f74, 0xc2d, 0x0, 0x1);
        gbc.writeMem(0xcc26, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x294c, gbc.sp());
        EXPECT(0xcc28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc26));
        EXPECT(0x34, gbc.readMem(0xcc27));
        // CB 34 0079
        gbc.setState(0xa311, 0x14c9, 0x5fb0, 0x64be, 0xcd24, 0x6677, 0x0, 0x1);
        gbc.writeMem(0xa311, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x14c9, gbc.sp());
        EXPECT(0xa313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa311));
        EXPECT(0x34, gbc.readMem(0xa312));
        // CB 34 007B
        gbc.setState(0x1b9d, 0xf63c, 0x7bc0, 0x8858, 0x47b2, 0xa66e, 0x1, 0x1);
        gbc.writeMem(0x1b9d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf63c, gbc.sp());
        EXPECT(0x1b9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 007C
        gbc.setState(0x9c5c, 0x7fd6, 0xc5a0, 0x33dc, 0x205d, 0xa2, 0x0, 0x0);
        gbc.writeMem(0x9c5c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7fd6, gbc.sp());
        EXPECT(0x9c5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c5c));
        EXPECT(0x34, gbc.readMem(0x9c5d));
        // CB 34 007D
        gbc.setState(0x3eb6, 0x58fd, 0xd5e0, 0x1dee, 0xff9, 0x758e, 0x0, 0x0);
        gbc.writeMem(0x3eb6, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x58fd, gbc.sp());
        EXPECT(0x3eb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 007E
        gbc.setState(0xdf44, 0x7ea1, 0x360, 0x86c2, 0x1e67, 0xf7fe, 0x1, 0x1);
        gbc.writeMem(0xdf44, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7ea1, gbc.sp());
        EXPECT(0xdf46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf44));
        EXPECT(0x34, gbc.readMem(0xdf45));
        // CB 34 007F
        gbc.setState(0xb1d1, 0xde5e, 0x67c0, 0x58f0, 0x4c4a, 0xfac1, 0x0, 0x0);
        gbc.writeMem(0xb1d1, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xde5e, gbc.sp());
        EXPECT(0xb1d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1d1));
        EXPECT(0x34, gbc.readMem(0xb1d2));
        // CB 34 0080
        gbc.setState(0x275a, 0x5e9a, 0x2eb0, 0xe7a4, 0xab7f, 0xba00, 0x0, 0x0);
        gbc.writeMem(0x275a, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5e9a, gbc.sp());
        EXPECT(0x275c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0081
        gbc.setState(0x7ce0, 0xe93b, 0x5230, 0x3f51, 0x3bfa, 0x48b1, 0x0, 0x1);
        gbc.writeMem(0x7ce0, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe93b, gbc.sp());
        EXPECT(0x7ce2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0082
        gbc.setState(0xef45, 0xc80c, 0xb650, 0x8839, 0x48a9, 0x6b86, 0x0, 0x1);
        gbc.writeMem(0xef45, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc80c, gbc.sp());
        EXPECT(0xef47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef45));
        EXPECT(0x34, gbc.readMem(0xef46));
        // CB 34 0083
        gbc.setState(0x9242, 0x2ded, 0x1470, 0xb1b4, 0x30af, 0xc3ce, 0x1, 0x1);
        gbc.writeMem(0x9242, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2ded, gbc.sp());
        EXPECT(0x9244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9242));
        EXPECT(0x34, gbc.readMem(0x9243));
        // CB 34 0084
        gbc.setState(0xda83, 0x9e5c, 0x9400, 0xe68, 0x53b9, 0x9bed, 0x0, 0x0);
        gbc.writeMem(0xda83, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9e5c, gbc.sp());
        EXPECT(0xda85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda83));
        EXPECT(0x34, gbc.readMem(0xda84));
        // CB 34 0085
        gbc.setState(0x145, 0xc1c7, 0xb550, 0x1df9, 0x80eb, 0xb5fe, 0x1, 0x1);
        gbc.writeMem(0x145, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc1c7, gbc.sp());
        EXPECT(0x147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0086
        gbc.setState(0x667e, 0xf0b3, 0x2f30, 0x57df, 0x9eb0, 0x3fef, 0x1, 0x0);
        gbc.writeMem(0x667e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf0b3, gbc.sp());
        EXPECT(0x6680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0087
        gbc.setState(0x20c1, 0xfeab, 0x7560, 0x377d, 0x454, 0xf2fa, 0x0, 0x0);
        gbc.writeMem(0x20c1, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xfeab, gbc.sp());
        EXPECT(0x20c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0088
        gbc.setState(0x6db6, 0x8462, 0x31f0, 0x25f4, 0x2ed9, 0xc386, 0x0, 0x0);
        gbc.writeMem(0x6db6, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8462, gbc.sp());
        EXPECT(0x6db8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 008A
        gbc.setState(0xeaf3, 0xa6e6, 0xcb60, 0x50df, 0x37b4, 0x31c1, 0x0, 0x0);
        gbc.writeMem(0xeaf3, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa6e6, gbc.sp());
        EXPECT(0xeaf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaf3));
        EXPECT(0x34, gbc.readMem(0xeaf4));
        // CB 34 008B
        gbc.setState(0xb125, 0x733e, 0x25c0, 0xcfd3, 0xc8fc, 0x68bf, 0x1, 0x0);
        gbc.writeMem(0xb125, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x733e, gbc.sp());
        EXPECT(0xb127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb125));
        EXPECT(0x34, gbc.readMem(0xb126));
        // CB 34 008D
        gbc.setState(0x40af, 0x413e, 0xbba0, 0x6497, 0x444a, 0x7e0e, 0x1, 0x1);
        gbc.writeMem(0x40af, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x413e, gbc.sp());
        EXPECT(0x40b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 008E
        gbc.setState(0xe214, 0x6ecb, 0x8470, 0x21f3, 0x18a9, 0x9a87, 0x1, 0x0);
        gbc.writeMem(0xe214, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6ecb, gbc.sp());
        EXPECT(0xe216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe214));
        EXPECT(0x34, gbc.readMem(0xe215));
        // CB 34 008F
        gbc.setState(0xc96f, 0x15fe, 0x9b90, 0xd500, 0x5b40, 0xfb46, 0x1, 0x1);
        gbc.writeMem(0xc96f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x15fe, gbc.sp());
        EXPECT(0xc971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc96f));
        EXPECT(0x34, gbc.readMem(0xc970));
        // CB 34 0090
        gbc.setState(0x9c89, 0x3358, 0xc3e0, 0xa74d, 0xd7ba, 0xeeb, 0x0, 0x1);
        gbc.writeMem(0x9c89, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3358, gbc.sp());
        EXPECT(0x9c8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c89));
        EXPECT(0x34, gbc.readMem(0x9c8a));
        // CB 34 0091
        gbc.setState(0xd17c, 0x8982, 0x950, 0x9992, 0x39f4, 0x414e, 0x0, 0x1);
        gbc.writeMem(0xd17c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8982, gbc.sp());
        EXPECT(0xd17e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd17c));
        EXPECT(0x34, gbc.readMem(0xd17d));
        // CB 34 0092
        gbc.setState(0x1f10, 0x9ddf, 0x4f10, 0xd102, 0xe331, 0x1e8c, 0x0, 0x1);
        gbc.writeMem(0x1f10, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9ddf, gbc.sp());
        EXPECT(0x1f12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0093
        gbc.setState(0x40b0, 0xfa4b, 0x8cd0, 0xb5b9, 0x7243, 0x7813, 0x1, 0x0);
        gbc.writeMem(0x40b0, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xfa4b, gbc.sp());
        EXPECT(0x40b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0094
        gbc.setState(0xa000, 0x477, 0x15c0, 0xd560, 0xbe01, 0xee93, 0x0, 0x0);
        gbc.writeMem(0xa000, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x477, gbc.sp());
        EXPECT(0xa002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa000));
        EXPECT(0x34, gbc.readMem(0xa001));
        // CB 34 0095
        gbc.setState(0xebee, 0x9cc2, 0x6ec0, 0x2f4b, 0x20ea, 0x76d2, 0x1, 0x1);
        gbc.writeMem(0xebee, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9cc2, gbc.sp());
        EXPECT(0xebf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebee));
        EXPECT(0x34, gbc.readMem(0xebef));
        // CB 34 0096
        gbc.setState(0x5ae4, 0x395a, 0x69c0, 0x57f6, 0x793d, 0xdc16, 0x0, 0x1);
        gbc.writeMem(0x5ae4, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x395a, gbc.sp());
        EXPECT(0x5ae6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0097
        gbc.setState(0x4377, 0x5830, 0x9070, 0xceda, 0x8ad8, 0xd25a, 0x0, 0x0);
        gbc.writeMem(0x4377, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5830, gbc.sp());
        EXPECT(0x4379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0099
        gbc.setState(0xd8e3, 0x3e49, 0x2b20, 0xfb51, 0xb635, 0x80a0, 0x1, 0x1);
        gbc.writeMem(0xd8e3, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3e49, gbc.sp());
        EXPECT(0xd8e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8e3));
        EXPECT(0x34, gbc.readMem(0xd8e4));
        // CB 34 009A
        gbc.setState(0xc893, 0x7973, 0x6ff0, 0xb84f, 0x1be5, 0x1384, 0x0, 0x1);
        gbc.writeMem(0xc893, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7973, gbc.sp());
        EXPECT(0xc895, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc893));
        EXPECT(0x34, gbc.readMem(0xc894));
        // CB 34 009B
        gbc.setState(0x9925, 0xba2b, 0xa8e0, 0xfa29, 0x2b29, 0x427b, 0x0, 0x0);
        gbc.writeMem(0x9925, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xba2b, gbc.sp());
        EXPECT(0x9927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9925));
        EXPECT(0x34, gbc.readMem(0x9926));
        // CB 34 009C
        gbc.setState(0xb132, 0x7073, 0x4340, 0x8c30, 0x74cc, 0x5737, 0x1, 0x1);
        gbc.writeMem(0xb132, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7073, gbc.sp());
        EXPECT(0xb134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb132));
        EXPECT(0x34, gbc.readMem(0xb133));
        // CB 34 009D
        gbc.setState(0x27fd, 0x8bc5, 0x5f50, 0x2dd7, 0xab6e, 0x83cb, 0x1, 0x1);
        gbc.writeMem(0x27fd, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8bc5, gbc.sp());
        EXPECT(0x27ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 009F
        gbc.setState(0x2e25, 0xc8b0, 0x4980, 0x749b, 0xf9aa, 0x2b07, 0x0, 0x1);
        gbc.writeMem(0x2e25, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc8b0, gbc.sp());
        EXPECT(0x2e27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00A0
        gbc.setState(0x32ff, 0xc290, 0x5950, 0x9ec3, 0x754b, 0x6bcb, 0x1, 0x1);
        gbc.writeMem(0x32ff, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc290, gbc.sp());
        EXPECT(0x3301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00A1
        gbc.setState(0xb701, 0xfeac, 0x97a0, 0xfc33, 0xaba1, 0xe340, 0x1, 0x0);
        gbc.writeMem(0xb701, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xfeac, gbc.sp());
        EXPECT(0xb703, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb701));
        EXPECT(0x34, gbc.readMem(0xb702));
        // CB 34 00A2
        gbc.setState(0x6ee5, 0xf494, 0xc410, 0x9a, 0x1fa4, 0xfe5d, 0x0, 0x0);
        gbc.writeMem(0x6ee5, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf494, gbc.sp());
        EXPECT(0x6ee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00A3
        gbc.setState(0xed1b, 0xc347, 0x89a0, 0xab0b, 0xdfdf, 0xde93, 0x1, 0x1);
        gbc.writeMem(0xed1b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc347, gbc.sp());
        EXPECT(0xed1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed1b));
        EXPECT(0x34, gbc.readMem(0xed1c));
        // CB 34 00A5
        gbc.setState(0x627d, 0x5528, 0x4cf0, 0x83ee, 0xfdd6, 0x45a5, 0x1, 0x1);
        gbc.writeMem(0x627d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5528, gbc.sp());
        EXPECT(0x627f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00A6
        gbc.setState(0xdbac, 0x8e73, 0xd160, 0x23f8, 0x465f, 0x2dbe, 0x1, 0x1);
        gbc.writeMem(0xdbac, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8e73, gbc.sp());
        EXPECT(0xdbae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbac));
        EXPECT(0x34, gbc.readMem(0xdbad));
        // CB 34 00A7
        gbc.setState(0x1b90, 0xcd96, 0xe9e0, 0x5fba, 0xce98, 0x8aa9, 0x0, 0x1);
        gbc.writeMem(0x1b90, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xcd96, gbc.sp());
        EXPECT(0x1b92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00A8
        gbc.setState(0x3fbf, 0xd85f, 0xd9f0, 0x8d84, 0xafba, 0xef11, 0x1, 0x1);
        gbc.writeMem(0x3fbf, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd85f, gbc.sp());
        EXPECT(0x3fc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00A9
        gbc.setState(0x64c2, 0x80bf, 0xfd10, 0xc446, 0xe4b4, 0xe95c, 0x1, 0x0);
        gbc.writeMem(0x64c2, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x80bf, gbc.sp());
        EXPECT(0x64c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00AA
        gbc.setState(0xed1d, 0x9a3e, 0xd7b0, 0x8978, 0xcb22, 0xb43e, 0x1, 0x0);
        gbc.writeMem(0xed1d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9a3e, gbc.sp());
        EXPECT(0xed1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed1d));
        EXPECT(0x34, gbc.readMem(0xed1e));
        // CB 34 00AB
        gbc.setState(0x3f91, 0x9ce2, 0xc900, 0x929c, 0x4ffd, 0x3d08, 0x1, 0x0);
        gbc.writeMem(0x3f91, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9ce2, gbc.sp());
        EXPECT(0x3f93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00AC
        gbc.setState(0x9287, 0x4fbc, 0x35c0, 0x8e37, 0x1be4, 0xb14, 0x1, 0x1);
        gbc.writeMem(0x9287, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4fbc, gbc.sp());
        EXPECT(0x9289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9287));
        EXPECT(0x34, gbc.readMem(0x9288));
        // CB 34 00AD
        gbc.setState(0xa45f, 0x6770, 0x7300, 0x1586, 0x1aeb, 0x8b53, 0x0, 0x1);
        gbc.writeMem(0xa45f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6770, gbc.sp());
        EXPECT(0xa461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa45f));
        EXPECT(0x34, gbc.readMem(0xa460));
        // CB 34 00AE
        gbc.setState(0x5a24, 0x74bf, 0xb560, 0x99fa, 0x7b0a, 0x79b4, 0x1, 0x0);
        gbc.writeMem(0x5a24, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x74bf, gbc.sp());
        EXPECT(0x5a26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00B0
        gbc.setState(0xd910, 0x281c, 0xc380, 0xf5cc, 0x2de8, 0x61b9, 0x0, 0x0);
        gbc.writeMem(0xd910, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x281c, gbc.sp());
        EXPECT(0xd912, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd910));
        EXPECT(0x34, gbc.readMem(0xd911));
        // CB 34 00B1
        gbc.setState(0x7c35, 0x6f5b, 0x24b0, 0xb23c, 0x562c, 0xf5c9, 0x1, 0x0);
        gbc.writeMem(0x7c35, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6f5b, gbc.sp());
        EXPECT(0x7c37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00B2
        gbc.setState(0xa838, 0x4fb8, 0x8740, 0xc6f, 0x407b, 0xf1a0, 0x1, 0x1);
        gbc.writeMem(0xa838, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4fb8, gbc.sp());
        EXPECT(0xa83a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa838));
        EXPECT(0x34, gbc.readMem(0xa839));
        // CB 34 00B3
        gbc.setState(0x3431, 0x7fe9, 0x8650, 0x7db4, 0x11b1, 0xda95, 0x0, 0x1);
        gbc.writeMem(0x3431, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7fe9, gbc.sp());
        EXPECT(0x3433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00B4
        gbc.setState(0xdcd8, 0xae54, 0xb8a0, 0xeb4, 0xbe02, 0xbf15, 0x0, 0x0);
        gbc.writeMem(0xdcd8, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xae54, gbc.sp());
        EXPECT(0xdcda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcd8));
        EXPECT(0x34, gbc.readMem(0xdcd9));
        // CB 34 00B5
        gbc.setState(0x1e32, 0x432f, 0x1bb0, 0xe757, 0xeaec, 0xa534, 0x1, 0x1);
        gbc.writeMem(0x1e32, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x432f, gbc.sp());
        EXPECT(0x1e34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00B6
        gbc.setState(0xa6ff, 0xdb26, 0xabc0, 0x266, 0x89cb, 0xaf46, 0x1, 0x1);
        gbc.writeMem(0xa6ff, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xdb26, gbc.sp());
        EXPECT(0xa701, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6ff));
        EXPECT(0x34, gbc.readMem(0xa700));
        // CB 34 00B7
        gbc.setState(0xe22d, 0x6fca, 0x3540, 0x4e66, 0xf4e1, 0xe02f, 0x1, 0x0);
        gbc.writeMem(0xe22d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6fca, gbc.sp());
        EXPECT(0xe22f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe22d));
        EXPECT(0x34, gbc.readMem(0xe22e));
        // CB 34 00B8
        gbc.setState(0xa82b, 0xbe57, 0x73e0, 0x9683, 0xe599, 0x22fe, 0x0, 0x1);
        gbc.writeMem(0xa82b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xbe57, gbc.sp());
        EXPECT(0xa82d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa82b));
        EXPECT(0x34, gbc.readMem(0xa82c));
        // CB 34 00B9
        gbc.setState(0x5a1c, 0x5724, 0x5ba0, 0x5dc3, 0xbcde, 0xa131, 0x1, 0x1);
        gbc.writeMem(0x5a1c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5724, gbc.sp());
        EXPECT(0x5a1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00BB
        gbc.setState(0x9cb8, 0xabad, 0xc360, 0xc6c9, 0xf4a, 0xe7e9, 0x0, 0x0);
        gbc.writeMem(0x9cb8, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xabad, gbc.sp());
        EXPECT(0x9cba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cb8));
        EXPECT(0x34, gbc.readMem(0x9cb9));
        // CB 34 00BC
        gbc.setState(0x4e61, 0xc49f, 0xa520, 0xd451, 0xd17c, 0x99ac, 0x0, 0x1);
        gbc.writeMem(0x4e61, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc49f, gbc.sp());
        EXPECT(0x4e63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00BE
        gbc.setState(0xd6ed, 0x997c, 0xabe0, 0x2cad, 0x8d47, 0xc809, 0x1, 0x0);
        gbc.writeMem(0xd6ed, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x997c, gbc.sp());
        EXPECT(0xd6ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6ed));
        EXPECT(0x34, gbc.readMem(0xd6ee));
        // CB 34 00BF
        gbc.setState(0x3b23, 0x2e72, 0x9550, 0x12a4, 0x4386, 0xf457, 0x0, 0x1);
        gbc.writeMem(0x3b23, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2e72, gbc.sp());
        EXPECT(0x3b25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00C0
        gbc.setState(0x3770, 0x3edc, 0xabb0, 0x99a9, 0x9cfc, 0xfc42, 0x1, 0x0);
        gbc.writeMem(0x3770, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3edc, gbc.sp());
        EXPECT(0x3772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00C1
        gbc.setState(0xe60c, 0x86b6, 0xf6a0, 0x2761, 0x4f11, 0x5f2f, 0x0, 0x1);
        gbc.writeMem(0xe60c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x86b6, gbc.sp());
        EXPECT(0xe60e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe60c));
        EXPECT(0x34, gbc.readMem(0xe60d));
        // CB 34 00C2
        gbc.setState(0x51f2, 0x776, 0x3ae0, 0x29cc, 0x79f8, 0x5782, 0x0, 0x0);
        gbc.writeMem(0x51f2, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x776, gbc.sp());
        EXPECT(0x51f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00C3
        gbc.setState(0xb0e4, 0x1a7a, 0xe260, 0x5f0a, 0xee3f, 0xc97f, 0x0, 0x1);
        gbc.writeMem(0xb0e4, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1a7a, gbc.sp());
        EXPECT(0xb0e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e4));
        EXPECT(0x34, gbc.readMem(0xb0e5));
        // CB 34 00C4
        gbc.setState(0x7154, 0x8245, 0x6100, 0x1a96, 0x24be, 0x2d3d, 0x1, 0x0);
        gbc.writeMem(0x7154, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8245, gbc.sp());
        EXPECT(0x7156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00C5
        gbc.setState(0xd75c, 0xef7e, 0x9890, 0xc521, 0x12ee, 0x7494, 0x0, 0x1);
        gbc.writeMem(0xd75c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xef7e, gbc.sp());
        EXPECT(0xd75e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd75c));
        EXPECT(0x34, gbc.readMem(0xd75d));
        // CB 34 00C6
        gbc.setState(0x89cc, 0xaf5c, 0x4ed0, 0xc5e9, 0xf5e9, 0xd5af, 0x0, 0x1);
        gbc.writeMem(0x89cc, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xaf5c, gbc.sp());
        EXPECT(0x89ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89cc));
        EXPECT(0x34, gbc.readMem(0x89cd));
        // CB 34 00C7
        gbc.setState(0x82dd, 0x577a, 0x7380, 0xb760, 0x4625, 0xf638, 0x1, 0x0);
        gbc.writeMem(0x82dd, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x577a, gbc.sp());
        EXPECT(0x82df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82dd));
        EXPECT(0x34, gbc.readMem(0x82de));
        // CB 34 00C8
        gbc.setState(0xc44f, 0xba62, 0xf760, 0x27a0, 0x6f74, 0x1945, 0x1, 0x1);
        gbc.writeMem(0xc44f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xba62, gbc.sp());
        EXPECT(0xc451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc44f));
        EXPECT(0x34, gbc.readMem(0xc450));
        // CB 34 00C9
        gbc.setState(0xe694, 0x20aa, 0x69e0, 0x435d, 0x92ec, 0x94d2, 0x1, 0x1);
        gbc.writeMem(0xe694, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x20aa, gbc.sp());
        EXPECT(0xe696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe694));
        EXPECT(0x34, gbc.readMem(0xe695));
        // CB 34 00CA
        gbc.setState(0x6531, 0xf771, 0xf3c0, 0xe591, 0x8970, 0xe66b, 0x0, 0x1);
        gbc.writeMem(0x6531, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf771, gbc.sp());
        EXPECT(0x6533, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00CB
        gbc.setState(0x2ea4, 0x62a9, 0xecb0, 0x3203, 0x569f, 0x780d, 0x1, 0x1);
        gbc.writeMem(0x2ea4, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x62a9, gbc.sp());
        EXPECT(0x2ea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00CC
        gbc.setState(0x2793, 0xe7b7, 0xb40, 0xfcd1, 0x196e, 0x50d5, 0x0, 0x1);
        gbc.writeMem(0x2793, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe7b7, gbc.sp());
        EXPECT(0x2795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00CD
        gbc.setState(0x3341, 0x1053, 0xeca0, 0xb9c3, 0xf360, 0xa18c, 0x1, 0x0);
        gbc.writeMem(0x3341, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1053, gbc.sp());
        EXPECT(0x3343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00CE
        gbc.setState(0x7693, 0x7444, 0xbcc0, 0xa47e, 0x85db, 0xcdc5, 0x0, 0x1);
        gbc.writeMem(0x7693, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7444, gbc.sp());
        EXPECT(0x7695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00CF
        gbc.setState(0x586c, 0xed7a, 0x64f0, 0x5197, 0x37, 0x20f6, 0x0, 0x1);
        gbc.writeMem(0x586c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xed7a, gbc.sp());
        EXPECT(0x586e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00D0
        gbc.setState(0x263f, 0xa984, 0x1280, 0x2d9f, 0x2217, 0x3497, 0x0, 0x1);
        gbc.writeMem(0x263f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa984, gbc.sp());
        EXPECT(0x2641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00D1
        gbc.setState(0x2d99, 0x4b50, 0x3d80, 0x48fe, 0x9fd2, 0xf68f, 0x0, 0x1);
        gbc.writeMem(0x2d99, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4b50, gbc.sp());
        EXPECT(0x2d9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00D2
        gbc.setState(0xc30b, 0x885d, 0x60b0, 0x985b, 0x5209, 0xfb04, 0x1, 0x0);
        gbc.writeMem(0xc30b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x885d, gbc.sp());
        EXPECT(0xc30d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc30b));
        EXPECT(0x34, gbc.readMem(0xc30c));
        // CB 34 00D3
        gbc.setState(0xb4db, 0xb43e, 0x2b30, 0xcbb3, 0x736d, 0x5388, 0x0, 0x1);
        gbc.writeMem(0xb4db, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb43e, gbc.sp());
        EXPECT(0xb4dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4db));
        EXPECT(0x34, gbc.readMem(0xb4dc));
        // CB 34 00D4
        gbc.setState(0x6c96, 0x38d6, 0x80d0, 0xb2e, 0x18f7, 0xb097, 0x1, 0x0);
        gbc.writeMem(0x6c96, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x38d6, gbc.sp());
        EXPECT(0x6c98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00D5
        gbc.setState(0xe1e2, 0xa8d0, 0x3e90, 0xa961, 0xd56e, 0x7461, 0x1, 0x1);
        gbc.writeMem(0xe1e2, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa8d0, gbc.sp());
        EXPECT(0xe1e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1e2));
        EXPECT(0x34, gbc.readMem(0xe1e3));
        // CB 34 00D6
        gbc.setState(0x48e9, 0xe953, 0x8890, 0x6243, 0xecce, 0x6142, 0x1, 0x1);
        gbc.writeMem(0x48e9, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe953, gbc.sp());
        EXPECT(0x48eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00D7
        gbc.setState(0x16e8, 0xbbc9, 0x86c0, 0xc2f3, 0x255e, 0xb5dc, 0x0, 0x0);
        gbc.writeMem(0x16e8, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xbbc9, gbc.sp());
        EXPECT(0x16ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00D8
        gbc.setState(0x4b56, 0x34e, 0x2790, 0x8456, 0xdc31, 0x943d, 0x1, 0x1);
        gbc.writeMem(0x4b56, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x34e, gbc.sp());
        EXPECT(0x4b58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00DB
        gbc.setState(0x7a47, 0x65b, 0x3aa0, 0x481e, 0x44b2, 0xa114, 0x1, 0x0);
        gbc.writeMem(0x7a47, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x65b, gbc.sp());
        EXPECT(0x7a49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00DC
        gbc.setState(0x6129, 0x92f1, 0x7f80, 0x4e33, 0xafb8, 0x9516, 0x0, 0x0);
        gbc.writeMem(0x6129, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x92f1, gbc.sp());
        EXPECT(0x612b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00DD
        gbc.setState(0xb7e8, 0x677e, 0x5090, 0x2f81, 0x4624, 0xa77b, 0x0, 0x0);
        gbc.writeMem(0xb7e8, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x677e, gbc.sp());
        EXPECT(0xb7ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7e8));
        EXPECT(0x34, gbc.readMem(0xb7e9));
        // CB 34 00DE
        gbc.setState(0xe9e, 0xc04d, 0xfdb0, 0xd15e, 0xa0fe, 0x2e9e, 0x0, 0x1);
        gbc.writeMem(0xe9e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc04d, gbc.sp());
        EXPECT(0xea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00DF
        gbc.setState(0x6fb4, 0xb91a, 0xf90, 0x9fe8, 0x1b63, 0x4877, 0x0, 0x0);
        gbc.writeMem(0x6fb4, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb91a, gbc.sp());
        EXPECT(0x6fb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00E0
        gbc.setState(0x7413, 0x7422, 0x66e0, 0xf5f2, 0xe2b1, 0xeab0, 0x1, 0x1);
        gbc.writeMem(0x7413, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7422, gbc.sp());
        EXPECT(0x7415, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00E1
        gbc.setState(0xe40e, 0xa357, 0x2200, 0x624f, 0x93a4, 0x1c02, 0x1, 0x1);
        gbc.writeMem(0xe40e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa357, gbc.sp());
        EXPECT(0xe410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe40e));
        EXPECT(0x34, gbc.readMem(0xe40f));
        // CB 34 00E2
        gbc.setState(0x57b, 0x1e5f, 0x7ff0, 0x69f4, 0x6428, 0xf4e6, 0x0, 0x1);
        gbc.writeMem(0x57b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1e5f, gbc.sp());
        EXPECT(0x57d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00E3
        gbc.setState(0x4c08, 0x7c0b, 0x31f0, 0x3f48, 0xb0b5, 0x6241, 0x1, 0x0);
        gbc.writeMem(0x4c08, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7c0b, gbc.sp());
        EXPECT(0x4c0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00E4
        gbc.setState(0x7b05, 0x66b1, 0x7f80, 0x4caf, 0x4872, 0xd05, 0x0, 0x0);
        gbc.writeMem(0x7b05, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x66b1, gbc.sp());
        EXPECT(0x7b07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00E5
        gbc.setState(0x8810, 0x2c49, 0x310, 0xa3bd, 0xfdc7, 0x16b4, 0x1, 0x1);
        gbc.writeMem(0x8810, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2c49, gbc.sp());
        EXPECT(0x8812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8810));
        EXPECT(0x34, gbc.readMem(0x8811));
        // CB 34 00E6
        gbc.setState(0x2e57, 0xdd2f, 0xf580, 0x8fe1, 0x3c31, 0x97de, 0x0, 0x0);
        gbc.writeMem(0x2e57, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xdd2f, gbc.sp());
        EXPECT(0x2e59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00E7
        gbc.setState(0x8d29, 0x14af, 0x7400, 0x25b6, 0x87e, 0xd602, 0x0, 0x0);
        gbc.writeMem(0x8d29, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x14af, gbc.sp());
        EXPECT(0x8d2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d29));
        EXPECT(0x34, gbc.readMem(0x8d2a));
        // CB 34 00EA
        gbc.setState(0xecce, 0xa23a, 0x2320, 0x2a8d, 0xa58c, 0x551c, 0x0, 0x1);
        gbc.writeMem(0xecce, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa23a, gbc.sp());
        EXPECT(0xecd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecce));
        EXPECT(0x34, gbc.readMem(0xeccf));
        // CB 34 00EB
        gbc.setState(0x56, 0x3ece, 0xb920, 0x8d02, 0x6373, 0xb5ee, 0x1, 0x1);
        gbc.writeMem(0x56, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3ece, gbc.sp());
        EXPECT(0x58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00EC
        gbc.setState(0x44df, 0xe44d, 0xc430, 0x7eeb, 0x7392, 0x3c2f, 0x1, 0x1);
        gbc.writeMem(0x44df, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe44d, gbc.sp());
        EXPECT(0x44e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00ED
        gbc.setState(0x9bf2, 0xd1ea, 0xda60, 0x3845, 0xeef8, 0x5391, 0x0, 0x1);
        gbc.writeMem(0x9bf2, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd1ea, gbc.sp());
        EXPECT(0x9bf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bf2));
        EXPECT(0x34, gbc.readMem(0x9bf3));
        // CB 34 00EE
        gbc.setState(0xeca9, 0xd07d, 0x2860, 0x5fd2, 0x46e1, 0xde76, 0x0, 0x0);
        gbc.writeMem(0xeca9, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd07d, gbc.sp());
        EXPECT(0xecab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeca9));
        EXPECT(0x34, gbc.readMem(0xecaa));
        // CB 34 00F0
        gbc.setState(0xe148, 0x3c0e, 0x2140, 0x59fc, 0x43e6, 0x8430, 0x0, 0x0);
        gbc.writeMem(0xe148, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3c0e, gbc.sp());
        EXPECT(0xe14a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe148));
        EXPECT(0x34, gbc.readMem(0xe149));
        // CB 34 00F1
        gbc.setState(0xec77, 0x3618, 0x27a0, 0xb82, 0xec5f, 0xd9e5, 0x0, 0x0);
        gbc.writeMem(0xec77, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3618, gbc.sp());
        EXPECT(0xec79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec77));
        EXPECT(0x34, gbc.readMem(0xec78));
        // CB 34 00F2
        gbc.setState(0x7c3e, 0x688a, 0xe380, 0x3a92, 0x203a, 0x71d3, 0x0, 0x0);
        gbc.writeMem(0x7c3e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x688a, gbc.sp());
        EXPECT(0x7c40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00F3
        gbc.setState(0x927b, 0x8402, 0x9980, 0xcfb8, 0x24a8, 0x1712, 0x1, 0x1);
        gbc.writeMem(0x927b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8402, gbc.sp());
        EXPECT(0x927d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x927b));
        EXPECT(0x34, gbc.readMem(0x927c));
        // CB 34 00F4
        gbc.setState(0xe27c, 0x242e, 0x2560, 0x3511, 0x32da, 0xfc70, 0x1, 0x0);
        gbc.writeMem(0xe27c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x242e, gbc.sp());
        EXPECT(0xe27e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe27c));
        EXPECT(0x34, gbc.readMem(0xe27d));
        // CB 34 00F5
        gbc.setState(0x576d, 0x990d, 0x7780, 0x8ceb, 0x71b0, 0x6f02, 0x0, 0x1);
        gbc.writeMem(0x576d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x990d, gbc.sp());
        EXPECT(0x576f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00F6
        gbc.setState(0xd84, 0xbf83, 0x4510, 0xd6fe, 0xc34, 0x4f34, 0x0, 0x0);
        gbc.writeMem(0xd84, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xbf83, gbc.sp());
        EXPECT(0xd86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00F7
        gbc.setState(0x3420, 0xdac6, 0x6100, 0x4c9e, 0x4589, 0xadf4, 0x1, 0x0);
        gbc.writeMem(0x3420, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xdac6, gbc.sp());
        EXPECT(0x3422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00F8
        gbc.setState(0x3006, 0x85a6, 0x5920, 0xd04e, 0x91de, 0xb980, 0x1, 0x1);
        gbc.writeMem(0x3006, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x85a6, gbc.sp());
        EXPECT(0x3008, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00F9
        gbc.setState(0x8141, 0x2a72, 0x230, 0x5c84, 0xeaef, 0x7049, 0x1, 0x0);
        gbc.writeMem(0x8141, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2a72, gbc.sp());
        EXPECT(0x8143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8141));
        EXPECT(0x34, gbc.readMem(0x8142));
        // CB 34 00FA
        gbc.setState(0x6358, 0x2d8e, 0x11f0, 0xcaf9, 0x17de, 0xddab, 0x0, 0x1);
        gbc.writeMem(0x6358, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2d8e, gbc.sp());
        EXPECT(0x635a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00FB
        gbc.setState(0xacf4, 0x23c3, 0x9a20, 0x34b0, 0xdc7c, 0x4b3f, 0x1, 0x0);
        gbc.writeMem(0xacf4, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x23c3, gbc.sp());
        EXPECT(0xacf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacf4));
        EXPECT(0x34, gbc.readMem(0xacf5));
        // CB 34 00FC
        gbc.setState(0xbfb, 0xb6c, 0x1450, 0xf0a8, 0x3da5, 0xf257, 0x0, 0x0);
        gbc.writeMem(0xbfb, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb6c, gbc.sp());
        EXPECT(0xbfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 00FD
        gbc.setState(0x9927, 0x571c, 0xc1a0, 0x85d9, 0x9e82, 0x9884, 0x1, 0x1);
        gbc.writeMem(0x9927, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x571c, gbc.sp());
        EXPECT(0x9929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9927));
        EXPECT(0x34, gbc.readMem(0x9928));
        // CB 34 00FF
        gbc.setState(0xe24e, 0x94db, 0x9a10, 0xbe2, 0xe3a5, 0x1b26, 0x0, 0x0);
        gbc.writeMem(0xe24e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x94db, gbc.sp());
        EXPECT(0xe250, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe24e));
        EXPECT(0x34, gbc.readMem(0xe24f));
        // CB 34 0100
        gbc.setState(0x5b54, 0xfd40, 0x2390, 0x48da, 0xf18a, 0x732, 0x0, 0x0);
        gbc.writeMem(0x5b54, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xfd40, gbc.sp());
        EXPECT(0x5b56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0101
        gbc.setState(0x47ec, 0xda43, 0x3a80, 0x30b3, 0xc811, 0x6ab4, 0x0, 0x0);
        gbc.writeMem(0x47ec, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xda43, gbc.sp());
        EXPECT(0x47ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0102
        gbc.setState(0xd6d3, 0x865f, 0xfa70, 0x33f9, 0x964f, 0x9a54, 0x0, 0x1);
        gbc.writeMem(0xd6d3, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x865f, gbc.sp());
        EXPECT(0xd6d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6d3));
        EXPECT(0x34, gbc.readMem(0xd6d4));
        // CB 34 0103
        gbc.setState(0xd56e, 0xa294, 0x230, 0xd3bb, 0xa287, 0xf84d, 0x0, 0x0);
        gbc.writeMem(0xd56e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa294, gbc.sp());
        EXPECT(0xd570, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd56e));
        EXPECT(0x34, gbc.readMem(0xd56f));
        // CB 34 0104
        gbc.setState(0x941c, 0xd9f, 0x2870, 0x2e06, 0x2057, 0x5529, 0x0, 0x0);
        gbc.writeMem(0x941c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd9f, gbc.sp());
        EXPECT(0x941e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x941c));
        EXPECT(0x34, gbc.readMem(0x941d));
        // CB 34 0105
        gbc.setState(0xb79a, 0x5b66, 0xceb0, 0x788f, 0x255d, 0x85d4, 0x1, 0x0);
        gbc.writeMem(0xb79a, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5b66, gbc.sp());
        EXPECT(0xb79c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb79a));
        EXPECT(0x34, gbc.readMem(0xb79b));
        // CB 34 0107
        gbc.setState(0xd1bc, 0x26e2, 0xce60, 0xe5aa, 0x441, 0x2fe0, 0x0, 0x1);
        gbc.writeMem(0xd1bc, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x26e2, gbc.sp());
        EXPECT(0xd1be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1bc));
        EXPECT(0x34, gbc.readMem(0xd1bd));
        // CB 34 0108
        gbc.setState(0x1634, 0xf785, 0xd7b0, 0xe288, 0xbcaa, 0xc6e1, 0x1, 0x0);
        gbc.writeMem(0x1634, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf785, gbc.sp());
        EXPECT(0x1636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0109
        gbc.setState(0x849c, 0xff74, 0xc210, 0x242a, 0xa06d, 0xb855, 0x0, 0x1);
        gbc.writeMem(0x849c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xff74, gbc.sp());
        EXPECT(0x849e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x849c));
        EXPECT(0x34, gbc.readMem(0x849d));
        // CB 34 010A
        gbc.setState(0x5dfa, 0x6bff, 0xa7c0, 0x9040, 0xcfcd, 0x6a8b, 0x1, 0x1);
        gbc.writeMem(0x5dfa, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6bff, gbc.sp());
        EXPECT(0x5dfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 010B
        gbc.setState(0x94ae, 0x9ce7, 0x2ff0, 0xc659, 0x8532, 0xc56e, 0x0, 0x1);
        gbc.writeMem(0x94ae, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9ce7, gbc.sp());
        EXPECT(0x94b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94ae));
        EXPECT(0x34, gbc.readMem(0x94af));
        // CB 34 010C
        gbc.setState(0xb0b4, 0x12bc, 0x8390, 0xbdd7, 0x7eea, 0x41e3, 0x0, 0x1);
        gbc.writeMem(0xb0b4, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x12bc, gbc.sp());
        EXPECT(0xb0b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0b4));
        EXPECT(0x34, gbc.readMem(0xb0b5));
        // CB 34 010E
        gbc.setState(0xa73a, 0x30ba, 0x9890, 0x56, 0xccfd, 0x16c4, 0x0, 0x0);
        gbc.writeMem(0xa73a, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x30ba, gbc.sp());
        EXPECT(0xa73c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa73a));
        EXPECT(0x34, gbc.readMem(0xa73b));
        // CB 34 010F
        gbc.setState(0x7f16, 0x7862, 0xed80, 0x8f82, 0xd9ad, 0xab39, 0x1, 0x1);
        gbc.writeMem(0x7f16, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7862, gbc.sp());
        EXPECT(0x7f18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0110
        gbc.setState(0xc7b1, 0x4313, 0xee50, 0x67ce, 0xed11, 0x6541, 0x1, 0x1);
        gbc.writeMem(0xc7b1, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4313, gbc.sp());
        EXPECT(0xc7b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7b1));
        EXPECT(0x34, gbc.readMem(0xc7b2));
        // CB 34 0111
        gbc.setState(0xab83, 0x20ce, 0xaea0, 0xb554, 0x8305, 0x1c6, 0x1, 0x1);
        gbc.writeMem(0xab83, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x20ce, gbc.sp());
        EXPECT(0xab85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab83));
        EXPECT(0x34, gbc.readMem(0xab84));
        // CB 34 0112
        gbc.setState(0x85d3, 0xe2eb, 0xcae0, 0xd254, 0xf26a, 0xf4f8, 0x1, 0x1);
        gbc.writeMem(0x85d3, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe2eb, gbc.sp());
        EXPECT(0x85d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85d3));
        EXPECT(0x34, gbc.readMem(0x85d4));
        // CB 34 0114
        gbc.setState(0x4913, 0x4a76, 0xb170, 0x262f, 0x12f2, 0xd3cb, 0x0, 0x0);
        gbc.writeMem(0x4913, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4a76, gbc.sp());
        EXPECT(0x4915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0115
        gbc.setState(0xc6f6, 0xceae, 0xdfa0, 0xd518, 0xb1e1, 0x4011, 0x1, 0x1);
        gbc.writeMem(0xc6f6, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xceae, gbc.sp());
        EXPECT(0xc6f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6f6));
        EXPECT(0x34, gbc.readMem(0xc6f7));
        // CB 34 0116
        gbc.setState(0x12b6, 0xad6e, 0xa9c0, 0xcf7b, 0xf44f, 0xeed0, 0x0, 0x1);
        gbc.writeMem(0x12b6, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xad6e, gbc.sp());
        EXPECT(0x12b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0117
        gbc.setState(0x53c5, 0xdfe0, 0xd990, 0x1742, 0x62a5, 0xedc3, 0x1, 0x0);
        gbc.writeMem(0x53c5, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xdfe0, gbc.sp());
        EXPECT(0x53c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0118
        gbc.setState(0x9ef7, 0xbdb6, 0x5580, 0x286f, 0x31d0, 0x214b, 0x0, 0x0);
        gbc.writeMem(0x9ef7, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbdb6, gbc.sp());
        EXPECT(0x9ef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ef7));
        EXPECT(0x34, gbc.readMem(0x9ef8));
        // CB 34 0119
        gbc.setState(0x80ac, 0x6625, 0x7290, 0x1b2f, 0xbbe4, 0x2a84, 0x0, 0x0);
        gbc.writeMem(0x80ac, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6625, gbc.sp());
        EXPECT(0x80ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80ac));
        EXPECT(0x34, gbc.readMem(0x80ad));
        // CB 34 011A
        gbc.setState(0x2c7f, 0xbd92, 0x9030, 0xd526, 0xdb4e, 0x2ecd, 0x1, 0x0);
        gbc.writeMem(0x2c7f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xbd92, gbc.sp());
        EXPECT(0x2c81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 011B
        gbc.setState(0x4a29, 0x3a70, 0x37f0, 0x63f0, 0x39f7, 0xbd18, 0x0, 0x0);
        gbc.writeMem(0x4a29, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3a70, gbc.sp());
        EXPECT(0x4a2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 011D
        gbc.setState(0x81fd, 0xf988, 0x7c00, 0x6e7, 0xfdc2, 0x2b01, 0x0, 0x1);
        gbc.writeMem(0x81fd, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf988, gbc.sp());
        EXPECT(0x81ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81fd));
        EXPECT(0x34, gbc.readMem(0x81fe));
        // CB 34 011E
        gbc.setState(0xa345, 0x3f7c, 0x5a20, 0xa4d3, 0xe3f1, 0x53cd, 0x1, 0x1);
        gbc.writeMem(0xa345, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3f7c, gbc.sp());
        EXPECT(0xa347, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa345));
        EXPECT(0x34, gbc.readMem(0xa346));
        // CB 34 011F
        gbc.setState(0x1c50, 0xb3c5, 0x5300, 0x7c34, 0xa821, 0xf6f0, 0x0, 0x0);
        gbc.writeMem(0x1c50, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb3c5, gbc.sp());
        EXPECT(0x1c52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0120
        gbc.setState(0xa0ba, 0x35f4, 0xcb0, 0x29e3, 0x7066, 0xf555, 0x0, 0x1);
        gbc.writeMem(0xa0ba, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x35f4, gbc.sp());
        EXPECT(0xa0bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ba));
        EXPECT(0x34, gbc.readMem(0xa0bb));
        // CB 34 0121
        gbc.setState(0x2301, 0x66c, 0xc1a0, 0x4703, 0x9d26, 0x1379, 0x0, 0x1);
        gbc.writeMem(0x2301, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x66c, gbc.sp());
        EXPECT(0x2303, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0122
        gbc.setState(0x659e, 0x785e, 0xc0c0, 0xc8fb, 0xfbf3, 0x4b84, 0x1, 0x0);
        gbc.writeMem(0x659e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x785e, gbc.sp());
        EXPECT(0x65a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0123
        gbc.setState(0x47a, 0x9420, 0x1a80, 0xd8b7, 0x627e, 0xb09f, 0x1, 0x1);
        gbc.writeMem(0x47a, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9420, gbc.sp());
        EXPECT(0x47c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0124
        gbc.setState(0xbae3, 0xb6bc, 0x2e30, 0x6008, 0x4002, 0xeee2, 0x0, 0x0);
        gbc.writeMem(0xbae3, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb6bc, gbc.sp());
        EXPECT(0xbae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbae3));
        EXPECT(0x34, gbc.readMem(0xbae4));
        // CB 34 0125
        gbc.setState(0xc54b, 0x5d0, 0x9900, 0x2284, 0x910e, 0x59c4, 0x0, 0x1);
        gbc.writeMem(0xc54b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5d0, gbc.sp());
        EXPECT(0xc54d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc54b));
        EXPECT(0x34, gbc.readMem(0xc54c));
        // CB 34 0126
        gbc.setState(0x3fa, 0xe627, 0x8510, 0x27ef, 0x7d1d, 0xacb, 0x0, 0x0);
        gbc.writeMem(0x3fa, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe627, gbc.sp());
        EXPECT(0x3fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0127
        gbc.setState(0x74dd, 0x9e5, 0x7860, 0x94a5, 0x41e3, 0xa9af, 0x0, 0x0);
        gbc.writeMem(0x74dd, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9e5, gbc.sp());
        EXPECT(0x74df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0128
        gbc.setState(0xf20, 0x7806, 0xf1b0, 0x682, 0xd965, 0x81c8, 0x0, 0x1);
        gbc.writeMem(0xf20, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7806, gbc.sp());
        EXPECT(0xf22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0129
        gbc.setState(0x7c7e, 0x9922, 0x7290, 0x9d98, 0xa32c, 0xb7f4, 0x0, 0x0);
        gbc.writeMem(0x7c7e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9922, gbc.sp());
        EXPECT(0x7c80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 012A
        gbc.setState(0x2f6c, 0xa095, 0x4300, 0x290c, 0x7b24, 0x46cc, 0x0, 0x1);
        gbc.writeMem(0x2f6c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa095, gbc.sp());
        EXPECT(0x2f6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 012B
        gbc.setState(0x2bcb, 0x7382, 0xc6e0, 0xa9e6, 0xe7, 0x6207, 0x0, 0x0);
        gbc.writeMem(0x2bcb, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7382, gbc.sp());
        EXPECT(0x2bcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 012C
        gbc.setState(0x588c, 0xf799, 0x9ad0, 0xa0ad, 0x8d6a, 0x931a, 0x1, 0x0);
        gbc.writeMem(0x588c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf799, gbc.sp());
        EXPECT(0x588e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 012D
        gbc.setState(0xb9c9, 0x14f9, 0xf880, 0x2592, 0x9fc2, 0x9584, 0x1, 0x1);
        gbc.writeMem(0xb9c9, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x14f9, gbc.sp());
        EXPECT(0xb9cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9c9));
        EXPECT(0x34, gbc.readMem(0xb9ca));
        // CB 34 012E
        gbc.setState(0x21be, 0x91e0, 0x5cd0, 0xe49d, 0x2c7a, 0x2558, 0x1, 0x1);
        gbc.writeMem(0x21be, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x91e0, gbc.sp());
        EXPECT(0x21c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 012F
        gbc.setState(0x18e6, 0x7187, 0xf200, 0x34f0, 0x5912, 0x1672, 0x0, 0x1);
        gbc.writeMem(0x18e6, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7187, gbc.sp());
        EXPECT(0x18e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0130
        gbc.setState(0xdba0, 0x6614, 0xb760, 0xe41d, 0x1ddc, 0x7e6, 0x1, 0x1);
        gbc.writeMem(0xdba0, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6614, gbc.sp());
        EXPECT(0xdba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdba0));
        EXPECT(0x34, gbc.readMem(0xdba1));
        // CB 34 0131
        gbc.setState(0x65a1, 0xe3c, 0x26d0, 0xcf59, 0xa66e, 0x1ab5, 0x1, 0x0);
        gbc.writeMem(0x65a1, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe3c, gbc.sp());
        EXPECT(0x65a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0133
        gbc.setState(0xbe9f, 0x8451, 0x8320, 0x8244, 0xa2ac, 0xccdf, 0x0, 0x0);
        gbc.writeMem(0xbe9f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8451, gbc.sp());
        EXPECT(0xbea1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe9f));
        EXPECT(0x34, gbc.readMem(0xbea0));
        // CB 34 0134
        gbc.setState(0xea6c, 0x7071, 0x7e90, 0xd7d3, 0xd0d0, 0x801e, 0x0, 0x1);
        gbc.writeMem(0xea6c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7071, gbc.sp());
        EXPECT(0xea6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea6c));
        EXPECT(0x34, gbc.readMem(0xea6d));
        // CB 34 0135
        gbc.setState(0x57c6, 0x6e86, 0x3050, 0x26c, 0x64e7, 0x8b57, 0x0, 0x0);
        gbc.writeMem(0x57c6, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6e86, gbc.sp());
        EXPECT(0x57c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0136
        gbc.setState(0x376b, 0xfe6b, 0x4c0, 0x11d6, 0x4c6c, 0xb43, 0x0, 0x0);
        gbc.writeMem(0x376b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xfe6b, gbc.sp());
        EXPECT(0x376d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0138
        gbc.setState(0x1050, 0xf463, 0xde70, 0x45e3, 0x9b65, 0x345d, 0x0, 0x0);
        gbc.writeMem(0x1050, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf463, gbc.sp());
        EXPECT(0x1052, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0139
        gbc.setState(0x440c, 0xbeee, 0x1ef0, 0xdc8b, 0x3aed, 0xaf68, 0x0, 0x0);
        gbc.writeMem(0x440c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xbeee, gbc.sp());
        EXPECT(0x440e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 013A
        gbc.setState(0x4968, 0x39ca, 0x56f0, 0x1084, 0x9359, 0x328f, 0x1, 0x1);
        gbc.writeMem(0x4968, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x39ca, gbc.sp());
        EXPECT(0x496a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 013B
        gbc.setState(0x41cf, 0xad97, 0x5bb0, 0x52ab, 0x80ab, 0x7849, 0x0, 0x0);
        gbc.writeMem(0x41cf, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xad97, gbc.sp());
        EXPECT(0x41d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 013C
        gbc.setState(0x1d64, 0xbd3b, 0x5f00, 0xd987, 0x36e2, 0xc017, 0x1, 0x0);
        gbc.writeMem(0x1d64, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xbd3b, gbc.sp());
        EXPECT(0x1d66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 013D
        gbc.setState(0x7c6a, 0xff3, 0xafa0, 0x3e56, 0x9ab7, 0xae94, 0x0, 0x0);
        gbc.writeMem(0x7c6a, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xff3, gbc.sp());
        EXPECT(0x7c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 013E
        gbc.setState(0xc882, 0x6bfb, 0xe0b0, 0xba48, 0x7a24, 0x60e9, 0x1, 0x1);
        gbc.writeMem(0xc882, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6bfb, gbc.sp());
        EXPECT(0xc884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc882));
        EXPECT(0x34, gbc.readMem(0xc883));
        // CB 34 0140
        gbc.setState(0xa92f, 0x8549, 0x4f60, 0x900f, 0x2704, 0x240e, 0x0, 0x1);
        gbc.writeMem(0xa92f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8549, gbc.sp());
        EXPECT(0xa931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa92f));
        EXPECT(0x34, gbc.readMem(0xa930));
        // CB 34 0141
        gbc.setState(0xe53c, 0x1ab4, 0x8830, 0xf9fb, 0x97db, 0xdba7, 0x1, 0x0);
        gbc.writeMem(0xe53c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1ab4, gbc.sp());
        EXPECT(0xe53e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe53c));
        EXPECT(0x34, gbc.readMem(0xe53d));
        // CB 34 0142
        gbc.setState(0xe111, 0x4d27, 0xda70, 0xa964, 0xc0da, 0xfa52, 0x1, 0x0);
        gbc.writeMem(0xe111, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4d27, gbc.sp());
        EXPECT(0xe113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe111));
        EXPECT(0x34, gbc.readMem(0xe112));
        // CB 34 0143
        gbc.setState(0x3510, 0xfed0, 0xf190, 0x6c6c, 0x4008, 0x68ff, 0x0, 0x0);
        gbc.writeMem(0x3510, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xfed0, gbc.sp());
        EXPECT(0x3512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0144
        gbc.setState(0x7382, 0x3f0d, 0xffa0, 0xe87e, 0xa4f8, 0xb570, 0x1, 0x0);
        gbc.writeMem(0x7382, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3f0d, gbc.sp());
        EXPECT(0x7384, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0145
        gbc.setState(0xc721, 0xd505, 0x10a0, 0x394a, 0x9475, 0x633b, 0x0, 0x0);
        gbc.writeMem(0xc721, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd505, gbc.sp());
        EXPECT(0xc723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc721));
        EXPECT(0x34, gbc.readMem(0xc722));
        // CB 34 0146
        gbc.setState(0x4b55, 0xcf7, 0x8310, 0xea74, 0x343f, 0x6574, 0x1, 0x1);
        gbc.writeMem(0x4b55, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xcf7, gbc.sp());
        EXPECT(0x4b57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0147
        gbc.setState(0xad0e, 0x224c, 0x4950, 0x83d, 0x75c0, 0xced3, 0x1, 0x0);
        gbc.writeMem(0xad0e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x224c, gbc.sp());
        EXPECT(0xad10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad0e));
        EXPECT(0x34, gbc.readMem(0xad0f));
        // CB 34 0148
        gbc.setState(0x6106, 0xdc53, 0xa960, 0x77d5, 0x3c5, 0x59d8, 0x0, 0x0);
        gbc.writeMem(0x6106, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xdc53, gbc.sp());
        EXPECT(0x6108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0149
        gbc.setState(0xa10b, 0xa76e, 0x7f20, 0x6dbb, 0x708c, 0xca03, 0x0, 0x1);
        gbc.writeMem(0xa10b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa76e, gbc.sp());
        EXPECT(0xa10d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa10b));
        EXPECT(0x34, gbc.readMem(0xa10c));
        // CB 34 014A
        gbc.setState(0xc1e0, 0x9c24, 0xd250, 0x62a0, 0xfedb, 0xe9f8, 0x0, 0x1);
        gbc.writeMem(0xc1e0, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9c24, gbc.sp());
        EXPECT(0xc1e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1e0));
        EXPECT(0x34, gbc.readMem(0xc1e1));
        // CB 34 014C
        gbc.setState(0x252a, 0x709e, 0x5d60, 0x1b99, 0xfe2c, 0x1b65, 0x0, 0x1);
        gbc.writeMem(0x252a, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x709e, gbc.sp());
        EXPECT(0x252c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 014D
        gbc.setState(0x3c7d, 0x28ae, 0x8100, 0x7d7b, 0xca04, 0xdba4, 0x1, 0x1);
        gbc.writeMem(0x3c7d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x28ae, gbc.sp());
        EXPECT(0x3c7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 014E
        gbc.setState(0xd506, 0x33d1, 0xcdb0, 0xe315, 0x5769, 0x4c69, 0x0, 0x0);
        gbc.writeMem(0xd506, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x33d1, gbc.sp());
        EXPECT(0xd508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd506));
        EXPECT(0x34, gbc.readMem(0xd507));
        // CB 34 014F
        gbc.setState(0xe3ef, 0x770d, 0xe930, 0xaa91, 0xab06, 0xc55d, 0x0, 0x0);
        gbc.writeMem(0xe3ef, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x770d, gbc.sp());
        EXPECT(0xe3f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3ef));
        EXPECT(0x34, gbc.readMem(0xe3f0));
        // CB 34 0150
        gbc.setState(0xe518, 0xacf5, 0x71e0, 0xeffe, 0xdf3e, 0x628f, 0x0, 0x1);
        gbc.writeMem(0xe518, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xacf5, gbc.sp());
        EXPECT(0xe51a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe518));
        EXPECT(0x34, gbc.readMem(0xe519));
        // CB 34 0151
        gbc.setState(0xc4ba, 0x8200, 0xcff0, 0x245c, 0xce1a, 0x2db0, 0x0, 0x1);
        gbc.writeMem(0xc4ba, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8200, gbc.sp());
        EXPECT(0xc4bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4ba));
        EXPECT(0x34, gbc.readMem(0xc4bb));
        // CB 34 0152
        gbc.setState(0x9c91, 0xf884, 0xf8b0, 0xc235, 0xda0f, 0xdae3, 0x1, 0x1);
        gbc.writeMem(0x9c91, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf884, gbc.sp());
        EXPECT(0x9c93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c91));
        EXPECT(0x34, gbc.readMem(0x9c92));
        // CB 34 0153
        gbc.setState(0xcb2c, 0x49de, 0xe4e0, 0x9369, 0xd771, 0x8272, 0x1, 0x0);
        gbc.writeMem(0xcb2c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x49de, gbc.sp());
        EXPECT(0xcb2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb2c));
        EXPECT(0x34, gbc.readMem(0xcb2d));
        // CB 34 0154
        gbc.setState(0xdbc4, 0x2717, 0xcf10, 0x3ef0, 0xb7dd, 0x545a, 0x1, 0x0);
        gbc.writeMem(0xdbc4, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2717, gbc.sp());
        EXPECT(0xdbc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbc4));
        EXPECT(0x34, gbc.readMem(0xdbc5));
        // CB 34 0155
        gbc.setState(0x1f35, 0x413d, 0xe7e0, 0x84c4, 0xb28, 0x7351, 0x1, 0x0);
        gbc.writeMem(0x1f35, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x413d, gbc.sp());
        EXPECT(0x1f37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0156
        gbc.setState(0x212e, 0x91e7, 0x2480, 0x879c, 0x9ec2, 0x940e, 0x1, 0x0);
        gbc.writeMem(0x212e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x91e7, gbc.sp());
        EXPECT(0x2130, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0157
        gbc.setState(0x59fb, 0xb185, 0x6400, 0xc519, 0xf52e, 0xf72f, 0x1, 0x0);
        gbc.writeMem(0x59fb, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb185, gbc.sp());
        EXPECT(0x59fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0158
        gbc.setState(0x9768, 0x2f0e, 0xc8d0, 0xbd3c, 0xa3f6, 0xe78f, 0x1, 0x1);
        gbc.writeMem(0x9768, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2f0e, gbc.sp());
        EXPECT(0x976a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9768));
        EXPECT(0x34, gbc.readMem(0x9769));
        // CB 34 0159
        gbc.setState(0xe77e, 0xa707, 0x11b0, 0x4a8f, 0x2214, 0xc411, 0x1, 0x0);
        gbc.writeMem(0xe77e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa707, gbc.sp());
        EXPECT(0xe780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe77e));
        EXPECT(0x34, gbc.readMem(0xe77f));
        // CB 34 015A
        gbc.setState(0xea6d, 0xdf65, 0xadc0, 0x188b, 0xc289, 0x9a40, 0x1, 0x1);
        gbc.writeMem(0xea6d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xdf65, gbc.sp());
        EXPECT(0xea6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea6d));
        EXPECT(0x34, gbc.readMem(0xea6e));
        // CB 34 015B
        gbc.setState(0x8f94, 0x551b, 0xfb90, 0xc18a, 0x2439, 0xac21, 0x0, 0x1);
        gbc.writeMem(0x8f94, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x551b, gbc.sp());
        EXPECT(0x8f96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f94));
        EXPECT(0x34, gbc.readMem(0x8f95));
        // CB 34 015C
        gbc.setState(0xb591, 0x9966, 0x77d0, 0xdebd, 0x76ac, 0x5416, 0x0, 0x1);
        gbc.writeMem(0xb591, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9966, gbc.sp());
        EXPECT(0xb593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb591));
        EXPECT(0x34, gbc.readMem(0xb592));
        // CB 34 015D
        gbc.setState(0xe202, 0xb658, 0x8f20, 0x90c4, 0x3fbf, 0x3a80, 0x0, 0x0);
        gbc.writeMem(0xe202, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb658, gbc.sp());
        EXPECT(0xe204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe202));
        EXPECT(0x34, gbc.readMem(0xe203));
        // CB 34 015E
        gbc.setState(0x3950, 0xf91d, 0xfec0, 0x18e0, 0xc247, 0xaf59, 0x1, 0x0);
        gbc.writeMem(0x3950, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf91d, gbc.sp());
        EXPECT(0x3952, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 015F
        gbc.setState(0xafb3, 0xab45, 0xf570, 0x11c7, 0x3ac, 0x4e2e, 0x0, 0x0);
        gbc.writeMem(0xafb3, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xab45, gbc.sp());
        EXPECT(0xafb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafb3));
        EXPECT(0x34, gbc.readMem(0xafb4));
        // CB 34 0160
        gbc.setState(0xd4c5, 0x64c4, 0xbeb0, 0x8ac8, 0xd4a7, 0xd97c, 0x1, 0x0);
        gbc.writeMem(0xd4c5, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x64c4, gbc.sp());
        EXPECT(0xd4c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4c5));
        EXPECT(0x34, gbc.readMem(0xd4c6));
        // CB 34 0161
        gbc.setState(0x62a3, 0xd600, 0x3e00, 0x66ee, 0x3393, 0x978, 0x1, 0x1);
        gbc.writeMem(0x62a3, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd600, gbc.sp());
        EXPECT(0x62a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0162
        gbc.setState(0x6c99, 0xff82, 0x7640, 0xa501, 0xaf20, 0x7ba9, 0x0, 0x1);
        gbc.writeMem(0x6c99, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xff82, gbc.sp());
        EXPECT(0x6c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0163
        gbc.setState(0x8a03, 0x6ec3, 0x6a40, 0xdeed, 0x9ec, 0x77db, 0x1, 0x1);
        gbc.writeMem(0x8a03, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6ec3, gbc.sp());
        EXPECT(0x8a05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a03));
        EXPECT(0x34, gbc.readMem(0x8a04));
        // CB 34 0164
        gbc.setState(0x38c, 0xd004, 0xc790, 0x96d0, 0xf5d6, 0x70ac, 0x1, 0x0);
        gbc.writeMem(0x38c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd004, gbc.sp());
        EXPECT(0x38e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0165
        gbc.setState(0xc8d4, 0xbacf, 0xa0a0, 0x5d1e, 0xa683, 0x3b3f, 0x0, 0x1);
        gbc.writeMem(0xc8d4, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbacf, gbc.sp());
        EXPECT(0xc8d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8d4));
        EXPECT(0x34, gbc.readMem(0xc8d5));
        // CB 34 0166
        gbc.setState(0x8480, 0x5a61, 0x1540, 0x269f, 0xe263, 0x299b, 0x0, 0x1);
        gbc.writeMem(0x8480, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5a61, gbc.sp());
        EXPECT(0x8482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8480));
        EXPECT(0x34, gbc.readMem(0x8481));
        // CB 34 0167
        gbc.setState(0x229e, 0x251e, 0xb000, 0x3610, 0x96e9, 0xa4ca, 0x1, 0x1);
        gbc.writeMem(0x229e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x251e, gbc.sp());
        EXPECT(0x22a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0168
        gbc.setState(0xdc72, 0x4235, 0x62f0, 0xc63f, 0x318a, 0x1bb1, 0x1, 0x0);
        gbc.writeMem(0xdc72, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4235, gbc.sp());
        EXPECT(0xdc74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc72));
        EXPECT(0x34, gbc.readMem(0xdc73));
        // CB 34 0169
        gbc.setState(0x7b11, 0xe915, 0x7810, 0x397b, 0x3aeb, 0x9328, 0x1, 0x1);
        gbc.writeMem(0x7b11, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe915, gbc.sp());
        EXPECT(0x7b13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 016B
        gbc.setState(0x9fc4, 0x9b92, 0x68c0, 0xbb85, 0xf5d, 0x4638, 0x0, 0x0);
        gbc.writeMem(0x9fc4, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9b92, gbc.sp());
        EXPECT(0x9fc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fc4));
        EXPECT(0x34, gbc.readMem(0x9fc5));
        // CB 34 016C
        gbc.setState(0xe346, 0x159a, 0xeb00, 0x6909, 0x7d99, 0xab3a, 0x0, 0x1);
        gbc.writeMem(0xe346, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x159a, gbc.sp());
        EXPECT(0xe348, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe346));
        EXPECT(0x34, gbc.readMem(0xe347));
        // CB 34 016D
        gbc.setState(0x46ba, 0x8b96, 0xd920, 0x677f, 0xb23a, 0xc908, 0x1, 0x1);
        gbc.writeMem(0x46ba, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8b96, gbc.sp());
        EXPECT(0x46bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 016E
        gbc.setState(0x19cb, 0xdb6f, 0x470, 0x4fd5, 0xcfa6, 0x649e, 0x0, 0x1);
        gbc.writeMem(0x19cb, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xdb6f, gbc.sp());
        EXPECT(0x19cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 016F
        gbc.setState(0xc942, 0x8ea0, 0x5980, 0x4b8e, 0x329a, 0x494e, 0x1, 0x0);
        gbc.writeMem(0xc942, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8ea0, gbc.sp());
        EXPECT(0xc944, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc942));
        EXPECT(0x34, gbc.readMem(0xc943));
        // CB 34 0170
        gbc.setState(0x1dc5, 0xb213, 0x7d60, 0x5945, 0xfb3c, 0xa3c7, 0x0, 0x0);
        gbc.writeMem(0x1dc5, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb213, gbc.sp());
        EXPECT(0x1dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0171
        gbc.setState(0x8bf3, 0x83e8, 0xc300, 0x8f19, 0xdce0, 0xb45b, 0x0, 0x1);
        gbc.writeMem(0x8bf3, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x83e8, gbc.sp());
        EXPECT(0x8bf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bf3));
        EXPECT(0x34, gbc.readMem(0x8bf4));
        // CB 34 0172
        gbc.setState(0xc14f, 0xee35, 0x1230, 0x4b63, 0x441, 0x3713, 0x0, 0x0);
        gbc.writeMem(0xc14f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xee35, gbc.sp());
        EXPECT(0xc151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc14f));
        EXPECT(0x34, gbc.readMem(0xc150));
        // CB 34 0173
        gbc.setState(0x4038, 0x409, 0xfa0, 0x5280, 0x62ec, 0xc605, 0x1, 0x1);
        gbc.writeMem(0x4038, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x409, gbc.sp());
        EXPECT(0x403a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0174
        gbc.setState(0x5b27, 0x7f79, 0x1d20, 0x8c3e, 0x3158, 0xa60c, 0x0, 0x0);
        gbc.writeMem(0x5b27, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7f79, gbc.sp());
        EXPECT(0x5b29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0175
        gbc.setState(0x7569, 0xdf1a, 0x2f00, 0xd2ed, 0x3c13, 0xef14, 0x1, 0x1);
        gbc.writeMem(0x7569, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xdf1a, gbc.sp());
        EXPECT(0x756b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0176
        gbc.setState(0x975, 0x3e0b, 0x8ad0, 0xf77e, 0x78db, 0xbf3b, 0x0, 0x1);
        gbc.writeMem(0x975, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3e0b, gbc.sp());
        EXPECT(0x977, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0177
        gbc.setState(0x70b8, 0xd6f0, 0x8a80, 0x20a7, 0xc400, 0x2b8c, 0x1, 0x1);
        gbc.writeMem(0x70b8, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd6f0, gbc.sp());
        EXPECT(0x70ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0178
        gbc.setState(0x8a54, 0x35c4, 0xb660, 0xfd9d, 0xea43, 0x3590, 0x1, 0x1);
        gbc.writeMem(0x8a54, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x35c4, gbc.sp());
        EXPECT(0x8a56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a54));
        EXPECT(0x34, gbc.readMem(0x8a55));
        // CB 34 017A
        gbc.setState(0x3727, 0x4254, 0x7f60, 0xd1af, 0xce52, 0xd679, 0x1, 0x0);
        gbc.writeMem(0x3727, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4254, gbc.sp());
        EXPECT(0x3729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 017B
        gbc.setState(0x11e8, 0x2e04, 0x71f0, 0x8e6d, 0x596c, 0xed2e, 0x1, 0x1);
        gbc.writeMem(0x11e8, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2e04, gbc.sp());
        EXPECT(0x11ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 017C
        gbc.setState(0x2a30, 0x45d6, 0x8710, 0xb4c5, 0x580, 0xb4ea, 0x1, 0x0);
        gbc.writeMem(0x2a30, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x45d6, gbc.sp());
        EXPECT(0x2a32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 017D
        gbc.setState(0x7ec4, 0x6ac3, 0x92e0, 0xc1b2, 0xf9b9, 0xdea4, 0x0, 0x0);
        gbc.writeMem(0x7ec4, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6ac3, gbc.sp());
        EXPECT(0x7ec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 017E
        gbc.setState(0x9383, 0xdbd9, 0x6f30, 0x5d4d, 0xd12e, 0x49d2, 0x0, 0x1);
        gbc.writeMem(0x9383, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xdbd9, gbc.sp());
        EXPECT(0x9385, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9383));
        EXPECT(0x34, gbc.readMem(0x9384));
        // CB 34 017F
        gbc.setState(0xe3b3, 0x3541, 0x8600, 0x5fe, 0x8b48, 0xf780, 0x0, 0x0);
        gbc.writeMem(0xe3b3, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3541, gbc.sp());
        EXPECT(0xe3b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3b3));
        EXPECT(0x34, gbc.readMem(0xe3b4));
        // CB 34 0180
        gbc.setState(0xdc3e, 0xeca0, 0xf5c0, 0xdf85, 0x4e3e, 0x2d93, 0x0, 0x0);
        gbc.writeMem(0xdc3e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xeca0, gbc.sp());
        EXPECT(0xdc40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc3e));
        EXPECT(0x34, gbc.readMem(0xdc3f));
        // CB 34 0181
        gbc.setState(0xa384, 0x2a26, 0xcb90, 0xf05d, 0x7763, 0x88c, 0x1, 0x0);
        gbc.writeMem(0xa384, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2a26, gbc.sp());
        EXPECT(0xa386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa384));
        EXPECT(0x34, gbc.readMem(0xa385));
        // CB 34 0182
        gbc.setState(0x1fc1, 0x31b5, 0xb180, 0xbaaa, 0x4032, 0xb71f, 0x0, 0x1);
        gbc.writeMem(0x1fc1, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x31b5, gbc.sp());
        EXPECT(0x1fc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0183
        gbc.setState(0x6da0, 0x9a8b, 0x4a40, 0xe89a, 0x9cc5, 0x9da, 0x1, 0x1);
        gbc.writeMem(0x6da0, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9a8b, gbc.sp());
        EXPECT(0x6da2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0184
        gbc.setState(0x231e, 0x7722, 0xa1a0, 0xc3d0, 0x8eb4, 0xd516, 0x0, 0x1);
        gbc.writeMem(0x231e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7722, gbc.sp());
        EXPECT(0x2320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0185
        gbc.setState(0x3ba6, 0xd7da, 0x6a00, 0x6164, 0xcdd1, 0xbd05, 0x1, 0x0);
        gbc.writeMem(0x3ba6, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd7da, gbc.sp());
        EXPECT(0x3ba8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0186
        gbc.setState(0xabf0, 0x3d5a, 0x7dc0, 0x6a12, 0xa392, 0x152d, 0x1, 0x0);
        gbc.writeMem(0xabf0, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3d5a, gbc.sp());
        EXPECT(0xabf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabf0));
        EXPECT(0x34, gbc.readMem(0xabf1));
        // CB 34 0187
        gbc.setState(0x7886, 0x52ed, 0xf540, 0x3af2, 0x220b, 0x9b15, 0x0, 0x0);
        gbc.writeMem(0x7886, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x52ed, gbc.sp());
        EXPECT(0x7888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0188
        gbc.setState(0x4d4f, 0xb90d, 0xe300, 0xa1d0, 0x6ec3, 0x5af4, 0x0, 0x0);
        gbc.writeMem(0x4d4f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb90d, gbc.sp());
        EXPECT(0x4d51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0189
        gbc.setState(0xac88, 0xe8e9, 0xe470, 0xa803, 0xd315, 0xa143, 0x0, 0x1);
        gbc.writeMem(0xac88, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe8e9, gbc.sp());
        EXPECT(0xac8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac88));
        EXPECT(0x34, gbc.readMem(0xac89));
        // CB 34 018B
        gbc.setState(0x862b, 0xc32f, 0xaf40, 0x718c, 0xd37d, 0x212d, 0x1, 0x1);
        gbc.writeMem(0x862b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc32f, gbc.sp());
        EXPECT(0x862d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x862b));
        EXPECT(0x34, gbc.readMem(0x862c));
        // CB 34 018D
        gbc.setState(0xcb48, 0x45e1, 0x68b0, 0xe194, 0xf3c6, 0x2749, 0x1, 0x0);
        gbc.writeMem(0xcb48, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x45e1, gbc.sp());
        EXPECT(0xcb4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb48));
        EXPECT(0x34, gbc.readMem(0xcb49));
        // CB 34 018E
        gbc.setState(0x4031, 0xe59e, 0x75c0, 0xd55f, 0x2bc6, 0xb322, 0x0, 0x1);
        gbc.writeMem(0x4031, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe59e, gbc.sp());
        EXPECT(0x4033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 018F
        gbc.setState(0xece4, 0x7afe, 0x1100, 0x6e81, 0x7393, 0xb021, 0x1, 0x0);
        gbc.writeMem(0xece4, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7afe, gbc.sp());
        EXPECT(0xece6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xece4));
        EXPECT(0x34, gbc.readMem(0xece5));
        // CB 34 0190
        gbc.setState(0xce76, 0x2a31, 0xa70, 0x2e19, 0x551, 0xa4fb, 0x0, 0x1);
        gbc.writeMem(0xce76, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2a31, gbc.sp());
        EXPECT(0xce78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce76));
        EXPECT(0x34, gbc.readMem(0xce77));
        // CB 34 0191
        gbc.setState(0x9a7c, 0xad02, 0xd410, 0x5b88, 0x6c5f, 0x706, 0x1, 0x0);
        gbc.writeMem(0x9a7c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xad02, gbc.sp());
        EXPECT(0x9a7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a7c));
        EXPECT(0x34, gbc.readMem(0x9a7d));
        // CB 34 0192
        gbc.setState(0xcb7, 0x3e76, 0xc450, 0xf009, 0x443e, 0x3cd6, 0x1, 0x0);
        gbc.writeMem(0xcb7, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3e76, gbc.sp());
        EXPECT(0xcb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0193
        gbc.setState(0x7698, 0xa38b, 0x6650, 0xde3e, 0x1452, 0x36d0, 0x0, 0x0);
        gbc.writeMem(0x7698, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa38b, gbc.sp());
        EXPECT(0x769a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0194
        gbc.setState(0xec5a, 0xbf18, 0xc800, 0x9345, 0xa1d4, 0xe34f, 0x0, 0x0);
        gbc.writeMem(0xec5a, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xbf18, gbc.sp());
        EXPECT(0xec5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec5a));
        EXPECT(0x34, gbc.readMem(0xec5b));
        // CB 34 0195
        gbc.setState(0x455, 0xa24c, 0x1280, 0xc87a, 0x59b8, 0xbe0d, 0x1, 0x0);
        gbc.writeMem(0x455, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa24c, gbc.sp());
        EXPECT(0x457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0196
        gbc.setState(0x5183, 0x75e6, 0x6050, 0x4b7e, 0x2dbe, 0x4f91, 0x1, 0x1);
        gbc.writeMem(0x5183, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x75e6, gbc.sp());
        EXPECT(0x5185, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0197
        gbc.setState(0xe592, 0xc945, 0x9180, 0x637e, 0x8e35, 0xee2b, 0x0, 0x0);
        gbc.writeMem(0xe592, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc945, gbc.sp());
        EXPECT(0xe594, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe592));
        EXPECT(0x34, gbc.readMem(0xe593));
        // CB 34 0198
        gbc.setState(0xb492, 0xf7, 0xcef0, 0x61ff, 0xc9a1, 0x5619, 0x0, 0x0);
        gbc.writeMem(0xb492, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf7, gbc.sp());
        EXPECT(0xb494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb492));
        EXPECT(0x34, gbc.readMem(0xb493));
        // CB 34 0199
        gbc.setState(0x3485, 0xd97, 0xeea0, 0xeeaa, 0x2b62, 0x6e69, 0x1, 0x1);
        gbc.writeMem(0x3485, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd97, gbc.sp());
        EXPECT(0x3487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 019A
        gbc.setState(0xd46b, 0xa46a, 0x8b20, 0x4a55, 0xbf80, 0xd66, 0x1, 0x0);
        gbc.writeMem(0xd46b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa46a, gbc.sp());
        EXPECT(0xd46d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd46b));
        EXPECT(0x34, gbc.readMem(0xd46c));
        // CB 34 019D
        gbc.setState(0x41fb, 0xe2c6, 0x9450, 0xf119, 0x2239, 0xd4b0, 0x0, 0x1);
        gbc.writeMem(0x41fb, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe2c6, gbc.sp());
        EXPECT(0x41fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 019E
        gbc.setState(0xf57, 0x4dcf, 0xd9a0, 0x5ebd, 0x5bd5, 0x4811, 0x0, 0x1);
        gbc.writeMem(0xf57, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4dcf, gbc.sp());
        EXPECT(0xf59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 019F
        gbc.setState(0x1c1d, 0x5d6c, 0x8230, 0xfcd5, 0x9a9f, 0x72a, 0x1, 0x0);
        gbc.writeMem(0x1c1d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5d6c, gbc.sp());
        EXPECT(0x1c1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01A0
        gbc.setState(0x733f, 0xe1b3, 0xa2a0, 0x35ba, 0xf146, 0x64dc, 0x1, 0x0);
        gbc.writeMem(0x733f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe1b3, gbc.sp());
        EXPECT(0x7341, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01A4
        gbc.setState(0x2910, 0x9b24, 0xd4f0, 0x6122, 0xd9a7, 0xa29d, 0x0, 0x0);
        gbc.writeMem(0x2910, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9b24, gbc.sp());
        EXPECT(0x2912, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01A5
        gbc.setState(0x9d5, 0xa931, 0x3900, 0xabab, 0x32e8, 0xb36a, 0x0, 0x1);
        gbc.writeMem(0x9d5, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa931, gbc.sp());
        EXPECT(0x9d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01A6
        gbc.setState(0x40e4, 0xa13d, 0x5ab0, 0xbeab, 0x4505, 0x4a6d, 0x1, 0x0);
        gbc.writeMem(0x40e4, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa13d, gbc.sp());
        EXPECT(0x40e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01A7
        gbc.setState(0x33c8, 0xd76a, 0x78a0, 0xeaf6, 0x609, 0x1523, 0x0, 0x1);
        gbc.writeMem(0x33c8, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd76a, gbc.sp());
        EXPECT(0x33ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01A8
        gbc.setState(0x43a2, 0xb5ae, 0x1360, 0xb5be, 0x3d3c, 0x3863, 0x1, 0x0);
        gbc.writeMem(0x43a2, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb5ae, gbc.sp());
        EXPECT(0x43a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01A9
        gbc.setState(0xabd, 0xb69d, 0x91a0, 0x260, 0x7164, 0x3af4, 0x0, 0x1);
        gbc.writeMem(0xabd, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb69d, gbc.sp());
        EXPECT(0xabf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01AA
        gbc.setState(0xe22b, 0xb1f4, 0x3350, 0x47d, 0x86e2, 0x4679, 0x0, 0x0);
        gbc.writeMem(0xe22b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb1f4, gbc.sp());
        EXPECT(0xe22d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe22b));
        EXPECT(0x34, gbc.readMem(0xe22c));
        // CB 34 01AB
        gbc.setState(0x3f04, 0xc037, 0x73f0, 0x3227, 0xf571, 0x8549, 0x0, 0x1);
        gbc.writeMem(0x3f04, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc037, gbc.sp());
        EXPECT(0x3f06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01AC
        gbc.setState(0x2fb4, 0x2b49, 0xd3b0, 0x5b97, 0xf6a3, 0xd6c, 0x0, 0x1);
        gbc.writeMem(0x2fb4, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2b49, gbc.sp());
        EXPECT(0x2fb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01AD
        gbc.setState(0x9ec5, 0xbc92, 0xa6f0, 0x8fd3, 0x2911, 0x1694, 0x0, 0x0);
        gbc.writeMem(0x9ec5, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbc92, gbc.sp());
        EXPECT(0x9ec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ec5));
        EXPECT(0x34, gbc.readMem(0x9ec6));
        // CB 34 01AE
        gbc.setState(0x6443, 0x8e01, 0x560, 0x2556, 0x38d3, 0xca2c, 0x1, 0x0);
        gbc.writeMem(0x6443, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8e01, gbc.sp());
        EXPECT(0x6445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01AF
        gbc.setState(0xa36a, 0xc28f, 0x25a0, 0x5e5, 0x3658, 0xb92d, 0x1, 0x0);
        gbc.writeMem(0xa36a, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc28f, gbc.sp());
        EXPECT(0xa36c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa36a));
        EXPECT(0x34, gbc.readMem(0xa36b));
        // CB 34 01B0
        gbc.setState(0x968f, 0x9d00, 0x1f0, 0xa6df, 0xf2ec, 0xb927, 0x1, 0x1);
        gbc.writeMem(0x968f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9d00, gbc.sp());
        EXPECT(0x9691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x968f));
        EXPECT(0x34, gbc.readMem(0x9690));
        // CB 34 01B1
        gbc.setState(0x7851, 0x700a, 0xb610, 0xbb34, 0x69b7, 0x932b, 0x1, 0x0);
        gbc.writeMem(0x7851, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x700a, gbc.sp());
        EXPECT(0x7853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01B2
        gbc.setState(0xe86a, 0x404d, 0xe970, 0x546b, 0x746a, 0x8ebb, 0x1, 0x0);
        gbc.writeMem(0xe86a, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x404d, gbc.sp());
        EXPECT(0xe86c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe86a));
        EXPECT(0x34, gbc.readMem(0xe86b));
        // CB 34 01B3
        gbc.setState(0x3b1a, 0xddc2, 0x4f30, 0xa733, 0x9590, 0x141d, 0x1, 0x1);
        gbc.writeMem(0x3b1a, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xddc2, gbc.sp());
        EXPECT(0x3b1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01B5
        gbc.setState(0xd8ec, 0x98f8, 0x2dc0, 0x647d, 0x2880, 0xf0d9, 0x1, 0x0);
        gbc.writeMem(0xd8ec, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x98f8, gbc.sp());
        EXPECT(0xd8ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8ec));
        EXPECT(0x34, gbc.readMem(0xd8ed));
        // CB 34 01B6
        gbc.setState(0x798b, 0x216, 0x7030, 0xe750, 0x4120, 0x54e8, 0x1, 0x1);
        gbc.writeMem(0x798b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x216, gbc.sp());
        EXPECT(0x798d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01B7
        gbc.setState(0x9675, 0x1bfa, 0x8b20, 0xb21d, 0xb571, 0x881f, 0x1, 0x0);
        gbc.writeMem(0x9675, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1bfa, gbc.sp());
        EXPECT(0x9677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9675));
        EXPECT(0x34, gbc.readMem(0x9676));
        // CB 34 01B8
        gbc.setState(0x7adf, 0x616f, 0x82b0, 0x731b, 0x6a1d, 0x5c52, 0x1, 0x0);
        gbc.writeMem(0x7adf, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x616f, gbc.sp());
        EXPECT(0x7ae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01B9
        gbc.setState(0xd15d, 0xebac, 0x9cb0, 0x3594, 0x92e5, 0x242e, 0x1, 0x0);
        gbc.writeMem(0xd15d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xebac, gbc.sp());
        EXPECT(0xd15f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd15d));
        EXPECT(0x34, gbc.readMem(0xd15e));
        // CB 34 01BA
        gbc.setState(0xc553, 0xd3e2, 0x1da0, 0xad04, 0x6982, 0xf45e, 0x1, 0x1);
        gbc.writeMem(0xc553, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd3e2, gbc.sp());
        EXPECT(0xc555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc553));
        EXPECT(0x34, gbc.readMem(0xc554));
        // CB 34 01BB
        gbc.setState(0x4fc9, 0xd07d, 0xa520, 0xe887, 0x643a, 0x9f47, 0x1, 0x0);
        gbc.writeMem(0x4fc9, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd07d, gbc.sp());
        EXPECT(0x4fcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01BC
        gbc.setState(0x3a5f, 0x1ef8, 0xf970, 0xb5ff, 0xe0bd, 0xfc12, 0x0, 0x1);
        gbc.writeMem(0x3a5f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1ef8, gbc.sp());
        EXPECT(0x3a61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01BD
        gbc.setState(0xeb69, 0xc915, 0x9f0, 0xaff3, 0x2beb, 0x9b6f, 0x1, 0x0);
        gbc.writeMem(0xeb69, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc915, gbc.sp());
        EXPECT(0xeb6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb69));
        EXPECT(0x34, gbc.readMem(0xeb6a));
        // CB 34 01BE
        gbc.setState(0xd16e, 0x94c8, 0x4720, 0xe44e, 0x3ffe, 0x5731, 0x0, 0x1);
        gbc.writeMem(0xd16e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x94c8, gbc.sp());
        EXPECT(0xd170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd16e));
        EXPECT(0x34, gbc.readMem(0xd16f));
        // CB 34 01BF
        gbc.setState(0x891, 0x2cf6, 0x89d0, 0x3ae5, 0x20b7, 0x30a1, 0x0, 0x1);
        gbc.writeMem(0x891, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2cf6, gbc.sp());
        EXPECT(0x893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01C1
        gbc.setState(0xce9, 0xa0d1, 0x6f40, 0xd531, 0xb14a, 0x8d83, 0x0, 0x1);
        gbc.writeMem(0xce9, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa0d1, gbc.sp());
        EXPECT(0xceb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01C2
        gbc.setState(0x3fcc, 0x9fca, 0xb6b0, 0x1451, 0x71a6, 0xf75c, 0x0, 0x0);
        gbc.writeMem(0x3fcc, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9fca, gbc.sp());
        EXPECT(0x3fce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01C3
        gbc.setState(0xcb48, 0xe0e0, 0x7740, 0xcec2, 0xb4da, 0xf452, 0x0, 0x0);
        gbc.writeMem(0xcb48, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe0e0, gbc.sp());
        EXPECT(0xcb4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb48));
        EXPECT(0x34, gbc.readMem(0xcb49));
        // CB 34 01C4
        gbc.setState(0xed62, 0x54a2, 0x6fa0, 0xc4c3, 0xd0ca, 0xd0d1, 0x1, 0x1);
        gbc.writeMem(0xed62, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x54a2, gbc.sp());
        EXPECT(0xed64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed62));
        EXPECT(0x34, gbc.readMem(0xed63));
        // CB 34 01C5
        gbc.setState(0x365f, 0x1a99, 0x68f0, 0x308e, 0x99fe, 0x125d, 0x0, 0x0);
        gbc.writeMem(0x365f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1a99, gbc.sp());
        EXPECT(0x3661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01C7
        gbc.setState(0x5a3d, 0x5e1b, 0xa030, 0x5977, 0xf7b4, 0x5f8f, 0x1, 0x0);
        gbc.writeMem(0x5a3d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5e1b, gbc.sp());
        EXPECT(0x5a3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01C8
        gbc.setState(0x919b, 0x4470, 0x4280, 0x701, 0x80f6, 0x9ec3, 0x1, 0x0);
        gbc.writeMem(0x919b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4470, gbc.sp());
        EXPECT(0x919d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x919b));
        EXPECT(0x34, gbc.readMem(0x919c));
        // CB 34 01C9
        gbc.setState(0xd6d6, 0x1918, 0xd1e0, 0x5964, 0x6878, 0x2c61, 0x0, 0x1);
        gbc.writeMem(0xd6d6, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1918, gbc.sp());
        EXPECT(0xd6d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6d6));
        EXPECT(0x34, gbc.readMem(0xd6d7));
        // CB 34 01CA
        gbc.setState(0xab48, 0x8f6e, 0x360, 0x932f, 0x8b0e, 0xa221, 0x0, 0x1);
        gbc.writeMem(0xab48, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8f6e, gbc.sp());
        EXPECT(0xab4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab48));
        EXPECT(0x34, gbc.readMem(0xab49));
        // CB 34 01CB
        gbc.setState(0x47dd, 0x7dfd, 0x76b0, 0x7d4e, 0x5f18, 0xa206, 0x1, 0x1);
        gbc.writeMem(0x47dd, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7dfd, gbc.sp());
        EXPECT(0x47df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01CC
        gbc.setState(0x2eb0, 0xbda4, 0x5b40, 0x3055, 0x85d3, 0x9516, 0x0, 0x0);
        gbc.writeMem(0x2eb0, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xbda4, gbc.sp());
        EXPECT(0x2eb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01CD
        gbc.setState(0x465a, 0x3c78, 0x25f0, 0x5344, 0x8e96, 0xab44, 0x0, 0x0);
        gbc.writeMem(0x465a, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3c78, gbc.sp());
        EXPECT(0x465c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01CE
        gbc.setState(0xd9b, 0x72c0, 0x40b0, 0xb05c, 0x2c0a, 0x8f, 0x0, 0x0);
        gbc.writeMem(0xd9b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x72c0, gbc.sp());
        EXPECT(0xd9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01CF
        gbc.setState(0x77a0, 0xe140, 0x6740, 0xe46f, 0xd964, 0x274c, 0x1, 0x0);
        gbc.writeMem(0x77a0, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe140, gbc.sp());
        EXPECT(0x77a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01D0
        gbc.setState(0x26ca, 0xd48, 0x1620, 0x2783, 0x3457, 0x840c, 0x0, 0x1);
        gbc.writeMem(0x26ca, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd48, gbc.sp());
        EXPECT(0x26cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01D1
        gbc.setState(0x7f1, 0x56e0, 0xb160, 0x3819, 0x8f7a, 0xc27a, 0x1, 0x1);
        gbc.writeMem(0x7f1, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x56e0, gbc.sp());
        EXPECT(0x7f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01D2
        gbc.setState(0xe88c, 0x3e8a, 0xd5e0, 0xd321, 0x25a1, 0xc1e9, 0x1, 0x1);
        gbc.writeMem(0xe88c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3e8a, gbc.sp());
        EXPECT(0xe88e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe88c));
        EXPECT(0x34, gbc.readMem(0xe88d));
        // CB 34 01D3
        gbc.setState(0x12bb, 0x3a08, 0xef40, 0x2033, 0xf8a8, 0x459c, 0x1, 0x1);
        gbc.writeMem(0x12bb, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3a08, gbc.sp());
        EXPECT(0x12bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01D4
        gbc.setState(0xb8f8, 0x750e, 0x9ea0, 0x75, 0xcf5a, 0x34ac, 0x0, 0x0);
        gbc.writeMem(0xb8f8, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x750e, gbc.sp());
        EXPECT(0xb8fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8f8));
        EXPECT(0x34, gbc.readMem(0xb8f9));
        // CB 34 01D5
        gbc.setState(0x5154, 0x2228, 0x24d0, 0x8cc9, 0xa108, 0x9bf1, 0x0, 0x0);
        gbc.writeMem(0x5154, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2228, gbc.sp());
        EXPECT(0x5156, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01D6
        gbc.setState(0x4697, 0xca10, 0x6480, 0xbf1f, 0xefbf, 0x98b2, 0x0, 0x0);
        gbc.writeMem(0x4697, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xca10, gbc.sp());
        EXPECT(0x4699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01D8
        gbc.setState(0xe709, 0xbfa8, 0xf60, 0xbb3a, 0xea5, 0x790b, 0x0, 0x0);
        gbc.writeMem(0xe709, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xbfa8, gbc.sp());
        EXPECT(0xe70b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe709));
        EXPECT(0x34, gbc.readMem(0xe70a));
        // CB 34 01D9
        gbc.setState(0xedb9, 0xc28a, 0xa090, 0x8a92, 0x106b, 0x19a7, 0x1, 0x0);
        gbc.writeMem(0xedb9, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc28a, gbc.sp());
        EXPECT(0xedbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedb9));
        EXPECT(0x34, gbc.readMem(0xedba));
        // CB 34 01DA
        gbc.setState(0x81fd, 0x6f52, 0xe1a0, 0x8ad8, 0x61d0, 0xd1a9, 0x0, 0x1);
        gbc.writeMem(0x81fd, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6f52, gbc.sp());
        EXPECT(0x81ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81fd));
        EXPECT(0x34, gbc.readMem(0x81fe));
        // CB 34 01DC
        gbc.setState(0x98de, 0x859b, 0xcc80, 0x178d, 0x624e, 0x90fa, 0x1, 0x0);
        gbc.writeMem(0x98de, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x859b, gbc.sp());
        EXPECT(0x98e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98de));
        EXPECT(0x34, gbc.readMem(0x98df));
        // CB 34 01DE
        gbc.setState(0xd42d, 0xb42d, 0xc770, 0xc806, 0x51a0, 0xd44, 0x0, 0x1);
        gbc.writeMem(0xd42d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb42d, gbc.sp());
        EXPECT(0xd42f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd42d));
        EXPECT(0x34, gbc.readMem(0xd42e));
        // CB 34 01DF
        gbc.setState(0xb51, 0xb950, 0x2a70, 0xdfa5, 0x2d6, 0x913e, 0x1, 0x0);
        gbc.writeMem(0xb51, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb950, gbc.sp());
        EXPECT(0xb53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01E0
        gbc.setState(0xd2b1, 0xacbe, 0xad70, 0x6a7a, 0x6d25, 0x93df, 0x1, 0x0);
        gbc.writeMem(0xd2b1, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xacbe, gbc.sp());
        EXPECT(0xd2b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2b1));
        EXPECT(0x34, gbc.readMem(0xd2b2));
        // CB 34 01E1
        gbc.setState(0xd30a, 0xa065, 0x55b0, 0xf4b9, 0xe784, 0xa27c, 0x0, 0x1);
        gbc.writeMem(0xd30a, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa065, gbc.sp());
        EXPECT(0xd30c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd30a));
        EXPECT(0x34, gbc.readMem(0xd30b));
        // CB 34 01E2
        gbc.setState(0xf7a, 0x4523, 0x6380, 0xa0ea, 0x894b, 0x96b9, 0x1, 0x0);
        gbc.writeMem(0xf7a, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4523, gbc.sp());
        EXPECT(0xf7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01E3
        gbc.setState(0x3e91, 0xaf04, 0xcb40, 0x57be, 0x5fd9, 0x9e09, 0x1, 0x0);
        gbc.writeMem(0x3e91, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xaf04, gbc.sp());
        EXPECT(0x3e93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01E4
        gbc.setState(0x6d71, 0xd01a, 0xe110, 0x1dd8, 0x798c, 0x6167, 0x0, 0x0);
        gbc.writeMem(0x6d71, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd01a, gbc.sp());
        EXPECT(0x6d73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01E5
        gbc.setState(0x6de7, 0x6fe0, 0x89a0, 0x326f, 0x952a, 0x7461, 0x0, 0x0);
        gbc.writeMem(0x6de7, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6fe0, gbc.sp());
        EXPECT(0x6de9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01E6
        gbc.setState(0xeb60, 0xe5c4, 0x5fd0, 0x2bc9, 0x3afd, 0x5f31, 0x1, 0x0);
        gbc.writeMem(0xeb60, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe5c4, gbc.sp());
        EXPECT(0xeb62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb60));
        EXPECT(0x34, gbc.readMem(0xeb61));
        // CB 34 01E7
        gbc.setState(0x2570, 0xebcb, 0x66a0, 0x69d2, 0x1047, 0x10d1, 0x1, 0x0);
        gbc.writeMem(0x2570, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xebcb, gbc.sp());
        EXPECT(0x2572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01E8
        gbc.setState(0x4174, 0xf292, 0x8490, 0xfd11, 0x548e, 0x4fa1, 0x1, 0x0);
        gbc.writeMem(0x4174, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf292, gbc.sp());
        EXPECT(0x4176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01E9
        gbc.setState(0x367, 0x6501, 0xda10, 0x19e, 0x721e, 0xdb54, 0x1, 0x0);
        gbc.writeMem(0x367, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6501, gbc.sp());
        EXPECT(0x369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01EA
        gbc.setState(0xe02d, 0x95f, 0x2570, 0xa56, 0xf5cc, 0xbd5f, 0x1, 0x1);
        gbc.writeMem(0xe02d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x95f, gbc.sp());
        EXPECT(0xe02f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe02d));
        EXPECT(0x34, gbc.readMem(0xe02e));
        // CB 34 01EB
        gbc.setState(0x9571, 0x8772, 0x22d0, 0x4529, 0x1376, 0xcb9b, 0x0, 0x1);
        gbc.writeMem(0x9571, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8772, gbc.sp());
        EXPECT(0x9573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9571));
        EXPECT(0x34, gbc.readMem(0x9572));
        // CB 34 01EC
        gbc.setState(0x4343, 0x5d26, 0x9750, 0x60e7, 0x30cb, 0x521f, 0x0, 0x1);
        gbc.writeMem(0x4343, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5d26, gbc.sp());
        EXPECT(0x4345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01ED
        gbc.setState(0x34d0, 0x79fc, 0x1a80, 0xa646, 0xf64b, 0x230a, 0x1, 0x1);
        gbc.writeMem(0x34d0, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x79fc, gbc.sp());
        EXPECT(0x34d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01EE
        gbc.setState(0x5175, 0x4ffa, 0x4f40, 0xedfb, 0xb9ef, 0x8647, 0x1, 0x1);
        gbc.writeMem(0x5175, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4ffa, gbc.sp());
        EXPECT(0x5177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01EF
        gbc.setState(0x66c2, 0xd416, 0x8fd0, 0x9813, 0x6962, 0x9fab, 0x1, 0x1);
        gbc.writeMem(0x66c2, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd416, gbc.sp());
        EXPECT(0x66c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01F0
        gbc.setState(0x52ee, 0x57be, 0x6d10, 0xb192, 0x7894, 0x556c, 0x0, 0x0);
        gbc.writeMem(0x52ee, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x57be, gbc.sp());
        EXPECT(0x52f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01F1
        gbc.setState(0x5de5, 0xc19d, 0x97d0, 0x88cb, 0x8e93, 0xd214, 0x0, 0x0);
        gbc.writeMem(0x5de5, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc19d, gbc.sp());
        EXPECT(0x5de7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01F3
        gbc.setState(0x3f8d, 0xdbc7, 0xbfd0, 0x79d0, 0x3cab, 0x26da, 0x1, 0x0);
        gbc.writeMem(0x3f8d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xdbc7, gbc.sp());
        EXPECT(0x3f8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01F4
        gbc.setState(0xb1d7, 0x58ac, 0xfba0, 0x5fab, 0xc7fd, 0x2393, 0x0, 0x0);
        gbc.writeMem(0xb1d7, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x58ac, gbc.sp());
        EXPECT(0xb1d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1d7));
        EXPECT(0x34, gbc.readMem(0xb1d8));
        // CB 34 01F5
        gbc.setState(0x8ef5, 0x69cc, 0xd260, 0xcb9, 0xc20d, 0x25cf, 0x0, 0x0);
        gbc.writeMem(0x8ef5, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x69cc, gbc.sp());
        EXPECT(0x8ef7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ef5));
        EXPECT(0x34, gbc.readMem(0x8ef6));
        // CB 34 01F6
        gbc.setState(0x73aa, 0xa2a0, 0xded0, 0x482e, 0x557b, 0x981e, 0x1, 0x1);
        gbc.writeMem(0x73aa, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa2a0, gbc.sp());
        EXPECT(0x73ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01F8
        gbc.setState(0x6125, 0xb7e2, 0x9c70, 0xe9e5, 0xe723, 0x40c2, 0x1, 0x0);
        gbc.writeMem(0x6125, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb7e2, gbc.sp());
        EXPECT(0x6127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01F9
        gbc.setState(0xe40e, 0xc8c5, 0x8520, 0xdbed, 0x8697, 0x42f1, 0x0, 0x0);
        gbc.writeMem(0xe40e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc8c5, gbc.sp());
        EXPECT(0xe410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe40e));
        EXPECT(0x34, gbc.readMem(0xe40f));
        // CB 34 01FA
        gbc.setState(0x72e6, 0x2076, 0xbb0, 0xf7aa, 0xafc0, 0x3e1d, 0x0, 0x0);
        gbc.writeMem(0x72e6, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2076, gbc.sp());
        EXPECT(0x72e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01FB
        gbc.setState(0xe7e7, 0x233a, 0x2300, 0x89f3, 0x8717, 0x67b2, 0x1, 0x1);
        gbc.writeMem(0xe7e7, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x233a, gbc.sp());
        EXPECT(0xe7e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7e7));
        EXPECT(0x34, gbc.readMem(0xe7e8));
        // CB 34 01FC
        gbc.setState(0x22f0, 0xfcac, 0x85b0, 0xdddb, 0xdf60, 0x3ee, 0x0, 0x0);
        gbc.writeMem(0x22f0, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xfcac, gbc.sp());
        EXPECT(0x22f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 01FD
        gbc.setState(0x82a9, 0xdfa9, 0x8190, 0xd905, 0x2b92, 0x9ab1, 0x0, 0x0);
        gbc.writeMem(0x82a9, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xdfa9, gbc.sp());
        EXPECT(0x82ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82a9));
        EXPECT(0x34, gbc.readMem(0x82aa));
        // CB 34 01FE
        gbc.setState(0xe43d, 0x6ec4, 0xf620, 0x8774, 0xad6f, 0x56fb, 0x0, 0x0);
        gbc.writeMem(0xe43d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6ec4, gbc.sp());
        EXPECT(0xe43f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe43d));
        EXPECT(0x34, gbc.readMem(0xe43e));
        // CB 34 01FF
        gbc.setState(0x5f4c, 0xd751, 0xf410, 0xd48a, 0x32f0, 0xc066, 0x1, 0x0);
        gbc.writeMem(0x5f4c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd751, gbc.sp());
        EXPECT(0x5f4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0200
        gbc.setState(0x8773, 0x35b0, 0xcbf0, 0x6748, 0x33ce, 0xfd64, 0x0, 0x1);
        gbc.writeMem(0x8773, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x35b0, gbc.sp());
        EXPECT(0x8775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8773));
        EXPECT(0x34, gbc.readMem(0x8774));
        // CB 34 0201
        gbc.setState(0x7c59, 0x6ecc, 0xaf00, 0xb127, 0x54c, 0x431c, 0x0, 0x0);
        gbc.writeMem(0x7c59, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6ecc, gbc.sp());
        EXPECT(0x7c5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0202
        gbc.setState(0x23ef, 0xe799, 0x6fe0, 0x8f67, 0x8056, 0x3b4b, 0x1, 0x0);
        gbc.writeMem(0x23ef, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe799, gbc.sp());
        EXPECT(0x23f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0203
        gbc.setState(0xd4cd, 0x80be, 0x5bf0, 0x96fe, 0x5755, 0x1766, 0x1, 0x0);
        gbc.writeMem(0xd4cd, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x80be, gbc.sp());
        EXPECT(0xd4cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4cd));
        EXPECT(0x34, gbc.readMem(0xd4ce));
        // CB 34 0205
        gbc.setState(0xedbf, 0xbeac, 0x5fc0, 0xe479, 0x3188, 0xd1f1, 0x1, 0x1);
        gbc.writeMem(0xedbf, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xbeac, gbc.sp());
        EXPECT(0xedc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedbf));
        EXPECT(0x34, gbc.readMem(0xedc0));
        // CB 34 0206
        gbc.setState(0x2e8c, 0xd0e8, 0xab00, 0x1f01, 0x63f4, 0xf6af, 0x0, 0x0);
        gbc.writeMem(0x2e8c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd0e8, gbc.sp());
        EXPECT(0x2e8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0207
        gbc.setState(0x105c, 0x8374, 0x97d0, 0xe0cc, 0x3875, 0xf669, 0x1, 0x0);
        gbc.writeMem(0x105c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8374, gbc.sp());
        EXPECT(0x105e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0208
        gbc.setState(0x91d0, 0x1357, 0xe890, 0x29f7, 0x5b65, 0x43f, 0x0, 0x1);
        gbc.writeMem(0x91d0, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1357, gbc.sp());
        EXPECT(0x91d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91d0));
        EXPECT(0x34, gbc.readMem(0x91d1));
        // CB 34 0209
        gbc.setState(0x6f18, 0x65e2, 0x36d0, 0x424c, 0x620e, 0xb6a7, 0x0, 0x1);
        gbc.writeMem(0x6f18, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x65e2, gbc.sp());
        EXPECT(0x6f1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 020A
        gbc.setState(0x53a9, 0x4c57, 0x8bb0, 0x9a4, 0x909, 0x3bec, 0x0, 0x0);
        gbc.writeMem(0x53a9, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4c57, gbc.sp());
        EXPECT(0x53ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 020B
        gbc.setState(0x981f, 0x694c, 0x3510, 0x867, 0xcf31, 0xe210, 0x0, 0x0);
        gbc.writeMem(0x981f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x694c, gbc.sp());
        EXPECT(0x9821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x981f));
        EXPECT(0x34, gbc.readMem(0x9820));
        // CB 34 020C
        gbc.setState(0x5bb8, 0xfc12, 0x97a0, 0x72d4, 0x717d, 0x8c79, 0x1, 0x1);
        gbc.writeMem(0x5bb8, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xfc12, gbc.sp());
        EXPECT(0x5bba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 020D
        gbc.setState(0xdb92, 0x4d02, 0xc040, 0x2c71, 0x2b6b, 0x8fb4, 0x1, 0x1);
        gbc.writeMem(0xdb92, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4d02, gbc.sp());
        EXPECT(0xdb94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb92));
        EXPECT(0x34, gbc.readMem(0xdb93));
        // CB 34 020F
        gbc.setState(0x3260, 0x950a, 0x44c0, 0xff33, 0x76c, 0xae93, 0x0, 0x1);
        gbc.writeMem(0x3260, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x950a, gbc.sp());
        EXPECT(0x3262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0210
        gbc.setState(0x8d39, 0xb569, 0x830, 0x9df2, 0x890, 0x65f0, 0x0, 0x1);
        gbc.writeMem(0x8d39, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb569, gbc.sp());
        EXPECT(0x8d3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d39));
        EXPECT(0x34, gbc.readMem(0x8d3a));
        // CB 34 0211
        gbc.setState(0x5c44, 0x60c4, 0xfab0, 0xd55e, 0xe289, 0x4623, 0x0, 0x0);
        gbc.writeMem(0x5c44, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x60c4, gbc.sp());
        EXPECT(0x5c46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0213
        gbc.setState(0x697f, 0xa59a, 0x5b80, 0xd55b, 0xb938, 0xb504, 0x0, 0x0);
        gbc.writeMem(0x697f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa59a, gbc.sp());
        EXPECT(0x6981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0214
        gbc.setState(0x8943, 0x7386, 0xf10, 0xb812, 0x73a6, 0x46a6, 0x1, 0x0);
        gbc.writeMem(0x8943, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7386, gbc.sp());
        EXPECT(0x8945, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8943));
        EXPECT(0x34, gbc.readMem(0x8944));
        // CB 34 0215
        gbc.setState(0x166c, 0xc32, 0xd0f0, 0x5761, 0x9c82, 0x3ea8, 0x0, 0x0);
        gbc.writeMem(0x166c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc32, gbc.sp());
        EXPECT(0x166e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0216
        gbc.setState(0xde32, 0x3dd, 0x4d50, 0x1acb, 0x2d0f, 0x3d1d, 0x1, 0x0);
        gbc.writeMem(0xde32, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3dd, gbc.sp());
        EXPECT(0xde34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde32));
        EXPECT(0x34, gbc.readMem(0xde33));
        // CB 34 0217
        gbc.setState(0xb2a2, 0xa27f, 0x49e0, 0xfe17, 0xd9d5, 0x4649, 0x1, 0x1);
        gbc.writeMem(0xb2a2, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa27f, gbc.sp());
        EXPECT(0xb2a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2a2));
        EXPECT(0x34, gbc.readMem(0xb2a3));
        // CB 34 0218
        gbc.setState(0x2e14, 0x3c1f, 0xf230, 0xcca5, 0x4b33, 0xd0b4, 0x0, 0x0);
        gbc.writeMem(0x2e14, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3c1f, gbc.sp());
        EXPECT(0x2e16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0219
        gbc.setState(0x895f, 0xcdb4, 0xf550, 0x9809, 0x60d3, 0x1fcb, 0x0, 0x0);
        gbc.writeMem(0x895f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xcdb4, gbc.sp());
        EXPECT(0x8961, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x895f));
        EXPECT(0x34, gbc.readMem(0x8960));
        // CB 34 021A
        gbc.setState(0x3fc8, 0xd8e0, 0x66b0, 0x4b76, 0x7a1c, 0xe685, 0x1, 0x1);
        gbc.writeMem(0x3fc8, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd8e0, gbc.sp());
        EXPECT(0x3fca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 021B
        gbc.setState(0x3545, 0xcd4c, 0xe010, 0x8ff0, 0xeb9d, 0xd97d, 0x0, 0x0);
        gbc.writeMem(0x3545, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xcd4c, gbc.sp());
        EXPECT(0x3547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 021C
        gbc.setState(0x769b, 0x6c9a, 0x7a30, 0xbe2d, 0x4b94, 0x2e3b, 0x1, 0x0);
        gbc.writeMem(0x769b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6c9a, gbc.sp());
        EXPECT(0x769d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 021D
        gbc.setState(0xc123, 0xa98d, 0x4de0, 0xe651, 0x86c3, 0xc40b, 0x1, 0x0);
        gbc.writeMem(0xc123, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa98d, gbc.sp());
        EXPECT(0xc125, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc123));
        EXPECT(0x34, gbc.readMem(0xc124));
        // CB 34 021E
        gbc.setState(0x802c, 0x7e54, 0xabd0, 0x88c2, 0x49bb, 0x58fb, 0x1, 0x0);
        gbc.writeMem(0x802c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7e54, gbc.sp());
        EXPECT(0x802e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x802c));
        EXPECT(0x34, gbc.readMem(0x802d));
        // CB 34 021F
        gbc.setState(0x5b91, 0x9791, 0x9680, 0xe86, 0xc990, 0xe0a0, 0x1, 0x0);
        gbc.writeMem(0x5b91, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9791, gbc.sp());
        EXPECT(0x5b93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0220
        gbc.setState(0xead9, 0x4e25, 0x1900, 0x3320, 0x26d3, 0x7472, 0x1, 0x0);
        gbc.writeMem(0xead9, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4e25, gbc.sp());
        EXPECT(0xeadb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xead9));
        EXPECT(0x34, gbc.readMem(0xeada));
        // CB 34 0221
        gbc.setState(0xe643, 0xa965, 0x310, 0x1791, 0x7c38, 0xb502, 0x1, 0x0);
        gbc.writeMem(0xe643, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa965, gbc.sp());
        EXPECT(0xe645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe643));
        EXPECT(0x34, gbc.readMem(0xe644));
        // CB 34 0222
        gbc.setState(0x1c96, 0x27e2, 0x6a0, 0xbc72, 0x997e, 0xeafc, 0x0, 0x1);
        gbc.writeMem(0x1c96, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x27e2, gbc.sp());
        EXPECT(0x1c98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0223
        gbc.setState(0x122, 0x7374, 0x4a30, 0x33d0, 0x5800, 0x33ad, 0x1, 0x0);
        gbc.writeMem(0x122, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7374, gbc.sp());
        EXPECT(0x124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0224
        gbc.setState(0x9cfe, 0x4857, 0x9d20, 0xc58e, 0x17dc, 0xe87e, 0x0, 0x0);
        gbc.writeMem(0x9cfe, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x4857, gbc.sp());
        EXPECT(0x9d00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cfe));
        EXPECT(0x34, gbc.readMem(0x9cff));
        // CB 34 0225
        gbc.setState(0x1034, 0xc424, 0x4ed0, 0xc204, 0xec7, 0xc94a, 0x0, 0x1);
        gbc.writeMem(0x1034, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc424, gbc.sp());
        EXPECT(0x1036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0226
        gbc.setState(0x3154, 0xfb71, 0x68e0, 0x70f7, 0xd5ea, 0x3a7c, 0x1, 0x1);
        gbc.writeMem(0x3154, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xfb71, gbc.sp());
        EXPECT(0x3156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0227
        gbc.setState(0x1a76, 0x8481, 0x8640, 0x6e14, 0x52d9, 0xcf8c, 0x1, 0x1);
        gbc.writeMem(0x1a76, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8481, gbc.sp());
        EXPECT(0x1a78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0228
        gbc.setState(0x6a20, 0xce4c, 0xe1d0, 0x858f, 0xa322, 0x8451, 0x1, 0x1);
        gbc.writeMem(0x6a20, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xce4c, gbc.sp());
        EXPECT(0x6a22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0229
        gbc.setState(0x5b13, 0xb39a, 0xf3b0, 0xfac3, 0xe9d, 0x42ca, 0x0, 0x1);
        gbc.writeMem(0x5b13, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb39a, gbc.sp());
        EXPECT(0x5b15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 022A
        gbc.setState(0x76a1, 0xb29a, 0x5280, 0xcf5e, 0x8d1d, 0x87c5, 0x1, 0x0);
        gbc.writeMem(0x76a1, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb29a, gbc.sp());
        EXPECT(0x76a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 022B
        gbc.setState(0xd463, 0xc111, 0xb590, 0x69a3, 0xe584, 0xc7fe, 0x1, 0x1);
        gbc.writeMem(0xd463, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc111, gbc.sp());
        EXPECT(0xd465, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd463));
        EXPECT(0x34, gbc.readMem(0xd464));
        // CB 34 022C
        gbc.setState(0x6555, 0xe96, 0x66f0, 0xf201, 0x17d6, 0x6876, 0x0, 0x1);
        gbc.writeMem(0x6555, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe96, gbc.sp());
        EXPECT(0x6557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 022D
        gbc.setState(0xeaaa, 0x527e, 0x1ab0, 0xfe0e, 0x9ebe, 0x53e4, 0x1, 0x1);
        gbc.writeMem(0xeaaa, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x527e, gbc.sp());
        EXPECT(0xeaac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaaa));
        EXPECT(0x34, gbc.readMem(0xeaab));
        // CB 34 022E
        gbc.setState(0xb09b, 0xd8bc, 0x8440, 0x41c4, 0x151f, 0xc50c, 0x0, 0x1);
        gbc.writeMem(0xb09b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd8bc, gbc.sp());
        EXPECT(0xb09d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb09b));
        EXPECT(0x34, gbc.readMem(0xb09c));
        // CB 34 022F
        gbc.setState(0xe1a3, 0xa836, 0xbe40, 0x5f73, 0x5208, 0xde97, 0x0, 0x1);
        gbc.writeMem(0xe1a3, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa836, gbc.sp());
        EXPECT(0xe1a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1a3));
        EXPECT(0x34, gbc.readMem(0xe1a4));
        // CB 34 0230
        gbc.setState(0x4764, 0xd626, 0xf310, 0x1870, 0xf28c, 0xece3, 0x1, 0x1);
        gbc.writeMem(0x4764, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd626, gbc.sp());
        EXPECT(0x4766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0231
        gbc.setState(0xe2c0, 0x9148, 0xfb0, 0xb4b5, 0x8404, 0xbce7, 0x1, 0x0);
        gbc.writeMem(0xe2c0, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9148, gbc.sp());
        EXPECT(0xe2c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2c0));
        EXPECT(0x34, gbc.readMem(0xe2c1));
        // CB 34 0232
        gbc.setState(0x8011, 0x5db1, 0x4ce0, 0xe9c1, 0x7d03, 0x9f4d, 0x0, 0x1);
        gbc.writeMem(0x8011, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5db1, gbc.sp());
        EXPECT(0x8013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8011));
        EXPECT(0x34, gbc.readMem(0x8012));
        // CB 34 0233
        gbc.setState(0xef56, 0xbf09, 0x4de0, 0x5beb, 0xd598, 0x4a3c, 0x1, 0x0);
        gbc.writeMem(0xef56, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xbf09, gbc.sp());
        EXPECT(0xef58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef56));
        EXPECT(0x34, gbc.readMem(0xef57));
        // CB 34 0234
        gbc.setState(0x599a, 0xc7f0, 0x4f00, 0xcae6, 0xd341, 0x84b4, 0x0, 0x0);
        gbc.writeMem(0x599a, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc7f0, gbc.sp());
        EXPECT(0x599c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0235
        gbc.setState(0xad6c, 0xe02c, 0x92e0, 0xa9dd, 0x5878, 0xe191, 0x0, 0x1);
        gbc.writeMem(0xad6c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe02c, gbc.sp());
        EXPECT(0xad6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad6c));
        EXPECT(0x34, gbc.readMem(0xad6d));
        // CB 34 0236
        gbc.setState(0xbe9d, 0xc28a, 0x6cf0, 0x3ec1, 0xd8bd, 0xdff3, 0x0, 0x1);
        gbc.writeMem(0xbe9d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc28a, gbc.sp());
        EXPECT(0xbe9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe9d));
        EXPECT(0x34, gbc.readMem(0xbe9e));
        // CB 34 0237
        gbc.setState(0x7043, 0xf0c6, 0x7070, 0xaf3d, 0xf92e, 0xc3f3, 0x0, 0x0);
        gbc.writeMem(0x7043, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf0c6, gbc.sp());
        EXPECT(0x7045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0238
        gbc.setState(0xe79f, 0x93a5, 0xef70, 0x37f2, 0x2835, 0x1a53, 0x0, 0x1);
        gbc.writeMem(0xe79f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x93a5, gbc.sp());
        EXPECT(0xe7a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe79f));
        EXPECT(0x34, gbc.readMem(0xe7a0));
        // CB 34 0239
        gbc.setState(0xc726, 0xfebc, 0x7020, 0xe739, 0x224e, 0x60dc, 0x0, 0x0);
        gbc.writeMem(0xc726, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xfebc, gbc.sp());
        EXPECT(0xc728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc726));
        EXPECT(0x34, gbc.readMem(0xc727));
        // CB 34 023A
        gbc.setState(0xd03b, 0xa634, 0x42f0, 0x9de, 0x1451, 0x61f8, 0x1, 0x1);
        gbc.writeMem(0xd03b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa634, gbc.sp());
        EXPECT(0xd03d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd03b));
        EXPECT(0x34, gbc.readMem(0xd03c));
        // CB 34 023B
        gbc.setState(0x50f0, 0xfb1c, 0x1810, 0x2e98, 0x7f3e, 0x584, 0x0, 0x1);
        gbc.writeMem(0x50f0, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfb1c, gbc.sp());
        EXPECT(0x50f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 023C
        gbc.setState(0x83ba, 0x3b6b, 0xc3d0, 0xfb5a, 0x6824, 0xa76f, 0x0, 0x0);
        gbc.writeMem(0x83ba, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3b6b, gbc.sp());
        EXPECT(0x83bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83ba));
        EXPECT(0x34, gbc.readMem(0x83bb));
        // CB 34 023D
        gbc.setState(0xdd37, 0xb647, 0xd550, 0xb4e, 0xfc1d, 0xe5eb, 0x1, 0x1);
        gbc.writeMem(0xdd37, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb647, gbc.sp());
        EXPECT(0xdd39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd37));
        EXPECT(0x34, gbc.readMem(0xdd38));
        // CB 34 023E
        gbc.setState(0xc3df, 0xd69f, 0x17b0, 0xf7c9, 0x2d4c, 0x705f, 0x1, 0x0);
        gbc.writeMem(0xc3df, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd69f, gbc.sp());
        EXPECT(0xc3e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3df));
        EXPECT(0x34, gbc.readMem(0xc3e0));
        // CB 34 023F
        gbc.setState(0xfbb, 0xd62b, 0x7a40, 0x713e, 0xacc2, 0xd230, 0x1, 0x0);
        gbc.writeMem(0xfbb, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd62b, gbc.sp());
        EXPECT(0xfbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0240
        gbc.setState(0xb0a2, 0xf87c, 0xfbc0, 0xb867, 0x43d3, 0xb617, 0x1, 0x0);
        gbc.writeMem(0xb0a2, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf87c, gbc.sp());
        EXPECT(0xb0a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0a2));
        EXPECT(0x34, gbc.readMem(0xb0a3));
        // CB 34 0241
        gbc.setState(0x6d87, 0xc66b, 0x8990, 0xd2b5, 0xd5, 0x6118, 0x1, 0x1);
        gbc.writeMem(0x6d87, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc66b, gbc.sp());
        EXPECT(0x6d89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0242
        gbc.setState(0x47a3, 0x8f9f, 0xb2f0, 0x414, 0xeacc, 0x6503, 0x1, 0x0);
        gbc.writeMem(0x47a3, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8f9f, gbc.sp());
        EXPECT(0x47a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0243
        gbc.setState(0x211, 0xf19, 0xcf0, 0xb393, 0x75c, 0xcfe9, 0x0, 0x0);
        gbc.writeMem(0x211, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf19, gbc.sp());
        EXPECT(0x213, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0244
        gbc.setState(0x7d70, 0x749f, 0x4350, 0x2eca, 0x6aeb, 0xb937, 0x0, 0x1);
        gbc.writeMem(0x7d70, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x749f, gbc.sp());
        EXPECT(0x7d72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0245
        gbc.setState(0x6f38, 0x5593, 0x1a40, 0x19a1, 0x66a6, 0x245a, 0x1, 0x0);
        gbc.writeMem(0x6f38, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5593, gbc.sp());
        EXPECT(0x6f3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0246
        gbc.setState(0xce2b, 0x4891, 0x4fa0, 0xee0d, 0xb166, 0x3ddf, 0x1, 0x1);
        gbc.writeMem(0xce2b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4891, gbc.sp());
        EXPECT(0xce2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce2b));
        EXPECT(0x34, gbc.readMem(0xce2c));
        // CB 34 0247
        gbc.setState(0x264e, 0x6674, 0x5b00, 0xae1d, 0x26f7, 0xd29b, 0x0, 0x0);
        gbc.writeMem(0x264e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6674, gbc.sp());
        EXPECT(0x2650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0248
        gbc.setState(0x75f7, 0x4cb7, 0x32a0, 0xca93, 0xa520, 0xe65c, 0x1, 0x1);
        gbc.writeMem(0x75f7, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4cb7, gbc.sp());
        EXPECT(0x75f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 024A
        gbc.setState(0xd9b0, 0x1e14, 0xa0a0, 0xa674, 0xb757, 0xcfc, 0x1, 0x0);
        gbc.writeMem(0xd9b0, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1e14, gbc.sp());
        EXPECT(0xd9b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9b0));
        EXPECT(0x34, gbc.readMem(0xd9b1));
        // CB 34 024C
        gbc.setState(0xac00, 0x9eb3, 0xf9c0, 0x9526, 0x96b2, 0xfe4f, 0x0, 0x0);
        gbc.writeMem(0xac00, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9eb3, gbc.sp());
        EXPECT(0xac02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac00));
        EXPECT(0x34, gbc.readMem(0xac01));
        // CB 34 024D
        gbc.setState(0x7cc2, 0xbbf4, 0xc480, 0xd72c, 0xd105, 0xb8db, 0x0, 0x0);
        gbc.writeMem(0x7cc2, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xbbf4, gbc.sp());
        EXPECT(0x7cc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 024E
        gbc.setState(0x6ef6, 0x15c1, 0x43e0, 0xd40c, 0x70df, 0x8111, 0x0, 0x0);
        gbc.writeMem(0x6ef6, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x15c1, gbc.sp());
        EXPECT(0x6ef8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 024F
        gbc.setState(0x1a82, 0x989, 0xcd30, 0xca9b, 0xba86, 0xc627, 0x0, 0x1);
        gbc.writeMem(0x1a82, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x989, gbc.sp());
        EXPECT(0x1a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0250
        gbc.setState(0x7b39, 0xcac, 0xa350, 0xbc3e, 0x18a1, 0x3104, 0x1, 0x0);
        gbc.writeMem(0x7b39, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xcac, gbc.sp());
        EXPECT(0x7b3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0252
        gbc.setState(0x326b, 0x7d26, 0xfb00, 0x926, 0x37d7, 0xef65, 0x1, 0x1);
        gbc.writeMem(0x326b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7d26, gbc.sp());
        EXPECT(0x326d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0253
        gbc.setState(0x6694, 0xe25, 0x2310, 0x5fa2, 0xbf6a, 0x51f0, 0x1, 0x1);
        gbc.writeMem(0x6694, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe25, gbc.sp());
        EXPECT(0x6696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0254
        gbc.setState(0x7608, 0x486, 0xa0d0, 0xf806, 0x77ff, 0xe2ff, 0x0, 0x0);
        gbc.writeMem(0x7608, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x486, gbc.sp());
        EXPECT(0x760a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0255
        gbc.setState(0x5b92, 0x3826, 0x8540, 0x55a3, 0x231a, 0x37e5, 0x0, 0x1);
        gbc.writeMem(0x5b92, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3826, gbc.sp());
        EXPECT(0x5b94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0256
        gbc.setState(0x8d7b, 0x1dd8, 0xdbe0, 0xdd7, 0xd7e4, 0x6b6c, 0x0, 0x1);
        gbc.writeMem(0x8d7b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1dd8, gbc.sp());
        EXPECT(0x8d7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d7b));
        EXPECT(0x34, gbc.readMem(0x8d7c));
        // CB 34 0257
        gbc.setState(0xce36, 0x41cd, 0x6700, 0x4f46, 0x356e, 0x3b6c, 0x1, 0x0);
        gbc.writeMem(0xce36, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x41cd, gbc.sp());
        EXPECT(0xce38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce36));
        EXPECT(0x34, gbc.readMem(0xce37));
        // CB 34 0258
        gbc.setState(0x74b5, 0x7fd8, 0x32e0, 0xc59f, 0x5167, 0x1a80, 0x1, 0x1);
        gbc.writeMem(0x74b5, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7fd8, gbc.sp());
        EXPECT(0x74b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 025A
        gbc.setState(0xe941, 0x50d, 0x5b40, 0x2589, 0xfe3c, 0xd885, 0x1, 0x0);
        gbc.writeMem(0xe941, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x50d, gbc.sp());
        EXPECT(0xe943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe941));
        EXPECT(0x34, gbc.readMem(0xe942));
        // CB 34 025B
        gbc.setState(0x5a79, 0x3dbc, 0xa7c0, 0xaa80, 0xd3a2, 0xa4c9, 0x1, 0x0);
        gbc.writeMem(0x5a79, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3dbc, gbc.sp());
        EXPECT(0x5a7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 025C
        gbc.setState(0x6ca1, 0xbc0a, 0x2fd0, 0xc6fe, 0xbb8e, 0x27b4, 0x0, 0x1);
        gbc.writeMem(0x6ca1, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbc0a, gbc.sp());
        EXPECT(0x6ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 025D
        gbc.setState(0x79b1, 0xb6b6, 0xf3b0, 0x89fd, 0x9c0, 0xda1c, 0x1, 0x0);
        gbc.writeMem(0x79b1, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb6b6, gbc.sp());
        EXPECT(0x79b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 025F
        gbc.setState(0xb779, 0x1d13, 0x21f0, 0x8915, 0x260, 0x38d5, 0x1, 0x0);
        gbc.writeMem(0xb779, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1d13, gbc.sp());
        EXPECT(0xb77b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb779));
        EXPECT(0x34, gbc.readMem(0xb77a));
        // CB 34 0260
        gbc.setState(0x4204, 0x3b7f, 0xcfd0, 0x3c75, 0x337d, 0x85c2, 0x0, 0x0);
        gbc.writeMem(0x4204, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3b7f, gbc.sp());
        EXPECT(0x4206, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0261
        gbc.setState(0x3b06, 0xe983, 0x7230, 0x6f26, 0xe211, 0x3c1f, 0x0, 0x0);
        gbc.writeMem(0x3b06, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe983, gbc.sp());
        EXPECT(0x3b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0263
        gbc.setState(0xc01a, 0xc697, 0x81d0, 0x3d10, 0xbc40, 0xb127, 0x0, 0x1);
        gbc.writeMem(0xc01a, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc697, gbc.sp());
        EXPECT(0xc01c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc01a));
        EXPECT(0x34, gbc.readMem(0xc01b));
        // CB 34 0264
        gbc.setState(0x9c51, 0x803e, 0xa480, 0xfef1, 0x612f, 0xe3cc, 0x0, 0x1);
        gbc.writeMem(0x9c51, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x803e, gbc.sp());
        EXPECT(0x9c53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c51));
        EXPECT(0x34, gbc.readMem(0x9c52));
        // CB 34 0265
        gbc.setState(0x9794, 0x9623, 0x65e0, 0x492d, 0x146f, 0x1afb, 0x0, 0x0);
        gbc.writeMem(0x9794, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9623, gbc.sp());
        EXPECT(0x9796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9794));
        EXPECT(0x34, gbc.readMem(0x9795));
        // CB 34 0266
        gbc.setState(0xc585, 0xc94a, 0x33e0, 0x312c, 0x9230, 0xe823, 0x1, 0x1);
        gbc.writeMem(0xc585, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc94a, gbc.sp());
        EXPECT(0xc587, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc585));
        EXPECT(0x34, gbc.readMem(0xc586));
        // CB 34 0267
        gbc.setState(0x9414, 0x5821, 0xa680, 0x39df, 0x9ad3, 0x25f9, 0x0, 0x0);
        gbc.writeMem(0x9414, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5821, gbc.sp());
        EXPECT(0x9416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9414));
        EXPECT(0x34, gbc.readMem(0x9415));
        // CB 34 0268
        gbc.setState(0xa410, 0x92b1, 0x3750, 0xdc31, 0xc0e7, 0x6b12, 0x0, 0x1);
        gbc.writeMem(0xa410, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x92b1, gbc.sp());
        EXPECT(0xa412, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa410));
        EXPECT(0x34, gbc.readMem(0xa411));
        // CB 34 0269
        gbc.setState(0x3c76, 0x5295, 0x1160, 0x7493, 0x1ca8, 0x54df, 0x0, 0x0);
        gbc.writeMem(0x3c76, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5295, gbc.sp());
        EXPECT(0x3c78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 026A
        gbc.setState(0x4d37, 0x4c0a, 0xfae0, 0x98f7, 0x70cd, 0xb4bd, 0x0, 0x1);
        gbc.writeMem(0x4d37, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4c0a, gbc.sp());
        EXPECT(0x4d39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 026B
        gbc.setState(0x2fab, 0x59e, 0x1060, 0xc6dc, 0xcacf, 0x6ca0, 0x1, 0x1);
        gbc.writeMem(0x2fab, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x59e, gbc.sp());
        EXPECT(0x2fad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 026C
        gbc.setState(0xd7d6, 0x1dfc, 0x6ed0, 0x63da, 0x493b, 0x1540, 0x0, 0x1);
        gbc.writeMem(0xd7d6, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1dfc, gbc.sp());
        EXPECT(0xd7d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7d6));
        EXPECT(0x34, gbc.readMem(0xd7d7));
        // CB 34 026D
        gbc.setState(0x6613, 0xff69, 0x6290, 0x146a, 0x410f, 0x7453, 0x0, 0x1);
        gbc.writeMem(0x6613, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xff69, gbc.sp());
        EXPECT(0x6615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 026E
        gbc.setState(0x4b93, 0xca3a, 0x4a70, 0xcd16, 0x3e05, 0xc694, 0x1, 0x1);
        gbc.writeMem(0x4b93, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xca3a, gbc.sp());
        EXPECT(0x4b95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 026F
        gbc.setState(0x6ff4, 0xea98, 0x7bf0, 0x2c1, 0xae0c, 0xba4b, 0x0, 0x1);
        gbc.writeMem(0x6ff4, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xea98, gbc.sp());
        EXPECT(0x6ff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0271
        gbc.setState(0x60ae, 0xee6a, 0x9c30, 0xe741, 0x654b, 0xc3e4, 0x0, 0x0);
        gbc.writeMem(0x60ae, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xee6a, gbc.sp());
        EXPECT(0x60b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0272
        gbc.setState(0x6d73, 0x7dbb, 0x2530, 0x7700, 0xc12, 0xc33e, 0x1, 0x1);
        gbc.writeMem(0x6d73, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7dbb, gbc.sp());
        EXPECT(0x6d75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0273
        gbc.setState(0x1fb8, 0xa101, 0x9bb0, 0x1f36, 0xea9a, 0x398d, 0x1, 0x0);
        gbc.writeMem(0x1fb8, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa101, gbc.sp());
        EXPECT(0x1fba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0274
        gbc.setState(0xb7a2, 0xf30c, 0x59a0, 0x2e85, 0x3d14, 0xbd, 0x0, 0x0);
        gbc.writeMem(0xb7a2, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf30c, gbc.sp());
        EXPECT(0xb7a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7a2));
        EXPECT(0x34, gbc.readMem(0xb7a3));
        // CB 34 0275
        gbc.setState(0xa791, 0xd93b, 0x84a0, 0xbba3, 0x8165, 0x2e20, 0x1, 0x1);
        gbc.writeMem(0xa791, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd93b, gbc.sp());
        EXPECT(0xa793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa791));
        EXPECT(0x34, gbc.readMem(0xa792));
        // CB 34 0276
        gbc.setState(0x6ba0, 0xfa17, 0xb00, 0x3903, 0x4eb9, 0x872b, 0x0, 0x0);
        gbc.writeMem(0x6ba0, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xfa17, gbc.sp());
        EXPECT(0x6ba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0277
        gbc.setState(0x428e, 0x16ab, 0xee80, 0xc447, 0x5182, 0xbafe, 0x0, 0x1);
        gbc.writeMem(0x428e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x16ab, gbc.sp());
        EXPECT(0x4290, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0278
        gbc.setState(0x411e, 0x17dd, 0xbff0, 0x2874, 0x8c16, 0xc689, 0x1, 0x0);
        gbc.writeMem(0x411e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x17dd, gbc.sp());
        EXPECT(0x4120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0279
        gbc.setState(0x2b4c, 0x3a5b, 0xfc20, 0xfcfc, 0x32d7, 0x76ad, 0x1, 0x1);
        gbc.writeMem(0x2b4c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3a5b, gbc.sp());
        EXPECT(0x2b4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 027A
        gbc.setState(0xaaac, 0xf939, 0x4590, 0xbb2c, 0x8df8, 0xe77e, 0x0, 0x0);
        gbc.writeMem(0xaaac, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf939, gbc.sp());
        EXPECT(0xaaae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaac));
        EXPECT(0x34, gbc.readMem(0xaaad));
        // CB 34 027B
        gbc.setState(0x7918, 0x8278, 0xcac0, 0x778b, 0x8044, 0xfe0e, 0x0, 0x1);
        gbc.writeMem(0x7918, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8278, gbc.sp());
        EXPECT(0x791a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 027C
        gbc.setState(0x693d, 0xa931, 0x2480, 0xa6fc, 0xe41d, 0xd075, 0x0, 0x0);
        gbc.writeMem(0x693d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa931, gbc.sp());
        EXPECT(0x693f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 027D
        gbc.setState(0x92f1, 0xd1e6, 0x95b0, 0x5856, 0x368a, 0x89b0, 0x1, 0x1);
        gbc.writeMem(0x92f1, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd1e6, gbc.sp());
        EXPECT(0x92f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92f1));
        EXPECT(0x34, gbc.readMem(0x92f2));
        // CB 34 027E
        gbc.setState(0xe113, 0xba1f, 0x4680, 0xdc49, 0x259e, 0xbdef, 0x0, 0x1);
        gbc.writeMem(0xe113, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xba1f, gbc.sp());
        EXPECT(0xe115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe113));
        EXPECT(0x34, gbc.readMem(0xe114));
        // CB 34 027F
        gbc.setState(0x3682, 0x2450, 0x9f20, 0xb0e8, 0xe396, 0xfdf4, 0x1, 0x0);
        gbc.writeMem(0x3682, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2450, gbc.sp());
        EXPECT(0x3684, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0280
        gbc.setState(0x4834, 0x7247, 0x9820, 0x833, 0x913f, 0xabfa, 0x0, 0x0);
        gbc.writeMem(0x4834, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7247, gbc.sp());
        EXPECT(0x4836, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0281
        gbc.setState(0x7073, 0xd448, 0x39d0, 0x5577, 0xe986, 0xe19d, 0x1, 0x1);
        gbc.writeMem(0x7073, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd448, gbc.sp());
        EXPECT(0x7075, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0282
        gbc.setState(0x5031, 0x6112, 0x8780, 0xdfae, 0x99b1, 0xd141, 0x0, 0x0);
        gbc.writeMem(0x5031, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6112, gbc.sp());
        EXPECT(0x5033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0284
        gbc.setState(0x3ef8, 0xf7e2, 0x6ab0, 0xa936, 0x9197, 0xd61c, 0x0, 0x0);
        gbc.writeMem(0x3ef8, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf7e2, gbc.sp());
        EXPECT(0x3efa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0285
        gbc.setState(0xd385, 0x785a, 0xd840, 0x75c9, 0xffb5, 0xe768, 0x1, 0x1);
        gbc.writeMem(0xd385, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x785a, gbc.sp());
        EXPECT(0xd387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd385));
        EXPECT(0x34, gbc.readMem(0xd386));
        // CB 34 0286
        gbc.setState(0x1156, 0xd143, 0x1570, 0x42f4, 0xcad6, 0xd742, 0x1, 0x1);
        gbc.writeMem(0x1156, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd143, gbc.sp());
        EXPECT(0x1158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0287
        gbc.setState(0xad73, 0xb6f2, 0x2b00, 0x99a7, 0xf400, 0xeed7, 0x0, 0x1);
        gbc.writeMem(0xad73, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb6f2, gbc.sp());
        EXPECT(0xad75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad73));
        EXPECT(0x34, gbc.readMem(0xad74));
        // CB 34 0288
        gbc.setState(0x2178, 0x915d, 0x4050, 0xdbcd, 0xc36b, 0x6ffc, 0x1, 0x1);
        gbc.writeMem(0x2178, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x915d, gbc.sp());
        EXPECT(0x217a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0289
        gbc.setState(0x314e, 0x33c7, 0xd500, 0x892, 0x860f, 0x6bfb, 0x0, 0x1);
        gbc.writeMem(0x314e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x33c7, gbc.sp());
        EXPECT(0x3150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 028B
        gbc.setState(0x7f6b, 0xca17, 0x2250, 0x330c, 0x893f, 0x6783, 0x0, 0x1);
        gbc.writeMem(0x7f6b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xca17, gbc.sp());
        EXPECT(0x7f6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 028C
        gbc.setState(0x3cf3, 0xfda1, 0xfc0, 0x345c, 0x163d, 0x673, 0x0, 0x1);
        gbc.writeMem(0x3cf3, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xfda1, gbc.sp());
        EXPECT(0x3cf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 028D
        gbc.setState(0x8c2a, 0x158d, 0x5280, 0xf5b6, 0x909c, 0x5ad9, 0x1, 0x0);
        gbc.writeMem(0x8c2a, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x158d, gbc.sp());
        EXPECT(0x8c2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c2a));
        EXPECT(0x34, gbc.readMem(0x8c2b));
        // CB 34 028E
        gbc.setState(0x6bb3, 0x5f9, 0x3850, 0x93a8, 0x4ed8, 0xa9bc, 0x0, 0x1);
        gbc.writeMem(0x6bb3, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5f9, gbc.sp());
        EXPECT(0x6bb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 028F
        gbc.setState(0x86e9, 0x2761, 0x4990, 0x5fc5, 0xfc63, 0x38a0, 0x0, 0x0);
        gbc.writeMem(0x86e9, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2761, gbc.sp());
        EXPECT(0x86eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86e9));
        EXPECT(0x34, gbc.readMem(0x86ea));
        // CB 34 0290
        gbc.setState(0x17c7, 0x254a, 0x16d0, 0x99b9, 0x1e95, 0xf087, 0x1, 0x1);
        gbc.writeMem(0x17c7, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x254a, gbc.sp());
        EXPECT(0x17c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0291
        gbc.setState(0x911e, 0xc0a0, 0x6d0, 0x69df, 0xbd14, 0xf87c, 0x0, 0x1);
        gbc.writeMem(0x911e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc0a0, gbc.sp());
        EXPECT(0x9120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x911e));
        EXPECT(0x34, gbc.readMem(0x911f));
        // CB 34 0292
        gbc.setState(0x1638, 0xb37d, 0x39f0, 0xb956, 0x42d8, 0x9bb, 0x1, 0x0);
        gbc.writeMem(0x1638, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb37d, gbc.sp());
        EXPECT(0x163a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0293
        gbc.setState(0xe4cf, 0x240e, 0xf610, 0xfefc, 0x13da, 0x856c, 0x1, 0x0);
        gbc.writeMem(0xe4cf, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x240e, gbc.sp());
        EXPECT(0xe4d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4cf));
        EXPECT(0x34, gbc.readMem(0xe4d0));
        // CB 34 0295
        gbc.setState(0xcc54, 0x4a, 0x79d0, 0xf22e, 0xd197, 0x72a6, 0x1, 0x1);
        gbc.writeMem(0xcc54, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4a, gbc.sp());
        EXPECT(0xcc56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc54));
        EXPECT(0x34, gbc.readMem(0xcc55));
        // CB 34 0296
        gbc.setState(0x26a3, 0x45f8, 0x35f0, 0xc1e, 0x5d98, 0x9012, 0x0, 0x1);
        gbc.writeMem(0x26a3, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x45f8, gbc.sp());
        EXPECT(0x26a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0298
        gbc.setState(0xad1, 0x7310, 0x14b0, 0x31de, 0xad5e, 0x4680, 0x0, 0x1);
        gbc.writeMem(0xad1, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7310, gbc.sp());
        EXPECT(0xad3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0299
        gbc.setState(0xc193, 0x7cbc, 0xeda0, 0xe175, 0x5874, 0x85a8, 0x0, 0x1);
        gbc.writeMem(0xc193, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7cbc, gbc.sp());
        EXPECT(0xc195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc193));
        EXPECT(0x34, gbc.readMem(0xc194));
        // CB 34 029A
        gbc.setState(0x3530, 0xee75, 0x6ca0, 0x17cb, 0x6d41, 0xc194, 0x0, 0x1);
        gbc.writeMem(0x3530, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xee75, gbc.sp());
        EXPECT(0x3532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 029B
        gbc.setState(0x179a, 0x5cac, 0xab50, 0x5b1f, 0xcd54, 0x98ac, 0x0, 0x0);
        gbc.writeMem(0x179a, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5cac, gbc.sp());
        EXPECT(0x179c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 029C
        gbc.setState(0x4240, 0xf375, 0x930, 0x43c2, 0x2088, 0xd369, 0x1, 0x0);
        gbc.writeMem(0x4240, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf375, gbc.sp());
        EXPECT(0x4242, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 029E
        gbc.setState(0x485f, 0x9d6a, 0x66e0, 0x2e46, 0x14dc, 0xabb9, 0x0, 0x1);
        gbc.writeMem(0x485f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9d6a, gbc.sp());
        EXPECT(0x4861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 029F
        gbc.setState(0xa702, 0x1aaf, 0x8aa0, 0xdf3e, 0xc3b4, 0xe520, 0x0, 0x1);
        gbc.writeMem(0xa702, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1aaf, gbc.sp());
        EXPECT(0xa704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa702));
        EXPECT(0x34, gbc.readMem(0xa703));
        // CB 34 02A0
        gbc.setState(0x111e, 0x2321, 0xe630, 0xe2ce, 0xea20, 0x80c2, 0x1, 0x0);
        gbc.writeMem(0x111e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2321, gbc.sp());
        EXPECT(0x1120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02A2
        gbc.setState(0x1680, 0x83e, 0x6be0, 0x6284, 0x6a6e, 0x9b51, 0x0, 0x1);
        gbc.writeMem(0x1680, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x83e, gbc.sp());
        EXPECT(0x1682, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02A3
        gbc.setState(0x3d30, 0xd3b6, 0xbd40, 0x2646, 0xfc61, 0xa90d, 0x0, 0x0);
        gbc.writeMem(0x3d30, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd3b6, gbc.sp());
        EXPECT(0x3d32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02A4
        gbc.setState(0x3cac, 0x4918, 0x1e0, 0xe36c, 0xe538, 0xe29d, 0x1, 0x1);
        gbc.writeMem(0x3cac, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4918, gbc.sp());
        EXPECT(0x3cae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02A5
        gbc.setState(0x4450, 0xcfad, 0xd720, 0x137d, 0xb38d, 0xbb24, 0x0, 0x0);
        gbc.writeMem(0x4450, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xcfad, gbc.sp());
        EXPECT(0x4452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02A6
        gbc.setState(0xb155, 0xc151, 0x8460, 0x7d32, 0x9e5e, 0xb41b, 0x1, 0x0);
        gbc.writeMem(0xb155, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc151, gbc.sp());
        EXPECT(0xb157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb155));
        EXPECT(0x34, gbc.readMem(0xb156));
        // CB 34 02A7
        gbc.setState(0xc26d, 0xa7fa, 0x5700, 0xcd65, 0x3586, 0xa252, 0x0, 0x0);
        gbc.writeMem(0xc26d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa7fa, gbc.sp());
        EXPECT(0xc26f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc26d));
        EXPECT(0x34, gbc.readMem(0xc26e));
        // CB 34 02A8
        gbc.setState(0xa93a, 0x9ae2, 0xff60, 0x27ce, 0x53e3, 0xee38, 0x0, 0x1);
        gbc.writeMem(0xa93a, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9ae2, gbc.sp());
        EXPECT(0xa93c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa93a));
        EXPECT(0x34, gbc.readMem(0xa93b));
        // CB 34 02A9
        gbc.setState(0xb661, 0xa210, 0x7400, 0x7d00, 0xd4b7, 0x8eb0, 0x0, 0x1);
        gbc.writeMem(0xb661, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa210, gbc.sp());
        EXPECT(0xb663, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb661));
        EXPECT(0x34, gbc.readMem(0xb662));
        // CB 34 02AA
        gbc.setState(0xec7c, 0x6b84, 0x8810, 0x61e9, 0xfe87, 0xe61b, 0x0, 0x0);
        gbc.writeMem(0xec7c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6b84, gbc.sp());
        EXPECT(0xec7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec7c));
        EXPECT(0x34, gbc.readMem(0xec7d));
        // CB 34 02AB
        gbc.setState(0xdcde, 0xe49, 0xbcf0, 0xb8bc, 0x3058, 0x3566, 0x1, 0x0);
        gbc.writeMem(0xdcde, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe49, gbc.sp());
        EXPECT(0xdce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcde));
        EXPECT(0x34, gbc.readMem(0xdcdf));
        // CB 34 02AC
        gbc.setState(0x20b6, 0xd076, 0x3340, 0xaea3, 0x64fb, 0x51ee, 0x1, 0x1);
        gbc.writeMem(0x20b6, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd076, gbc.sp());
        EXPECT(0x20b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02AD
        gbc.setState(0x357a, 0xaab2, 0x3e70, 0x86e5, 0x4d59, 0xcbc4, 0x1, 0x1);
        gbc.writeMem(0x357a, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xaab2, gbc.sp());
        EXPECT(0x357c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02AE
        gbc.setState(0x49c9, 0xfbd, 0x6f50, 0xe4d3, 0xeccc, 0x91dc, 0x1, 0x0);
        gbc.writeMem(0x49c9, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xfbd, gbc.sp());
        EXPECT(0x49cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02B0
        gbc.setState(0xe1cf, 0x9817, 0x2e70, 0xde71, 0x6864, 0xfd82, 0x1, 0x1);
        gbc.writeMem(0xe1cf, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9817, gbc.sp());
        EXPECT(0xe1d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1cf));
        EXPECT(0x34, gbc.readMem(0xe1d0));
        // CB 34 02B2
        gbc.setState(0x32df, 0x8e02, 0x1e50, 0xa037, 0x618c, 0x9802, 0x0, 0x0);
        gbc.writeMem(0x32df, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8e02, gbc.sp());
        EXPECT(0x32e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02B3
        gbc.setState(0xa785, 0x3435, 0x1b90, 0x58cc, 0x767, 0x8d2f, 0x0, 0x1);
        gbc.writeMem(0xa785, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3435, gbc.sp());
        EXPECT(0xa787, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa785));
        EXPECT(0x34, gbc.readMem(0xa786));
        // CB 34 02B4
        gbc.setState(0xed41, 0x83ee, 0xd090, 0xe6e4, 0xaf48, 0x3de, 0x1, 0x0);
        gbc.writeMem(0xed41, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x83ee, gbc.sp());
        EXPECT(0xed43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed41));
        EXPECT(0x34, gbc.readMem(0xed42));
        // CB 34 02B5
        gbc.setState(0x900a, 0xabea, 0x90, 0xcce6, 0xb3cf, 0x3387, 0x0, 0x1);
        gbc.writeMem(0x900a, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xabea, gbc.sp());
        EXPECT(0x900c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x900a));
        EXPECT(0x34, gbc.readMem(0x900b));
        // CB 34 02B6
        gbc.setState(0xa486, 0x56d8, 0x1fc0, 0xed52, 0x4719, 0x307f, 0x0, 0x0);
        gbc.writeMem(0xa486, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x56d8, gbc.sp());
        EXPECT(0xa488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa486));
        EXPECT(0x34, gbc.readMem(0xa487));
        // CB 34 02B7
        gbc.setState(0x2143, 0x64bf, 0xa4b0, 0x5884, 0x31eb, 0x68b2, 0x0, 0x0);
        gbc.writeMem(0x2143, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x64bf, gbc.sp());
        EXPECT(0x2145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02B8
        gbc.setState(0xe501, 0xd6f0, 0x81e0, 0x95a0, 0x67b1, 0xa9b9, 0x0, 0x1);
        gbc.writeMem(0xe501, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd6f0, gbc.sp());
        EXPECT(0xe503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe501));
        EXPECT(0x34, gbc.readMem(0xe502));
        // CB 34 02B9
        gbc.setState(0xefb3, 0x2f4b, 0x4690, 0xcd06, 0xd85d, 0x7ec5, 0x1, 0x1);
        gbc.writeMem(0xefb3, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2f4b, gbc.sp());
        EXPECT(0xefb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefb3));
        EXPECT(0x34, gbc.readMem(0xefb4));
        // CB 34 02BA
        gbc.setState(0x561d, 0xc936, 0x2b90, 0xd584, 0x6d1a, 0xa081, 0x1, 0x1);
        gbc.writeMem(0x561d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc936, gbc.sp());
        EXPECT(0x561f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02BB
        gbc.setState(0xea1b, 0xa09d, 0x6c10, 0xc0c6, 0x21c4, 0x8bac, 0x1, 0x0);
        gbc.writeMem(0xea1b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa09d, gbc.sp());
        EXPECT(0xea1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea1b));
        EXPECT(0x34, gbc.readMem(0xea1c));
        // CB 34 02BC
        gbc.setState(0xed30, 0x6435, 0x9000, 0x4f1f, 0x8e73, 0x5a6d, 0x0, 0x0);
        gbc.writeMem(0xed30, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6435, gbc.sp());
        EXPECT(0xed32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed30));
        EXPECT(0x34, gbc.readMem(0xed31));
        // CB 34 02BD
        gbc.setState(0x5001, 0x7c14, 0x1f70, 0x8992, 0x7148, 0xbdc0, 0x0, 0x1);
        gbc.writeMem(0x5001, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7c14, gbc.sp());
        EXPECT(0x5003, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02BE
        gbc.setState(0x4c1d, 0x4f2c, 0x2f10, 0xcdb3, 0x5531, 0x285d, 0x1, 0x1);
        gbc.writeMem(0x4c1d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4f2c, gbc.sp());
        EXPECT(0x4c1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02BF
        gbc.setState(0x71f2, 0x7301, 0xc010, 0x2ade, 0x66df, 0x450c, 0x1, 0x0);
        gbc.writeMem(0x71f2, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7301, gbc.sp());
        EXPECT(0x71f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02C0
        gbc.setState(0xa22f, 0x94b5, 0xfc60, 0x7b45, 0x5e40, 0xd310, 0x1, 0x0);
        gbc.writeMem(0xa22f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x94b5, gbc.sp());
        EXPECT(0xa231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa22f));
        EXPECT(0x34, gbc.readMem(0xa230));
        // CB 34 02C1
        gbc.setState(0x6822, 0xdf31, 0x3b30, 0x633d, 0x9120, 0xc565, 0x1, 0x1);
        gbc.writeMem(0x6822, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xdf31, gbc.sp());
        EXPECT(0x6824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02C2
        gbc.setState(0xe83c, 0x9cae, 0x14b0, 0x91dc, 0x177a, 0xf79f, 0x1, 0x1);
        gbc.writeMem(0xe83c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9cae, gbc.sp());
        EXPECT(0xe83e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe83c));
        EXPECT(0x34, gbc.readMem(0xe83d));
        // CB 34 02C3
        gbc.setState(0xc3ef, 0x40f0, 0x8250, 0x8366, 0xa92f, 0xdd0c, 0x0, 0x0);
        gbc.writeMem(0xc3ef, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x40f0, gbc.sp());
        EXPECT(0xc3f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ef));
        EXPECT(0x34, gbc.readMem(0xc3f0));
        // CB 34 02C4
        gbc.setState(0x2f91, 0x9ad0, 0xfdd0, 0x2bed, 0xa52e, 0x3386, 0x1, 0x1);
        gbc.writeMem(0x2f91, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9ad0, gbc.sp());
        EXPECT(0x2f93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02C5
        gbc.setState(0xb5f4, 0x66fb, 0x5a50, 0x2a80, 0x5bf4, 0x6644, 0x1, 0x1);
        gbc.writeMem(0xb5f4, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x66fb, gbc.sp());
        EXPECT(0xb5f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5f4));
        EXPECT(0x34, gbc.readMem(0xb5f5));
        // CB 34 02C6
        gbc.setState(0x11be, 0x6a30, 0x31a0, 0xc5a, 0xe9b5, 0x1c48, 0x1, 0x0);
        gbc.writeMem(0x11be, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6a30, gbc.sp());
        EXPECT(0x11c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02C7
        gbc.setState(0xdedf, 0x6fae, 0x71b0, 0x3b0, 0x474, 0xb800, 0x1, 0x0);
        gbc.writeMem(0xdedf, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6fae, gbc.sp());
        EXPECT(0xdee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdedf));
        EXPECT(0x34, gbc.readMem(0xdee0));
        // CB 34 02C8
        gbc.setState(0xc997, 0x8f58, 0xafa0, 0x8697, 0x836, 0xc36a, 0x1, 0x1);
        gbc.writeMem(0xc997, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8f58, gbc.sp());
        EXPECT(0xc999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc997));
        EXPECT(0x34, gbc.readMem(0xc998));
        // CB 34 02C9
        gbc.setState(0xde92, 0xd3fd, 0xf4f0, 0x7f3c, 0x5729, 0x4fb9, 0x1, 0x0);
        gbc.writeMem(0xde92, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd3fd, gbc.sp());
        EXPECT(0xde94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde92));
        EXPECT(0x34, gbc.readMem(0xde93));
        // CB 34 02CA
        gbc.setState(0x23d3, 0xd49c, 0x7fc0, 0xa9f, 0x749, 0xa562, 0x0, 0x0);
        gbc.writeMem(0x23d3, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd49c, gbc.sp());
        EXPECT(0x23d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02CB
        gbc.setState(0x43bd, 0xa8c9, 0xc6b0, 0x2063, 0x31a8, 0xd800, 0x1, 0x1);
        gbc.writeMem(0x43bd, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa8c9, gbc.sp());
        EXPECT(0x43bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02CC
        gbc.setState(0xbfd1, 0x698a, 0xf720, 0x142, 0x34b0, 0xaf24, 0x0, 0x1);
        gbc.writeMem(0xbfd1, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x698a, gbc.sp());
        EXPECT(0xbfd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfd1));
        EXPECT(0x34, gbc.readMem(0xbfd2));
        // CB 34 02CD
        gbc.setState(0x1c28, 0xb9b4, 0x7a00, 0xeeef, 0xdf4c, 0x1240, 0x1, 0x1);
        gbc.writeMem(0x1c28, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb9b4, gbc.sp());
        EXPECT(0x1c2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02CE
        gbc.setState(0x1f84, 0xd786, 0x7750, 0x9e58, 0xce30, 0x7778, 0x0, 0x0);
        gbc.writeMem(0x1f84, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd786, gbc.sp());
        EXPECT(0x1f86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02CF
        gbc.setState(0xe320, 0x2c93, 0x7d90, 0xdb55, 0xa713, 0x701d, 0x1, 0x1);
        gbc.writeMem(0xe320, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2c93, gbc.sp());
        EXPECT(0xe322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe320));
        EXPECT(0x34, gbc.readMem(0xe321));
        // CB 34 02D0
        gbc.setState(0x658f, 0x5519, 0xad20, 0x30ba, 0xb2d0, 0x9caf, 0x0, 0x1);
        gbc.writeMem(0x658f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5519, gbc.sp());
        EXPECT(0x6591, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02D1
        gbc.setState(0x8e60, 0x539d, 0x6e30, 0x2486, 0xf29, 0x9426, 0x0, 0x1);
        gbc.writeMem(0x8e60, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x539d, gbc.sp());
        EXPECT(0x8e62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e60));
        EXPECT(0x34, gbc.readMem(0x8e61));
        // CB 34 02D2
        gbc.setState(0xc031, 0xc6ba, 0x34e0, 0x4748, 0xfd65, 0xe830, 0x0, 0x1);
        gbc.writeMem(0xc031, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc6ba, gbc.sp());
        EXPECT(0xc033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc031));
        EXPECT(0x34, gbc.readMem(0xc032));
        // CB 34 02D3
        gbc.setState(0x2362, 0xb5a7, 0x1940, 0x69e0, 0xc741, 0xbe19, 0x0, 0x1);
        gbc.writeMem(0x2362, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb5a7, gbc.sp());
        EXPECT(0x2364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02D4
        gbc.setState(0x811e, 0x43a8, 0x7ee0, 0x574b, 0xb9f5, 0xc3c0, 0x0, 0x0);
        gbc.writeMem(0x811e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x43a8, gbc.sp());
        EXPECT(0x8120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x811e));
        EXPECT(0x34, gbc.readMem(0x811f));
        // CB 34 02D5
        gbc.setState(0x6bb7, 0xa2c6, 0x4c30, 0x4ef3, 0x8217, 0x8319, 0x0, 0x1);
        gbc.writeMem(0x6bb7, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa2c6, gbc.sp());
        EXPECT(0x6bb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02D6
        gbc.setState(0x4c71, 0x609e, 0xc610, 0xb52b, 0x793d, 0xdb0b, 0x0, 0x0);
        gbc.writeMem(0x4c71, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x609e, gbc.sp());
        EXPECT(0x4c73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02D7
        gbc.setState(0x93e, 0xbd25, 0xefc0, 0x31b0, 0x45df, 0xbe3e, 0x0, 0x0);
        gbc.writeMem(0x93e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xbd25, gbc.sp());
        EXPECT(0x940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02D8
        gbc.setState(0x3445, 0x5978, 0xbcf0, 0x6f91, 0x25af, 0x541f, 0x1, 0x0);
        gbc.writeMem(0x3445, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5978, gbc.sp());
        EXPECT(0x3447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02DA
        gbc.setState(0xc49, 0xad58, 0x7570, 0x27c, 0x9925, 0xbd5f, 0x1, 0x0);
        gbc.writeMem(0xc49, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xad58, gbc.sp());
        EXPECT(0xc4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02DB
        gbc.setState(0x77cd, 0xa303, 0xd8f0, 0x5954, 0x345c, 0xb95b, 0x0, 0x1);
        gbc.writeMem(0x77cd, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa303, gbc.sp());
        EXPECT(0x77cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02DC
        gbc.setState(0xb841, 0x74f4, 0xd760, 0x601, 0xb1bc, 0xec33, 0x1, 0x0);
        gbc.writeMem(0xb841, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x74f4, gbc.sp());
        EXPECT(0xb843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb841));
        EXPECT(0x34, gbc.readMem(0xb842));
        // CB 34 02DD
        gbc.setState(0x433b, 0x3431, 0x5020, 0x2f35, 0xff53, 0x4514, 0x1, 0x1);
        gbc.writeMem(0x433b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3431, gbc.sp());
        EXPECT(0x433d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02DE
        gbc.setState(0x9eed, 0xf9b7, 0xc0, 0x3d57, 0xf0a8, 0x79a, 0x1, 0x0);
        gbc.writeMem(0x9eed, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf9b7, gbc.sp());
        EXPECT(0x9eef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eed));
        EXPECT(0x34, gbc.readMem(0x9eee));
        // CB 34 02DF
        gbc.setState(0x6e73, 0xae8c, 0xec60, 0x805e, 0x89cf, 0x969e, 0x0, 0x0);
        gbc.writeMem(0x6e73, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xae8c, gbc.sp());
        EXPECT(0x6e75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02E0
        gbc.setState(0x5939, 0xd66b, 0x3c40, 0xcd2c, 0xcb13, 0xa486, 0x0, 0x0);
        gbc.writeMem(0x5939, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd66b, gbc.sp());
        EXPECT(0x593b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02E1
        gbc.setState(0xf69, 0xec7b, 0xfa0, 0x1f03, 0x8ce8, 0xd1a6, 0x1, 0x1);
        gbc.writeMem(0xf69, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xec7b, gbc.sp());
        EXPECT(0xf6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02E2
        gbc.setState(0xe34d, 0x30ef, 0x41a0, 0x14a8, 0xcf12, 0x7b, 0x1, 0x1);
        gbc.writeMem(0xe34d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x30ef, gbc.sp());
        EXPECT(0xe34f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe34d));
        EXPECT(0x34, gbc.readMem(0xe34e));
        // CB 34 02E3
        gbc.setState(0xd37a, 0x63dc, 0xed60, 0xabec, 0x2b14, 0xbc42, 0x1, 0x1);
        gbc.writeMem(0xd37a, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x63dc, gbc.sp());
        EXPECT(0xd37c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd37a));
        EXPECT(0x34, gbc.readMem(0xd37b));
        // CB 34 02E4
        gbc.setState(0x40a8, 0xa286, 0x6d90, 0x3d99, 0x6a76, 0xde20, 0x1, 0x0);
        gbc.writeMem(0x40a8, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa286, gbc.sp());
        EXPECT(0x40aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02E5
        gbc.setState(0x4153, 0x1ffb, 0xcb00, 0xb66b, 0x7ff8, 0x38da, 0x1, 0x1);
        gbc.writeMem(0x4153, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1ffb, gbc.sp());
        EXPECT(0x4155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02E6
        gbc.setState(0x933e, 0xb047, 0x3c00, 0xae0c, 0x2d2, 0x39de, 0x0, 0x0);
        gbc.writeMem(0x933e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb047, gbc.sp());
        EXPECT(0x9340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x933e));
        EXPECT(0x34, gbc.readMem(0x933f));
        // CB 34 02E7
        gbc.setState(0x4cb8, 0x7199, 0x66d0, 0x354, 0x2e62, 0x22d9, 0x1, 0x0);
        gbc.writeMem(0x4cb8, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7199, gbc.sp());
        EXPECT(0x4cba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02E8
        gbc.setState(0x705b, 0xc6a6, 0x4bf0, 0x6a03, 0xd07c, 0xd48d, 0x1, 0x1);
        gbc.writeMem(0x705b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc6a6, gbc.sp());
        EXPECT(0x705d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02E9
        gbc.setState(0xdb93, 0x6dd9, 0xf690, 0x5301, 0x15d2, 0x4067, 0x0, 0x1);
        gbc.writeMem(0xdb93, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6dd9, gbc.sp());
        EXPECT(0xdb95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb93));
        EXPECT(0x34, gbc.readMem(0xdb94));
        // CB 34 02EA
        gbc.setState(0x8338, 0x8fe5, 0x6cb0, 0xa93e, 0x84b4, 0xf404, 0x1, 0x0);
        gbc.writeMem(0x8338, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8fe5, gbc.sp());
        EXPECT(0x833a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8338));
        EXPECT(0x34, gbc.readMem(0x8339));
        // CB 34 02EC
        gbc.setState(0xb303, 0xdd03, 0xe650, 0x73c5, 0x43b3, 0x82ff, 0x0, 0x0);
        gbc.writeMem(0xb303, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xdd03, gbc.sp());
        EXPECT(0xb305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb303));
        EXPECT(0x34, gbc.readMem(0xb304));
        // CB 34 02ED
        gbc.setState(0xe967, 0x931f, 0xd290, 0x4d07, 0x5bb5, 0x11e9, 0x0, 0x1);
        gbc.writeMem(0xe967, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x931f, gbc.sp());
        EXPECT(0xe969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe967));
        EXPECT(0x34, gbc.readMem(0xe968));
        // CB 34 02EE
        gbc.setState(0x1a15, 0x3784, 0x2350, 0x7218, 0x5786, 0x8ff2, 0x1, 0x1);
        gbc.writeMem(0x1a15, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3784, gbc.sp());
        EXPECT(0x1a17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02EF
        gbc.setState(0xa6e6, 0x46bf, 0x4b20, 0xaa32, 0x3e7, 0xf6f7, 0x0, 0x0);
        gbc.writeMem(0xa6e6, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x46bf, gbc.sp());
        EXPECT(0xa6e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6e6));
        EXPECT(0x34, gbc.readMem(0xa6e7));
        // CB 34 02F0
        gbc.setState(0xa6c5, 0x644, 0xb530, 0xfb12, 0xb09e, 0x89d0, 0x0, 0x1);
        gbc.writeMem(0xa6c5, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x644, gbc.sp());
        EXPECT(0xa6c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6c5));
        EXPECT(0x34, gbc.readMem(0xa6c6));
        // CB 34 02F1
        gbc.setState(0x5266, 0x47ea, 0x7f90, 0x4385, 0x8349, 0xa38, 0x0, 0x0);
        gbc.writeMem(0x5266, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x47ea, gbc.sp());
        EXPECT(0x5268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02F2
        gbc.setState(0xa1d4, 0xce3c, 0x7390, 0x4f95, 0xbd06, 0xa394, 0x0, 0x0);
        gbc.writeMem(0xa1d4, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xce3c, gbc.sp());
        EXPECT(0xa1d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1d4));
        EXPECT(0x34, gbc.readMem(0xa1d5));
        // CB 34 02F3
        gbc.setState(0x2b0e, 0xb01a, 0xd740, 0xc222, 0x38d0, 0xc33, 0x1, 0x0);
        gbc.writeMem(0x2b0e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb01a, gbc.sp());
        EXPECT(0x2b10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02F4
        gbc.setState(0xdf29, 0x8ce4, 0x3a30, 0x8ebb, 0x613c, 0x81e9, 0x0, 0x0);
        gbc.writeMem(0xdf29, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8ce4, gbc.sp());
        EXPECT(0xdf2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf29));
        EXPECT(0x34, gbc.readMem(0xdf2a));
        // CB 34 02F5
        gbc.setState(0x3f7, 0x6062, 0xa780, 0x3b16, 0x15d2, 0x5920, 0x0, 0x0);
        gbc.writeMem(0x3f7, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6062, gbc.sp());
        EXPECT(0x3f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02F6
        gbc.setState(0x6ea7, 0x7557, 0x3860, 0xb531, 0x408d, 0xf01a, 0x0, 0x0);
        gbc.writeMem(0x6ea7, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7557, gbc.sp());
        EXPECT(0x6ea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02F7
        gbc.setState(0x2131, 0x8123, 0x41c0, 0x4a57, 0x3806, 0xc643, 0x0, 0x1);
        gbc.writeMem(0x2131, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8123, gbc.sp());
        EXPECT(0x2133, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02F8
        gbc.setState(0x4fe2, 0xa87d, 0x5da0, 0x180b, 0x2797, 0x871d, 0x0, 0x1);
        gbc.writeMem(0x4fe2, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa87d, gbc.sp());
        EXPECT(0x4fe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02F9
        gbc.setState(0xd92e, 0x419d, 0x9f80, 0xac76, 0x66a0, 0x449b, 0x1, 0x1);
        gbc.writeMem(0xd92e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x419d, gbc.sp());
        EXPECT(0xd930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd92e));
        EXPECT(0x34, gbc.readMem(0xd92f));
        // CB 34 02FB
        gbc.setState(0x69ad, 0x55b0, 0x5aa0, 0x52a5, 0x39b7, 0x37a4, 0x0, 0x0);
        gbc.writeMem(0x69ad, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x55b0, gbc.sp());
        EXPECT(0x69af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02FC
        gbc.setState(0x2451, 0xc6e4, 0xbdd0, 0x5515, 0xb7e7, 0x3d0d, 0x1, 0x1);
        gbc.writeMem(0x2451, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc6e4, gbc.sp());
        EXPECT(0x2453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02FD
        gbc.setState(0x5cd4, 0xb451, 0x22a0, 0x9133, 0x95ac, 0x6b22, 0x1, 0x1);
        gbc.writeMem(0x5cd4, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb451, gbc.sp());
        EXPECT(0x5cd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02FE
        gbc.setState(0x128, 0xd53b, 0x42d0, 0xc9d, 0xb1d7, 0xc62c, 0x1, 0x0);
        gbc.writeMem(0x128, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd53b, gbc.sp());
        EXPECT(0x12a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 02FF
        gbc.setState(0x5fef, 0x6fc5, 0x3cd0, 0x5b48, 0x5462, 0x9022, 0x0, 0x0);
        gbc.writeMem(0x5fef, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6fc5, gbc.sp());
        EXPECT(0x5ff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0300
        gbc.setState(0x640a, 0xb167, 0xd860, 0x1551, 0xbd18, 0xac1a, 0x0, 0x0);
        gbc.writeMem(0x640a, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb167, gbc.sp());
        EXPECT(0x640c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0301
        gbc.setState(0x1980, 0xd406, 0x7990, 0xd721, 0xc03f, 0x2bda, 0x1, 0x0);
        gbc.writeMem(0x1980, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd406, gbc.sp());
        EXPECT(0x1982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0302
        gbc.setState(0x4a48, 0xded9, 0xcf30, 0x4c43, 0x7553, 0x2e7f, 0x0, 0x1);
        gbc.writeMem(0x4a48, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xded9, gbc.sp());
        EXPECT(0x4a4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0303
        gbc.setState(0x3c80, 0xe590, 0x4a50, 0x9437, 0xf268, 0xb964, 0x0, 0x1);
        gbc.writeMem(0x3c80, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe590, gbc.sp());
        EXPECT(0x3c82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0304
        gbc.setState(0x4deb, 0xd674, 0xc040, 0xdf1c, 0x3695, 0x3f59, 0x1, 0x0);
        gbc.writeMem(0x4deb, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd674, gbc.sp());
        EXPECT(0x4ded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0305
        gbc.setState(0x4f1f, 0x514e, 0xe3b0, 0xa021, 0x1a05, 0x882, 0x1, 0x1);
        gbc.writeMem(0x4f1f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x514e, gbc.sp());
        EXPECT(0x4f21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0306
        gbc.setState(0x20bc, 0xae98, 0xed20, 0xe043, 0x2fc9, 0xff79, 0x0, 0x0);
        gbc.writeMem(0x20bc, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xae98, gbc.sp());
        EXPECT(0x20be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0307
        gbc.setState(0x70a7, 0x717, 0x4d90, 0xcf7c, 0x4ff7, 0xc10c, 0x0, 0x0);
        gbc.writeMem(0x70a7, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x717, gbc.sp());
        EXPECT(0x70a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0308
        gbc.setState(0x9f14, 0x740, 0xf790, 0x256b, 0x8f4e, 0xb3d1, 0x1, 0x0);
        gbc.writeMem(0x9f14, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x740, gbc.sp());
        EXPECT(0x9f16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f14));
        EXPECT(0x34, gbc.readMem(0x9f15));
        // CB 34 0309
        gbc.setState(0xbe87, 0xf365, 0x8c90, 0x9d44, 0xcf5e, 0x4391, 0x1, 0x1);
        gbc.writeMem(0xbe87, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf365, gbc.sp());
        EXPECT(0xbe89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe87));
        EXPECT(0x34, gbc.readMem(0xbe88));
        // CB 34 030A
        gbc.setState(0x11a3, 0x2ecf, 0xebb0, 0x6416, 0xf7cb, 0x2bb, 0x0, 0x0);
        gbc.writeMem(0x11a3, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2ecf, gbc.sp());
        EXPECT(0x11a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 030B
        gbc.setState(0x5ef2, 0xa342, 0xe170, 0xa050, 0xef2a, 0x3bef, 0x0, 0x0);
        gbc.writeMem(0x5ef2, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa342, gbc.sp());
        EXPECT(0x5ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 030C
        gbc.setState(0x891e, 0x11c8, 0x66c0, 0x9eba, 0xe19e, 0x7480, 0x0, 0x1);
        gbc.writeMem(0x891e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x11c8, gbc.sp());
        EXPECT(0x8920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x891e));
        EXPECT(0x34, gbc.readMem(0x891f));
        // CB 34 030D
        gbc.setState(0xb739, 0x6a2a, 0xdaf0, 0xea7, 0x6548, 0x7b1c, 0x0, 0x1);
        gbc.writeMem(0xb739, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6a2a, gbc.sp());
        EXPECT(0xb73b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb739));
        EXPECT(0x34, gbc.readMem(0xb73a));
        // CB 34 030E
        gbc.setState(0x232e, 0xce80, 0x2980, 0x9bc2, 0x8f2b, 0xf0b3, 0x0, 0x1);
        gbc.writeMem(0x232e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xce80, gbc.sp());
        EXPECT(0x2330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 030F
        gbc.setState(0xc69c, 0x56f6, 0x2ee0, 0x6c7c, 0x1985, 0xbaaf, 0x0, 0x0);
        gbc.writeMem(0xc69c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x56f6, gbc.sp());
        EXPECT(0xc69e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc69c));
        EXPECT(0x34, gbc.readMem(0xc69d));
        // CB 34 0310
        gbc.setState(0xe38a, 0x6770, 0x23f0, 0xb000, 0x143c, 0xf561, 0x0, 0x0);
        gbc.writeMem(0xe38a, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6770, gbc.sp());
        EXPECT(0xe38c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe38a));
        EXPECT(0x34, gbc.readMem(0xe38b));
        // CB 34 0311
        gbc.setState(0xc949, 0xabd, 0xcd30, 0x2a6d, 0xf99f, 0x1cf3, 0x1, 0x1);
        gbc.writeMem(0xc949, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xabd, gbc.sp());
        EXPECT(0xc94b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc949));
        EXPECT(0x34, gbc.readMem(0xc94a));
        // CB 34 0312
        gbc.setState(0x93d0, 0xb8a, 0xa640, 0xe7c7, 0x8363, 0xdd81, 0x0, 0x0);
        gbc.writeMem(0x93d0, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb8a, gbc.sp());
        EXPECT(0x93d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93d0));
        EXPECT(0x34, gbc.readMem(0x93d1));
        // CB 34 0313
        gbc.setState(0x4868, 0xf565, 0x98a0, 0x65a6, 0x1f8c, 0x7367, 0x1, 0x0);
        gbc.writeMem(0x4868, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf565, gbc.sp());
        EXPECT(0x486a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0314
        gbc.setState(0x983d, 0x56a6, 0xd630, 0xe92, 0x2973, 0x559c, 0x0, 0x1);
        gbc.writeMem(0x983d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x56a6, gbc.sp());
        EXPECT(0x983f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x983d));
        EXPECT(0x34, gbc.readMem(0x983e));
        // CB 34 0315
        gbc.setState(0xcc8d, 0x2315, 0xbc20, 0x8d7b, 0xa508, 0xac9e, 0x1, 0x1);
        gbc.writeMem(0xcc8d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2315, gbc.sp());
        EXPECT(0xcc8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc8d));
        EXPECT(0x34, gbc.readMem(0xcc8e));
        // CB 34 0317
        gbc.setState(0xb29d, 0x4e07, 0x6390, 0xe541, 0xe6eb, 0xde42, 0x0, 0x0);
        gbc.writeMem(0xb29d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4e07, gbc.sp());
        EXPECT(0xb29f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb29d));
        EXPECT(0x34, gbc.readMem(0xb29e));
        // CB 34 0318
        gbc.setState(0xca7b, 0x1ce0, 0x780, 0x54de, 0x4e27, 0x9aa0, 0x0, 0x0);
        gbc.writeMem(0xca7b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1ce0, gbc.sp());
        EXPECT(0xca7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca7b));
        EXPECT(0x34, gbc.readMem(0xca7c));
        // CB 34 0319
        gbc.setState(0xe9a7, 0xefc, 0x90b0, 0x2db, 0x6a81, 0x5b36, 0x0, 0x0);
        gbc.writeMem(0xe9a7, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xefc, gbc.sp());
        EXPECT(0xe9a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9a7));
        EXPECT(0x34, gbc.readMem(0xe9a8));
        // CB 34 031A
        gbc.setState(0xb5e5, 0xb230, 0xc0c0, 0x1659, 0xaf4e, 0xe65f, 0x0, 0x1);
        gbc.writeMem(0xb5e5, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb230, gbc.sp());
        EXPECT(0xb5e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5e5));
        EXPECT(0x34, gbc.readMem(0xb5e6));
        // CB 34 031B
        gbc.setState(0x26d1, 0x5b10, 0xe360, 0xc8aa, 0xb4be, 0xb36e, 0x0, 0x0);
        gbc.writeMem(0x26d1, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5b10, gbc.sp());
        EXPECT(0x26d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 031C
        gbc.setState(0xa7d0, 0xfa54, 0x7fe0, 0xf21b, 0xbd61, 0xbf7a, 0x0, 0x0);
        gbc.writeMem(0xa7d0, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xfa54, gbc.sp());
        EXPECT(0xa7d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7d0));
        EXPECT(0x34, gbc.readMem(0xa7d1));
        // CB 34 031D
        gbc.setState(0x4563, 0xd1db, 0xbc90, 0xd008, 0xc3e8, 0x78b2, 0x0, 0x0);
        gbc.writeMem(0x4563, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd1db, gbc.sp());
        EXPECT(0x4565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 031E
        gbc.setState(0x5103, 0x7ccc, 0x3ae0, 0xe60d, 0xc606, 0x3cee, 0x1, 0x0);
        gbc.writeMem(0x5103, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7ccc, gbc.sp());
        EXPECT(0x5105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 031F
        gbc.setState(0x31d6, 0x7673, 0x8c70, 0x9fe0, 0x298f, 0xccca, 0x1, 0x0);
        gbc.writeMem(0x31d6, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7673, gbc.sp());
        EXPECT(0x31d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0320
        gbc.setState(0x97c3, 0x369, 0x2220, 0x4c95, 0x7481, 0xa737, 0x1, 0x0);
        gbc.writeMem(0x97c3, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x369, gbc.sp());
        EXPECT(0x97c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97c3));
        EXPECT(0x34, gbc.readMem(0x97c4));
        // CB 34 0321
        gbc.setState(0x6055, 0x4bfd, 0xfe00, 0xa1b4, 0xc01e, 0xd417, 0x1, 0x1);
        gbc.writeMem(0x6055, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4bfd, gbc.sp());
        EXPECT(0x6057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0322
        gbc.setState(0xc3d5, 0xff92, 0x54f0, 0xd378, 0xd309, 0x803b, 0x0, 0x0);
        gbc.writeMem(0xc3d5, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xff92, gbc.sp());
        EXPECT(0xc3d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3d5));
        EXPECT(0x34, gbc.readMem(0xc3d6));
        // CB 34 0323
        gbc.setState(0x7230, 0x7cb3, 0xe6d0, 0xef91, 0x7c63, 0x3cfa, 0x1, 0x1);
        gbc.writeMem(0x7230, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7cb3, gbc.sp());
        EXPECT(0x7232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0324
        gbc.setState(0x7079, 0x9807, 0xd700, 0x156e, 0xf749, 0x3d88, 0x1, 0x1);
        gbc.writeMem(0x7079, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9807, gbc.sp());
        EXPECT(0x707b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0325
        gbc.setState(0x17c6, 0x126c, 0x70, 0x182e, 0x3d3e, 0xdfe8, 0x1, 0x1);
        gbc.writeMem(0x17c6, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x126c, gbc.sp());
        EXPECT(0x17c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0326
        gbc.setState(0x678b, 0xc42a, 0x7770, 0x7676, 0x1, 0xcd95, 0x0, 0x0);
        gbc.writeMem(0x678b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc42a, gbc.sp());
        EXPECT(0x678d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0327
        gbc.setState(0xb015, 0x21f1, 0x97d0, 0xa2ef, 0xdb00, 0xb008, 0x1, 0x0);
        gbc.writeMem(0xb015, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x21f1, gbc.sp());
        EXPECT(0xb017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb015));
        EXPECT(0x34, gbc.readMem(0xb016));
        // CB 34 0328
        gbc.setState(0xb46f, 0xd2aa, 0x9510, 0x37fd, 0xe2cb, 0x8efd, 0x1, 0x0);
        gbc.writeMem(0xb46f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd2aa, gbc.sp());
        EXPECT(0xb471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb46f));
        EXPECT(0x34, gbc.readMem(0xb470));
        // CB 34 0329
        gbc.setState(0xa592, 0x7de0, 0x9ad0, 0xc2e7, 0x3b7a, 0xc197, 0x1, 0x0);
        gbc.writeMem(0xa592, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7de0, gbc.sp());
        EXPECT(0xa594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa592));
        EXPECT(0x34, gbc.readMem(0xa593));
        // CB 34 032A
        gbc.setState(0xe4d5, 0xb12b, 0xd70, 0x216a, 0xa47f, 0xaf44, 0x0, 0x0);
        gbc.writeMem(0xe4d5, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb12b, gbc.sp());
        EXPECT(0xe4d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4d5));
        EXPECT(0x34, gbc.readMem(0xe4d6));
        // CB 34 032B
        gbc.setState(0x1f99, 0xccfd, 0x9c10, 0xbfdd, 0x3f33, 0xdf1a, 0x0, 0x0);
        gbc.writeMem(0x1f99, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xccfd, gbc.sp());
        EXPECT(0x1f9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 032C
        gbc.setState(0xbe33, 0x7110, 0xb530, 0x6cbf, 0x16e7, 0xd77e, 0x1, 0x0);
        gbc.writeMem(0xbe33, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7110, gbc.sp());
        EXPECT(0xbe35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe33));
        EXPECT(0x34, gbc.readMem(0xbe34));
        // CB 34 032D
        gbc.setState(0x691, 0xa6d4, 0x7290, 0x979d, 0x9098, 0x2175, 0x0, 0x1);
        gbc.writeMem(0x691, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa6d4, gbc.sp());
        EXPECT(0x693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 032E
        gbc.setState(0x6841, 0x31ea, 0x9130, 0x8ff, 0x9392, 0x5485, 0x0, 0x0);
        gbc.writeMem(0x6841, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x31ea, gbc.sp());
        EXPECT(0x6843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 032F
        gbc.setState(0xdd2c, 0xb20f, 0x37b0, 0x6cd7, 0x31b5, 0xd70b, 0x0, 0x0);
        gbc.writeMem(0xdd2c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb20f, gbc.sp());
        EXPECT(0xdd2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd2c));
        EXPECT(0x34, gbc.readMem(0xdd2d));
        // CB 34 0330
        gbc.setState(0xda3c, 0x6d02, 0xed80, 0x79ac, 0x50e3, 0x1c3d, 0x1, 0x0);
        gbc.writeMem(0xda3c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6d02, gbc.sp());
        EXPECT(0xda3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda3c));
        EXPECT(0x34, gbc.readMem(0xda3d));
        // CB 34 0331
        gbc.setState(0xb314, 0xe24e, 0x6d0, 0xd160, 0x5123, 0x190a, 0x0, 0x0);
        gbc.writeMem(0xb314, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe24e, gbc.sp());
        EXPECT(0xb316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb314));
        EXPECT(0x34, gbc.readMem(0xb315));
        // CB 34 0332
        gbc.setState(0x65b9, 0x9c11, 0x6470, 0xd054, 0x3d26, 0xebc5, 0x1, 0x1);
        gbc.writeMem(0x65b9, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9c11, gbc.sp());
        EXPECT(0x65bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0333
        gbc.setState(0xd863, 0x6b76, 0x8b40, 0xa746, 0x75c4, 0x5fbd, 0x0, 0x0);
        gbc.writeMem(0xd863, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6b76, gbc.sp());
        EXPECT(0xd865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd863));
        EXPECT(0x34, gbc.readMem(0xd864));
        // CB 34 0334
        gbc.setState(0x5a2a, 0xde22, 0xc900, 0x7014, 0x4c13, 0x90a9, 0x1, 0x1);
        gbc.writeMem(0x5a2a, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xde22, gbc.sp());
        EXPECT(0x5a2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0335
        gbc.setState(0xb451, 0x7b1c, 0x26d0, 0xbf4a, 0x3b23, 0x1be5, 0x0, 0x0);
        gbc.writeMem(0xb451, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7b1c, gbc.sp());
        EXPECT(0xb453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb451));
        EXPECT(0x34, gbc.readMem(0xb452));
        // CB 34 0336
        gbc.setState(0x4c07, 0x8481, 0x5e20, 0x9dac, 0x22a7, 0x4a87, 0x0, 0x0);
        gbc.writeMem(0x4c07, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8481, gbc.sp());
        EXPECT(0x4c09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0337
        gbc.setState(0x5468, 0x7761, 0xa370, 0x2f29, 0x189d, 0x294d, 0x1, 0x1);
        gbc.writeMem(0x5468, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7761, gbc.sp());
        EXPECT(0x546a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0339
        gbc.setState(0xb69c, 0x5547, 0xcc00, 0x2f31, 0x6d44, 0x5aa3, 0x1, 0x1);
        gbc.writeMem(0xb69c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5547, gbc.sp());
        EXPECT(0xb69e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb69c));
        EXPECT(0x34, gbc.readMem(0xb69d));
        // CB 34 033A
        gbc.setState(0xbbe5, 0xf240, 0xb8a0, 0x8e35, 0x42b8, 0x3796, 0x1, 0x1);
        gbc.writeMem(0xbbe5, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf240, gbc.sp());
        EXPECT(0xbbe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe5));
        EXPECT(0x34, gbc.readMem(0xbbe6));
        // CB 34 033B
        gbc.setState(0x70fb, 0xecd6, 0x8e60, 0x427, 0x228a, 0xb2e, 0x0, 0x0);
        gbc.writeMem(0x70fb, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xecd6, gbc.sp());
        EXPECT(0x70fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 033C
        gbc.setState(0xa2a5, 0xe966, 0x1850, 0x3eba, 0x1008, 0xfe67, 0x0, 0x1);
        gbc.writeMem(0xa2a5, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe966, gbc.sp());
        EXPECT(0xa2a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2a5));
        EXPECT(0x34, gbc.readMem(0xa2a6));
        // CB 34 033D
        gbc.setState(0x965, 0x60b, 0x85d0, 0xe498, 0x67ae, 0x6db, 0x1, 0x0);
        gbc.writeMem(0x965, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x60b, gbc.sp());
        EXPECT(0x967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 033E
        gbc.setState(0x2eca, 0x3c64, 0x7300, 0x7baa, 0x172, 0x4b4f, 0x1, 0x0);
        gbc.writeMem(0x2eca, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3c64, gbc.sp());
        EXPECT(0x2ecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 033F
        gbc.setState(0x704f, 0x1498, 0x9ff0, 0x864f, 0xdc0, 0x7b8c, 0x1, 0x0);
        gbc.writeMem(0x704f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1498, gbc.sp());
        EXPECT(0x7051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0340
        gbc.setState(0xacc6, 0x777e, 0x4620, 0x77fd, 0x63ce, 0x9257, 0x1, 0x0);
        gbc.writeMem(0xacc6, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x777e, gbc.sp());
        EXPECT(0xacc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacc6));
        EXPECT(0x34, gbc.readMem(0xacc7));
        // CB 34 0341
        gbc.setState(0xe746, 0x67cf, 0x8b0, 0xcb64, 0x5228, 0xbed5, 0x1, 0x1);
        gbc.writeMem(0xe746, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x67cf, gbc.sp());
        EXPECT(0xe748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe746));
        EXPECT(0x34, gbc.readMem(0xe747));
        // CB 34 0342
        gbc.setState(0x860b, 0xe993, 0xf010, 0xdc80, 0x1021, 0xf54e, 0x0, 0x1);
        gbc.writeMem(0x860b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe993, gbc.sp());
        EXPECT(0x860d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x860b));
        EXPECT(0x34, gbc.readMem(0x860c));
        // CB 34 0343
        gbc.setState(0x321d, 0xfa, 0x1b70, 0xd5ba, 0xc65b, 0xa6d, 0x1, 0x1);
        gbc.writeMem(0x321d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xfa, gbc.sp());
        EXPECT(0x321f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0344
        gbc.setState(0x752b, 0x2e44, 0x6bb0, 0x1fd4, 0xf3a0, 0xeeb2, 0x1, 0x1);
        gbc.writeMem(0x752b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2e44, gbc.sp());
        EXPECT(0x752d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0345
        gbc.setState(0x38b7, 0xd693, 0xf220, 0x7ecc, 0x7181, 0xae6, 0x1, 0x1);
        gbc.writeMem(0x38b7, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd693, gbc.sp());
        EXPECT(0x38b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0346
        gbc.setState(0xb3ca, 0xcf01, 0x96f0, 0x7959, 0x5663, 0x7878, 0x1, 0x0);
        gbc.writeMem(0xb3ca, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xcf01, gbc.sp());
        EXPECT(0xb3cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3ca));
        EXPECT(0x34, gbc.readMem(0xb3cb));
        // CB 34 0347
        gbc.setState(0x2544, 0x58c0, 0xca00, 0x79c5, 0x8706, 0xe9fc, 0x1, 0x0);
        gbc.writeMem(0x2544, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x58c0, gbc.sp());
        EXPECT(0x2546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0348
        gbc.setState(0xe8da, 0x763d, 0x1840, 0xf245, 0x4a2d, 0x555f, 0x0, 0x1);
        gbc.writeMem(0xe8da, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x763d, gbc.sp());
        EXPECT(0xe8dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8da));
        EXPECT(0x34, gbc.readMem(0xe8db));
        // CB 34 0349
        gbc.setState(0x653c, 0x804e, 0xaa80, 0x9fd9, 0x8f92, 0x7928, 0x0, 0x0);
        gbc.writeMem(0x653c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x804e, gbc.sp());
        EXPECT(0x653e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 034A
        gbc.setState(0xed20, 0xb90e, 0x180, 0x1b42, 0xab96, 0x1a96, 0x0, 0x1);
        gbc.writeMem(0xed20, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb90e, gbc.sp());
        EXPECT(0xed22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed20));
        EXPECT(0x34, gbc.readMem(0xed21));
        // CB 34 034B
        gbc.setState(0x9364, 0xca39, 0xf600, 0x8339, 0xe0ae, 0xd759, 0x1, 0x0);
        gbc.writeMem(0x9364, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xca39, gbc.sp());
        EXPECT(0x9366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9364));
        EXPECT(0x34, gbc.readMem(0x9365));
        // CB 34 034C
        gbc.setState(0x938b, 0x386, 0x33e0, 0xb178, 0x6460, 0x1aed, 0x1, 0x0);
        gbc.writeMem(0x938b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x386, gbc.sp());
        EXPECT(0x938d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x938b));
        EXPECT(0x34, gbc.readMem(0x938c));
        // CB 34 034D
        gbc.setState(0xda42, 0x81be, 0xcef0, 0x306d, 0x918f, 0xe94, 0x0, 0x1);
        gbc.writeMem(0xda42, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x81be, gbc.sp());
        EXPECT(0xda44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda42));
        EXPECT(0x34, gbc.readMem(0xda43));
        // CB 34 034E
        gbc.setState(0xa9dc, 0x40f9, 0x2e90, 0xd50b, 0xf113, 0x8725, 0x1, 0x0);
        gbc.writeMem(0xa9dc, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x40f9, gbc.sp());
        EXPECT(0xa9de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9dc));
        EXPECT(0x34, gbc.readMem(0xa9dd));
        // CB 34 034F
        gbc.setState(0x89f6, 0x7171, 0x4ee0, 0xe6bc, 0xb5fc, 0x457d, 0x0, 0x1);
        gbc.writeMem(0x89f6, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7171, gbc.sp());
        EXPECT(0x89f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89f6));
        EXPECT(0x34, gbc.readMem(0x89f7));
        // CB 34 0350
        gbc.setState(0x176e, 0x5308, 0x56b0, 0x47f0, 0x4f09, 0x355c, 0x0, 0x1);
        gbc.writeMem(0x176e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5308, gbc.sp());
        EXPECT(0x1770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0351
        gbc.setState(0xd166, 0x1e1f, 0xbee0, 0xcb13, 0xc287, 0x77e, 0x1, 0x0);
        gbc.writeMem(0xd166, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1e1f, gbc.sp());
        EXPECT(0xd168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd166));
        EXPECT(0x34, gbc.readMem(0xd167));
        // CB 34 0352
        gbc.setState(0x6f47, 0x9b7e, 0x2130, 0xa3d4, 0xa519, 0xd439, 0x1, 0x1);
        gbc.writeMem(0x6f47, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9b7e, gbc.sp());
        EXPECT(0x6f49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0353
        gbc.setState(0x4b6e, 0xef9, 0xab20, 0x3fb4, 0x795a, 0xb2f4, 0x0, 0x0);
        gbc.writeMem(0x4b6e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xef9, gbc.sp());
        EXPECT(0x4b70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0354
        gbc.setState(0x9e0d, 0x4d0c, 0xe0e0, 0x359f, 0x1260, 0x8fe2, 0x0, 0x1);
        gbc.writeMem(0x9e0d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4d0c, gbc.sp());
        EXPECT(0x9e0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e0d));
        EXPECT(0x34, gbc.readMem(0x9e0e));
        // CB 34 0355
        gbc.setState(0xa7d7, 0x1eda, 0xae40, 0x47aa, 0x6f80, 0x7ec4, 0x1, 0x0);
        gbc.writeMem(0xa7d7, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1eda, gbc.sp());
        EXPECT(0xa7d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7d7));
        EXPECT(0x34, gbc.readMem(0xa7d8));
        // CB 34 0356
        gbc.setState(0xd9e, 0x1f64, 0x7350, 0xa734, 0x86aa, 0x8387, 0x0, 0x1);
        gbc.writeMem(0xd9e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1f64, gbc.sp());
        EXPECT(0xda0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0357
        gbc.setState(0x2a7c, 0x2bd7, 0x4430, 0xdd16, 0xbd6c, 0x2149, 0x1, 0x0);
        gbc.writeMem(0x2a7c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2bd7, gbc.sp());
        EXPECT(0x2a7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0358
        gbc.setState(0x73c2, 0xabec, 0xc510, 0x197b, 0xf666, 0xe276, 0x0, 0x0);
        gbc.writeMem(0x73c2, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xabec, gbc.sp());
        EXPECT(0x73c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0359
        gbc.setState(0x23fa, 0x8119, 0x7d70, 0x4ef2, 0x45a6, 0xd046, 0x0, 0x0);
        gbc.writeMem(0x23fa, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8119, gbc.sp());
        EXPECT(0x23fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 035A
        gbc.setState(0x857f, 0xeacc, 0xffb0, 0x4ca6, 0xc3d5, 0xd7cc, 0x1, 0x1);
        gbc.writeMem(0x857f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xeacc, gbc.sp());
        EXPECT(0x8581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x857f));
        EXPECT(0x34, gbc.readMem(0x8580));
        // CB 34 035B
        gbc.setState(0x784e, 0x558f, 0x930, 0xad24, 0xfd4, 0x6c30, 0x0, 0x1);
        gbc.writeMem(0x784e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x558f, gbc.sp());
        EXPECT(0x7850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 035C
        gbc.setState(0xd7db, 0x23ae, 0x9ba0, 0x95f3, 0xed36, 0xdd5c, 0x1, 0x0);
        gbc.writeMem(0xd7db, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x23ae, gbc.sp());
        EXPECT(0xd7dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7db));
        EXPECT(0x34, gbc.readMem(0xd7dc));
        // CB 34 035D
        gbc.setState(0x3b4c, 0x1bb0, 0x1b70, 0xf0c1, 0xde97, 0x9934, 0x1, 0x1);
        gbc.writeMem(0x3b4c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1bb0, gbc.sp());
        EXPECT(0x3b4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 035E
        gbc.setState(0xd5e8, 0xc639, 0x5250, 0x3bc3, 0x3901, 0x3190, 0x1, 0x1);
        gbc.writeMem(0xd5e8, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc639, gbc.sp());
        EXPECT(0xd5ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5e8));
        EXPECT(0x34, gbc.readMem(0xd5e9));
        // CB 34 035F
        gbc.setState(0x9fa5, 0xd292, 0xac80, 0x66a4, 0x8870, 0xcc25, 0x0, 0x1);
        gbc.writeMem(0x9fa5, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd292, gbc.sp());
        EXPECT(0x9fa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fa5));
        EXPECT(0x34, gbc.readMem(0x9fa6));
        // CB 34 0360
        gbc.setState(0x1915, 0xc21d, 0x9bb0, 0xf5b0, 0x5d12, 0x18d4, 0x1, 0x0);
        gbc.writeMem(0x1915, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc21d, gbc.sp());
        EXPECT(0x1917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0361
        gbc.setState(0x8008, 0xfa1e, 0xd1a0, 0x8cd3, 0xe299, 0x40db, 0x1, 0x1);
        gbc.writeMem(0x8008, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xfa1e, gbc.sp());
        EXPECT(0x800a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8008));
        EXPECT(0x34, gbc.readMem(0x8009));
        // CB 34 0362
        gbc.setState(0x550b, 0x77e0, 0x31e0, 0x6343, 0x4a9b, 0x63e6, 0x0, 0x1);
        gbc.writeMem(0x550b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x77e0, gbc.sp());
        EXPECT(0x550d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0363
        gbc.setState(0xb297, 0xfa64, 0x28c0, 0x2d80, 0x350c, 0x1a5e, 0x1, 0x1);
        gbc.writeMem(0xb297, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xfa64, gbc.sp());
        EXPECT(0xb299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb297));
        EXPECT(0x34, gbc.readMem(0xb298));
        // CB 34 0364
        gbc.setState(0x11d7, 0x402a, 0xd250, 0xaa22, 0x3fef, 0x47ee, 0x1, 0x1);
        gbc.writeMem(0x11d7, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x402a, gbc.sp());
        EXPECT(0x11d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0365
        gbc.setState(0xeae3, 0x31f8, 0xd720, 0xd01b, 0x5cbe, 0xd01, 0x0, 0x1);
        gbc.writeMem(0xeae3, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x31f8, gbc.sp());
        EXPECT(0xeae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeae3));
        EXPECT(0x34, gbc.readMem(0xeae4));
        // CB 34 0366
        gbc.setState(0x4445, 0xd850, 0xeb40, 0xcad1, 0x7f2b, 0xe7fb, 0x1, 0x1);
        gbc.writeMem(0x4445, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd850, gbc.sp());
        EXPECT(0x4447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0367
        gbc.setState(0x72cd, 0x8d7d, 0xb70, 0x99ca, 0x5a6c, 0x83da, 0x0, 0x1);
        gbc.writeMem(0x72cd, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8d7d, gbc.sp());
        EXPECT(0x72cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0369
        gbc.setState(0x7d1, 0x6b39, 0x3770, 0x8402, 0xf157, 0x45eb, 0x1, 0x1);
        gbc.writeMem(0x7d1, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6b39, gbc.sp());
        EXPECT(0x7d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 036A
        gbc.setState(0x1cfd, 0xff47, 0x1f20, 0xffd2, 0x554e, 0xfc8f, 0x0, 0x1);
        gbc.writeMem(0x1cfd, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xff47, gbc.sp());
        EXPECT(0x1cff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 036B
        gbc.setState(0x277e, 0xc8d3, 0x6790, 0xb68e, 0xdb12, 0xb496, 0x1, 0x0);
        gbc.writeMem(0x277e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc8d3, gbc.sp());
        EXPECT(0x2780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 036C
        gbc.setState(0xe62a, 0xdd18, 0x43d0, 0xdf04, 0xed3e, 0x9087, 0x0, 0x0);
        gbc.writeMem(0xe62a, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xdd18, gbc.sp());
        EXPECT(0xe62c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe62a));
        EXPECT(0x34, gbc.readMem(0xe62b));
        // CB 34 036E
        gbc.setState(0x34ac, 0x6e55, 0x8500, 0x313a, 0x5d7a, 0x468a, 0x1, 0x1);
        gbc.writeMem(0x34ac, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6e55, gbc.sp());
        EXPECT(0x34ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 036F
        gbc.setState(0x9d02, 0xcc42, 0xb5c0, 0x39a6, 0x233b, 0x6663, 0x1, 0x0);
        gbc.writeMem(0x9d02, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xcc42, gbc.sp());
        EXPECT(0x9d04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d02));
        EXPECT(0x34, gbc.readMem(0x9d03));
        // CB 34 0370
        gbc.setState(0xc726, 0xe958, 0xb000, 0x16d1, 0x445b, 0x1cb, 0x0, 0x0);
        gbc.writeMem(0xc726, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe958, gbc.sp());
        EXPECT(0xc728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc726));
        EXPECT(0x34, gbc.readMem(0xc727));
        // CB 34 0371
        gbc.setState(0xec44, 0xda4e, 0x8850, 0x1ff8, 0xebcf, 0xdd2a, 0x0, 0x1);
        gbc.writeMem(0xec44, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xda4e, gbc.sp());
        EXPECT(0xec46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec44));
        EXPECT(0x34, gbc.readMem(0xec45));
        // CB 34 0372
        gbc.setState(0x83c, 0x7124, 0xc890, 0xcafd, 0x1535, 0xa31b, 0x0, 0x1);
        gbc.writeMem(0x83c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7124, gbc.sp());
        EXPECT(0x83e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0373
        gbc.setState(0x45d9, 0xb1fe, 0x9e10, 0xd5fb, 0x15c4, 0xe430, 0x0, 0x0);
        gbc.writeMem(0x45d9, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb1fe, gbc.sp());
        EXPECT(0x45db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0374
        gbc.setState(0xb989, 0x4ac6, 0x70d0, 0xf95c, 0x8599, 0xe9c6, 0x0, 0x1);
        gbc.writeMem(0xb989, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4ac6, gbc.sp());
        EXPECT(0xb98b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb989));
        EXPECT(0x34, gbc.readMem(0xb98a));
        // CB 34 0375
        gbc.setState(0x6005, 0xfe6a, 0x9e90, 0x63ce, 0x4f40, 0xb822, 0x0, 0x1);
        gbc.writeMem(0x6005, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xfe6a, gbc.sp());
        EXPECT(0x6007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0376
        gbc.setState(0x1334, 0xe9ce, 0x1280, 0xfb67, 0x4036, 0x6cb7, 0x1, 0x0);
        gbc.writeMem(0x1334, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe9ce, gbc.sp());
        EXPECT(0x1336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0377
        gbc.setState(0xe31e, 0x63f3, 0x6cd0, 0x1bc4, 0x3590, 0xeaa3, 0x0, 0x1);
        gbc.writeMem(0xe31e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x63f3, gbc.sp());
        EXPECT(0xe320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe31e));
        EXPECT(0x34, gbc.readMem(0xe31f));
        // CB 34 0378
        gbc.setState(0xe9e6, 0xa0e7, 0xd5a0, 0x55b1, 0x3e06, 0xfd0c, 0x1, 0x1);
        gbc.writeMem(0xe9e6, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa0e7, gbc.sp());
        EXPECT(0xe9e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9e6));
        EXPECT(0x34, gbc.readMem(0xe9e7));
        // CB 34 037A
        gbc.setState(0xb83d, 0x33fe, 0x57a0, 0x4d7e, 0x8942, 0xc4e, 0x1, 0x1);
        gbc.writeMem(0xb83d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x33fe, gbc.sp());
        EXPECT(0xb83f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb83d));
        EXPECT(0x34, gbc.readMem(0xb83e));
        // CB 34 037B
        gbc.setState(0xaa92, 0xc5b4, 0x9040, 0x8a9b, 0xc423, 0x7d70, 0x0, 0x1);
        gbc.writeMem(0xaa92, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc5b4, gbc.sp());
        EXPECT(0xaa94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa92));
        EXPECT(0x34, gbc.readMem(0xaa93));
        // CB 34 037C
        gbc.setState(0x43da, 0x534b, 0x4560, 0x9e9d, 0xab3a, 0x92bd, 0x1, 0x0);
        gbc.writeMem(0x43da, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x534b, gbc.sp());
        EXPECT(0x43dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 037D
        gbc.setState(0xb627, 0x5f7, 0xf8c0, 0x7a45, 0x9157, 0x3753, 0x1, 0x1);
        gbc.writeMem(0xb627, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5f7, gbc.sp());
        EXPECT(0xb629, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb627));
        EXPECT(0x34, gbc.readMem(0xb628));
        // CB 34 037E
        gbc.setState(0x7fe8, 0xd43f, 0xc080, 0x825c, 0x7fb4, 0x43e7, 0x1, 0x0);
        gbc.writeMem(0x7fe8, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd43f, gbc.sp());
        EXPECT(0x7fea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 037F
        gbc.setState(0x6ecb, 0x4e91, 0x71c0, 0x44b0, 0x51bd, 0x940, 0x0, 0x1);
        gbc.writeMem(0x6ecb, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4e91, gbc.sp());
        EXPECT(0x6ecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0380
        gbc.setState(0xbe8f, 0xcac5, 0xbb70, 0x4c6, 0x8960, 0xac2a, 0x0, 0x0);
        gbc.writeMem(0xbe8f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xcac5, gbc.sp());
        EXPECT(0xbe91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe8f));
        EXPECT(0x34, gbc.readMem(0xbe90));
        // CB 34 0381
        gbc.setState(0xcd0e, 0x30fd, 0xad10, 0x5d1, 0xe193, 0xb41b, 0x1, 0x0);
        gbc.writeMem(0xcd0e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x30fd, gbc.sp());
        EXPECT(0xcd10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd0e));
        EXPECT(0x34, gbc.readMem(0xcd0f));
        // CB 34 0382
        gbc.setState(0x767e, 0x858, 0xe090, 0xbb00, 0xd65c, 0xe1e5, 0x1, 0x0);
        gbc.writeMem(0x767e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x858, gbc.sp());
        EXPECT(0x7680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0383
        gbc.setState(0x14d2, 0x9f3e, 0x4750, 0x7197, 0xead8, 0x844b, 0x1, 0x0);
        gbc.writeMem(0x14d2, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9f3e, gbc.sp());
        EXPECT(0x14d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0384
        gbc.setState(0xc188, 0x4daf, 0xa4b0, 0xd0d1, 0xb9aa, 0x3b90, 0x1, 0x0);
        gbc.writeMem(0xc188, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4daf, gbc.sp());
        EXPECT(0xc18a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc188));
        EXPECT(0x34, gbc.readMem(0xc189));
        // CB 34 0386
        gbc.setState(0x57ca, 0x9900, 0x8fe0, 0x6bc5, 0x37c0, 0x1849, 0x1, 0x1);
        gbc.writeMem(0x57ca, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9900, gbc.sp());
        EXPECT(0x57cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0387
        gbc.setState(0x2e10, 0xfcf7, 0xc480, 0x62b7, 0x80a0, 0xce6e, 0x0, 0x0);
        gbc.writeMem(0x2e10, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xfcf7, gbc.sp());
        EXPECT(0x2e12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0388
        gbc.setState(0xa75d, 0xe312, 0xf1b0, 0xe091, 0xdf50, 0x78e3, 0x0, 0x1);
        gbc.writeMem(0xa75d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe312, gbc.sp());
        EXPECT(0xa75f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa75d));
        EXPECT(0x34, gbc.readMem(0xa75e));
        // CB 34 0389
        gbc.setState(0xb964, 0x8722, 0xe510, 0xd36e, 0xb0f1, 0xd113, 0x1, 0x0);
        gbc.writeMem(0xb964, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8722, gbc.sp());
        EXPECT(0xb966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb964));
        EXPECT(0x34, gbc.readMem(0xb965));
        // CB 34 038A
        gbc.setState(0x8adb, 0xa2c3, 0xcee0, 0x3f0d, 0xbdaf, 0x72b8, 0x1, 0x1);
        gbc.writeMem(0x8adb, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa2c3, gbc.sp());
        EXPECT(0x8add, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8adb));
        EXPECT(0x34, gbc.readMem(0x8adc));
        // CB 34 038B
        gbc.setState(0x9043, 0x97d9, 0x30e0, 0xe294, 0x6cec, 0xf85c, 0x0, 0x1);
        gbc.writeMem(0x9043, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x97d9, gbc.sp());
        EXPECT(0x9045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9043));
        EXPECT(0x34, gbc.readMem(0x9044));
        // CB 34 038C
        gbc.setState(0x8e4c, 0x1884, 0x3110, 0x3db9, 0x8d95, 0x574c, 0x1, 0x1);
        gbc.writeMem(0x8e4c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1884, gbc.sp());
        EXPECT(0x8e4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e4c));
        EXPECT(0x34, gbc.readMem(0x8e4d));
        // CB 34 038D
        gbc.setState(0x5a9, 0xfcc0, 0xff20, 0xb1ec, 0x5f12, 0xaa20, 0x0, 0x1);
        gbc.writeMem(0x5a9, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xfcc0, gbc.sp());
        EXPECT(0x5ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 038E
        gbc.setState(0x4c51, 0xbe, 0x52c0, 0x54b4, 0xec6f, 0xf981, 0x0, 0x0);
        gbc.writeMem(0x4c51, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xbe, gbc.sp());
        EXPECT(0x4c53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0390
        gbc.setState(0x7b32, 0xf891, 0xc480, 0x7a9c, 0xe570, 0x92c4, 0x1, 0x1);
        gbc.writeMem(0x7b32, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf891, gbc.sp());
        EXPECT(0x7b34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0392
        gbc.setState(0x79d0, 0x3a60, 0xa020, 0xfadf, 0xaca2, 0xca51, 0x0, 0x0);
        gbc.writeMem(0x79d0, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3a60, gbc.sp());
        EXPECT(0x79d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0393
        gbc.setState(0x607b, 0x38b2, 0xc5e0, 0xe34, 0x764b, 0x2a0d, 0x0, 0x1);
        gbc.writeMem(0x607b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x38b2, gbc.sp());
        EXPECT(0x607d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0394
        gbc.setState(0x9332, 0x9cad, 0xf7d0, 0x14fb, 0x536c, 0x5c22, 0x1, 0x0);
        gbc.writeMem(0x9332, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9cad, gbc.sp());
        EXPECT(0x9334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9332));
        EXPECT(0x34, gbc.readMem(0x9333));
        // CB 34 0395
        gbc.setState(0x3604, 0xbfe5, 0x8ef0, 0x1488, 0x106e, 0x4d51, 0x1, 0x0);
        gbc.writeMem(0x3604, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xbfe5, gbc.sp());
        EXPECT(0x3606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0396
        gbc.setState(0xc1b2, 0x7efc, 0x8310, 0xdf69, 0xcfee, 0xa148, 0x0, 0x0);
        gbc.writeMem(0xc1b2, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7efc, gbc.sp());
        EXPECT(0xc1b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1b2));
        EXPECT(0x34, gbc.readMem(0xc1b3));
        // CB 34 0397
        gbc.setState(0x1ad5, 0xbb45, 0x29e0, 0x17b2, 0xd982, 0xd380, 0x1, 0x1);
        gbc.writeMem(0x1ad5, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xbb45, gbc.sp());
        EXPECT(0x1ad7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 0398
        gbc.setState(0xa69c, 0x7fda, 0x1dc0, 0x24ee, 0x977d, 0x2ce2, 0x1, 0x0);
        gbc.writeMem(0xa69c, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7fda, gbc.sp());
        EXPECT(0xa69e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa69c));
        EXPECT(0x34, gbc.readMem(0xa69d));
        // CB 34 0399
        gbc.setState(0x391e, 0x1a93, 0xb460, 0x657a, 0xe829, 0x8bcc, 0x1, 0x1);
        gbc.writeMem(0x391e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1a93, gbc.sp());
        EXPECT(0x3920, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 039A
        gbc.setState(0xfe0, 0xed6a, 0xa160, 0xe74a, 0xe204, 0xdabd, 0x1, 0x1);
        gbc.writeMem(0xfe0, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xed6a, gbc.sp());
        EXPECT(0xfe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 039B
        gbc.setState(0xa622, 0x694f, 0x3350, 0x9bbf, 0x890c, 0x2fa6, 0x0, 0x0);
        gbc.writeMem(0xa622, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x694f, gbc.sp());
        EXPECT(0xa624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa622));
        EXPECT(0x34, gbc.readMem(0xa623));
        // CB 34 039C
        gbc.setState(0x6ca4, 0x676e, 0xe2e0, 0xe5ea, 0xbe84, 0x7eab, 0x0, 0x1);
        gbc.writeMem(0x6ca4, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x676e, gbc.sp());
        EXPECT(0x6ca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 039D
        gbc.setState(0x844f, 0x5a63, 0x3510, 0x5f63, 0xeea0, 0x2def, 0x1, 0x0);
        gbc.writeMem(0x844f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x5a63, gbc.sp());
        EXPECT(0x8451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x844f));
        EXPECT(0x34, gbc.readMem(0x8450));
        // CB 34 039E
        gbc.setState(0x4492, 0x2464, 0x5700, 0x29d8, 0x50ec, 0x7afc, 0x0, 0x1);
        gbc.writeMem(0x4492, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2464, gbc.sp());
        EXPECT(0x4494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 039F
        gbc.setState(0x7d19, 0xe065, 0x5d90, 0xc56c, 0x5a0b, 0x4f69, 0x1, 0x0);
        gbc.writeMem(0x7d19, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe065, gbc.sp());
        EXPECT(0x7d1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03A0
        gbc.setState(0xfde, 0x5147, 0x3ae0, 0x8305, 0x9243, 0xa14e, 0x0, 0x0);
        gbc.writeMem(0xfde, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5147, gbc.sp());
        EXPECT(0xfe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03A1
        gbc.setState(0x6334, 0xb574, 0xa9b0, 0x3dfc, 0xda8c, 0x4bbe, 0x1, 0x0);
        gbc.writeMem(0x6334, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb574, gbc.sp());
        EXPECT(0x6336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03A2
        gbc.setState(0x4b6d, 0x7bd2, 0xf3e0, 0xd520, 0x5f87, 0x74d8, 0x1, 0x0);
        gbc.writeMem(0x4b6d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7bd2, gbc.sp());
        EXPECT(0x4b6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03A3
        gbc.setState(0xb8e1, 0xcb91, 0x4e90, 0x281a, 0x70ab, 0x44f1, 0x0, 0x1);
        gbc.writeMem(0xb8e1, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xcb91, gbc.sp());
        EXPECT(0xb8e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8e1));
        EXPECT(0x34, gbc.readMem(0xb8e2));
        // CB 34 03A4
        gbc.setState(0x4538, 0x3253, 0x4370, 0x14a0, 0x38ca, 0x1436, 0x1, 0x0);
        gbc.writeMem(0x4538, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3253, gbc.sp());
        EXPECT(0x453a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03A5
        gbc.setState(0x8239, 0xd25c, 0x3640, 0xf813, 0xc4e8, 0x717f, 0x0, 0x1);
        gbc.writeMem(0x8239, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd25c, gbc.sp());
        EXPECT(0x823b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8239));
        EXPECT(0x34, gbc.readMem(0x823a));
        // CB 34 03A6
        gbc.setState(0xd64, 0xebed, 0xb0a0, 0xf48c, 0xdad5, 0xf68b, 0x0, 0x1);
        gbc.writeMem(0xd64, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xebed, gbc.sp());
        EXPECT(0xd66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03A7
        gbc.setState(0xb39f, 0xc37a, 0xc730, 0x4171, 0xbe14, 0x9e1e, 0x0, 0x0);
        gbc.writeMem(0xb39f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc37a, gbc.sp());
        EXPECT(0xb3a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb39f));
        EXPECT(0x34, gbc.readMem(0xb3a0));
        // CB 34 03A8
        gbc.setState(0x6b61, 0xb2a2, 0x53e0, 0xbdc1, 0x780, 0xb32d, 0x0, 0x1);
        gbc.writeMem(0x6b61, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb2a2, gbc.sp());
        EXPECT(0x6b63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03A9
        gbc.setState(0xc3cf, 0xcd2a, 0xaba0, 0x5eec, 0x1832, 0xd8da, 0x1, 0x0);
        gbc.writeMem(0xc3cf, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xcd2a, gbc.sp());
        EXPECT(0xc3d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3cf));
        EXPECT(0x34, gbc.readMem(0xc3d0));
        // CB 34 03AA
        gbc.setState(0xcb06, 0x6456, 0xdc80, 0xb7dd, 0xc2f9, 0x9e38, 0x1, 0x0);
        gbc.writeMem(0xcb06, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6456, gbc.sp());
        EXPECT(0xcb08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb06));
        EXPECT(0x34, gbc.readMem(0xcb07));
        // CB 34 03AB
        gbc.setState(0x8b5e, 0x10c, 0x7d0, 0x125, 0x28c, 0x6711, 0x0, 0x0);
        gbc.writeMem(0x8b5e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x10c, gbc.sp());
        EXPECT(0x8b60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b5e));
        EXPECT(0x34, gbc.readMem(0x8b5f));
        // CB 34 03AC
        gbc.setState(0xcb43, 0x7e52, 0x7880, 0x8cf7, 0x40b4, 0x8b20, 0x0, 0x0);
        gbc.writeMem(0xcb43, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7e52, gbc.sp());
        EXPECT(0xcb45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb43));
        EXPECT(0x34, gbc.readMem(0xcb44));
        // CB 34 03AD
        gbc.setState(0xd3ae, 0xe8a7, 0xc970, 0xc8e3, 0x8118, 0xbdee, 0x1, 0x0);
        gbc.writeMem(0xd3ae, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe8a7, gbc.sp());
        EXPECT(0xd3b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ae));
        EXPECT(0x34, gbc.readMem(0xd3af));
        // CB 34 03AE
        gbc.setState(0x69d3, 0x922, 0xe130, 0x71d0, 0x7591, 0x596c, 0x0, 0x0);
        gbc.writeMem(0x69d3, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x922, gbc.sp());
        EXPECT(0x69d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03AF
        gbc.setState(0xe1e9, 0x813a, 0xfe20, 0x6fff, 0xd05b, 0x3b43, 0x0, 0x0);
        gbc.writeMem(0xe1e9, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x813a, gbc.sp());
        EXPECT(0xe1eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1e9));
        EXPECT(0x34, gbc.readMem(0xe1ea));
        // CB 34 03B0
        gbc.setState(0x7260, 0xbd97, 0x2c20, 0xd001, 0x6cf5, 0x824c, 0x1, 0x0);
        gbc.writeMem(0x7260, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xbd97, gbc.sp());
        EXPECT(0x7262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03B1
        gbc.setState(0x2d47, 0xcd8, 0x2df0, 0x2c8d, 0xd464, 0x5aa7, 0x1, 0x1);
        gbc.writeMem(0x2d47, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xcd8, gbc.sp());
        EXPECT(0x2d49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03B2
        gbc.setState(0xbd32, 0x5663, 0xf210, 0xad18, 0x27d1, 0xbf5c, 0x0, 0x0);
        gbc.writeMem(0xbd32, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5663, gbc.sp());
        EXPECT(0xbd34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd32));
        EXPECT(0x34, gbc.readMem(0xbd33));
        // CB 34 03B3
        gbc.setState(0x2c38, 0x4c30, 0xcc00, 0x7572, 0x64d3, 0x3d7b, 0x0, 0x0);
        gbc.writeMem(0x2c38, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4c30, gbc.sp());
        EXPECT(0x2c3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03B4
        gbc.setState(0x82e2, 0x4212, 0x23c0, 0x8105, 0x895d, 0x7ca9, 0x1, 0x1);
        gbc.writeMem(0x82e2, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4212, gbc.sp());
        EXPECT(0x82e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82e2));
        EXPECT(0x34, gbc.readMem(0x82e3));
        // CB 34 03B5
        gbc.setState(0x6fe0, 0x4074, 0xdbb0, 0x81ef, 0xa290, 0xeb50, 0x1, 0x0);
        gbc.writeMem(0x6fe0, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4074, gbc.sp());
        EXPECT(0x6fe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03B6
        gbc.setState(0x3027, 0xe7ae, 0x2830, 0x7392, 0x410c, 0x7762, 0x1, 0x0);
        gbc.writeMem(0x3027, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe7ae, gbc.sp());
        EXPECT(0x3029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03B7
        gbc.setState(0x8f96, 0x4906, 0x37e0, 0xe1d9, 0x5fcb, 0x8c98, 0x1, 0x1);
        gbc.writeMem(0x8f96, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4906, gbc.sp());
        EXPECT(0x8f98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f96));
        EXPECT(0x34, gbc.readMem(0x8f97));
        // CB 34 03B8
        gbc.setState(0x2d80, 0x704d, 0xa4c0, 0xb4f6, 0x383b, 0x9ebe, 0x1, 0x0);
        gbc.writeMem(0x2d80, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x704d, gbc.sp());
        EXPECT(0x2d82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03B9
        gbc.setState(0x7bc3, 0x5805, 0x8fc0, 0xa997, 0xd528, 0x116c, 0x0, 0x0);
        gbc.writeMem(0x7bc3, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5805, gbc.sp());
        EXPECT(0x7bc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03BA
        gbc.setState(0xb255, 0xeccb, 0x6ff0, 0x3903, 0x7d78, 0x97ca, 0x1, 0x0);
        gbc.writeMem(0xb255, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xeccb, gbc.sp());
        EXPECT(0xb257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb255));
        EXPECT(0x34, gbc.readMem(0xb256));
        // CB 34 03BB
        gbc.setState(0x4e35, 0xb846, 0x8890, 0xeab8, 0xa43d, 0xefb0, 0x0, 0x0);
        gbc.writeMem(0x4e35, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb846, gbc.sp());
        EXPECT(0x4e37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03BC
        gbc.setState(0x9c2d, 0x8e87, 0x82e0, 0x7c1, 0x87d9, 0xf5fe, 0x1, 0x1);
        gbc.writeMem(0x9c2d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8e87, gbc.sp());
        EXPECT(0x9c2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c2d));
        EXPECT(0x34, gbc.readMem(0x9c2e));
        // CB 34 03BD
        gbc.setState(0x1142, 0x4549, 0xcb30, 0x5881, 0x7cf8, 0x97c7, 0x0, 0x1);
        gbc.writeMem(0x1142, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4549, gbc.sp());
        EXPECT(0x1144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03BE
        gbc.setState(0x54e7, 0xef04, 0xb7d0, 0xd58e, 0xc65c, 0x8ddf, 0x0, 0x0);
        gbc.writeMem(0x54e7, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xef04, gbc.sp());
        EXPECT(0x54e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03BF
        gbc.setState(0x9cc3, 0xeddd, 0xa500, 0x31d5, 0x674f, 0xe586, 0x0, 0x0);
        gbc.writeMem(0x9cc3, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xeddd, gbc.sp());
        EXPECT(0x9cc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cc3));
        EXPECT(0x34, gbc.readMem(0x9cc4));
        // CB 34 03C0
        gbc.setState(0x88bc, 0x85a0, 0xf0f0, 0x259c, 0xb80a, 0xa34d, 0x1, 0x1);
        gbc.writeMem(0x88bc, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x85a0, gbc.sp());
        EXPECT(0x88be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88bc));
        EXPECT(0x34, gbc.readMem(0x88bd));
        // CB 34 03C1
        gbc.setState(0x7deb, 0x942c, 0x1800, 0x3507, 0x6f7a, 0x565a, 0x1, 0x0);
        gbc.writeMem(0x7deb, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x942c, gbc.sp());
        EXPECT(0x7ded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03C2
        gbc.setState(0xa15b, 0x556e, 0xbd50, 0xe875, 0x3bff, 0xc51d, 0x0, 0x0);
        gbc.writeMem(0xa15b, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x556e, gbc.sp());
        EXPECT(0xa15d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa15b));
        EXPECT(0x34, gbc.readMem(0xa15c));
        // CB 34 03C3
        gbc.setState(0xb79d, 0x82e9, 0xd070, 0x9979, 0xc93e, 0x35aa, 0x0, 0x1);
        gbc.writeMem(0xb79d, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x82e9, gbc.sp());
        EXPECT(0xb79f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb79d));
        EXPECT(0x34, gbc.readMem(0xb79e));
        // CB 34 03C4
        gbc.setState(0x3106, 0xa628, 0x55d0, 0x7cfc, 0xb80a, 0xf3e9, 0x1, 0x1);
        gbc.writeMem(0x3106, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa628, gbc.sp());
        EXPECT(0x3108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03C5
        gbc.setState(0xdc95, 0x7fd, 0xd190, 0xb636, 0x1d98, 0x3d2d, 0x0, 0x1);
        gbc.writeMem(0xdc95, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7fd, gbc.sp());
        EXPECT(0xdc97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc95));
        EXPECT(0x34, gbc.readMem(0xdc96));
        // CB 34 03C6
        gbc.setState(0x8774, 0x8787, 0x17a0, 0x15bb, 0x45e4, 0x2ea8, 0x1, 0x1);
        gbc.writeMem(0x8774, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8787, gbc.sp());
        EXPECT(0x8776, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8774));
        EXPECT(0x34, gbc.readMem(0x8775));
        // CB 34 03C7
        gbc.setState(0xc4aa, 0x8b06, 0x50, 0xf150, 0x4f01, 0xd62f, 0x1, 0x1);
        gbc.writeMem(0xc4aa, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8b06, gbc.sp());
        EXPECT(0xc4ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4aa));
        EXPECT(0x34, gbc.readMem(0xc4ab));
        // CB 34 03C8
        gbc.setState(0xe77f, 0xedfa, 0xd880, 0x7124, 0x7597, 0xe430, 0x1, 0x0);
        gbc.writeMem(0xe77f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xedfa, gbc.sp());
        EXPECT(0xe781, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe77f));
        EXPECT(0x34, gbc.readMem(0xe780));
        // CB 34 03C9
        gbc.setState(0xb537, 0x3a3b, 0xdc50, 0x2a14, 0xeffa, 0x216d, 0x0, 0x1);
        gbc.writeMem(0xb537, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3a3b, gbc.sp());
        EXPECT(0xb539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb537));
        EXPECT(0x34, gbc.readMem(0xb538));
        // CB 34 03CA
        gbc.setState(0x368e, 0xdf46, 0x5af0, 0xb27d, 0xeaa6, 0xef0b, 0x1, 0x1);
        gbc.writeMem(0x368e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xdf46, gbc.sp());
        EXPECT(0x3690, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03CB
        gbc.setState(0x941e, 0xaa4f, 0x6ee0, 0x6cf8, 0x8137, 0x2932, 0x0, 0x1);
        gbc.writeMem(0x941e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xaa4f, gbc.sp());
        EXPECT(0x9420, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x941e));
        EXPECT(0x34, gbc.readMem(0x941f));
        // CB 34 03CC
        gbc.setState(0xa716, 0x625b, 0x58f0, 0xb3c7, 0xa1ef, 0x9345, 0x1, 0x1);
        gbc.writeMem(0xa716, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x625b, gbc.sp());
        EXPECT(0xa718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa716));
        EXPECT(0x34, gbc.readMem(0xa717));
        // CB 34 03CD
        gbc.setState(0x770f, 0x97da, 0xdff0, 0xc93e, 0xad3f, 0x86c4, 0x0, 0x0);
        gbc.writeMem(0x770f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x97da, gbc.sp());
        EXPECT(0x7711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03CE
        gbc.setState(0xaec5, 0xf1c9, 0x2000, 0x4bc6, 0x350e, 0x6ba0, 0x1, 0x0);
        gbc.writeMem(0xaec5, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf1c9, gbc.sp());
        EXPECT(0xaec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaec5));
        EXPECT(0x34, gbc.readMem(0xaec6));
        // CB 34 03CF
        gbc.setState(0xd0dd, 0xff6, 0x8e90, 0x5ba7, 0xc140, 0xbbc, 0x0, 0x1);
        gbc.writeMem(0xd0dd, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xff6, gbc.sp());
        EXPECT(0xd0df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0dd));
        EXPECT(0x34, gbc.readMem(0xd0de));
        // CB 34 03D1
        gbc.setState(0x5168, 0xccf8, 0xdb40, 0xab9a, 0xeab, 0x4a1f, 0x1, 0x0);
        gbc.writeMem(0x5168, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xccf8, gbc.sp());
        EXPECT(0x516a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03D2
        gbc.setState(0x6556, 0xffdf, 0x8b10, 0x38af, 0x5ff2, 0xd398, 0x1, 0x1);
        gbc.writeMem(0x6556, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xffdf, gbc.sp());
        EXPECT(0x6558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03D3
        gbc.setState(0xa1be, 0xcbd8, 0x5c30, 0xc631, 0xd9ef, 0xef5f, 0x0, 0x1);
        gbc.writeMem(0xa1be, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xcbd8, gbc.sp());
        EXPECT(0xa1c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1be));
        EXPECT(0x34, gbc.readMem(0xa1bf));
        // CB 34 03D4
        gbc.setState(0x586e, 0x3e76, 0x4150, 0x9afe, 0xfebb, 0x7109, 0x1, 0x1);
        gbc.writeMem(0x586e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3e76, gbc.sp());
        EXPECT(0x5870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03D5
        gbc.setState(0x2e6f, 0x23a8, 0x6f80, 0xc616, 0xdb79, 0x8ca8, 0x0, 0x1);
        gbc.writeMem(0x2e6f, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x23a8, gbc.sp());
        EXPECT(0x2e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03D6
        gbc.setState(0x5d2a, 0xa36, 0xbce0, 0xe548, 0xdcc5, 0x752f, 0x0, 0x1);
        gbc.writeMem(0x5d2a, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa36, gbc.sp());
        EXPECT(0x5d2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03D7
        gbc.setState(0xec11, 0xf5b1, 0x5c00, 0x2225, 0xc4a1, 0xef61, 0x0, 0x1);
        gbc.writeMem(0xec11, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf5b1, gbc.sp());
        EXPECT(0xec13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec11));
        EXPECT(0x34, gbc.readMem(0xec12));
        // CB 34 03D8
        gbc.setState(0x1de, 0xe87c, 0xd780, 0xcc6f, 0x91f2, 0xcbb2, 0x1, 0x0);
        gbc.writeMem(0x1de, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe87c, gbc.sp());
        EXPECT(0x1e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03D9
        gbc.setState(0x4670, 0xe4f7, 0x98c0, 0x315e, 0xd58c, 0x333f, 0x1, 0x1);
        gbc.writeMem(0x4670, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe4f7, gbc.sp());
        EXPECT(0x4672, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03DB
        gbc.setState(0x9c40, 0xa646, 0x8c40, 0xe914, 0x4ef5, 0x3db5, 0x1, 0x1);
        gbc.writeMem(0x9c40, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa646, gbc.sp());
        EXPECT(0x9c42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c40));
        EXPECT(0x34, gbc.readMem(0x9c41));
        // CB 34 03DC
        gbc.setState(0xa38e, 0xd6d2, 0xd3d0, 0x730e, 0x5759, 0x37ce, 0x1, 0x0);
        gbc.writeMem(0xa38e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd6d2, gbc.sp());
        EXPECT(0xa390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa38e));
        EXPECT(0x34, gbc.readMem(0xa38f));
        // CB 34 03DD
        gbc.setState(0x6b72, 0x5572, 0x6560, 0x63ec, 0x560f, 0x794c, 0x1, 0x0);
        gbc.writeMem(0x6b72, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5572, gbc.sp());
        EXPECT(0x6b74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03DE
        gbc.setState(0x37d4, 0x38c4, 0x970, 0xf0fc, 0x6f0d, 0xb34e, 0x0, 0x1);
        gbc.writeMem(0x37d4, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x38c4, gbc.sp());
        EXPECT(0x37d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03DF
        gbc.setState(0xd4cc, 0x60f7, 0x36d0, 0x5be3, 0xde39, 0xeef, 0x0, 0x0);
        gbc.writeMem(0xd4cc, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x60f7, gbc.sp());
        EXPECT(0xd4ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4cc));
        EXPECT(0x34, gbc.readMem(0xd4cd));
        // CB 34 03E0
        gbc.setState(0x5737, 0x7267, 0x1a60, 0xb90b, 0x8903, 0x8c7e, 0x0, 0x0);
        gbc.writeMem(0x5737, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7267, gbc.sp());
        EXPECT(0x5739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03E1
        gbc.setState(0xa6a, 0x17cb, 0xe630, 0x206f, 0x120e, 0xc8d8, 0x1, 0x1);
        gbc.writeMem(0xa6a, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x17cb, gbc.sp());
        EXPECT(0xa6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03E2
        gbc.setState(0x15b3, 0xf7a6, 0x2900, 0x20a9, 0x5b60, 0x9d16, 0x0, 0x0);
        gbc.writeMem(0x15b3, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf7a6, gbc.sp());
        EXPECT(0x15b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03E3
        gbc.setState(0xddcb, 0x92e, 0xf870, 0x47ba, 0x4785, 0x83b2, 0x0, 0x1);
        gbc.writeMem(0xddcb, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x92e, gbc.sp());
        EXPECT(0xddcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddcb));
        EXPECT(0x34, gbc.readMem(0xddcc));
        // CB 34 03E4
        gbc.setState(0x1e7e, 0x5096, 0xfeb0, 0x9fb2, 0x89c0, 0x287a, 0x1, 0x1);
        gbc.writeMem(0x1e7e, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5096, gbc.sp());
        EXPECT(0x1e80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 34 03E5
        gbc.setState(0xcf08, 0x8bfe, 0x1420, 0x9b98, 0x5bec, 0xe65e, 0x1, 0x0);
        gbc.writeMem(0xcf08, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8bfe, gbc.sp());
        EXPECT(0xcf0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf08));
        EXPECT(0x34, gbc.readMem(0xcf09));
        // CB 34 03E6
        gbc.setState(0x1bf3, 0xdea6, 0x4c70, 0x3df5, 0x33d0, 0x90c5, 0x0, 0x0);
        gbc.writeMem(0x1bf3, { 0xcb, 0x34 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xdea6, gbc.sp());
        EXPECT(0x1bf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
