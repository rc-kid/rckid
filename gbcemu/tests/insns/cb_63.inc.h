    TEST(gbcemu, opcode_cb_63) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 63 0000
        gbc.setState(0x643b, 0xed19, 0x370, 0x30b4, 0xe4a3, 0xe614, 0x0, 0x1);
        gbc.writeMem(0x643b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xed19, gbc.sp());
        EXPECT(0x643d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0001
        gbc.setState(0x21, 0xfa32, 0x9f40, 0xf39f, 0x54dd, 0xcfb1, 0x0, 0x0);
        gbc.writeMem(0x21, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xfa32, gbc.sp());
        EXPECT(0x23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0002
        gbc.setState(0xba0f, 0xbbce, 0x1270, 0xc685, 0x939b, 0xa14e, 0x1, 0x0);
        gbc.writeMem(0xba0f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xbbce, gbc.sp());
        EXPECT(0xba11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba0f));
        EXPECT(0x63, gbc.readMem(0xba10));
        // CB 63 0003
        gbc.setState(0x4d74, 0x4494, 0xa700, 0x4a55, 0xefb1, 0x835d, 0x0, 0x0);
        gbc.writeMem(0x4d74, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4494, gbc.sp());
        EXPECT(0x4d76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0004
        gbc.setState(0xa85e, 0xffa2, 0xe70, 0xfeba, 0xe99f, 0xa6db, 0x0, 0x0);
        gbc.writeMem(0xa85e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xffa2, gbc.sp());
        EXPECT(0xa860, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa85e));
        EXPECT(0x63, gbc.readMem(0xa85f));
        // CB 63 0005
        gbc.setState(0x3ffd, 0xe033, 0x8490, 0x9523, 0x26f5, 0x145b, 0x1, 0x0);
        gbc.writeMem(0x3ffd, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe033, gbc.sp());
        EXPECT(0x3fff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0006
        gbc.setState(0x68fd, 0x603, 0xa920, 0xc98f, 0x8648, 0xd5d4, 0x0, 0x1);
        gbc.writeMem(0x68fd, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x603, gbc.sp());
        EXPECT(0x68ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0007
        gbc.setState(0x7082, 0xc330, 0xf430, 0x396a, 0xf38c, 0x8999, 0x1, 0x1);
        gbc.writeMem(0x7082, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc330, gbc.sp());
        EXPECT(0x7084, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0008
        gbc.setState(0x21ef, 0x49ee, 0x5120, 0xf312, 0xfdc2, 0xd06e, 0x1, 0x0);
        gbc.writeMem(0x21ef, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x49ee, gbc.sp());
        EXPECT(0x21f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0009
        gbc.setState(0x5bbb, 0xaee2, 0x3780, 0x95b5, 0x10c4, 0x50d4, 0x0, 0x1);
        gbc.writeMem(0x5bbb, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xaee2, gbc.sp());
        EXPECT(0x5bbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 000B
        gbc.setState(0x1d3e, 0x2419, 0x1a50, 0x9cbb, 0x2d69, 0xc406, 0x1, 0x1);
        gbc.writeMem(0x1d3e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2419, gbc.sp());
        EXPECT(0x1d40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 000C
        gbc.setState(0x83c5, 0x6ebd, 0xdeb0, 0x2083, 0x385c, 0xf6a, 0x0, 0x1);
        gbc.writeMem(0x83c5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6ebd, gbc.sp());
        EXPECT(0x83c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83c5));
        EXPECT(0x63, gbc.readMem(0x83c6));
        // CB 63 000D
        gbc.setState(0x8017, 0x7cb8, 0xd860, 0xd810, 0x264b, 0xc09e, 0x0, 0x0);
        gbc.writeMem(0x8017, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7cb8, gbc.sp());
        EXPECT(0x8019, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8017));
        EXPECT(0x63, gbc.readMem(0x8018));
        // CB 63 000E
        gbc.setState(0xdd91, 0x422c, 0x6ff0, 0x987a, 0x68f5, 0x14b4, 0x1, 0x0);
        gbc.writeMem(0xdd91, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x422c, gbc.sp());
        EXPECT(0xdd93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd91));
        EXPECT(0x63, gbc.readMem(0xdd92));
        // CB 63 0010
        gbc.setState(0xd298, 0xdd4f, 0x2230, 0xcc29, 0x3210, 0x686b, 0x0, 0x1);
        gbc.writeMem(0xd298, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xdd4f, gbc.sp());
        EXPECT(0xd29a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd298));
        EXPECT(0x63, gbc.readMem(0xd299));
        // CB 63 0011
        gbc.setState(0xde81, 0xe6bf, 0xe7e0, 0x5336, 0xcf05, 0xc583, 0x0, 0x0);
        gbc.writeMem(0xde81, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe6bf, gbc.sp());
        EXPECT(0xde83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde81));
        EXPECT(0x63, gbc.readMem(0xde82));
        // CB 63 0012
        gbc.setState(0xa8ca, 0x2479, 0x97b0, 0xdb42, 0x4f8b, 0xae1a, 0x0, 0x1);
        gbc.writeMem(0xa8ca, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2479, gbc.sp());
        EXPECT(0xa8cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8ca));
        EXPECT(0x63, gbc.readMem(0xa8cb));
        // CB 63 0013
        gbc.setState(0xd07e, 0x2d2f, 0x7400, 0x8347, 0x50ac, 0x2978, 0x1, 0x0);
        gbc.writeMem(0xd07e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2d2f, gbc.sp());
        EXPECT(0xd080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd07e));
        EXPECT(0x63, gbc.readMem(0xd07f));
        // CB 63 0014
        gbc.setState(0x6dbd, 0x391e, 0x38e0, 0x10ea, 0x7e48, 0xb79, 0x1, 0x0);
        gbc.writeMem(0x6dbd, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x391e, gbc.sp());
        EXPECT(0x6dbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0015
        gbc.setState(0x503a, 0x77ea, 0x1f00, 0x6b81, 0x8c96, 0x9fb0, 0x0, 0x1);
        gbc.writeMem(0x503a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x77ea, gbc.sp());
        EXPECT(0x503c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0016
        gbc.setState(0xdd39, 0xcec9, 0x51a0, 0x3990, 0x21d3, 0xd5ed, 0x0, 0x1);
        gbc.writeMem(0xdd39, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xcec9, gbc.sp());
        EXPECT(0xdd3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd39));
        EXPECT(0x63, gbc.readMem(0xdd3a));
        // CB 63 0017
        gbc.setState(0xdd81, 0xd50b, 0x5100, 0x566f, 0x413a, 0x7c19, 0x1, 0x0);
        gbc.writeMem(0xdd81, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd50b, gbc.sp());
        EXPECT(0xdd83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd81));
        EXPECT(0x63, gbc.readMem(0xdd82));
        // CB 63 0018
        gbc.setState(0x4f3e, 0x84c7, 0x2330, 0x3d2, 0x6202, 0xaae8, 0x0, 0x0);
        gbc.writeMem(0x4f3e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x84c7, gbc.sp());
        EXPECT(0x4f40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0019
        gbc.setState(0xcc19, 0x2773, 0x6d90, 0xb0a4, 0x5562, 0x662c, 0x0, 0x1);
        gbc.writeMem(0xcc19, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2773, gbc.sp());
        EXPECT(0xcc1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc19));
        EXPECT(0x63, gbc.readMem(0xcc1a));
        // CB 63 001A
        gbc.setState(0xef44, 0xd118, 0x10, 0x20e4, 0xff9e, 0x22f0, 0x0, 0x0);
        gbc.writeMem(0xef44, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd118, gbc.sp());
        EXPECT(0xef46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef44));
        EXPECT(0x63, gbc.readMem(0xef45));
        // CB 63 001B
        gbc.setState(0x855, 0xf3b9, 0x7480, 0x5b6c, 0x9eba, 0x37ac, 0x1, 0x1);
        gbc.writeMem(0x855, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf3b9, gbc.sp());
        EXPECT(0x857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 001C
        gbc.setState(0xd262, 0x4716, 0xe460, 0x2f9, 0xe7f8, 0xadd3, 0x0, 0x0);
        gbc.writeMem(0xd262, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4716, gbc.sp());
        EXPECT(0xd264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd262));
        EXPECT(0x63, gbc.readMem(0xd263));
        // CB 63 001D
        gbc.setState(0xdf56, 0xad56, 0x73c0, 0xdb78, 0x7b4c, 0x2b4c, 0x0, 0x0);
        gbc.writeMem(0xdf56, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xad56, gbc.sp());
        EXPECT(0xdf58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf56));
        EXPECT(0x63, gbc.readMem(0xdf57));
        // CB 63 001E
        gbc.setState(0xa57, 0x99b4, 0x9560, 0x2474, 0x4b7c, 0xccbb, 0x1, 0x0);
        gbc.writeMem(0xa57, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x99b4, gbc.sp());
        EXPECT(0xa59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 001F
        gbc.setState(0xa99, 0x2cfc, 0xac40, 0xfb8b, 0x4029, 0xf581, 0x0, 0x1);
        gbc.writeMem(0xa99, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2cfc, gbc.sp());
        EXPECT(0xa9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0020
        gbc.setState(0xb603, 0xa887, 0x2620, 0x4833, 0x1b9a, 0x5d9f, 0x1, 0x0);
        gbc.writeMem(0xb603, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa887, gbc.sp());
        EXPECT(0xb605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb603));
        EXPECT(0x63, gbc.readMem(0xb604));
        // CB 63 0021
        gbc.setState(0xe435, 0x4605, 0x2de0, 0x5120, 0x3b1d, 0x5105, 0x0, 0x0);
        gbc.writeMem(0xe435, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4605, gbc.sp());
        EXPECT(0xe437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe435));
        EXPECT(0x63, gbc.readMem(0xe436));
        // CB 63 0022
        gbc.setState(0xc216, 0x43f2, 0xc2c0, 0x8e7d, 0x1374, 0xe78c, 0x1, 0x0);
        gbc.writeMem(0xc216, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x43f2, gbc.sp());
        EXPECT(0xc218, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc216));
        EXPECT(0x63, gbc.readMem(0xc217));
        // CB 63 0024
        gbc.setState(0x9e4d, 0x96ea, 0x41e0, 0xa057, 0x4fd6, 0xe15a, 0x1, 0x1);
        gbc.writeMem(0x9e4d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x96ea, gbc.sp());
        EXPECT(0x9e4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e4d));
        EXPECT(0x63, gbc.readMem(0x9e4e));
        // CB 63 0026
        gbc.setState(0x2b3e, 0x61a1, 0x3ac0, 0xafb2, 0x65da, 0x91b, 0x0, 0x1);
        gbc.writeMem(0x2b3e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x61a1, gbc.sp());
        EXPECT(0x2b40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0027
        gbc.setState(0x1dcf, 0x163f, 0x880, 0x9cea, 0x1e84, 0xb20c, 0x1, 0x0);
        gbc.writeMem(0x1dcf, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x163f, gbc.sp());
        EXPECT(0x1dd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0028
        gbc.setState(0x1f5e, 0xda15, 0xbb10, 0x73ea, 0x84cb, 0x587a, 0x1, 0x1);
        gbc.writeMem(0x1f5e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xda15, gbc.sp());
        EXPECT(0x1f60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0029
        gbc.setState(0x83a5, 0x8f53, 0x6780, 0x26d3, 0xf222, 0xb1e6, 0x1, 0x0);
        gbc.writeMem(0x83a5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8f53, gbc.sp());
        EXPECT(0x83a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83a5));
        EXPECT(0x63, gbc.readMem(0x83a6));
        // CB 63 002A
        gbc.setState(0xceaa, 0x642b, 0xae20, 0x45a6, 0x16a7, 0x1209, 0x1, 0x0);
        gbc.writeMem(0xceaa, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x642b, gbc.sp());
        EXPECT(0xceac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceaa));
        EXPECT(0x63, gbc.readMem(0xceab));
        // CB 63 002B
        gbc.setState(0x6b70, 0xb7ab, 0x6ef0, 0xe966, 0x58cb, 0x81fd, 0x1, 0x0);
        gbc.writeMem(0x6b70, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb7ab, gbc.sp());
        EXPECT(0x6b72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 002C
        gbc.setState(0x269f, 0xedf7, 0xe4b0, 0xcea4, 0xfa75, 0xfb61, 0x1, 0x0);
        gbc.writeMem(0x269f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xedf7, gbc.sp());
        EXPECT(0x26a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 002D
        gbc.setState(0x93f9, 0xb513, 0xd380, 0x48fe, 0xfa9d, 0x7046, 0x0, 0x0);
        gbc.writeMem(0x93f9, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb513, gbc.sp());
        EXPECT(0x93fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93f9));
        EXPECT(0x63, gbc.readMem(0x93fa));
        // CB 63 002F
        gbc.setState(0x3394, 0x2705, 0x83d0, 0x31db, 0x6d21, 0x37c7, 0x1, 0x0);
        gbc.writeMem(0x3394, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2705, gbc.sp());
        EXPECT(0x3396, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0031
        gbc.setState(0xd3db, 0x4de6, 0xb710, 0xc26e, 0xcee2, 0xcb52, 0x1, 0x0);
        gbc.writeMem(0xd3db, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4de6, gbc.sp());
        EXPECT(0xd3dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3db));
        EXPECT(0x63, gbc.readMem(0xd3dc));
        // CB 63 0032
        gbc.setState(0x7e33, 0x7a2a, 0x4e60, 0xbdd1, 0x1346, 0x30b4, 0x0, 0x1);
        gbc.writeMem(0x7e33, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7a2a, gbc.sp());
        EXPECT(0x7e35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0033
        gbc.setState(0x27c5, 0x242b, 0xc440, 0xdf3d, 0x3a5b, 0x7473, 0x1, 0x0);
        gbc.writeMem(0x27c5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x242b, gbc.sp());
        EXPECT(0x27c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0034
        gbc.setState(0x7eff, 0xdc08, 0xcf20, 0x9fed, 0x800b, 0xcf3f, 0x0, 0x0);
        gbc.writeMem(0x7eff, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xdc08, gbc.sp());
        EXPECT(0x7f01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0036
        gbc.setState(0xc9ca, 0x466c, 0xe780, 0x1021, 0xce83, 0x9c2d, 0x1, 0x0);
        gbc.writeMem(0xc9ca, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x466c, gbc.sp());
        EXPECT(0xc9cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ca));
        EXPECT(0x63, gbc.readMem(0xc9cb));
        // CB 63 0037
        gbc.setState(0xa4f5, 0x4dc4, 0xa8b0, 0xb9dc, 0xdd5e, 0x7f05, 0x0, 0x0);
        gbc.writeMem(0xa4f5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4dc4, gbc.sp());
        EXPECT(0xa4f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4f5));
        EXPECT(0x63, gbc.readMem(0xa4f6));
        // CB 63 0038
        gbc.setState(0xdb8d, 0xcf50, 0x380, 0x8263, 0xc781, 0xc0e0, 0x1, 0x0);
        gbc.writeMem(0xdb8d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xcf50, gbc.sp());
        EXPECT(0xdb8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb8d));
        EXPECT(0x63, gbc.readMem(0xdb8e));
        // CB 63 0039
        gbc.setState(0x44a1, 0xe54d, 0x1c40, 0x7e08, 0x3e61, 0xf6bd, 0x1, 0x0);
        gbc.writeMem(0x44a1, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe54d, gbc.sp());
        EXPECT(0x44a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 003A
        gbc.setState(0xa6e7, 0xf6d2, 0x4e90, 0xb683, 0xbd59, 0x4bdb, 0x1, 0x0);
        gbc.writeMem(0xa6e7, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf6d2, gbc.sp());
        EXPECT(0xa6e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6e7));
        EXPECT(0x63, gbc.readMem(0xa6e8));
        // CB 63 003B
        gbc.setState(0x7bce, 0x8007, 0x76b0, 0x3bd3, 0x65fc, 0xc9af, 0x0, 0x0);
        gbc.writeMem(0x7bce, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8007, gbc.sp());
        EXPECT(0x7bd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 003C
        gbc.setState(0xe41d, 0xfb3d, 0x5a00, 0x6dd3, 0x561b, 0xba4a, 0x1, 0x1);
        gbc.writeMem(0xe41d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xfb3d, gbc.sp());
        EXPECT(0xe41f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe41d));
        EXPECT(0x63, gbc.readMem(0xe41e));
        // CB 63 003D
        gbc.setState(0xc7ee, 0xe063, 0x75b0, 0x81ca, 0x6b95, 0x7865, 0x0, 0x0);
        gbc.writeMem(0xc7ee, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe063, gbc.sp());
        EXPECT(0xc7f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7ee));
        EXPECT(0x63, gbc.readMem(0xc7ef));
        // CB 63 003E
        gbc.setState(0x62f0, 0x5a3e, 0xa150, 0x7534, 0x5a2, 0x2686, 0x1, 0x1);
        gbc.writeMem(0x62f0, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5a3e, gbc.sp());
        EXPECT(0x62f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 003F
        gbc.setState(0x4132, 0xc2da, 0x7350, 0x9976, 0xec05, 0xd347, 0x1, 0x1);
        gbc.writeMem(0x4132, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc2da, gbc.sp());
        EXPECT(0x4134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0041
        gbc.setState(0x4ae2, 0xa7aa, 0x9560, 0xbb55, 0x7ca1, 0x54b7, 0x0, 0x0);
        gbc.writeMem(0x4ae2, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa7aa, gbc.sp());
        EXPECT(0x4ae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0042
        gbc.setState(0x1df2, 0x7603, 0xb340, 0x4981, 0x1396, 0xf8fe, 0x1, 0x0);
        gbc.writeMem(0x1df2, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7603, gbc.sp());
        EXPECT(0x1df4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0043
        gbc.setState(0x55f7, 0x34c2, 0xad90, 0xce3b, 0x417b, 0xc7eb, 0x1, 0x1);
        gbc.writeMem(0x55f7, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x34c2, gbc.sp());
        EXPECT(0x55f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0044
        gbc.setState(0x9892, 0x6b2d, 0xc700, 0xdfe4, 0x3d30, 0x1b7e, 0x1, 0x0);
        gbc.writeMem(0x9892, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6b2d, gbc.sp());
        EXPECT(0x9894, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9892));
        EXPECT(0x63, gbc.readMem(0x9893));
        // CB 63 0045
        gbc.setState(0xbfd8, 0x2b6c, 0xe950, 0xb323, 0x2f65, 0x7fd5, 0x1, 0x1);
        gbc.writeMem(0xbfd8, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2b6c, gbc.sp());
        EXPECT(0xbfda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfd8));
        EXPECT(0x63, gbc.readMem(0xbfd9));
        // CB 63 0046
        gbc.setState(0xd1e9, 0xe001, 0x9820, 0x2127, 0xc936, 0xbd2a, 0x1, 0x0);
        gbc.writeMem(0xd1e9, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe001, gbc.sp());
        EXPECT(0xd1eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1e9));
        EXPECT(0x63, gbc.readMem(0xd1ea));
        // CB 63 0047
        gbc.setState(0xb843, 0xa468, 0xd430, 0x1b8d, 0x9513, 0xb12a, 0x1, 0x0);
        gbc.writeMem(0xb843, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa468, gbc.sp());
        EXPECT(0xb845, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb843));
        EXPECT(0x63, gbc.readMem(0xb844));
        // CB 63 0048
        gbc.setState(0x14b3, 0x685a, 0x2720, 0xbee8, 0x778c, 0x3baa, 0x0, 0x0);
        gbc.writeMem(0x14b3, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x685a, gbc.sp());
        EXPECT(0x14b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0049
        gbc.setState(0x8a8a, 0x7db, 0x2e80, 0x8221, 0xfa52, 0xe777, 0x1, 0x1);
        gbc.writeMem(0x8a8a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7db, gbc.sp());
        EXPECT(0x8a8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a8a));
        EXPECT(0x63, gbc.readMem(0x8a8b));
        // CB 63 004A
        gbc.setState(0x2f92, 0xfd01, 0xc00, 0x62d4, 0x4ad6, 0xfc36, 0x0, 0x1);
        gbc.writeMem(0x2f92, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xfd01, gbc.sp());
        EXPECT(0x2f94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 004B
        gbc.setState(0x3dc1, 0xba23, 0x5280, 0x6dc6, 0x73ba, 0x21ae, 0x1, 0x1);
        gbc.writeMem(0x3dc1, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xba23, gbc.sp());
        EXPECT(0x3dc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 004C
        gbc.setState(0xa0c1, 0x2c2a, 0xcf90, 0x9e6d, 0xeb38, 0x5737, 0x1, 0x0);
        gbc.writeMem(0xa0c1, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2c2a, gbc.sp());
        EXPECT(0xa0c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0c1));
        EXPECT(0x63, gbc.readMem(0xa0c2));
        // CB 63 004D
        gbc.setState(0xe052, 0x8793, 0xe2e0, 0xd584, 0x2770, 0x27de, 0x0, 0x1);
        gbc.writeMem(0xe052, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8793, gbc.sp());
        EXPECT(0xe054, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe052));
        EXPECT(0x63, gbc.readMem(0xe053));
        // CB 63 004E
        gbc.setState(0x2339, 0xdeed, 0x9360, 0x8741, 0x4fc9, 0xb0af, 0x0, 0x1);
        gbc.writeMem(0x2339, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xdeed, gbc.sp());
        EXPECT(0x233b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 004F
        gbc.setState(0x109f, 0x5734, 0xa760, 0xb5f1, 0x6cf, 0x52f, 0x1, 0x1);
        gbc.writeMem(0x109f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5734, gbc.sp());
        EXPECT(0x10a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0050
        gbc.setState(0xad0d, 0x9a08, 0xd550, 0x27a1, 0x1a93, 0xf59, 0x0, 0x0);
        gbc.writeMem(0xad0d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9a08, gbc.sp());
        EXPECT(0xad0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad0d));
        EXPECT(0x63, gbc.readMem(0xad0e));
        // CB 63 0051
        gbc.setState(0x6b2c, 0xa81b, 0x5cb0, 0x24b6, 0x31b7, 0x8a25, 0x1, 0x0);
        gbc.writeMem(0x6b2c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa81b, gbc.sp());
        EXPECT(0x6b2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0052
        gbc.setState(0x2c58, 0xcd32, 0x8d90, 0x6d1b, 0xb437, 0xe780, 0x1, 0x1);
        gbc.writeMem(0x2c58, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xcd32, gbc.sp());
        EXPECT(0x2c5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0053
        gbc.setState(0x97cb, 0x6334, 0x6810, 0x9d8c, 0xded7, 0x5fdd, 0x1, 0x0);
        gbc.writeMem(0x97cb, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6334, gbc.sp());
        EXPECT(0x97cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97cb));
        EXPECT(0x63, gbc.readMem(0x97cc));
        // CB 63 0054
        gbc.setState(0xbe40, 0x2741, 0xd660, 0x7b2e, 0x4a5d, 0xa183, 0x1, 0x1);
        gbc.writeMem(0xbe40, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2741, gbc.sp());
        EXPECT(0xbe42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe40));
        EXPECT(0x63, gbc.readMem(0xbe41));
        // CB 63 0055
        gbc.setState(0x88cb, 0xcbd7, 0x5800, 0x948d, 0xa1fb, 0x26e, 0x1, 0x0);
        gbc.writeMem(0x88cb, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xcbd7, gbc.sp());
        EXPECT(0x88cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88cb));
        EXPECT(0x63, gbc.readMem(0x88cc));
        // CB 63 0056
        gbc.setState(0x14d6, 0x7571, 0xa2b0, 0xb92c, 0xc961, 0x8325, 0x1, 0x0);
        gbc.writeMem(0x14d6, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7571, gbc.sp());
        EXPECT(0x14d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0057
        gbc.setState(0xdd2c, 0x7caf, 0x9ef0, 0xc4ac, 0x930d, 0xc723, 0x0, 0x0);
        gbc.writeMem(0xdd2c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7caf, gbc.sp());
        EXPECT(0xdd2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd2c));
        EXPECT(0x63, gbc.readMem(0xdd2d));
        // CB 63 0058
        gbc.setState(0xcf83, 0x31ea, 0x91e0, 0x3877, 0x5ddb, 0x4139, 0x1, 0x1);
        gbc.writeMem(0xcf83, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x31ea, gbc.sp());
        EXPECT(0xcf85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf83));
        EXPECT(0x63, gbc.readMem(0xcf84));
        // CB 63 0059
        gbc.setState(0x5746, 0xefaa, 0xf1e0, 0xd931, 0xc68c, 0x41c9, 0x1, 0x1);
        gbc.writeMem(0x5746, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xefaa, gbc.sp());
        EXPECT(0x5748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 005A
        gbc.setState(0x12c4, 0x756c, 0x220, 0x3b6b, 0xc538, 0x3b2c, 0x1, 0x1);
        gbc.writeMem(0x12c4, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x756c, gbc.sp());
        EXPECT(0x12c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 005B
        gbc.setState(0xd5ce, 0x72a0, 0x1d70, 0xa051, 0xe247, 0x5f4e, 0x1, 0x1);
        gbc.writeMem(0xd5ce, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x72a0, gbc.sp());
        EXPECT(0xd5d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ce));
        EXPECT(0x63, gbc.readMem(0xd5cf));
        // CB 63 005C
        gbc.setState(0x51e3, 0xb391, 0xbda0, 0xa5a6, 0xd518, 0x579d, 0x1, 0x1);
        gbc.writeMem(0x51e3, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb391, gbc.sp());
        EXPECT(0x51e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 005D
        gbc.setState(0x3a28, 0x334c, 0x7c70, 0xc16e, 0x297f, 0xce40, 0x1, 0x1);
        gbc.writeMem(0x3a28, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x334c, gbc.sp());
        EXPECT(0x3a2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 005E
        gbc.setState(0xc69a, 0x74d, 0x8370, 0x22c, 0x8417, 0x70e5, 0x0, 0x0);
        gbc.writeMem(0xc69a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x74d, gbc.sp());
        EXPECT(0xc69c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc69a));
        EXPECT(0x63, gbc.readMem(0xc69b));
        // CB 63 005F
        gbc.setState(0x6fda, 0xcd54, 0xa980, 0x6e46, 0xe03c, 0x5798, 0x1, 0x1);
        gbc.writeMem(0x6fda, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xcd54, gbc.sp());
        EXPECT(0x6fdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0060
        gbc.setState(0xbc3d, 0xcc9b, 0x38b0, 0xb790, 0x1a95, 0x4634, 0x0, 0x0);
        gbc.writeMem(0xbc3d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xcc9b, gbc.sp());
        EXPECT(0xbc3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc3d));
        EXPECT(0x63, gbc.readMem(0xbc3e));
        // CB 63 0061
        gbc.setState(0x9006, 0x8f31, 0xff30, 0xd0cf, 0xcb4b, 0xdca1, 0x1, 0x0);
        gbc.writeMem(0x9006, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8f31, gbc.sp());
        EXPECT(0x9008, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9006));
        EXPECT(0x63, gbc.readMem(0x9007));
        // CB 63 0062
        gbc.setState(0x598, 0xebe1, 0x35d0, 0xbc1f, 0x233a, 0xb791, 0x0, 0x0);
        gbc.writeMem(0x598, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xebe1, gbc.sp());
        EXPECT(0x59a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0063
        gbc.setState(0x84c3, 0x852a, 0x7b50, 0x578, 0xe55e, 0xec79, 0x0, 0x0);
        gbc.writeMem(0x84c3, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x852a, gbc.sp());
        EXPECT(0x84c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c3));
        EXPECT(0x63, gbc.readMem(0x84c4));
        // CB 63 0064
        gbc.setState(0x566b, 0xabe6, 0x85c0, 0xd761, 0xf4e7, 0xc140, 0x1, 0x1);
        gbc.writeMem(0x566b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xabe6, gbc.sp());
        EXPECT(0x566d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0066
        gbc.setState(0xdfd8, 0x6d0a, 0x4d00, 0x2f19, 0x75bc, 0x6e5f, 0x1, 0x1);
        gbc.writeMem(0xdfd8, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6d0a, gbc.sp());
        EXPECT(0xdfda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfd8));
        EXPECT(0x63, gbc.readMem(0xdfd9));
        // CB 63 0067
        gbc.setState(0x893f, 0x9449, 0x1b50, 0x6222, 0x7782, 0x9205, 0x1, 0x1);
        gbc.writeMem(0x893f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9449, gbc.sp());
        EXPECT(0x8941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x893f));
        EXPECT(0x63, gbc.readMem(0x8940));
        // CB 63 0068
        gbc.setState(0x2d6e, 0xf895, 0x8440, 0x30eb, 0x79f, 0x62a8, 0x0, 0x1);
        gbc.writeMem(0x2d6e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf895, gbc.sp());
        EXPECT(0x2d70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0069
        gbc.setState(0x1409, 0xa477, 0xcc30, 0x5fa, 0x1c32, 0xbc57, 0x1, 0x0);
        gbc.writeMem(0x1409, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa477, gbc.sp());
        EXPECT(0x140b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 006A
        gbc.setState(0xe34f, 0x8fca, 0x4320, 0xb376, 0x714b, 0x8028, 0x1, 0x0);
        gbc.writeMem(0xe34f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8fca, gbc.sp());
        EXPECT(0xe351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe34f));
        EXPECT(0x63, gbc.readMem(0xe350));
        // CB 63 006C
        gbc.setState(0x1eac, 0x3cbb, 0x3f70, 0x7f57, 0x3f49, 0xab67, 0x0, 0x0);
        gbc.writeMem(0x1eac, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3cbb, gbc.sp());
        EXPECT(0x1eae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 006D
        gbc.setState(0xd405, 0xdd61, 0xb30, 0x4314, 0x6ecd, 0xb1e5, 0x0, 0x0);
        gbc.writeMem(0xd405, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xdd61, gbc.sp());
        EXPECT(0xd407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd405));
        EXPECT(0x63, gbc.readMem(0xd406));
        // CB 63 006E
        gbc.setState(0xe177, 0x51d2, 0x31e0, 0x67ce, 0xe3d8, 0xa663, 0x1, 0x1);
        gbc.writeMem(0xe177, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x51d2, gbc.sp());
        EXPECT(0xe179, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe177));
        EXPECT(0x63, gbc.readMem(0xe178));
        // CB 63 006F
        gbc.setState(0x25e5, 0x3af2, 0x1720, 0x8f4, 0x4cf, 0x750b, 0x1, 0x1);
        gbc.writeMem(0x25e5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3af2, gbc.sp());
        EXPECT(0x25e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0070
        gbc.setState(0xee4b, 0xa3e9, 0x7a50, 0x12cb, 0xda9f, 0x7cf, 0x0, 0x1);
        gbc.writeMem(0xee4b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa3e9, gbc.sp());
        EXPECT(0xee4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee4b));
        EXPECT(0x63, gbc.readMem(0xee4c));
        // CB 63 0072
        gbc.setState(0x43b8, 0x406f, 0xf070, 0xdece, 0xa94d, 0x4e0, 0x1, 0x0);
        gbc.writeMem(0x43b8, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x406f, gbc.sp());
        EXPECT(0x43ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0073
        gbc.setState(0x1788, 0xe5ad, 0x8650, 0x2268, 0x613a, 0xddd6, 0x0, 0x0);
        gbc.writeMem(0x1788, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe5ad, gbc.sp());
        EXPECT(0x178a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0074
        gbc.setState(0x483, 0x9faa, 0x89a0, 0x813c, 0x4264, 0xede6, 0x1, 0x0);
        gbc.writeMem(0x483, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9faa, gbc.sp());
        EXPECT(0x485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0075
        gbc.setState(0x697d, 0x9c80, 0xa1d0, 0x1784, 0x4fcb, 0x1823, 0x0, 0x1);
        gbc.writeMem(0x697d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9c80, gbc.sp());
        EXPECT(0x697f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0076
        gbc.setState(0x3c68, 0x566, 0xb210, 0x12fb, 0x457d, 0x27b8, 0x0, 0x0);
        gbc.writeMem(0x3c68, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x566, gbc.sp());
        EXPECT(0x3c6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0077
        gbc.setState(0x5db2, 0xddbb, 0xb5c0, 0x1832, 0x457e, 0x4399, 0x0, 0x1);
        gbc.writeMem(0x5db2, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xddbb, gbc.sp());
        EXPECT(0x5db4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0078
        gbc.setState(0x3d4f, 0x6d22, 0x5b20, 0x711, 0xa5, 0xa48e, 0x0, 0x0);
        gbc.writeMem(0x3d4f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6d22, gbc.sp());
        EXPECT(0x3d51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0079
        gbc.setState(0x576f, 0xa46, 0xb8d0, 0xa427, 0x9cab, 0x1e6, 0x1, 0x1);
        gbc.writeMem(0x576f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa46, gbc.sp());
        EXPECT(0x5771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 007A
        gbc.setState(0x687, 0xe85a, 0x7830, 0xbda6, 0x8bff, 0x40a3, 0x1, 0x1);
        gbc.writeMem(0x687, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe85a, gbc.sp());
        EXPECT(0x689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 007B
        gbc.setState(0xc893, 0x13f6, 0x1510, 0x8882, 0xd5e0, 0xe3f4, 0x1, 0x0);
        gbc.writeMem(0xc893, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x13f6, gbc.sp());
        EXPECT(0xc895, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc893));
        EXPECT(0x63, gbc.readMem(0xc894));
        // CB 63 007C
        gbc.setState(0x1090, 0xde46, 0xcd70, 0xb30b, 0xae9f, 0x4b74, 0x0, 0x0);
        gbc.writeMem(0x1090, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xde46, gbc.sp());
        EXPECT(0x1092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 007D
        gbc.setState(0x4d5c, 0x85ab, 0xcc60, 0x4586, 0x8929, 0xa58b, 0x1, 0x1);
        gbc.writeMem(0x4d5c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x85ab, gbc.sp());
        EXPECT(0x4d5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 007E
        gbc.setState(0xda66, 0xbf7d, 0x60, 0x1c4b, 0xeee8, 0x7de8, 0x0, 0x1);
        gbc.writeMem(0xda66, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xbf7d, gbc.sp());
        EXPECT(0xda68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda66));
        EXPECT(0x63, gbc.readMem(0xda67));
        // CB 63 0080
        gbc.setState(0x31cf, 0x3e53, 0xe8f0, 0xff2b, 0xb89a, 0x97a, 0x0, 0x0);
        gbc.writeMem(0x31cf, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3e53, gbc.sp());
        EXPECT(0x31d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0081
        gbc.setState(0x77a, 0x13d3, 0xa250, 0xc935, 0x13b7, 0x4bbb, 0x1, 0x0);
        gbc.writeMem(0x77a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x13d3, gbc.sp());
        EXPECT(0x77c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0082
        gbc.setState(0x7674, 0x7f2b, 0xf2e0, 0xe60a, 0xd35, 0xfb8a, 0x1, 0x0);
        gbc.writeMem(0x7674, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7f2b, gbc.sp());
        EXPECT(0x7676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0083
        gbc.setState(0xa97c, 0xfb33, 0x6fb0, 0x77ba, 0x5a35, 0x172e, 0x1, 0x0);
        gbc.writeMem(0xa97c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xfb33, gbc.sp());
        EXPECT(0xa97e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa97c));
        EXPECT(0x63, gbc.readMem(0xa97d));
        // CB 63 0084
        gbc.setState(0x19cb, 0x91e8, 0xe7b0, 0x16ff, 0x9ef5, 0x8fde, 0x0, 0x1);
        gbc.writeMem(0x19cb, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x91e8, gbc.sp());
        EXPECT(0x19cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0085
        gbc.setState(0x551f, 0xc54f, 0xc6a0, 0xf2c6, 0xb2d, 0x451a, 0x1, 0x0);
        gbc.writeMem(0x551f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc54f, gbc.sp());
        EXPECT(0x5521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0086
        gbc.setState(0x2e7e, 0xb214, 0x9180, 0xa2a4, 0x21ee, 0x34df, 0x1, 0x1);
        gbc.writeMem(0x2e7e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb214, gbc.sp());
        EXPECT(0x2e80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0087
        gbc.setState(0x2cbb, 0xe671, 0x41d0, 0x7605, 0x73b0, 0x4195, 0x1, 0x1);
        gbc.writeMem(0x2cbb, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe671, gbc.sp());
        EXPECT(0x2cbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0088
        gbc.setState(0xc1de, 0x1c38, 0xf790, 0xd4ef, 0x89b6, 0x3bfc, 0x0, 0x0);
        gbc.writeMem(0xc1de, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1c38, gbc.sp());
        EXPECT(0xc1e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1de));
        EXPECT(0x63, gbc.readMem(0xc1df));
        // CB 63 0089
        gbc.setState(0xc2b4, 0x7a98, 0x3750, 0x2c5f, 0x793c, 0xe31c, 0x0, 0x1);
        gbc.writeMem(0xc2b4, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7a98, gbc.sp());
        EXPECT(0xc2b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2b4));
        EXPECT(0x63, gbc.readMem(0xc2b5));
        // CB 63 008A
        gbc.setState(0xd4e3, 0x65dc, 0x34c0, 0x81b1, 0x5ee3, 0x2eeb, 0x0, 0x0);
        gbc.writeMem(0xd4e3, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x65dc, gbc.sp());
        EXPECT(0xd4e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4e3));
        EXPECT(0x63, gbc.readMem(0xd4e4));
        // CB 63 008B
        gbc.setState(0xed10, 0x4ad9, 0x90a0, 0x6df6, 0x2768, 0x4e2f, 0x0, 0x1);
        gbc.writeMem(0xed10, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4ad9, gbc.sp());
        EXPECT(0xed12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed10));
        EXPECT(0x63, gbc.readMem(0xed11));
        // CB 63 008C
        gbc.setState(0xe062, 0x6de5, 0x780, 0x7da4, 0xb93c, 0x808b, 0x1, 0x0);
        gbc.writeMem(0xe062, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6de5, gbc.sp());
        EXPECT(0xe064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe062));
        EXPECT(0x63, gbc.readMem(0xe063));
        // CB 63 008D
        gbc.setState(0x4ec, 0x11fc, 0x28f0, 0xcc7, 0x799c, 0xc4f9, 0x1, 0x0);
        gbc.writeMem(0x4ec, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x11fc, gbc.sp());
        EXPECT(0x4ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 008E
        gbc.setState(0x92f, 0xa4a0, 0x9450, 0x614b, 0x3835, 0x408a, 0x0, 0x1);
        gbc.writeMem(0x92f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa4a0, gbc.sp());
        EXPECT(0x931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 008F
        gbc.setState(0x5486, 0x3edc, 0x7c20, 0xe608, 0x48b1, 0xa320, 0x1, 0x0);
        gbc.writeMem(0x5486, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3edc, gbc.sp());
        EXPECT(0x5488, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0090
        gbc.setState(0xcba0, 0x907f, 0xb410, 0xf893, 0x7d75, 0xd7b2, 0x0, 0x1);
        gbc.writeMem(0xcba0, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x907f, gbc.sp());
        EXPECT(0xcba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcba0));
        EXPECT(0x63, gbc.readMem(0xcba1));
        // CB 63 0091
        gbc.setState(0x9456, 0xfafe, 0x110, 0xee3e, 0x64a5, 0x1863, 0x0, 0x0);
        gbc.writeMem(0x9456, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xfafe, gbc.sp());
        EXPECT(0x9458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9456));
        EXPECT(0x63, gbc.readMem(0x9457));
        // CB 63 0092
        gbc.setState(0xebfd, 0xee5e, 0xafc0, 0xa564, 0x64a0, 0xd376, 0x1, 0x1);
        gbc.writeMem(0xebfd, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xee5e, gbc.sp());
        EXPECT(0xebff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebfd));
        EXPECT(0x63, gbc.readMem(0xebfe));
        // CB 63 0093
        gbc.setState(0x8806, 0x1e6c, 0x8520, 0x2d59, 0xa6da, 0xca59, 0x1, 0x1);
        gbc.writeMem(0x8806, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1e6c, gbc.sp());
        EXPECT(0x8808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8806));
        EXPECT(0x63, gbc.readMem(0x8807));
        // CB 63 0094
        gbc.setState(0x57a0, 0x82a1, 0x9ab0, 0xa2ae, 0x46b7, 0x7f31, 0x1, 0x1);
        gbc.writeMem(0x57a0, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x82a1, gbc.sp());
        EXPECT(0x57a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0096
        gbc.setState(0x5a37, 0x64c4, 0x5f70, 0x8bf2, 0xcd39, 0x437a, 0x1, 0x1);
        gbc.writeMem(0x5a37, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x64c4, gbc.sp());
        EXPECT(0x5a39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0097
        gbc.setState(0x76f6, 0x17e2, 0x6e60, 0x333f, 0xf4a0, 0x7e1d, 0x1, 0x0);
        gbc.writeMem(0x76f6, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x17e2, gbc.sp());
        EXPECT(0x76f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0099
        gbc.setState(0x7103, 0x29bc, 0x1cd0, 0x81c8, 0x483f, 0xfc6d, 0x0, 0x1);
        gbc.writeMem(0x7103, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x29bc, gbc.sp());
        EXPECT(0x7105, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 009A
        gbc.setState(0x11ee, 0x705e, 0xc420, 0xe390, 0xf61d, 0x3ba2, 0x1, 0x0);
        gbc.writeMem(0x11ee, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x705e, gbc.sp());
        EXPECT(0x11f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 009B
        gbc.setState(0xe6d6, 0x2f4d, 0x7c40, 0x9384, 0x70c6, 0xa33d, 0x0, 0x1);
        gbc.writeMem(0xe6d6, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2f4d, gbc.sp());
        EXPECT(0xe6d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6d6));
        EXPECT(0x63, gbc.readMem(0xe6d7));
        // CB 63 009C
        gbc.setState(0xdd26, 0x30af, 0x1470, 0x5f93, 0x2f48, 0x6edd, 0x0, 0x0);
        gbc.writeMem(0xdd26, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x30af, gbc.sp());
        EXPECT(0xdd28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd26));
        EXPECT(0x63, gbc.readMem(0xdd27));
        // CB 63 009D
        gbc.setState(0x6603, 0x8c15, 0x4670, 0x2812, 0xab0, 0x7604, 0x0, 0x1);
        gbc.writeMem(0x6603, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8c15, gbc.sp());
        EXPECT(0x6605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 009E
        gbc.setState(0x321a, 0x2c4c, 0x9860, 0x97b1, 0x86af, 0x55b6, 0x0, 0x1);
        gbc.writeMem(0x321a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2c4c, gbc.sp());
        EXPECT(0x321c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 009F
        gbc.setState(0x4, 0xc17d, 0x6ee0, 0xb4b3, 0xf41a, 0x9aad, 0x0, 0x0);
        gbc.writeMem(0x4, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc17d, gbc.sp());
        EXPECT(0x6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 00A0
        gbc.setState(0x19ab, 0x73e8, 0x4130, 0xe624, 0x1efe, 0x343a, 0x1, 0x1);
        gbc.writeMem(0x19ab, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x73e8, gbc.sp());
        EXPECT(0x19ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 00A1
        gbc.setState(0x87a7, 0xd10c, 0x64f0, 0xc6cc, 0xd7be, 0x53e3, 0x1, 0x1);
        gbc.writeMem(0x87a7, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd10c, gbc.sp());
        EXPECT(0x87a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87a7));
        EXPECT(0x63, gbc.readMem(0x87a8));
        // CB 63 00A2
        gbc.setState(0xb429, 0x8794, 0xa210, 0xf218, 0x2a7b, 0x743e, 0x0, 0x0);
        gbc.writeMem(0xb429, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8794, gbc.sp());
        EXPECT(0xb42b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb429));
        EXPECT(0x63, gbc.readMem(0xb42a));
        // CB 63 00A3
        gbc.setState(0xc2a5, 0xdf6a, 0xf6c0, 0xe6a7, 0x54f1, 0xbe15, 0x0, 0x1);
        gbc.writeMem(0xc2a5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xdf6a, gbc.sp());
        EXPECT(0xc2a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a5));
        EXPECT(0x63, gbc.readMem(0xc2a6));
        // CB 63 00A4
        gbc.setState(0xd84f, 0x90ad, 0x8680, 0x9081, 0x4ffd, 0xb5fc, 0x0, 0x1);
        gbc.writeMem(0xd84f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x90ad, gbc.sp());
        EXPECT(0xd851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd84f));
        EXPECT(0x63, gbc.readMem(0xd850));
        // CB 63 00A6
        gbc.setState(0x36e5, 0x6e2f, 0x4f00, 0x4daa, 0xd3f6, 0x8b26, 0x0, 0x1);
        gbc.writeMem(0x36e5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6e2f, gbc.sp());
        EXPECT(0x36e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 00A8
        gbc.setState(0xc155, 0x9813, 0x7f0, 0x398d, 0xa1f8, 0x418f, 0x0, 0x1);
        gbc.writeMem(0xc155, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9813, gbc.sp());
        EXPECT(0xc157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc155));
        EXPECT(0x63, gbc.readMem(0xc156));
        // CB 63 00A9
        gbc.setState(0x28a0, 0xa64e, 0xc910, 0x4, 0xfb1c, 0x576d, 0x0, 0x0);
        gbc.writeMem(0x28a0, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa64e, gbc.sp());
        EXPECT(0x28a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 00AA
        gbc.setState(0xb615, 0xd1d1, 0x5e40, 0x126d, 0x757c, 0x851c, 0x0, 0x0);
        gbc.writeMem(0xb615, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd1d1, gbc.sp());
        EXPECT(0xb617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb615));
        EXPECT(0x63, gbc.readMem(0xb616));
        // CB 63 00AB
        gbc.setState(0xa68d, 0xb7ba, 0x4090, 0x9f3d, 0x4fe4, 0x68ca, 0x1, 0x0);
        gbc.writeMem(0xa68d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb7ba, gbc.sp());
        EXPECT(0xa68f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa68d));
        EXPECT(0x63, gbc.readMem(0xa68e));
        // CB 63 00AD
        gbc.setState(0x3d32, 0x95b4, 0x1f40, 0xf738, 0x4587, 0xd174, 0x1, 0x1);
        gbc.writeMem(0x3d32, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x95b4, gbc.sp());
        EXPECT(0x3d34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 00AE
        gbc.setState(0xd6c6, 0x52ff, 0xc950, 0x8da, 0x25a9, 0x2fc6, 0x1, 0x1);
        gbc.writeMem(0xd6c6, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x52ff, gbc.sp());
        EXPECT(0xd6c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6c6));
        EXPECT(0x63, gbc.readMem(0xd6c7));
        // CB 63 00AF
        gbc.setState(0xdd8f, 0x43ed, 0xc700, 0xaeea, 0x45e8, 0x96ea, 0x1, 0x1);
        gbc.writeMem(0xdd8f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x43ed, gbc.sp());
        EXPECT(0xdd91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd8f));
        EXPECT(0x63, gbc.readMem(0xdd90));
        // CB 63 00B0
        gbc.setState(0x6fc9, 0x1e02, 0x3f00, 0x34f2, 0xc54b, 0xc904, 0x1, 0x1);
        gbc.writeMem(0x6fc9, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1e02, gbc.sp());
        EXPECT(0x6fcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 00B1
        gbc.setState(0xf8a, 0x13cb, 0x5910, 0x9cb9, 0xcc1a, 0xc3cc, 0x1, 0x1);
        gbc.writeMem(0xf8a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x13cb, gbc.sp());
        EXPECT(0xf8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 00B2
        gbc.setState(0xd43f, 0x2911, 0x2690, 0x30cf, 0x3083, 0x7665, 0x1, 0x0);
        gbc.writeMem(0xd43f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2911, gbc.sp());
        EXPECT(0xd441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd43f));
        EXPECT(0x63, gbc.readMem(0xd440));
        // CB 63 00B3
        gbc.setState(0x9349, 0x8e4b, 0xd060, 0x5e4, 0x6ed0, 0x8aad, 0x0, 0x1);
        gbc.writeMem(0x9349, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8e4b, gbc.sp());
        EXPECT(0x934b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9349));
        EXPECT(0x63, gbc.readMem(0x934a));
        // CB 63 00B4
        gbc.setState(0xd6f5, 0xc5cb, 0x8a70, 0xc746, 0x99c0, 0x4c02, 0x0, 0x1);
        gbc.writeMem(0xd6f5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc5cb, gbc.sp());
        EXPECT(0xd6f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6f5));
        EXPECT(0x63, gbc.readMem(0xd6f6));
        // CB 63 00B5
        gbc.setState(0x3d7e, 0xec91, 0xeb70, 0x3356, 0xa465, 0xb14d, 0x1, 0x0);
        gbc.writeMem(0x3d7e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xec91, gbc.sp());
        EXPECT(0x3d80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 00B6
        gbc.setState(0x2aae, 0x4e5a, 0xae80, 0x98bb, 0xc6b1, 0x227d, 0x0, 0x1);
        gbc.writeMem(0x2aae, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4e5a, gbc.sp());
        EXPECT(0x2ab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 00B7
        gbc.setState(0xc259, 0x236b, 0x6830, 0x68aa, 0xef25, 0x321, 0x1, 0x1);
        gbc.writeMem(0xc259, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x236b, gbc.sp());
        EXPECT(0xc25b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc259));
        EXPECT(0x63, gbc.readMem(0xc25a));
        // CB 63 00B8
        gbc.setState(0x154a, 0x1ec8, 0x9800, 0x87f5, 0x8e55, 0x4722, 0x1, 0x1);
        gbc.writeMem(0x154a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1ec8, gbc.sp());
        EXPECT(0x154c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 00B9
        gbc.setState(0xc63a, 0x6c33, 0xb860, 0x370e, 0x60a4, 0x7c12, 0x0, 0x1);
        gbc.writeMem(0xc63a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6c33, gbc.sp());
        EXPECT(0xc63c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc63a));
        EXPECT(0x63, gbc.readMem(0xc63b));
        // CB 63 00BA
        gbc.setState(0x63f9, 0x6b18, 0x8a20, 0x93b7, 0x4658, 0x8cf0, 0x1, 0x1);
        gbc.writeMem(0x63f9, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6b18, gbc.sp());
        EXPECT(0x63fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 00BB
        gbc.setState(0x8b7d, 0x6f60, 0xb2d0, 0xbe3d, 0x9700, 0x6742, 0x1, 0x1);
        gbc.writeMem(0x8b7d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6f60, gbc.sp());
        EXPECT(0x8b7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b7d));
        EXPECT(0x63, gbc.readMem(0x8b7e));
        // CB 63 00BC
        gbc.setState(0x72c6, 0x4eae, 0xc940, 0x2170, 0x8321, 0x4539, 0x0, 0x0);
        gbc.writeMem(0x72c6, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4eae, gbc.sp());
        EXPECT(0x72c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 00BD
        gbc.setState(0x5201, 0xfb75, 0xaf0, 0x43c, 0x7f36, 0x2e28, 0x0, 0x1);
        gbc.writeMem(0x5201, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xfb75, gbc.sp());
        EXPECT(0x5203, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 00BE
        gbc.setState(0x23cf, 0x75c5, 0xfda0, 0xd33c, 0xb11c, 0xa8f0, 0x0, 0x1);
        gbc.writeMem(0x23cf, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x75c5, gbc.sp());
        EXPECT(0x23d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 00BF
        gbc.setState(0xe266, 0x446a, 0x9e70, 0x8ba4, 0x698d, 0x1dc2, 0x1, 0x0);
        gbc.writeMem(0xe266, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x446a, gbc.sp());
        EXPECT(0xe268, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe266));
        EXPECT(0x63, gbc.readMem(0xe267));
        // CB 63 00C0
        gbc.setState(0x4aa5, 0xe19f, 0x7c40, 0x3896, 0xc1b7, 0x6411, 0x0, 0x1);
        gbc.writeMem(0x4aa5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe19f, gbc.sp());
        EXPECT(0x4aa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 00C1
        gbc.setState(0xa9b2, 0xe390, 0x75e0, 0xb348, 0x871f, 0xfdd4, 0x1, 0x1);
        gbc.writeMem(0xa9b2, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe390, gbc.sp());
        EXPECT(0xa9b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9b2));
        EXPECT(0x63, gbc.readMem(0xa9b3));
        // CB 63 00C2
        gbc.setState(0x5527, 0x8f4f, 0xcc90, 0x83c3, 0xe8e4, 0xf826, 0x1, 0x0);
        gbc.writeMem(0x5527, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x8f4f, gbc.sp());
        EXPECT(0x5529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 00C3
        gbc.setState(0x8cdc, 0x4b1d, 0x8d00, 0x1e99, 0xf183, 0xf759, 0x1, 0x1);
        gbc.writeMem(0x8cdc, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4b1d, gbc.sp());
        EXPECT(0x8cde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cdc));
        EXPECT(0x63, gbc.readMem(0x8cdd));
        // CB 63 00C4
        gbc.setState(0x8171, 0x964d, 0x3db0, 0xf65b, 0xbb50, 0xe6bf, 0x1, 0x0);
        gbc.writeMem(0x8171, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x964d, gbc.sp());
        EXPECT(0x8173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8171));
        EXPECT(0x63, gbc.readMem(0x8172));
        // CB 63 00C5
        gbc.setState(0x3a32, 0x1114, 0x6d0, 0x178, 0xf8c4, 0xd565, 0x0, 0x0);
        gbc.writeMem(0x3a32, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1114, gbc.sp());
        EXPECT(0x3a34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 00C6
        gbc.setState(0x226f, 0x58d4, 0x1eb0, 0x3ba4, 0x8914, 0x46fb, 0x1, 0x1);
        gbc.writeMem(0x226f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x58d4, gbc.sp());
        EXPECT(0x2271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 00C7
        gbc.setState(0xbac2, 0x24fc, 0xa380, 0xe11c, 0x1a47, 0xc737, 0x0, 0x1);
        gbc.writeMem(0xbac2, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x24fc, gbc.sp());
        EXPECT(0xbac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbac2));
        EXPECT(0x63, gbc.readMem(0xbac3));
        // CB 63 00C8
        gbc.setState(0x71bf, 0x2888, 0xd1d0, 0x31be, 0xe266, 0x49bf, 0x0, 0x0);
        gbc.writeMem(0x71bf, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2888, gbc.sp());
        EXPECT(0x71c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 00C9
        gbc.setState(0xcdb0, 0xc265, 0x12b0, 0x1f06, 0xbb8c, 0x7d57, 0x0, 0x0);
        gbc.writeMem(0xcdb0, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc265, gbc.sp());
        EXPECT(0xcdb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdb0));
        EXPECT(0x63, gbc.readMem(0xcdb1));
        // CB 63 00CA
        gbc.setState(0x5aa2, 0xae27, 0xce50, 0xc597, 0x329b, 0xd525, 0x1, 0x0);
        gbc.writeMem(0x5aa2, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xae27, gbc.sp());
        EXPECT(0x5aa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 00CB
        gbc.setState(0xab10, 0x5fdc, 0x2070, 0x6e33, 0xcda0, 0xe8ca, 0x1, 0x0);
        gbc.writeMem(0xab10, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5fdc, gbc.sp());
        EXPECT(0xab12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab10));
        EXPECT(0x63, gbc.readMem(0xab11));
        // CB 63 00CD
        gbc.setState(0x40d, 0xa711, 0x8750, 0xd8e1, 0xa19a, 0xfc45, 0x0, 0x0);
        gbc.writeMem(0x40d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa711, gbc.sp());
        EXPECT(0x40f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 00CE
        gbc.setState(0x9831, 0xf097, 0x7d30, 0xf6de, 0x178e, 0x6c5e, 0x0, 0x0);
        gbc.writeMem(0x9831, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf097, gbc.sp());
        EXPECT(0x9833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9831));
        EXPECT(0x63, gbc.readMem(0x9832));
        // CB 63 00CF
        gbc.setState(0xb5dc, 0x36bc, 0x69d0, 0xbc0a, 0x3174, 0x35c1, 0x1, 0x1);
        gbc.writeMem(0xb5dc, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x36bc, gbc.sp());
        EXPECT(0xb5de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5dc));
        EXPECT(0x63, gbc.readMem(0xb5dd));
        // CB 63 00D0
        gbc.setState(0x256d, 0x5dd6, 0xf590, 0x625, 0x793f, 0x6624, 0x1, 0x0);
        gbc.writeMem(0x256d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5dd6, gbc.sp());
        EXPECT(0x256f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 00D1
        gbc.setState(0xc57c, 0xf722, 0x2f00, 0xdd9e, 0x19b9, 0x47d1, 0x0, 0x1);
        gbc.writeMem(0xc57c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf722, gbc.sp());
        EXPECT(0xc57e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc57c));
        EXPECT(0x63, gbc.readMem(0xc57d));
        // CB 63 00D2
        gbc.setState(0x1c8d, 0xee00, 0x9a0, 0x3a71, 0x854f, 0x2174, 0x1, 0x0);
        gbc.writeMem(0x1c8d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xee00, gbc.sp());
        EXPECT(0x1c8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 00D3
        gbc.setState(0x5a3b, 0xe3bf, 0xc8c0, 0xd7ff, 0x1389, 0xad59, 0x1, 0x0);
        gbc.writeMem(0x5a3b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe3bf, gbc.sp());
        EXPECT(0x5a3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 00D5
        gbc.setState(0x74f8, 0xd19e, 0xc2c0, 0x7feb, 0xa8e3, 0x50bc, 0x0, 0x0);
        gbc.writeMem(0x74f8, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd19e, gbc.sp());
        EXPECT(0x74fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 00D6
        gbc.setState(0x183b, 0x95d, 0x9270, 0x8f4c, 0x60ba, 0x9151, 0x0, 0x1);
        gbc.writeMem(0x183b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x95d, gbc.sp());
        EXPECT(0x183d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 00D7
        gbc.setState(0x4dd7, 0x4e7f, 0x97d0, 0x3aaa, 0xc79c, 0x6a19, 0x0, 0x0);
        gbc.writeMem(0x4dd7, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4e7f, gbc.sp());
        EXPECT(0x4dd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 00D8
        gbc.setState(0x9caf, 0xa897, 0x6900, 0x8322, 0x75bf, 0xbcf5, 0x1, 0x0);
        gbc.writeMem(0x9caf, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa897, gbc.sp());
        EXPECT(0x9cb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9caf));
        EXPECT(0x63, gbc.readMem(0x9cb0));
        // CB 63 00D9
        gbc.setState(0xe2e8, 0x203, 0x1220, 0xf115, 0x2c12, 0xd34a, 0x1, 0x0);
        gbc.writeMem(0xe2e8, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x203, gbc.sp());
        EXPECT(0xe2ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2e8));
        EXPECT(0x63, gbc.readMem(0xe2e9));
        // CB 63 00DA
        gbc.setState(0xfa2, 0x6cd7, 0x82e0, 0x909b, 0x33d6, 0x3796, 0x1, 0x0);
        gbc.writeMem(0xfa2, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6cd7, gbc.sp());
        EXPECT(0xfa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 00DB
        gbc.setState(0x412e, 0x803c, 0xfc40, 0x6a24, 0x20c0, 0xc746, 0x0, 0x0);
        gbc.writeMem(0x412e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x803c, gbc.sp());
        EXPECT(0x4130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 00DC
        gbc.setState(0x471f, 0x42dc, 0x6660, 0x2d15, 0x9c86, 0x34df, 0x1, 0x1);
        gbc.writeMem(0x471f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x42dc, gbc.sp());
        EXPECT(0x4721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 00DD
        gbc.setState(0x4af2, 0xf7a9, 0xea80, 0xa083, 0xe2f7, 0x928e, 0x1, 0x0);
        gbc.writeMem(0x4af2, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf7a9, gbc.sp());
        EXPECT(0x4af4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 00DE
        gbc.setState(0xec6e, 0x2be5, 0x8d50, 0x26fe, 0x4e83, 0x45b3, 0x1, 0x0);
        gbc.writeMem(0xec6e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2be5, gbc.sp());
        EXPECT(0xec70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec6e));
        EXPECT(0x63, gbc.readMem(0xec6f));
        // CB 63 00DF
        gbc.setState(0x9a79, 0xdadd, 0xa40, 0xf9fd, 0x8843, 0x68ca, 0x1, 0x0);
        gbc.writeMem(0x9a79, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xdadd, gbc.sp());
        EXPECT(0x9a7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a79));
        EXPECT(0x63, gbc.readMem(0x9a7a));
        // CB 63 00E0
        gbc.setState(0xe068, 0x8a88, 0xdbd0, 0xf2c5, 0x8915, 0x571b, 0x0, 0x1);
        gbc.writeMem(0xe068, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8a88, gbc.sp());
        EXPECT(0xe06a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe068));
        EXPECT(0x63, gbc.readMem(0xe069));
        // CB 63 00E1
        gbc.setState(0x30c9, 0xca8, 0xf2e0, 0xa26a, 0x3ff1, 0xf72c, 0x1, 0x0);
        gbc.writeMem(0x30c9, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xca8, gbc.sp());
        EXPECT(0x30cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 00E2
        gbc.setState(0xa2f, 0xc2dc, 0xa5f0, 0x174e, 0xe93e, 0x768c, 0x1, 0x1);
        gbc.writeMem(0xa2f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc2dc, gbc.sp());
        EXPECT(0xa31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 00E4
        gbc.setState(0x8b0a, 0x3876, 0x7150, 0x6da8, 0x21c0, 0x901, 0x0, 0x0);
        gbc.writeMem(0x8b0a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3876, gbc.sp());
        EXPECT(0x8b0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b0a));
        EXPECT(0x63, gbc.readMem(0x8b0b));
        // CB 63 00E5
        gbc.setState(0x9c48, 0x28d6, 0x48f0, 0x214d, 0x72cf, 0xf215, 0x1, 0x0);
        gbc.writeMem(0x9c48, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x28d6, gbc.sp());
        EXPECT(0x9c4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c48));
        EXPECT(0x63, gbc.readMem(0x9c49));
        // CB 63 00E6
        gbc.setState(0x2809, 0x897c, 0x3900, 0x47d7, 0x2c6d, 0xeebe, 0x0, 0x1);
        gbc.writeMem(0x2809, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x897c, gbc.sp());
        EXPECT(0x280b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 00E7
        gbc.setState(0x2881, 0xc4a2, 0x14d0, 0x16f8, 0x7cd0, 0xa3c5, 0x1, 0x1);
        gbc.writeMem(0x2881, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc4a2, gbc.sp());
        EXPECT(0x2883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 00E8
        gbc.setState(0x5ce, 0x2d81, 0x6bc0, 0xc78, 0x6391, 0x5511, 0x1, 0x0);
        gbc.writeMem(0x5ce, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2d81, gbc.sp());
        EXPECT(0x5d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 00E9
        gbc.setState(0x8636, 0x3d31, 0x7350, 0x420f, 0x176f, 0x6d32, 0x0, 0x1);
        gbc.writeMem(0x8636, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3d31, gbc.sp());
        EXPECT(0x8638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8636));
        EXPECT(0x63, gbc.readMem(0x8637));
        // CB 63 00EB
        gbc.setState(0x3a14, 0xf3ef, 0xc3f0, 0xc360, 0xeac, 0xc8b7, 0x0, 0x1);
        gbc.writeMem(0x3a14, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf3ef, gbc.sp());
        EXPECT(0x3a16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 00EC
        gbc.setState(0xc13d, 0xe83a, 0xb740, 0xe174, 0x82f4, 0xc3c8, 0x1, 0x1);
        gbc.writeMem(0xc13d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe83a, gbc.sp());
        EXPECT(0xc13f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc13d));
        EXPECT(0x63, gbc.readMem(0xc13e));
        // CB 63 00ED
        gbc.setState(0xb248, 0xf8df, 0xf7c0, 0xf5e2, 0x9797, 0x4948, 0x0, 0x0);
        gbc.writeMem(0xb248, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf8df, gbc.sp());
        EXPECT(0xb24a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb248));
        EXPECT(0x63, gbc.readMem(0xb249));
        // CB 63 00EE
        gbc.setState(0xbec6, 0x4da1, 0xefb0, 0xf69c, 0x317a, 0xec7b, 0x1, 0x1);
        gbc.writeMem(0xbec6, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4da1, gbc.sp());
        EXPECT(0xbec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbec6));
        EXPECT(0x63, gbc.readMem(0xbec7));
        // CB 63 00EF
        gbc.setState(0x672d, 0x34a8, 0x18b0, 0x6e25, 0xd569, 0x8af5, 0x1, 0x1);
        gbc.writeMem(0x672d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x34a8, gbc.sp());
        EXPECT(0x672f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 00F1
        gbc.setState(0xeb5a, 0xcf62, 0x24e0, 0x6d1e, 0x7fd9, 0x2bd3, 0x0, 0x1);
        gbc.writeMem(0xeb5a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xcf62, gbc.sp());
        EXPECT(0xeb5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb5a));
        EXPECT(0x63, gbc.readMem(0xeb5b));
        // CB 63 00F2
        gbc.setState(0xb4f9, 0x3949, 0x75e0, 0xbf03, 0x8634, 0x64ff, 0x1, 0x1);
        gbc.writeMem(0xb4f9, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3949, gbc.sp());
        EXPECT(0xb4fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4f9));
        EXPECT(0x63, gbc.readMem(0xb4fa));
        // CB 63 00F3
        gbc.setState(0x27c, 0xdc50, 0xe40, 0x4a68, 0x33ef, 0x370a, 0x0, 0x0);
        gbc.writeMem(0x27c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xdc50, gbc.sp());
        EXPECT(0x27e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 00F4
        gbc.setState(0x10a3, 0xf805, 0x34d0, 0x93e4, 0x1d6b, 0x3501, 0x1, 0x1);
        gbc.writeMem(0x10a3, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf805, gbc.sp());
        EXPECT(0x10a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 00F5
        gbc.setState(0x6ae6, 0x7642, 0x4a00, 0xee25, 0xa2bd, 0x5ea1, 0x0, 0x1);
        gbc.writeMem(0x6ae6, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7642, gbc.sp());
        EXPECT(0x6ae8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 00F6
        gbc.setState(0x5f12, 0x5d4b, 0x8070, 0xc06a, 0x3924, 0xc339, 0x1, 0x0);
        gbc.writeMem(0x5f12, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5d4b, gbc.sp());
        EXPECT(0x5f14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 00F8
        gbc.setState(0x9482, 0x98fe, 0xb9b0, 0x199f, 0x5cc, 0x8eb, 0x1, 0x0);
        gbc.writeMem(0x9482, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x98fe, gbc.sp());
        EXPECT(0x9484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9482));
        EXPECT(0x63, gbc.readMem(0x9483));
        // CB 63 00F9
        gbc.setState(0x5345, 0x94cb, 0x6390, 0xe79d, 0x6d09, 0xb63, 0x0, 0x1);
        gbc.writeMem(0x5345, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x94cb, gbc.sp());
        EXPECT(0x5347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 00FA
        gbc.setState(0x2dd7, 0x9e8d, 0x68f0, 0xd5fa, 0xd94a, 0xf6fd, 0x0, 0x0);
        gbc.writeMem(0x2dd7, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9e8d, gbc.sp());
        EXPECT(0x2dd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 00FB
        gbc.setState(0x97bb, 0xd020, 0xce00, 0x9611, 0x25ce, 0xfb51, 0x1, 0x1);
        gbc.writeMem(0x97bb, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd020, gbc.sp());
        EXPECT(0x97bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97bb));
        EXPECT(0x63, gbc.readMem(0x97bc));
        // CB 63 00FC
        gbc.setState(0x8e44, 0xc1cf, 0x4e80, 0xfddd, 0x4bb, 0xecdb, 0x0, 0x0);
        gbc.writeMem(0x8e44, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc1cf, gbc.sp());
        EXPECT(0x8e46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e44));
        EXPECT(0x63, gbc.readMem(0x8e45));
        // CB 63 00FD
        gbc.setState(0xdd02, 0x92eb, 0xad70, 0xaef0, 0x318, 0xd199, 0x0, 0x1);
        gbc.writeMem(0xdd02, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x92eb, gbc.sp());
        EXPECT(0xdd04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd02));
        EXPECT(0x63, gbc.readMem(0xdd03));
        // CB 63 00FE
        gbc.setState(0x275e, 0xf506, 0x4f40, 0x7653, 0x9dc, 0xbe18, 0x0, 0x0);
        gbc.writeMem(0x275e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf506, gbc.sp());
        EXPECT(0x2760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0100
        gbc.setState(0xc5ec, 0x6c4f, 0xbc30, 0x5b5, 0x56cd, 0x7ce0, 0x1, 0x0);
        gbc.writeMem(0xc5ec, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6c4f, gbc.sp());
        EXPECT(0xc5ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5ec));
        EXPECT(0x63, gbc.readMem(0xc5ed));
        // CB 63 0101
        gbc.setState(0x7557, 0x7a4a, 0xd800, 0x3fdc, 0xfa6b, 0xaf49, 0x1, 0x0);
        gbc.writeMem(0x7557, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7a4a, gbc.sp());
        EXPECT(0x7559, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0102
        gbc.setState(0x6ccc, 0xe76d, 0xa00, 0x55e8, 0x3ce9, 0xb98a, 0x0, 0x1);
        gbc.writeMem(0x6ccc, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe76d, gbc.sp());
        EXPECT(0x6cce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0103
        gbc.setState(0x240b, 0x5c63, 0xd080, 0x6b12, 0x5f8f, 0xaad3, 0x1, 0x1);
        gbc.writeMem(0x240b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5c63, gbc.sp());
        EXPECT(0x240d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0105
        gbc.setState(0xcd79, 0xc53, 0x1450, 0x7420, 0xf915, 0xcf42, 0x1, 0x0);
        gbc.writeMem(0xcd79, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc53, gbc.sp());
        EXPECT(0xcd7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd79));
        EXPECT(0x63, gbc.readMem(0xcd7a));
        // CB 63 0106
        gbc.setState(0x66ac, 0xaf98, 0x4410, 0xbaa1, 0xe391, 0x4376, 0x1, 0x1);
        gbc.writeMem(0x66ac, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xaf98, gbc.sp());
        EXPECT(0x66ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0108
        gbc.setState(0x15cc, 0xffab, 0x5120, 0x1498, 0x571f, 0x5cbe, 0x0, 0x0);
        gbc.writeMem(0x15cc, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xffab, gbc.sp());
        EXPECT(0x15ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0109
        gbc.setState(0x1631, 0x36c0, 0xa0c0, 0x5237, 0xe13, 0x1fc8, 0x1, 0x1);
        gbc.writeMem(0x1631, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x36c0, gbc.sp());
        EXPECT(0x1633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 010A
        gbc.setState(0xc103, 0xc33c, 0xc280, 0xac31, 0x67d6, 0x534, 0x1, 0x1);
        gbc.writeMem(0xc103, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc33c, gbc.sp());
        EXPECT(0xc105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc103));
        EXPECT(0x63, gbc.readMem(0xc104));
        // CB 63 010B
        gbc.setState(0xd330, 0x493f, 0x30c0, 0x9a48, 0xad3d, 0x6cf4, 0x0, 0x1);
        gbc.writeMem(0xd330, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x493f, gbc.sp());
        EXPECT(0xd332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd330));
        EXPECT(0x63, gbc.readMem(0xd331));
        // CB 63 010C
        gbc.setState(0x74bf, 0x5d8d, 0x3330, 0xec1, 0xce38, 0x8aa7, 0x1, 0x0);
        gbc.writeMem(0x74bf, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5d8d, gbc.sp());
        EXPECT(0x74c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 010D
        gbc.setState(0xd3fc, 0x6b28, 0x8420, 0x4f9f, 0x206a, 0xc1b3, 0x1, 0x0);
        gbc.writeMem(0xd3fc, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6b28, gbc.sp());
        EXPECT(0xd3fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3fc));
        EXPECT(0x63, gbc.readMem(0xd3fd));
        // CB 63 010E
        gbc.setState(0x7859, 0xeb0d, 0x7ae0, 0xf2d8, 0xd69c, 0x198e, 0x0, 0x0);
        gbc.writeMem(0x7859, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xeb0d, gbc.sp());
        EXPECT(0x785b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 010F
        gbc.setState(0x51d8, 0x6793, 0xbad0, 0xd789, 0xbe9e, 0x9ef4, 0x0, 0x1);
        gbc.writeMem(0x51d8, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6793, gbc.sp());
        EXPECT(0x51da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0110
        gbc.setState(0x844f, 0x1d1c, 0x1690, 0x75c8, 0xb91d, 0xd37d, 0x0, 0x1);
        gbc.writeMem(0x844f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1d1c, gbc.sp());
        EXPECT(0x8451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x844f));
        EXPECT(0x63, gbc.readMem(0x8450));
        // CB 63 0111
        gbc.setState(0xdb35, 0x50c3, 0x7610, 0x7e42, 0xa32e, 0x2a92, 0x1, 0x1);
        gbc.writeMem(0xdb35, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x50c3, gbc.sp());
        EXPECT(0xdb37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb35));
        EXPECT(0x63, gbc.readMem(0xdb36));
        // CB 63 0112
        gbc.setState(0xefcb, 0x62e0, 0x9ab0, 0x22d8, 0x4dff, 0x5a7a, 0x0, 0x1);
        gbc.writeMem(0xefcb, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x62e0, gbc.sp());
        EXPECT(0xefcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefcb));
        EXPECT(0x63, gbc.readMem(0xefcc));
        // CB 63 0113
        gbc.setState(0x155, 0x258e, 0xebd0, 0x9cb5, 0x1bb2, 0x3c19, 0x0, 0x0);
        gbc.writeMem(0x155, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x258e, gbc.sp());
        EXPECT(0x157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0114
        gbc.setState(0x2361, 0xd7e6, 0x16e0, 0x3ace, 0x85a3, 0xddd7, 0x0, 0x0);
        gbc.writeMem(0x2361, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd7e6, gbc.sp());
        EXPECT(0x2363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0115
        gbc.setState(0xeb9, 0x34ee, 0x48e0, 0xf1db, 0x4245, 0x31f, 0x0, 0x1);
        gbc.writeMem(0xeb9, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x34ee, gbc.sp());
        EXPECT(0xebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0116
        gbc.setState(0xa8d9, 0x29bf, 0xec90, 0xdcd4, 0xd1ce, 0xed6a, 0x0, 0x0);
        gbc.writeMem(0xa8d9, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x29bf, gbc.sp());
        EXPECT(0xa8db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8d9));
        EXPECT(0x63, gbc.readMem(0xa8da));
        // CB 63 0117
        gbc.setState(0x914b, 0x6a1a, 0x12f0, 0xe26a, 0x70f3, 0x9d6a, 0x0, 0x0);
        gbc.writeMem(0x914b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6a1a, gbc.sp());
        EXPECT(0x914d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x914b));
        EXPECT(0x63, gbc.readMem(0x914c));
        // CB 63 0118
        gbc.setState(0xc955, 0xa7dd, 0xa080, 0x3aa8, 0xbca8, 0xff0a, 0x1, 0x1);
        gbc.writeMem(0xc955, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa7dd, gbc.sp());
        EXPECT(0xc957, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc955));
        EXPECT(0x63, gbc.readMem(0xc956));
        // CB 63 0119
        gbc.setState(0x4c89, 0xa751, 0xc040, 0xb4f1, 0x711e, 0x6d9f, 0x1, 0x0);
        gbc.writeMem(0x4c89, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa751, gbc.sp());
        EXPECT(0x4c8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 011A
        gbc.setState(0x2cb6, 0xa843, 0xe3e0, 0x8688, 0xcddd, 0x2f57, 0x0, 0x0);
        gbc.writeMem(0x2cb6, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa843, gbc.sp());
        EXPECT(0x2cb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 011B
        gbc.setState(0xc4e3, 0x2674, 0xeee0, 0x26e1, 0xbf00, 0xad94, 0x1, 0x0);
        gbc.writeMem(0xc4e3, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2674, gbc.sp());
        EXPECT(0xc4e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4e3));
        EXPECT(0x63, gbc.readMem(0xc4e4));
        // CB 63 011C
        gbc.setState(0xd137, 0xd85e, 0xadd0, 0x43a1, 0x16f, 0x3154, 0x1, 0x1);
        gbc.writeMem(0xd137, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd85e, gbc.sp());
        EXPECT(0xd139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd137));
        EXPECT(0x63, gbc.readMem(0xd138));
        // CB 63 011D
        gbc.setState(0xed81, 0x0, 0x870, 0x3aa8, 0xd334, 0x951e, 0x1, 0x0);
        gbc.writeMem(0xed81, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x0, gbc.sp());
        EXPECT(0xed83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed81));
        EXPECT(0x63, gbc.readMem(0xed82));
        // CB 63 011E
        gbc.setState(0xb21e, 0x6199, 0x21e0, 0xa4a7, 0xff2b, 0x582d, 0x0, 0x0);
        gbc.writeMem(0xb21e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6199, gbc.sp());
        EXPECT(0xb220, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb21e));
        EXPECT(0x63, gbc.readMem(0xb21f));
        // CB 63 011F
        gbc.setState(0x1eb0, 0xc1db, 0xfb10, 0xc2c9, 0xc45c, 0x6a03, 0x1, 0x1);
        gbc.writeMem(0x1eb0, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc1db, gbc.sp());
        EXPECT(0x1eb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0120
        gbc.setState(0x210a, 0x5412, 0xe870, 0xc6ca, 0xe7d0, 0xe2b1, 0x0, 0x1);
        gbc.writeMem(0x210a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5412, gbc.sp());
        EXPECT(0x210c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0121
        gbc.setState(0xd27c, 0xf3d4, 0xb870, 0x89da, 0xf924, 0xc7cd, 0x0, 0x1);
        gbc.writeMem(0xd27c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf3d4, gbc.sp());
        EXPECT(0xd27e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd27c));
        EXPECT(0x63, gbc.readMem(0xd27d));
        // CB 63 0123
        gbc.setState(0x4da5, 0x5c17, 0x89c0, 0x5e2, 0x71b1, 0xa9fa, 0x1, 0x1);
        gbc.writeMem(0x4da5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5c17, gbc.sp());
        EXPECT(0x4da7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0124
        gbc.setState(0x28e, 0x934b, 0xf180, 0xf0f8, 0x2016, 0xf2bc, 0x0, 0x1);
        gbc.writeMem(0x28e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x934b, gbc.sp());
        EXPECT(0x290, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0125
        gbc.setState(0x7355, 0x5539, 0x67e0, 0xe073, 0x3419, 0xac73, 0x1, 0x1);
        gbc.writeMem(0x7355, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x5539, gbc.sp());
        EXPECT(0x7357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0126
        gbc.setState(0x726f, 0x8512, 0xbec0, 0x7463, 0x4396, 0x3b12, 0x0, 0x0);
        gbc.writeMem(0x726f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8512, gbc.sp());
        EXPECT(0x7271, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0127
        gbc.setState(0x2ffc, 0x234, 0x6ed0, 0xbde7, 0x1157, 0xd360, 0x0, 0x1);
        gbc.writeMem(0x2ffc, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x234, gbc.sp());
        EXPECT(0x2ffe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0128
        gbc.setState(0x680, 0xa11b, 0x21a0, 0xf976, 0x2249, 0xf5ba, 0x0, 0x1);
        gbc.writeMem(0x680, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa11b, gbc.sp());
        EXPECT(0x682, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0129
        gbc.setState(0x9d0b, 0xd68c, 0x7d40, 0x70cf, 0x6c60, 0x80b0, 0x1, 0x1);
        gbc.writeMem(0x9d0b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd68c, gbc.sp());
        EXPECT(0x9d0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d0b));
        EXPECT(0x63, gbc.readMem(0x9d0c));
        // CB 63 012A
        gbc.setState(0xa441, 0x3b73, 0x7a70, 0x2805, 0x9d76, 0xe029, 0x0, 0x1);
        gbc.writeMem(0xa441, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3b73, gbc.sp());
        EXPECT(0xa443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa441));
        EXPECT(0x63, gbc.readMem(0xa442));
        // CB 63 012B
        gbc.setState(0xf08, 0xae7e, 0xba60, 0x55b0, 0x436b, 0xab9c, 0x0, 0x1);
        gbc.writeMem(0xf08, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xae7e, gbc.sp());
        EXPECT(0xf0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 012C
        gbc.setState(0xfff, 0x6fa7, 0x1a20, 0x4f99, 0x19a1, 0x1f53, 0x1, 0x0);
        gbc.writeMem(0xfff, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6fa7, gbc.sp());
        EXPECT(0x1001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 012D
        gbc.setState(0x5f71, 0x38a3, 0xc160, 0xe50f, 0x7e50, 0xeb96, 0x0, 0x1);
        gbc.writeMem(0x5f71, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x38a3, gbc.sp());
        EXPECT(0x5f73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 012E
        gbc.setState(0x5ead, 0x3c1e, 0xce00, 0xae9, 0x8a8e, 0xa717, 0x0, 0x1);
        gbc.writeMem(0x5ead, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3c1e, gbc.sp());
        EXPECT(0x5eaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 012F
        gbc.setState(0xd8a4, 0x46b3, 0x1a00, 0x74e1, 0xd94f, 0xd1fe, 0x1, 0x1);
        gbc.writeMem(0xd8a4, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x46b3, gbc.sp());
        EXPECT(0xd8a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8a4));
        EXPECT(0x63, gbc.readMem(0xd8a5));
        // CB 63 0130
        gbc.setState(0x9396, 0xa10c, 0x6040, 0x9712, 0x8b65, 0xb127, 0x1, 0x0);
        gbc.writeMem(0x9396, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa10c, gbc.sp());
        EXPECT(0x9398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9396));
        EXPECT(0x63, gbc.readMem(0x9397));
        // CB 63 0131
        gbc.setState(0x7f08, 0x9e9a, 0xd090, 0x55c9, 0x5325, 0xe96, 0x1, 0x1);
        gbc.writeMem(0x7f08, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9e9a, gbc.sp());
        EXPECT(0x7f0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0132
        gbc.setState(0x2706, 0xbab6, 0xd210, 0xbd60, 0x874a, 0xe3f8, 0x0, 0x0);
        gbc.writeMem(0x2706, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbab6, gbc.sp());
        EXPECT(0x2708, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0133
        gbc.setState(0xbc86, 0x1afa, 0x390, 0xcd5, 0xce5, 0xad50, 0x0, 0x1);
        gbc.writeMem(0xbc86, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1afa, gbc.sp());
        EXPECT(0xbc88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc86));
        EXPECT(0x63, gbc.readMem(0xbc87));
        // CB 63 0134
        gbc.setState(0x8435, 0x1b51, 0x520, 0x165d, 0xaa85, 0x3062, 0x1, 0x1);
        gbc.writeMem(0x8435, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1b51, gbc.sp());
        EXPECT(0x8437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8435));
        EXPECT(0x63, gbc.readMem(0x8436));
        // CB 63 0135
        gbc.setState(0xc73a, 0xfd3f, 0xc10, 0x4dd4, 0x58c2, 0x632f, 0x1, 0x0);
        gbc.writeMem(0xc73a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xfd3f, gbc.sp());
        EXPECT(0xc73c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc73a));
        EXPECT(0x63, gbc.readMem(0xc73b));
        // CB 63 0136
        gbc.setState(0xbb3c, 0x38fa, 0x7920, 0xdcb9, 0x143e, 0x9cca, 0x1, 0x1);
        gbc.writeMem(0xbb3c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x38fa, gbc.sp());
        EXPECT(0xbb3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb3c));
        EXPECT(0x63, gbc.readMem(0xbb3d));
        // CB 63 0137
        gbc.setState(0xd0f7, 0xc421, 0xf1b0, 0x824a, 0x594d, 0x1218, 0x1, 0x1);
        gbc.writeMem(0xd0f7, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc421, gbc.sp());
        EXPECT(0xd0f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0f7));
        EXPECT(0x63, gbc.readMem(0xd0f8));
        // CB 63 0139
        gbc.setState(0x926e, 0xd814, 0x340, 0x4c1e, 0xdd15, 0xb42f, 0x1, 0x0);
        gbc.writeMem(0x926e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd814, gbc.sp());
        EXPECT(0x9270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x926e));
        EXPECT(0x63, gbc.readMem(0x926f));
        // CB 63 013B
        gbc.setState(0xe795, 0xc88f, 0x3d0, 0x73a6, 0xe36c, 0xd322, 0x0, 0x0);
        gbc.writeMem(0xe795, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc88f, gbc.sp());
        EXPECT(0xe797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe795));
        EXPECT(0x63, gbc.readMem(0xe796));
        // CB 63 013C
        gbc.setState(0x7a8b, 0xd2ba, 0x76e0, 0x742d, 0xd3dd, 0x5127, 0x0, 0x0);
        gbc.writeMem(0x7a8b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd2ba, gbc.sp());
        EXPECT(0x7a8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 013D
        gbc.setState(0x498e, 0xe0d4, 0xf710, 0x8376, 0x6ddf, 0x7f7c, 0x1, 0x0);
        gbc.writeMem(0x498e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe0d4, gbc.sp());
        EXPECT(0x4990, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 013E
        gbc.setState(0x947b, 0x26e6, 0xdce0, 0x1f9d, 0x4fc9, 0xe614, 0x1, 0x0);
        gbc.writeMem(0x947b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x26e6, gbc.sp());
        EXPECT(0x947d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x947b));
        EXPECT(0x63, gbc.readMem(0x947c));
        // CB 63 013F
        gbc.setState(0x618c, 0xb0f9, 0xf270, 0x7fc3, 0x309d, 0x787c, 0x0, 0x0);
        gbc.writeMem(0x618c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb0f9, gbc.sp());
        EXPECT(0x618e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0140
        gbc.setState(0xbd22, 0xd7ab, 0x5bf0, 0xffae, 0x8e5e, 0x496c, 0x1, 0x0);
        gbc.writeMem(0xbd22, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd7ab, gbc.sp());
        EXPECT(0xbd24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd22));
        EXPECT(0x63, gbc.readMem(0xbd23));
        // CB 63 0141
        gbc.setState(0x72f8, 0x56d2, 0xc590, 0xc34f, 0xf106, 0xe7c5, 0x0, 0x0);
        gbc.writeMem(0x72f8, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x56d2, gbc.sp());
        EXPECT(0x72fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0142
        gbc.setState(0x66a7, 0xaf06, 0xeca0, 0x6971, 0x721d, 0x793d, 0x1, 0x1);
        gbc.writeMem(0x66a7, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xaf06, gbc.sp());
        EXPECT(0x66a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0143
        gbc.setState(0x775e, 0xfcea, 0xb660, 0xc1ae, 0xd5dd, 0x892b, 0x0, 0x0);
        gbc.writeMem(0x775e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xfcea, gbc.sp());
        EXPECT(0x7760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0144
        gbc.setState(0x2536, 0x2853, 0x7d10, 0x874b, 0x4f2e, 0x2f72, 0x0, 0x0);
        gbc.writeMem(0x2536, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2853, gbc.sp());
        EXPECT(0x2538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0145
        gbc.setState(0x3343, 0xf967, 0x61e0, 0xc4da, 0xc8d7, 0x4dbd, 0x0, 0x0);
        gbc.writeMem(0x3343, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf967, gbc.sp());
        EXPECT(0x3345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0146
        gbc.setState(0x4f88, 0x74f, 0x8f50, 0xacc6, 0xf248, 0xf2be, 0x1, 0x1);
        gbc.writeMem(0x4f88, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x74f, gbc.sp());
        EXPECT(0x4f8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0147
        gbc.setState(0x52b7, 0x52f9, 0x1e20, 0xa342, 0x4c03, 0xf371, 0x1, 0x0);
        gbc.writeMem(0x52b7, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x52f9, gbc.sp());
        EXPECT(0x52b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0148
        gbc.setState(0x6d2, 0xa84c, 0x4030, 0x98b2, 0x8044, 0x66af, 0x1, 0x0);
        gbc.writeMem(0x6d2, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa84c, gbc.sp());
        EXPECT(0x6d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0149
        gbc.setState(0x4ef2, 0x3200, 0xb70, 0x3515, 0xf6df, 0x8d3a, 0x0, 0x0);
        gbc.writeMem(0x4ef2, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3200, gbc.sp());
        EXPECT(0x4ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 014A
        gbc.setState(0x861b, 0xa358, 0x8100, 0x3757, 0x3c66, 0xddcb, 0x1, 0x0);
        gbc.writeMem(0x861b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa358, gbc.sp());
        EXPECT(0x861d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x861b));
        EXPECT(0x63, gbc.readMem(0x861c));
        // CB 63 014B
        gbc.setState(0x8387, 0x2f6, 0xee0, 0x1da8, 0x5beb, 0xaa63, 0x1, 0x1);
        gbc.writeMem(0x8387, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2f6, gbc.sp());
        EXPECT(0x8389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8387));
        EXPECT(0x63, gbc.readMem(0x8388));
        // CB 63 014C
        gbc.setState(0x6130, 0x872e, 0x28c0, 0xc764, 0xbd57, 0x2c12, 0x0, 0x0);
        gbc.writeMem(0x6130, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x872e, gbc.sp());
        EXPECT(0x6132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 014D
        gbc.setState(0x251d, 0xe69, 0x9f20, 0xfe97, 0x2ec3, 0xf59f, 0x0, 0x1);
        gbc.writeMem(0x251d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe69, gbc.sp());
        EXPECT(0x251f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 014E
        gbc.setState(0xd4ff, 0xc5ec, 0x2820, 0xdf5b, 0x1b1a, 0x53a3, 0x1, 0x0);
        gbc.writeMem(0xd4ff, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc5ec, gbc.sp());
        EXPECT(0xd501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4ff));
        EXPECT(0x63, gbc.readMem(0xd500));
        // CB 63 014F
        gbc.setState(0xcc66, 0xa691, 0xbfa0, 0x27cd, 0x775d, 0xf340, 0x0, 0x0);
        gbc.writeMem(0xcc66, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa691, gbc.sp());
        EXPECT(0xcc68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc66));
        EXPECT(0x63, gbc.readMem(0xcc67));
        // CB 63 0150
        gbc.setState(0x9b96, 0x16ad, 0xa720, 0x4f03, 0x1ba2, 0x75c3, 0x0, 0x1);
        gbc.writeMem(0x9b96, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x16ad, gbc.sp());
        EXPECT(0x9b98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b96));
        EXPECT(0x63, gbc.readMem(0x9b97));
        // CB 63 0151
        gbc.setState(0x177c, 0x27fa, 0xe130, 0xd6e0, 0x64db, 0x3f3a, 0x1, 0x1);
        gbc.writeMem(0x177c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x27fa, gbc.sp());
        EXPECT(0x177e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0152
        gbc.setState(0xc7f7, 0x3ca6, 0x8d20, 0x2aac, 0xa383, 0x7cc3, 0x1, 0x1);
        gbc.writeMem(0xc7f7, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3ca6, gbc.sp());
        EXPECT(0xc7f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7f7));
        EXPECT(0x63, gbc.readMem(0xc7f8));
        // CB 63 0153
        gbc.setState(0x8943, 0x1195, 0x22d0, 0xac8c, 0x7ee6, 0xb164, 0x1, 0x1);
        gbc.writeMem(0x8943, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1195, gbc.sp());
        EXPECT(0x8945, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8943));
        EXPECT(0x63, gbc.readMem(0x8944));
        // CB 63 0154
        gbc.setState(0x52bb, 0x3944, 0x6e90, 0xfc6c, 0x8a9e, 0xed1c, 0x1, 0x0);
        gbc.writeMem(0x52bb, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3944, gbc.sp());
        EXPECT(0x52bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0155
        gbc.setState(0xb423, 0x3acc, 0x8de0, 0x16db, 0x9d1e, 0xa642, 0x1, 0x0);
        gbc.writeMem(0xb423, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3acc, gbc.sp());
        EXPECT(0xb425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb423));
        EXPECT(0x63, gbc.readMem(0xb424));
        // CB 63 0156
        gbc.setState(0xe4d5, 0x7880, 0x6110, 0xaf23, 0x6193, 0xe94d, 0x0, 0x0);
        gbc.writeMem(0xe4d5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7880, gbc.sp());
        EXPECT(0xe4d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4d5));
        EXPECT(0x63, gbc.readMem(0xe4d6));
        // CB 63 0157
        gbc.setState(0xabf5, 0x5a58, 0xef00, 0xbe48, 0xf4c9, 0xd64d, 0x1, 0x1);
        gbc.writeMem(0xabf5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5a58, gbc.sp());
        EXPECT(0xabf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabf5));
        EXPECT(0x63, gbc.readMem(0xabf6));
        // CB 63 0158
        gbc.setState(0x292e, 0xf772, 0x9f00, 0x9799, 0x5e75, 0x4259, 0x0, 0x1);
        gbc.writeMem(0x292e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf772, gbc.sp());
        EXPECT(0x2930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0159
        gbc.setState(0xb27, 0x1862, 0x9f70, 0x392f, 0x7324, 0xd0ed, 0x1, 0x0);
        gbc.writeMem(0xb27, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1862, gbc.sp());
        EXPECT(0xb29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 015A
        gbc.setState(0x5a87, 0x88ca, 0xc7f0, 0xc1e8, 0x346d, 0x3a52, 0x0, 0x1);
        gbc.writeMem(0x5a87, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x88ca, gbc.sp());
        EXPECT(0x5a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 015B
        gbc.setState(0xdae5, 0x733b, 0x2180, 0x3130, 0x7fcd, 0x5016, 0x0, 0x1);
        gbc.writeMem(0xdae5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x733b, gbc.sp());
        EXPECT(0xdae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdae5));
        EXPECT(0x63, gbc.readMem(0xdae6));
        // CB 63 015C
        gbc.setState(0x2386, 0x1903, 0x41f0, 0x13e2, 0xb610, 0xfdc6, 0x1, 0x1);
        gbc.writeMem(0x2386, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1903, gbc.sp());
        EXPECT(0x2388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 015D
        gbc.setState(0xcf84, 0xf6ff, 0x8c60, 0xf0ba, 0x925c, 0x531d, 0x1, 0x1);
        gbc.writeMem(0xcf84, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf6ff, gbc.sp());
        EXPECT(0xcf86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf84));
        EXPECT(0x63, gbc.readMem(0xcf85));
        // CB 63 015E
        gbc.setState(0x5773, 0x6d55, 0xd8c0, 0x52b8, 0x83e0, 0x706a, 0x1, 0x1);
        gbc.writeMem(0x5773, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6d55, gbc.sp());
        EXPECT(0x5775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 015F
        gbc.setState(0x7fa, 0xf6bb, 0xfa0, 0x739d, 0xc732, 0xe9d4, 0x0, 0x1);
        gbc.writeMem(0x7fa, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf6bb, gbc.sp());
        EXPECT(0x7fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0160
        gbc.setState(0x24f5, 0xebe8, 0x18e0, 0xfcc4, 0x661f, 0xa6a5, 0x1, 0x1);
        gbc.writeMem(0x24f5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xebe8, gbc.sp());
        EXPECT(0x24f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0161
        gbc.setState(0xe615, 0x6893, 0x5b30, 0xfb5c, 0x745b, 0x7a4c, 0x0, 0x0);
        gbc.writeMem(0xe615, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6893, gbc.sp());
        EXPECT(0xe617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe615));
        EXPECT(0x63, gbc.readMem(0xe616));
        // CB 63 0162
        gbc.setState(0x1a0b, 0x369d, 0xd5d0, 0x3fd2, 0x7da8, 0x41f3, 0x1, 0x0);
        gbc.writeMem(0x1a0b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x369d, gbc.sp());
        EXPECT(0x1a0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0163
        gbc.setState(0x3aa2, 0xf6b1, 0xda30, 0x5bae, 0x1ed5, 0x455b, 0x0, 0x1);
        gbc.writeMem(0x3aa2, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf6b1, gbc.sp());
        EXPECT(0x3aa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0164
        gbc.setState(0x7a34, 0x44a4, 0x95c0, 0x1bed, 0x28eb, 0x3f1, 0x1, 0x1);
        gbc.writeMem(0x7a34, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x44a4, gbc.sp());
        EXPECT(0x7a36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0165
        gbc.setState(0x8b0a, 0xf5a4, 0x3830, 0x1e6d, 0x5e21, 0x213e, 0x0, 0x0);
        gbc.writeMem(0x8b0a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf5a4, gbc.sp());
        EXPECT(0x8b0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b0a));
        EXPECT(0x63, gbc.readMem(0x8b0b));
        // CB 63 0166
        gbc.setState(0xb145, 0x67cc, 0x1960, 0x188, 0xef85, 0xbd18, 0x0, 0x0);
        gbc.writeMem(0xb145, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x67cc, gbc.sp());
        EXPECT(0xb147, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb145));
        EXPECT(0x63, gbc.readMem(0xb146));
        // CB 63 0168
        gbc.setState(0x4946, 0x37ad, 0x6d60, 0xb7c6, 0x8212, 0x1632, 0x1, 0x0);
        gbc.writeMem(0x4946, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x37ad, gbc.sp());
        EXPECT(0x4948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0169
        gbc.setState(0x526, 0xc426, 0x8dd0, 0xc2bb, 0x8c4a, 0xeca1, 0x0, 0x1);
        gbc.writeMem(0x526, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc426, gbc.sp());
        EXPECT(0x528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 016A
        gbc.setState(0x6248, 0xd1c3, 0xa560, 0x8dc, 0x27ba, 0xe02f, 0x0, 0x0);
        gbc.writeMem(0x6248, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd1c3, gbc.sp());
        EXPECT(0x624a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 016B
        gbc.setState(0x4ed4, 0x736c, 0x5fd0, 0x17cc, 0xf284, 0x25c0, 0x1, 0x0);
        gbc.writeMem(0x4ed4, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x736c, gbc.sp());
        EXPECT(0x4ed6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 016C
        gbc.setState(0x2917, 0x49fa, 0x5610, 0xdaa9, 0x9cbd, 0xb729, 0x1, 0x0);
        gbc.writeMem(0x2917, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x49fa, gbc.sp());
        EXPECT(0x2919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 016D
        gbc.setState(0x295a, 0xe43d, 0x7b30, 0x7fef, 0xa300, 0x49cd, 0x0, 0x0);
        gbc.writeMem(0x295a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe43d, gbc.sp());
        EXPECT(0x295c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 016E
        gbc.setState(0x4300, 0xeefe, 0x350, 0x6ba, 0xceed, 0x7c70, 0x0, 0x1);
        gbc.writeMem(0x4300, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xeefe, gbc.sp());
        EXPECT(0x4302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 016F
        gbc.setState(0xca96, 0x90ca, 0x55c0, 0xbbc1, 0x76af, 0xa071, 0x0, 0x1);
        gbc.writeMem(0xca96, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x90ca, gbc.sp());
        EXPECT(0xca98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca96));
        EXPECT(0x63, gbc.readMem(0xca97));
        // CB 63 0170
        gbc.setState(0xe02b, 0x97b6, 0xfd00, 0x23cd, 0x49c1, 0x8ae6, 0x1, 0x0);
        gbc.writeMem(0xe02b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x97b6, gbc.sp());
        EXPECT(0xe02d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe02b));
        EXPECT(0x63, gbc.readMem(0xe02c));
        // CB 63 0171
        gbc.setState(0xf7e, 0x4bf, 0xdb00, 0x6215, 0x65b, 0x90a7, 0x1, 0x0);
        gbc.writeMem(0xf7e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4bf, gbc.sp());
        EXPECT(0xf80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0172
        gbc.setState(0xeac4, 0x59c3, 0xf4a0, 0xa1d6, 0x58d0, 0xd4f, 0x0, 0x1);
        gbc.writeMem(0xeac4, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x59c3, gbc.sp());
        EXPECT(0xeac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeac4));
        EXPECT(0x63, gbc.readMem(0xeac5));
        // CB 63 0173
        gbc.setState(0xb466, 0xb80f, 0x9de0, 0x1c9d, 0x641a, 0x2d96, 0x0, 0x1);
        gbc.writeMem(0xb466, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb80f, gbc.sp());
        EXPECT(0xb468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb466));
        EXPECT(0x63, gbc.readMem(0xb467));
        // CB 63 0174
        gbc.setState(0x46de, 0x8a38, 0x53e0, 0xe251, 0xb325, 0x2f98, 0x0, 0x0);
        gbc.writeMem(0x46de, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8a38, gbc.sp());
        EXPECT(0x46e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0175
        gbc.setState(0x7d72, 0x30d0, 0x8c20, 0x1665, 0xdea3, 0xc363, 0x0, 0x1);
        gbc.writeMem(0x7d72, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x30d0, gbc.sp());
        EXPECT(0x7d74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0176
        gbc.setState(0xea42, 0x903, 0x4b20, 0xa9b1, 0xcd5b, 0x2bb7, 0x0, 0x1);
        gbc.writeMem(0xea42, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x903, gbc.sp());
        EXPECT(0xea44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea42));
        EXPECT(0x63, gbc.readMem(0xea43));
        // CB 63 0177
        gbc.setState(0xa377, 0x62ea, 0xa250, 0x5a4d, 0x5619, 0xd038, 0x1, 0x0);
        gbc.writeMem(0xa377, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x62ea, gbc.sp());
        EXPECT(0xa379, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa377));
        EXPECT(0x63, gbc.readMem(0xa378));
        // CB 63 0178
        gbc.setState(0x9669, 0xf920, 0x83d0, 0xe904, 0x1c64, 0x7020, 0x0, 0x0);
        gbc.writeMem(0x9669, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf920, gbc.sp());
        EXPECT(0x966b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9669));
        EXPECT(0x63, gbc.readMem(0x966a));
        // CB 63 0179
        gbc.setState(0x9420, 0x39d7, 0xdfc0, 0xbe53, 0x4aaa, 0xb441, 0x1, 0x0);
        gbc.writeMem(0x9420, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x39d7, gbc.sp());
        EXPECT(0x9422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9420));
        EXPECT(0x63, gbc.readMem(0x9421));
        // CB 63 017A
        gbc.setState(0xe241, 0x795d, 0xca20, 0xf760, 0x6c3e, 0x4719, 0x1, 0x1);
        gbc.writeMem(0xe241, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x795d, gbc.sp());
        EXPECT(0xe243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe241));
        EXPECT(0x63, gbc.readMem(0xe242));
        // CB 63 017B
        gbc.setState(0x8e1a, 0x83f2, 0xecc0, 0xc294, 0x280c, 0x7409, 0x1, 0x0);
        gbc.writeMem(0x8e1a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x83f2, gbc.sp());
        EXPECT(0x8e1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e1a));
        EXPECT(0x63, gbc.readMem(0x8e1b));
        // CB 63 017C
        gbc.setState(0x1588, 0x77de, 0x6af0, 0x8346, 0xb2e3, 0x9a25, 0x0, 0x0);
        gbc.writeMem(0x1588, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x77de, gbc.sp());
        EXPECT(0x158a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 017D
        gbc.setState(0xa62e, 0xf99b, 0x5600, 0xcb59, 0x698d, 0xdc78, 0x0, 0x1);
        gbc.writeMem(0xa62e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf99b, gbc.sp());
        EXPECT(0xa630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa62e));
        EXPECT(0x63, gbc.readMem(0xa62f));
        // CB 63 017E
        gbc.setState(0x24b9, 0x4d9e, 0x51f0, 0x3bc2, 0xcd40, 0x162a, 0x0, 0x0);
        gbc.writeMem(0x24b9, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4d9e, gbc.sp());
        EXPECT(0x24bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 017F
        gbc.setState(0x6ff4, 0x586e, 0x88e0, 0xe796, 0xe08e, 0xa9f5, 0x0, 0x0);
        gbc.writeMem(0x6ff4, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x586e, gbc.sp());
        EXPECT(0x6ff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0180
        gbc.setState(0xbd5, 0xed7f, 0x2b20, 0x7bd, 0xa1d5, 0x36ea, 0x1, 0x0);
        gbc.writeMem(0xbd5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xed7f, gbc.sp());
        EXPECT(0xbd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0181
        gbc.setState(0xcb5f, 0xf984, 0x3d90, 0x7644, 0x8bad, 0xa35a, 0x0, 0x0);
        gbc.writeMem(0xcb5f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf984, gbc.sp());
        EXPECT(0xcb61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb5f));
        EXPECT(0x63, gbc.readMem(0xcb60));
        // CB 63 0182
        gbc.setState(0x92c2, 0x1c5e, 0x3b90, 0x3e0f, 0xce54, 0xca13, 0x1, 0x0);
        gbc.writeMem(0x92c2, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1c5e, gbc.sp());
        EXPECT(0x92c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92c2));
        EXPECT(0x63, gbc.readMem(0x92c3));
        // CB 63 0183
        gbc.setState(0x4523, 0x4099, 0xd3d0, 0xd367, 0x88a0, 0x6114, 0x0, 0x0);
        gbc.writeMem(0x4523, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4099, gbc.sp());
        EXPECT(0x4525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0184
        gbc.setState(0xc46c, 0xae45, 0xb950, 0x2617, 0xa6a6, 0xbcbe, 0x0, 0x0);
        gbc.writeMem(0xc46c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xae45, gbc.sp());
        EXPECT(0xc46e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc46c));
        EXPECT(0x63, gbc.readMem(0xc46d));
        // CB 63 0185
        gbc.setState(0x3a5, 0x1473, 0xebc0, 0x2cef, 0x6b96, 0xaabd, 0x1, 0x1);
        gbc.writeMem(0x3a5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1473, gbc.sp());
        EXPECT(0x3a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0186
        gbc.setState(0x13c1, 0xa298, 0x5ac0, 0xa5ff, 0x6732, 0x7f3c, 0x1, 0x0);
        gbc.writeMem(0x13c1, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa298, gbc.sp());
        EXPECT(0x13c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0187
        gbc.setState(0xce10, 0x5aa4, 0xdf90, 0xbac0, 0x7a2d, 0x6b76, 0x0, 0x0);
        gbc.writeMem(0xce10, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5aa4, gbc.sp());
        EXPECT(0xce12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce10));
        EXPECT(0x63, gbc.readMem(0xce11));
        // CB 63 0188
        gbc.setState(0x5cc5, 0x2044, 0x3cc0, 0xbddb, 0x9d2b, 0x46e3, 0x0, 0x0);
        gbc.writeMem(0x5cc5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2044, gbc.sp());
        EXPECT(0x5cc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0189
        gbc.setState(0xec52, 0x6df0, 0x9840, 0xa02f, 0x3a6b, 0xdb5f, 0x1, 0x1);
        gbc.writeMem(0xec52, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6df0, gbc.sp());
        EXPECT(0xec54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec52));
        EXPECT(0x63, gbc.readMem(0xec53));
        // CB 63 018A
        gbc.setState(0x2463, 0x2d56, 0xa470, 0xdf4a, 0xf5f7, 0x6edb, 0x1, 0x0);
        gbc.writeMem(0x2463, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2d56, gbc.sp());
        EXPECT(0x2465, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 018B
        gbc.setState(0xcd63, 0xc581, 0xfa40, 0x5b30, 0x1d6e, 0xb886, 0x0, 0x0);
        gbc.writeMem(0xcd63, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc581, gbc.sp());
        EXPECT(0xcd65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd63));
        EXPECT(0x63, gbc.readMem(0xcd64));
        // CB 63 018C
        gbc.setState(0x3b30, 0xa502, 0x7180, 0x8ac6, 0x2caf, 0x5d43, 0x1, 0x0);
        gbc.writeMem(0x3b30, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa502, gbc.sp());
        EXPECT(0x3b32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 018D
        gbc.setState(0x6043, 0x61b1, 0x35b0, 0x408a, 0x1585, 0xcb89, 0x0, 0x1);
        gbc.writeMem(0x6043, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x61b1, gbc.sp());
        EXPECT(0x6045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 018E
        gbc.setState(0xe83e, 0xdc34, 0x8440, 0xc776, 0xa9e9, 0x8592, 0x1, 0x1);
        gbc.writeMem(0xe83e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xdc34, gbc.sp());
        EXPECT(0xe840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe83e));
        EXPECT(0x63, gbc.readMem(0xe83f));
        // CB 63 018F
        gbc.setState(0x4a4, 0x4fb, 0x8d30, 0xffdf, 0xdec, 0xed5f, 0x1, 0x1);
        gbc.writeMem(0x4a4, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4fb, gbc.sp());
        EXPECT(0x4a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0190
        gbc.setState(0x5019, 0x37d, 0xce0, 0xb3cb, 0x9665, 0x236a, 0x1, 0x0);
        gbc.writeMem(0x5019, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x37d, gbc.sp());
        EXPECT(0x501b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0191
        gbc.setState(0xee1b, 0x3f4, 0x80d0, 0xd1a4, 0x8e37, 0x103b, 0x0, 0x1);
        gbc.writeMem(0xee1b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3f4, gbc.sp());
        EXPECT(0xee1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee1b));
        EXPECT(0x63, gbc.readMem(0xee1c));
        // CB 63 0192
        gbc.setState(0x7be9, 0xc0b7, 0x2460, 0x71fc, 0x8508, 0xb4f0, 0x0, 0x1);
        gbc.writeMem(0x7be9, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc0b7, gbc.sp());
        EXPECT(0x7beb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0193
        gbc.setState(0xb3ff, 0x7d7d, 0x7d30, 0xc4e5, 0x8072, 0xce40, 0x1, 0x0);
        gbc.writeMem(0xb3ff, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7d7d, gbc.sp());
        EXPECT(0xb401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3ff));
        EXPECT(0x63, gbc.readMem(0xb400));
        // CB 63 0194
        gbc.setState(0xa54e, 0xed47, 0x8a0, 0x7da5, 0xa945, 0x3cc3, 0x1, 0x1);
        gbc.writeMem(0xa54e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xed47, gbc.sp());
        EXPECT(0xa550, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa54e));
        EXPECT(0x63, gbc.readMem(0xa54f));
        // CB 63 0195
        gbc.setState(0x7544, 0x8052, 0x2300, 0x93e8, 0xa0da, 0x87ca, 0x0, 0x0);
        gbc.writeMem(0x7544, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8052, gbc.sp());
        EXPECT(0x7546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0196
        gbc.setState(0x3a48, 0x3d7d, 0x31c0, 0x5dae, 0x3922, 0x9b40, 0x0, 0x0);
        gbc.writeMem(0x3a48, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3d7d, gbc.sp());
        EXPECT(0x3a4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0197
        gbc.setState(0xa063, 0xa99b, 0xa2d0, 0x3298, 0xb472, 0xf409, 0x0, 0x0);
        gbc.writeMem(0xa063, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa99b, gbc.sp());
        EXPECT(0xa065, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa063));
        EXPECT(0x63, gbc.readMem(0xa064));
        // CB 63 0198
        gbc.setState(0xa1c8, 0x5326, 0xa900, 0x45ec, 0x28ec, 0xe856, 0x0, 0x0);
        gbc.writeMem(0xa1c8, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5326, gbc.sp());
        EXPECT(0xa1ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1c8));
        EXPECT(0x63, gbc.readMem(0xa1c9));
        // CB 63 0199
        gbc.setState(0x2b76, 0xaed9, 0x9fb0, 0x8b92, 0xba2c, 0xd92e, 0x0, 0x0);
        gbc.writeMem(0x2b76, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xaed9, gbc.sp());
        EXPECT(0x2b78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 019A
        gbc.setState(0x6ddb, 0xeb8f, 0x8580, 0x50f1, 0x42ce, 0x67ac, 0x0, 0x0);
        gbc.writeMem(0x6ddb, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xeb8f, gbc.sp());
        EXPECT(0x6ddd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 019B
        gbc.setState(0xd7f7, 0x82b5, 0x62f0, 0xbfc3, 0x68ea, 0xb1a2, 0x1, 0x1);
        gbc.writeMem(0xd7f7, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x82b5, gbc.sp());
        EXPECT(0xd7f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7f7));
        EXPECT(0x63, gbc.readMem(0xd7f8));
        // CB 63 019C
        gbc.setState(0xdd61, 0xdf03, 0x4cc0, 0xe1fd, 0xeb76, 0x91af, 0x0, 0x1);
        gbc.writeMem(0xdd61, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xdf03, gbc.sp());
        EXPECT(0xdd63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd61));
        EXPECT(0x63, gbc.readMem(0xdd62));
        // CB 63 019D
        gbc.setState(0x23a5, 0x7643, 0x4780, 0x92e, 0xe76c, 0x2d17, 0x1, 0x1);
        gbc.writeMem(0x23a5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7643, gbc.sp());
        EXPECT(0x23a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 019E
        gbc.setState(0x8d61, 0x8ab6, 0xc780, 0x830c, 0x5fcb, 0x94ec, 0x0, 0x0);
        gbc.writeMem(0x8d61, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8ab6, gbc.sp());
        EXPECT(0x8d63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d61));
        EXPECT(0x63, gbc.readMem(0x8d62));
        // CB 63 019F
        gbc.setState(0x589c, 0x5fba, 0x97d0, 0x55e5, 0xbf3, 0x528a, 0x1, 0x0);
        gbc.writeMem(0x589c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5fba, gbc.sp());
        EXPECT(0x589e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 01A0
        gbc.setState(0x82fc, 0x5f01, 0x430, 0x1949, 0x2b00, 0x8e6a, 0x1, 0x0);
        gbc.writeMem(0x82fc, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5f01, gbc.sp());
        EXPECT(0x82fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82fc));
        EXPECT(0x63, gbc.readMem(0x82fd));
        // CB 63 01A1
        gbc.setState(0x112d, 0x3679, 0xecc0, 0xd2b3, 0x6352, 0x95ca, 0x1, 0x0);
        gbc.writeMem(0x112d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3679, gbc.sp());
        EXPECT(0x112f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 01A2
        gbc.setState(0x5ae1, 0x8db3, 0xf920, 0x6293, 0x49a0, 0xd706, 0x0, 0x1);
        gbc.writeMem(0x5ae1, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8db3, gbc.sp());
        EXPECT(0x5ae3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 01A3
        gbc.setState(0xe74f, 0xc41f, 0xe140, 0xd867, 0x2a47, 0x7586, 0x0, 0x1);
        gbc.writeMem(0xe74f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc41f, gbc.sp());
        EXPECT(0xe751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe74f));
        EXPECT(0x63, gbc.readMem(0xe750));
        // CB 63 01A4
        gbc.setState(0xd813, 0x7414, 0x98e0, 0xe2ca, 0x69ae, 0x9ee0, 0x0, 0x0);
        gbc.writeMem(0xd813, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7414, gbc.sp());
        EXPECT(0xd815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd813));
        EXPECT(0x63, gbc.readMem(0xd814));
        // CB 63 01A5
        gbc.setState(0xbed, 0xfc6f, 0xb8d0, 0xa198, 0x65a3, 0x30d9, 0x1, 0x1);
        gbc.writeMem(0xbed, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xfc6f, gbc.sp());
        EXPECT(0xbef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 01A6
        gbc.setState(0x1e6d, 0x9f71, 0xaf70, 0xfd1f, 0x2f86, 0xfbea, 0x1, 0x0);
        gbc.writeMem(0x1e6d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9f71, gbc.sp());
        EXPECT(0x1e6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 01A7
        gbc.setState(0xf05, 0x98da, 0x2710, 0x9e24, 0x1b98, 0x94a8, 0x0, 0x0);
        gbc.writeMem(0xf05, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x98da, gbc.sp());
        EXPECT(0xf07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 01A8
        gbc.setState(0xc0ee, 0x132f, 0x8710, 0x4a39, 0x4a86, 0xb6ac, 0x1, 0x0);
        gbc.writeMem(0xc0ee, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x132f, gbc.sp());
        EXPECT(0xc0f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ee));
        EXPECT(0x63, gbc.readMem(0xc0ef));
        // CB 63 01A9
        gbc.setState(0x8792, 0x86da, 0x200, 0xff92, 0x3db2, 0x3b9c, 0x0, 0x1);
        gbc.writeMem(0x8792, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x86da, gbc.sp());
        EXPECT(0x8794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8792));
        EXPECT(0x63, gbc.readMem(0x8793));
        // CB 63 01AA
        gbc.setState(0x624c, 0x473e, 0xa410, 0xd212, 0x544e, 0xd1e9, 0x1, 0x0);
        gbc.writeMem(0x624c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x473e, gbc.sp());
        EXPECT(0x624e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 01AB
        gbc.setState(0x5621, 0xf2d1, 0x54b0, 0x9ed6, 0x65b9, 0xa2b6, 0x0, 0x1);
        gbc.writeMem(0x5621, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf2d1, gbc.sp());
        EXPECT(0x5623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 01AC
        gbc.setState(0xbfe5, 0x8f39, 0x89c0, 0x52f7, 0xae5f, 0x495d, 0x1, 0x1);
        gbc.writeMem(0xbfe5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8f39, gbc.sp());
        EXPECT(0xbfe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfe5));
        EXPECT(0x63, gbc.readMem(0xbfe6));
        // CB 63 01AD
        gbc.setState(0x9483, 0x396, 0x69d0, 0x71da, 0xe434, 0x2779, 0x0, 0x1);
        gbc.writeMem(0x9483, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x396, gbc.sp());
        EXPECT(0x9485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9483));
        EXPECT(0x63, gbc.readMem(0x9484));
        // CB 63 01AE
        gbc.setState(0x4cb7, 0x341a, 0x4280, 0x1d41, 0x6b97, 0x233d, 0x1, 0x1);
        gbc.writeMem(0x4cb7, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x341a, gbc.sp());
        EXPECT(0x4cb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 01AF
        gbc.setState(0x3de5, 0xe07c, 0x4650, 0xeb7, 0x9eb0, 0xb002, 0x0, 0x1);
        gbc.writeMem(0x3de5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe07c, gbc.sp());
        EXPECT(0x3de7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 01B0
        gbc.setState(0xc101, 0x1ca0, 0xcd50, 0xb59d, 0xc785, 0xfc08, 0x1, 0x0);
        gbc.writeMem(0xc101, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1ca0, gbc.sp());
        EXPECT(0xc103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc101));
        EXPECT(0x63, gbc.readMem(0xc102));
        // CB 63 01B1
        gbc.setState(0xce61, 0xfd51, 0x9d10, 0x96eb, 0xafed, 0xa94e, 0x0, 0x0);
        gbc.writeMem(0xce61, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xfd51, gbc.sp());
        EXPECT(0xce63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce61));
        EXPECT(0x63, gbc.readMem(0xce62));
        // CB 63 01B2
        gbc.setState(0x1ded, 0x7d04, 0x6970, 0xb17d, 0x56ce, 0x2cbd, 0x0, 0x1);
        gbc.writeMem(0x1ded, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7d04, gbc.sp());
        EXPECT(0x1def, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 01B3
        gbc.setState(0x43a2, 0xd970, 0xc5c0, 0xf566, 0x4ca2, 0xd18d, 0x1, 0x1);
        gbc.writeMem(0x43a2, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd970, gbc.sp());
        EXPECT(0x43a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 01B4
        gbc.setState(0xa044, 0x780f, 0xa850, 0xd46b, 0x5ca4, 0x6264, 0x1, 0x1);
        gbc.writeMem(0xa044, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x780f, gbc.sp());
        EXPECT(0xa046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa044));
        EXPECT(0x63, gbc.readMem(0xa045));
        // CB 63 01B5
        gbc.setState(0x4d94, 0xf7e3, 0xbff0, 0x43c6, 0x4260, 0xf480, 0x1, 0x0);
        gbc.writeMem(0x4d94, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf7e3, gbc.sp());
        EXPECT(0x4d96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 01B7
        gbc.setState(0x7c0d, 0x8ca4, 0xf310, 0xebd3, 0x4143, 0x783f, 0x0, 0x1);
        gbc.writeMem(0x7c0d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8ca4, gbc.sp());
        EXPECT(0x7c0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 01B8
        gbc.setState(0xb7e8, 0xd224, 0x3d90, 0xafb2, 0x3fec, 0xce6f, 0x1, 0x1);
        gbc.writeMem(0xb7e8, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd224, gbc.sp());
        EXPECT(0xb7ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7e8));
        EXPECT(0x63, gbc.readMem(0xb7e9));
        // CB 63 01B9
        gbc.setState(0xb645, 0x4893, 0x70d0, 0xf1ce, 0x9904, 0x5f71, 0x1, 0x1);
        gbc.writeMem(0xb645, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4893, gbc.sp());
        EXPECT(0xb647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb645));
        EXPECT(0x63, gbc.readMem(0xb646));
        // CB 63 01BA
        gbc.setState(0x1ea2, 0x8b44, 0x7d20, 0xd98e, 0x4dff, 0x8663, 0x1, 0x0);
        gbc.writeMem(0x1ea2, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8b44, gbc.sp());
        EXPECT(0x1ea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 01BB
        gbc.setState(0x15ec, 0x571e, 0x4960, 0xd0db, 0xe0dc, 0x6354, 0x0, 0x1);
        gbc.writeMem(0x15ec, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x571e, gbc.sp());
        EXPECT(0x15ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 01BC
        gbc.setState(0x6cd8, 0xd22a, 0xebd0, 0x5d8e, 0xde4a, 0xef2b, 0x1, 0x0);
        gbc.writeMem(0x6cd8, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd22a, gbc.sp());
        EXPECT(0x6cda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 01BD
        gbc.setState(0xc5ed, 0x7cc6, 0xcb90, 0x1f1c, 0xcdbd, 0x8a0c, 0x1, 0x0);
        gbc.writeMem(0xc5ed, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7cc6, gbc.sp());
        EXPECT(0xc5ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5ed));
        EXPECT(0x63, gbc.readMem(0xc5ee));
        // CB 63 01BE
        gbc.setState(0x7a95, 0x5232, 0x3c60, 0x85ff, 0x815e, 0x4ee8, 0x0, 0x0);
        gbc.writeMem(0x7a95, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5232, gbc.sp());
        EXPECT(0x7a97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 01BF
        gbc.setState(0x2f28, 0x1848, 0xeca0, 0x2b63, 0x2b7c, 0x648c, 0x1, 0x0);
        gbc.writeMem(0x2f28, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1848, gbc.sp());
        EXPECT(0x2f2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 01C0
        gbc.setState(0x839b, 0xdf01, 0x9c80, 0x7f2, 0x6cf1, 0xe39a, 0x1, 0x1);
        gbc.writeMem(0x839b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xdf01, gbc.sp());
        EXPECT(0x839d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x839b));
        EXPECT(0x63, gbc.readMem(0x839c));
        // CB 63 01C1
        gbc.setState(0x1532, 0x35ca, 0x1db0, 0x96e2, 0x30e7, 0xb55, 0x1, 0x0);
        gbc.writeMem(0x1532, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x35ca, gbc.sp());
        EXPECT(0x1534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 01C2
        gbc.setState(0x7e1b, 0x4b42, 0x5f70, 0xbf6c, 0xcbc, 0xd6c9, 0x0, 0x1);
        gbc.writeMem(0x7e1b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4b42, gbc.sp());
        EXPECT(0x7e1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 01C3
        gbc.setState(0x3522, 0x802, 0x6a0, 0x2848, 0x77f9, 0x53e2, 0x1, 0x0);
        gbc.writeMem(0x3522, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x802, gbc.sp());
        EXPECT(0x3524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 01C4
        gbc.setState(0x578d, 0xbfa1, 0x4bf0, 0xf064, 0xd350, 0xed37, 0x1, 0x1);
        gbc.writeMem(0x578d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xbfa1, gbc.sp());
        EXPECT(0x578f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 01C5
        gbc.setState(0xa40f, 0x73bd, 0x690, 0xf96a, 0xc503, 0xb27f, 0x1, 0x1);
        gbc.writeMem(0xa40f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x73bd, gbc.sp());
        EXPECT(0xa411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa40f));
        EXPECT(0x63, gbc.readMem(0xa410));
        // CB 63 01C6
        gbc.setState(0xe3db, 0x4acd, 0x50c0, 0x9bb4, 0x2d8, 0xbc6d, 0x0, 0x1);
        gbc.writeMem(0xe3db, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4acd, gbc.sp());
        EXPECT(0xe3dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3db));
        EXPECT(0x63, gbc.readMem(0xe3dc));
        // CB 63 01C7
        gbc.setState(0x17d4, 0x19da, 0xa8a0, 0x95b4, 0xacbb, 0x42ce, 0x0, 0x0);
        gbc.writeMem(0x17d4, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x19da, gbc.sp());
        EXPECT(0x17d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 01C8
        gbc.setState(0xd36, 0xe2a2, 0x870, 0xd3cd, 0x85fe, 0x4318, 0x1, 0x0);
        gbc.writeMem(0xd36, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe2a2, gbc.sp());
        EXPECT(0xd38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 01C9
        gbc.setState(0x2c7f, 0x2398, 0xee50, 0x71f3, 0x7ce0, 0x5945, 0x1, 0x0);
        gbc.writeMem(0x2c7f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2398, gbc.sp());
        EXPECT(0x2c81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 01CA
        gbc.setState(0xa913, 0x9661, 0x9110, 0x952d, 0x8def, 0x45e2, 0x1, 0x0);
        gbc.writeMem(0xa913, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9661, gbc.sp());
        EXPECT(0xa915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa913));
        EXPECT(0x63, gbc.readMem(0xa914));
        // CB 63 01CB
        gbc.setState(0xa0a9, 0x62d, 0x19d0, 0x46e6, 0xd396, 0x3e0f, 0x0, 0x0);
        gbc.writeMem(0xa0a9, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x62d, gbc.sp());
        EXPECT(0xa0ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0a9));
        EXPECT(0x63, gbc.readMem(0xa0aa));
        // CB 63 01CC
        gbc.setState(0x35d0, 0x2450, 0x1570, 0x62bc, 0xc2f7, 0x877e, 0x1, 0x1);
        gbc.writeMem(0x35d0, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2450, gbc.sp());
        EXPECT(0x35d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 01CD
        gbc.setState(0xbf7d, 0xbacc, 0xdc90, 0xa590, 0x4fd9, 0x34cb, 0x1, 0x0);
        gbc.writeMem(0xbf7d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xbacc, gbc.sp());
        EXPECT(0xbf7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf7d));
        EXPECT(0x63, gbc.readMem(0xbf7e));
        // CB 63 01CE
        gbc.setState(0xabd7, 0xf5e2, 0x9ba0, 0x5043, 0x1326, 0x905e, 0x0, 0x1);
        gbc.writeMem(0xabd7, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf5e2, gbc.sp());
        EXPECT(0xabd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabd7));
        EXPECT(0x63, gbc.readMem(0xabd8));
        // CB 63 01CF
        gbc.setState(0xfb2, 0x9ed2, 0x6ae0, 0x16bd, 0x9cfe, 0xb9dc, 0x0, 0x0);
        gbc.writeMem(0xfb2, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9ed2, gbc.sp());
        EXPECT(0xfb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 01D0
        gbc.setState(0x4e0b, 0x4d3a, 0x5dc0, 0xfb13, 0x1318, 0x6e9e, 0x1, 0x0);
        gbc.writeMem(0x4e0b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4d3a, gbc.sp());
        EXPECT(0x4e0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 01D1
        gbc.setState(0xded5, 0xd46b, 0x7300, 0x9e22, 0x1810, 0x67c3, 0x1, 0x1);
        gbc.writeMem(0xded5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd46b, gbc.sp());
        EXPECT(0xded7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xded5));
        EXPECT(0x63, gbc.readMem(0xded6));
        // CB 63 01D2
        gbc.setState(0xba1b, 0x7ba5, 0x8570, 0xe5ac, 0xdf70, 0x7aad, 0x0, 0x0);
        gbc.writeMem(0xba1b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7ba5, gbc.sp());
        EXPECT(0xba1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba1b));
        EXPECT(0x63, gbc.readMem(0xba1c));
        // CB 63 01D3
        gbc.setState(0xe98e, 0xf650, 0xf60, 0x6299, 0x5a5f, 0x164b, 0x1, 0x0);
        gbc.writeMem(0xe98e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf650, gbc.sp());
        EXPECT(0xe990, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe98e));
        EXPECT(0x63, gbc.readMem(0xe98f));
        // CB 63 01D5
        gbc.setState(0x8128, 0x69ca, 0xd920, 0x769a, 0xdec5, 0x28d9, 0x1, 0x0);
        gbc.writeMem(0x8128, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x69ca, gbc.sp());
        EXPECT(0x812a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8128));
        EXPECT(0x63, gbc.readMem(0x8129));
        // CB 63 01D6
        gbc.setState(0xbc3f, 0xea9b, 0xae60, 0x90aa, 0xf2b, 0xd12, 0x1, 0x1);
        gbc.writeMem(0xbc3f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xea9b, gbc.sp());
        EXPECT(0xbc41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc3f));
        EXPECT(0x63, gbc.readMem(0xbc40));
        // CB 63 01D7
        gbc.setState(0x34a5, 0xf32e, 0xffc0, 0x9f16, 0x5989, 0x8125, 0x1, 0x0);
        gbc.writeMem(0x34a5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf32e, gbc.sp());
        EXPECT(0x34a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 01D8
        gbc.setState(0xca31, 0xfde5, 0x8ad0, 0x1b9f, 0x6a59, 0x4fa, 0x0, 0x0);
        gbc.writeMem(0xca31, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xfde5, gbc.sp());
        EXPECT(0xca33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca31));
        EXPECT(0x63, gbc.readMem(0xca32));
        // CB 63 01D9
        gbc.setState(0xb8f2, 0x4694, 0xca60, 0x8d55, 0x2032, 0x6740, 0x1, 0x1);
        gbc.writeMem(0xb8f2, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4694, gbc.sp());
        EXPECT(0xb8f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8f2));
        EXPECT(0x63, gbc.readMem(0xb8f3));
        // CB 63 01DA
        gbc.setState(0x38f4, 0x2de6, 0x16b0, 0x8203, 0xf4a7, 0x3fb7, 0x1, 0x1);
        gbc.writeMem(0x38f4, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2de6, gbc.sp());
        EXPECT(0x38f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 01DB
        gbc.setState(0xb11e, 0xbab1, 0x22a0, 0x8dd6, 0x21fe, 0xd376, 0x1, 0x0);
        gbc.writeMem(0xb11e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xbab1, gbc.sp());
        EXPECT(0xb120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb11e));
        EXPECT(0x63, gbc.readMem(0xb11f));
        // CB 63 01DC
        gbc.setState(0x854f, 0x4bc1, 0x6ba0, 0x2b22, 0x762d, 0x1ac3, 0x0, 0x1);
        gbc.writeMem(0x854f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4bc1, gbc.sp());
        EXPECT(0x8551, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x854f));
        EXPECT(0x63, gbc.readMem(0x8550));
        // CB 63 01DD
        gbc.setState(0x56e6, 0xc2b, 0xaba0, 0x8767, 0xc357, 0x4d7f, 0x0, 0x0);
        gbc.writeMem(0x56e6, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc2b, gbc.sp());
        EXPECT(0x56e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 01DE
        gbc.setState(0x852e, 0xf42f, 0x15c0, 0x8db7, 0xa376, 0x5e36, 0x0, 0x0);
        gbc.writeMem(0x852e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf42f, gbc.sp());
        EXPECT(0x8530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x852e));
        EXPECT(0x63, gbc.readMem(0x852f));
        // CB 63 01DF
        gbc.setState(0x2f5, 0x3479, 0x74e0, 0xc128, 0x38ae, 0x71a8, 0x0, 0x0);
        gbc.writeMem(0x2f5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3479, gbc.sp());
        EXPECT(0x2f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 01E0
        gbc.setState(0x729a, 0xebe1, 0xdc50, 0x590c, 0x11c, 0xd58f, 0x1, 0x0);
        gbc.writeMem(0x729a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xebe1, gbc.sp());
        EXPECT(0x729c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 01E1
        gbc.setState(0x39e, 0xf760, 0xd390, 0x1286, 0xf0cd, 0xff93, 0x1, 0x1);
        gbc.writeMem(0x39e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf760, gbc.sp());
        EXPECT(0x3a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 01E3
        gbc.setState(0x3f83, 0xff1c, 0x3160, 0x47cd, 0x292b, 0x12e9, 0x0, 0x1);
        gbc.writeMem(0x3f83, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xff1c, gbc.sp());
        EXPECT(0x3f85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 01E4
        gbc.setState(0x39d9, 0xdbc3, 0x7f10, 0xe731, 0x4955, 0x8bf5, 0x0, 0x1);
        gbc.writeMem(0x39d9, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xdbc3, gbc.sp());
        EXPECT(0x39db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 01E6
        gbc.setState(0xc3bf, 0xc58a, 0x8bf0, 0xfa9c, 0x36f2, 0x29c3, 0x0, 0x1);
        gbc.writeMem(0xc3bf, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc58a, gbc.sp());
        EXPECT(0xc3c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3bf));
        EXPECT(0x63, gbc.readMem(0xc3c0));
        // CB 63 01E7
        gbc.setState(0xe876, 0x4719, 0x6600, 0x7a86, 0x4281, 0xa5c6, 0x1, 0x1);
        gbc.writeMem(0xe876, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4719, gbc.sp());
        EXPECT(0xe878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe876));
        EXPECT(0x63, gbc.readMem(0xe877));
        // CB 63 01E8
        gbc.setState(0x48fc, 0x6800, 0x5f20, 0x674e, 0x9b09, 0xaff1, 0x1, 0x1);
        gbc.writeMem(0x48fc, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6800, gbc.sp());
        EXPECT(0x48fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 01E9
        gbc.setState(0x353d, 0x232a, 0x9af0, 0xa0e6, 0x6672, 0xcd07, 0x0, 0x0);
        gbc.writeMem(0x353d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x232a, gbc.sp());
        EXPECT(0x353f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 01EA
        gbc.setState(0xbaca, 0xa418, 0x3a90, 0xffaf, 0x4af6, 0xc7e8, 0x0, 0x0);
        gbc.writeMem(0xbaca, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa418, gbc.sp());
        EXPECT(0xbacc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaca));
        EXPECT(0x63, gbc.readMem(0xbacb));
        // CB 63 01EB
        gbc.setState(0x1824, 0xccfc, 0xffc0, 0xa791, 0x4185, 0xf3ae, 0x1, 0x0);
        gbc.writeMem(0x1824, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xccfc, gbc.sp());
        EXPECT(0x1826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 01EC
        gbc.setState(0x3f22, 0xb62c, 0x5830, 0xd44e, 0xbb37, 0xcbc6, 0x1, 0x1);
        gbc.writeMem(0x3f22, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb62c, gbc.sp());
        EXPECT(0x3f24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 01ED
        gbc.setState(0xaaad, 0x7fda, 0xbe80, 0xecad, 0x3dd9, 0xda41, 0x0, 0x0);
        gbc.writeMem(0xaaad, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7fda, gbc.sp());
        EXPECT(0xaaaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaad));
        EXPECT(0x63, gbc.readMem(0xaaae));
        // CB 63 01EE
        gbc.setState(0xc1c, 0xb9ff, 0x7f00, 0x236d, 0x96a5, 0x60ed, 0x0, 0x0);
        gbc.writeMem(0xc1c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb9ff, gbc.sp());
        EXPECT(0xc1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 01EF
        gbc.setState(0x8da0, 0x6cf1, 0x86d0, 0xa72b, 0x97e0, 0xb42, 0x1, 0x0);
        gbc.writeMem(0x8da0, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6cf1, gbc.sp());
        EXPECT(0x8da2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8da0));
        EXPECT(0x63, gbc.readMem(0x8da1));
        // CB 63 01F0
        gbc.setState(0x8d71, 0xdcc0, 0xa290, 0xe30f, 0x54df, 0xa0a1, 0x0, 0x0);
        gbc.writeMem(0x8d71, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xdcc0, gbc.sp());
        EXPECT(0x8d73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d71));
        EXPECT(0x63, gbc.readMem(0x8d72));
        // CB 63 01F1
        gbc.setState(0x6d4e, 0x2761, 0xc680, 0xb349, 0xcae3, 0xd6d0, 0x1, 0x0);
        gbc.writeMem(0x6d4e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2761, gbc.sp());
        EXPECT(0x6d50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 01F2
        gbc.setState(0x67b9, 0xbf71, 0xc480, 0xe06b, 0x8b8, 0xebfa, 0x1, 0x0);
        gbc.writeMem(0x67b9, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xbf71, gbc.sp());
        EXPECT(0x67bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 01F3
        gbc.setState(0x8ff5, 0x5875, 0x5e70, 0x5ada, 0x34ac, 0x9b12, 0x0, 0x1);
        gbc.writeMem(0x8ff5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5875, gbc.sp());
        EXPECT(0x8ff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ff5));
        EXPECT(0x63, gbc.readMem(0x8ff6));
        // CB 63 01F4
        gbc.setState(0x6644, 0x57dd, 0xd6c0, 0xec3, 0xbdb5, 0x48b5, 0x1, 0x0);
        gbc.writeMem(0x6644, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x57dd, gbc.sp());
        EXPECT(0x6646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 01F5
        gbc.setState(0x1f3f, 0xd10c, 0x84e0, 0xbf7b, 0x2718, 0xa8b3, 0x1, 0x0);
        gbc.writeMem(0x1f3f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd10c, gbc.sp());
        EXPECT(0x1f41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 01F6
        gbc.setState(0xc531, 0x88bf, 0x22e0, 0x6303, 0x420b, 0xd2eb, 0x1, 0x1);
        gbc.writeMem(0xc531, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x88bf, gbc.sp());
        EXPECT(0xc533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc531));
        EXPECT(0x63, gbc.readMem(0xc532));
        // CB 63 01F8
        gbc.setState(0x8ca0, 0x4ace, 0xe0a0, 0x3407, 0x577, 0x775a, 0x1, 0x0);
        gbc.writeMem(0x8ca0, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4ace, gbc.sp());
        EXPECT(0x8ca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ca0));
        EXPECT(0x63, gbc.readMem(0x8ca1));
        // CB 63 01F9
        gbc.setState(0x5ff2, 0xf094, 0xd040, 0x84dd, 0x3052, 0xa0c1, 0x1, 0x0);
        gbc.writeMem(0x5ff2, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf094, gbc.sp());
        EXPECT(0x5ff4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 01FA
        gbc.setState(0x51f5, 0x305c, 0x9d40, 0x331c, 0xbac2, 0xe0e9, 0x1, 0x0);
        gbc.writeMem(0x51f5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x305c, gbc.sp());
        EXPECT(0x51f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 01FB
        gbc.setState(0xd5cf, 0xb405, 0x8720, 0x19ea, 0x715d, 0xee75, 0x1, 0x0);
        gbc.writeMem(0xd5cf, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb405, gbc.sp());
        EXPECT(0xd5d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5cf));
        EXPECT(0x63, gbc.readMem(0xd5d0));
        // CB 63 01FC
        gbc.setState(0x2353, 0x48ff, 0x3970, 0x36a8, 0xcc23, 0xa546, 0x1, 0x0);
        gbc.writeMem(0x2353, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x48ff, gbc.sp());
        EXPECT(0x2355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 01FD
        gbc.setState(0x320b, 0x3005, 0x7ef0, 0x2295, 0x91a8, 0xa54f, 0x1, 0x0);
        gbc.writeMem(0x320b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3005, gbc.sp());
        EXPECT(0x320d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 01FE
        gbc.setState(0xcc47, 0x597f, 0xa6c0, 0x2224, 0x17dd, 0x629d, 0x1, 0x0);
        gbc.writeMem(0xcc47, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x597f, gbc.sp());
        EXPECT(0xcc49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc47));
        EXPECT(0x63, gbc.readMem(0xcc48));
        // CB 63 01FF
        gbc.setState(0x13cc, 0xb592, 0xff00, 0xc068, 0x4ae1, 0xcea8, 0x1, 0x0);
        gbc.writeMem(0x13cc, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb592, gbc.sp());
        EXPECT(0x13ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0200
        gbc.setState(0x1633, 0x98b, 0x3920, 0xb7bd, 0x95e0, 0xfd50, 0x0, 0x0);
        gbc.writeMem(0x1633, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x98b, gbc.sp());
        EXPECT(0x1635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0201
        gbc.setState(0xa16a, 0x7f2, 0xb490, 0xf12a, 0xc938, 0x6918, 0x0, 0x0);
        gbc.writeMem(0xa16a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7f2, gbc.sp());
        EXPECT(0xa16c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa16a));
        EXPECT(0x63, gbc.readMem(0xa16b));
        // CB 63 0202
        gbc.setState(0x710b, 0x9549, 0x1c70, 0xb353, 0x824f, 0x3a15, 0x1, 0x1);
        gbc.writeMem(0x710b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9549, gbc.sp());
        EXPECT(0x710d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0203
        gbc.setState(0xc12c, 0x9340, 0x7ed0, 0x12ee, 0xaecc, 0x62b6, 0x1, 0x1);
        gbc.writeMem(0xc12c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9340, gbc.sp());
        EXPECT(0xc12e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc12c));
        EXPECT(0x63, gbc.readMem(0xc12d));
        // CB 63 0204
        gbc.setState(0x88e3, 0xa1b7, 0xb60, 0x8f4f, 0x3631, 0x2fc6, 0x1, 0x1);
        gbc.writeMem(0x88e3, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa1b7, gbc.sp());
        EXPECT(0x88e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88e3));
        EXPECT(0x63, gbc.readMem(0x88e4));
        // CB 63 0205
        gbc.setState(0x4e94, 0xe78f, 0x1a60, 0x7b72, 0x375a, 0x2778, 0x1, 0x0);
        gbc.writeMem(0x4e94, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe78f, gbc.sp());
        EXPECT(0x4e96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0206
        gbc.setState(0x5df6, 0x2405, 0x1eb0, 0x8ea4, 0x1d5b, 0xca0c, 0x1, 0x0);
        gbc.writeMem(0x5df6, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2405, gbc.sp());
        EXPECT(0x5df8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0207
        gbc.setState(0x207c, 0xd5a6, 0xeeb0, 0x2735, 0x15fe, 0xfd7a, 0x1, 0x0);
        gbc.writeMem(0x207c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd5a6, gbc.sp());
        EXPECT(0x207e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0209
        gbc.setState(0xa284, 0xab45, 0xa150, 0x8f1f, 0xde3a, 0x6aef, 0x0, 0x1);
        gbc.writeMem(0xa284, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xab45, gbc.sp());
        EXPECT(0xa286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa284));
        EXPECT(0x63, gbc.readMem(0xa285));
        // CB 63 020A
        gbc.setState(0x1e24, 0xe8f2, 0x4f80, 0xfdb2, 0x381a, 0x6e2, 0x1, 0x0);
        gbc.writeMem(0x1e24, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe8f2, gbc.sp());
        EXPECT(0x1e26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 020B
        gbc.setState(0x5762, 0x4d1a, 0x2030, 0xb97a, 0xbc9b, 0x6a, 0x1, 0x1);
        gbc.writeMem(0x5762, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4d1a, gbc.sp());
        EXPECT(0x5764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 020D
        gbc.setState(0x8880, 0x529a, 0x4160, 0xfc2d, 0xf1e4, 0x868d, 0x0, 0x1);
        gbc.writeMem(0x8880, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x529a, gbc.sp());
        EXPECT(0x8882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8880));
        EXPECT(0x63, gbc.readMem(0x8881));
        // CB 63 020E
        gbc.setState(0x8f5a, 0x9a9e, 0xd6f0, 0x2b4e, 0x2412, 0x9e47, 0x1, 0x1);
        gbc.writeMem(0x8f5a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9a9e, gbc.sp());
        EXPECT(0x8f5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f5a));
        EXPECT(0x63, gbc.readMem(0x8f5b));
        // CB 63 020F
        gbc.setState(0x678a, 0x79e2, 0xcfe0, 0x237d, 0x6237, 0x2369, 0x0, 0x1);
        gbc.writeMem(0x678a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x79e2, gbc.sp());
        EXPECT(0x678c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0210
        gbc.setState(0xd5d9, 0x43c9, 0x2440, 0x9948, 0xadf, 0x5e26, 0x1, 0x1);
        gbc.writeMem(0xd5d9, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x43c9, gbc.sp());
        EXPECT(0xd5db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5d9));
        EXPECT(0x63, gbc.readMem(0xd5da));
        // CB 63 0211
        gbc.setState(0xc92d, 0x13f2, 0xd3a0, 0xdf2a, 0x5183, 0x4052, 0x1, 0x1);
        gbc.writeMem(0xc92d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x13f2, gbc.sp());
        EXPECT(0xc92f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc92d));
        EXPECT(0x63, gbc.readMem(0xc92e));
        // CB 63 0212
        gbc.setState(0xb619, 0xca9a, 0xf940, 0x127e, 0xa968, 0xe19e, 0x1, 0x0);
        gbc.writeMem(0xb619, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xca9a, gbc.sp());
        EXPECT(0xb61b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb619));
        EXPECT(0x63, gbc.readMem(0xb61a));
        // CB 63 0213
        gbc.setState(0x6280, 0x976b, 0x790, 0x1bbb, 0x5d4f, 0x5889, 0x1, 0x1);
        gbc.writeMem(0x6280, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x976b, gbc.sp());
        EXPECT(0x6282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0214
        gbc.setState(0x6688, 0x20c8, 0x3920, 0xa397, 0x456c, 0x326b, 0x1, 0x1);
        gbc.writeMem(0x6688, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x20c8, gbc.sp());
        EXPECT(0x668a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0215
        gbc.setState(0x2082, 0xc898, 0xd610, 0x70e2, 0xc77, 0xd79c, 0x0, 0x0);
        gbc.writeMem(0x2082, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc898, gbc.sp());
        EXPECT(0x2084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0216
        gbc.setState(0x65d, 0xb4cd, 0xbf40, 0xd55b, 0x15aa, 0x5937, 0x0, 0x1);
        gbc.writeMem(0x65d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb4cd, gbc.sp());
        EXPECT(0x65f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0217
        gbc.setState(0xd602, 0xba55, 0x6710, 0xb69b, 0xa534, 0xf3c0, 0x0, 0x1);
        gbc.writeMem(0xd602, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xba55, gbc.sp());
        EXPECT(0xd604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd602));
        EXPECT(0x63, gbc.readMem(0xd603));
        // CB 63 0218
        gbc.setState(0x3b05, 0x5377, 0xbc0, 0x9d03, 0x8112, 0x3bd2, 0x0, 0x0);
        gbc.writeMem(0x3b05, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5377, gbc.sp());
        EXPECT(0x3b07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0219
        gbc.setState(0x56ff, 0x488c, 0xcd40, 0x5467, 0x3b69, 0x8dfc, 0x1, 0x1);
        gbc.writeMem(0x56ff, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x488c, gbc.sp());
        EXPECT(0x5701, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 021A
        gbc.setState(0xe9d1, 0x3bbd, 0x4aa0, 0x24a4, 0xdbfe, 0x7fed, 0x1, 0x1);
        gbc.writeMem(0xe9d1, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3bbd, gbc.sp());
        EXPECT(0xe9d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9d1));
        EXPECT(0x63, gbc.readMem(0xe9d2));
        // CB 63 021B
        gbc.setState(0x9d, 0x967d, 0xe1b0, 0x51cb, 0x9c82, 0xd291, 0x1, 0x0);
        gbc.writeMem(0x9d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x967d, gbc.sp());
        EXPECT(0x9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 021C
        gbc.setState(0xbc08, 0x8883, 0xfb00, 0xa0d, 0x8c0d, 0x9be4, 0x1, 0x0);
        gbc.writeMem(0xbc08, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8883, gbc.sp());
        EXPECT(0xbc0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc08));
        EXPECT(0x63, gbc.readMem(0xbc09));
        // CB 63 021D
        gbc.setState(0xdff1, 0xb191, 0x34a0, 0x1de7, 0xaff4, 0x34d, 0x1, 0x1);
        gbc.writeMem(0xdff1, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb191, gbc.sp());
        EXPECT(0xdff3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdff1));
        EXPECT(0x63, gbc.readMem(0xdff2));
        // CB 63 021E
        gbc.setState(0xefa1, 0xfe6e, 0x2fe0, 0xc1ab, 0x8e04, 0x12d1, 0x1, 0x1);
        gbc.writeMem(0xefa1, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xfe6e, gbc.sp());
        EXPECT(0xefa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefa1));
        EXPECT(0x63, gbc.readMem(0xefa2));
        // CB 63 021F
        gbc.setState(0xaa8f, 0xc117, 0x9b30, 0x285a, 0xc487, 0xc6cb, 0x1, 0x0);
        gbc.writeMem(0xaa8f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc117, gbc.sp());
        EXPECT(0xaa91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa8f));
        EXPECT(0x63, gbc.readMem(0xaa90));
        // CB 63 0220
        gbc.setState(0x6ef8, 0x7770, 0x8090, 0x86ff, 0x51e6, 0x1da4, 0x1, 0x0);
        gbc.writeMem(0x6ef8, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7770, gbc.sp());
        EXPECT(0x6efa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0221
        gbc.setState(0xce79, 0xede3, 0x25a0, 0xa0bd, 0xba2a, 0x8a93, 0x1, 0x0);
        gbc.writeMem(0xce79, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xede3, gbc.sp());
        EXPECT(0xce7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce79));
        EXPECT(0x63, gbc.readMem(0xce7a));
        // CB 63 0222
        gbc.setState(0x7a68, 0xd97c, 0x6010, 0x4450, 0xa28e, 0xc322, 0x0, 0x0);
        gbc.writeMem(0x7a68, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd97c, gbc.sp());
        EXPECT(0x7a6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0223
        gbc.setState(0xda2e, 0xafa9, 0xc0b0, 0x4115, 0x6c67, 0x6781, 0x1, 0x1);
        gbc.writeMem(0xda2e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xafa9, gbc.sp());
        EXPECT(0xda30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda2e));
        EXPECT(0x63, gbc.readMem(0xda2f));
        // CB 63 0224
        gbc.setState(0x2ee5, 0x9051, 0xc590, 0x33d3, 0x240a, 0x2161, 0x0, 0x1);
        gbc.writeMem(0x2ee5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9051, gbc.sp());
        EXPECT(0x2ee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0225
        gbc.setState(0x934c, 0x88f4, 0xc10, 0x90bb, 0x1110, 0xaf2f, 0x0, 0x1);
        gbc.writeMem(0x934c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x88f4, gbc.sp());
        EXPECT(0x934e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x934c));
        EXPECT(0x63, gbc.readMem(0x934d));
        // CB 63 0226
        gbc.setState(0xdc47, 0x6a05, 0xd1d0, 0xa0a, 0x9d71, 0x72d0, 0x0, 0x0);
        gbc.writeMem(0xdc47, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6a05, gbc.sp());
        EXPECT(0xdc49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc47));
        EXPECT(0x63, gbc.readMem(0xdc48));
        // CB 63 0227
        gbc.setState(0x9a67, 0x155b, 0x4e0, 0x19be, 0xa7ad, 0xf7f6, 0x0, 0x1);
        gbc.writeMem(0x9a67, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x155b, gbc.sp());
        EXPECT(0x9a69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a67));
        EXPECT(0x63, gbc.readMem(0x9a68));
        // CB 63 0228
        gbc.setState(0x6590, 0x75e7, 0x6260, 0xfaa1, 0x6c24, 0xd7f7, 0x1, 0x1);
        gbc.writeMem(0x6590, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x75e7, gbc.sp());
        EXPECT(0x6592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0229
        gbc.setState(0x4da6, 0xec0a, 0xbf0, 0xe62e, 0x70d0, 0xe309, 0x1, 0x0);
        gbc.writeMem(0x4da6, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xec0a, gbc.sp());
        EXPECT(0x4da8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 022A
        gbc.setState(0xda1d, 0xd837, 0x47f0, 0x4f78, 0xb67e, 0x1d53, 0x1, 0x1);
        gbc.writeMem(0xda1d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd837, gbc.sp());
        EXPECT(0xda1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda1d));
        EXPECT(0x63, gbc.readMem(0xda1e));
        // CB 63 022B
        gbc.setState(0xec3d, 0x7940, 0x58d0, 0x1462, 0x603c, 0x8939, 0x1, 0x1);
        gbc.writeMem(0xec3d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7940, gbc.sp());
        EXPECT(0xec3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec3d));
        EXPECT(0x63, gbc.readMem(0xec3e));
        // CB 63 022C
        gbc.setState(0x1fd8, 0x9751, 0x2090, 0xe9f9, 0x5295, 0x1fff, 0x0, 0x1);
        gbc.writeMem(0x1fd8, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9751, gbc.sp());
        EXPECT(0x1fda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 022D
        gbc.setState(0x6a3f, 0xcfee, 0x4930, 0x5dc6, 0x98a1, 0x23fd, 0x1, 0x0);
        gbc.writeMem(0x6a3f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xcfee, gbc.sp());
        EXPECT(0x6a41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 022E
        gbc.setState(0x3022, 0x9f3b, 0xdc70, 0x3753, 0xe733, 0xc73c, 0x1, 0x0);
        gbc.writeMem(0x3022, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9f3b, gbc.sp());
        EXPECT(0x3024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 022F
        gbc.setState(0x1350, 0x7f76, 0xa890, 0x5531, 0x94a9, 0x4a45, 0x1, 0x0);
        gbc.writeMem(0x1350, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7f76, gbc.sp());
        EXPECT(0x1352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0231
        gbc.setState(0x5238, 0x6266, 0x5760, 0x7045, 0x1818, 0x8391, 0x1, 0x1);
        gbc.writeMem(0x5238, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6266, gbc.sp());
        EXPECT(0x523a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0232
        gbc.setState(0x87d, 0x4cb1, 0xba20, 0xc190, 0x203c, 0xa62, 0x0, 0x1);
        gbc.writeMem(0x87d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4cb1, gbc.sp());
        EXPECT(0x87f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0233
        gbc.setState(0x7010, 0xe2e2, 0x9340, 0xad85, 0x244e, 0x7a9b, 0x0, 0x0);
        gbc.writeMem(0x7010, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe2e2, gbc.sp());
        EXPECT(0x7012, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0234
        gbc.setState(0x82cc, 0x304e, 0xc5e0, 0x2129, 0x8880, 0xa51c, 0x1, 0x0);
        gbc.writeMem(0x82cc, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x304e, gbc.sp());
        EXPECT(0x82ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82cc));
        EXPECT(0x63, gbc.readMem(0x82cd));
        // CB 63 0235
        gbc.setState(0x27d, 0x8185, 0x5020, 0xe320, 0xce41, 0x3406, 0x1, 0x0);
        gbc.writeMem(0x27d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8185, gbc.sp());
        EXPECT(0x27f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0236
        gbc.setState(0xe36d, 0x2aff, 0x9110, 0xe2b0, 0x2045, 0xac87, 0x1, 0x0);
        gbc.writeMem(0xe36d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2aff, gbc.sp());
        EXPECT(0xe36f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe36d));
        EXPECT(0x63, gbc.readMem(0xe36e));
        // CB 63 0237
        gbc.setState(0xd71d, 0x4222, 0xcdf0, 0xffa6, 0x941e, 0x4b89, 0x1, 0x0);
        gbc.writeMem(0xd71d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4222, gbc.sp());
        EXPECT(0xd71f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd71d));
        EXPECT(0x63, gbc.readMem(0xd71e));
        // CB 63 0239
        gbc.setState(0x46f6, 0x3838, 0x8fd0, 0x46da, 0xf9ef, 0x743b, 0x0, 0x1);
        gbc.writeMem(0x46f6, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3838, gbc.sp());
        EXPECT(0x46f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 023A
        gbc.setState(0x1353, 0x6eda, 0x8d30, 0xde4b, 0x3ce2, 0x8d5, 0x0, 0x1);
        gbc.writeMem(0x1353, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6eda, gbc.sp());
        EXPECT(0x1355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 023B
        gbc.setState(0xef07, 0xf64b, 0x12a0, 0x6bc6, 0x7137, 0xca92, 0x1, 0x1);
        gbc.writeMem(0xef07, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf64b, gbc.sp());
        EXPECT(0xef09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef07));
        EXPECT(0x63, gbc.readMem(0xef08));
        // CB 63 023C
        gbc.setState(0x2138, 0x54a2, 0x6f00, 0xafb3, 0xfd58, 0x64ec, 0x1, 0x1);
        gbc.writeMem(0x2138, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x54a2, gbc.sp());
        EXPECT(0x213a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 023D
        gbc.setState(0xc002, 0x7c70, 0x8800, 0x8a17, 0xec6f, 0xc27b, 0x1, 0x0);
        gbc.writeMem(0xc002, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7c70, gbc.sp());
        EXPECT(0xc004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc002));
        EXPECT(0x63, gbc.readMem(0xc003));
        // CB 63 023E
        gbc.setState(0xa04d, 0x18eb, 0xffe0, 0xddd3, 0x14c1, 0x16ea, 0x1, 0x0);
        gbc.writeMem(0xa04d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x18eb, gbc.sp());
        EXPECT(0xa04f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa04d));
        EXPECT(0x63, gbc.readMem(0xa04e));
        // CB 63 023F
        gbc.setState(0x774c, 0xe27f, 0x3320, 0x14ef, 0xee59, 0x159d, 0x0, 0x0);
        gbc.writeMem(0x774c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe27f, gbc.sp());
        EXPECT(0x774e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0240
        gbc.setState(0xeff5, 0x337b, 0x48f0, 0xd149, 0xff1c, 0x3608, 0x0, 0x1);
        gbc.writeMem(0xeff5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x337b, gbc.sp());
        EXPECT(0xeff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeff5));
        EXPECT(0x63, gbc.readMem(0xeff6));
        // CB 63 0241
        gbc.setState(0xa27e, 0x2e0, 0x6e80, 0xc3ac, 0x4875, 0x2dd9, 0x1, 0x0);
        gbc.writeMem(0xa27e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2e0, gbc.sp());
        EXPECT(0xa280, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa27e));
        EXPECT(0x63, gbc.readMem(0xa27f));
        // CB 63 0242
        gbc.setState(0xc3f9, 0x39d, 0x96b0, 0x1dcd, 0xba91, 0xdabf, 0x1, 0x1);
        gbc.writeMem(0xc3f9, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x39d, gbc.sp());
        EXPECT(0xc3fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3f9));
        EXPECT(0x63, gbc.readMem(0xc3fa));
        // CB 63 0243
        gbc.setState(0x52f3, 0xfb53, 0xe3f0, 0x13a3, 0xf1f1, 0x49a4, 0x1, 0x1);
        gbc.writeMem(0x52f3, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xfb53, gbc.sp());
        EXPECT(0x52f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0244
        gbc.setState(0x7a70, 0x4646, 0x22d0, 0x94e1, 0xa730, 0x659d, 0x0, 0x0);
        gbc.writeMem(0x7a70, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4646, gbc.sp());
        EXPECT(0x7a72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0245
        gbc.setState(0x4600, 0xf3d1, 0x5300, 0x774b, 0x7ec3, 0x4637, 0x1, 0x1);
        gbc.writeMem(0x4600, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf3d1, gbc.sp());
        EXPECT(0x4602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0246
        gbc.setState(0x28e5, 0xc0ab, 0x6140, 0xf14f, 0x5ae4, 0x89a4, 0x1, 0x0);
        gbc.writeMem(0x28e5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc0ab, gbc.sp());
        EXPECT(0x28e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0247
        gbc.setState(0xa86a, 0xb6ca, 0x4250, 0x188d, 0x9d02, 0xf421, 0x1, 0x0);
        gbc.writeMem(0xa86a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb6ca, gbc.sp());
        EXPECT(0xa86c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa86a));
        EXPECT(0x63, gbc.readMem(0xa86b));
        // CB 63 0248
        gbc.setState(0xb3d, 0x4149, 0xa8c0, 0xbba0, 0x9375, 0x867c, 0x1, 0x0);
        gbc.writeMem(0xb3d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4149, gbc.sp());
        EXPECT(0xb3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0249
        gbc.setState(0x597e, 0xf2, 0x8b40, 0x8245, 0x8bcc, 0x83b7, 0x0, 0x1);
        gbc.writeMem(0x597e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf2, gbc.sp());
        EXPECT(0x5980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 024A
        gbc.setState(0xa911, 0x9686, 0x7b90, 0xb2fc, 0xd0bb, 0xae88, 0x1, 0x1);
        gbc.writeMem(0xa911, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9686, gbc.sp());
        EXPECT(0xa913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa911));
        EXPECT(0x63, gbc.readMem(0xa912));
        // CB 63 024B
        gbc.setState(0x6dd5, 0xcb8c, 0x2620, 0xddff, 0xa3b8, 0x1d76, 0x1, 0x1);
        gbc.writeMem(0x6dd5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xcb8c, gbc.sp());
        EXPECT(0x6dd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 024C
        gbc.setState(0x5ba4, 0x28ea, 0x8f20, 0x598d, 0x662c, 0x5dac, 0x0, 0x1);
        gbc.writeMem(0x5ba4, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x28ea, gbc.sp());
        EXPECT(0x5ba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 024D
        gbc.setState(0xb077, 0xb9d1, 0x1c20, 0x9e13, 0x1d07, 0xb91d, 0x1, 0x1);
        gbc.writeMem(0xb077, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb9d1, gbc.sp());
        EXPECT(0xb079, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb077));
        EXPECT(0x63, gbc.readMem(0xb078));
        // CB 63 024E
        gbc.setState(0xf26, 0x6210, 0xf180, 0xc93, 0x2b28, 0xf6ac, 0x1, 0x1);
        gbc.writeMem(0xf26, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6210, gbc.sp());
        EXPECT(0xf28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 024F
        gbc.setState(0xac83, 0xf4e9, 0x5850, 0x1167, 0x9526, 0xaaa3, 0x0, 0x0);
        gbc.writeMem(0xac83, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf4e9, gbc.sp());
        EXPECT(0xac85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac83));
        EXPECT(0x63, gbc.readMem(0xac84));
        // CB 63 0250
        gbc.setState(0x4d42, 0xf141, 0x8da0, 0xc994, 0xcb31, 0x836e, 0x0, 0x0);
        gbc.writeMem(0x4d42, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf141, gbc.sp());
        EXPECT(0x4d44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0251
        gbc.setState(0xeeaf, 0xd828, 0x140, 0x2708, 0x137b, 0x4bbf, 0x1, 0x1);
        gbc.writeMem(0xeeaf, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd828, gbc.sp());
        EXPECT(0xeeb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeaf));
        EXPECT(0x63, gbc.readMem(0xeeb0));
        // CB 63 0252
        gbc.setState(0x7ade, 0x6ad6, 0xa3f0, 0x10ce, 0x76a3, 0xf1bf, 0x1, 0x1);
        gbc.writeMem(0x7ade, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6ad6, gbc.sp());
        EXPECT(0x7ae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0253
        gbc.setState(0x6547, 0x3da0, 0x3770, 0xfc74, 0x7fd1, 0x75f4, 0x0, 0x0);
        gbc.writeMem(0x6547, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3da0, gbc.sp());
        EXPECT(0x6549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0254
        gbc.setState(0x7e93, 0x1485, 0xf900, 0xf707, 0x7e7f, 0x2a75, 0x1, 0x0);
        gbc.writeMem(0x7e93, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1485, gbc.sp());
        EXPECT(0x7e95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0255
        gbc.setState(0x560d, 0xab, 0x4b30, 0xf36f, 0x430, 0x6553, 0x1, 0x1);
        gbc.writeMem(0x560d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xab, gbc.sp());
        EXPECT(0x560f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0256
        gbc.setState(0xcd74, 0xc32f, 0xe150, 0x1eb8, 0xd134, 0xe70e, 0x1, 0x1);
        gbc.writeMem(0xcd74, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc32f, gbc.sp());
        EXPECT(0xcd76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd74));
        EXPECT(0x63, gbc.readMem(0xcd75));
        // CB 63 0257
        gbc.setState(0xcd92, 0xc23, 0x4b70, 0x49c6, 0xa1ca, 0x5b3e, 0x1, 0x0);
        gbc.writeMem(0xcd92, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc23, gbc.sp());
        EXPECT(0xcd94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd92));
        EXPECT(0x63, gbc.readMem(0xcd93));
        // CB 63 0258
        gbc.setState(0x5d23, 0x5184, 0xb8d0, 0xaf02, 0x246, 0x5f04, 0x1, 0x1);
        gbc.writeMem(0x5d23, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5184, gbc.sp());
        EXPECT(0x5d25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 025B
        gbc.setState(0xaea9, 0xeca0, 0xc600, 0xd0f4, 0x86d2, 0xd745, 0x0, 0x1);
        gbc.writeMem(0xaea9, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xeca0, gbc.sp());
        EXPECT(0xaeab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaea9));
        EXPECT(0x63, gbc.readMem(0xaeaa));
        // CB 63 025C
        gbc.setState(0xe982, 0xff5, 0x6f30, 0x75c1, 0xbc76, 0x71b7, 0x1, 0x1);
        gbc.writeMem(0xe982, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xff5, gbc.sp());
        EXPECT(0xe984, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe982));
        EXPECT(0x63, gbc.readMem(0xe983));
        // CB 63 025D
        gbc.setState(0xd223, 0x1749, 0x57e0, 0x172d, 0x23b6, 0xb629, 0x0, 0x0);
        gbc.writeMem(0xd223, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1749, gbc.sp());
        EXPECT(0xd225, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd223));
        EXPECT(0x63, gbc.readMem(0xd224));
        // CB 63 025F
        gbc.setState(0x3be6, 0xcae7, 0x9280, 0xd020, 0x46, 0x6bab, 0x1, 0x0);
        gbc.writeMem(0x3be6, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xcae7, gbc.sp());
        EXPECT(0x3be8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0260
        gbc.setState(0x246, 0x63, 0xd1b0, 0xec00, 0x3dbc, 0xc6a0, 0x0, 0x1);
        gbc.writeMem(0x246, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x63, gbc.sp());
        EXPECT(0x248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0261
        gbc.setState(0xb581, 0x8eb6, 0xc540, 0x25c0, 0x11e4, 0x4ac5, 0x0, 0x1);
        gbc.writeMem(0xb581, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8eb6, gbc.sp());
        EXPECT(0xb583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb581));
        EXPECT(0x63, gbc.readMem(0xb582));
        // CB 63 0262
        gbc.setState(0x1ec9, 0x238b, 0x6c80, 0x46c8, 0x804e, 0xcf0, 0x1, 0x0);
        gbc.writeMem(0x1ec9, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x238b, gbc.sp());
        EXPECT(0x1ecb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0263
        gbc.setState(0x934f, 0x6ef0, 0x5160, 0x6af4, 0xac2b, 0xa002, 0x0, 0x1);
        gbc.writeMem(0x934f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6ef0, gbc.sp());
        EXPECT(0x9351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x934f));
        EXPECT(0x63, gbc.readMem(0x9350));
        // CB 63 0264
        gbc.setState(0xed13, 0xcc0f, 0x67b0, 0x1943, 0x98b7, 0x164, 0x1, 0x0);
        gbc.writeMem(0xed13, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xcc0f, gbc.sp());
        EXPECT(0xed15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed13));
        EXPECT(0x63, gbc.readMem(0xed14));
        // CB 63 0266
        gbc.setState(0xd423, 0x840e, 0x94d0, 0xe0bf, 0x52ea, 0x8cf7, 0x1, 0x0);
        gbc.writeMem(0xd423, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x840e, gbc.sp());
        EXPECT(0xd425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd423));
        EXPECT(0x63, gbc.readMem(0xd424));
        // CB 63 0267
        gbc.setState(0xd77b, 0x451b, 0x8680, 0x9bf5, 0x3c0b, 0x471e, 0x0, 0x0);
        gbc.writeMem(0xd77b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x451b, gbc.sp());
        EXPECT(0xd77d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd77b));
        EXPECT(0x63, gbc.readMem(0xd77c));
        // CB 63 0268
        gbc.setState(0x2c14, 0x5462, 0xc920, 0xee76, 0x1b89, 0x4140, 0x1, 0x1);
        gbc.writeMem(0x2c14, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5462, gbc.sp());
        EXPECT(0x2c16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0269
        gbc.setState(0xb88f, 0x6b66, 0xcbb0, 0x6cef, 0x8c0e, 0x6e2d, 0x1, 0x1);
        gbc.writeMem(0xb88f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6b66, gbc.sp());
        EXPECT(0xb891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb88f));
        EXPECT(0x63, gbc.readMem(0xb890));
        // CB 63 026A
        gbc.setState(0x3d5b, 0xd0bd, 0x3a60, 0x3d65, 0xaddf, 0xcaec, 0x0, 0x1);
        gbc.writeMem(0x3d5b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd0bd, gbc.sp());
        EXPECT(0x3d5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 026B
        gbc.setState(0x875a, 0x3311, 0xf930, 0xd41c, 0x2e0a, 0x7cd0, 0x0, 0x0);
        gbc.writeMem(0x875a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3311, gbc.sp());
        EXPECT(0x875c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x875a));
        EXPECT(0x63, gbc.readMem(0x875b));
        // CB 63 026C
        gbc.setState(0xaecc, 0xd260, 0x5cd0, 0xfb74, 0x1f63, 0x26c, 0x1, 0x1);
        gbc.writeMem(0xaecc, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd260, gbc.sp());
        EXPECT(0xaece, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaecc));
        EXPECT(0x63, gbc.readMem(0xaecd));
        // CB 63 026D
        gbc.setState(0x42d8, 0x8726, 0x11d0, 0xde67, 0x4e42, 0x141a, 0x0, 0x0);
        gbc.writeMem(0x42d8, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8726, gbc.sp());
        EXPECT(0x42da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 026E
        gbc.setState(0x7d07, 0x9b28, 0x7eb0, 0xa7af, 0xea5c, 0x2a99, 0x1, 0x0);
        gbc.writeMem(0x7d07, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9b28, gbc.sp());
        EXPECT(0x7d09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 026F
        gbc.setState(0x5353, 0x6d04, 0xf550, 0xaaea, 0xb019, 0x303a, 0x0, 0x0);
        gbc.writeMem(0x5353, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6d04, gbc.sp());
        EXPECT(0x5355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0270
        gbc.setState(0x3098, 0x51c4, 0xb790, 0x7c08, 0x9808, 0xa603, 0x0, 0x1);
        gbc.writeMem(0x3098, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x51c4, gbc.sp());
        EXPECT(0x309a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0271
        gbc.setState(0x899, 0xedf, 0x5320, 0x4b42, 0x22b4, 0x6448, 0x1, 0x1);
        gbc.writeMem(0x899, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xedf, gbc.sp());
        EXPECT(0x89b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0272
        gbc.setState(0x8955, 0xce7, 0x1e20, 0xba42, 0x2fed, 0x1bb8, 0x1, 0x0);
        gbc.writeMem(0x8955, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xce7, gbc.sp());
        EXPECT(0x8957, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8955));
        EXPECT(0x63, gbc.readMem(0x8956));
        // CB 63 0273
        gbc.setState(0x7a1b, 0x2ce1, 0x6170, 0x52f5, 0x58a1, 0x4259, 0x1, 0x1);
        gbc.writeMem(0x7a1b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2ce1, gbc.sp());
        EXPECT(0x7a1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0274
        gbc.setState(0xebd3, 0x4b71, 0x8f0, 0x2d5a, 0x6f1d, 0x7f5b, 0x0, 0x1);
        gbc.writeMem(0xebd3, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4b71, gbc.sp());
        EXPECT(0xebd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebd3));
        EXPECT(0x63, gbc.readMem(0xebd4));
        // CB 63 0275
        gbc.setState(0x4b4f, 0xc4b7, 0xad60, 0xd1a4, 0xde41, 0xbf4c, 0x1, 0x0);
        gbc.writeMem(0x4b4f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc4b7, gbc.sp());
        EXPECT(0x4b51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0276
        gbc.setState(0x618c, 0x56b4, 0xcc90, 0xd04b, 0xfb14, 0x47d3, 0x0, 0x0);
        gbc.writeMem(0x618c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x56b4, gbc.sp());
        EXPECT(0x618e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0277
        gbc.setState(0x8428, 0x517e, 0xe270, 0x5668, 0x83c3, 0xc71e, 0x1, 0x1);
        gbc.writeMem(0x8428, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x517e, gbc.sp());
        EXPECT(0x842a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8428));
        EXPECT(0x63, gbc.readMem(0x8429));
        // CB 63 0278
        gbc.setState(0x9947, 0x9dbc, 0x2dd0, 0x1e5b, 0x9607, 0x6273, 0x0, 0x1);
        gbc.writeMem(0x9947, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9dbc, gbc.sp());
        EXPECT(0x9949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9947));
        EXPECT(0x63, gbc.readMem(0x9948));
        // CB 63 0279
        gbc.setState(0xb9b5, 0x952e, 0xb710, 0xa873, 0xf874, 0x4ca5, 0x1, 0x0);
        gbc.writeMem(0xb9b5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x952e, gbc.sp());
        EXPECT(0xb9b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9b5));
        EXPECT(0x63, gbc.readMem(0xb9b6));
        // CB 63 027C
        gbc.setState(0xea62, 0x9557, 0x3df0, 0xb353, 0x975, 0x1b06, 0x1, 0x0);
        gbc.writeMem(0xea62, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9557, gbc.sp());
        EXPECT(0xea64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea62));
        EXPECT(0x63, gbc.readMem(0xea63));
        // CB 63 027D
        gbc.setState(0x8c83, 0xb7d4, 0x6650, 0xf2a0, 0x87aa, 0x542, 0x0, 0x1);
        gbc.writeMem(0x8c83, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb7d4, gbc.sp());
        EXPECT(0x8c85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c83));
        EXPECT(0x63, gbc.readMem(0x8c84));
        // CB 63 027E
        gbc.setState(0xd368, 0xed13, 0xff60, 0xde3b, 0x4741, 0x625f, 0x1, 0x0);
        gbc.writeMem(0xd368, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xed13, gbc.sp());
        EXPECT(0xd36a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd368));
        EXPECT(0x63, gbc.readMem(0xd369));
        // CB 63 027F
        gbc.setState(0x7d54, 0xcf47, 0x8de0, 0xde0c, 0x388e, 0x6fd4, 0x1, 0x1);
        gbc.writeMem(0x7d54, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xcf47, gbc.sp());
        EXPECT(0x7d56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0280
        gbc.setState(0x7887, 0x5239, 0x33d0, 0x9c77, 0x1554, 0x2451, 0x1, 0x0);
        gbc.writeMem(0x7887, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5239, gbc.sp());
        EXPECT(0x7889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0281
        gbc.setState(0x30dc, 0x7d03, 0xa2e0, 0x2643, 0x8dcc, 0x9f28, 0x1, 0x0);
        gbc.writeMem(0x30dc, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7d03, gbc.sp());
        EXPECT(0x30de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0282
        gbc.setState(0x4989, 0xfcf3, 0x30d0, 0x53a5, 0xf56d, 0xef37, 0x0, 0x1);
        gbc.writeMem(0x4989, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfcf3, gbc.sp());
        EXPECT(0x498b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0283
        gbc.setState(0x75dd, 0xcc21, 0x5ee0, 0x7948, 0x284a, 0x8ec3, 0x0, 0x1);
        gbc.writeMem(0x75dd, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xcc21, gbc.sp());
        EXPECT(0x75df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0284
        gbc.setState(0xba85, 0x379f, 0x8a40, 0x42ac, 0x9b01, 0x87a8, 0x1, 0x1);
        gbc.writeMem(0xba85, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x379f, gbc.sp());
        EXPECT(0xba87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba85));
        EXPECT(0x63, gbc.readMem(0xba86));
        // CB 63 0285
        gbc.setState(0x8b34, 0x1142, 0xa3a0, 0x3a33, 0x5f02, 0x347c, 0x0, 0x1);
        gbc.writeMem(0x8b34, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1142, gbc.sp());
        EXPECT(0x8b36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b34));
        EXPECT(0x63, gbc.readMem(0x8b35));
        // CB 63 0286
        gbc.setState(0x8ad9, 0xd3da, 0xa080, 0xc422, 0xe00a, 0x6f5d, 0x1, 0x1);
        gbc.writeMem(0x8ad9, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd3da, gbc.sp());
        EXPECT(0x8adb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ad9));
        EXPECT(0x63, gbc.readMem(0x8ada));
        // CB 63 0287
        gbc.setState(0xe097, 0xee34, 0x4b0, 0x5847, 0x1a9a, 0x24ba, 0x0, 0x0);
        gbc.writeMem(0xe097, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xee34, gbc.sp());
        EXPECT(0xe099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe097));
        EXPECT(0x63, gbc.readMem(0xe098));
        // CB 63 0288
        gbc.setState(0x5cbd, 0x975b, 0xf8c0, 0x2114, 0x6e7, 0xe8cc, 0x0, 0x0);
        gbc.writeMem(0x5cbd, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x975b, gbc.sp());
        EXPECT(0x5cbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0289
        gbc.setState(0xa3b1, 0x22da, 0xc0f0, 0x97df, 0x6164, 0xe4f2, 0x0, 0x1);
        gbc.writeMem(0xa3b1, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x22da, gbc.sp());
        EXPECT(0xa3b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3b1));
        EXPECT(0x63, gbc.readMem(0xa3b2));
        // CB 63 028A
        gbc.setState(0x1502, 0xb9ff, 0x9930, 0x6375, 0x5cc4, 0x8710, 0x0, 0x0);
        gbc.writeMem(0x1502, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb9ff, gbc.sp());
        EXPECT(0x1504, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 028B
        gbc.setState(0x6369, 0x8eb6, 0xcc20, 0x615a, 0xa4d2, 0x423, 0x1, 0x1);
        gbc.writeMem(0x6369, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8eb6, gbc.sp());
        EXPECT(0x636b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 028C
        gbc.setState(0x9fff, 0xde4b, 0x70c0, 0xdfc0, 0x9fa1, 0x2994, 0x0, 0x1);
        gbc.writeMem(0x9fff, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xde4b, gbc.sp());
        EXPECT(0xa001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fff));
        EXPECT(0x63, gbc.readMem(0xa000));
        // CB 63 028D
        gbc.setState(0x2b98, 0x3bce, 0xfd60, 0x95bb, 0x74a0, 0x518e, 0x1, 0x0);
        gbc.writeMem(0x2b98, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3bce, gbc.sp());
        EXPECT(0x2b9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 028E
        gbc.setState(0x2c5e, 0xe4e6, 0x2ee0, 0x3742, 0x8ae0, 0x6e61, 0x0, 0x1);
        gbc.writeMem(0x2c5e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe4e6, gbc.sp());
        EXPECT(0x2c60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 028F
        gbc.setState(0x7feb, 0xa00, 0x1f70, 0xccc3, 0xcfcc, 0x76b2, 0x0, 0x0);
        gbc.writeMem(0x7feb, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa00, gbc.sp());
        EXPECT(0x7fed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0290
        gbc.setState(0x27b8, 0xced8, 0x8040, 0xe5c2, 0x15da, 0xbff4, 0x0, 0x0);
        gbc.writeMem(0x27b8, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xced8, gbc.sp());
        EXPECT(0x27ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0291
        gbc.setState(0x1f3d, 0x2a42, 0x43d0, 0xd0f7, 0x72bf, 0x5f7c, 0x0, 0x0);
        gbc.writeMem(0x1f3d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2a42, gbc.sp());
        EXPECT(0x1f3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0292
        gbc.setState(0xbc21, 0x149, 0x82b0, 0x82a8, 0xe052, 0x3638, 0x0, 0x0);
        gbc.writeMem(0xbc21, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x149, gbc.sp());
        EXPECT(0xbc23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc21));
        EXPECT(0x63, gbc.readMem(0xbc22));
        // CB 63 0293
        gbc.setState(0x3ab1, 0xc1b4, 0xe5b0, 0xe084, 0x621, 0xa64f, 0x0, 0x1);
        gbc.writeMem(0x3ab1, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc1b4, gbc.sp());
        EXPECT(0x3ab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0294
        gbc.setState(0xe86b, 0xfe2d, 0xd560, 0xc41f, 0xfcce, 0x5b2e, 0x0, 0x0);
        gbc.writeMem(0xe86b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xfe2d, gbc.sp());
        EXPECT(0xe86d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe86b));
        EXPECT(0x63, gbc.readMem(0xe86c));
        // CB 63 0295
        gbc.setState(0x260d, 0xe8ca, 0x8d60, 0xb50a, 0x3f88, 0x1f5, 0x1, 0x1);
        gbc.writeMem(0x260d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe8ca, gbc.sp());
        EXPECT(0x260f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0296
        gbc.setState(0xe12e, 0xb183, 0x5d20, 0x2c7f, 0xddc5, 0xfc22, 0x0, 0x0);
        gbc.writeMem(0xe12e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb183, gbc.sp());
        EXPECT(0xe130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe12e));
        EXPECT(0x63, gbc.readMem(0xe12f));
        // CB 63 0297
        gbc.setState(0x167d, 0xc148, 0x2fe0, 0x1fe4, 0x8a7c, 0xfed8, 0x0, 0x1);
        gbc.writeMem(0x167d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc148, gbc.sp());
        EXPECT(0x167f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0298
        gbc.setState(0x8240, 0xc191, 0x5690, 0x828b, 0x686d, 0x90ad, 0x0, 0x1);
        gbc.writeMem(0x8240, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc191, gbc.sp());
        EXPECT(0x8242, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8240));
        EXPECT(0x63, gbc.readMem(0x8241));
        // CB 63 0299
        gbc.setState(0x1e80, 0x22b6, 0x67c0, 0xd25c, 0x5437, 0x4d6d, 0x1, 0x0);
        gbc.writeMem(0x1e80, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x22b6, gbc.sp());
        EXPECT(0x1e82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 029A
        gbc.setState(0x866a, 0x218a, 0xc6f0, 0x319c, 0xf632, 0xf266, 0x0, 0x1);
        gbc.writeMem(0x866a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x218a, gbc.sp());
        EXPECT(0x866c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x866a));
        EXPECT(0x63, gbc.readMem(0x866b));
        // CB 63 029B
        gbc.setState(0xc85c, 0xfaff, 0xcdc0, 0xfb16, 0xf785, 0x432d, 0x1, 0x1);
        gbc.writeMem(0xc85c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xfaff, gbc.sp());
        EXPECT(0xc85e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc85c));
        EXPECT(0x63, gbc.readMem(0xc85d));
        // CB 63 029C
        gbc.setState(0x1c64, 0xa464, 0xaf90, 0x26ed, 0x5a3c, 0x23c0, 0x1, 0x0);
        gbc.writeMem(0x1c64, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa464, gbc.sp());
        EXPECT(0x1c66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 029D
        gbc.setState(0x7c26, 0x1dc1, 0xb800, 0xff3e, 0xcf04, 0x97ab, 0x1, 0x1);
        gbc.writeMem(0x7c26, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1dc1, gbc.sp());
        EXPECT(0x7c28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 029E
        gbc.setState(0x954f, 0xa79, 0xd2f0, 0x6a93, 0xba9, 0x761d, 0x0, 0x1);
        gbc.writeMem(0x954f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa79, gbc.sp());
        EXPECT(0x9551, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x954f));
        EXPECT(0x63, gbc.readMem(0x9550));
        // CB 63 029F
        gbc.setState(0x6e9c, 0xa09f, 0xfb10, 0x6ff8, 0xf3d6, 0x7570, 0x0, 0x0);
        gbc.writeMem(0x6e9c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa09f, gbc.sp());
        EXPECT(0x6e9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 02A0
        gbc.setState(0x3a5, 0x596b, 0xf0f0, 0xce11, 0x4c6a, 0xd0be, 0x1, 0x1);
        gbc.writeMem(0x3a5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x596b, gbc.sp());
        EXPECT(0x3a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 02A1
        gbc.setState(0xdf26, 0x6b5d, 0x1d50, 0xddc, 0x1d0f, 0xff7e, 0x1, 0x1);
        gbc.writeMem(0xdf26, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6b5d, gbc.sp());
        EXPECT(0xdf28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf26));
        EXPECT(0x63, gbc.readMem(0xdf27));
        // CB 63 02A2
        gbc.setState(0xe86b, 0x712, 0xfa0, 0x8d08, 0x3cac, 0xb729, 0x1, 0x0);
        gbc.writeMem(0xe86b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x712, gbc.sp());
        EXPECT(0xe86d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe86b));
        EXPECT(0x63, gbc.readMem(0xe86c));
        // CB 63 02A3
        gbc.setState(0xb8f9, 0xc76, 0xd910, 0x9a1, 0xdc03, 0x175e, 0x0, 0x0);
        gbc.writeMem(0xb8f9, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc76, gbc.sp());
        EXPECT(0xb8fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8f9));
        EXPECT(0x63, gbc.readMem(0xb8fa));
        // CB 63 02A4
        gbc.setState(0x9df3, 0xcdd9, 0xdba0, 0x2ce7, 0x4396, 0x195b, 0x0, 0x1);
        gbc.writeMem(0x9df3, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xcdd9, gbc.sp());
        EXPECT(0x9df5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9df3));
        EXPECT(0x63, gbc.readMem(0x9df4));
        // CB 63 02A5
        gbc.setState(0xbbbd, 0x3dd5, 0xfcf0, 0x223e, 0xe6cb, 0x346f, 0x1, 0x0);
        gbc.writeMem(0xbbbd, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3dd5, gbc.sp());
        EXPECT(0xbbbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbbd));
        EXPECT(0x63, gbc.readMem(0xbbbe));
        // CB 63 02A6
        gbc.setState(0x1fe8, 0x71, 0x4600, 0x585c, 0xe398, 0x1e7e, 0x1, 0x1);
        gbc.writeMem(0x1fe8, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x71, gbc.sp());
        EXPECT(0x1fea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 02A7
        gbc.setState(0x7268, 0x5671, 0x9120, 0xc557, 0x446c, 0x610b, 0x1, 0x0);
        gbc.writeMem(0x7268, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5671, gbc.sp());
        EXPECT(0x726a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 02A8
        gbc.setState(0xdc00, 0x4bf8, 0x2750, 0x9814, 0x876e, 0x7090, 0x1, 0x0);
        gbc.writeMem(0xdc00, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4bf8, gbc.sp());
        EXPECT(0xdc02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc00));
        EXPECT(0x63, gbc.readMem(0xdc01));
        // CB 63 02A9
        gbc.setState(0x563c, 0xa0ba, 0xa150, 0x9276, 0x3a10, 0xdec3, 0x0, 0x0);
        gbc.writeMem(0x563c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa0ba, gbc.sp());
        EXPECT(0x563e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 02AA
        gbc.setState(0x31e, 0x69f9, 0xf8c0, 0x6108, 0x95a9, 0xf137, 0x0, 0x0);
        gbc.writeMem(0x31e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x69f9, gbc.sp());
        EXPECT(0x320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 02AB
        gbc.setState(0xbc4a, 0x3547, 0x1da0, 0x5ba5, 0x2f84, 0xa7e5, 0x0, 0x0);
        gbc.writeMem(0xbc4a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3547, gbc.sp());
        EXPECT(0xbc4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc4a));
        EXPECT(0x63, gbc.readMem(0xbc4b));
        // CB 63 02AC
        gbc.setState(0x7cbe, 0xaef3, 0x5fc0, 0x663b, 0x187a, 0x3bb2, 0x0, 0x0);
        gbc.writeMem(0x7cbe, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xaef3, gbc.sp());
        EXPECT(0x7cc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 02AD
        gbc.setState(0x7c74, 0x6877, 0xa670, 0xdeb7, 0x13db, 0x8932, 0x0, 0x0);
        gbc.writeMem(0x7c74, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6877, gbc.sp());
        EXPECT(0x7c76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 02AE
        gbc.setState(0xd45, 0xe38, 0x78f0, 0x2656, 0xaeab, 0x23b7, 0x1, 0x1);
        gbc.writeMem(0xd45, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe38, gbc.sp());
        EXPECT(0xd47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 02AF
        gbc.setState(0x4536, 0xf507, 0x94d0, 0x5803, 0x7a09, 0x834b, 0x1, 0x0);
        gbc.writeMem(0x4536, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf507, gbc.sp());
        EXPECT(0x4538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 02B0
        gbc.setState(0x1131, 0xa595, 0xfe70, 0x9bd1, 0x9fc5, 0xa197, 0x0, 0x1);
        gbc.writeMem(0x1131, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa595, gbc.sp());
        EXPECT(0x1133, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 02B1
        gbc.setState(0x4193, 0xf7f, 0x43a0, 0xeb1a, 0xd634, 0xb014, 0x1, 0x1);
        gbc.writeMem(0x4193, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf7f, gbc.sp());
        EXPECT(0x4195, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 02B2
        gbc.setState(0xc722, 0xa0fd, 0x9c60, 0xe850, 0x4d0e, 0xd803, 0x0, 0x0);
        gbc.writeMem(0xc722, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa0fd, gbc.sp());
        EXPECT(0xc724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc722));
        EXPECT(0x63, gbc.readMem(0xc723));
        // CB 63 02B3
        gbc.setState(0xd331, 0xcf7, 0x96f0, 0x8401, 0xc720, 0x3cca, 0x0, 0x1);
        gbc.writeMem(0xd331, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xcf7, gbc.sp());
        EXPECT(0xd333, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd331));
        EXPECT(0x63, gbc.readMem(0xd332));
        // CB 63 02B4
        gbc.setState(0x2191, 0xf62a, 0xb690, 0xe3f1, 0x44db, 0x5d88, 0x0, 0x0);
        gbc.writeMem(0x2191, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf62a, gbc.sp());
        EXPECT(0x2193, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 02B5
        gbc.setState(0x1e11, 0x2903, 0xf480, 0xe78e, 0xa852, 0xd6ef, 0x1, 0x0);
        gbc.writeMem(0x1e11, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2903, gbc.sp());
        EXPECT(0x1e13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 02B6
        gbc.setState(0x971f, 0xed4d, 0x8ef0, 0x9f77, 0x5de, 0xc9f2, 0x0, 0x1);
        gbc.writeMem(0x971f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xed4d, gbc.sp());
        EXPECT(0x9721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x971f));
        EXPECT(0x63, gbc.readMem(0x9720));
        // CB 63 02B7
        gbc.setState(0x3bb, 0xd273, 0xca40, 0x7c5c, 0x60d6, 0x6490, 0x1, 0x1);
        gbc.writeMem(0x3bb, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd273, gbc.sp());
        EXPECT(0x3bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 02B8
        gbc.setState(0x1068, 0xcf16, 0xd080, 0x744c, 0xbc4e, 0xb34a, 0x0, 0x1);
        gbc.writeMem(0x1068, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xcf16, gbc.sp());
        EXPECT(0x106a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 02B9
        gbc.setState(0x6909, 0x8c03, 0x50, 0xf7d4, 0xc208, 0xa857, 0x0, 0x1);
        gbc.writeMem(0x6909, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8c03, gbc.sp());
        EXPECT(0x690b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 02BA
        gbc.setState(0xc09b, 0x71f2, 0xecf0, 0xe23c, 0x5aab, 0x158d, 0x1, 0x0);
        gbc.writeMem(0xc09b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x71f2, gbc.sp());
        EXPECT(0xc09d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc09b));
        EXPECT(0x63, gbc.readMem(0xc09c));
        // CB 63 02BB
        gbc.setState(0xbcce, 0x8f5e, 0xd8b0, 0xa79, 0x2add, 0x2f38, 0x1, 0x0);
        gbc.writeMem(0xbcce, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8f5e, gbc.sp());
        EXPECT(0xbcd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcce));
        EXPECT(0x63, gbc.readMem(0xbccf));
        // CB 63 02BC
        gbc.setState(0xea78, 0x1bbc, 0x5dc0, 0xc958, 0xc342, 0x3bbb, 0x1, 0x1);
        gbc.writeMem(0xea78, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1bbc, gbc.sp());
        EXPECT(0xea7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea78));
        EXPECT(0x63, gbc.readMem(0xea79));
        // CB 63 02BD
        gbc.setState(0x64ac, 0xba28, 0xf720, 0x2682, 0x6c80, 0xae8f, 0x0, 0x1);
        gbc.writeMem(0x64ac, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xba28, gbc.sp());
        EXPECT(0x64ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 02BE
        gbc.setState(0xee3a, 0xc2f7, 0x7b80, 0x7b88, 0x13e2, 0x7f00, 0x1, 0x1);
        gbc.writeMem(0xee3a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc2f7, gbc.sp());
        EXPECT(0xee3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee3a));
        EXPECT(0x63, gbc.readMem(0xee3b));
        // CB 63 02C0
        gbc.setState(0x3725, 0x9642, 0xef70, 0x7d8e, 0xa4bc, 0x6783, 0x1, 0x0);
        gbc.writeMem(0x3725, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9642, gbc.sp());
        EXPECT(0x3727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 02C1
        gbc.setState(0x4b6d, 0x5641, 0xb8a0, 0x484c, 0xcbe, 0x8d02, 0x1, 0x1);
        gbc.writeMem(0x4b6d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5641, gbc.sp());
        EXPECT(0x4b6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 02C2
        gbc.setState(0x8af5, 0xa85d, 0x2100, 0xa987, 0x830e, 0x2288, 0x0, 0x1);
        gbc.writeMem(0x8af5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa85d, gbc.sp());
        EXPECT(0x8af7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8af5));
        EXPECT(0x63, gbc.readMem(0x8af6));
        // CB 63 02C3
        gbc.setState(0x8b10, 0x1071, 0xb070, 0x708f, 0x6ebe, 0x70f7, 0x1, 0x0);
        gbc.writeMem(0x8b10, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1071, gbc.sp());
        EXPECT(0x8b12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b10));
        EXPECT(0x63, gbc.readMem(0x8b11));
        // CB 63 02C4
        gbc.setState(0x6d46, 0x5eb, 0x8330, 0x5f47, 0xe1df, 0x888, 0x1, 0x0);
        gbc.writeMem(0x6d46, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5eb, gbc.sp());
        EXPECT(0x6d48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 02C5
        gbc.setState(0xf0c, 0xdaf6, 0x5f0, 0x41b4, 0x13b1, 0xa376, 0x0, 0x1);
        gbc.writeMem(0xf0c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xdaf6, gbc.sp());
        EXPECT(0xf0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 02C6
        gbc.setState(0xdd67, 0xc68c, 0xb920, 0x9e93, 0x5583, 0xe1e, 0x1, 0x0);
        gbc.writeMem(0xdd67, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc68c, gbc.sp());
        EXPECT(0xdd69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd67));
        EXPECT(0x63, gbc.readMem(0xdd68));
        // CB 63 02C7
        gbc.setState(0x7f26, 0xe9ca, 0x240, 0xcc8b, 0xeb5, 0xec12, 0x0, 0x1);
        gbc.writeMem(0x7f26, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe9ca, gbc.sp());
        EXPECT(0x7f28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 02C8
        gbc.setState(0x666, 0x9091, 0x4ae0, 0x9950, 0x8831, 0x36a0, 0x1, 0x0);
        gbc.writeMem(0x666, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9091, gbc.sp());
        EXPECT(0x668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 02C9
        gbc.setState(0x6c57, 0x1aef, 0x7310, 0x1d0e, 0x34a0, 0x26ec, 0x1, 0x1);
        gbc.writeMem(0x6c57, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1aef, gbc.sp());
        EXPECT(0x6c59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 02CA
        gbc.setState(0x24d1, 0x40d3, 0x7ab0, 0x7a6d, 0xd258, 0x4230, 0x0, 0x0);
        gbc.writeMem(0x24d1, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x40d3, gbc.sp());
        EXPECT(0x24d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 02CC
        gbc.setState(0x9713, 0xf6a1, 0x5060, 0x48f6, 0xc179, 0x8d3, 0x0, 0x0);
        gbc.writeMem(0x9713, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf6a1, gbc.sp());
        EXPECT(0x9715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9713));
        EXPECT(0x63, gbc.readMem(0x9714));
        // CB 63 02CD
        gbc.setState(0x499f, 0xd59a, 0xd610, 0xc17d, 0x2feb, 0x4022, 0x1, 0x1);
        gbc.writeMem(0x499f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd59a, gbc.sp());
        EXPECT(0x49a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 02CE
        gbc.setState(0x898a, 0xfa84, 0x1e50, 0x223, 0x4e45, 0xb8aa, 0x0, 0x1);
        gbc.writeMem(0x898a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xfa84, gbc.sp());
        EXPECT(0x898c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x898a));
        EXPECT(0x63, gbc.readMem(0x898b));
        // CB 63 02CF
        gbc.setState(0xdff6, 0xdee3, 0x3a30, 0xa858, 0xe78c, 0xd231, 0x0, 0x1);
        gbc.writeMem(0xdff6, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xdee3, gbc.sp());
        EXPECT(0xdff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdff6));
        EXPECT(0x63, gbc.readMem(0xdff7));
        // CB 63 02D0
        gbc.setState(0x258b, 0xe7ef, 0x1800, 0xf9bc, 0x9f79, 0xcf8e, 0x0, 0x1);
        gbc.writeMem(0x258b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe7ef, gbc.sp());
        EXPECT(0x258d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 02D1
        gbc.setState(0x956a, 0x93b6, 0x1e30, 0x4096, 0x1960, 0x8930, 0x1, 0x0);
        gbc.writeMem(0x956a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x93b6, gbc.sp());
        EXPECT(0x956c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x956a));
        EXPECT(0x63, gbc.readMem(0x956b));
        // CB 63 02D2
        gbc.setState(0xa6da, 0x928e, 0x2400, 0xd360, 0x61c9, 0x2e13, 0x1, 0x1);
        gbc.writeMem(0xa6da, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x928e, gbc.sp());
        EXPECT(0xa6dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6da));
        EXPECT(0x63, gbc.readMem(0xa6db));
        // CB 63 02D3
        gbc.setState(0x91c9, 0x683e, 0x8520, 0x2672, 0xcb6b, 0x75f9, 0x1, 0x1);
        gbc.writeMem(0x91c9, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x683e, gbc.sp());
        EXPECT(0x91cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91c9));
        EXPECT(0x63, gbc.readMem(0x91ca));
        // CB 63 02D4
        gbc.setState(0x3138, 0xa060, 0x2330, 0x8491, 0x950f, 0x7ffe, 0x1, 0x0);
        gbc.writeMem(0x3138, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa060, gbc.sp());
        EXPECT(0x313a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 02D5
        gbc.setState(0x76c2, 0xcdb3, 0xd180, 0x3e3f, 0x7e3a, 0xed75, 0x1, 0x1);
        gbc.writeMem(0x76c2, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xcdb3, gbc.sp());
        EXPECT(0x76c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 02D6
        gbc.setState(0x4f72, 0x628e, 0xea0, 0x1691, 0xc39c, 0x60d5, 0x0, 0x1);
        gbc.writeMem(0x4f72, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x628e, gbc.sp());
        EXPECT(0x4f74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 02D7
        gbc.setState(0x95dd, 0x1afb, 0x7090, 0x8359, 0xceec, 0xc95d, 0x0, 0x1);
        gbc.writeMem(0x95dd, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1afb, gbc.sp());
        EXPECT(0x95df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95dd));
        EXPECT(0x63, gbc.readMem(0x95de));
        // CB 63 02D8
        gbc.setState(0x4a8c, 0x975d, 0x72b0, 0x90ab, 0x18ab, 0xa617, 0x1, 0x0);
        gbc.writeMem(0x4a8c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x975d, gbc.sp());
        EXPECT(0x4a8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 02D9
        gbc.setState(0xa482, 0x8f93, 0xa9f0, 0x7318, 0xb71c, 0xe34c, 0x0, 0x0);
        gbc.writeMem(0xa482, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8f93, gbc.sp());
        EXPECT(0xa484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa482));
        EXPECT(0x63, gbc.readMem(0xa483));
        // CB 63 02DA
        gbc.setState(0x1dee, 0xa7b8, 0x9670, 0xb492, 0xf116, 0x4468, 0x1, 0x1);
        gbc.writeMem(0x1dee, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa7b8, gbc.sp());
        EXPECT(0x1df0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 02DB
        gbc.setState(0x1353, 0xc32b, 0xbbd0, 0x64f7, 0xa1a2, 0xb362, 0x1, 0x1);
        gbc.writeMem(0x1353, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc32b, gbc.sp());
        EXPECT(0x1355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 02DC
        gbc.setState(0x5858, 0x8f7d, 0x3520, 0xba14, 0xe28f, 0x8739, 0x0, 0x0);
        gbc.writeMem(0x5858, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8f7d, gbc.sp());
        EXPECT(0x585a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 02DD
        gbc.setState(0xc1ae, 0xbae0, 0x7630, 0xedad, 0x37b1, 0x85b0, 0x0, 0x1);
        gbc.writeMem(0xc1ae, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xbae0, gbc.sp());
        EXPECT(0xc1b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ae));
        EXPECT(0x63, gbc.readMem(0xc1af));
        // CB 63 02DE
        gbc.setState(0xa9ae, 0xa69e, 0xa5a0, 0xd385, 0xd1f9, 0xd90a, 0x0, 0x1);
        gbc.writeMem(0xa9ae, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa69e, gbc.sp());
        EXPECT(0xa9b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9ae));
        EXPECT(0x63, gbc.readMem(0xa9af));
        // CB 63 02DF
        gbc.setState(0x8d7e, 0x42f, 0x7640, 0x5c88, 0x5208, 0x793a, 0x1, 0x1);
        gbc.writeMem(0x8d7e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x42f, gbc.sp());
        EXPECT(0x8d80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d7e));
        EXPECT(0x63, gbc.readMem(0x8d7f));
        // CB 63 02E0
        gbc.setState(0x5b24, 0x3311, 0x6f90, 0xe457, 0x7651, 0xed7d, 0x1, 0x0);
        gbc.writeMem(0x5b24, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3311, gbc.sp());
        EXPECT(0x5b26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 02E1
        gbc.setState(0xc4ee, 0x4f11, 0x1510, 0x1f30, 0x1b80, 0xbfbd, 0x0, 0x1);
        gbc.writeMem(0xc4ee, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4f11, gbc.sp());
        EXPECT(0xc4f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4ee));
        EXPECT(0x63, gbc.readMem(0xc4ef));
        // CB 63 02E2
        gbc.setState(0x807d, 0x2593, 0xf520, 0xfa16, 0x9c0e, 0xbe21, 0x1, 0x1);
        gbc.writeMem(0x807d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2593, gbc.sp());
        EXPECT(0x807f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x807d));
        EXPECT(0x63, gbc.readMem(0x807e));
        // CB 63 02E3
        gbc.setState(0xdb61, 0xb349, 0x12a0, 0x95df, 0xdf5c, 0x5046, 0x0, 0x0);
        gbc.writeMem(0xdb61, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb349, gbc.sp());
        EXPECT(0xdb63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb61));
        EXPECT(0x63, gbc.readMem(0xdb62));
        // CB 63 02E4
        gbc.setState(0x2014, 0x40dc, 0xe900, 0x4531, 0x9fe6, 0x9a50, 0x1, 0x0);
        gbc.writeMem(0x2014, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x40dc, gbc.sp());
        EXPECT(0x2016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 02E5
        gbc.setState(0x7222, 0x4b93, 0x4970, 0x631e, 0xa33b, 0x43dd, 0x0, 0x0);
        gbc.writeMem(0x7222, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4b93, gbc.sp());
        EXPECT(0x7224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 02E6
        gbc.setState(0xac1e, 0xffe3, 0xb130, 0xad86, 0x687d, 0x6b0, 0x1, 0x1);
        gbc.writeMem(0xac1e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xffe3, gbc.sp());
        EXPECT(0xac20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac1e));
        EXPECT(0x63, gbc.readMem(0xac1f));
        // CB 63 02E7
        gbc.setState(0x5df2, 0x2201, 0x7340, 0xaf51, 0x84db, 0xc7f8, 0x0, 0x0);
        gbc.writeMem(0x5df2, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2201, gbc.sp());
        EXPECT(0x5df4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 02E8
        gbc.setState(0x8097, 0x5fd0, 0x17e0, 0x7244, 0xe73a, 0x16c6, 0x0, 0x1);
        gbc.writeMem(0x8097, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5fd0, gbc.sp());
        EXPECT(0x8099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8097));
        EXPECT(0x63, gbc.readMem(0x8098));
        // CB 63 02E9
        gbc.setState(0x5fc8, 0xf534, 0x7920, 0x8653, 0x2f96, 0xd95a, 0x0, 0x1);
        gbc.writeMem(0x5fc8, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf534, gbc.sp());
        EXPECT(0x5fca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 02EA
        gbc.setState(0x515f, 0x202d, 0x5950, 0x6639, 0x662f, 0x1f7f, 0x0, 0x0);
        gbc.writeMem(0x515f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x202d, gbc.sp());
        EXPECT(0x5161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 02EB
        gbc.setState(0x7d6a, 0x1546, 0x40, 0x72ef, 0xec4a, 0x4f1d, 0x1, 0x0);
        gbc.writeMem(0x7d6a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1546, gbc.sp());
        EXPECT(0x7d6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 02EC
        gbc.setState(0x5ff8, 0xe0b9, 0x2140, 0x8260, 0xaa1c, 0x8e3d, 0x0, 0x0);
        gbc.writeMem(0x5ff8, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe0b9, gbc.sp());
        EXPECT(0x5ffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 02ED
        gbc.setState(0x588c, 0x4661, 0xee50, 0xe7b7, 0x3f13, 0xd6fb, 0x1, 0x0);
        gbc.writeMem(0x588c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4661, gbc.sp());
        EXPECT(0x588e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 02EE
        gbc.setState(0xddcc, 0x27b7, 0xb180, 0x1a75, 0x2c7a, 0xc9f4, 0x0, 0x0);
        gbc.writeMem(0xddcc, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x27b7, gbc.sp());
        EXPECT(0xddce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddcc));
        EXPECT(0x63, gbc.readMem(0xddcd));
        // CB 63 02EF
        gbc.setState(0x1faf, 0xed6, 0xa860, 0xadeb, 0x9ef6, 0x76fd, 0x0, 0x0);
        gbc.writeMem(0x1faf, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xed6, gbc.sp());
        EXPECT(0x1fb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 02F0
        gbc.setState(0x918f, 0xfe6b, 0x94c0, 0x3ccf, 0xbe77, 0xa50c, 0x0, 0x1);
        gbc.writeMem(0x918f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xfe6b, gbc.sp());
        EXPECT(0x9191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x918f));
        EXPECT(0x63, gbc.readMem(0x9190));
        // CB 63 02F1
        gbc.setState(0x509c, 0x79e, 0x5720, 0x3c37, 0xa4d4, 0xd893, 0x1, 0x1);
        gbc.writeMem(0x509c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x79e, gbc.sp());
        EXPECT(0x509e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 02F2
        gbc.setState(0x8c47, 0xc118, 0x1d50, 0x8f44, 0x82a4, 0x3d52, 0x0, 0x0);
        gbc.writeMem(0x8c47, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc118, gbc.sp());
        EXPECT(0x8c49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c47));
        EXPECT(0x63, gbc.readMem(0x8c48));
        // CB 63 02F3
        gbc.setState(0xcf07, 0xd398, 0x6200, 0x3fc7, 0x8c5, 0x98ab, 0x1, 0x1);
        gbc.writeMem(0xcf07, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd398, gbc.sp());
        EXPECT(0xcf09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf07));
        EXPECT(0x63, gbc.readMem(0xcf08));
        // CB 63 02F4
        gbc.setState(0x3b32, 0x3409, 0x92e0, 0xe1, 0xb053, 0x7a44, 0x0, 0x1);
        gbc.writeMem(0x3b32, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3409, gbc.sp());
        EXPECT(0x3b34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 02F5
        gbc.setState(0xcda9, 0x8725, 0x5f20, 0x2462, 0x5ec, 0xb534, 0x0, 0x0);
        gbc.writeMem(0xcda9, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8725, gbc.sp());
        EXPECT(0xcdab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcda9));
        EXPECT(0x63, gbc.readMem(0xcdaa));
        // CB 63 02F6
        gbc.setState(0xb197, 0xe8d2, 0xf550, 0x2f74, 0x51ab, 0x6b8, 0x0, 0x1);
        gbc.writeMem(0xb197, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe8d2, gbc.sp());
        EXPECT(0xb199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb197));
        EXPECT(0x63, gbc.readMem(0xb198));
        // CB 63 02F8
        gbc.setState(0x1052, 0xf662, 0xc910, 0x2577, 0xeaae, 0x7e17, 0x1, 0x0);
        gbc.writeMem(0x1052, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf662, gbc.sp());
        EXPECT(0x1054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 02F9
        gbc.setState(0xc482, 0x93b4, 0x44e0, 0xc7a6, 0x41f2, 0xea78, 0x0, 0x0);
        gbc.writeMem(0xc482, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x93b4, gbc.sp());
        EXPECT(0xc484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc482));
        EXPECT(0x63, gbc.readMem(0xc483));
        // CB 63 02FB
        gbc.setState(0x3c39, 0x4785, 0x31b0, 0x2bfb, 0x9ce9, 0x91f9, 0x1, 0x0);
        gbc.writeMem(0x3c39, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4785, gbc.sp());
        EXPECT(0x3c3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 02FC
        gbc.setState(0x2dc7, 0xc3a1, 0x1170, 0x67d, 0x8602, 0x1a16, 0x1, 0x1);
        gbc.writeMem(0x2dc7, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc3a1, gbc.sp());
        EXPECT(0x2dc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 02FD
        gbc.setState(0x17f3, 0x14a7, 0x40d0, 0xb00c, 0x4082, 0x7c9, 0x0, 0x1);
        gbc.writeMem(0x17f3, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x14a7, gbc.sp());
        EXPECT(0x17f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 02FE
        gbc.setState(0x1f33, 0xad8d, 0x1e90, 0x17f5, 0x51c3, 0xdac5, 0x0, 0x1);
        gbc.writeMem(0x1f33, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xad8d, gbc.sp());
        EXPECT(0x1f35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 02FF
        gbc.setState(0xc4e3, 0x609e, 0x46c0, 0x2f86, 0xc7e5, 0xd342, 0x1, 0x1);
        gbc.writeMem(0xc4e3, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x609e, gbc.sp());
        EXPECT(0xc4e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4e3));
        EXPECT(0x63, gbc.readMem(0xc4e4));
        // CB 63 0300
        gbc.setState(0xd625, 0x9844, 0xa570, 0xcd45, 0x4b36, 0x3401, 0x1, 0x0);
        gbc.writeMem(0xd625, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9844, gbc.sp());
        EXPECT(0xd627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd625));
        EXPECT(0x63, gbc.readMem(0xd626));
        // CB 63 0301
        gbc.setState(0x22de, 0xf3e2, 0xa8f0, 0xd87b, 0x1590, 0xf25a, 0x0, 0x1);
        gbc.writeMem(0x22de, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf3e2, gbc.sp());
        EXPECT(0x22e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0302
        gbc.setState(0x48e4, 0x3b3c, 0x6c0, 0x5d0f, 0x7d58, 0x776d, 0x0, 0x0);
        gbc.writeMem(0x48e4, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3b3c, gbc.sp());
        EXPECT(0x48e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0303
        gbc.setState(0x421f, 0x20e3, 0x1200, 0x4c20, 0x7d46, 0x2f4c, 0x0, 0x1);
        gbc.writeMem(0x421f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x20e3, gbc.sp());
        EXPECT(0x4221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0304
        gbc.setState(0xb557, 0x25b9, 0x15d0, 0xbf44, 0x46d8, 0x4d58, 0x1, 0x1);
        gbc.writeMem(0xb557, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x25b9, gbc.sp());
        EXPECT(0xb559, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb557));
        EXPECT(0x63, gbc.readMem(0xb558));
        // CB 63 0305
        gbc.setState(0x8758, 0x4da, 0x29d0, 0x9674, 0x45c3, 0x7205, 0x1, 0x0);
        gbc.writeMem(0x8758, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4da, gbc.sp());
        EXPECT(0x875a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8758));
        EXPECT(0x63, gbc.readMem(0x8759));
        // CB 63 0306
        gbc.setState(0x6a0b, 0x51dc, 0x10f0, 0x9965, 0x85a7, 0x59ec, 0x0, 0x0);
        gbc.writeMem(0x6a0b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x51dc, gbc.sp());
        EXPECT(0x6a0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0307
        gbc.setState(0x5170, 0x77b9, 0x8bd0, 0x2460, 0x6025, 0xdaf8, 0x0, 0x1);
        gbc.writeMem(0x5170, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x77b9, gbc.sp());
        EXPECT(0x5172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0308
        gbc.setState(0x2d5f, 0xebfd, 0xc40, 0x4456, 0x4c59, 0xbb18, 0x0, 0x1);
        gbc.writeMem(0x2d5f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xebfd, gbc.sp());
        EXPECT(0x2d61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 030A
        gbc.setState(0xd435, 0xa6a0, 0x99a0, 0xff5f, 0xfa93, 0xc146, 0x1, 0x0);
        gbc.writeMem(0xd435, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa6a0, gbc.sp());
        EXPECT(0xd437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd435));
        EXPECT(0x63, gbc.readMem(0xd436));
        // CB 63 030B
        gbc.setState(0x6cac, 0xab50, 0xbde0, 0x9c54, 0xa93f, 0x5fc, 0x1, 0x0);
        gbc.writeMem(0x6cac, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xab50, gbc.sp());
        EXPECT(0x6cae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 030C
        gbc.setState(0x3247, 0xd421, 0xf560, 0xa0f6, 0xfe2f, 0x562a, 0x0, 0x1);
        gbc.writeMem(0x3247, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd421, gbc.sp());
        EXPECT(0x3249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 030D
        gbc.setState(0x9bd1, 0xfbc3, 0x8c30, 0xfed7, 0x610, 0xb4cf, 0x1, 0x1);
        gbc.writeMem(0x9bd1, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xfbc3, gbc.sp());
        EXPECT(0x9bd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bd1));
        EXPECT(0x63, gbc.readMem(0x9bd2));
        // CB 63 030E
        gbc.setState(0xa412, 0x4e63, 0x1b00, 0x3a25, 0x6ada, 0x3296, 0x1, 0x0);
        gbc.writeMem(0xa412, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4e63, gbc.sp());
        EXPECT(0xa414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa412));
        EXPECT(0x63, gbc.readMem(0xa413));
        // CB 63 030F
        gbc.setState(0x7c02, 0x70a2, 0xdae0, 0xdfe8, 0x33b6, 0x6b18, 0x1, 0x1);
        gbc.writeMem(0x7c02, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x70a2, gbc.sp());
        EXPECT(0x7c04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0310
        gbc.setState(0x9df, 0xabc3, 0x7f90, 0xa633, 0xbd93, 0xbb8e, 0x0, 0x1);
        gbc.writeMem(0x9df, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xabc3, gbc.sp());
        EXPECT(0x9e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0311
        gbc.setState(0x87c8, 0xc5b1, 0x5e0, 0x2d17, 0x26b3, 0xb80c, 0x0, 0x0);
        gbc.writeMem(0x87c8, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc5b1, gbc.sp());
        EXPECT(0x87ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87c8));
        EXPECT(0x63, gbc.readMem(0x87c9));
        // CB 63 0312
        gbc.setState(0xfcf, 0x806f, 0xec00, 0xf3b7, 0x43f8, 0x7c38, 0x0, 0x0);
        gbc.writeMem(0xfcf, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x806f, gbc.sp());
        EXPECT(0xfd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0313
        gbc.setState(0xb338, 0x9808, 0x7770, 0xbb7d, 0x8c93, 0x8c2d, 0x0, 0x1);
        gbc.writeMem(0xb338, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9808, gbc.sp());
        EXPECT(0xb33a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb338));
        EXPECT(0x63, gbc.readMem(0xb339));
        // CB 63 0314
        gbc.setState(0x6963, 0xb7df, 0xa480, 0x69a6, 0x3e8e, 0x49d2, 0x0, 0x1);
        gbc.writeMem(0x6963, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb7df, gbc.sp());
        EXPECT(0x6965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0315
        gbc.setState(0xbf73, 0x1f4e, 0xe90, 0xea6b, 0x8b19, 0x4679, 0x0, 0x0);
        gbc.writeMem(0xbf73, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1f4e, gbc.sp());
        EXPECT(0xbf75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf73));
        EXPECT(0x63, gbc.readMem(0xbf74));
        // CB 63 0316
        gbc.setState(0x530f, 0x5ef8, 0x510, 0x191d, 0x9332, 0xba04, 0x1, 0x1);
        gbc.writeMem(0x530f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5ef8, gbc.sp());
        EXPECT(0x5311, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0317
        gbc.setState(0x525c, 0x712, 0xf430, 0xae83, 0x5712, 0x157c, 0x1, 0x0);
        gbc.writeMem(0x525c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x712, gbc.sp());
        EXPECT(0x525e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0318
        gbc.setState(0x5129, 0xc00c, 0xb960, 0x6ca8, 0xa368, 0x68dd, 0x0, 0x0);
        gbc.writeMem(0x5129, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc00c, gbc.sp());
        EXPECT(0x512b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0319
        gbc.setState(0x4d4c, 0x3610, 0xdfa0, 0x17a6, 0x8a06, 0xb69b, 0x0, 0x1);
        gbc.writeMem(0x4d4c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3610, gbc.sp());
        EXPECT(0x4d4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 031A
        gbc.setState(0x9dca, 0xc91b, 0xe0b0, 0xb1f, 0xf880, 0xc7ae, 0x0, 0x0);
        gbc.writeMem(0x9dca, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc91b, gbc.sp());
        EXPECT(0x9dcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dca));
        EXPECT(0x63, gbc.readMem(0x9dcb));
        // CB 63 031B
        gbc.setState(0x3ed3, 0x9c1f, 0xef00, 0x3aae, 0x7f5d, 0x85fb, 0x1, 0x0);
        gbc.writeMem(0x3ed3, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9c1f, gbc.sp());
        EXPECT(0x3ed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 031C
        gbc.setState(0x6bcb, 0xa292, 0xe3a0, 0xd586, 0xf8c6, 0x4242, 0x0, 0x1);
        gbc.writeMem(0x6bcb, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa292, gbc.sp());
        EXPECT(0x6bcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 031D
        gbc.setState(0xece8, 0x4c60, 0x7200, 0x2df6, 0x2e9a, 0xec5a, 0x1, 0x1);
        gbc.writeMem(0xece8, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4c60, gbc.sp());
        EXPECT(0xecea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xece8));
        EXPECT(0x63, gbc.readMem(0xece9));
        // CB 63 031E
        gbc.setState(0x33bd, 0x3f78, 0x3480, 0x32c2, 0x916e, 0x7801, 0x0, 0x1);
        gbc.writeMem(0x33bd, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3f78, gbc.sp());
        EXPECT(0x33bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 031F
        gbc.setState(0x4dbb, 0xddad, 0xf3b0, 0x8930, 0x9f33, 0x7613, 0x1, 0x1);
        gbc.writeMem(0x4dbb, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xddad, gbc.sp());
        EXPECT(0x4dbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0322
        gbc.setState(0x1655, 0xc743, 0xb230, 0xdc49, 0x8da6, 0xbf88, 0x1, 0x0);
        gbc.writeMem(0x1655, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc743, gbc.sp());
        EXPECT(0x1657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0323
        gbc.setState(0x81c7, 0x5638, 0x31c0, 0x87c5, 0x5124, 0x33af, 0x0, 0x1);
        gbc.writeMem(0x81c7, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5638, gbc.sp());
        EXPECT(0x81c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81c7));
        EXPECT(0x63, gbc.readMem(0x81c8));
        // CB 63 0324
        gbc.setState(0xa6b4, 0xc30f, 0xd370, 0xf5eb, 0xd6af, 0x5e41, 0x0, 0x0);
        gbc.writeMem(0xa6b4, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc30f, gbc.sp());
        EXPECT(0xa6b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6b4));
        EXPECT(0x63, gbc.readMem(0xa6b5));
        // CB 63 0325
        gbc.setState(0xee1d, 0x77fe, 0xa4b0, 0x2147, 0x5ad3, 0xfb70, 0x0, 0x1);
        gbc.writeMem(0xee1d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x77fe, gbc.sp());
        EXPECT(0xee1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee1d));
        EXPECT(0x63, gbc.readMem(0xee1e));
        // CB 63 0326
        gbc.setState(0x263d, 0x8173, 0x9610, 0xe59b, 0x5a37, 0x669d, 0x0, 0x1);
        gbc.writeMem(0x263d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8173, gbc.sp());
        EXPECT(0x263f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0327
        gbc.setState(0xd3ec, 0x9fcb, 0x4f70, 0x3296, 0xc129, 0xee15, 0x0, 0x0);
        gbc.writeMem(0xd3ec, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9fcb, gbc.sp());
        EXPECT(0xd3ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ec));
        EXPECT(0x63, gbc.readMem(0xd3ed));
        // CB 63 0328
        gbc.setState(0x6f65, 0x441b, 0x8c50, 0xd2e4, 0xdefe, 0xdc8a, 0x1, 0x0);
        gbc.writeMem(0x6f65, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x441b, gbc.sp());
        EXPECT(0x6f67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 032A
        gbc.setState(0xc31, 0x5d4, 0x9ec0, 0x67ba, 0xd2eb, 0x232f, 0x0, 0x1);
        gbc.writeMem(0xc31, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5d4, gbc.sp());
        EXPECT(0xc33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 032B
        gbc.setState(0x2e97, 0x2e4e, 0x57d0, 0xe319, 0x112c, 0x37ab, 0x0, 0x1);
        gbc.writeMem(0x2e97, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2e4e, gbc.sp());
        EXPECT(0x2e99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 032C
        gbc.setState(0x9ae5, 0x35d9, 0x12a0, 0xb296, 0x9388, 0xca4c, 0x1, 0x1);
        gbc.writeMem(0x9ae5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x35d9, gbc.sp());
        EXPECT(0x9ae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ae5));
        EXPECT(0x63, gbc.readMem(0x9ae6));
        // CB 63 032D
        gbc.setState(0x3586, 0x8615, 0x1020, 0x5838, 0x84f1, 0x5723, 0x1, 0x1);
        gbc.writeMem(0x3586, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8615, gbc.sp());
        EXPECT(0x3588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 032E
        gbc.setState(0x3087, 0x7c95, 0xdfb0, 0x4a9b, 0x2620, 0xb7c3, 0x1, 0x1);
        gbc.writeMem(0x3087, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7c95, gbc.sp());
        EXPECT(0x3089, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 032F
        gbc.setState(0x588a, 0xe22d, 0x6c80, 0xd201, 0x80a9, 0x7789, 0x0, 0x0);
        gbc.writeMem(0x588a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe22d, gbc.sp());
        EXPECT(0x588c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0330
        gbc.setState(0xeb65, 0x79f3, 0x6060, 0xc80e, 0xfa1c, 0x8a0e, 0x1, 0x1);
        gbc.writeMem(0xeb65, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x79f3, gbc.sp());
        EXPECT(0xeb67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb65));
        EXPECT(0x63, gbc.readMem(0xeb66));
        // CB 63 0331
        gbc.setState(0x9c6, 0x1e0f, 0x3630, 0x2658, 0x300b, 0x4db3, 0x0, 0x1);
        gbc.writeMem(0x9c6, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1e0f, gbc.sp());
        EXPECT(0x9c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0332
        gbc.setState(0x1893, 0x7ccf, 0x7920, 0xd239, 0xc532, 0x344, 0x1, 0x1);
        gbc.writeMem(0x1893, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7ccf, gbc.sp());
        EXPECT(0x1895, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0333
        gbc.setState(0xedee, 0x8c39, 0x3de0, 0x75d5, 0x637, 0x9e80, 0x0, 0x0);
        gbc.writeMem(0xedee, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8c39, gbc.sp());
        EXPECT(0xedf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedee));
        EXPECT(0x63, gbc.readMem(0xedef));
        // CB 63 0334
        gbc.setState(0x3943, 0xb99c, 0xb210, 0x1bcd, 0xb1db, 0x77cb, 0x1, 0x1);
        gbc.writeMem(0x3943, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb99c, gbc.sp());
        EXPECT(0x3945, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0335
        gbc.setState(0x539f, 0xac5e, 0x8e80, 0xe135, 0xc7fc, 0xaa0f, 0x0, 0x0);
        gbc.writeMem(0x539f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xac5e, gbc.sp());
        EXPECT(0x53a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0336
        gbc.setState(0xdabc, 0x1131, 0xdf70, 0x21f2, 0xe280, 0x7b6f, 0x1, 0x1);
        gbc.writeMem(0xdabc, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1131, gbc.sp());
        EXPECT(0xdabe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdabc));
        EXPECT(0x63, gbc.readMem(0xdabd));
        // CB 63 0337
        gbc.setState(0xa508, 0x29dd, 0x31f0, 0x33f4, 0x2914, 0xfdf9, 0x1, 0x0);
        gbc.writeMem(0xa508, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x29dd, gbc.sp());
        EXPECT(0xa50a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa508));
        EXPECT(0x63, gbc.readMem(0xa509));
        // CB 63 0338
        gbc.setState(0xddc5, 0xe6fa, 0xaf30, 0x375b, 0xef47, 0xb93b, 0x1, 0x1);
        gbc.writeMem(0xddc5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe6fa, gbc.sp());
        EXPECT(0xddc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddc5));
        EXPECT(0x63, gbc.readMem(0xddc6));
        // CB 63 0339
        gbc.setState(0xc717, 0x1f60, 0xd9f0, 0x4b93, 0xdb4c, 0xcbd0, 0x0, 0x1);
        gbc.writeMem(0xc717, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1f60, gbc.sp());
        EXPECT(0xc719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc717));
        EXPECT(0x63, gbc.readMem(0xc718));
        // CB 63 033A
        gbc.setState(0xce49, 0x3461, 0x2b80, 0x6408, 0xd541, 0x17f8, 0x1, 0x1);
        gbc.writeMem(0xce49, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3461, gbc.sp());
        EXPECT(0xce4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce49));
        EXPECT(0x63, gbc.readMem(0xce4a));
        // CB 63 033B
        gbc.setState(0x40e4, 0xcecc, 0x20a0, 0x8ffc, 0xc421, 0xf9fd, 0x1, 0x1);
        gbc.writeMem(0x40e4, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xcecc, gbc.sp());
        EXPECT(0x40e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 033C
        gbc.setState(0x28c3, 0x66c7, 0x8fd0, 0xdcad, 0x3263, 0x7e0d, 0x0, 0x0);
        gbc.writeMem(0x28c3, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x66c7, gbc.sp());
        EXPECT(0x28c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 033D
        gbc.setState(0x5c2e, 0xbbdc, 0x4290, 0x60cf, 0x360, 0xb3ad, 0x0, 0x1);
        gbc.writeMem(0x5c2e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xbbdc, gbc.sp());
        EXPECT(0x5c30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0340
        gbc.setState(0xd9fd, 0x63e3, 0xe290, 0x4b18, 0xb316, 0x2d94, 0x1, 0x0);
        gbc.writeMem(0xd9fd, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x63e3, gbc.sp());
        EXPECT(0xd9ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9fd));
        EXPECT(0x63, gbc.readMem(0xd9fe));
        // CB 63 0341
        gbc.setState(0xab2d, 0x1a31, 0x18f0, 0x890e, 0x448e, 0xf20a, 0x1, 0x0);
        gbc.writeMem(0xab2d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1a31, gbc.sp());
        EXPECT(0xab2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab2d));
        EXPECT(0x63, gbc.readMem(0xab2e));
        // CB 63 0342
        gbc.setState(0x5844, 0xbc91, 0x3b00, 0x1cfd, 0x3fd6, 0x69d9, 0x0, 0x1);
        gbc.writeMem(0x5844, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xbc91, gbc.sp());
        EXPECT(0x5846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0343
        gbc.setState(0x58c6, 0x5822, 0x5f80, 0xc9b7, 0x5fe6, 0xad6f, 0x1, 0x1);
        gbc.writeMem(0x58c6, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5822, gbc.sp());
        EXPECT(0x58c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0344
        gbc.setState(0xc696, 0x1605, 0xf5d0, 0xbbbc, 0xfa3, 0x51c7, 0x0, 0x1);
        gbc.writeMem(0xc696, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1605, gbc.sp());
        EXPECT(0xc698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc696));
        EXPECT(0x63, gbc.readMem(0xc697));
        // CB 63 0345
        gbc.setState(0x3e13, 0x7f4b, 0x1fa0, 0x67a8, 0xaa59, 0x36ea, 0x1, 0x1);
        gbc.writeMem(0x3e13, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7f4b, gbc.sp());
        EXPECT(0x3e15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0346
        gbc.setState(0x9193, 0x7300, 0x81c0, 0xd751, 0xcb12, 0x4049, 0x1, 0x1);
        gbc.writeMem(0x9193, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7300, gbc.sp());
        EXPECT(0x9195, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9193));
        EXPECT(0x63, gbc.readMem(0x9194));
        // CB 63 0347
        gbc.setState(0x9cee, 0xb39a, 0x3a60, 0x7e6, 0x9b84, 0x1039, 0x1, 0x1);
        gbc.writeMem(0x9cee, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb39a, gbc.sp());
        EXPECT(0x9cf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cee));
        EXPECT(0x63, gbc.readMem(0x9cef));
        // CB 63 0348
        gbc.setState(0xb960, 0x57ec, 0x7250, 0x2465, 0x2b4c, 0x462e, 0x1, 0x1);
        gbc.writeMem(0xb960, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x57ec, gbc.sp());
        EXPECT(0xb962, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb960));
        EXPECT(0x63, gbc.readMem(0xb961));
        // CB 63 0349
        gbc.setState(0x72dc, 0x4722, 0x6f90, 0x280d, 0xc893, 0x51fb, 0x0, 0x1);
        gbc.writeMem(0x72dc, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4722, gbc.sp());
        EXPECT(0x72de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 034A
        gbc.setState(0xbe5e, 0x7a08, 0xf270, 0x68d7, 0xdcbe, 0x4e27, 0x0, 0x1);
        gbc.writeMem(0xbe5e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7a08, gbc.sp());
        EXPECT(0xbe60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe5e));
        EXPECT(0x63, gbc.readMem(0xbe5f));
        // CB 63 034B
        gbc.setState(0x7aa4, 0xf2a7, 0x17a0, 0xbae4, 0x5ced, 0x357e, 0x0, 0x0);
        gbc.writeMem(0x7aa4, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf2a7, gbc.sp());
        EXPECT(0x7aa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 034C
        gbc.setState(0x9432, 0x3b30, 0xb3b0, 0x44f, 0x9619, 0xb04a, 0x1, 0x0);
        gbc.writeMem(0x9432, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3b30, gbc.sp());
        EXPECT(0x9434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9432));
        EXPECT(0x63, gbc.readMem(0x9433));
        // CB 63 034D
        gbc.setState(0x3e49, 0x9dc1, 0xffe0, 0x213a, 0xf7ba, 0x6ea, 0x1, 0x0);
        gbc.writeMem(0x3e49, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9dc1, gbc.sp());
        EXPECT(0x3e4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 034E
        gbc.setState(0xe40b, 0x343b, 0x1ed0, 0xa400, 0xb7a9, 0x209b, 0x1, 0x1);
        gbc.writeMem(0xe40b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x343b, gbc.sp());
        EXPECT(0xe40d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe40b));
        EXPECT(0x63, gbc.readMem(0xe40c));
        // CB 63 034F
        gbc.setState(0x8837, 0x9d7, 0x2bf0, 0xc9dc, 0xe1e5, 0x88e9, 0x0, 0x0);
        gbc.writeMem(0x8837, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9d7, gbc.sp());
        EXPECT(0x8839, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8837));
        EXPECT(0x63, gbc.readMem(0x8838));
        // CB 63 0351
        gbc.setState(0x7327, 0xb719, 0xea90, 0x5610, 0x3da8, 0xd3d7, 0x0, 0x1);
        gbc.writeMem(0x7327, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb719, gbc.sp());
        EXPECT(0x7329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0352
        gbc.setState(0x6c18, 0x91b4, 0x3ed0, 0x29dc, 0xf058, 0x843, 0x0, 0x0);
        gbc.writeMem(0x6c18, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x91b4, gbc.sp());
        EXPECT(0x6c1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0353
        gbc.setState(0xe2e4, 0x4166, 0x4830, 0xcaee, 0xf61a, 0xa2a5, 0x1, 0x0);
        gbc.writeMem(0xe2e4, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4166, gbc.sp());
        EXPECT(0xe2e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2e4));
        EXPECT(0x63, gbc.readMem(0xe2e5));
        // CB 63 0354
        gbc.setState(0x59cf, 0xa3f2, 0x6c10, 0x9094, 0x28ab, 0x392b, 0x1, 0x0);
        gbc.writeMem(0x59cf, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa3f2, gbc.sp());
        EXPECT(0x59d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0355
        gbc.setState(0x5da9, 0xd937, 0x6c10, 0x952, 0xd7c3, 0xb44a, 0x0, 0x0);
        gbc.writeMem(0x5da9, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd937, gbc.sp());
        EXPECT(0x5dab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0357
        gbc.setState(0x95fa, 0x9de5, 0x3c70, 0x7fda, 0x4a2d, 0x1b44, 0x1, 0x1);
        gbc.writeMem(0x95fa, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9de5, gbc.sp());
        EXPECT(0x95fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95fa));
        EXPECT(0x63, gbc.readMem(0x95fb));
        // CB 63 0358
        gbc.setState(0xbac6, 0xdfc9, 0xef70, 0xcb0d, 0x195e, 0x74c0, 0x1, 0x0);
        gbc.writeMem(0xbac6, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xdfc9, gbc.sp());
        EXPECT(0xbac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbac6));
        EXPECT(0x63, gbc.readMem(0xbac7));
        // CB 63 0359
        gbc.setState(0xe37e, 0x3c3d, 0xec50, 0x529, 0x6a8d, 0x24e7, 0x1, 0x1);
        gbc.writeMem(0xe37e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3c3d, gbc.sp());
        EXPECT(0xe380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe37e));
        EXPECT(0x63, gbc.readMem(0xe37f));
        // CB 63 035A
        gbc.setState(0x9b73, 0xbdc8, 0xb770, 0x770b, 0xc08c, 0xefe7, 0x0, 0x1);
        gbc.writeMem(0x9b73, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xbdc8, gbc.sp());
        EXPECT(0x9b75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b73));
        EXPECT(0x63, gbc.readMem(0x9b74));
        // CB 63 035B
        gbc.setState(0x8ca7, 0x1765, 0xec10, 0xece, 0x7fe9, 0x8115, 0x0, 0x0);
        gbc.writeMem(0x8ca7, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1765, gbc.sp());
        EXPECT(0x8ca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ca7));
        EXPECT(0x63, gbc.readMem(0x8ca8));
        // CB 63 035C
        gbc.setState(0x71bd, 0x91b8, 0xa1e0, 0xdf94, 0x3469, 0x22a7, 0x0, 0x0);
        gbc.writeMem(0x71bd, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x91b8, gbc.sp());
        EXPECT(0x71bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 035E
        gbc.setState(0xc1a9, 0xcb39, 0x2a40, 0x3f5d, 0x45f, 0xb331, 0x0, 0x1);
        gbc.writeMem(0xc1a9, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xcb39, gbc.sp());
        EXPECT(0xc1ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1a9));
        EXPECT(0x63, gbc.readMem(0xc1aa));
        // CB 63 035F
        gbc.setState(0x681e, 0x5e40, 0x47d0, 0xdb3c, 0x4edb, 0xc150, 0x0, 0x1);
        gbc.writeMem(0x681e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5e40, gbc.sp());
        EXPECT(0x6820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0360
        gbc.setState(0xa06a, 0xbf9c, 0x3920, 0x2296, 0x55f8, 0x78e4, 0x0, 0x0);
        gbc.writeMem(0xa06a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xbf9c, gbc.sp());
        EXPECT(0xa06c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa06a));
        EXPECT(0x63, gbc.readMem(0xa06b));
        // CB 63 0361
        gbc.setState(0x3b06, 0xe707, 0xda30, 0x8831, 0x5791, 0xb8a0, 0x1, 0x0);
        gbc.writeMem(0x3b06, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe707, gbc.sp());
        EXPECT(0x3b08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0362
        gbc.setState(0x4262, 0x5b05, 0x9a00, 0x83cb, 0x41a2, 0x1edc, 0x0, 0x1);
        gbc.writeMem(0x4262, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5b05, gbc.sp());
        EXPECT(0x4264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0363
        gbc.setState(0x650f, 0xf5c8, 0x3b00, 0x514e, 0x87df, 0x268f, 0x0, 0x0);
        gbc.writeMem(0x650f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf5c8, gbc.sp());
        EXPECT(0x6511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0365
        gbc.setState(0x11cb, 0xd6f6, 0x9910, 0x7d49, 0x87d4, 0x38dd, 0x1, 0x0);
        gbc.writeMem(0x11cb, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd6f6, gbc.sp());
        EXPECT(0x11cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0367
        gbc.setState(0x65a0, 0xb54f, 0x47d0, 0xe116, 0x486b, 0x4489, 0x0, 0x0);
        gbc.writeMem(0x65a0, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb54f, gbc.sp());
        EXPECT(0x65a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0368
        gbc.setState(0xa764, 0x7396, 0x170, 0xf6b5, 0x118a, 0x4a06, 0x1, 0x1);
        gbc.writeMem(0xa764, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7396, gbc.sp());
        EXPECT(0xa766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa764));
        EXPECT(0x63, gbc.readMem(0xa765));
        // CB 63 0369
        gbc.setState(0x631a, 0xf1b2, 0x9640, 0xb83f, 0x3746, 0x6f34, 0x1, 0x0);
        gbc.writeMem(0x631a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf1b2, gbc.sp());
        EXPECT(0x631c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 036A
        gbc.setState(0x3ae6, 0xd176, 0xa860, 0xd157, 0x2c0c, 0xa249, 0x0, 0x1);
        gbc.writeMem(0x3ae6, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd176, gbc.sp());
        EXPECT(0x3ae8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 036B
        gbc.setState(0xe94a, 0x58ee, 0xba10, 0x84e6, 0xec4b, 0x9081, 0x1, 0x1);
        gbc.writeMem(0xe94a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x58ee, gbc.sp());
        EXPECT(0xe94c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe94a));
        EXPECT(0x63, gbc.readMem(0xe94b));
        // CB 63 036C
        gbc.setState(0xe83, 0xafa3, 0xc540, 0x441c, 0xaec9, 0xbf0d, 0x1, 0x0);
        gbc.writeMem(0xe83, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xafa3, gbc.sp());
        EXPECT(0xe85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 036D
        gbc.setState(0x7198, 0x104d, 0xe770, 0xea93, 0xb387, 0xf95e, 0x1, 0x0);
        gbc.writeMem(0x7198, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x104d, gbc.sp());
        EXPECT(0x719a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 036E
        gbc.setState(0x389a, 0x2404, 0xcbc0, 0xbe1b, 0x87e, 0xd742, 0x1, 0x1);
        gbc.writeMem(0x389a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2404, gbc.sp());
        EXPECT(0x389c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 036F
        gbc.setState(0x9657, 0x337a, 0xa1c0, 0x25ca, 0x9388, 0xedfc, 0x0, 0x1);
        gbc.writeMem(0x9657, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x337a, gbc.sp());
        EXPECT(0x9659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9657));
        EXPECT(0x63, gbc.readMem(0x9658));
        // CB 63 0370
        gbc.setState(0x9ced, 0xf00f, 0xc640, 0x6e3, 0xf758, 0x4716, 0x1, 0x1);
        gbc.writeMem(0x9ced, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf00f, gbc.sp());
        EXPECT(0x9cef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ced));
        EXPECT(0x63, gbc.readMem(0x9cee));
        // CB 63 0371
        gbc.setState(0xc4aa, 0x1340, 0x2ee0, 0xb621, 0xfdd0, 0xe15e, 0x0, 0x0);
        gbc.writeMem(0xc4aa, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1340, gbc.sp());
        EXPECT(0xc4ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4aa));
        EXPECT(0x63, gbc.readMem(0xc4ab));
        // CB 63 0372
        gbc.setState(0x5277, 0x6c1c, 0x6110, 0x433f, 0xd83a, 0xaf1c, 0x1, 0x0);
        gbc.writeMem(0x5277, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6c1c, gbc.sp());
        EXPECT(0x5279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0373
        gbc.setState(0x7d09, 0xd2b3, 0xcaa0, 0x9b16, 0x2eb7, 0x6f4a, 0x0, 0x0);
        gbc.writeMem(0x7d09, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd2b3, gbc.sp());
        EXPECT(0x7d0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0374
        gbc.setState(0x1a40, 0x763a, 0x3a00, 0xebb4, 0x4869, 0x1f3a, 0x1, 0x1);
        gbc.writeMem(0x1a40, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x763a, gbc.sp());
        EXPECT(0x1a42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0375
        gbc.setState(0x8878, 0xdf9b, 0x2fe0, 0xdd93, 0xaec7, 0xe994, 0x0, 0x0);
        gbc.writeMem(0x8878, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xdf9b, gbc.sp());
        EXPECT(0x887a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8878));
        EXPECT(0x63, gbc.readMem(0x8879));
        // CB 63 0377
        gbc.setState(0x38e0, 0xa25a, 0x3490, 0x17e9, 0x961, 0xdf9a, 0x0, 0x0);
        gbc.writeMem(0x38e0, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa25a, gbc.sp());
        EXPECT(0x38e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0378
        gbc.setState(0x4793, 0x6475, 0xc740, 0x1f09, 0xcdf1, 0xbabb, 0x0, 0x0);
        gbc.writeMem(0x4793, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6475, gbc.sp());
        EXPECT(0x4795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0379
        gbc.setState(0x5f66, 0xb223, 0xce90, 0xec96, 0x7d51, 0x2ebc, 0x1, 0x0);
        gbc.writeMem(0x5f66, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb223, gbc.sp());
        EXPECT(0x5f68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 037A
        gbc.setState(0x782a, 0x91b4, 0x960, 0xe4a, 0x7dd1, 0xc3f3, 0x1, 0x1);
        gbc.writeMem(0x782a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x91b4, gbc.sp());
        EXPECT(0x782c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 037B
        gbc.setState(0xac72, 0x6b1f, 0xc2f0, 0xfdda, 0x731d, 0x7a09, 0x1, 0x0);
        gbc.writeMem(0xac72, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6b1f, gbc.sp());
        EXPECT(0xac74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac72));
        EXPECT(0x63, gbc.readMem(0xac73));
        // CB 63 037C
        gbc.setState(0xeb6a, 0x5761, 0xda80, 0xee8a, 0x33f6, 0x24a0, 0x0, 0x0);
        gbc.writeMem(0xeb6a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5761, gbc.sp());
        EXPECT(0xeb6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb6a));
        EXPECT(0x63, gbc.readMem(0xeb6b));
        // CB 63 037D
        gbc.setState(0x9246, 0x2786, 0xeaa0, 0x520, 0x9162, 0xf431, 0x1, 0x1);
        gbc.writeMem(0x9246, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2786, gbc.sp());
        EXPECT(0x9248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9246));
        EXPECT(0x63, gbc.readMem(0x9247));
        // CB 63 037F
        gbc.setState(0xe771, 0x5d3d, 0xc980, 0x8b4, 0xe353, 0x1435, 0x0, 0x1);
        gbc.writeMem(0xe771, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5d3d, gbc.sp());
        EXPECT(0xe773, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe771));
        EXPECT(0x63, gbc.readMem(0xe772));
        // CB 63 0380
        gbc.setState(0x5309, 0xb457, 0x16e0, 0x9e3e, 0x3a57, 0xbf4e, 0x1, 0x0);
        gbc.writeMem(0x5309, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb457, gbc.sp());
        EXPECT(0x530b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0381
        gbc.setState(0xd91e, 0x2147, 0x4fd0, 0x4158, 0xefa6, 0xdbdd, 0x1, 0x0);
        gbc.writeMem(0xd91e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2147, gbc.sp());
        EXPECT(0xd920, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd91e));
        EXPECT(0x63, gbc.readMem(0xd91f));
        // CB 63 0382
        gbc.setState(0xe386, 0xa2b0, 0xd0c0, 0x86e, 0x8c2a, 0x1880, 0x1, 0x0);
        gbc.writeMem(0xe386, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa2b0, gbc.sp());
        EXPECT(0xe388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe386));
        EXPECT(0x63, gbc.readMem(0xe387));
        // CB 63 0384
        gbc.setState(0x499e, 0xf53f, 0x7a30, 0x42b6, 0x2727, 0xd8bf, 0x1, 0x0);
        gbc.writeMem(0x499e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf53f, gbc.sp());
        EXPECT(0x49a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0385
        gbc.setState(0xc638, 0xf9d9, 0xe150, 0x7733, 0x317e, 0xea1, 0x1, 0x0);
        gbc.writeMem(0xc638, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf9d9, gbc.sp());
        EXPECT(0xc63a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc638));
        EXPECT(0x63, gbc.readMem(0xc639));
        // CB 63 0387
        gbc.setState(0xb88c, 0xb751, 0x78f0, 0xcbdc, 0x7d3e, 0x9015, 0x0, 0x1);
        gbc.writeMem(0xb88c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb751, gbc.sp());
        EXPECT(0xb88e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb88c));
        EXPECT(0x63, gbc.readMem(0xb88d));
        // CB 63 0388
        gbc.setState(0x97cc, 0xfe4c, 0x4f0, 0x11c, 0xfc58, 0xf3a0, 0x0, 0x0);
        gbc.writeMem(0x97cc, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xfe4c, gbc.sp());
        EXPECT(0x97ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97cc));
        EXPECT(0x63, gbc.readMem(0x97cd));
        // CB 63 0389
        gbc.setState(0x7080, 0x253c, 0x4930, 0xa1d6, 0x8479, 0xd269, 0x0, 0x0);
        gbc.writeMem(0x7080, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x253c, gbc.sp());
        EXPECT(0x7082, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 038A
        gbc.setState(0x8c51, 0x418e, 0xb990, 0xef63, 0x53b0, 0x555e, 0x1, 0x1);
        gbc.writeMem(0x8c51, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x418e, gbc.sp());
        EXPECT(0x8c53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c51));
        EXPECT(0x63, gbc.readMem(0x8c52));
        // CB 63 038B
        gbc.setState(0xdf86, 0x35a7, 0xccf0, 0x5a2f, 0x9502, 0x918a, 0x0, 0x0);
        gbc.writeMem(0xdf86, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x35a7, gbc.sp());
        EXPECT(0xdf88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf86));
        EXPECT(0x63, gbc.readMem(0xdf87));
        // CB 63 038C
        gbc.setState(0x15ec, 0xb111, 0x46f0, 0xaa48, 0xd4c3, 0x845, 0x0, 0x1);
        gbc.writeMem(0x15ec, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb111, gbc.sp());
        EXPECT(0x15ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 038D
        gbc.setState(0x29c6, 0xce9b, 0xee10, 0x3486, 0x2c38, 0x4ffc, 0x0, 0x0);
        gbc.writeMem(0x29c6, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xce9b, gbc.sp());
        EXPECT(0x29c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 038E
        gbc.setState(0xd7c2, 0x24, 0x3b80, 0x148f, 0x6328, 0x2bad, 0x0, 0x0);
        gbc.writeMem(0xd7c2, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x24, gbc.sp());
        EXPECT(0xd7c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7c2));
        EXPECT(0x63, gbc.readMem(0xd7c3));
        // CB 63 038F
        gbc.setState(0x4ab4, 0xeb6, 0x6160, 0x4b84, 0xedea, 0xd896, 0x0, 0x1);
        gbc.writeMem(0x4ab4, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xeb6, gbc.sp());
        EXPECT(0x4ab6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0390
        gbc.setState(0xb7a2, 0x6763, 0xabc0, 0xda1, 0x14ef, 0xa70, 0x1, 0x1);
        gbc.writeMem(0xb7a2, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6763, gbc.sp());
        EXPECT(0xb7a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7a2));
        EXPECT(0x63, gbc.readMem(0xb7a3));
        // CB 63 0391
        gbc.setState(0x5123, 0xab24, 0xbde0, 0x4784, 0x9ffe, 0xaf25, 0x0, 0x1);
        gbc.writeMem(0x5123, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xab24, gbc.sp());
        EXPECT(0x5125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0392
        gbc.setState(0xbfec, 0x5856, 0xde40, 0x9f04, 0x5a45, 0xf744, 0x0, 0x0);
        gbc.writeMem(0xbfec, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5856, gbc.sp());
        EXPECT(0xbfee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfec));
        EXPECT(0x63, gbc.readMem(0xbfed));
        // CB 63 0393
        gbc.setState(0x3af, 0xae75, 0x9b10, 0xb74c, 0xb14e, 0xf6d7, 0x0, 0x0);
        gbc.writeMem(0x3af, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xae75, gbc.sp());
        EXPECT(0x3b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0394
        gbc.setState(0x5569, 0xdfb2, 0xed10, 0x698a, 0x49e1, 0x1f8b, 0x1, 0x1);
        gbc.writeMem(0x5569, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdfb2, gbc.sp());
        EXPECT(0x556b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0395
        gbc.setState(0x9f9b, 0xff56, 0xfcd0, 0x6a3b, 0x508a, 0x6b75, 0x1, 0x1);
        gbc.writeMem(0x9f9b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xff56, gbc.sp());
        EXPECT(0x9f9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f9b));
        EXPECT(0x63, gbc.readMem(0x9f9c));
        // CB 63 0396
        gbc.setState(0x274b, 0x7f73, 0x8290, 0xcdff, 0x7786, 0x7ac0, 0x0, 0x0);
        gbc.writeMem(0x274b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7f73, gbc.sp());
        EXPECT(0x274d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0397
        gbc.setState(0x7f3d, 0x83c3, 0x44d0, 0x2fe8, 0xc1d3, 0xf5e9, 0x0, 0x0);
        gbc.writeMem(0x7f3d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x83c3, gbc.sp());
        EXPECT(0x7f3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 0398
        gbc.setState(0x4db5, 0x3a0e, 0x7b40, 0x140e, 0x37b3, 0xf22a, 0x1, 0x1);
        gbc.writeMem(0x4db5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3a0e, gbc.sp());
        EXPECT(0x4db7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 0399
        gbc.setState(0xcbbc, 0xe4f, 0x43e0, 0x9c23, 0x1d34, 0x210e, 0x1, 0x0);
        gbc.writeMem(0xcbbc, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe4f, gbc.sp());
        EXPECT(0xcbbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbbc));
        EXPECT(0x63, gbc.readMem(0xcbbd));
        // CB 63 039B
        gbc.setState(0x25bd, 0xd3ee, 0xa880, 0x2c1b, 0x2d65, 0xfafb, 0x1, 0x1);
        gbc.writeMem(0x25bd, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd3ee, gbc.sp());
        EXPECT(0x25bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 039C
        gbc.setState(0x16f7, 0xc861, 0xcde0, 0x8517, 0xa0b, 0x4df5, 0x1, 0x1);
        gbc.writeMem(0x16f7, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc861, gbc.sp());
        EXPECT(0x16f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 039E
        gbc.setState(0xe9d2, 0x3bad, 0xe8e0, 0x8048, 0x6e74, 0x627d, 0x1, 0x0);
        gbc.writeMem(0xe9d2, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3bad, gbc.sp());
        EXPECT(0xe9d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9d2));
        EXPECT(0x63, gbc.readMem(0xe9d3));
        // CB 63 039F
        gbc.setState(0xd52a, 0xa3ad, 0x79a0, 0x552f, 0xca8c, 0xe083, 0x0, 0x0);
        gbc.writeMem(0xd52a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa3ad, gbc.sp());
        EXPECT(0xd52c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd52a));
        EXPECT(0x63, gbc.readMem(0xd52b));
        // CB 63 03A0
        gbc.setState(0xd410, 0x3dd7, 0x70d0, 0x2192, 0x6649, 0x5b6, 0x1, 0x1);
        gbc.writeMem(0xd410, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3dd7, gbc.sp());
        EXPECT(0xd412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd410));
        EXPECT(0x63, gbc.readMem(0xd411));
        // CB 63 03A1
        gbc.setState(0x33be, 0x4357, 0xffe0, 0xfdf7, 0xaa85, 0xfd88, 0x0, 0x1);
        gbc.writeMem(0x33be, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4357, gbc.sp());
        EXPECT(0x33c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 03A2
        gbc.setState(0xdb06, 0xc8bb, 0xcf10, 0x2826, 0xa9e, 0x9d1, 0x0, 0x1);
        gbc.writeMem(0xdb06, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc8bb, gbc.sp());
        EXPECT(0xdb08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb06));
        EXPECT(0x63, gbc.readMem(0xdb07));
        // CB 63 03A3
        gbc.setState(0xb619, 0x71e9, 0xe450, 0x589c, 0xc592, 0xde6, 0x0, 0x1);
        gbc.writeMem(0xb619, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x71e9, gbc.sp());
        EXPECT(0xb61b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb619));
        EXPECT(0x63, gbc.readMem(0xb61a));
        // CB 63 03A4
        gbc.setState(0x44b5, 0x920b, 0xc9c0, 0x8fa8, 0xef4c, 0x5b30, 0x1, 0x0);
        gbc.writeMem(0x44b5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x920b, gbc.sp());
        EXPECT(0x44b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 03A5
        gbc.setState(0x8498, 0x851e, 0x8bb0, 0x10f0, 0xb3ed, 0x8920, 0x0, 0x1);
        gbc.writeMem(0x8498, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x851e, gbc.sp());
        EXPECT(0x849a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8498));
        EXPECT(0x63, gbc.readMem(0x8499));
        // CB 63 03A6
        gbc.setState(0x11ab, 0xf3bb, 0x3480, 0xba91, 0xa105, 0x7635, 0x1, 0x1);
        gbc.writeMem(0x11ab, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf3bb, gbc.sp());
        EXPECT(0x11ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 03A7
        gbc.setState(0x41f2, 0x5673, 0x7ec0, 0x7a8d, 0x5e7, 0xb79a, 0x1, 0x0);
        gbc.writeMem(0x41f2, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5673, gbc.sp());
        EXPECT(0x41f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 03A8
        gbc.setState(0xa8, 0x11be, 0x1d30, 0xe376, 0x6f7c, 0x1ca5, 0x0, 0x1);
        gbc.writeMem(0xa8, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x11be, gbc.sp());
        EXPECT(0xaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 03A9
        gbc.setState(0xaa8c, 0xdab9, 0x3ec0, 0x8b56, 0x457b, 0x1655, 0x0, 0x0);
        gbc.writeMem(0xaa8c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xdab9, gbc.sp());
        EXPECT(0xaa8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa8c));
        EXPECT(0x63, gbc.readMem(0xaa8d));
        // CB 63 03AA
        gbc.setState(0x2526, 0x83b, 0x5eb0, 0xabe2, 0x1db5, 0x14f1, 0x0, 0x1);
        gbc.writeMem(0x2526, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x83b, gbc.sp());
        EXPECT(0x2528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 03AB
        gbc.setState(0x5aa, 0x69e1, 0x7480, 0xffcc, 0xf356, 0xfdde, 0x1, 0x1);
        gbc.writeMem(0x5aa, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x69e1, gbc.sp());
        EXPECT(0x5ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 03AC
        gbc.setState(0xa70d, 0x9fe4, 0x3f10, 0x3223, 0x33ab, 0xe8c9, 0x1, 0x1);
        gbc.writeMem(0xa70d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9fe4, gbc.sp());
        EXPECT(0xa70f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa70d));
        EXPECT(0x63, gbc.readMem(0xa70e));
        // CB 63 03AD
        gbc.setState(0x96e9, 0xbec8, 0xfbe0, 0xa693, 0xf74d, 0x1c4d, 0x0, 0x0);
        gbc.writeMem(0x96e9, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xbec8, gbc.sp());
        EXPECT(0x96eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96e9));
        EXPECT(0x63, gbc.readMem(0x96ea));
        // CB 63 03AE
        gbc.setState(0xac76, 0xf89f, 0x3af0, 0xc605, 0x49fd, 0x68f, 0x1, 0x0);
        gbc.writeMem(0xac76, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf89f, gbc.sp());
        EXPECT(0xac78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac76));
        EXPECT(0x63, gbc.readMem(0xac77));
        // CB 63 03AF
        gbc.setState(0xcbd1, 0xba30, 0x6970, 0xc795, 0x9be4, 0x3274, 0x0, 0x1);
        gbc.writeMem(0xcbd1, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xba30, gbc.sp());
        EXPECT(0xcbd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbd1));
        EXPECT(0x63, gbc.readMem(0xcbd2));
        // CB 63 03B0
        gbc.setState(0xe85b, 0xd93f, 0x95f0, 0xde00, 0xe7c0, 0xbf59, 0x0, 0x0);
        gbc.writeMem(0xe85b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd93f, gbc.sp());
        EXPECT(0xe85d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe85b));
        EXPECT(0x63, gbc.readMem(0xe85c));
        // CB 63 03B1
        gbc.setState(0x710c, 0x610d, 0x5270, 0x663c, 0x1023, 0x8755, 0x0, 0x0);
        gbc.writeMem(0x710c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x610d, gbc.sp());
        EXPECT(0x710e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 03B2
        gbc.setState(0xb193, 0x9854, 0xfd70, 0x4aea, 0x3091, 0x7bcf, 0x0, 0x0);
        gbc.writeMem(0xb193, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9854, gbc.sp());
        EXPECT(0xb195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb193));
        EXPECT(0x63, gbc.readMem(0xb194));
        // CB 63 03B3
        gbc.setState(0x758e, 0x3644, 0xf9e0, 0xf6c8, 0xea9a, 0xc64e, 0x0, 0x0);
        gbc.writeMem(0x758e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3644, gbc.sp());
        EXPECT(0x7590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 03B4
        gbc.setState(0x564b, 0x9b88, 0x860, 0x6817, 0x5a5b, 0xe82, 0x0, 0x0);
        gbc.writeMem(0x564b, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9b88, gbc.sp());
        EXPECT(0x564d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 03B5
        gbc.setState(0xa30e, 0x69fd, 0xf610, 0x6e43, 0x195c, 0x1f06, 0x1, 0x0);
        gbc.writeMem(0xa30e, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x69fd, gbc.sp());
        EXPECT(0xa310, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa30e));
        EXPECT(0x63, gbc.readMem(0xa30f));
        // CB 63 03B6
        gbc.setState(0x2679, 0xc973, 0xb620, 0x922f, 0x3faa, 0xd861, 0x1, 0x1);
        gbc.writeMem(0x2679, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc973, gbc.sp());
        EXPECT(0x267b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 03B7
        gbc.setState(0xb0dd, 0xb345, 0x15e0, 0xefd4, 0xec4, 0x494d, 0x0, 0x0);
        gbc.writeMem(0xb0dd, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb345, gbc.sp());
        EXPECT(0xb0df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0dd));
        EXPECT(0x63, gbc.readMem(0xb0de));
        // CB 63 03B8
        gbc.setState(0x43e3, 0x7ec9, 0x41a0, 0xbdb1, 0x17d6, 0xf86c, 0x0, 0x0);
        gbc.writeMem(0x43e3, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7ec9, gbc.sp());
        EXPECT(0x43e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 03B9
        gbc.setState(0xb7be, 0xa3e7, 0xfd40, 0x8d9a, 0x47ea, 0x47ab, 0x1, 0x0);
        gbc.writeMem(0xb7be, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa3e7, gbc.sp());
        EXPECT(0xb7c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7be));
        EXPECT(0x63, gbc.readMem(0xb7bf));
        // CB 63 03BA
        gbc.setState(0x22ef, 0xe3dd, 0x13c0, 0xa4fb, 0x40ac, 0x5d0f, 0x1, 0x0);
        gbc.writeMem(0x22ef, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe3dd, gbc.sp());
        EXPECT(0x22f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 03BB
        gbc.setState(0x1d38, 0x6d4b, 0xba0, 0xef6b, 0xde44, 0xa9db, 0x1, 0x0);
        gbc.writeMem(0x1d38, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6d4b, gbc.sp());
        EXPECT(0x1d3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 03BC
        gbc.setState(0x91f8, 0xa270, 0xa70, 0x5b6, 0xe649, 0x358f, 0x1, 0x1);
        gbc.writeMem(0x91f8, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa270, gbc.sp());
        EXPECT(0x91fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91f8));
        EXPECT(0x63, gbc.readMem(0x91f9));
        // CB 63 03BD
        gbc.setState(0x75fd, 0x803f, 0xada0, 0xae43, 0xd494, 0x2c5, 0x1, 0x0);
        gbc.writeMem(0x75fd, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x803f, gbc.sp());
        EXPECT(0x75ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 03BE
        gbc.setState(0x27f2, 0x2e31, 0xa7d0, 0x2cfc, 0x5f28, 0x795c, 0x0, 0x0);
        gbc.writeMem(0x27f2, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2e31, gbc.sp());
        EXPECT(0x27f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 03BF
        gbc.setState(0x4183, 0x38d4, 0xd160, 0x9dbf, 0xaa69, 0xa373, 0x0, 0x0);
        gbc.writeMem(0x4183, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x38d4, gbc.sp());
        EXPECT(0x4185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 03C0
        gbc.setState(0xcf35, 0xb900, 0xea60, 0x5bd3, 0xc497, 0x2f88, 0x0, 0x0);
        gbc.writeMem(0xcf35, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb900, gbc.sp());
        EXPECT(0xcf37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf35));
        EXPECT(0x63, gbc.readMem(0xcf36));
        // CB 63 03C1
        gbc.setState(0xa52a, 0xb5e2, 0xa2a0, 0xd3d, 0x7311, 0x40bb, 0x0, 0x1);
        gbc.writeMem(0xa52a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb5e2, gbc.sp());
        EXPECT(0xa52c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa52a));
        EXPECT(0x63, gbc.readMem(0xa52b));
        // CB 63 03C2
        gbc.setState(0x3142, 0x9ed6, 0xe410, 0xc6b0, 0x38a8, 0x5c35, 0x1, 0x0);
        gbc.writeMem(0x3142, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9ed6, gbc.sp());
        EXPECT(0x3144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 03C3
        gbc.setState(0x824, 0xbe28, 0xb320, 0xae8d, 0xb0e, 0x89d0, 0x1, 0x1);
        gbc.writeMem(0x824, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbe28, gbc.sp());
        EXPECT(0x826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 03C4
        gbc.setState(0xb27f, 0xed85, 0x160, 0x1ad6, 0x6e8b, 0xedbe, 0x1, 0x0);
        gbc.writeMem(0xb27f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xed85, gbc.sp());
        EXPECT(0xb281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb27f));
        EXPECT(0x63, gbc.readMem(0xb280));
        // CB 63 03C5
        gbc.setState(0x1a35, 0xe140, 0x3800, 0xa00d, 0xff55, 0x5269, 0x0, 0x0);
        gbc.writeMem(0x1a35, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe140, gbc.sp());
        EXPECT(0x1a37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 03C6
        gbc.setState(0xbfa8, 0xfa03, 0xa880, 0xe3f5, 0x8e, 0x2647, 0x0, 0x1);
        gbc.writeMem(0xbfa8, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xfa03, gbc.sp());
        EXPECT(0xbfaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfa8));
        EXPECT(0x63, gbc.readMem(0xbfa9));
        // CB 63 03C7
        gbc.setState(0xaab5, 0x5fa0, 0xc40, 0x10e8, 0x8f8f, 0xdd17, 0x0, 0x0);
        gbc.writeMem(0xaab5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5fa0, gbc.sp());
        EXPECT(0xaab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaab5));
        EXPECT(0x63, gbc.readMem(0xaab6));
        // CB 63 03C8
        gbc.setState(0xcfd5, 0x97f, 0xacf0, 0x76dd, 0xd3e0, 0xcab4, 0x1, 0x0);
        gbc.writeMem(0xcfd5, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x97f, gbc.sp());
        EXPECT(0xcfd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfd5));
        EXPECT(0x63, gbc.readMem(0xcfd6));
        // CB 63 03C9
        gbc.setState(0xb131, 0xc65b, 0xe590, 0xb13a, 0x5e58, 0x1c5a, 0x1, 0x0);
        gbc.writeMem(0xb131, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc65b, gbc.sp());
        EXPECT(0xb133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb131));
        EXPECT(0x63, gbc.readMem(0xb132));
        // CB 63 03CA
        gbc.setState(0x5d30, 0x9f35, 0xa140, 0xb997, 0xd6f7, 0xbbb1, 0x0, 0x1);
        gbc.writeMem(0x5d30, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9f35, gbc.sp());
        EXPECT(0x5d32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 03CB
        gbc.setState(0xb926, 0x706d, 0x8aa0, 0x4a81, 0x99e8, 0x9b03, 0x0, 0x1);
        gbc.writeMem(0xb926, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x706d, gbc.sp());
        EXPECT(0xb928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb926));
        EXPECT(0x63, gbc.readMem(0xb927));
        // CB 63 03CC
        gbc.setState(0xae87, 0x9e1e, 0xc860, 0x516e, 0xdb36, 0xa016, 0x0, 0x0);
        gbc.writeMem(0xae87, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9e1e, gbc.sp());
        EXPECT(0xae89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae87));
        EXPECT(0x63, gbc.readMem(0xae88));
        // CB 63 03CD
        gbc.setState(0x8f90, 0xe2b8, 0xe0f0, 0xa8c7, 0xa61a, 0x8c80, 0x0, 0x0);
        gbc.writeMem(0x8f90, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe2b8, gbc.sp());
        EXPECT(0x8f92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f90));
        EXPECT(0x63, gbc.readMem(0x8f91));
        // CB 63 03CE
        gbc.setState(0x9a19, 0x49a3, 0x4ca0, 0xc87d, 0xf1b5, 0xbf9b, 0x1, 0x1);
        gbc.writeMem(0x9a19, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x49a3, gbc.sp());
        EXPECT(0x9a1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a19));
        EXPECT(0x63, gbc.readMem(0x9a1a));
        // CB 63 03CF
        gbc.setState(0xb8f, 0x2000, 0x84e0, 0x846f, 0x11f9, 0xdf96, 0x1, 0x0);
        gbc.writeMem(0xb8f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2000, gbc.sp());
        EXPECT(0xb91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 03D0
        gbc.setState(0xc326, 0xecfe, 0x3c80, 0x2d4c, 0xe217, 0x9a18, 0x1, 0x0);
        gbc.writeMem(0xc326, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xecfe, gbc.sp());
        EXPECT(0xc328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc326));
        EXPECT(0x63, gbc.readMem(0xc327));
        // CB 63 03D1
        gbc.setState(0x1736, 0x38c2, 0x9d20, 0xc222, 0xa1e4, 0x80df, 0x0, 0x0);
        gbc.writeMem(0x1736, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x38c2, gbc.sp());
        EXPECT(0x1738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 03D2
        gbc.setState(0xd1d6, 0x87d6, 0xf10, 0xc3af, 0xeace, 0x2d20, 0x0, 0x1);
        gbc.writeMem(0xd1d6, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x87d6, gbc.sp());
        EXPECT(0xd1d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1d6));
        EXPECT(0x63, gbc.readMem(0xd1d7));
        // CB 63 03D3
        gbc.setState(0x6a1c, 0xcc6c, 0x50c0, 0xc0c1, 0xfe51, 0x5fa2, 0x1, 0x1);
        gbc.writeMem(0x6a1c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xcc6c, gbc.sp());
        EXPECT(0x6a1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 03D4
        gbc.setState(0x6fc, 0x46b1, 0xb60, 0xa5c, 0x7e9c, 0x493c, 0x0, 0x0);
        gbc.writeMem(0x6fc, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x46b1, gbc.sp());
        EXPECT(0x6fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 03D5
        gbc.setState(0x7bb4, 0x7b00, 0xaba0, 0xe7ce, 0x5fd, 0x2f54, 0x0, 0x0);
        gbc.writeMem(0x7bb4, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7b00, gbc.sp());
        EXPECT(0x7bb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 03D6
        gbc.setState(0x67c3, 0xb5de, 0xecd0, 0x46ff, 0x132c, 0xc73d, 0x0, 0x1);
        gbc.writeMem(0x67c3, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb5de, gbc.sp());
        EXPECT(0x67c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 03D7
        gbc.setState(0x2a04, 0x2a7b, 0x3c50, 0xeebf, 0xa9ec, 0xc62e, 0x0, 0x1);
        gbc.writeMem(0x2a04, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2a7b, gbc.sp());
        EXPECT(0x2a06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 03D8
        gbc.setState(0x829c, 0xef77, 0xba80, 0xbab3, 0x8156, 0xb371, 0x0, 0x1);
        gbc.writeMem(0x829c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xef77, gbc.sp());
        EXPECT(0x829e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x829c));
        EXPECT(0x63, gbc.readMem(0x829d));
        // CB 63 03D9
        gbc.setState(0x700a, 0xa758, 0x9c30, 0x2cd3, 0x68b5, 0x575f, 0x0, 0x1);
        gbc.writeMem(0x700a, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa758, gbc.sp());
        EXPECT(0x700c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 03DA
        gbc.setState(0xc5c0, 0xf927, 0xc5f0, 0x7eca, 0xedeb, 0xd707, 0x0, 0x0);
        gbc.writeMem(0xc5c0, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf927, gbc.sp());
        EXPECT(0xc5c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5c0));
        EXPECT(0x63, gbc.readMem(0xc5c1));
        // CB 63 03DB
        gbc.setState(0xd0ed, 0xc197, 0xb740, 0xf0b2, 0xe32f, 0xfe1, 0x0, 0x1);
        gbc.writeMem(0xd0ed, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc197, gbc.sp());
        EXPECT(0xd0ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0ed));
        EXPECT(0x63, gbc.readMem(0xd0ee));
        // CB 63 03DC
        gbc.setState(0x56c1, 0x94a1, 0x31a0, 0x56f2, 0x6986, 0x2da5, 0x0, 0x1);
        gbc.writeMem(0x56c1, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x94a1, gbc.sp());
        EXPECT(0x56c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 03DE
        gbc.setState(0x655d, 0x93e9, 0xf9c0, 0x3a07, 0xcf8, 0xf31f, 0x1, 0x1);
        gbc.writeMem(0x655d, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x93e9, gbc.sp());
        EXPECT(0x655f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 63 03DF
        gbc.setState(0x8da3, 0xe6b8, 0xf1e0, 0xcf0d, 0x24b1, 0xa34a, 0x0, 0x0);
        gbc.writeMem(0x8da3, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe6b8, gbc.sp());
        EXPECT(0x8da5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8da3));
        EXPECT(0x63, gbc.readMem(0x8da4));
        // CB 63 03E0
        gbc.setState(0x29fb, 0x5f98, 0xc390, 0xb4bf, 0x4915, 0x6016, 0x1, 0x0);
        gbc.writeMem(0x29fb, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5f98, gbc.sp());
        EXPECT(0x29fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 03E2
        gbc.setState(0xdfe0, 0x859b, 0x4dd0, 0xc5c3, 0x42f9, 0xeccc, 0x1, 0x1);
        gbc.writeMem(0xdfe0, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x859b, gbc.sp());
        EXPECT(0xdfe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfe0));
        EXPECT(0x63, gbc.readMem(0xdfe1));
        // CB 63 03E3
        gbc.setState(0x749f, 0x4fa2, 0xc2f0, 0x6ae6, 0x83a1, 0xad85, 0x0, 0x0);
        gbc.writeMem(0x749f, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4fa2, gbc.sp());
        EXPECT(0x74a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 03E4
        gbc.setState(0x684c, 0x6b43, 0xcf10, 0x1637, 0xafb5, 0xafef, 0x0, 0x0);
        gbc.writeMem(0x684c, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6b43, gbc.sp());
        EXPECT(0x684e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 63 03E5
        gbc.setState(0xea60, 0xb6a2, 0x3090, 0x2b08, 0x88f3, 0x481b, 0x1, 0x0);
        gbc.writeMem(0xea60, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb6a2, gbc.sp());
        EXPECT(0xea62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea60));
        EXPECT(0x63, gbc.readMem(0xea61));
        // CB 63 03E6
        gbc.setState(0xed06, 0x6293, 0x7c40, 0x47f2, 0x2f11, 0x323b, 0x1, 0x0);
        gbc.writeMem(0xed06, { 0xcb, 0x63 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6293, gbc.sp());
        EXPECT(0xed08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed06));
        EXPECT(0x63, gbc.readMem(0xed07));
    }
