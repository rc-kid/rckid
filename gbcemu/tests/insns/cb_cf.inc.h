    TEST(gbcemu, opcode_cb_cf) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB CF 0000
        gbc.setState(0x717, 0x5b02, 0x6f10, 0xcbc2, 0x85b9, 0x8d02, 0x1, 0x0);
        gbc.writeMem(0x717, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x5b02);
        EXPECT(gbc.pc(), 0x719);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0001
        gbc.setState(0x7ba5, 0x3239, 0x9640, 0x1b10, 0x993e, 0x5134, 0x0, 0x1);
        gbc.writeMem(0x7ba5, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3239);
        EXPECT(gbc.pc(), 0x7ba7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0002
        gbc.setState(0x7776, 0x8ce2, 0xfdf0, 0x3164, 0x944f, 0x3af4, 0x1, 0x0);
        gbc.writeMem(0x7776, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x8ce2);
        EXPECT(gbc.pc(), 0x7778);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0003
        gbc.setState(0x736, 0x70f2, 0xf720, 0x29eb, 0x94ff, 0xd9f0, 0x0, 0x1);
        gbc.writeMem(0x736, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x70f2);
        EXPECT(gbc.pc(), 0x738);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0004
        gbc.setState(0xb604, 0x58, 0xaeb0, 0xb6da, 0x15f6, 0x6be5, 0x0, 0x1);
        gbc.writeMem(0xb604, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x58);
        EXPECT(gbc.pc(), 0xb606);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb604), 0xcb);
        EXPECT(gbc.readMem(0xb605), 0xcf);
        // CB CF 0005
        gbc.setState(0x831a, 0x680f, 0xe740, 0x44e2, 0xc431, 0x31df, 0x0, 0x1);
        gbc.writeMem(0x831a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x680f);
        EXPECT(gbc.pc(), 0x831c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x831a), 0xcb);
        EXPECT(gbc.readMem(0x831b), 0xcf);
        // CB CF 0006
        gbc.setState(0x84bc, 0x384a, 0xd2b0, 0x179e, 0x950b, 0x2911, 0x0, 0x0);
        gbc.writeMem(0x84bc, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x384a);
        EXPECT(gbc.pc(), 0x84be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84bc), 0xcb);
        EXPECT(gbc.readMem(0x84bd), 0xcf);
        // CB CF 0007
        gbc.setState(0xbd17, 0x7beb, 0xc670, 0xcde5, 0x80b, 0x7cdd, 0x1, 0x0);
        gbc.writeMem(0xbd17, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x7beb);
        EXPECT(gbc.pc(), 0xbd19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd17), 0xcb);
        EXPECT(gbc.readMem(0xbd18), 0xcf);
        // CB CF 0008
        gbc.setState(0x38e, 0xa684, 0xade0, 0x8553, 0xb01c, 0x3449, 0x0, 0x1);
        gbc.writeMem(0x38e, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa684);
        EXPECT(gbc.pc(), 0x390);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0009
        gbc.setState(0xb55a, 0x622a, 0xe280, 0xc92f, 0xb1e1, 0x1db9, 0x0, 0x1);
        gbc.writeMem(0xb55a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x622a);
        EXPECT(gbc.pc(), 0xb55c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb55a), 0xcb);
        EXPECT(gbc.readMem(0xb55b), 0xcf);
        // CB CF 000A
        gbc.setState(0x2724, 0xd241, 0xf500, 0x806, 0xc948, 0x4dfe, 0x0, 0x0);
        gbc.writeMem(0x2724, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xd241);
        EXPECT(gbc.pc(), 0x2726);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 000B
        gbc.setState(0x5116, 0xadc4, 0x1b40, 0x86bf, 0xb7cf, 0x28b8, 0x0, 0x0);
        gbc.writeMem(0x5116, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xadc4);
        EXPECT(gbc.pc(), 0x5118);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 000C
        gbc.setState(0x9e03, 0xc2a, 0xb610, 0x49e3, 0xab24, 0xcbf9, 0x1, 0x0);
        gbc.writeMem(0x9e03, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc2a);
        EXPECT(gbc.pc(), 0x9e05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e03), 0xcb);
        EXPECT(gbc.readMem(0x9e04), 0xcf);
        // CB CF 000D
        gbc.setState(0x5657, 0x8a48, 0x1c90, 0xcbf9, 0x97dc, 0xe1fa, 0x0, 0x1);
        gbc.writeMem(0x5657, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x8a48);
        EXPECT(gbc.pc(), 0x5659);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 000E
        gbc.setState(0x6c58, 0xf79d, 0x58a0, 0xc452, 0xae1b, 0x8474, 0x1, 0x1);
        gbc.writeMem(0x6c58, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf79d);
        EXPECT(gbc.pc(), 0x6c5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 000F
        gbc.setState(0x616b, 0x2a02, 0xf650, 0xa6f9, 0x8895, 0x12b3, 0x0, 0x1);
        gbc.writeMem(0x616b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x2a02);
        EXPECT(gbc.pc(), 0x616d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0011
        gbc.setState(0x437c, 0x50a2, 0x4b30, 0xf4d1, 0xef63, 0x8119, 0x0, 0x1);
        gbc.writeMem(0x437c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x50a2);
        EXPECT(gbc.pc(), 0x437e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0012
        gbc.setState(0x993f, 0xc0d9, 0x2680, 0x5fdb, 0x46cf, 0xe597, 0x0, 0x1);
        gbc.writeMem(0x993f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xc0d9);
        EXPECT(gbc.pc(), 0x9941);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x993f), 0xcb);
        EXPECT(gbc.readMem(0x9940), 0xcf);
        // CB CF 0013
        gbc.setState(0xaf20, 0xd791, 0x9b20, 0xb2ba, 0xbd4e, 0xc96b, 0x0, 0x1);
        gbc.writeMem(0xaf20, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xd791);
        EXPECT(gbc.pc(), 0xaf22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf20), 0xcb);
        EXPECT(gbc.readMem(0xaf21), 0xcf);
        // CB CF 0014
        gbc.setState(0x2cee, 0xd3bb, 0x6be0, 0x6715, 0x1205, 0xb3a4, 0x1, 0x0);
        gbc.writeMem(0x2cee, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xd3bb);
        EXPECT(gbc.pc(), 0x2cf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0015
        gbc.setState(0x1072, 0x906f, 0xa860, 0x4350, 0xfa45, 0x9ae8, 0x0, 0x1);
        gbc.writeMem(0x1072, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x906f);
        EXPECT(gbc.pc(), 0x1074);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0016
        gbc.setState(0xe3ab, 0xc33b, 0x63f0, 0x2454, 0x3bdd, 0xd911, 0x1, 0x0);
        gbc.writeMem(0xe3ab, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xc33b);
        EXPECT(gbc.pc(), 0xe3ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3ab), 0xcb);
        EXPECT(gbc.readMem(0xe3ac), 0xcf);
        // CB CF 0017
        gbc.setState(0x7ff6, 0xed46, 0x1400, 0xa85e, 0xac57, 0x3e1c, 0x0, 0x1);
        gbc.writeMem(0x7ff6, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xed46);
        EXPECT(gbc.pc(), 0x7ff8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0018
        gbc.setState(0x212c, 0xa3d2, 0xccf0, 0xb71e, 0x33a3, 0xe66b, 0x1, 0x0);
        gbc.writeMem(0x212c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xa3d2);
        EXPECT(gbc.pc(), 0x212e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0019
        gbc.setState(0xe813, 0x7d07, 0x6b00, 0xa81c, 0x2b59, 0xc9a5, 0x0, 0x1);
        gbc.writeMem(0xe813, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x7d07);
        EXPECT(gbc.pc(), 0xe815);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe813), 0xcb);
        EXPECT(gbc.readMem(0xe814), 0xcf);
        // CB CF 001A
        gbc.setState(0x868c, 0xe871, 0xabe0, 0xe6e9, 0x54f4, 0x136a, 0x0, 0x0);
        gbc.writeMem(0x868c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe871);
        EXPECT(gbc.pc(), 0x868e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x868c), 0xcb);
        EXPECT(gbc.readMem(0x868d), 0xcf);
        // CB CF 001B
        gbc.setState(0x83ff, 0x578, 0xe90, 0x186d, 0xd22d, 0xa420, 0x0, 0x1);
        gbc.writeMem(0x83ff, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x578);
        EXPECT(gbc.pc(), 0x8401);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83ff), 0xcb);
        EXPECT(gbc.readMem(0x8400), 0xcf);
        // CB CF 001C
        gbc.setState(0xbbdd, 0xb45b, 0x5480, 0x723, 0xd43c, 0x224d, 0x1, 0x1);
        gbc.writeMem(0xbbdd, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xb45b);
        EXPECT(gbc.pc(), 0xbbdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbdd), 0xcb);
        EXPECT(gbc.readMem(0xbbde), 0xcf);
        // CB CF 001D
        gbc.setState(0x1a92, 0x4b43, 0x6450, 0x8c05, 0x661, 0x167c, 0x1, 0x1);
        gbc.writeMem(0x1a92, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x4b43);
        EXPECT(gbc.pc(), 0x1a94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 001E
        gbc.setState(0x8e6b, 0x1499, 0x1b60, 0x164b, 0xfb66, 0xa355, 0x0, 0x1);
        gbc.writeMem(0x8e6b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x1499);
        EXPECT(gbc.pc(), 0x8e6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e6b), 0xcb);
        EXPECT(gbc.readMem(0x8e6c), 0xcf);
        // CB CF 001F
        gbc.setState(0x27e6, 0x65dc, 0x9230, 0xd4a1, 0x608e, 0xf5f7, 0x1, 0x0);
        gbc.writeMem(0x27e6, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x65dc);
        EXPECT(gbc.pc(), 0x27e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0020
        gbc.setState(0x70ad, 0x12c6, 0x1bc0, 0x81f8, 0x70b5, 0x514c, 0x1, 0x0);
        gbc.writeMem(0x70ad, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x12c6);
        EXPECT(gbc.pc(), 0x70af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0021
        gbc.setState(0xa411, 0x511b, 0xfbd0, 0x25f5, 0xd25e, 0x791a, 0x0, 0x0);
        gbc.writeMem(0xa411, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x511b);
        EXPECT(gbc.pc(), 0xa413);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa411), 0xcb);
        EXPECT(gbc.readMem(0xa412), 0xcf);
        // CB CF 0022
        gbc.setState(0xd154, 0x613c, 0x43b0, 0xce8b, 0x1b81, 0xdf2a, 0x1, 0x0);
        gbc.writeMem(0xd154, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x613c);
        EXPECT(gbc.pc(), 0xd156);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd154), 0xcb);
        EXPECT(gbc.readMem(0xd155), 0xcf);
        // CB CF 0023
        gbc.setState(0x1a1f, 0xca86, 0x99c0, 0x3fe1, 0xf7e9, 0x31a1, 0x0, 0x1);
        gbc.writeMem(0x1a1f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xca86);
        EXPECT(gbc.pc(), 0x1a21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0024
        gbc.setState(0xb2a1, 0x8724, 0x9620, 0xfd31, 0x8690, 0x44e6, 0x0, 0x0);
        gbc.writeMem(0xb2a1, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8724);
        EXPECT(gbc.pc(), 0xb2a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2a1), 0xcb);
        EXPECT(gbc.readMem(0xb2a2), 0xcf);
        // CB CF 0025
        gbc.setState(0x2a9a, 0x3356, 0x2050, 0x4f82, 0x8c6e, 0x2576, 0x0, 0x0);
        gbc.writeMem(0x2a9a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x3356);
        EXPECT(gbc.pc(), 0x2a9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0026
        gbc.setState(0x99b0, 0x4a59, 0xd40, 0x9ea8, 0x75ad, 0x962e, 0x1, 0x1);
        gbc.writeMem(0x99b0, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x4a59);
        EXPECT(gbc.pc(), 0x99b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99b0), 0xcb);
        EXPECT(gbc.readMem(0x99b1), 0xcf);
        // CB CF 0027
        gbc.setState(0xb978, 0x8b38, 0xf40, 0xf2d1, 0x61a9, 0x327b, 0x0, 0x0);
        gbc.writeMem(0xb978, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x8b38);
        EXPECT(gbc.pc(), 0xb97a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb978), 0xcb);
        EXPECT(gbc.readMem(0xb979), 0xcf);
        // CB CF 0028
        gbc.setState(0xabe7, 0xa577, 0x64e0, 0xa2ad, 0xa66e, 0xd8db, 0x0, 0x1);
        gbc.writeMem(0xabe7, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xa577);
        EXPECT(gbc.pc(), 0xabe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabe7), 0xcb);
        EXPECT(gbc.readMem(0xabe8), 0xcf);
        // CB CF 0029
        gbc.setState(0x23fc, 0x898c, 0x6560, 0x763e, 0xce82, 0x7d1, 0x0, 0x1);
        gbc.writeMem(0x23fc, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x898c);
        EXPECT(gbc.pc(), 0x23fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 002A
        gbc.setState(0x54d9, 0x56ed, 0x5880, 0xa0fc, 0x4f4f, 0x76e0, 0x1, 0x1);
        gbc.writeMem(0x54d9, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x56ed);
        EXPECT(gbc.pc(), 0x54db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 002B
        gbc.setState(0xaaf0, 0x344d, 0xbef0, 0xa045, 0xa61f, 0x6934, 0x0, 0x1);
        gbc.writeMem(0xaaf0, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x344d);
        EXPECT(gbc.pc(), 0xaaf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaf0), 0xcb);
        EXPECT(gbc.readMem(0xaaf1), 0xcf);
        // CB CF 002C
        gbc.setState(0x5d1f, 0xbb71, 0xbff0, 0x9cc4, 0x431f, 0x325d, 0x0, 0x1);
        gbc.writeMem(0x5d1f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xbb71);
        EXPECT(gbc.pc(), 0x5d21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 002D
        gbc.setState(0x54a0, 0x1f22, 0xd500, 0x8a50, 0xad7d, 0x84e8, 0x0, 0x1);
        gbc.writeMem(0x54a0, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x1f22);
        EXPECT(gbc.pc(), 0x54a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 002E
        gbc.setState(0xca82, 0xfa52, 0x6d90, 0x530f, 0x9530, 0xd848, 0x1, 0x0);
        gbc.writeMem(0xca82, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xfa52);
        EXPECT(gbc.pc(), 0xca84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca82), 0xcb);
        EXPECT(gbc.readMem(0xca83), 0xcf);
        // CB CF 002F
        gbc.setState(0x762c, 0xeb53, 0xa220, 0x1a7b, 0x6f23, 0x6a1b, 0x0, 0x1);
        gbc.writeMem(0x762c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xeb53);
        EXPECT(gbc.pc(), 0x762e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0030
        gbc.setState(0xc89, 0xa423, 0xd2d0, 0x972d, 0x898c, 0x9e6b, 0x1, 0x0);
        gbc.writeMem(0xc89, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xa423);
        EXPECT(gbc.pc(), 0xc8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0031
        gbc.setState(0x9359, 0x82e4, 0x6680, 0xbb2d, 0xb50, 0xebad, 0x0, 0x0);
        gbc.writeMem(0x9359, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x82e4);
        EXPECT(gbc.pc(), 0x935b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9359), 0xcb);
        EXPECT(gbc.readMem(0x935a), 0xcf);
        // CB CF 0032
        gbc.setState(0xc54d, 0x9f7b, 0x77f0, 0xd389, 0x416c, 0xb915, 0x0, 0x0);
        gbc.writeMem(0xc54d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x9f7b);
        EXPECT(gbc.pc(), 0xc54f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc54d), 0xcb);
        EXPECT(gbc.readMem(0xc54e), 0xcf);
        // CB CF 0033
        gbc.setState(0xa884, 0x2311, 0x3650, 0x2193, 0x109e, 0x4ddc, 0x0, 0x0);
        gbc.writeMem(0xa884, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x2311);
        EXPECT(gbc.pc(), 0xa886);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa884), 0xcb);
        EXPECT(gbc.readMem(0xa885), 0xcf);
        // CB CF 0035
        gbc.setState(0x3bc0, 0xbd18, 0x9590, 0xbf20, 0xada8, 0xdc9c, 0x1, 0x1);
        gbc.writeMem(0x3bc0, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xbd18);
        EXPECT(gbc.pc(), 0x3bc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0036
        gbc.setState(0x2b58, 0x9ed4, 0xea00, 0x2073, 0xd167, 0xadca, 0x1, 0x0);
        gbc.writeMem(0x2b58, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9ed4);
        EXPECT(gbc.pc(), 0x2b5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0037
        gbc.setState(0xe76f, 0x6068, 0xad60, 0x454c, 0x9f39, 0x2f16, 0x1, 0x1);
        gbc.writeMem(0xe76f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x6068);
        EXPECT(gbc.pc(), 0xe771);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe76f), 0xcb);
        EXPECT(gbc.readMem(0xe770), 0xcf);
        // CB CF 0038
        gbc.setState(0x9755, 0xf23a, 0x3840, 0x3d5e, 0x49d2, 0xff72, 0x1, 0x0);
        gbc.writeMem(0x9755, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xf23a);
        EXPECT(gbc.pc(), 0x9757);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9755), 0xcb);
        EXPECT(gbc.readMem(0x9756), 0xcf);
        // CB CF 0039
        gbc.setState(0xcd35, 0xb0c5, 0xcd00, 0xcb71, 0xbbb2, 0x3b52, 0x1, 0x1);
        gbc.writeMem(0xcd35, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xb0c5);
        EXPECT(gbc.pc(), 0xcd37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd35), 0xcb);
        EXPECT(gbc.readMem(0xcd36), 0xcf);
        // CB CF 003A
        gbc.setState(0x69a6, 0xd5a3, 0x4f60, 0xc59a, 0x6dc9, 0x66c4, 0x1, 0x0);
        gbc.writeMem(0x69a6, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xd5a3);
        EXPECT(gbc.pc(), 0x69a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 003B
        gbc.setState(0x3138, 0x37b6, 0xda90, 0xa172, 0x7e9b, 0x49aa, 0x1, 0x1);
        gbc.writeMem(0x3138, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x37b6);
        EXPECT(gbc.pc(), 0x313a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 003C
        gbc.setState(0xd6a2, 0x791a, 0xc0a0, 0x809a, 0xf8ba, 0x34c1, 0x0, 0x1);
        gbc.writeMem(0xd6a2, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x791a);
        EXPECT(gbc.pc(), 0xd6a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6a2), 0xcb);
        EXPECT(gbc.readMem(0xd6a3), 0xcf);
        // CB CF 003D
        gbc.setState(0xb21b, 0x6ce3, 0x85d0, 0xfcda, 0x5864, 0xe26, 0x0, 0x0);
        gbc.writeMem(0xb21b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x6ce3);
        EXPECT(gbc.pc(), 0xb21d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb21b), 0xcb);
        EXPECT(gbc.readMem(0xb21c), 0xcf);
        // CB CF 003E
        gbc.setState(0xdae8, 0xc271, 0x3cc0, 0xb207, 0x2a92, 0x7fbe, 0x1, 0x1);
        gbc.writeMem(0xdae8, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xc271);
        EXPECT(gbc.pc(), 0xdaea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdae8), 0xcb);
        EXPECT(gbc.readMem(0xdae9), 0xcf);
        // CB CF 003F
        gbc.setState(0x508e, 0x3a49, 0xc2b0, 0xd73, 0xab67, 0x5a45, 0x1, 0x1);
        gbc.writeMem(0x508e, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x3a49);
        EXPECT(gbc.pc(), 0x5090);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0040
        gbc.setState(0x5607, 0x910e, 0x7390, 0xfa91, 0xab5f, 0x2f42, 0x0, 0x0);
        gbc.writeMem(0x5607, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x910e);
        EXPECT(gbc.pc(), 0x5609);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0041
        gbc.setState(0x3e48, 0x3e5f, 0xf8f0, 0xbe1e, 0x4b0d, 0x6e71, 0x1, 0x0);
        gbc.writeMem(0x3e48, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x3e5f);
        EXPECT(gbc.pc(), 0x3e4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0042
        gbc.setState(0xbe60, 0x59c7, 0x2e50, 0xb442, 0x386b, 0xb60c, 0x0, 0x1);
        gbc.writeMem(0xbe60, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x59c7);
        EXPECT(gbc.pc(), 0xbe62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe60), 0xcb);
        EXPECT(gbc.readMem(0xbe61), 0xcf);
        // CB CF 0043
        gbc.setState(0x4354, 0xbf6a, 0x4970, 0xb30b, 0x11f6, 0xbd24, 0x0, 0x1);
        gbc.writeMem(0x4354, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xbf6a);
        EXPECT(gbc.pc(), 0x4356);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0044
        gbc.setState(0xe8bb, 0xef32, 0xa640, 0x532d, 0x6275, 0xaf7d, 0x1, 0x0);
        gbc.writeMem(0xe8bb, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xef32);
        EXPECT(gbc.pc(), 0xe8bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8bb), 0xcb);
        EXPECT(gbc.readMem(0xe8bc), 0xcf);
        // CB CF 0045
        gbc.setState(0x13b3, 0x2596, 0xfa80, 0xd47c, 0xa3c6, 0x6cc2, 0x0, 0x0);
        gbc.writeMem(0x13b3, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x2596);
        EXPECT(gbc.pc(), 0x13b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0046
        gbc.setState(0x1b72, 0x76d0, 0x8460, 0xb373, 0xe138, 0xd4d7, 0x0, 0x0);
        gbc.writeMem(0x1b72, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x76d0);
        EXPECT(gbc.pc(), 0x1b74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0047
        gbc.setState(0x79dd, 0xf04e, 0xcd10, 0x4083, 0xb42c, 0x86b4, 0x1, 0x0);
        gbc.writeMem(0x79dd, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf04e);
        EXPECT(gbc.pc(), 0x79df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0048
        gbc.setState(0xee25, 0x9ba1, 0x13e0, 0x4fdb, 0x5d32, 0x3c83, 0x1, 0x0);
        gbc.writeMem(0xee25, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x9ba1);
        EXPECT(gbc.pc(), 0xee27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee25), 0xcb);
        EXPECT(gbc.readMem(0xee26), 0xcf);
        // CB CF 0049
        gbc.setState(0x91bd, 0xfbf2, 0x1270, 0xf9bc, 0x77f0, 0x6cbb, 0x0, 0x1);
        gbc.writeMem(0x91bd, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xfbf2);
        EXPECT(gbc.pc(), 0x91bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91bd), 0xcb);
        EXPECT(gbc.readMem(0x91be), 0xcf);
        // CB CF 004A
        gbc.setState(0xdd05, 0xd0ae, 0x7210, 0x1fa3, 0x5572, 0x56c9, 0x0, 0x1);
        gbc.writeMem(0xdd05, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xd0ae);
        EXPECT(gbc.pc(), 0xdd07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd05), 0xcb);
        EXPECT(gbc.readMem(0xdd06), 0xcf);
        // CB CF 004B
        gbc.setState(0x9b84, 0x977c, 0x1520, 0x886f, 0xc0e0, 0x5ebc, 0x1, 0x1);
        gbc.writeMem(0x9b84, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x977c);
        EXPECT(gbc.pc(), 0x9b86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b84), 0xcb);
        EXPECT(gbc.readMem(0x9b85), 0xcf);
        // CB CF 004C
        gbc.setState(0x954c, 0x76be, 0xb290, 0xd829, 0x517d, 0x4c17, 0x0, 0x0);
        gbc.writeMem(0x954c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x76be);
        EXPECT(gbc.pc(), 0x954e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x954c), 0xcb);
        EXPECT(gbc.readMem(0x954d), 0xcf);
        // CB CF 004D
        gbc.setState(0x1fbc, 0xc505, 0xfd50, 0xd83f, 0xb1db, 0xab6d, 0x1, 0x1);
        gbc.writeMem(0x1fbc, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xc505);
        EXPECT(gbc.pc(), 0x1fbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 004E
        gbc.setState(0x920, 0x2077, 0xf8c0, 0x1b41, 0x179, 0x71a6, 0x1, 0x0);
        gbc.writeMem(0x920, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x2077);
        EXPECT(gbc.pc(), 0x922);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 004F
        gbc.setState(0xe980, 0x1fd6, 0x8150, 0x6891, 0xa987, 0xf506, 0x0, 0x0);
        gbc.writeMem(0xe980, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x1fd6);
        EXPECT(gbc.pc(), 0xe982);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe980), 0xcb);
        EXPECT(gbc.readMem(0xe981), 0xcf);
        // CB CF 0050
        gbc.setState(0x4ab3, 0xd90b, 0x73a0, 0xcbd2, 0x57a1, 0xde0d, 0x1, 0x0);
        gbc.writeMem(0x4ab3, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xd90b);
        EXPECT(gbc.pc(), 0x4ab5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0051
        gbc.setState(0xcc9f, 0xbae5, 0x2920, 0x21ee, 0xb5c, 0xacdf, 0x1, 0x1);
        gbc.writeMem(0xcc9f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xbae5);
        EXPECT(gbc.pc(), 0xcca1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc9f), 0xcb);
        EXPECT(gbc.readMem(0xcca0), 0xcf);
        // CB CF 0053
        gbc.setState(0xec2, 0x2cc0, 0xfce0, 0x4d5b, 0xf4e1, 0xb7ac, 0x1, 0x1);
        gbc.writeMem(0xec2, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x2cc0);
        EXPECT(gbc.pc(), 0xec4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0054
        gbc.setState(0xa033, 0x1488, 0x9e70, 0xb38d, 0xadf6, 0x279b, 0x1, 0x0);
        gbc.writeMem(0xa033, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x1488);
        EXPECT(gbc.pc(), 0xa035);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa033), 0xcb);
        EXPECT(gbc.readMem(0xa034), 0xcf);
        // CB CF 0055
        gbc.setState(0x2ffc, 0x4f4c, 0xd120, 0xf4db, 0x999c, 0x8806, 0x1, 0x0);
        gbc.writeMem(0x2ffc, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x4f4c);
        EXPECT(gbc.pc(), 0x2ffe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0056
        gbc.setState(0xc31, 0x60c3, 0x4d60, 0x6a69, 0x9e27, 0xbc11, 0x1, 0x1);
        gbc.writeMem(0xc31, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x60c3);
        EXPECT(gbc.pc(), 0xc33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0058
        gbc.setState(0xc2e7, 0x6cf0, 0x8c00, 0x3cd4, 0x24b7, 0x8f56, 0x1, 0x0);
        gbc.writeMem(0xc2e7, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x6cf0);
        EXPECT(gbc.pc(), 0xc2e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2e7), 0xcb);
        EXPECT(gbc.readMem(0xc2e8), 0xcf);
        // CB CF 0059
        gbc.setState(0xc757, 0xe67, 0xf4b0, 0x4673, 0xe288, 0x75dd, 0x0, 0x0);
        gbc.writeMem(0xc757, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe67);
        EXPECT(gbc.pc(), 0xc759);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc757), 0xcb);
        EXPECT(gbc.readMem(0xc758), 0xcf);
        // CB CF 005A
        gbc.setState(0xd3bd, 0x1b8b, 0x5df0, 0x2803, 0x385b, 0xfe51, 0x0, 0x1);
        gbc.writeMem(0xd3bd, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x1b8b);
        EXPECT(gbc.pc(), 0xd3bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3bd), 0xcb);
        EXPECT(gbc.readMem(0xd3be), 0xcf);
        // CB CF 005B
        gbc.setState(0x78f7, 0x6565, 0xba90, 0x239, 0xa2c5, 0xe9cb, 0x0, 0x0);
        gbc.writeMem(0x78f7, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x6565);
        EXPECT(gbc.pc(), 0x78f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 005C
        gbc.setState(0xc8, 0xca7c, 0x2cf0, 0x7a2a, 0xa301, 0x913c, 0x1, 0x1);
        gbc.writeMem(0xc8, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xca7c);
        EXPECT(gbc.pc(), 0xca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 005D
        gbc.setState(0x5c6c, 0xc1cc, 0xab10, 0xeb14, 0xf3cb, 0x7219, 0x1, 0x1);
        gbc.writeMem(0x5c6c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xc1cc);
        EXPECT(gbc.pc(), 0x5c6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 005E
        gbc.setState(0x133, 0x3931, 0x4670, 0x3582, 0x7120, 0x3a97, 0x1, 0x1);
        gbc.writeMem(0x133, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x3931);
        EXPECT(gbc.pc(), 0x135);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 005F
        gbc.setState(0xe6e8, 0x69f0, 0x7e30, 0x1cf5, 0xc5d7, 0xffe0, 0x0, 0x0);
        gbc.writeMem(0xe6e8, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x69f0);
        EXPECT(gbc.pc(), 0xe6ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6e8), 0xcb);
        EXPECT(gbc.readMem(0xe6e9), 0xcf);
        // CB CF 0060
        gbc.setState(0x49a8, 0xa698, 0x69f0, 0xa829, 0x1193, 0x7835, 0x0, 0x0);
        gbc.writeMem(0x49a8, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xa698);
        EXPECT(gbc.pc(), 0x49aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0061
        gbc.setState(0xac47, 0x64bb, 0x8880, 0x1120, 0xe344, 0x5a09, 0x0, 0x0);
        gbc.writeMem(0xac47, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x64bb);
        EXPECT(gbc.pc(), 0xac49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac47), 0xcb);
        EXPECT(gbc.readMem(0xac48), 0xcf);
        // CB CF 0062
        gbc.setState(0x87b3, 0xb388, 0x5ef0, 0xffe2, 0x4cda, 0xe42b, 0x1, 0x1);
        gbc.writeMem(0x87b3, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xb388);
        EXPECT(gbc.pc(), 0x87b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87b3), 0xcb);
        EXPECT(gbc.readMem(0x87b4), 0xcf);
        // CB CF 0063
        gbc.setState(0x6986, 0x45b6, 0xb050, 0x60ee, 0x73ed, 0xde00, 0x0, 0x1);
        gbc.writeMem(0x6986, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x45b6);
        EXPECT(gbc.pc(), 0x6988);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0064
        gbc.setState(0x9329, 0x846d, 0x1a30, 0xf0ac, 0x7000, 0xdd87, 0x0, 0x1);
        gbc.writeMem(0x9329, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x846d);
        EXPECT(gbc.pc(), 0x932b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9329), 0xcb);
        EXPECT(gbc.readMem(0x932a), 0xcf);
        // CB CF 0065
        gbc.setState(0x39f3, 0x73b4, 0x9900, 0x959e, 0xbef5, 0x1606, 0x1, 0x0);
        gbc.writeMem(0x39f3, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x73b4);
        EXPECT(gbc.pc(), 0x39f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0066
        gbc.setState(0xefdc, 0xa16f, 0xfb00, 0x4fb4, 0x5bcc, 0x10e1, 0x1, 0x0);
        gbc.writeMem(0xefdc, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa16f);
        EXPECT(gbc.pc(), 0xefde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefdc), 0xcb);
        EXPECT(gbc.readMem(0xefdd), 0xcf);
        // CB CF 0067
        gbc.setState(0xeedb, 0xe15f, 0xd910, 0xff40, 0xe19c, 0xfced, 0x0, 0x0);
        gbc.writeMem(0xeedb, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xe15f);
        EXPECT(gbc.pc(), 0xeedd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeedb), 0xcb);
        EXPECT(gbc.readMem(0xeedc), 0xcf);
        // CB CF 0068
        gbc.setState(0x3bf4, 0x11bc, 0x6aa0, 0x6380, 0xf011, 0x570e, 0x0, 0x1);
        gbc.writeMem(0x3bf4, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x11bc);
        EXPECT(gbc.pc(), 0x3bf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0069
        gbc.setState(0x98b, 0xc64e, 0xea60, 0x19a4, 0x3b9f, 0xd041, 0x0, 0x0);
        gbc.writeMem(0x98b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xc64e);
        EXPECT(gbc.pc(), 0x98d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 006A
        gbc.setState(0x3703, 0x248, 0xd800, 0x4b77, 0xf0a0, 0x51df, 0x1, 0x1);
        gbc.writeMem(0x3703, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x248);
        EXPECT(gbc.pc(), 0x3705);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 006B
        gbc.setState(0xc3fc, 0xb9ad, 0x30b0, 0x50ff, 0xc19d, 0xf3fb, 0x1, 0x1);
        gbc.writeMem(0xc3fc, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xb9ad);
        EXPECT(gbc.pc(), 0xc3fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3fc), 0xcb);
        EXPECT(gbc.readMem(0xc3fd), 0xcf);
        // CB CF 006C
        gbc.setState(0xf65, 0x720c, 0x3e90, 0x9235, 0x1d2b, 0x8aa1, 0x0, 0x1);
        gbc.writeMem(0xf65, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x720c);
        EXPECT(gbc.pc(), 0xf67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 006D
        gbc.setState(0xec9e, 0xc346, 0x58c0, 0x14f, 0x9e9e, 0xa4f3, 0x1, 0x1);
        gbc.writeMem(0xec9e, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xc346);
        EXPECT(gbc.pc(), 0xeca0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec9e), 0xcb);
        EXPECT(gbc.readMem(0xec9f), 0xcf);
        // CB CF 006E
        gbc.setState(0xca1b, 0x5453, 0xba60, 0xd137, 0xa734, 0xcf2b, 0x1, 0x0);
        gbc.writeMem(0xca1b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x5453);
        EXPECT(gbc.pc(), 0xca1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca1b), 0xcb);
        EXPECT(gbc.readMem(0xca1c), 0xcf);
        // CB CF 006F
        gbc.setState(0x8bef, 0x7607, 0x3d60, 0x2e92, 0xcef0, 0x4866, 0x0, 0x0);
        gbc.writeMem(0x8bef, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x7607);
        EXPECT(gbc.pc(), 0x8bf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bef), 0xcb);
        EXPECT(gbc.readMem(0x8bf0), 0xcf);
        // CB CF 0070
        gbc.setState(0x69ce, 0xeffa, 0xe300, 0x62cf, 0xbf9a, 0x4755, 0x0, 0x0);
        gbc.writeMem(0x69ce, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xeffa);
        EXPECT(gbc.pc(), 0x69d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0071
        gbc.setState(0x7dd1, 0xeea7, 0xe6e0, 0x5320, 0x3a6f, 0x88b9, 0x0, 0x1);
        gbc.writeMem(0x7dd1, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xeea7);
        EXPECT(gbc.pc(), 0x7dd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0072
        gbc.setState(0xe879, 0x53ca, 0xb980, 0xc5f5, 0xc758, 0x3bd4, 0x1, 0x1);
        gbc.writeMem(0xe879, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x53ca);
        EXPECT(gbc.pc(), 0xe87b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe879), 0xcb);
        EXPECT(gbc.readMem(0xe87a), 0xcf);
        // CB CF 0073
        gbc.setState(0x2293, 0x7db, 0x4f70, 0xecda, 0x22b4, 0xbdb6, 0x1, 0x0);
        gbc.writeMem(0x2293, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7db);
        EXPECT(gbc.pc(), 0x2295);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0074
        gbc.setState(0x7d3d, 0x3fa7, 0xba70, 0x883e, 0x6220, 0x178f, 0x1, 0x0);
        gbc.writeMem(0x7d3d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x3fa7);
        EXPECT(gbc.pc(), 0x7d3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0075
        gbc.setState(0x4ce5, 0x3698, 0x4fd0, 0x9b61, 0xae08, 0x861f, 0x0, 0x1);
        gbc.writeMem(0x4ce5, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x3698);
        EXPECT(gbc.pc(), 0x4ce7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0076
        gbc.setState(0xaefd, 0xa5e, 0x320, 0x250b, 0xd54, 0xaa3b, 0x1, 0x0);
        gbc.writeMem(0xaefd, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xa5e);
        EXPECT(gbc.pc(), 0xaeff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaefd), 0xcb);
        EXPECT(gbc.readMem(0xaefe), 0xcf);
        // CB CF 0077
        gbc.setState(0x61ef, 0xace, 0x5ed0, 0x4906, 0x7778, 0x50ac, 0x1, 0x0);
        gbc.writeMem(0x61ef, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xace);
        EXPECT(gbc.pc(), 0x61f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0078
        gbc.setState(0xb8c6, 0x478b, 0x7e20, 0x5c3, 0x5b12, 0x684f, 0x1, 0x0);
        gbc.writeMem(0xb8c6, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x478b);
        EXPECT(gbc.pc(), 0xb8c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8c6), 0xcb);
        EXPECT(gbc.readMem(0xb8c7), 0xcf);
        // CB CF 0079
        gbc.setState(0x7fe7, 0x9b3, 0x6280, 0x88d4, 0x66e6, 0x494a, 0x0, 0x0);
        gbc.writeMem(0x7fe7, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9b3);
        EXPECT(gbc.pc(), 0x7fe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 007A
        gbc.setState(0xdb94, 0x6b99, 0x2480, 0xbc2d, 0x2901, 0x45e, 0x1, 0x0);
        gbc.writeMem(0xdb94, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x6b99);
        EXPECT(gbc.pc(), 0xdb96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb94), 0xcb);
        EXPECT(gbc.readMem(0xdb95), 0xcf);
        // CB CF 007B
        gbc.setState(0x258a, 0xa2ec, 0x9050, 0x5cf9, 0xeada, 0xed87, 0x1, 0x1);
        gbc.writeMem(0x258a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xa2ec);
        EXPECT(gbc.pc(), 0x258c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 007C
        gbc.setState(0x5d81, 0x641d, 0x4110, 0x63b8, 0x5d56, 0xf1ae, 0x0, 0x0);
        gbc.writeMem(0x5d81, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x641d);
        EXPECT(gbc.pc(), 0x5d83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 007D
        gbc.setState(0xe769, 0x531f, 0x53e0, 0x6118, 0x6efe, 0x8047, 0x1, 0x1);
        gbc.writeMem(0xe769, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x531f);
        EXPECT(gbc.pc(), 0xe76b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe769), 0xcb);
        EXPECT(gbc.readMem(0xe76a), 0xcf);
        // CB CF 007E
        gbc.setState(0x9b22, 0xf161, 0xeae0, 0x7c6e, 0xc7ca, 0x4c3a, 0x1, 0x0);
        gbc.writeMem(0x9b22, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf161);
        EXPECT(gbc.pc(), 0x9b24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b22), 0xcb);
        EXPECT(gbc.readMem(0x9b23), 0xcf);
        // CB CF 007F
        gbc.setState(0x3ca2, 0x2b74, 0x6950, 0xf857, 0x88c6, 0x394b, 0x1, 0x1);
        gbc.writeMem(0x3ca2, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x2b74);
        EXPECT(gbc.pc(), 0x3ca4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0080
        gbc.setState(0xc8e4, 0x4e33, 0xf490, 0x4779, 0x1d2e, 0xb7c9, 0x1, 0x0);
        gbc.writeMem(0xc8e4, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x4e33);
        EXPECT(gbc.pc(), 0xc8e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8e4), 0xcb);
        EXPECT(gbc.readMem(0xc8e5), 0xcf);
        // CB CF 0082
        gbc.setState(0x1025, 0x7aad, 0x4cf0, 0x9958, 0x89fd, 0x5b4, 0x0, 0x0);
        gbc.writeMem(0x1025, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x7aad);
        EXPECT(gbc.pc(), 0x1027);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0083
        gbc.setState(0xe38d, 0x17b9, 0x2730, 0xb968, 0x6146, 0x8199, 0x1, 0x0);
        gbc.writeMem(0xe38d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x17b9);
        EXPECT(gbc.pc(), 0xe38f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe38d), 0xcb);
        EXPECT(gbc.readMem(0xe38e), 0xcf);
        // CB CF 0084
        gbc.setState(0x3413, 0xce4c, 0xede0, 0xe6e8, 0x8b78, 0xe5fd, 0x1, 0x1);
        gbc.writeMem(0x3413, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xce4c);
        EXPECT(gbc.pc(), 0x3415);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0085
        gbc.setState(0xe73e, 0x56f7, 0xe610, 0x7e78, 0xcb5, 0xe6f2, 0x0, 0x0);
        gbc.writeMem(0xe73e, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x56f7);
        EXPECT(gbc.pc(), 0xe740);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe73e), 0xcb);
        EXPECT(gbc.readMem(0xe73f), 0xcf);
        // CB CF 0086
        gbc.setState(0x11e9, 0x6fdc, 0xb190, 0xf016, 0x1a79, 0x5ded, 0x1, 0x0);
        gbc.writeMem(0x11e9, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x6fdc);
        EXPECT(gbc.pc(), 0x11eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0087
        gbc.setState(0xfb3, 0x1709, 0x2150, 0xb731, 0xd170, 0xd0af, 0x0, 0x0);
        gbc.writeMem(0xfb3, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x1709);
        EXPECT(gbc.pc(), 0xfb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0088
        gbc.setState(0xc9aa, 0x4a8, 0xc610, 0x5aec, 0x8247, 0x50e3, 0x1, 0x0);
        gbc.writeMem(0xc9aa, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x4a8);
        EXPECT(gbc.pc(), 0xc9ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9aa), 0xcb);
        EXPECT(gbc.readMem(0xc9ab), 0xcf);
        // CB CF 0089
        gbc.setState(0xb3d4, 0xf702, 0x96b0, 0xca2b, 0xc037, 0x3fe4, 0x0, 0x1);
        gbc.writeMem(0xb3d4, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xf702);
        EXPECT(gbc.pc(), 0xb3d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3d4), 0xcb);
        EXPECT(gbc.readMem(0xb3d5), 0xcf);
        // CB CF 008A
        gbc.setState(0x227f, 0x1cdf, 0xaf10, 0x54fb, 0x4408, 0x10a1, 0x1, 0x1);
        gbc.writeMem(0x227f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x1cdf);
        EXPECT(gbc.pc(), 0x2281);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 008B
        gbc.setState(0x7ba, 0x8939, 0xd220, 0xc23a, 0xf6f, 0xe15b, 0x0, 0x1);
        gbc.writeMem(0x7ba, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x8939);
        EXPECT(gbc.pc(), 0x7bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 008C
        gbc.setState(0x282f, 0x4234, 0x46f0, 0xab3b, 0xca49, 0x3d7f, 0x0, 0x0);
        gbc.writeMem(0x282f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x4234);
        EXPECT(gbc.pc(), 0x2831);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 008D
        gbc.setState(0x3687, 0x8a9b, 0x84b0, 0x5fe2, 0xb721, 0x9094, 0x0, 0x1);
        gbc.writeMem(0x3687, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x8a9b);
        EXPECT(gbc.pc(), 0x3689);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 008E
        gbc.setState(0xde4d, 0x8489, 0x5080, 0x4f4f, 0xdbf8, 0xdf91, 0x0, 0x1);
        gbc.writeMem(0xde4d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x8489);
        EXPECT(gbc.pc(), 0xde4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde4d), 0xcb);
        EXPECT(gbc.readMem(0xde4e), 0xcf);
        // CB CF 008F
        gbc.setState(0xbd37, 0xd5a5, 0xf890, 0x2de0, 0x2a92, 0x2eb6, 0x0, 0x0);
        gbc.writeMem(0xbd37, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd5a5);
        EXPECT(gbc.pc(), 0xbd39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd37), 0xcb);
        EXPECT(gbc.readMem(0xbd38), 0xcf);
        // CB CF 0090
        gbc.setState(0x4cd4, 0x373e, 0x63b0, 0xfd5e, 0xe528, 0x33ea, 0x0, 0x1);
        gbc.writeMem(0x4cd4, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x373e);
        EXPECT(gbc.pc(), 0x4cd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0091
        gbc.setState(0xc208, 0x877c, 0x4a10, 0x2f4d, 0x5901, 0xafec, 0x0, 0x1);
        gbc.writeMem(0xc208, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x877c);
        EXPECT(gbc.pc(), 0xc20a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc208), 0xcb);
        EXPECT(gbc.readMem(0xc209), 0xcf);
        // CB CF 0092
        gbc.setState(0xa2d9, 0x15f3, 0x52d0, 0x6614, 0xed54, 0x1a91, 0x1, 0x0);
        gbc.writeMem(0xa2d9, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x15f3);
        EXPECT(gbc.pc(), 0xa2db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2d9), 0xcb);
        EXPECT(gbc.readMem(0xa2da), 0xcf);
        // CB CF 0093
        gbc.setState(0x6d56, 0x845, 0xa6a0, 0x847b, 0x98ff, 0xee65, 0x0, 0x0);
        gbc.writeMem(0x6d56, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x845);
        EXPECT(gbc.pc(), 0x6d58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0094
        gbc.setState(0x6eff, 0xaaec, 0xe3d0, 0x1cb4, 0x6286, 0x9b, 0x1, 0x1);
        gbc.writeMem(0x6eff, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xaaec);
        EXPECT(gbc.pc(), 0x6f01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0095
        gbc.setState(0xc69b, 0x92d4, 0x44f0, 0xd127, 0xaf91, 0x1b69, 0x1, 0x0);
        gbc.writeMem(0xc69b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x92d4);
        EXPECT(gbc.pc(), 0xc69d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc69b), 0xcb);
        EXPECT(gbc.readMem(0xc69c), 0xcf);
        // CB CF 0096
        gbc.setState(0x2e3, 0x76cc, 0xf110, 0xe497, 0x11dd, 0xdd81, 0x0, 0x1);
        gbc.writeMem(0x2e3, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x76cc);
        EXPECT(gbc.pc(), 0x2e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0097
        gbc.setState(0xd46b, 0x3c51, 0x4d20, 0xf737, 0x278a, 0xee3, 0x0, 0x1);
        gbc.writeMem(0xd46b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x3c51);
        EXPECT(gbc.pc(), 0xd46d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd46b), 0xcb);
        EXPECT(gbc.readMem(0xd46c), 0xcf);
        // CB CF 0098
        gbc.setState(0x7e13, 0xe5a7, 0x9d90, 0xddb9, 0x8ae6, 0x3596, 0x1, 0x0);
        gbc.writeMem(0x7e13, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xe5a7);
        EXPECT(gbc.pc(), 0x7e15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0099
        gbc.setState(0x370c, 0xdb09, 0xb4f0, 0x432d, 0x7bb4, 0x530b, 0x1, 0x1);
        gbc.writeMem(0x370c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xdb09);
        EXPECT(gbc.pc(), 0x370e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 009A
        gbc.setState(0x400a, 0x9321, 0x7770, 0xb950, 0xfaed, 0x5773, 0x1, 0x1);
        gbc.writeMem(0x400a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x9321);
        EXPECT(gbc.pc(), 0x400c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 009B
        gbc.setState(0x115c, 0x1a39, 0xed80, 0xd0f3, 0x772c, 0x8938, 0x0, 0x1);
        gbc.writeMem(0x115c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x1a39);
        EXPECT(gbc.pc(), 0x115e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 009C
        gbc.setState(0xeeb2, 0x77b5, 0x1180, 0x767f, 0x1472, 0xb927, 0x1, 0x1);
        gbc.writeMem(0xeeb2, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x77b5);
        EXPECT(gbc.pc(), 0xeeb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeb2), 0xcb);
        EXPECT(gbc.readMem(0xeeb3), 0xcf);
        // CB CF 009D
        gbc.setState(0x6f67, 0xd87e, 0x6ce0, 0x530e, 0x200c, 0x3901, 0x0, 0x1);
        gbc.writeMem(0x6f67, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd87e);
        EXPECT(gbc.pc(), 0x6f69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 009E
        gbc.setState(0xc14b, 0x8200, 0xdaa0, 0xec35, 0x31d9, 0xc892, 0x1, 0x0);
        gbc.writeMem(0xc14b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x8200);
        EXPECT(gbc.pc(), 0xc14d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc14b), 0xcb);
        EXPECT(gbc.readMem(0xc14c), 0xcf);
        // CB CF 009F
        gbc.setState(0xc9c4, 0x8158, 0x3cc0, 0xccf5, 0xfaa1, 0x6dd3, 0x1, 0x0);
        gbc.writeMem(0xc9c4, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x8158);
        EXPECT(gbc.pc(), 0xc9c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9c4), 0xcb);
        EXPECT(gbc.readMem(0xc9c5), 0xcf);
        // CB CF 00A0
        gbc.setState(0xa9d3, 0x32b7, 0xd230, 0xca4c, 0x84b, 0x659e, 0x0, 0x1);
        gbc.writeMem(0xa9d3, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x32b7);
        EXPECT(gbc.pc(), 0xa9d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9d3), 0xcb);
        EXPECT(gbc.readMem(0xa9d4), 0xcf);
        // CB CF 00A1
        gbc.setState(0x51cc, 0x416f, 0x26c0, 0xc887, 0x2c94, 0x1e47, 0x1, 0x0);
        gbc.writeMem(0x51cc, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x416f);
        EXPECT(gbc.pc(), 0x51ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 00A2
        gbc.setState(0x6118, 0xa8da, 0x4d0, 0xf35d, 0xa0d7, 0xc360, 0x0, 0x1);
        gbc.writeMem(0x6118, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa8da);
        EXPECT(gbc.pc(), 0x611a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 00A3
        gbc.setState(0xbb9d, 0x7ae8, 0x4100, 0x99e1, 0x2242, 0xc887, 0x0, 0x1);
        gbc.writeMem(0xbb9d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x7ae8);
        EXPECT(gbc.pc(), 0xbb9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb9d), 0xcb);
        EXPECT(gbc.readMem(0xbb9e), 0xcf);
        // CB CF 00A4
        gbc.setState(0x53e, 0xd538, 0xc050, 0x42d5, 0x5324, 0x38e4, 0x1, 0x0);
        gbc.writeMem(0x53e, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xd538);
        EXPECT(gbc.pc(), 0x540);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 00A5
        gbc.setState(0x4cce, 0x1427, 0x33e0, 0x94bb, 0x65b8, 0x45c3, 0x0, 0x1);
        gbc.writeMem(0x4cce, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x1427);
        EXPECT(gbc.pc(), 0x4cd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 00A6
        gbc.setState(0xbf6c, 0xae60, 0x4d50, 0xbcfd, 0xf316, 0x270e, 0x0, 0x0);
        gbc.writeMem(0xbf6c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xae60);
        EXPECT(gbc.pc(), 0xbf6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf6c), 0xcb);
        EXPECT(gbc.readMem(0xbf6d), 0xcf);
        // CB CF 00A7
        gbc.setState(0xc821, 0xaa80, 0xb490, 0x2527, 0xa868, 0x93b8, 0x1, 0x1);
        gbc.writeMem(0xc821, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xaa80);
        EXPECT(gbc.pc(), 0xc823);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc821), 0xcb);
        EXPECT(gbc.readMem(0xc822), 0xcf);
        // CB CF 00A8
        gbc.setState(0x12b4, 0xafb, 0x5ca0, 0x9e4b, 0x5b9c, 0x19d4, 0x0, 0x0);
        gbc.writeMem(0x12b4, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xafb);
        EXPECT(gbc.pc(), 0x12b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 00A9
        gbc.setState(0xa6a4, 0x5378, 0x2400, 0x251f, 0x6231, 0xe006, 0x1, 0x1);
        gbc.writeMem(0xa6a4, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x5378);
        EXPECT(gbc.pc(), 0xa6a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6a4), 0xcb);
        EXPECT(gbc.readMem(0xa6a5), 0xcf);
        // CB CF 00AA
        gbc.setState(0xedf5, 0x735a, 0xc020, 0x78ae, 0x850a, 0xf8f5, 0x0, 0x1);
        gbc.writeMem(0xedf5, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x735a);
        EXPECT(gbc.pc(), 0xedf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedf5), 0xcb);
        EXPECT(gbc.readMem(0xedf6), 0xcf);
        // CB CF 00AB
        gbc.setState(0x39e5, 0x7ac4, 0x7d0, 0x757f, 0xd142, 0x4144, 0x1, 0x1);
        gbc.writeMem(0x39e5, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x7ac4);
        EXPECT(gbc.pc(), 0x39e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 00AC
        gbc.setState(0x717a, 0xda35, 0x74d0, 0xdda7, 0xe555, 0x423b, 0x1, 0x0);
        gbc.writeMem(0x717a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xda35);
        EXPECT(gbc.pc(), 0x717c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 00AD
        gbc.setState(0xb312, 0x903c, 0x7d10, 0x6512, 0xb7ed, 0x15be, 0x0, 0x1);
        gbc.writeMem(0xb312, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x903c);
        EXPECT(gbc.pc(), 0xb314);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb312), 0xcb);
        EXPECT(gbc.readMem(0xb313), 0xcf);
        // CB CF 00AF
        gbc.setState(0xd961, 0x68e7, 0x9550, 0x6a20, 0x8385, 0x8dbc, 0x1, 0x0);
        gbc.writeMem(0xd961, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x68e7);
        EXPECT(gbc.pc(), 0xd963);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd961), 0xcb);
        EXPECT(gbc.readMem(0xd962), 0xcf);
        // CB CF 00B0
        gbc.setState(0xdd6c, 0x4f62, 0x7410, 0xcf7f, 0xdfa9, 0x5559, 0x1, 0x0);
        gbc.writeMem(0xdd6c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x4f62);
        EXPECT(gbc.pc(), 0xdd6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd6c), 0xcb);
        EXPECT(gbc.readMem(0xdd6d), 0xcf);
        // CB CF 00B1
        gbc.setState(0x6925, 0xd36f, 0x2120, 0xf8d3, 0x2d61, 0x5e1c, 0x0, 0x1);
        gbc.writeMem(0x6925, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd36f);
        EXPECT(gbc.pc(), 0x6927);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 00B2
        gbc.setState(0xcaf6, 0x450b, 0x6c80, 0x46ae, 0xb445, 0x6748, 0x0, 0x1);
        gbc.writeMem(0xcaf6, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x450b);
        EXPECT(gbc.pc(), 0xcaf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaf6), 0xcb);
        EXPECT(gbc.readMem(0xcaf7), 0xcf);
        // CB CF 00B3
        gbc.setState(0xddfe, 0x2527, 0xa040, 0xa490, 0xfcb, 0x6a6, 0x1, 0x0);
        gbc.writeMem(0xddfe, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x2527);
        EXPECT(gbc.pc(), 0xde00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddfe), 0xcb);
        EXPECT(gbc.readMem(0xddff), 0xcf);
        // CB CF 00B4
        gbc.setState(0x3a0a, 0x773b, 0xb230, 0x582b, 0x917, 0x6e53, 0x1, 0x1);
        gbc.writeMem(0x3a0a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x773b);
        EXPECT(gbc.pc(), 0x3a0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 00B5
        gbc.setState(0x2618, 0x9eba, 0x2750, 0xe639, 0x6944, 0x4ea2, 0x1, 0x1);
        gbc.writeMem(0x2618, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9eba);
        EXPECT(gbc.pc(), 0x261a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 00B6
        gbc.setState(0x1d8b, 0x7313, 0x92b0, 0x3eec, 0x9169, 0x1235, 0x0, 0x1);
        gbc.writeMem(0x1d8b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x7313);
        EXPECT(gbc.pc(), 0x1d8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 00B7
        gbc.setState(0x2196, 0xed33, 0x8270, 0xf3a, 0x5cf1, 0xd869, 0x0, 0x0);
        gbc.writeMem(0x2196, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xed33);
        EXPECT(gbc.pc(), 0x2198);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 00B8
        gbc.setState(0xe01b, 0xae0c, 0xa4f0, 0x1d86, 0xca2b, 0x87ad, 0x1, 0x1);
        gbc.writeMem(0xe01b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xae0c);
        EXPECT(gbc.pc(), 0xe01d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe01b), 0xcb);
        EXPECT(gbc.readMem(0xe01c), 0xcf);
        // CB CF 00B9
        gbc.setState(0xc0da, 0x8d67, 0x2400, 0x29eb, 0xaad9, 0x6ed2, 0x1, 0x0);
        gbc.writeMem(0xc0da, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x8d67);
        EXPECT(gbc.pc(), 0xc0dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0da), 0xcb);
        EXPECT(gbc.readMem(0xc0db), 0xcf);
        // CB CF 00BA
        gbc.setState(0xa0d1, 0xec1a, 0xa0f0, 0x36ac, 0xfdfc, 0xa221, 0x0, 0x1);
        gbc.writeMem(0xa0d1, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xec1a);
        EXPECT(gbc.pc(), 0xa0d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0d1), 0xcb);
        EXPECT(gbc.readMem(0xa0d2), 0xcf);
        // CB CF 00BB
        gbc.setState(0x4356, 0xc120, 0x6ec0, 0x4bb7, 0x97e1, 0xc85c, 0x0, 0x0);
        gbc.writeMem(0x4356, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xc120);
        EXPECT(gbc.pc(), 0x4358);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 00BC
        gbc.setState(0xbc58, 0x6a5f, 0x92d0, 0x6365, 0x52af, 0x32af, 0x1, 0x1);
        gbc.writeMem(0xbc58, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x6a5f);
        EXPECT(gbc.pc(), 0xbc5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc58), 0xcb);
        EXPECT(gbc.readMem(0xbc59), 0xcf);
        // CB CF 00BD
        gbc.setState(0x3c90, 0x13c, 0x2ad0, 0xedb5, 0x6ca8, 0xd368, 0x1, 0x0);
        gbc.writeMem(0x3c90, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x13c);
        EXPECT(gbc.pc(), 0x3c92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 00BE
        gbc.setState(0xb844, 0x57bb, 0x930, 0xf680, 0x6550, 0x35ea, 0x1, 0x1);
        gbc.writeMem(0xb844, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x57bb);
        EXPECT(gbc.pc(), 0xb846);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb844), 0xcb);
        EXPECT(gbc.readMem(0xb845), 0xcf);
        // CB CF 00BF
        gbc.setState(0xe6bd, 0xe1a2, 0xadc0, 0xd0ce, 0xee94, 0x70f4, 0x0, 0x0);
        gbc.writeMem(0xe6bd, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xe1a2);
        EXPECT(gbc.pc(), 0xe6bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6bd), 0xcb);
        EXPECT(gbc.readMem(0xe6be), 0xcf);
        // CB CF 00C0
        gbc.setState(0x97b4, 0x1782, 0x3f90, 0x3005, 0xbac0, 0x6bac, 0x0, 0x1);
        gbc.writeMem(0x97b4, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x1782);
        EXPECT(gbc.pc(), 0x97b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97b4), 0xcb);
        EXPECT(gbc.readMem(0x97b5), 0xcf);
        // CB CF 00C1
        gbc.setState(0x6ea3, 0x8e81, 0x3b80, 0x3762, 0x7447, 0xfc8c, 0x1, 0x0);
        gbc.writeMem(0x6ea3, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x8e81);
        EXPECT(gbc.pc(), 0x6ea5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 00C2
        gbc.setState(0x1107, 0x1e34, 0x9f90, 0x944e, 0xa180, 0xe36b, 0x1, 0x0);
        gbc.writeMem(0x1107, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x1e34);
        EXPECT(gbc.pc(), 0x1109);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 00C3
        gbc.setState(0x6a2e, 0x60b7, 0xe10, 0x986b, 0x1a11, 0xd4a8, 0x1, 0x1);
        gbc.writeMem(0x6a2e, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x60b7);
        EXPECT(gbc.pc(), 0x6a30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 00C4
        gbc.setState(0xdf7d, 0x31c5, 0xdce0, 0x831a, 0xec4b, 0x2f7c, 0x1, 0x0);
        gbc.writeMem(0xdf7d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x31c5);
        EXPECT(gbc.pc(), 0xdf7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf7d), 0xcb);
        EXPECT(gbc.readMem(0xdf7e), 0xcf);
        // CB CF 00C5
        gbc.setState(0x7054, 0x2a8, 0xd40, 0x5b73, 0x8470, 0x33e4, 0x0, 0x0);
        gbc.writeMem(0x7054, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x2a8);
        EXPECT(gbc.pc(), 0x7056);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 00C6
        gbc.setState(0xb78a, 0xda62, 0x90a0, 0xe08a, 0x11f3, 0xb825, 0x0, 0x0);
        gbc.writeMem(0xb78a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xda62);
        EXPECT(gbc.pc(), 0xb78c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb78a), 0xcb);
        EXPECT(gbc.readMem(0xb78b), 0xcf);
        // CB CF 00C7
        gbc.setState(0x3bfa, 0xf57e, 0xb660, 0x163a, 0x5e4e, 0x36fd, 0x1, 0x0);
        gbc.writeMem(0x3bfa, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xf57e);
        EXPECT(gbc.pc(), 0x3bfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 00C8
        gbc.setState(0x4934, 0xf59d, 0x2450, 0x7060, 0x1c6d, 0xfc59, 0x0, 0x0);
        gbc.writeMem(0x4934, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xf59d);
        EXPECT(gbc.pc(), 0x4936);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 00C9
        gbc.setState(0xbb76, 0xccdc, 0x1190, 0x5c8, 0x255a, 0x4dc2, 0x1, 0x0);
        gbc.writeMem(0xbb76, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xccdc);
        EXPECT(gbc.pc(), 0xbb78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb76), 0xcb);
        EXPECT(gbc.readMem(0xbb77), 0xcf);
        // CB CF 00CA
        gbc.setState(0x4e90, 0x32ab, 0xdad0, 0x6587, 0x1f5b, 0x5512, 0x1, 0x0);
        gbc.writeMem(0x4e90, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x32ab);
        EXPECT(gbc.pc(), 0x4e92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 00CB
        gbc.setState(0xda12, 0x7307, 0x7ae0, 0x49b4, 0xa8bc, 0x4ca6, 0x1, 0x0);
        gbc.writeMem(0xda12, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x7307);
        EXPECT(gbc.pc(), 0xda14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda12), 0xcb);
        EXPECT(gbc.readMem(0xda13), 0xcf);
        // CB CF 00CC
        gbc.setState(0x4cd0, 0xe5f9, 0xead0, 0xb8c, 0x9137, 0x46f6, 0x0, 0x1);
        gbc.writeMem(0x4cd0, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xe5f9);
        EXPECT(gbc.pc(), 0x4cd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 00D0
        gbc.setState(0x31f1, 0x8390, 0xd2d0, 0x8e42, 0xafab, 0xafc0, 0x1, 0x0);
        gbc.writeMem(0x31f1, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8390);
        EXPECT(gbc.pc(), 0x31f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 00D1
        gbc.setState(0x2a05, 0x5c2e, 0x7a00, 0x6108, 0x2478, 0xe74, 0x0, 0x1);
        gbc.writeMem(0x2a05, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5c2e);
        EXPECT(gbc.pc(), 0x2a07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 00D2
        gbc.setState(0x489f, 0xdbef, 0x46d0, 0xb056, 0xf974, 0xbafe, 0x0, 0x1);
        gbc.writeMem(0x489f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xdbef);
        EXPECT(gbc.pc(), 0x48a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 00D3
        gbc.setState(0x3308, 0x6190, 0x1d80, 0x39dd, 0x987d, 0x6c8f, 0x1, 0x0);
        gbc.writeMem(0x3308, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x6190);
        EXPECT(gbc.pc(), 0x330a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 00D4
        gbc.setState(0x8c7a, 0xcb88, 0xb5d0, 0x3383, 0x28e9, 0x24f2, 0x0, 0x0);
        gbc.writeMem(0x8c7a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xcb88);
        EXPECT(gbc.pc(), 0x8c7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c7a), 0xcb);
        EXPECT(gbc.readMem(0x8c7b), 0xcf);
        // CB CF 00D5
        gbc.setState(0x8acd, 0xb1f1, 0x5ae0, 0x5883, 0xd668, 0x5935, 0x1, 0x1);
        gbc.writeMem(0x8acd, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xb1f1);
        EXPECT(gbc.pc(), 0x8acf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8acd), 0xcb);
        EXPECT(gbc.readMem(0x8ace), 0xcf);
        // CB CF 00D6
        gbc.setState(0x6e9c, 0x457, 0x3690, 0xf149, 0x426a, 0xfec4, 0x0, 0x1);
        gbc.writeMem(0x6e9c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x457);
        EXPECT(gbc.pc(), 0x6e9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 00D7
        gbc.setState(0x2cad, 0x94d9, 0x5280, 0x39cb, 0x4c53, 0xed4a, 0x0, 0x1);
        gbc.writeMem(0x2cad, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x94d9);
        EXPECT(gbc.pc(), 0x2caf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 00D8
        gbc.setState(0x210d, 0xa8e6, 0x6910, 0xecfa, 0xf58f, 0xfe0a, 0x1, 0x1);
        gbc.writeMem(0x210d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xa8e6);
        EXPECT(gbc.pc(), 0x210f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 00D9
        gbc.setState(0x1880, 0x4013, 0xdb60, 0x1992, 0xa862, 0x56a, 0x1, 0x0);
        gbc.writeMem(0x1880, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x4013);
        EXPECT(gbc.pc(), 0x1882);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 00DA
        gbc.setState(0xdee5, 0x6982, 0x6a00, 0xe6a5, 0x5d22, 0x42a7, 0x1, 0x1);
        gbc.writeMem(0xdee5, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x6982);
        EXPECT(gbc.pc(), 0xdee7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdee5), 0xcb);
        EXPECT(gbc.readMem(0xdee6), 0xcf);
        // CB CF 00DB
        gbc.setState(0x4120, 0xe41a, 0x9420, 0xf494, 0xfa1a, 0x77ee, 0x1, 0x0);
        gbc.writeMem(0x4120, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xe41a);
        EXPECT(gbc.pc(), 0x4122);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 00DC
        gbc.setState(0xcb0f, 0x8a13, 0xa00, 0x7eb5, 0xbc13, 0xa9d8, 0x1, 0x1);
        gbc.writeMem(0xcb0f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x8a13);
        EXPECT(gbc.pc(), 0xcb11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb0f), 0xcb);
        EXPECT(gbc.readMem(0xcb10), 0xcf);
        // CB CF 00DD
        gbc.setState(0xd4d, 0x1bec, 0xcba0, 0x6f5f, 0x1de5, 0xb3fb, 0x0, 0x1);
        gbc.writeMem(0xd4d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x1bec);
        EXPECT(gbc.pc(), 0xd4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 00DE
        gbc.setState(0x36d0, 0x8f8c, 0x5160, 0x8875, 0xa099, 0xe270, 0x0, 0x1);
        gbc.writeMem(0x36d0, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x8f8c);
        EXPECT(gbc.pc(), 0x36d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 00DF
        gbc.setState(0xa86f, 0xb83f, 0xf660, 0xadae, 0x77a0, 0xad, 0x0, 0x1);
        gbc.writeMem(0xa86f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xb83f);
        EXPECT(gbc.pc(), 0xa871);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa86f), 0xcb);
        EXPECT(gbc.readMem(0xa870), 0xcf);
        // CB CF 00E0
        gbc.setState(0xb86d, 0x7886, 0x62f0, 0x17b8, 0x2f9a, 0x7e88, 0x0, 0x0);
        gbc.writeMem(0xb86d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x7886);
        EXPECT(gbc.pc(), 0xb86f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb86d), 0xcb);
        EXPECT(gbc.readMem(0xb86e), 0xcf);
        // CB CF 00E1
        gbc.setState(0xcba2, 0xb200, 0xb8b0, 0x41e8, 0xf603, 0x2b41, 0x1, 0x1);
        gbc.writeMem(0xcba2, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xb200);
        EXPECT(gbc.pc(), 0xcba4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcba2), 0xcb);
        EXPECT(gbc.readMem(0xcba3), 0xcf);
        // CB CF 00E2
        gbc.setState(0xb014, 0xdd7b, 0xc5e0, 0x1a7d, 0x78dc, 0x4a77, 0x1, 0x0);
        gbc.writeMem(0xb014, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xdd7b);
        EXPECT(gbc.pc(), 0xb016);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb014), 0xcb);
        EXPECT(gbc.readMem(0xb015), 0xcf);
        // CB CF 00E3
        gbc.setState(0x1495, 0xcdc9, 0x7ca0, 0xf604, 0x824c, 0xfadf, 0x0, 0x0);
        gbc.writeMem(0x1495, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xcdc9);
        EXPECT(gbc.pc(), 0x1497);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 00E4
        gbc.setState(0x3fed, 0xf30b, 0xea0, 0x38b1, 0xa486, 0xd67, 0x0, 0x1);
        gbc.writeMem(0x3fed, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xf30b);
        EXPECT(gbc.pc(), 0x3fef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 00E6
        gbc.setState(0xc19, 0x21a, 0xdc30, 0x53ce, 0x8631, 0x3d42, 0x1, 0x0);
        gbc.writeMem(0xc19, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x21a);
        EXPECT(gbc.pc(), 0xc1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 00E7
        gbc.setState(0x1798, 0x826c, 0x9710, 0xd3d, 0xef21, 0x31da, 0x0, 0x1);
        gbc.writeMem(0x1798, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x826c);
        EXPECT(gbc.pc(), 0x179a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 00E8
        gbc.setState(0xd2b5, 0xa532, 0xd570, 0xf925, 0xe37b, 0x3be8, 0x0, 0x0);
        gbc.writeMem(0xd2b5, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xa532);
        EXPECT(gbc.pc(), 0xd2b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2b5), 0xcb);
        EXPECT(gbc.readMem(0xd2b6), 0xcf);
        // CB CF 00E9
        gbc.setState(0x8f0f, 0xd554, 0x6e60, 0x35de, 0xf3b3, 0xb583, 0x0, 0x0);
        gbc.writeMem(0x8f0f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd554);
        EXPECT(gbc.pc(), 0x8f11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f0f), 0xcb);
        EXPECT(gbc.readMem(0x8f10), 0xcf);
        // CB CF 00EA
        gbc.setState(0x4fa, 0x25b2, 0xc810, 0xed0, 0x3a36, 0xf275, 0x0, 0x0);
        gbc.writeMem(0x4fa, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x25b2);
        EXPECT(gbc.pc(), 0x4fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 00EB
        gbc.setState(0xe303, 0xcc71, 0x3d80, 0x875, 0xe20b, 0x25c4, 0x0, 0x0);
        gbc.writeMem(0xe303, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xcc71);
        EXPECT(gbc.pc(), 0xe305);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe303), 0xcb);
        EXPECT(gbc.readMem(0xe304), 0xcf);
        // CB CF 00EC
        gbc.setState(0x921f, 0xeec3, 0x8170, 0x75ce, 0x11a, 0x5a13, 0x1, 0x1);
        gbc.writeMem(0x921f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xeec3);
        EXPECT(gbc.pc(), 0x9221);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x921f), 0xcb);
        EXPECT(gbc.readMem(0x9220), 0xcf);
        // CB CF 00ED
        gbc.setState(0xa9db, 0xa11b, 0x55d0, 0xd17a, 0x21df, 0x8a1b, 0x1, 0x0);
        gbc.writeMem(0xa9db, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xa11b);
        EXPECT(gbc.pc(), 0xa9dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9db), 0xcb);
        EXPECT(gbc.readMem(0xa9dc), 0xcf);
        // CB CF 00EE
        gbc.setState(0xd82a, 0x4d86, 0x5580, 0x1c1f, 0x48e3, 0x1628, 0x1, 0x1);
        gbc.writeMem(0xd82a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x4d86);
        EXPECT(gbc.pc(), 0xd82c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd82a), 0xcb);
        EXPECT(gbc.readMem(0xd82b), 0xcf);
        // CB CF 00F0
        gbc.setState(0x5226, 0xadba, 0xded0, 0x24d7, 0x1b82, 0x1819, 0x0, 0x0);
        gbc.writeMem(0x5226, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xadba);
        EXPECT(gbc.pc(), 0x5228);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 00F1
        gbc.setState(0x6c09, 0x4b01, 0x98f0, 0x66e8, 0xd67d, 0x8446, 0x1, 0x1);
        gbc.writeMem(0x6c09, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x4b01);
        EXPECT(gbc.pc(), 0x6c0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 00F2
        gbc.setState(0xb56a, 0x14e9, 0xbf40, 0xa5e8, 0xa6f3, 0x467c, 0x0, 0x0);
        gbc.writeMem(0xb56a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x14e9);
        EXPECT(gbc.pc(), 0xb56c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb56a), 0xcb);
        EXPECT(gbc.readMem(0xb56b), 0xcf);
        // CB CF 00F3
        gbc.setState(0xb557, 0x1d5f, 0xaa00, 0x849d, 0xa063, 0xb74a, 0x1, 0x1);
        gbc.writeMem(0xb557, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x1d5f);
        EXPECT(gbc.pc(), 0xb559);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb557), 0xcb);
        EXPECT(gbc.readMem(0xb558), 0xcf);
        // CB CF 00F4
        gbc.setState(0xd700, 0x8594, 0x4190, 0x350, 0x118c, 0xcbfc, 0x1, 0x1);
        gbc.writeMem(0xd700, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x8594);
        EXPECT(gbc.pc(), 0xd702);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd700), 0xcb);
        EXPECT(gbc.readMem(0xd701), 0xcf);
        // CB CF 00F5
        gbc.setState(0xdbc0, 0x1b07, 0x4bb0, 0x8849, 0x56d7, 0x1e04, 0x0, 0x1);
        gbc.writeMem(0xdbc0, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x1b07);
        EXPECT(gbc.pc(), 0xdbc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbc0), 0xcb);
        EXPECT(gbc.readMem(0xdbc1), 0xcf);
        // CB CF 00F6
        gbc.setState(0xc0d6, 0xb52c, 0x2c80, 0xbb7d, 0xefbf, 0x6a16, 0x0, 0x0);
        gbc.writeMem(0xc0d6, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb52c);
        EXPECT(gbc.pc(), 0xc0d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0d6), 0xcb);
        EXPECT(gbc.readMem(0xc0d7), 0xcf);
        // CB CF 00F7
        gbc.setState(0xcb86, 0x8322, 0x6f70, 0x5e6a, 0x942a, 0x9609, 0x1, 0x1);
        gbc.writeMem(0xcb86, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x8322);
        EXPECT(gbc.pc(), 0xcb88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb86), 0xcb);
        EXPECT(gbc.readMem(0xcb87), 0xcf);
        // CB CF 00F8
        gbc.setState(0xad1c, 0xdfdb, 0x4900, 0x7352, 0x6b96, 0x6431, 0x1, 0x1);
        gbc.writeMem(0xad1c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xdfdb);
        EXPECT(gbc.pc(), 0xad1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad1c), 0xcb);
        EXPECT(gbc.readMem(0xad1d), 0xcf);
        // CB CF 00F9
        gbc.setState(0xa0b7, 0x3d57, 0xab30, 0xddc5, 0x7173, 0x6b4e, 0x1, 0x1);
        gbc.writeMem(0xa0b7, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x3d57);
        EXPECT(gbc.pc(), 0xa0b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0b7), 0xcb);
        EXPECT(gbc.readMem(0xa0b8), 0xcf);
        // CB CF 00FC
        gbc.setState(0x4eea, 0x3777, 0x9540, 0x68d3, 0x2d7a, 0x7a11, 0x1, 0x1);
        gbc.writeMem(0x4eea, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x3777);
        EXPECT(gbc.pc(), 0x4eec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 00FE
        gbc.setState(0xda3a, 0xbe81, 0x7ee0, 0x9081, 0xa75c, 0x7a32, 0x0, 0x0);
        gbc.writeMem(0xda3a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xbe81);
        EXPECT(gbc.pc(), 0xda3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda3a), 0xcb);
        EXPECT(gbc.readMem(0xda3b), 0xcf);
        // CB CF 00FF
        gbc.setState(0x14ed, 0xed0a, 0x100, 0x44b8, 0x10e, 0x2d18, 0x1, 0x1);
        gbc.writeMem(0x14ed, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xed0a);
        EXPECT(gbc.pc(), 0x14ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0100
        gbc.setState(0x7eaa, 0x6442, 0xba10, 0x160a, 0x6f04, 0xa5ab, 0x0, 0x1);
        gbc.writeMem(0x7eaa, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6442);
        EXPECT(gbc.pc(), 0x7eac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0101
        gbc.setState(0x29af, 0x469d, 0xd060, 0x9c20, 0x7178, 0xfa0e, 0x1, 0x1);
        gbc.writeMem(0x29af, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x469d);
        EXPECT(gbc.pc(), 0x29b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0102
        gbc.setState(0x3caa, 0x5a76, 0x5d10, 0xcd75, 0x93a2, 0xeea9, 0x1, 0x0);
        gbc.writeMem(0x3caa, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x5a76);
        EXPECT(gbc.pc(), 0x3cac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0103
        gbc.setState(0xe967, 0x5fd4, 0x8730, 0xab93, 0xe2bc, 0x612f, 0x1, 0x1);
        gbc.writeMem(0xe967, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x5fd4);
        EXPECT(gbc.pc(), 0xe969);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe967), 0xcb);
        EXPECT(gbc.readMem(0xe968), 0xcf);
        // CB CF 0104
        gbc.setState(0x9126, 0xf86c, 0xca90, 0x27a8, 0x988b, 0xf889, 0x0, 0x1);
        gbc.writeMem(0x9126, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xf86c);
        EXPECT(gbc.pc(), 0x9128);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9126), 0xcb);
        EXPECT(gbc.readMem(0x9127), 0xcf);
        // CB CF 0105
        gbc.setState(0xb466, 0xa63, 0x3460, 0x7dd6, 0x7246, 0x8acc, 0x0, 0x0);
        gbc.writeMem(0xb466, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xa63);
        EXPECT(gbc.pc(), 0xb468);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb466), 0xcb);
        EXPECT(gbc.readMem(0xb467), 0xcf);
        // CB CF 0106
        gbc.setState(0x56ba, 0xfad9, 0x7e50, 0xdec, 0x3492, 0x7da4, 0x0, 0x1);
        gbc.writeMem(0x56ba, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xfad9);
        EXPECT(gbc.pc(), 0x56bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0107
        gbc.setState(0xbb99, 0x50c, 0x100, 0xa361, 0x4167, 0xf7db, 0x0, 0x1);
        gbc.writeMem(0xbb99, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x50c);
        EXPECT(gbc.pc(), 0xbb9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb99), 0xcb);
        EXPECT(gbc.readMem(0xbb9a), 0xcf);
        // CB CF 0108
        gbc.setState(0x1ab, 0x66f, 0x6cb0, 0x737d, 0xf41, 0xaf15, 0x0, 0x0);
        gbc.writeMem(0x1ab, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x66f);
        EXPECT(gbc.pc(), 0x1ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0109
        gbc.setState(0x1340, 0xac40, 0xc410, 0xc756, 0x6205, 0x9f3, 0x0, 0x0);
        gbc.writeMem(0x1340, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xac40);
        EXPECT(gbc.pc(), 0x1342);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 010A
        gbc.setState(0x26a2, 0xac1f, 0x93c0, 0xf066, 0xf824, 0xc289, 0x1, 0x0);
        gbc.writeMem(0x26a2, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xac1f);
        EXPECT(gbc.pc(), 0x26a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 010B
        gbc.setState(0xd17c, 0xfadc, 0xa4a0, 0x4101, 0x670c, 0x765d, 0x1, 0x0);
        gbc.writeMem(0xd17c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xfadc);
        EXPECT(gbc.pc(), 0xd17e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd17c), 0xcb);
        EXPECT(gbc.readMem(0xd17d), 0xcf);
        // CB CF 010C
        gbc.setState(0x1d27, 0xb114, 0xe3e0, 0x2d64, 0xc760, 0xce36, 0x0, 0x1);
        gbc.writeMem(0x1d27, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xb114);
        EXPECT(gbc.pc(), 0x1d29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 010D
        gbc.setState(0x2a07, 0x3efa, 0xb10, 0x7ab7, 0xae76, 0x48f9, 0x1, 0x0);
        gbc.writeMem(0x2a07, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x3efa);
        EXPECT(gbc.pc(), 0x2a09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 010E
        gbc.setState(0x29ae, 0x9ae7, 0x6110, 0x87c0, 0x73a7, 0x4904, 0x1, 0x1);
        gbc.writeMem(0x29ae, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x9ae7);
        EXPECT(gbc.pc(), 0x29b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 010F
        gbc.setState(0xdd1f, 0xe310, 0x7bb0, 0xfb7b, 0xf1cb, 0x4f91, 0x1, 0x1);
        gbc.writeMem(0xdd1f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xe310);
        EXPECT(gbc.pc(), 0xdd21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd1f), 0xcb);
        EXPECT(gbc.readMem(0xdd20), 0xcf);
        // CB CF 0110
        gbc.setState(0x33d0, 0xa59, 0xbd40, 0x7297, 0x1987, 0x3524, 0x0, 0x0);
        gbc.writeMem(0x33d0, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xa59);
        EXPECT(gbc.pc(), 0x33d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0111
        gbc.setState(0xdc90, 0x9e6b, 0xda10, 0xcc40, 0x51e0, 0xd6d7, 0x1, 0x1);
        gbc.writeMem(0xdc90, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x9e6b);
        EXPECT(gbc.pc(), 0xdc92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc90), 0xcb);
        EXPECT(gbc.readMem(0xdc91), 0xcf);
        // CB CF 0112
        gbc.setState(0x28c5, 0x7cea, 0xfb20, 0x76c2, 0xcbc2, 0xa3d0, 0x1, 0x1);
        gbc.writeMem(0x28c5, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x7cea);
        EXPECT(gbc.pc(), 0x28c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0113
        gbc.setState(0x6e9a, 0x3660, 0xfff0, 0xb7e9, 0x3d76, 0xa913, 0x0, 0x0);
        gbc.writeMem(0x6e9a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x3660);
        EXPECT(gbc.pc(), 0x6e9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0114
        gbc.setState(0xeea5, 0x109d, 0x14a0, 0xeb95, 0x9560, 0x9728, 0x1, 0x0);
        gbc.writeMem(0xeea5, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x109d);
        EXPECT(gbc.pc(), 0xeea7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeea5), 0xcb);
        EXPECT(gbc.readMem(0xeea6), 0xcf);
        // CB CF 0115
        gbc.setState(0xbfe0, 0xf152, 0xd50, 0xadb3, 0xb07d, 0x5f6b, 0x1, 0x1);
        gbc.writeMem(0xbfe0, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xf152);
        EXPECT(gbc.pc(), 0xbfe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfe0), 0xcb);
        EXPECT(gbc.readMem(0xbfe1), 0xcf);
        // CB CF 0116
        gbc.setState(0x3d51, 0x6d8c, 0xaf00, 0x3854, 0x578e, 0xb0ed, 0x0, 0x1);
        gbc.writeMem(0x3d51, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x6d8c);
        EXPECT(gbc.pc(), 0x3d53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0117
        gbc.setState(0xbfaa, 0xafe2, 0xd4a0, 0x3107, 0x7a19, 0xe7b5, 0x0, 0x0);
        gbc.writeMem(0xbfaa, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xafe2);
        EXPECT(gbc.pc(), 0xbfac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfaa), 0xcb);
        EXPECT(gbc.readMem(0xbfab), 0xcf);
        // CB CF 0118
        gbc.setState(0xdab2, 0x746e, 0x7420, 0xf439, 0x6bbe, 0x9493, 0x0, 0x1);
        gbc.writeMem(0xdab2, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x746e);
        EXPECT(gbc.pc(), 0xdab4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdab2), 0xcb);
        EXPECT(gbc.readMem(0xdab3), 0xcf);
        // CB CF 0119
        gbc.setState(0xd20d, 0x8da0, 0xd0c0, 0xb84c, 0x8879, 0x986f, 0x0, 0x0);
        gbc.writeMem(0xd20d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x8da0);
        EXPECT(gbc.pc(), 0xd20f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd20d), 0xcb);
        EXPECT(gbc.readMem(0xd20e), 0xcf);
        // CB CF 011A
        gbc.setState(0xd4af, 0x36e5, 0xf8b0, 0xc788, 0xe58c, 0xb855, 0x1, 0x0);
        gbc.writeMem(0xd4af, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x36e5);
        EXPECT(gbc.pc(), 0xd4b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4af), 0xcb);
        EXPECT(gbc.readMem(0xd4b0), 0xcf);
        // CB CF 011B
        gbc.setState(0x46c5, 0x2f3d, 0x7020, 0x16b5, 0x5ab1, 0x2589, 0x1, 0x0);
        gbc.writeMem(0x46c5, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x2f3d);
        EXPECT(gbc.pc(), 0x46c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 011C
        gbc.setState(0x8c3f, 0x598a, 0xeae0, 0xaea3, 0x5859, 0xae31, 0x1, 0x0);
        gbc.writeMem(0x8c3f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x598a);
        EXPECT(gbc.pc(), 0x8c41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c3f), 0xcb);
        EXPECT(gbc.readMem(0x8c40), 0xcf);
        // CB CF 011D
        gbc.setState(0x3198, 0x26b5, 0x3730, 0x93c6, 0x510c, 0x4c61, 0x0, 0x1);
        gbc.writeMem(0x3198, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x26b5);
        EXPECT(gbc.pc(), 0x319a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 011E
        gbc.setState(0x8f0f, 0x5149, 0xf6c0, 0xbcaa, 0xa511, 0x3275, 0x0, 0x1);
        gbc.writeMem(0x8f0f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x5149);
        EXPECT(gbc.pc(), 0x8f11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f0f), 0xcb);
        EXPECT(gbc.readMem(0x8f10), 0xcf);
        // CB CF 011F
        gbc.setState(0xef4, 0x97f4, 0xe6f0, 0x7674, 0xb103, 0xd654, 0x1, 0x1);
        gbc.writeMem(0xef4, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x97f4);
        EXPECT(gbc.pc(), 0xef6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0120
        gbc.setState(0xed90, 0x3f69, 0xbfd0, 0xba6c, 0x99e6, 0xba6c, 0x1, 0x0);
        gbc.writeMem(0xed90, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x3f69);
        EXPECT(gbc.pc(), 0xed92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed90), 0xcb);
        EXPECT(gbc.readMem(0xed91), 0xcf);
        // CB CF 0121
        gbc.setState(0xb141, 0x5cf4, 0x92d0, 0x9d50, 0x74eb, 0x977d, 0x1, 0x0);
        gbc.writeMem(0xb141, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x5cf4);
        EXPECT(gbc.pc(), 0xb143);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb141), 0xcb);
        EXPECT(gbc.readMem(0xb142), 0xcf);
        // CB CF 0122
        gbc.setState(0xd1f3, 0xd026, 0xafb0, 0xfc2f, 0x59d5, 0xf18e, 0x1, 0x1);
        gbc.writeMem(0xd1f3, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd026);
        EXPECT(gbc.pc(), 0xd1f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1f3), 0xcb);
        EXPECT(gbc.readMem(0xd1f4), 0xcf);
        // CB CF 0123
        gbc.setState(0x2237, 0x8511, 0x990, 0x2aa1, 0x677b, 0x2551, 0x0, 0x0);
        gbc.writeMem(0x2237, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x8511);
        EXPECT(gbc.pc(), 0x2239);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0124
        gbc.setState(0x1cda, 0xd680, 0x9090, 0x9e45, 0xcfee, 0x276b, 0x1, 0x1);
        gbc.writeMem(0x1cda, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xd680);
        EXPECT(gbc.pc(), 0x1cdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0125
        gbc.setState(0x1cdf, 0x604a, 0xb6a0, 0x7493, 0x7f54, 0xb19b, 0x1, 0x1);
        gbc.writeMem(0x1cdf, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x604a);
        EXPECT(gbc.pc(), 0x1ce1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0126
        gbc.setState(0xa798, 0x7046, 0xa810, 0xed9a, 0x8575, 0x3fc8, 0x1, 0x0);
        gbc.writeMem(0xa798, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x7046);
        EXPECT(gbc.pc(), 0xa79a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa798), 0xcb);
        EXPECT(gbc.readMem(0xa799), 0xcf);
        // CB CF 0127
        gbc.setState(0x951e, 0xccf3, 0x3570, 0x47ae, 0xa9f2, 0xebbb, 0x1, 0x1);
        gbc.writeMem(0x951e, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xccf3);
        EXPECT(gbc.pc(), 0x9520);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x951e), 0xcb);
        EXPECT(gbc.readMem(0x951f), 0xcf);
        // CB CF 0128
        gbc.setState(0xd17f, 0x3d22, 0x3ed0, 0xeea4, 0x2f0c, 0x2371, 0x1, 0x1);
        gbc.writeMem(0xd17f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x3d22);
        EXPECT(gbc.pc(), 0xd181);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd17f), 0xcb);
        EXPECT(gbc.readMem(0xd180), 0xcf);
        // CB CF 0129
        gbc.setState(0x74f, 0x4d36, 0x5910, 0x39e2, 0x94dd, 0xc99c, 0x0, 0x1);
        gbc.writeMem(0x74f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x4d36);
        EXPECT(gbc.pc(), 0x751);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 012A
        gbc.setState(0x6082, 0x26b3, 0x4910, 0x74cb, 0xb206, 0x40ce, 0x1, 0x1);
        gbc.writeMem(0x6082, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x26b3);
        EXPECT(gbc.pc(), 0x6084);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 012B
        gbc.setState(0xbec1, 0x649f, 0x3120, 0xbeeb, 0x1b02, 0x645e, 0x1, 0x1);
        gbc.writeMem(0xbec1, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x649f);
        EXPECT(gbc.pc(), 0xbec3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbec1), 0xcb);
        EXPECT(gbc.readMem(0xbec2), 0xcf);
        // CB CF 012C
        gbc.setState(0x25a, 0x4d8f, 0xe660, 0xa1a3, 0x6195, 0xc3cc, 0x0, 0x1);
        gbc.writeMem(0x25a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x4d8f);
        EXPECT(gbc.pc(), 0x25c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 012D
        gbc.setState(0xad43, 0xdce6, 0xfd80, 0xafbd, 0xc422, 0x7bbf, 0x0, 0x1);
        gbc.writeMem(0xad43, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xdce6);
        EXPECT(gbc.pc(), 0xad45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad43), 0xcb);
        EXPECT(gbc.readMem(0xad44), 0xcf);
        // CB CF 012E
        gbc.setState(0xaa7e, 0x7199, 0xff70, 0xe864, 0xf29d, 0x4f6f, 0x1, 0x0);
        gbc.writeMem(0xaa7e, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x7199);
        EXPECT(gbc.pc(), 0xaa80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa7e), 0xcb);
        EXPECT(gbc.readMem(0xaa7f), 0xcf);
        // CB CF 012F
        gbc.setState(0xb810, 0xf44b, 0x5bd0, 0x951b, 0x3e39, 0xbbf1, 0x1, 0x0);
        gbc.writeMem(0xb810, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xf44b);
        EXPECT(gbc.pc(), 0xb812);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb810), 0xcb);
        EXPECT(gbc.readMem(0xb811), 0xcf);
        // CB CF 0130
        gbc.setState(0xa07c, 0x136b, 0x6c60, 0x4068, 0xe5d4, 0x569c, 0x1, 0x0);
        gbc.writeMem(0xa07c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x136b);
        EXPECT(gbc.pc(), 0xa07e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa07c), 0xcb);
        EXPECT(gbc.readMem(0xa07d), 0xcf);
        // CB CF 0131
        gbc.setState(0xe924, 0xcb7e, 0x3a90, 0xc81a, 0x8a83, 0x8293, 0x1, 0x1);
        gbc.writeMem(0xe924, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xcb7e);
        EXPECT(gbc.pc(), 0xe926);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe924), 0xcb);
        EXPECT(gbc.readMem(0xe925), 0xcf);
        // CB CF 0132
        gbc.setState(0x48cd, 0x5a28, 0x6e70, 0xae4a, 0x776d, 0x1f37, 0x0, 0x1);
        gbc.writeMem(0x48cd, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x5a28);
        EXPECT(gbc.pc(), 0x48cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0133
        gbc.setState(0x2a3d, 0x1ba9, 0x4000, 0x6520, 0x97a8, 0x67bd, 0x1, 0x0);
        gbc.writeMem(0x2a3d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1ba9);
        EXPECT(gbc.pc(), 0x2a3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0134
        gbc.setState(0x1788, 0xaa7b, 0xdbf0, 0x92fd, 0xc8dd, 0xa892, 0x0, 0x1);
        gbc.writeMem(0x1788, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xaa7b);
        EXPECT(gbc.pc(), 0x178a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0135
        gbc.setState(0x2d17, 0x5ac8, 0xf250, 0xbb16, 0x7199, 0x2820, 0x1, 0x0);
        gbc.writeMem(0x2d17, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x5ac8);
        EXPECT(gbc.pc(), 0x2d19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0136
        gbc.setState(0x8ecb, 0x5ed3, 0x5720, 0xace6, 0x8338, 0xb438, 0x0, 0x0);
        gbc.writeMem(0x8ecb, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x5ed3);
        EXPECT(gbc.pc(), 0x8ecd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ecb), 0xcb);
        EXPECT(gbc.readMem(0x8ecc), 0xcf);
        // CB CF 0137
        gbc.setState(0x5e2, 0x3599, 0x5970, 0x8ec2, 0x2e7e, 0x2e3b, 0x0, 0x1);
        gbc.writeMem(0x5e2, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x3599);
        EXPECT(gbc.pc(), 0x5e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0138
        gbc.setState(0xc237, 0xa417, 0x6cc0, 0x4724, 0xe804, 0x1fed, 0x0, 0x0);
        gbc.writeMem(0xc237, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xa417);
        EXPECT(gbc.pc(), 0xc239);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc237), 0xcb);
        EXPECT(gbc.readMem(0xc238), 0xcf);
        // CB CF 0139
        gbc.setState(0x274, 0xc828, 0x4470, 0x6546, 0xdcbc, 0x9083, 0x0, 0x0);
        gbc.writeMem(0x274, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xc828);
        EXPECT(gbc.pc(), 0x276);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 013A
        gbc.setState(0x74b6, 0x1c89, 0x9dd0, 0x63b9, 0x8220, 0xc082, 0x1, 0x1);
        gbc.writeMem(0x74b6, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x1c89);
        EXPECT(gbc.pc(), 0x74b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 013B
        gbc.setState(0x36d1, 0x5ae0, 0xf290, 0x6987, 0x8c2b, 0xdd1c, 0x1, 0x0);
        gbc.writeMem(0x36d1, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x5ae0);
        EXPECT(gbc.pc(), 0x36d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 013C
        gbc.setState(0x5fcd, 0x5463, 0xa2a0, 0x4cca, 0x9507, 0x59b5, 0x0, 0x0);
        gbc.writeMem(0x5fcd, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x5463);
        EXPECT(gbc.pc(), 0x5fcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 013D
        gbc.setState(0x3271, 0x48b4, 0xcc20, 0x52a2, 0x1ea7, 0x6240, 0x0, 0x1);
        gbc.writeMem(0x3271, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x48b4);
        EXPECT(gbc.pc(), 0x3273);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 013E
        gbc.setState(0x100c, 0x1237, 0xdd20, 0x9eff, 0x4e1b, 0xe71a, 0x1, 0x0);
        gbc.writeMem(0x100c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x1237);
        EXPECT(gbc.pc(), 0x100e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 013F
        gbc.setState(0x910a, 0x4d68, 0x9f0, 0xf99a, 0x9aa, 0xa5cd, 0x1, 0x1);
        gbc.writeMem(0x910a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x4d68);
        EXPECT(gbc.pc(), 0x910c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x910a), 0xcb);
        EXPECT(gbc.readMem(0x910b), 0xcf);
        // CB CF 0140
        gbc.setState(0x7e43, 0xb3d3, 0x6c30, 0x6901, 0x8d78, 0xcc1, 0x0, 0x1);
        gbc.writeMem(0x7e43, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb3d3);
        EXPECT(gbc.pc(), 0x7e45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0141
        gbc.setState(0xdbb9, 0xc30e, 0x6e40, 0x64ea, 0x971f, 0x4961, 0x1, 0x1);
        gbc.writeMem(0xdbb9, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xc30e);
        EXPECT(gbc.pc(), 0xdbbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbb9), 0xcb);
        EXPECT(gbc.readMem(0xdbba), 0xcf);
        // CB CF 0142
        gbc.setState(0x3fa4, 0xdd7a, 0x74a0, 0x3e40, 0xffce, 0xb58c, 0x0, 0x1);
        gbc.writeMem(0x3fa4, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xdd7a);
        EXPECT(gbc.pc(), 0x3fa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0144
        gbc.setState(0x7e46, 0xfb2f, 0xb460, 0x9735, 0xcb75, 0x3793, 0x0, 0x1);
        gbc.writeMem(0x7e46, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xfb2f);
        EXPECT(gbc.pc(), 0x7e48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0146
        gbc.setState(0x567c, 0x760f, 0x9930, 0xdd76, 0x9be4, 0x38d2, 0x1, 0x1);
        gbc.writeMem(0x567c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x760f);
        EXPECT(gbc.pc(), 0x567e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0147
        gbc.setState(0xa103, 0xc563, 0xf0d0, 0x6b29, 0xfbf1, 0x39d7, 0x0, 0x0);
        gbc.writeMem(0xa103, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xc563);
        EXPECT(gbc.pc(), 0xa105);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa103), 0xcb);
        EXPECT(gbc.readMem(0xa104), 0xcf);
        // CB CF 0148
        gbc.setState(0xc8b0, 0x30bf, 0xdad0, 0x5ddb, 0x7289, 0x9be3, 0x1, 0x1);
        gbc.writeMem(0xc8b0, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x30bf);
        EXPECT(gbc.pc(), 0xc8b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8b0), 0xcb);
        EXPECT(gbc.readMem(0xc8b1), 0xcf);
        // CB CF 0149
        gbc.setState(0x3555, 0xf25e, 0xbf60, 0x26dd, 0x609b, 0x2fa1, 0x1, 0x0);
        gbc.writeMem(0x3555, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xf25e);
        EXPECT(gbc.pc(), 0x3557);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 014C
        gbc.setState(0xa399, 0x215e, 0x5c50, 0xa89d, 0xf976, 0x3430, 0x1, 0x1);
        gbc.writeMem(0xa399, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x215e);
        EXPECT(gbc.pc(), 0xa39b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa399), 0xcb);
        EXPECT(gbc.readMem(0xa39a), 0xcf);
        // CB CF 014D
        gbc.setState(0x5a1f, 0x55a, 0x9ff0, 0x86dc, 0x6bdc, 0x921a, 0x1, 0x1);
        gbc.writeMem(0x5a1f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x55a);
        EXPECT(gbc.pc(), 0x5a21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 014E
        gbc.setState(0xb428, 0x8d74, 0xa360, 0x9f1a, 0x6310, 0xac53, 0x0, 0x0);
        gbc.writeMem(0xb428, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x8d74);
        EXPECT(gbc.pc(), 0xb42a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb428), 0xcb);
        EXPECT(gbc.readMem(0xb429), 0xcf);
        // CB CF 014F
        gbc.setState(0xc2f7, 0x9b4b, 0x13b0, 0x7d7d, 0x9816, 0xbd02, 0x0, 0x1);
        gbc.writeMem(0xc2f7, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x9b4b);
        EXPECT(gbc.pc(), 0xc2f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2f7), 0xcb);
        EXPECT(gbc.readMem(0xc2f8), 0xcf);
        // CB CF 0150
        gbc.setState(0x86b1, 0xc230, 0xea20, 0xdd67, 0xe8e6, 0x3e51, 0x0, 0x0);
        gbc.writeMem(0x86b1, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xc230);
        EXPECT(gbc.pc(), 0x86b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86b1), 0xcb);
        EXPECT(gbc.readMem(0x86b2), 0xcf);
        // CB CF 0151
        gbc.setState(0x97f9, 0x4625, 0x5e30, 0x66ce, 0xee82, 0xd4f0, 0x0, 0x1);
        gbc.writeMem(0x97f9, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x4625);
        EXPECT(gbc.pc(), 0x97fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97f9), 0xcb);
        EXPECT(gbc.readMem(0x97fa), 0xcf);
        // CB CF 0152
        gbc.setState(0xedae, 0x409a, 0x7f80, 0xb92, 0x471d, 0x8efa, 0x0, 0x1);
        gbc.writeMem(0xedae, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x409a);
        EXPECT(gbc.pc(), 0xedb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedae), 0xcb);
        EXPECT(gbc.readMem(0xedaf), 0xcf);
        // CB CF 0153
        gbc.setState(0x293a, 0xeb96, 0x17d0, 0x180a, 0xbd6e, 0xf2de, 0x1, 0x0);
        gbc.writeMem(0x293a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xeb96);
        EXPECT(gbc.pc(), 0x293c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0154
        gbc.setState(0x7908, 0x161, 0xce20, 0x44ea, 0x1af, 0xb5b9, 0x1, 0x1);
        gbc.writeMem(0x7908, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x161);
        EXPECT(gbc.pc(), 0x790a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0155
        gbc.setState(0x356d, 0x44e6, 0xe100, 0xf218, 0xb4b1, 0xb2a, 0x0, 0x1);
        gbc.writeMem(0x356d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x44e6);
        EXPECT(gbc.pc(), 0x356f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0156
        gbc.setState(0x3b6f, 0x4511, 0xd2e0, 0x9de8, 0xc547, 0xec59, 0x1, 0x1);
        gbc.writeMem(0x3b6f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x4511);
        EXPECT(gbc.pc(), 0x3b71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0158
        gbc.setState(0x566a, 0x22d5, 0xa680, 0x4fc1, 0x723d, 0xc715, 0x1, 0x1);
        gbc.writeMem(0x566a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x22d5);
        EXPECT(gbc.pc(), 0x566c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0159
        gbc.setState(0x41dc, 0xa5ad, 0x9c00, 0x67d0, 0x1771, 0x455a, 0x0, 0x1);
        gbc.writeMem(0x41dc, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa5ad);
        EXPECT(gbc.pc(), 0x41de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 015B
        gbc.setState(0x6de5, 0xe60f, 0xa930, 0x7dcd, 0x2881, 0x6074, 0x0, 0x1);
        gbc.writeMem(0x6de5, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xe60f);
        EXPECT(gbc.pc(), 0x6de7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 015C
        gbc.setState(0x3106, 0xae6a, 0x6fd0, 0x668e, 0x291e, 0x6bb0, 0x1, 0x1);
        gbc.writeMem(0x3106, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xae6a);
        EXPECT(gbc.pc(), 0x3108);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 015D
        gbc.setState(0x3550, 0xa4aa, 0x3900, 0x94ef, 0xe149, 0xf317, 0x1, 0x0);
        gbc.writeMem(0x3550, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xa4aa);
        EXPECT(gbc.pc(), 0x3552);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 015E
        gbc.setState(0x55b4, 0xcddd, 0x2240, 0x2c3f, 0xb34a, 0x6d8b, 0x0, 0x0);
        gbc.writeMem(0x55b4, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xcddd);
        EXPECT(gbc.pc(), 0x55b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 015F
        gbc.setState(0x2285, 0xb0db, 0xea60, 0xb1cc, 0xa2f1, 0xd971, 0x0, 0x0);
        gbc.writeMem(0x2285, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xb0db);
        EXPECT(gbc.pc(), 0x2287);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0160
        gbc.setState(0x8d82, 0x9476, 0x6dc0, 0x26eb, 0xe89e, 0x8385, 0x0, 0x1);
        gbc.writeMem(0x8d82, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x9476);
        EXPECT(gbc.pc(), 0x8d84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d82), 0xcb);
        EXPECT(gbc.readMem(0x8d83), 0xcf);
        // CB CF 0161
        gbc.setState(0xd9ba, 0x71d7, 0x4880, 0xbb02, 0x9dc3, 0xef06, 0x1, 0x0);
        gbc.writeMem(0xd9ba, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x71d7);
        EXPECT(gbc.pc(), 0xd9bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9ba), 0xcb);
        EXPECT(gbc.readMem(0xd9bb), 0xcf);
        // CB CF 0162
        gbc.setState(0xd25, 0x512e, 0xbc80, 0xff80, 0xc266, 0xd4e6, 0x1, 0x0);
        gbc.writeMem(0xd25, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x512e);
        EXPECT(gbc.pc(), 0xd27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0163
        gbc.setState(0x1ef3, 0x8592, 0x22d0, 0x5bb, 0x6932, 0xa3f5, 0x0, 0x0);
        gbc.writeMem(0x1ef3, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x8592);
        EXPECT(gbc.pc(), 0x1ef5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0164
        gbc.setState(0x969, 0xa0c3, 0x990, 0x2e6c, 0x1587, 0x46cb, 0x1, 0x1);
        gbc.writeMem(0x969, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa0c3);
        EXPECT(gbc.pc(), 0x96b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0165
        gbc.setState(0x8462, 0xfd78, 0xf140, 0x2c55, 0x9b1, 0x8c4a, 0x0, 0x0);
        gbc.writeMem(0x8462, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xfd78);
        EXPECT(gbc.pc(), 0x8464);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8462), 0xcb);
        EXPECT(gbc.readMem(0x8463), 0xcf);
        // CB CF 0166
        gbc.setState(0x3d53, 0xa292, 0xe10, 0x6b1d, 0x4e51, 0x9376, 0x0, 0x1);
        gbc.writeMem(0x3d53, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xa292);
        EXPECT(gbc.pc(), 0x3d55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0167
        gbc.setState(0xe774, 0xd991, 0x5810, 0x5e2c, 0x2bff, 0x451c, 0x1, 0x1);
        gbc.writeMem(0xe774, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd991);
        EXPECT(gbc.pc(), 0xe776);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe774), 0xcb);
        EXPECT(gbc.readMem(0xe775), 0xcf);
        // CB CF 0168
        gbc.setState(0x3436, 0xa37f, 0xf510, 0xea9e, 0xd017, 0xce6c, 0x0, 0x0);
        gbc.writeMem(0x3436, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa37f);
        EXPECT(gbc.pc(), 0x3438);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0169
        gbc.setState(0xd409, 0xbd82, 0x9050, 0x4fe0, 0xa431, 0xcb65, 0x1, 0x0);
        gbc.writeMem(0xd409, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xbd82);
        EXPECT(gbc.pc(), 0xd40b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd409), 0xcb);
        EXPECT(gbc.readMem(0xd40a), 0xcf);
        // CB CF 016A
        gbc.setState(0x1162, 0x3794, 0x4720, 0xd2d5, 0x5942, 0xc900, 0x1, 0x1);
        gbc.writeMem(0x1162, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x3794);
        EXPECT(gbc.pc(), 0x1164);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 016B
        gbc.setState(0xb644, 0xdd67, 0x7e70, 0x517e, 0xdceb, 0x9da, 0x1, 0x1);
        gbc.writeMem(0xb644, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xdd67);
        EXPECT(gbc.pc(), 0xb646);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb644), 0xcb);
        EXPECT(gbc.readMem(0xb645), 0xcf);
        // CB CF 016C
        gbc.setState(0x3317, 0x6ffd, 0x2e40, 0x3a83, 0x3e14, 0x91e9, 0x0, 0x0);
        gbc.writeMem(0x3317, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x6ffd);
        EXPECT(gbc.pc(), 0x3319);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 016D
        gbc.setState(0x348d, 0xd2ec, 0x7c30, 0xbda1, 0xf826, 0x8734, 0x0, 0x0);
        gbc.writeMem(0x348d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xd2ec);
        EXPECT(gbc.pc(), 0x348f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 016E
        gbc.setState(0x15c4, 0xc4ef, 0x1b70, 0xf4ab, 0x8a0e, 0x555d, 0x1, 0x1);
        gbc.writeMem(0x15c4, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xc4ef);
        EXPECT(gbc.pc(), 0x15c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 016F
        gbc.setState(0x77a8, 0xb6a, 0x7960, 0x358b, 0xa5ff, 0xf013, 0x1, 0x0);
        gbc.writeMem(0x77a8, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xb6a);
        EXPECT(gbc.pc(), 0x77aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0170
        gbc.setState(0x8983, 0x810d, 0x750, 0xd704, 0xf720, 0xc7a8, 0x1, 0x1);
        gbc.writeMem(0x8983, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x810d);
        EXPECT(gbc.pc(), 0x8985);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8983), 0xcb);
        EXPECT(gbc.readMem(0x8984), 0xcf);
        // CB CF 0171
        gbc.setState(0xa78d, 0x9821, 0x94c0, 0xc60e, 0xdec9, 0x23, 0x1, 0x1);
        gbc.writeMem(0xa78d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x9821);
        EXPECT(gbc.pc(), 0xa78f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa78d), 0xcb);
        EXPECT(gbc.readMem(0xa78e), 0xcf);
        // CB CF 0172
        gbc.setState(0x4f5f, 0x55e9, 0x8950, 0xd461, 0xf8e, 0x177c, 0x1, 0x1);
        gbc.writeMem(0x4f5f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x55e9);
        EXPECT(gbc.pc(), 0x4f61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0173
        gbc.setState(0xa142, 0xe2ec, 0xa510, 0xea70, 0x3ce2, 0x4a78, 0x0, 0x0);
        gbc.writeMem(0xa142, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xe2ec);
        EXPECT(gbc.pc(), 0xa144);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa142), 0xcb);
        EXPECT(gbc.readMem(0xa143), 0xcf);
        // CB CF 0174
        gbc.setState(0x1907, 0xdba1, 0x520, 0xfe32, 0x89d0, 0x7de7, 0x1, 0x1);
        gbc.writeMem(0x1907, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xdba1);
        EXPECT(gbc.pc(), 0x1909);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0175
        gbc.setState(0x2f24, 0x19d, 0x4120, 0x21cc, 0x3851, 0x49a6, 0x0, 0x0);
        gbc.writeMem(0x2f24, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x19d);
        EXPECT(gbc.pc(), 0x2f26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0176
        gbc.setState(0xeb9e, 0x7e40, 0x21c0, 0x57cd, 0xc560, 0x2df8, 0x0, 0x1);
        gbc.writeMem(0xeb9e, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x7e40);
        EXPECT(gbc.pc(), 0xeba0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb9e), 0xcb);
        EXPECT(gbc.readMem(0xeb9f), 0xcf);
        // CB CF 0177
        gbc.setState(0x108e, 0x14be, 0xd710, 0x3c75, 0x348e, 0x1e7e, 0x1, 0x1);
        gbc.writeMem(0x108e, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x14be);
        EXPECT(gbc.pc(), 0x1090);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0178
        gbc.setState(0x6bf7, 0xcb30, 0x3440, 0x1f90, 0xc60e, 0xbcae, 0x0, 0x0);
        gbc.writeMem(0x6bf7, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xcb30);
        EXPECT(gbc.pc(), 0x6bf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0179
        gbc.setState(0x4402, 0x80eb, 0xdd10, 0xf6c2, 0x5b47, 0x91fa, 0x1, 0x0);
        gbc.writeMem(0x4402, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x80eb);
        EXPECT(gbc.pc(), 0x4404);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 017A
        gbc.setState(0xa249, 0x460a, 0xe970, 0xcb3e, 0xd13c, 0x3491, 0x1, 0x0);
        gbc.writeMem(0xa249, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x460a);
        EXPECT(gbc.pc(), 0xa24b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa249), 0xcb);
        EXPECT(gbc.readMem(0xa24a), 0xcf);
        // CB CF 017B
        gbc.setState(0x5512, 0x24a6, 0x9210, 0x9424, 0x6f5e, 0x13db, 0x1, 0x1);
        gbc.writeMem(0x5512, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x24a6);
        EXPECT(gbc.pc(), 0x5514);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 017C
        gbc.setState(0x1d8b, 0xc3d5, 0xf770, 0x4ec, 0x4d1b, 0x3751, 0x0, 0x1);
        gbc.writeMem(0x1d8b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xc3d5);
        EXPECT(gbc.pc(), 0x1d8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 017D
        gbc.setState(0x832e, 0x30b1, 0xbf00, 0x79c4, 0xb3cf, 0xad37, 0x1, 0x0);
        gbc.writeMem(0x832e, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x30b1);
        EXPECT(gbc.pc(), 0x8330);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x832e), 0xcb);
        EXPECT(gbc.readMem(0x832f), 0xcf);
        // CB CF 017E
        gbc.setState(0xbbd5, 0xb7df, 0xeed0, 0xf3a0, 0x9a0f, 0x518c, 0x0, 0x1);
        gbc.writeMem(0xbbd5, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xb7df);
        EXPECT(gbc.pc(), 0xbbd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbd5), 0xcb);
        EXPECT(gbc.readMem(0xbbd6), 0xcf);
        // CB CF 017F
        gbc.setState(0x531d, 0x2464, 0xd020, 0xe1d8, 0x44b8, 0xc83e, 0x0, 0x0);
        gbc.writeMem(0x531d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x2464);
        EXPECT(gbc.pc(), 0x531f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0180
        gbc.setState(0x2754, 0x3869, 0x570, 0xe820, 0x356d, 0x9b04, 0x0, 0x1);
        gbc.writeMem(0x2754, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x3869);
        EXPECT(gbc.pc(), 0x2756);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0181
        gbc.setState(0x739a, 0x1ef5, 0x2cc0, 0x9faf, 0x15e, 0xd7f8, 0x1, 0x0);
        gbc.writeMem(0x739a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x1ef5);
        EXPECT(gbc.pc(), 0x739c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0183
        gbc.setState(0xe2bd, 0xaaa4, 0x3420, 0x4230, 0x5cf9, 0x1b3b, 0x1, 0x1);
        gbc.writeMem(0xe2bd, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xaaa4);
        EXPECT(gbc.pc(), 0xe2bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2bd), 0xcb);
        EXPECT(gbc.readMem(0xe2be), 0xcf);
        // CB CF 0184
        gbc.setState(0xce53, 0x38f0, 0xe60, 0xe44b, 0x4747, 0x51ee, 0x1, 0x1);
        gbc.writeMem(0xce53, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x38f0);
        EXPECT(gbc.pc(), 0xce55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce53), 0xcb);
        EXPECT(gbc.readMem(0xce54), 0xcf);
        // CB CF 0185
        gbc.setState(0x80a8, 0xe3f4, 0x4a0, 0x3b3b, 0xd34f, 0x7cf8, 0x1, 0x0);
        gbc.writeMem(0x80a8, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xe3f4);
        EXPECT(gbc.pc(), 0x80aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80a8), 0xcb);
        EXPECT(gbc.readMem(0x80a9), 0xcf);
        // CB CF 0186
        gbc.setState(0xafca, 0x9557, 0x4db0, 0x483a, 0xdd95, 0xc5b1, 0x0, 0x0);
        gbc.writeMem(0xafca, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x9557);
        EXPECT(gbc.pc(), 0xafcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafca), 0xcb);
        EXPECT(gbc.readMem(0xafcb), 0xcf);
        // CB CF 0187
        gbc.setState(0xae17, 0xed2a, 0x5fe0, 0xb115, 0x9890, 0x3370, 0x0, 0x0);
        gbc.writeMem(0xae17, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xed2a);
        EXPECT(gbc.pc(), 0xae19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae17), 0xcb);
        EXPECT(gbc.readMem(0xae18), 0xcf);
        // CB CF 0188
        gbc.setState(0xcdad, 0x88c0, 0xddf0, 0xc6ec, 0x56f2, 0x7cc, 0x0, 0x1);
        gbc.writeMem(0xcdad, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x88c0);
        EXPECT(gbc.pc(), 0xcdaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdad), 0xcb);
        EXPECT(gbc.readMem(0xcdae), 0xcf);
        // CB CF 0189
        gbc.setState(0x45dd, 0xaad9, 0x5b50, 0x12e3, 0xbb3e, 0x961d, 0x0, 0x1);
        gbc.writeMem(0x45dd, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xaad9);
        EXPECT(gbc.pc(), 0x45df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 018A
        gbc.setState(0x9f76, 0xbd6d, 0x7c70, 0x9fc, 0xccf9, 0x956b, 0x1, 0x1);
        gbc.writeMem(0x9f76, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xbd6d);
        EXPECT(gbc.pc(), 0x9f78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f76), 0xcb);
        EXPECT(gbc.readMem(0x9f77), 0xcf);
        // CB CF 018B
        gbc.setState(0xbb5c, 0x9cee, 0x5920, 0xb628, 0x2d37, 0xd18, 0x1, 0x0);
        gbc.writeMem(0xbb5c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x9cee);
        EXPECT(gbc.pc(), 0xbb5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb5c), 0xcb);
        EXPECT(gbc.readMem(0xbb5d), 0xcf);
        // CB CF 018C
        gbc.setState(0x34ad, 0x73bb, 0x8740, 0x32f, 0x94ae, 0xae7d, 0x0, 0x1);
        gbc.writeMem(0x34ad, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x73bb);
        EXPECT(gbc.pc(), 0x34af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 018D
        gbc.setState(0x42e5, 0xd0a4, 0x9f0, 0xa97b, 0x955e, 0xe1e, 0x1, 0x0);
        gbc.writeMem(0x42e5, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xd0a4);
        EXPECT(gbc.pc(), 0x42e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 018E
        gbc.setState(0x1c37, 0x3437, 0x3bf0, 0xe06, 0x5668, 0xfe44, 0x0, 0x1);
        gbc.writeMem(0x1c37, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x3437);
        EXPECT(gbc.pc(), 0x1c39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 018F
        gbc.setState(0x59ca, 0xf96d, 0xa900, 0x3e30, 0x66b4, 0x64e5, 0x0, 0x1);
        gbc.writeMem(0x59ca, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf96d);
        EXPECT(gbc.pc(), 0x59cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0190
        gbc.setState(0xd95a, 0xa601, 0x49a0, 0xf756, 0x1c96, 0x374, 0x1, 0x1);
        gbc.writeMem(0xd95a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa601);
        EXPECT(gbc.pc(), 0xd95c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd95a), 0xcb);
        EXPECT(gbc.readMem(0xd95b), 0xcf);
        // CB CF 0191
        gbc.setState(0x4e01, 0xf516, 0x9fc0, 0xea55, 0x2de3, 0xde62, 0x0, 0x0);
        gbc.writeMem(0x4e01, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf516);
        EXPECT(gbc.pc(), 0x4e03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0192
        gbc.setState(0x8618, 0xdb9c, 0xd510, 0x3055, 0xcad0, 0xbfd3, 0x1, 0x0);
        gbc.writeMem(0x8618, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xdb9c);
        EXPECT(gbc.pc(), 0x861a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8618), 0xcb);
        EXPECT(gbc.readMem(0x8619), 0xcf);
        // CB CF 0193
        gbc.setState(0x31ab, 0xa505, 0xb2a0, 0xe642, 0x96c9, 0x2395, 0x1, 0x1);
        gbc.writeMem(0x31ab, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xa505);
        EXPECT(gbc.pc(), 0x31ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0194
        gbc.setState(0x2c73, 0x5535, 0x30c0, 0x16ad, 0xa038, 0x7b07, 0x0, 0x0);
        gbc.writeMem(0x2c73, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x5535);
        EXPECT(gbc.pc(), 0x2c75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0195
        gbc.setState(0x3e2d, 0xae36, 0xe190, 0x2697, 0xcb07, 0x8978, 0x1, 0x0);
        gbc.writeMem(0x3e2d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xae36);
        EXPECT(gbc.pc(), 0x3e2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0196
        gbc.setState(0x15eb, 0x5ab0, 0x860, 0x4b1b, 0x324f, 0xdd45, 0x1, 0x1);
        gbc.writeMem(0x15eb, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x5ab0);
        EXPECT(gbc.pc(), 0x15ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0197
        gbc.setState(0x954b, 0x59c0, 0xafc0, 0xe8b4, 0xe2b, 0x75f9, 0x0, 0x0);
        gbc.writeMem(0x954b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x59c0);
        EXPECT(gbc.pc(), 0x954d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x954b), 0xcb);
        EXPECT(gbc.readMem(0x954c), 0xcf);
        // CB CF 0198
        gbc.setState(0xb3af, 0x7be9, 0xa100, 0xa095, 0xf1bb, 0xfc35, 0x0, 0x0);
        gbc.writeMem(0xb3af, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x7be9);
        EXPECT(gbc.pc(), 0xb3b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3af), 0xcb);
        EXPECT(gbc.readMem(0xb3b0), 0xcf);
        // CB CF 0199
        gbc.setState(0xe877, 0x7626, 0x5bc0, 0x898b, 0x16ae, 0x29b2, 0x1, 0x1);
        gbc.writeMem(0xe877, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7626);
        EXPECT(gbc.pc(), 0xe879);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe877), 0xcb);
        EXPECT(gbc.readMem(0xe878), 0xcf);
        // CB CF 019A
        gbc.setState(0x1026, 0x4bcf, 0x96d0, 0xe9e0, 0x16a3, 0xa3be, 0x1, 0x1);
        gbc.writeMem(0x1026, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x4bcf);
        EXPECT(gbc.pc(), 0x1028);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 019B
        gbc.setState(0x7b2b, 0x3435, 0x54e0, 0xedb7, 0x91bb, 0xb9e0, 0x1, 0x1);
        gbc.writeMem(0x7b2b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3435);
        EXPECT(gbc.pc(), 0x7b2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 019C
        gbc.setState(0x8cc1, 0x6abe, 0x4170, 0xfe5e, 0xc7aa, 0x405c, 0x0, 0x0);
        gbc.writeMem(0x8cc1, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x6abe);
        EXPECT(gbc.pc(), 0x8cc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cc1), 0xcb);
        EXPECT(gbc.readMem(0x8cc2), 0xcf);
        // CB CF 019D
        gbc.setState(0x6385, 0x7b0e, 0x60c0, 0xf62a, 0xd8ee, 0x2500, 0x0, 0x0);
        gbc.writeMem(0x6385, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x7b0e);
        EXPECT(gbc.pc(), 0x6387);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 019E
        gbc.setState(0xc43d, 0xbc90, 0x980, 0x5cad, 0xda4a, 0x921f, 0x1, 0x1);
        gbc.writeMem(0xc43d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xbc90);
        EXPECT(gbc.pc(), 0xc43f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc43d), 0xcb);
        EXPECT(gbc.readMem(0xc43e), 0xcf);
        // CB CF 019F
        gbc.setState(0x3d9, 0x3f3d, 0xa040, 0x7861, 0x7d26, 0x2a4d, 0x1, 0x1);
        gbc.writeMem(0x3d9, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x3f3d);
        EXPECT(gbc.pc(), 0x3db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 01A0
        gbc.setState(0x2f7e, 0xcdc7, 0x3d00, 0xa4c6, 0xf6a9, 0x1d43, 0x0, 0x1);
        gbc.writeMem(0x2f7e, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xcdc7);
        EXPECT(gbc.pc(), 0x2f80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 01A1
        gbc.setState(0x29ff, 0x85ec, 0x8600, 0xdbb1, 0x759a, 0xcb48, 0x0, 0x0);
        gbc.writeMem(0x29ff, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x85ec);
        EXPECT(gbc.pc(), 0x2a01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 01A2
        gbc.setState(0x925c, 0x3c5e, 0x7dc0, 0xfcb5, 0xc96e, 0x6964, 0x0, 0x1);
        gbc.writeMem(0x925c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x3c5e);
        EXPECT(gbc.pc(), 0x925e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x925c), 0xcb);
        EXPECT(gbc.readMem(0x925d), 0xcf);
        // CB CF 01A3
        gbc.setState(0x8c6d, 0x925, 0x9eb0, 0xdeaf, 0xb166, 0x7ee3, 0x1, 0x1);
        gbc.writeMem(0x8c6d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x925);
        EXPECT(gbc.pc(), 0x8c6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c6d), 0xcb);
        EXPECT(gbc.readMem(0x8c6e), 0xcf);
        // CB CF 01A4
        gbc.setState(0x7edc, 0x76e1, 0x45d0, 0x12d7, 0xdedf, 0x408f, 0x0, 0x0);
        gbc.writeMem(0x7edc, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x76e1);
        EXPECT(gbc.pc(), 0x7ede);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 01A5
        gbc.setState(0x6835, 0x8087, 0x84b0, 0xf8eb, 0xed38, 0x72e8, 0x0, 0x1);
        gbc.writeMem(0x6835, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x8087);
        EXPECT(gbc.pc(), 0x6837);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 01A6
        gbc.setState(0x90d0, 0x5b3b, 0x7270, 0xf74d, 0x6a44, 0xc80, 0x1, 0x1);
        gbc.writeMem(0x90d0, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x5b3b);
        EXPECT(gbc.pc(), 0x90d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90d0), 0xcb);
        EXPECT(gbc.readMem(0x90d1), 0xcf);
        // CB CF 01A7
        gbc.setState(0xc0f4, 0xc812, 0xf640, 0xbbc, 0xbf08, 0x3d47, 0x1, 0x1);
        gbc.writeMem(0xc0f4, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xc812);
        EXPECT(gbc.pc(), 0xc0f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0f4), 0xcb);
        EXPECT(gbc.readMem(0xc0f5), 0xcf);
        // CB CF 01A8
        gbc.setState(0xa36c, 0x645, 0xcc30, 0x99cd, 0x280e, 0xbee5, 0x0, 0x0);
        gbc.writeMem(0xa36c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x645);
        EXPECT(gbc.pc(), 0xa36e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa36c), 0xcb);
        EXPECT(gbc.readMem(0xa36d), 0xcf);
        // CB CF 01A9
        gbc.setState(0xa847, 0x6805, 0xd600, 0xe47f, 0xffba, 0x876, 0x1, 0x1);
        gbc.writeMem(0xa847, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x6805);
        EXPECT(gbc.pc(), 0xa849);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa847), 0xcb);
        EXPECT(gbc.readMem(0xa848), 0xcf);
        // CB CF 01AA
        gbc.setState(0x8c7c, 0xace, 0x99c0, 0xa1a1, 0x4f1f, 0x957d, 0x0, 0x1);
        gbc.writeMem(0x8c7c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xace);
        EXPECT(gbc.pc(), 0x8c7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c7c), 0xcb);
        EXPECT(gbc.readMem(0x8c7d), 0xcf);
        // CB CF 01AB
        gbc.setState(0x762d, 0x4c18, 0x52a0, 0xc769, 0xacf2, 0x922b, 0x1, 0x0);
        gbc.writeMem(0x762d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x4c18);
        EXPECT(gbc.pc(), 0x762f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 01AC
        gbc.setState(0x6481, 0x3586, 0xefe0, 0x8ca, 0x1356, 0x3b3c, 0x1, 0x0);
        gbc.writeMem(0x6481, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3586);
        EXPECT(gbc.pc(), 0x6483);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 01AD
        gbc.setState(0x9d7e, 0x923a, 0x2830, 0x81cb, 0xb50d, 0xf2b1, 0x0, 0x0);
        gbc.writeMem(0x9d7e, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x923a);
        EXPECT(gbc.pc(), 0x9d80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d7e), 0xcb);
        EXPECT(gbc.readMem(0x9d7f), 0xcf);
        // CB CF 01AE
        gbc.setState(0x77e, 0x5fca, 0x83d0, 0x96a0, 0x258, 0x121e, 0x1, 0x1);
        gbc.writeMem(0x77e, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x5fca);
        EXPECT(gbc.pc(), 0x780);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 01AF
        gbc.setState(0x9197, 0x1ec6, 0x3e50, 0xeae0, 0x8bdb, 0xc667, 0x1, 0x0);
        gbc.writeMem(0x9197, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x1ec6);
        EXPECT(gbc.pc(), 0x9199);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9197), 0xcb);
        EXPECT(gbc.readMem(0x9198), 0xcf);
        // CB CF 01B0
        gbc.setState(0x8c82, 0x9d4d, 0x6b90, 0x6585, 0xdcb, 0xf3ef, 0x1, 0x0);
        gbc.writeMem(0x8c82, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x9d4d);
        EXPECT(gbc.pc(), 0x8c84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c82), 0xcb);
        EXPECT(gbc.readMem(0x8c83), 0xcf);
        // CB CF 01B1
        gbc.setState(0x62e1, 0xaa7, 0x77b0, 0x5048, 0x228a, 0xee77, 0x1, 0x0);
        gbc.writeMem(0x62e1, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xaa7);
        EXPECT(gbc.pc(), 0x62e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 01B3
        gbc.setState(0x6049, 0x661c, 0x48a0, 0x5ea9, 0xb666, 0x44c9, 0x1, 0x1);
        gbc.writeMem(0x6049, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x661c);
        EXPECT(gbc.pc(), 0x604b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 01B5
        gbc.setState(0xcc7a, 0xcd2d, 0x9650, 0x8312, 0xe9d2, 0x6115, 0x0, 0x0);
        gbc.writeMem(0xcc7a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xcd2d);
        EXPECT(gbc.pc(), 0xcc7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc7a), 0xcb);
        EXPECT(gbc.readMem(0xcc7b), 0xcf);
        // CB CF 01B6
        gbc.setState(0xae2f, 0x2bae, 0x7410, 0x2808, 0x89bf, 0x833f, 0x1, 0x1);
        gbc.writeMem(0xae2f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x2bae);
        EXPECT(gbc.pc(), 0xae31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae2f), 0xcb);
        EXPECT(gbc.readMem(0xae30), 0xcf);
        // CB CF 01B7
        gbc.setState(0x7f25, 0xb198, 0x26a0, 0x12fd, 0x787b, 0x54b0, 0x1, 0x1);
        gbc.writeMem(0x7f25, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb198);
        EXPECT(gbc.pc(), 0x7f27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 01B8
        gbc.setState(0x5226, 0x978, 0x28e0, 0x9933, 0xa474, 0x6f3a, 0x1, 0x0);
        gbc.writeMem(0x5226, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x978);
        EXPECT(gbc.pc(), 0x5228);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 01B9
        gbc.setState(0x2581, 0x47d, 0xc930, 0xdee6, 0x2a2e, 0xb9bc, 0x1, 0x0);
        gbc.writeMem(0x2581, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x47d);
        EXPECT(gbc.pc(), 0x2583);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 01BA
        gbc.setState(0xcb23, 0xe916, 0xd6c0, 0xca0e, 0x88a9, 0xbb1f, 0x0, 0x0);
        gbc.writeMem(0xcb23, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xe916);
        EXPECT(gbc.pc(), 0xcb25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb23), 0xcb);
        EXPECT(gbc.readMem(0xcb24), 0xcf);
        // CB CF 01BB
        gbc.setState(0xa79e, 0xc87b, 0xb3d0, 0x838b, 0x6fda, 0xfdbd, 0x0, 0x0);
        gbc.writeMem(0xa79e, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc87b);
        EXPECT(gbc.pc(), 0xa7a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa79e), 0xcb);
        EXPECT(gbc.readMem(0xa79f), 0xcf);
        // CB CF 01BC
        gbc.setState(0x1cec, 0x7cc0, 0xee50, 0xb8b4, 0x6714, 0xc843, 0x0, 0x0);
        gbc.writeMem(0x1cec, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x7cc0);
        EXPECT(gbc.pc(), 0x1cee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 01BD
        gbc.setState(0x40bc, 0x2c99, 0x52a0, 0x448e, 0x8626, 0x904d, 0x1, 0x1);
        gbc.writeMem(0x40bc, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2c99);
        EXPECT(gbc.pc(), 0x40be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 01BE
        gbc.setState(0x9d0e, 0x695d, 0xfd80, 0x293f, 0xf98b, 0x5522, 0x1, 0x1);
        gbc.writeMem(0x9d0e, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x695d);
        EXPECT(gbc.pc(), 0x9d10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d0e), 0xcb);
        EXPECT(gbc.readMem(0x9d0f), 0xcf);
        // CB CF 01BF
        gbc.setState(0x5942, 0x955b, 0x8050, 0x369c, 0x14f7, 0x5f50, 0x1, 0x0);
        gbc.writeMem(0x5942, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x955b);
        EXPECT(gbc.pc(), 0x5944);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 01C0
        gbc.setState(0x3434, 0xe41d, 0x84c0, 0xfff4, 0x414b, 0xfe1a, 0x0, 0x1);
        gbc.writeMem(0x3434, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xe41d);
        EXPECT(gbc.pc(), 0x3436);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 01C1
        gbc.setState(0x5505, 0x20b0, 0x8560, 0x7487, 0x1ae1, 0x822, 0x1, 0x0);
        gbc.writeMem(0x5505, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x20b0);
        EXPECT(gbc.pc(), 0x5507);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 01C2
        gbc.setState(0x5199, 0x980d, 0xf730, 0xf2dd, 0x6ee6, 0xb2f5, 0x0, 0x1);
        gbc.writeMem(0x5199, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x980d);
        EXPECT(gbc.pc(), 0x519b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 01C3
        gbc.setState(0x1802, 0x810d, 0x69f0, 0xadc0, 0x2388, 0xeebe, 0x1, 0x0);
        gbc.writeMem(0x1802, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x810d);
        EXPECT(gbc.pc(), 0x1804);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 01C4
        gbc.setState(0xe68c, 0x93c7, 0x5240, 0x9a46, 0x4a43, 0xdfb, 0x0, 0x1);
        gbc.writeMem(0xe68c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x93c7);
        EXPECT(gbc.pc(), 0xe68e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe68c), 0xcb);
        EXPECT(gbc.readMem(0xe68d), 0xcf);
        // CB CF 01C5
        gbc.setState(0x5179, 0x4a2f, 0xdc80, 0x3799, 0xb1fc, 0x630, 0x0, 0x1);
        gbc.writeMem(0x5179, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x4a2f);
        EXPECT(gbc.pc(), 0x517b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 01C6
        gbc.setState(0xea91, 0x6afd, 0x3f70, 0xc268, 0x7f95, 0xc4cc, 0x0, 0x1);
        gbc.writeMem(0xea91, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x6afd);
        EXPECT(gbc.pc(), 0xea93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea91), 0xcb);
        EXPECT(gbc.readMem(0xea92), 0xcf);
        // CB CF 01C7
        gbc.setState(0x2d9f, 0x5932, 0xa460, 0xdc29, 0xd534, 0xbd63, 0x0, 0x0);
        gbc.writeMem(0x2d9f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5932);
        EXPECT(gbc.pc(), 0x2da1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 01C8
        gbc.setState(0x573a, 0xcaea, 0xec60, 0x85b5, 0x591e, 0x32f2, 0x0, 0x1);
        gbc.writeMem(0x573a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xcaea);
        EXPECT(gbc.pc(), 0x573c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 01C9
        gbc.setState(0xbe65, 0x4023, 0xa720, 0x3cf9, 0x7526, 0xee2c, 0x1, 0x0);
        gbc.writeMem(0xbe65, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4023);
        EXPECT(gbc.pc(), 0xbe67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe65), 0xcb);
        EXPECT(gbc.readMem(0xbe66), 0xcf);
        // CB CF 01CB
        gbc.setState(0x1c6b, 0x76dd, 0x7200, 0x5a4a, 0x5db9, 0xeec2, 0x0, 0x0);
        gbc.writeMem(0x1c6b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x76dd);
        EXPECT(gbc.pc(), 0x1c6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 01CC
        gbc.setState(0x9450, 0xa4cc, 0x62d0, 0xc7eb, 0x31c5, 0x30d3, 0x0, 0x1);
        gbc.writeMem(0x9450, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xa4cc);
        EXPECT(gbc.pc(), 0x9452);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9450), 0xcb);
        EXPECT(gbc.readMem(0x9451), 0xcf);
        // CB CF 01CD
        gbc.setState(0xd594, 0x542f, 0xaf40, 0xee4b, 0x6ec7, 0x7935, 0x1, 0x0);
        gbc.writeMem(0xd594, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x542f);
        EXPECT(gbc.pc(), 0xd596);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd594), 0xcb);
        EXPECT(gbc.readMem(0xd595), 0xcf);
        // CB CF 01CE
        gbc.setState(0x2b8c, 0xeda2, 0xb970, 0x6715, 0x64ad, 0x7006, 0x0, 0x0);
        gbc.writeMem(0x2b8c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xeda2);
        EXPECT(gbc.pc(), 0x2b8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 01CF
        gbc.setState(0x77ec, 0x1770, 0xf6a0, 0x4dd, 0x4494, 0x2440, 0x1, 0x0);
        gbc.writeMem(0x77ec, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1770);
        EXPECT(gbc.pc(), 0x77ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 01D0
        gbc.setState(0x3ae1, 0x517f, 0x6f60, 0xb0a8, 0x3c93, 0x33d9, 0x0, 0x0);
        gbc.writeMem(0x3ae1, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x517f);
        EXPECT(gbc.pc(), 0x3ae3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 01D1
        gbc.setState(0x37c0, 0x7b3d, 0x1680, 0x27a0, 0x9f8b, 0xd747, 0x0, 0x0);
        gbc.writeMem(0x37c0, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7b3d);
        EXPECT(gbc.pc(), 0x37c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 01D2
        gbc.setState(0x38fd, 0xa0e9, 0xc280, 0x1126, 0xc3b1, 0xbd4, 0x1, 0x0);
        gbc.writeMem(0x38fd, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa0e9);
        EXPECT(gbc.pc(), 0x38ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 01D3
        gbc.setState(0xbfdb, 0x72c, 0xcdd0, 0xfd2b, 0x591, 0xba8, 0x1, 0x0);
        gbc.writeMem(0xbfdb, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x72c);
        EXPECT(gbc.pc(), 0xbfdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfdb), 0xcb);
        EXPECT(gbc.readMem(0xbfdc), 0xcf);
        // CB CF 01D4
        gbc.setState(0x9815, 0xca29, 0x5da0, 0xebf6, 0x7741, 0x2149, 0x0, 0x0);
        gbc.writeMem(0x9815, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xca29);
        EXPECT(gbc.pc(), 0x9817);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9815), 0xcb);
        EXPECT(gbc.readMem(0x9816), 0xcf);
        // CB CF 01D5
        gbc.setState(0x9162, 0x3aca, 0xf860, 0xf58e, 0xe9bf, 0x17a3, 0x0, 0x0);
        gbc.writeMem(0x9162, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x3aca);
        EXPECT(gbc.pc(), 0x9164);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9162), 0xcb);
        EXPECT(gbc.readMem(0x9163), 0xcf);
        // CB CF 01D6
        gbc.setState(0xeabb, 0x9088, 0xdb0, 0x7d5f, 0x82ad, 0x3589, 0x0, 0x0);
        gbc.writeMem(0xeabb, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x9088);
        EXPECT(gbc.pc(), 0xeabd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeabb), 0xcb);
        EXPECT(gbc.readMem(0xeabc), 0xcf);
        // CB CF 01D7
        gbc.setState(0x78ea, 0x3489, 0xd160, 0x13e0, 0x6ebf, 0xf70, 0x0, 0x0);
        gbc.writeMem(0x78ea, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x3489);
        EXPECT(gbc.pc(), 0x78ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 01D8
        gbc.setState(0x1d36, 0xa14a, 0xb690, 0x1d14, 0x52b6, 0x53b0, 0x1, 0x0);
        gbc.writeMem(0x1d36, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xa14a);
        EXPECT(gbc.pc(), 0x1d38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 01D9
        gbc.setState(0xd8db, 0xa847, 0x70e0, 0x1a3c, 0x71d2, 0x3a13, 0x1, 0x1);
        gbc.writeMem(0xd8db, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xa847);
        EXPECT(gbc.pc(), 0xd8dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8db), 0xcb);
        EXPECT(gbc.readMem(0xd8dc), 0xcf);
        // CB CF 01DA
        gbc.setState(0x7f80, 0x98a6, 0x2620, 0x95b5, 0x1e8e, 0xc456, 0x0, 0x0);
        gbc.writeMem(0x7f80, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x98a6);
        EXPECT(gbc.pc(), 0x7f82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 01DB
        gbc.setState(0x7a1c, 0xb23, 0x3500, 0x7e05, 0x41f4, 0x7f40, 0x0, 0x0);
        gbc.writeMem(0x7a1c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb23);
        EXPECT(gbc.pc(), 0x7a1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 01DC
        gbc.setState(0x828b, 0xf988, 0x1a0, 0x8d47, 0x7366, 0x4c66, 0x1, 0x1);
        gbc.writeMem(0x828b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xf988);
        EXPECT(gbc.pc(), 0x828d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x828b), 0xcb);
        EXPECT(gbc.readMem(0x828c), 0xcf);
        // CB CF 01DD
        gbc.setState(0xa145, 0xed30, 0x51b0, 0x8b02, 0xf962, 0x3ff5, 0x0, 0x1);
        gbc.writeMem(0xa145, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xed30);
        EXPECT(gbc.pc(), 0xa147);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa145), 0xcb);
        EXPECT(gbc.readMem(0xa146), 0xcf);
        // CB CF 01DE
        gbc.setState(0xe2fa, 0x3e6a, 0xb560, 0x655d, 0x5ebb, 0x7e3c, 0x1, 0x1);
        gbc.writeMem(0xe2fa, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3e6a);
        EXPECT(gbc.pc(), 0xe2fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2fa), 0xcb);
        EXPECT(gbc.readMem(0xe2fb), 0xcf);
        // CB CF 01DF
        gbc.setState(0x4daa, 0x6bb0, 0x3810, 0x5ed9, 0xeb89, 0x6cfb, 0x0, 0x0);
        gbc.writeMem(0x4daa, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x6bb0);
        EXPECT(gbc.pc(), 0x4dac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 01E0
        gbc.setState(0xaec3, 0xdfaf, 0x5850, 0xf3f6, 0x930a, 0x984b, 0x0, 0x1);
        gbc.writeMem(0xaec3, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xdfaf);
        EXPECT(gbc.pc(), 0xaec5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaec3), 0xcb);
        EXPECT(gbc.readMem(0xaec4), 0xcf);
        // CB CF 01E1
        gbc.setState(0xda1f, 0xe1a4, 0xe0b0, 0x10eb, 0x933, 0xb719, 0x1, 0x0);
        gbc.writeMem(0xda1f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xe1a4);
        EXPECT(gbc.pc(), 0xda21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda1f), 0xcb);
        EXPECT(gbc.readMem(0xda20), 0xcf);
        // CB CF 01E2
        gbc.setState(0x2a34, 0xaabb, 0xac80, 0xd610, 0x7866, 0xff9f, 0x0, 0x0);
        gbc.writeMem(0x2a34, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xaabb);
        EXPECT(gbc.pc(), 0x2a36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 01E3
        gbc.setState(0xc4fc, 0xed48, 0xc830, 0x6af5, 0xa3af, 0xd8f5, 0x1, 0x0);
        gbc.writeMem(0xc4fc, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xed48);
        EXPECT(gbc.pc(), 0xc4fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4fc), 0xcb);
        EXPECT(gbc.readMem(0xc4fd), 0xcf);
        // CB CF 01E4
        gbc.setState(0x83db, 0x2573, 0xea10, 0xa909, 0x8441, 0x53c7, 0x0, 0x1);
        gbc.writeMem(0x83db, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x2573);
        EXPECT(gbc.pc(), 0x83dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83db), 0xcb);
        EXPECT(gbc.readMem(0x83dc), 0xcf);
        // CB CF 01E5
        gbc.setState(0x363b, 0x38e8, 0x99b0, 0x4e5e, 0xb40b, 0x8a98, 0x1, 0x1);
        gbc.writeMem(0x363b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x38e8);
        EXPECT(gbc.pc(), 0x363d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 01E6
        gbc.setState(0x683e, 0xf006, 0xdca0, 0x390f, 0xb8ac, 0x3e5e, 0x0, 0x1);
        gbc.writeMem(0x683e, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf006);
        EXPECT(gbc.pc(), 0x6840);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 01E7
        gbc.setState(0xb17f, 0x3b8f, 0x930, 0x8f21, 0xd686, 0x2c9f, 0x0, 0x0);
        gbc.writeMem(0xb17f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x3b8f);
        EXPECT(gbc.pc(), 0xb181);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb17f), 0xcb);
        EXPECT(gbc.readMem(0xb180), 0xcf);
        // CB CF 01E8
        gbc.setState(0x9d40, 0x1a74, 0xf410, 0xb2f2, 0xf7a9, 0x60d5, 0x1, 0x0);
        gbc.writeMem(0x9d40, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x1a74);
        EXPECT(gbc.pc(), 0x9d42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d40), 0xcb);
        EXPECT(gbc.readMem(0x9d41), 0xcf);
        // CB CF 01E9
        gbc.setState(0x323a, 0xfa45, 0x3920, 0x8427, 0xbfc0, 0x65f1, 0x0, 0x1);
        gbc.writeMem(0x323a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xfa45);
        EXPECT(gbc.pc(), 0x323c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 01EA
        gbc.setState(0x1c88, 0xf34f, 0x6ff0, 0x6613, 0x2b63, 0x45cb, 0x0, 0x1);
        gbc.writeMem(0x1c88, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xf34f);
        EXPECT(gbc.pc(), 0x1c8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 01EB
        gbc.setState(0xc807, 0xaf56, 0xa4b0, 0xcae1, 0x37fe, 0x638c, 0x0, 0x1);
        gbc.writeMem(0xc807, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xaf56);
        EXPECT(gbc.pc(), 0xc809);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc807), 0xcb);
        EXPECT(gbc.readMem(0xc808), 0xcf);
        // CB CF 01EC
        gbc.setState(0x29e2, 0xb634, 0xbc20, 0xaf6d, 0x65c2, 0x56b, 0x1, 0x0);
        gbc.writeMem(0x29e2, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xb634);
        EXPECT(gbc.pc(), 0x29e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 01ED
        gbc.setState(0x5ffb, 0x476a, 0xa080, 0x47ca, 0xf998, 0xd0ea, 0x1, 0x0);
        gbc.writeMem(0x5ffb, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x476a);
        EXPECT(gbc.pc(), 0x5ffd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 01EE
        gbc.setState(0x3b4a, 0xa3bc, 0x350, 0x5ec7, 0xe5d6, 0x94, 0x1, 0x1);
        gbc.writeMem(0x3b4a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xa3bc);
        EXPECT(gbc.pc(), 0x3b4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 01EF
        gbc.setState(0x3e6, 0xadf3, 0xe790, 0xa427, 0x52a5, 0x5c5e, 0x0, 0x1);
        gbc.writeMem(0x3e6, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xadf3);
        EXPECT(gbc.pc(), 0x3e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 01F0
        gbc.setState(0xaed4, 0x1f4d, 0xde10, 0xc8a5, 0xcbba, 0x3fe8, 0x1, 0x0);
        gbc.writeMem(0xaed4, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x1f4d);
        EXPECT(gbc.pc(), 0xaed6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaed4), 0xcb);
        EXPECT(gbc.readMem(0xaed5), 0xcf);
        // CB CF 01F1
        gbc.setState(0xed88, 0xdd41, 0x7e30, 0x2be5, 0xf5a8, 0x5213, 0x0, 0x1);
        gbc.writeMem(0xed88, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xdd41);
        EXPECT(gbc.pc(), 0xed8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed88), 0xcb);
        EXPECT(gbc.readMem(0xed89), 0xcf);
        // CB CF 01F2
        gbc.setState(0x23ea, 0x52a8, 0xfbc0, 0xeaea, 0x795a, 0x68a9, 0x1, 0x1);
        gbc.writeMem(0x23ea, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x52a8);
        EXPECT(gbc.pc(), 0x23ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 01F3
        gbc.setState(0xcb5, 0xd667, 0xe790, 0x636f, 0x70dc, 0xa318, 0x1, 0x1);
        gbc.writeMem(0xcb5, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd667);
        EXPECT(gbc.pc(), 0xcb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 01F4
        gbc.setState(0xa399, 0xf9c2, 0x4a80, 0xdbf4, 0x6509, 0x8d61, 0x0, 0x1);
        gbc.writeMem(0xa399, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xf9c2);
        EXPECT(gbc.pc(), 0xa39b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa399), 0xcb);
        EXPECT(gbc.readMem(0xa39a), 0xcf);
        // CB CF 01F5
        gbc.setState(0x64e3, 0xc1f2, 0x5d30, 0xeb69, 0xd727, 0x1bbc, 0x0, 0x0);
        gbc.writeMem(0x64e3, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xc1f2);
        EXPECT(gbc.pc(), 0x64e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 01F6
        gbc.setState(0xb711, 0x9cce, 0x66c0, 0x37dc, 0x289e, 0x938e, 0x0, 0x1);
        gbc.writeMem(0xb711, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x9cce);
        EXPECT(gbc.pc(), 0xb713);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb711), 0xcb);
        EXPECT(gbc.readMem(0xb712), 0xcf);
        // CB CF 01F7
        gbc.setState(0x6a29, 0xfd8, 0x3c00, 0xc6a1, 0xd3f9, 0xd964, 0x0, 0x1);
        gbc.writeMem(0x6a29, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xfd8);
        EXPECT(gbc.pc(), 0x6a2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 01F8
        gbc.setState(0xb25b, 0x6c8d, 0xabb0, 0x6c52, 0xf11, 0xffe0, 0x0, 0x0);
        gbc.writeMem(0xb25b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6c8d);
        EXPECT(gbc.pc(), 0xb25d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb25b), 0xcb);
        EXPECT(gbc.readMem(0xb25c), 0xcf);
        // CB CF 01F9
        gbc.setState(0x4477, 0xd8a3, 0xb8d0, 0x3b16, 0x857d, 0x9053, 0x0, 0x1);
        gbc.writeMem(0x4477, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xd8a3);
        EXPECT(gbc.pc(), 0x4479);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 01FA
        gbc.setState(0xdc56, 0xe86, 0xdfc0, 0x5db1, 0xef0, 0x7a30, 0x1, 0x0);
        gbc.writeMem(0xdc56, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xe86);
        EXPECT(gbc.pc(), 0xdc58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc56), 0xcb);
        EXPECT(gbc.readMem(0xdc57), 0xcf);
        // CB CF 01FB
        gbc.setState(0x6677, 0x123d, 0x2200, 0x309d, 0xb0e0, 0xf93d, 0x1, 0x0);
        gbc.writeMem(0x6677, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x123d);
        EXPECT(gbc.pc(), 0x6679);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 01FC
        gbc.setState(0xb133, 0xc0a7, 0xd1c0, 0xa9bd, 0x952e, 0xe3f0, 0x0, 0x1);
        gbc.writeMem(0xb133, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc0a7);
        EXPECT(gbc.pc(), 0xb135);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb133), 0xcb);
        EXPECT(gbc.readMem(0xb134), 0xcf);
        // CB CF 01FD
        gbc.setState(0xc72, 0x1c52, 0xdb80, 0x9eae, 0x114b, 0xc716, 0x0, 0x1);
        gbc.writeMem(0xc72, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x1c52);
        EXPECT(gbc.pc(), 0xc74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 01FE
        gbc.setState(0xde42, 0x6d38, 0x8bf0, 0x4a52, 0xc15a, 0x3f21, 0x1, 0x1);
        gbc.writeMem(0xde42, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x6d38);
        EXPECT(gbc.pc(), 0xde44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde42), 0xcb);
        EXPECT(gbc.readMem(0xde43), 0xcf);
        // CB CF 01FF
        gbc.setState(0xa45f, 0x26c1, 0x2b30, 0x36a, 0x2c8d, 0xa281, 0x0, 0x0);
        gbc.writeMem(0xa45f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x26c1);
        EXPECT(gbc.pc(), 0xa461);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa45f), 0xcb);
        EXPECT(gbc.readMem(0xa460), 0xcf);
        // CB CF 0200
        gbc.setState(0xdbaa, 0x795d, 0x5fe0, 0xf0c7, 0x7049, 0x4e11, 0x0, 0x0);
        gbc.writeMem(0xdbaa, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x795d);
        EXPECT(gbc.pc(), 0xdbac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbaa), 0xcb);
        EXPECT(gbc.readMem(0xdbab), 0xcf);
        // CB CF 0201
        gbc.setState(0x86a5, 0xb61a, 0x5180, 0x11c4, 0xc72d, 0xb227, 0x1, 0x0);
        gbc.writeMem(0x86a5, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xb61a);
        EXPECT(gbc.pc(), 0x86a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86a5), 0xcb);
        EXPECT(gbc.readMem(0x86a6), 0xcf);
        // CB CF 0202
        gbc.setState(0x8b45, 0x56d6, 0xb100, 0x48ac, 0x4b57, 0x6fe4, 0x0, 0x1);
        gbc.writeMem(0x8b45, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x56d6);
        EXPECT(gbc.pc(), 0x8b47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b45), 0xcb);
        EXPECT(gbc.readMem(0x8b46), 0xcf);
        // CB CF 0203
        gbc.setState(0xcfe5, 0xc6c, 0xc7b0, 0xfd5f, 0xbb82, 0x8283, 0x1, 0x1);
        gbc.writeMem(0xcfe5, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xc6c);
        EXPECT(gbc.pc(), 0xcfe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfe5), 0xcb);
        EXPECT(gbc.readMem(0xcfe6), 0xcf);
        // CB CF 0205
        gbc.setState(0x167, 0x90f1, 0xbbd0, 0xd2f7, 0x54c5, 0x556f, 0x1, 0x0);
        gbc.writeMem(0x167, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x90f1);
        EXPECT(gbc.pc(), 0x169);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0206
        gbc.setState(0xdfda, 0x6d6a, 0xa7b0, 0x788f, 0xd850, 0xaf7c, 0x0, 0x1);
        gbc.writeMem(0xdfda, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x6d6a);
        EXPECT(gbc.pc(), 0xdfdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfda), 0xcb);
        EXPECT(gbc.readMem(0xdfdb), 0xcf);
        // CB CF 0207
        gbc.setState(0x9ee6, 0xa3fc, 0xf750, 0x9434, 0x5fde, 0x7610, 0x1, 0x1);
        gbc.writeMem(0x9ee6, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xa3fc);
        EXPECT(gbc.pc(), 0x9ee8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ee6), 0xcb);
        EXPECT(gbc.readMem(0x9ee7), 0xcf);
        // CB CF 0208
        gbc.setState(0x6f82, 0x300e, 0xbd50, 0xe39a, 0x113d, 0x796f, 0x0, 0x0);
        gbc.writeMem(0x6f82, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x300e);
        EXPECT(gbc.pc(), 0x6f84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0209
        gbc.setState(0x3add, 0xad5e, 0x80a0, 0x4936, 0xd354, 0xd05a, 0x1, 0x0);
        gbc.writeMem(0x3add, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xad5e);
        EXPECT(gbc.pc(), 0x3adf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 020A
        gbc.setState(0x6677, 0x81c4, 0xb2e0, 0x76d5, 0x6162, 0x878f, 0x1, 0x0);
        gbc.writeMem(0x6677, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x81c4);
        EXPECT(gbc.pc(), 0x6679);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 020B
        gbc.setState(0x91f1, 0xbf58, 0xda60, 0xccef, 0xcfbe, 0xd1a6, 0x0, 0x1);
        gbc.writeMem(0x91f1, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xbf58);
        EXPECT(gbc.pc(), 0x91f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91f1), 0xcb);
        EXPECT(gbc.readMem(0x91f2), 0xcf);
        // CB CF 020C
        gbc.setState(0xb5ef, 0x884b, 0xa4f0, 0xb4bd, 0x300, 0xcc1c, 0x1, 0x0);
        gbc.writeMem(0xb5ef, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x884b);
        EXPECT(gbc.pc(), 0xb5f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5ef), 0xcb);
        EXPECT(gbc.readMem(0xb5f0), 0xcf);
        // CB CF 020D
        gbc.setState(0x296f, 0xd4ab, 0xd70, 0xea81, 0x2346, 0xbd59, 0x0, 0x1);
        gbc.writeMem(0x296f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xd4ab);
        EXPECT(gbc.pc(), 0x2971);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 020E
        gbc.setState(0xc73b, 0x5908, 0xece0, 0x3d77, 0x3fe5, 0xa3ca, 0x1, 0x1);
        gbc.writeMem(0xc73b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x5908);
        EXPECT(gbc.pc(), 0xc73d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc73b), 0xcb);
        EXPECT(gbc.readMem(0xc73c), 0xcf);
        // CB CF 020F
        gbc.setState(0x24b1, 0xa545, 0x340, 0xc0cc, 0xd2ad, 0x36f7, 0x1, 0x0);
        gbc.writeMem(0x24b1, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xa545);
        EXPECT(gbc.pc(), 0x24b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0210
        gbc.setState(0xda1f, 0xde5e, 0x8450, 0x2467, 0x2b88, 0x939c, 0x0, 0x1);
        gbc.writeMem(0xda1f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xde5e);
        EXPECT(gbc.pc(), 0xda21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda1f), 0xcb);
        EXPECT(gbc.readMem(0xda20), 0xcf);
        // CB CF 0211
        gbc.setState(0xa430, 0xc11, 0xd960, 0x42fe, 0xe192, 0x738, 0x1, 0x1);
        gbc.writeMem(0xa430, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xc11);
        EXPECT(gbc.pc(), 0xa432);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa430), 0xcb);
        EXPECT(gbc.readMem(0xa431), 0xcf);
        // CB CF 0212
        gbc.setState(0x78bf, 0xf195, 0x5380, 0x6e15, 0xff91, 0xfe7c, 0x0, 0x1);
        gbc.writeMem(0x78bf, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xf195);
        EXPECT(gbc.pc(), 0x78c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0213
        gbc.setState(0xcbcb, 0x3d9e, 0x82d0, 0x75d8, 0xafbe, 0x1a61, 0x0, 0x0);
        gbc.writeMem(0xcbcb, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3d9e);
        EXPECT(gbc.pc(), 0xcbcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbcb), 0xcb);
        EXPECT(gbc.readMem(0xcbcc), 0xcf);
        // CB CF 0214
        gbc.setState(0x77fc, 0x86e1, 0xa180, 0xe038, 0x2cfc, 0x8ed0, 0x1, 0x1);
        gbc.writeMem(0x77fc, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x86e1);
        EXPECT(gbc.pc(), 0x77fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0216
        gbc.setState(0x749c, 0x61d7, 0x6a00, 0x336, 0x85c9, 0xe06a, 0x0, 0x0);
        gbc.writeMem(0x749c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x61d7);
        EXPECT(gbc.pc(), 0x749e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0217
        gbc.setState(0x3c83, 0x73b4, 0x7ab0, 0xec78, 0x6464, 0xc3d, 0x1, 0x1);
        gbc.writeMem(0x3c83, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x73b4);
        EXPECT(gbc.pc(), 0x3c85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 021A
        gbc.setState(0x9e20, 0x53a, 0x4940, 0x9707, 0xfa7c, 0xeb27, 0x0, 0x0);
        gbc.writeMem(0x9e20, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x53a);
        EXPECT(gbc.pc(), 0x9e22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e20), 0xcb);
        EXPECT(gbc.readMem(0x9e21), 0xcf);
        // CB CF 021B
        gbc.setState(0x8ebb, 0x230c, 0x64c0, 0x87a2, 0xdf91, 0x6379, 0x0, 0x1);
        gbc.writeMem(0x8ebb, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x230c);
        EXPECT(gbc.pc(), 0x8ebd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ebb), 0xcb);
        EXPECT(gbc.readMem(0x8ebc), 0xcf);
        // CB CF 021C
        gbc.setState(0xc9ec, 0x9ab6, 0x3290, 0xf53c, 0xda42, 0xeb9a, 0x1, 0x1);
        gbc.writeMem(0xc9ec, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9ab6);
        EXPECT(gbc.pc(), 0xc9ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9ec), 0xcb);
        EXPECT(gbc.readMem(0xc9ed), 0xcf);
        // CB CF 021D
        gbc.setState(0x8624, 0x9ce0, 0xe4a0, 0x380d, 0xfc0a, 0x9688, 0x0, 0x0);
        gbc.writeMem(0x8624, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x9ce0);
        EXPECT(gbc.pc(), 0x8626);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8624), 0xcb);
        EXPECT(gbc.readMem(0x8625), 0xcf);
        // CB CF 021E
        gbc.setState(0xb859, 0xb63b, 0xdda0, 0x878c, 0xa7b0, 0x3ab1, 0x1, 0x1);
        gbc.writeMem(0xb859, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xb63b);
        EXPECT(gbc.pc(), 0xb85b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb859), 0xcb);
        EXPECT(gbc.readMem(0xb85a), 0xcf);
        // CB CF 021F
        gbc.setState(0x2712, 0x561a, 0xa980, 0xb5ce, 0xa452, 0xfba6, 0x0, 0x1);
        gbc.writeMem(0x2712, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x561a);
        EXPECT(gbc.pc(), 0x2714);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0220
        gbc.setState(0x6b15, 0x6bc4, 0xf6d0, 0x5ce0, 0x6208, 0xa4e7, 0x0, 0x1);
        gbc.writeMem(0x6b15, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x6bc4);
        EXPECT(gbc.pc(), 0x6b17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0222
        gbc.setState(0x8389, 0x3484, 0xf7b0, 0xd3d7, 0x55ab, 0x28c7, 0x0, 0x0);
        gbc.writeMem(0x8389, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x3484);
        EXPECT(gbc.pc(), 0x838b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8389), 0xcb);
        EXPECT(gbc.readMem(0x838a), 0xcf);
        // CB CF 0223
        gbc.setState(0x553c, 0xf455, 0xd3a0, 0x4237, 0x963b, 0x7467, 0x1, 0x1);
        gbc.writeMem(0x553c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xf455);
        EXPECT(gbc.pc(), 0x553e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0224
        gbc.setState(0x9704, 0x4251, 0xc0b0, 0x2ab7, 0x8df2, 0xcb44, 0x1, 0x1);
        gbc.writeMem(0x9704, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x4251);
        EXPECT(gbc.pc(), 0x9706);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9704), 0xcb);
        EXPECT(gbc.readMem(0x9705), 0xcf);
        // CB CF 0225
        gbc.setState(0xa899, 0x405f, 0xcef0, 0x2be0, 0xc241, 0xd960, 0x0, 0x1);
        gbc.writeMem(0xa899, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x405f);
        EXPECT(gbc.pc(), 0xa89b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa899), 0xcb);
        EXPECT(gbc.readMem(0xa89a), 0xcf);
        // CB CF 0226
        gbc.setState(0x1181, 0xbc56, 0x2fc0, 0x261e, 0x901a, 0xd317, 0x0, 0x1);
        gbc.writeMem(0x1181, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xbc56);
        EXPECT(gbc.pc(), 0x1183);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0227
        gbc.setState(0x4c24, 0x633f, 0x7c90, 0xed42, 0x7124, 0xe159, 0x0, 0x0);
        gbc.writeMem(0x4c24, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x633f);
        EXPECT(gbc.pc(), 0x4c26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0228
        gbc.setState(0x3a50, 0x5b02, 0x1b0, 0x7d60, 0xa089, 0x485f, 0x0, 0x0);
        gbc.writeMem(0x3a50, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x5b02);
        EXPECT(gbc.pc(), 0x3a52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0229
        gbc.setState(0x36e, 0xadfc, 0xe6b0, 0xc809, 0xeb1c, 0x18f5, 0x0, 0x1);
        gbc.writeMem(0x36e, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xadfc);
        EXPECT(gbc.pc(), 0x370);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 022A
        gbc.setState(0xd9a3, 0x4ea, 0x240, 0xbdaa, 0x2177, 0xfef3, 0x1, 0x1);
        gbc.writeMem(0xd9a3, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x4ea);
        EXPECT(gbc.pc(), 0xd9a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9a3), 0xcb);
        EXPECT(gbc.readMem(0xd9a4), 0xcf);
        // CB CF 022B
        gbc.setState(0x7884, 0x637, 0xaab0, 0x13b3, 0x8809, 0x267a, 0x0, 0x0);
        gbc.writeMem(0x7884, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x637);
        EXPECT(gbc.pc(), 0x7886);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 022C
        gbc.setState(0xec9, 0x99aa, 0x410, 0x622c, 0xceba, 0xef0d, 0x1, 0x0);
        gbc.writeMem(0xec9, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x99aa);
        EXPECT(gbc.pc(), 0xecb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 022D
        gbc.setState(0x2274, 0x99d1, 0x6220, 0xbd26, 0xcd47, 0x428c, 0x0, 0x1);
        gbc.writeMem(0x2274, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x99d1);
        EXPECT(gbc.pc(), 0x2276);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 022E
        gbc.setState(0x9b02, 0xd6c8, 0x5940, 0x497d, 0x7967, 0xd6b9, 0x0, 0x1);
        gbc.writeMem(0x9b02, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xd6c8);
        EXPECT(gbc.pc(), 0x9b04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b02), 0xcb);
        EXPECT(gbc.readMem(0x9b03), 0xcf);
        // CB CF 022F
        gbc.setState(0x91a6, 0xeb9d, 0xf4f0, 0x6030, 0x175f, 0x33d1, 0x0, 0x1);
        gbc.writeMem(0x91a6, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xeb9d);
        EXPECT(gbc.pc(), 0x91a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91a6), 0xcb);
        EXPECT(gbc.readMem(0x91a7), 0xcf);
        // CB CF 0230
        gbc.setState(0x66c1, 0xf2ed, 0x3360, 0x6f2e, 0x246e, 0xc182, 0x0, 0x0);
        gbc.writeMem(0x66c1, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xf2ed);
        EXPECT(gbc.pc(), 0x66c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0231
        gbc.setState(0x51ac, 0x9b26, 0x7150, 0xd5d2, 0x2fb8, 0xad37, 0x1, 0x1);
        gbc.writeMem(0x51ac, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x9b26);
        EXPECT(gbc.pc(), 0x51ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0232
        gbc.setState(0x8399, 0x2f11, 0x10a0, 0x29, 0x8ec5, 0xaa44, 0x1, 0x1);
        gbc.writeMem(0x8399, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x2f11);
        EXPECT(gbc.pc(), 0x839b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8399), 0xcb);
        EXPECT(gbc.readMem(0x839a), 0xcf);
        // CB CF 0233
        gbc.setState(0x9661, 0x138e, 0x99d0, 0x956f, 0x6e1d, 0xe8b, 0x0, 0x1);
        gbc.writeMem(0x9661, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x138e);
        EXPECT(gbc.pc(), 0x9663);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9661), 0xcb);
        EXPECT(gbc.readMem(0x9662), 0xcf);
        // CB CF 0234
        gbc.setState(0xb333, 0x9240, 0x1d00, 0x9490, 0x37d1, 0x2784, 0x0, 0x1);
        gbc.writeMem(0xb333, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x9240);
        EXPECT(gbc.pc(), 0xb335);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb333), 0xcb);
        EXPECT(gbc.readMem(0xb334), 0xcf);
        // CB CF 0235
        gbc.setState(0x5d8e, 0x92d4, 0xb3b0, 0x1592, 0x2045, 0xed75, 0x1, 0x0);
        gbc.writeMem(0x5d8e, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x92d4);
        EXPECT(gbc.pc(), 0x5d90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0236
        gbc.setState(0x6e88, 0x610d, 0xc770, 0x331f, 0xb201, 0x1021, 0x1, 0x0);
        gbc.writeMem(0x6e88, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x610d);
        EXPECT(gbc.pc(), 0x6e8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0237
        gbc.setState(0xed64, 0x1b60, 0x1aa0, 0x27b2, 0xb389, 0x8dd, 0x1, 0x1);
        gbc.writeMem(0xed64, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x1b60);
        EXPECT(gbc.pc(), 0xed66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed64), 0xcb);
        EXPECT(gbc.readMem(0xed65), 0xcf);
        // CB CF 0238
        gbc.setState(0x3111, 0x5178, 0xb0f0, 0x74f2, 0x126b, 0x5ea8, 0x1, 0x1);
        gbc.writeMem(0x3111, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5178);
        EXPECT(gbc.pc(), 0x3113);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 023A
        gbc.setState(0x725c, 0x7bd7, 0xc6e0, 0xf2a4, 0xefc2, 0x33ae, 0x0, 0x1);
        gbc.writeMem(0x725c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x7bd7);
        EXPECT(gbc.pc(), 0x725e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 023B
        gbc.setState(0x5c1f, 0x34d, 0xd330, 0x4c55, 0xb0f8, 0x3fdd, 0x0, 0x0);
        gbc.writeMem(0x5c1f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x34d);
        EXPECT(gbc.pc(), 0x5c21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 023C
        gbc.setState(0x6e3b, 0x8f4, 0x5810, 0x8a84, 0x1a97, 0x987d, 0x1, 0x1);
        gbc.writeMem(0x6e3b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x8f4);
        EXPECT(gbc.pc(), 0x6e3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 023D
        gbc.setState(0x1fdc, 0x6bfc, 0xcc0, 0x1648, 0xda0a, 0xb348, 0x1, 0x1);
        gbc.writeMem(0x1fdc, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x6bfc);
        EXPECT(gbc.pc(), 0x1fde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 023E
        gbc.setState(0x1fc6, 0xdbde, 0xc6b0, 0x95da, 0xc65c, 0xb147, 0x1, 0x1);
        gbc.writeMem(0x1fc6, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xdbde);
        EXPECT(gbc.pc(), 0x1fc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 023F
        gbc.setState(0x8214, 0x2fb0, 0xe170, 0xf0f8, 0x9a49, 0x2c94, 0x1, 0x1);
        gbc.writeMem(0x8214, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2fb0);
        EXPECT(gbc.pc(), 0x8216);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8214), 0xcb);
        EXPECT(gbc.readMem(0x8215), 0xcf);
        // CB CF 0240
        gbc.setState(0x302a, 0x26a2, 0xdc40, 0xdd36, 0x1128, 0xf8fa, 0x0, 0x0);
        gbc.writeMem(0x302a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x26a2);
        EXPECT(gbc.pc(), 0x302c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0241
        gbc.setState(0x38e4, 0xe4d3, 0x3a60, 0x2e1d, 0x49d0, 0xd48f, 0x0, 0x1);
        gbc.writeMem(0x38e4, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xe4d3);
        EXPECT(gbc.pc(), 0x38e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0242
        gbc.setState(0x696d, 0x4126, 0xbe80, 0x8857, 0x67ef, 0x5f70, 0x1, 0x0);
        gbc.writeMem(0x696d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x4126);
        EXPECT(gbc.pc(), 0x696f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0243
        gbc.setState(0xadad, 0xe9b8, 0x6050, 0x2fb7, 0x709e, 0x18d3, 0x0, 0x0);
        gbc.writeMem(0xadad, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xe9b8);
        EXPECT(gbc.pc(), 0xadaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadad), 0xcb);
        EXPECT(gbc.readMem(0xadae), 0xcf);
        // CB CF 0244
        gbc.setState(0x9c36, 0xe600, 0xde70, 0x6e76, 0xf984, 0x2eaa, 0x1, 0x1);
        gbc.writeMem(0x9c36, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe600);
        EXPECT(gbc.pc(), 0x9c38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c36), 0xcb);
        EXPECT(gbc.readMem(0x9c37), 0xcf);
        // CB CF 0245
        gbc.setState(0xef3b, 0x43d5, 0x6290, 0x702, 0xcc10, 0x597e, 0x0, 0x1);
        gbc.writeMem(0xef3b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x43d5);
        EXPECT(gbc.pc(), 0xef3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef3b), 0xcb);
        EXPECT(gbc.readMem(0xef3c), 0xcf);
        // CB CF 0246
        gbc.setState(0x43e, 0xec2e, 0x51c0, 0xbddb, 0x3e9, 0x73f, 0x1, 0x0);
        gbc.writeMem(0x43e, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xec2e);
        EXPECT(gbc.pc(), 0x440);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0247
        gbc.setState(0x8a28, 0x1fb2, 0x19a0, 0x433a, 0x91db, 0xa7cf, 0x0, 0x0);
        gbc.writeMem(0x8a28, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x1fb2);
        EXPECT(gbc.pc(), 0x8a2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a28), 0xcb);
        EXPECT(gbc.readMem(0x8a29), 0xcf);
        // CB CF 0248
        gbc.setState(0x291b, 0xa74, 0x3320, 0x2ce1, 0xb18e, 0x2ac, 0x0, 0x1);
        gbc.writeMem(0x291b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xa74);
        EXPECT(gbc.pc(), 0x291d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0249
        gbc.setState(0x409d, 0x902d, 0x6f60, 0xd98b, 0x34bf, 0xbd66, 0x1, 0x0);
        gbc.writeMem(0x409d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x902d);
        EXPECT(gbc.pc(), 0x409f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 024A
        gbc.setState(0xcaec, 0xfe0, 0xba70, 0x94e7, 0x8c7, 0x1b32, 0x1, 0x1);
        gbc.writeMem(0xcaec, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xfe0);
        EXPECT(gbc.pc(), 0xcaee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaec), 0xcb);
        EXPECT(gbc.readMem(0xcaed), 0xcf);
        // CB CF 024B
        gbc.setState(0x3014, 0xc8e1, 0xa7c0, 0x5d10, 0xf2bb, 0x5a7, 0x1, 0x0);
        gbc.writeMem(0x3014, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xc8e1);
        EXPECT(gbc.pc(), 0x3016);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 024C
        gbc.setState(0x43ab, 0xb8d1, 0x130, 0x782b, 0xc064, 0x2f8b, 0x1, 0x0);
        gbc.writeMem(0x43ab, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xb8d1);
        EXPECT(gbc.pc(), 0x43ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 024D
        gbc.setState(0xc3a1, 0x15bb, 0x93e0, 0x4d98, 0xe23f, 0x5e30, 0x1, 0x1);
        gbc.writeMem(0xc3a1, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x15bb);
        EXPECT(gbc.pc(), 0xc3a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3a1), 0xcb);
        EXPECT(gbc.readMem(0xc3a2), 0xcf);
        // CB CF 024E
        gbc.setState(0x18c, 0x37be, 0x5e80, 0xb517, 0xf5bf, 0xfe1f, 0x0, 0x0);
        gbc.writeMem(0x18c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x37be);
        EXPECT(gbc.pc(), 0x18e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 024F
        gbc.setState(0xd771, 0xcff9, 0xc0a0, 0x542, 0xcdd8, 0xbeab, 0x0, 0x1);
        gbc.writeMem(0xd771, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xcff9);
        EXPECT(gbc.pc(), 0xd773);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd771), 0xcb);
        EXPECT(gbc.readMem(0xd772), 0xcf);
        // CB CF 0250
        gbc.setState(0x41a9, 0x97ed, 0x8520, 0xd740, 0xf9bd, 0x9fe3, 0x1, 0x1);
        gbc.writeMem(0x41a9, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x97ed);
        EXPECT(gbc.pc(), 0x41ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0251
        gbc.setState(0x1200, 0x1d97, 0x9230, 0xe11e, 0x4259, 0x7204, 0x0, 0x0);
        gbc.writeMem(0x1200, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x1d97);
        EXPECT(gbc.pc(), 0x1202);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0252
        gbc.setState(0xcfed, 0x8cb5, 0xb590, 0x6334, 0xb93, 0xb72c, 0x1, 0x1);
        gbc.writeMem(0xcfed, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x8cb5);
        EXPECT(gbc.pc(), 0xcfef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfed), 0xcb);
        EXPECT(gbc.readMem(0xcfee), 0xcf);
        // CB CF 0253
        gbc.setState(0x9bea, 0x2cb2, 0xf950, 0xd9fd, 0x192, 0x24e, 0x0, 0x0);
        gbc.writeMem(0x9bea, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x2cb2);
        EXPECT(gbc.pc(), 0x9bec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bea), 0xcb);
        EXPECT(gbc.readMem(0x9beb), 0xcf);
        // CB CF 0254
        gbc.setState(0xb854, 0xf9fe, 0x2d60, 0x1ddf, 0xf16f, 0xf014, 0x1, 0x1);
        gbc.writeMem(0xb854, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xf9fe);
        EXPECT(gbc.pc(), 0xb856);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb854), 0xcb);
        EXPECT(gbc.readMem(0xb855), 0xcf);
        // CB CF 0255
        gbc.setState(0xb3d7, 0x5884, 0xf8d0, 0xda5e, 0xfe87, 0x9eec, 0x1, 0x0);
        gbc.writeMem(0xb3d7, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x5884);
        EXPECT(gbc.pc(), 0xb3d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3d7), 0xcb);
        EXPECT(gbc.readMem(0xb3d8), 0xcf);
        // CB CF 0256
        gbc.setState(0x824c, 0xf262, 0x3260, 0xe1c3, 0x64b7, 0x59d8, 0x0, 0x1);
        gbc.writeMem(0x824c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xf262);
        EXPECT(gbc.pc(), 0x824e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x824c), 0xcb);
        EXPECT(gbc.readMem(0x824d), 0xcf);
        // CB CF 0257
        gbc.setState(0x1141, 0x53ec, 0xd40, 0x81ee, 0xc8f3, 0x9967, 0x0, 0x1);
        gbc.writeMem(0x1141, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x53ec);
        EXPECT(gbc.pc(), 0x1143);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0258
        gbc.setState(0x78a2, 0xd3ee, 0xd160, 0x9476, 0xbb0b, 0xea84, 0x0, 0x0);
        gbc.writeMem(0x78a2, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xd3ee);
        EXPECT(gbc.pc(), 0x78a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0259
        gbc.setState(0x8f60, 0xdaa5, 0xac50, 0x194f, 0x3c64, 0x297c, 0x1, 0x1);
        gbc.writeMem(0x8f60, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xdaa5);
        EXPECT(gbc.pc(), 0x8f62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f60), 0xcb);
        EXPECT(gbc.readMem(0x8f61), 0xcf);
        // CB CF 025A
        gbc.setState(0x98d, 0xb9c0, 0x2b90, 0xed75, 0xf612, 0x957d, 0x0, 0x0);
        gbc.writeMem(0x98d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb9c0);
        EXPECT(gbc.pc(), 0x98f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 025B
        gbc.setState(0x732c, 0x6a7, 0xa3e0, 0xd107, 0x72c3, 0x63db, 0x1, 0x0);
        gbc.writeMem(0x732c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x6a7);
        EXPECT(gbc.pc(), 0x732e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 025C
        gbc.setState(0x7233, 0x4c02, 0xa890, 0x5807, 0x37a1, 0x3233, 0x1, 0x1);
        gbc.writeMem(0x7233, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4c02);
        EXPECT(gbc.pc(), 0x7235);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 025D
        gbc.setState(0xc69d, 0x2dff, 0x1240, 0xc8eb, 0x2b1, 0x9a03, 0x0, 0x1);
        gbc.writeMem(0xc69d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x2dff);
        EXPECT(gbc.pc(), 0xc69f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc69d), 0xcb);
        EXPECT(gbc.readMem(0xc69e), 0xcf);
        // CB CF 025E
        gbc.setState(0x98ba, 0x7532, 0x3320, 0x38a3, 0x399c, 0xbc43, 0x1, 0x0);
        gbc.writeMem(0x98ba, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x7532);
        EXPECT(gbc.pc(), 0x98bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98ba), 0xcb);
        EXPECT(gbc.readMem(0x98bb), 0xcf);
        // CB CF 025F
        gbc.setState(0x5fbe, 0xc7c, 0x8580, 0xc744, 0x7d17, 0xd348, 0x1, 0x0);
        gbc.writeMem(0x5fbe, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xc7c);
        EXPECT(gbc.pc(), 0x5fc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0260
        gbc.setState(0xc1cb, 0x4e96, 0x5e10, 0xb784, 0x4079, 0xa733, 0x1, 0x0);
        gbc.writeMem(0xc1cb, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4e96);
        EXPECT(gbc.pc(), 0xc1cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1cb), 0xcb);
        EXPECT(gbc.readMem(0xc1cc), 0xcf);
        // CB CF 0261
        gbc.setState(0x973b, 0x7ad4, 0x8710, 0x7dc, 0x59ff, 0x6cf3, 0x1, 0x1);
        gbc.writeMem(0x973b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x7ad4);
        EXPECT(gbc.pc(), 0x973d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x973b), 0xcb);
        EXPECT(gbc.readMem(0x973c), 0xcf);
        // CB CF 0262
        gbc.setState(0x66dd, 0x6f47, 0x8390, 0xc7c5, 0xc38b, 0x7275, 0x0, 0x1);
        gbc.writeMem(0x66dd, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x6f47);
        EXPECT(gbc.pc(), 0x66df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0263
        gbc.setState(0x3363, 0x4880, 0xc260, 0x1dd3, 0x9cea, 0x4500, 0x0, 0x1);
        gbc.writeMem(0x3363, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x4880);
        EXPECT(gbc.pc(), 0x3365);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0265
        gbc.setState(0xa82a, 0x5c71, 0xc780, 0xa980, 0x146e, 0x69aa, 0x0, 0x0);
        gbc.writeMem(0xa82a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x5c71);
        EXPECT(gbc.pc(), 0xa82c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa82a), 0xcb);
        EXPECT(gbc.readMem(0xa82b), 0xcf);
        // CB CF 0266
        gbc.setState(0xaf65, 0x32f4, 0xcf10, 0xc40e, 0xfebe, 0xc3de, 0x0, 0x1);
        gbc.writeMem(0xaf65, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x32f4);
        EXPECT(gbc.pc(), 0xaf67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf65), 0xcb);
        EXPECT(gbc.readMem(0xaf66), 0xcf);
        // CB CF 0267
        gbc.setState(0xc13, 0xb491, 0x4340, 0xc376, 0xfe07, 0x30f8, 0x0, 0x1);
        gbc.writeMem(0xc13, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xb491);
        EXPECT(gbc.pc(), 0xc15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0268
        gbc.setState(0x11c, 0xd90f, 0xfa20, 0x72f1, 0xa597, 0x162e, 0x0, 0x1);
        gbc.writeMem(0x11c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xd90f);
        EXPECT(gbc.pc(), 0x11e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0269
        gbc.setState(0x474a, 0x7fc5, 0xe580, 0xb5b1, 0x4999, 0x12d6, 0x1, 0x1);
        gbc.writeMem(0x474a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x7fc5);
        EXPECT(gbc.pc(), 0x474c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 026A
        gbc.setState(0xcc16, 0x2452, 0x4e20, 0x8964, 0x3851, 0x603c, 0x1, 0x1);
        gbc.writeMem(0xcc16, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2452);
        EXPECT(gbc.pc(), 0xcc18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc16), 0xcb);
        EXPECT(gbc.readMem(0xcc17), 0xcf);
        // CB CF 026B
        gbc.setState(0x9efd, 0x3239, 0xcde0, 0x3262, 0xbeb5, 0xdb2e, 0x0, 0x0);
        gbc.writeMem(0x9efd, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3239);
        EXPECT(gbc.pc(), 0x9eff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9efd), 0xcb);
        EXPECT(gbc.readMem(0x9efe), 0xcf);
        // CB CF 026C
        gbc.setState(0x8f7f, 0x2e32, 0xa0f0, 0x730e, 0xfefc, 0x320f, 0x1, 0x0);
        gbc.writeMem(0x8f7f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x2e32);
        EXPECT(gbc.pc(), 0x8f81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f7f), 0xcb);
        EXPECT(gbc.readMem(0x8f80), 0xcf);
        // CB CF 026D
        gbc.setState(0x84ba, 0xf9e8, 0x24d0, 0x1840, 0x709e, 0x3706, 0x0, 0x1);
        gbc.writeMem(0x84ba, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf9e8);
        EXPECT(gbc.pc(), 0x84bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84ba), 0xcb);
        EXPECT(gbc.readMem(0x84bb), 0xcf);
        // CB CF 026E
        gbc.setState(0x98d5, 0xd78b, 0x3a60, 0x31, 0x2c13, 0x475b, 0x1, 0x0);
        gbc.writeMem(0x98d5, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd78b);
        EXPECT(gbc.pc(), 0x98d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98d5), 0xcb);
        EXPECT(gbc.readMem(0x98d6), 0xcf);
        // CB CF 026F
        gbc.setState(0x14, 0x2cfc, 0x2210, 0xd234, 0xaaf7, 0x2b72, 0x0, 0x1);
        gbc.writeMem(0x14, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2cfc);
        EXPECT(gbc.pc(), 0x16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0270
        gbc.setState(0x7886, 0xf770, 0xe940, 0xa832, 0xae83, 0x544c, 0x0, 0x0);
        gbc.writeMem(0x7886, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xf770);
        EXPECT(gbc.pc(), 0x7888);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0271
        gbc.setState(0xdcb0, 0xf2b7, 0x5b80, 0xb57e, 0xb4cf, 0xff47, 0x0, 0x0);
        gbc.writeMem(0xdcb0, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xf2b7);
        EXPECT(gbc.pc(), 0xdcb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcb0), 0xcb);
        EXPECT(gbc.readMem(0xdcb1), 0xcf);
        // CB CF 0272
        gbc.setState(0xd229, 0xf8e2, 0x5b80, 0xfd45, 0x4d, 0x8124, 0x1, 0x0);
        gbc.writeMem(0xd229, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xf8e2);
        EXPECT(gbc.pc(), 0xd22b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd229), 0xcb);
        EXPECT(gbc.readMem(0xd22a), 0xcf);
        // CB CF 0273
        gbc.setState(0x4926, 0xe30, 0xb40, 0xee1e, 0x940e, 0xf439, 0x1, 0x0);
        gbc.writeMem(0x4926, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xe30);
        EXPECT(gbc.pc(), 0x4928);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0274
        gbc.setState(0x50dd, 0xef22, 0x8900, 0x54b4, 0xf6cb, 0x1c0f, 0x1, 0x1);
        gbc.writeMem(0x50dd, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xef22);
        EXPECT(gbc.pc(), 0x50df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0275
        gbc.setState(0x2837, 0xa6f7, 0x3460, 0x3aa3, 0x41c3, 0xdb4f, 0x1, 0x1);
        gbc.writeMem(0x2837, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xa6f7);
        EXPECT(gbc.pc(), 0x2839);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0276
        gbc.setState(0x2a22, 0xc419, 0xf980, 0x2ddf, 0x26ec, 0xd59d, 0x1, 0x1);
        gbc.writeMem(0x2a22, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xc419);
        EXPECT(gbc.pc(), 0x2a24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0277
        gbc.setState(0x749, 0xa52d, 0x8fa0, 0x3767, 0xd984, 0x9b23, 0x1, 0x1);
        gbc.writeMem(0x749, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xa52d);
        EXPECT(gbc.pc(), 0x74b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0278
        gbc.setState(0xfa2, 0x6d6c, 0x36d0, 0xcb, 0x2bdb, 0x24c1, 0x1, 0x0);
        gbc.writeMem(0xfa2, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6d6c);
        EXPECT(gbc.pc(), 0xfa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0279
        gbc.setState(0xb1af, 0xfcbb, 0xc0a0, 0x5a3a, 0x2114, 0xed6a, 0x1, 0x1);
        gbc.writeMem(0xb1af, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xfcbb);
        EXPECT(gbc.pc(), 0xb1b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1af), 0xcb);
        EXPECT(gbc.readMem(0xb1b0), 0xcf);
        // CB CF 027A
        gbc.setState(0x35b3, 0x7c50, 0x2ea0, 0x4ab7, 0xbfa3, 0xa577, 0x0, 0x1);
        gbc.writeMem(0x35b3, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x7c50);
        EXPECT(gbc.pc(), 0x35b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 027B
        gbc.setState(0x8a26, 0x39c2, 0xdc0, 0xa39c, 0xa091, 0xf568, 0x0, 0x0);
        gbc.writeMem(0x8a26, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x39c2);
        EXPECT(gbc.pc(), 0x8a28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a26), 0xcb);
        EXPECT(gbc.readMem(0x8a27), 0xcf);
        // CB CF 027C
        gbc.setState(0x52bc, 0xef1d, 0x5010, 0x9c7, 0xb44, 0x8f82, 0x1, 0x1);
        gbc.writeMem(0x52bc, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xef1d);
        EXPECT(gbc.pc(), 0x52be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 027D
        gbc.setState(0x5eb9, 0x69c, 0xfb10, 0x4ede, 0x28a1, 0xc860, 0x1, 0x0);
        gbc.writeMem(0x5eb9, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x69c);
        EXPECT(gbc.pc(), 0x5ebb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 027E
        gbc.setState(0xae1f, 0x236c, 0x67b0, 0x768a, 0x3b75, 0x3186, 0x0, 0x1);
        gbc.writeMem(0xae1f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x236c);
        EXPECT(gbc.pc(), 0xae21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae1f), 0xcb);
        EXPECT(gbc.readMem(0xae20), 0xcf);
        // CB CF 027F
        gbc.setState(0xc4da, 0xb58d, 0xbce0, 0x6535, 0xa82b, 0xabf3, 0x1, 0x0);
        gbc.writeMem(0xc4da, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xb58d);
        EXPECT(gbc.pc(), 0xc4dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4da), 0xcb);
        EXPECT(gbc.readMem(0xc4db), 0xcf);
        // CB CF 0280
        gbc.setState(0xd219, 0xcd1c, 0xe050, 0x6a5c, 0xade6, 0x1c1, 0x0, 0x0);
        gbc.writeMem(0xd219, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xcd1c);
        EXPECT(gbc.pc(), 0xd21b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd219), 0xcb);
        EXPECT(gbc.readMem(0xd21a), 0xcf);
        // CB CF 0281
        gbc.setState(0xa456, 0xa343, 0x1f30, 0x6ff3, 0x965a, 0x2280, 0x0, 0x1);
        gbc.writeMem(0xa456, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xa343);
        EXPECT(gbc.pc(), 0xa458);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa456), 0xcb);
        EXPECT(gbc.readMem(0xa457), 0xcf);
        // CB CF 0282
        gbc.setState(0x2421, 0xb958, 0xfc70, 0x1fc0, 0xb923, 0x4795, 0x0, 0x0);
        gbc.writeMem(0x2421, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xb958);
        EXPECT(gbc.pc(), 0x2423);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0283
        gbc.setState(0x458b, 0xd1a0, 0x1d80, 0x97a9, 0xe6a5, 0x8c90, 0x1, 0x0);
        gbc.writeMem(0x458b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xd1a0);
        EXPECT(gbc.pc(), 0x458d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0285
        gbc.setState(0x27de, 0xc63f, 0x97d0, 0x99ba, 0xecd5, 0xd977, 0x0, 0x1);
        gbc.writeMem(0x27de, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc63f);
        EXPECT(gbc.pc(), 0x27e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0286
        gbc.setState(0x1f36, 0x517c, 0xea40, 0xd3f1, 0xe20c, 0xe726, 0x1, 0x1);
        gbc.writeMem(0x1f36, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x517c);
        EXPECT(gbc.pc(), 0x1f38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0287
        gbc.setState(0xe688, 0x7d33, 0x91f0, 0x7b90, 0xadfd, 0x4547, 0x1, 0x1);
        gbc.writeMem(0xe688, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7d33);
        EXPECT(gbc.pc(), 0xe68a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe688), 0xcb);
        EXPECT(gbc.readMem(0xe689), 0xcf);
        // CB CF 0288
        gbc.setState(0x6819, 0xa185, 0x9c60, 0xdf4b, 0x449f, 0xaaa4, 0x1, 0x1);
        gbc.writeMem(0x6819, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xa185);
        EXPECT(gbc.pc(), 0x681b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0289
        gbc.setState(0x8835, 0xcb0, 0x3780, 0x16b9, 0x5d8a, 0x7b63, 0x1, 0x1);
        gbc.writeMem(0x8835, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xcb0);
        EXPECT(gbc.pc(), 0x8837);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8835), 0xcb);
        EXPECT(gbc.readMem(0x8836), 0xcf);
        // CB CF 028A
        gbc.setState(0x66f7, 0x1d8d, 0xc8c0, 0xfcfc, 0xd4a0, 0x4964, 0x0, 0x0);
        gbc.writeMem(0x66f7, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x1d8d);
        EXPECT(gbc.pc(), 0x66f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 028B
        gbc.setState(0xaa3f, 0x7143, 0xcc10, 0x85e9, 0x509, 0xdb78, 0x1, 0x0);
        gbc.writeMem(0xaa3f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x7143);
        EXPECT(gbc.pc(), 0xaa41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa3f), 0xcb);
        EXPECT(gbc.readMem(0xaa40), 0xcf);
        // CB CF 028C
        gbc.setState(0x15be, 0xc7ca, 0xa7a0, 0xda8e, 0x2630, 0x5c2e, 0x0, 0x1);
        gbc.writeMem(0x15be, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xc7ca);
        EXPECT(gbc.pc(), 0x15c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 028D
        gbc.setState(0xc4d7, 0x9ed6, 0x1060, 0x39d9, 0xb066, 0xcbd8, 0x1, 0x0);
        gbc.writeMem(0xc4d7, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x9ed6);
        EXPECT(gbc.pc(), 0xc4d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4d7), 0xcb);
        EXPECT(gbc.readMem(0xc4d8), 0xcf);
        // CB CF 028E
        gbc.setState(0x30c, 0x46e0, 0xaf00, 0x81b9, 0xdd42, 0xacaf, 0x1, 0x1);
        gbc.writeMem(0x30c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x46e0);
        EXPECT(gbc.pc(), 0x30e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 028F
        gbc.setState(0x8c09, 0x7cc9, 0x2790, 0x763a, 0xe8bc, 0x4576, 0x1, 0x0);
        gbc.writeMem(0x8c09, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x7cc9);
        EXPECT(gbc.pc(), 0x8c0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c09), 0xcb);
        EXPECT(gbc.readMem(0x8c0a), 0xcf);
        // CB CF 0290
        gbc.setState(0x3414, 0x29e9, 0xfd10, 0xe5a4, 0xaae5, 0x550a, 0x0, 0x0);
        gbc.writeMem(0x3414, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x29e9);
        EXPECT(gbc.pc(), 0x3416);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0291
        gbc.setState(0x9ef0, 0xa745, 0xca70, 0x5d9a, 0x9f01, 0xd632, 0x0, 0x0);
        gbc.writeMem(0x9ef0, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa745);
        EXPECT(gbc.pc(), 0x9ef2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ef0), 0xcb);
        EXPECT(gbc.readMem(0x9ef1), 0xcf);
        // CB CF 0292
        gbc.setState(0xae89, 0x965b, 0xd5d0, 0xd0a, 0x1a2d, 0x8673, 0x1, 0x0);
        gbc.writeMem(0xae89, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x965b);
        EXPECT(gbc.pc(), 0xae8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae89), 0xcb);
        EXPECT(gbc.readMem(0xae8a), 0xcf);
        // CB CF 0293
        gbc.setState(0xd021, 0x2e36, 0x6140, 0x56d6, 0xcf26, 0x4c79, 0x1, 0x0);
        gbc.writeMem(0xd021, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x2e36);
        EXPECT(gbc.pc(), 0xd023);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd021), 0xcb);
        EXPECT(gbc.readMem(0xd022), 0xcf);
        // CB CF 0294
        gbc.setState(0x7cc0, 0x7427, 0x5340, 0x4ab2, 0xd20c, 0x3d6b, 0x1, 0x0);
        gbc.writeMem(0x7cc0, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x7427);
        EXPECT(gbc.pc(), 0x7cc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0295
        gbc.setState(0x3c37, 0x9bc1, 0x7070, 0x5eb6, 0xd4ea, 0xaddb, 0x1, 0x1);
        gbc.writeMem(0x3c37, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x9bc1);
        EXPECT(gbc.pc(), 0x3c39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0296
        gbc.setState(0x9ffc, 0xbe9d, 0x9d10, 0x14f3, 0x8f8f, 0x3d38, 0x1, 0x1);
        gbc.writeMem(0x9ffc, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xbe9d);
        EXPECT(gbc.pc(), 0x9ffe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ffc), 0xcb);
        EXPECT(gbc.readMem(0x9ffd), 0xcf);
        // CB CF 0297
        gbc.setState(0xcb58, 0xdff5, 0x20d0, 0xa4d1, 0x9371, 0x1646, 0x1, 0x0);
        gbc.writeMem(0xcb58, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xdff5);
        EXPECT(gbc.pc(), 0xcb5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb58), 0xcb);
        EXPECT(gbc.readMem(0xcb59), 0xcf);
        // CB CF 0298
        gbc.setState(0x3ee1, 0x2aa7, 0x9140, 0x60dd, 0xcc95, 0xdc3e, 0x1, 0x0);
        gbc.writeMem(0x3ee1, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x2aa7);
        EXPECT(gbc.pc(), 0x3ee3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0299
        gbc.setState(0x66d0, 0x9695, 0x3f50, 0xf3c6, 0xd51c, 0x27de, 0x0, 0x0);
        gbc.writeMem(0x66d0, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x9695);
        EXPECT(gbc.pc(), 0x66d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 029A
        gbc.setState(0x681c, 0xa043, 0xacd0, 0x922d, 0x93ad, 0xf8ba, 0x1, 0x0);
        gbc.writeMem(0x681c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xa043);
        EXPECT(gbc.pc(), 0x681e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 029B
        gbc.setState(0x9682, 0x17e9, 0xa250, 0xd4a2, 0xb00b, 0x8aae, 0x1, 0x0);
        gbc.writeMem(0x9682, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x17e9);
        EXPECT(gbc.pc(), 0x9684);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9682), 0xcb);
        EXPECT(gbc.readMem(0x9683), 0xcf);
        // CB CF 029C
        gbc.setState(0xd64c, 0x4531, 0xc1a0, 0x5205, 0xb5d6, 0xea7, 0x0, 0x1);
        gbc.writeMem(0xd64c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x4531);
        EXPECT(gbc.pc(), 0xd64e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd64c), 0xcb);
        EXPECT(gbc.readMem(0xd64d), 0xcf);
        // CB CF 029D
        gbc.setState(0xccc1, 0x4c41, 0xdc90, 0x9e70, 0x8e5f, 0xa3a0, 0x0, 0x0);
        gbc.writeMem(0xccc1, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x4c41);
        EXPECT(gbc.pc(), 0xccc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccc1), 0xcb);
        EXPECT(gbc.readMem(0xccc2), 0xcf);
        // CB CF 029E
        gbc.setState(0xd2d5, 0x7450, 0xd200, 0xe899, 0xd0ab, 0x8f70, 0x0, 0x1);
        gbc.writeMem(0xd2d5, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x7450);
        EXPECT(gbc.pc(), 0xd2d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2d5), 0xcb);
        EXPECT(gbc.readMem(0xd2d6), 0xcf);
        // CB CF 029F
        gbc.setState(0x7b85, 0xcb40, 0xf2d0, 0x9337, 0x4af2, 0x1ac4, 0x1, 0x1);
        gbc.writeMem(0x7b85, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xcb40);
        EXPECT(gbc.pc(), 0x7b87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 02A0
        gbc.setState(0xe7af, 0x4bc2, 0x14e0, 0x5d9c, 0x1ca4, 0x89ef, 0x1, 0x0);
        gbc.writeMem(0xe7af, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x4bc2);
        EXPECT(gbc.pc(), 0xe7b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7af), 0xcb);
        EXPECT(gbc.readMem(0xe7b0), 0xcf);
        // CB CF 02A1
        gbc.setState(0x8a31, 0x31ed, 0x59c0, 0x679d, 0x6df9, 0x8134, 0x1, 0x1);
        gbc.writeMem(0x8a31, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x31ed);
        EXPECT(gbc.pc(), 0x8a33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a31), 0xcb);
        EXPECT(gbc.readMem(0x8a32), 0xcf);
        // CB CF 02A2
        gbc.setState(0xe1db, 0x5405, 0xff90, 0x13da, 0x7dc2, 0xcea8, 0x0, 0x1);
        gbc.writeMem(0xe1db, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5405);
        EXPECT(gbc.pc(), 0xe1dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1db), 0xcb);
        EXPECT(gbc.readMem(0xe1dc), 0xcf);
        // CB CF 02A3
        gbc.setState(0x5efc, 0xdcfe, 0x58f0, 0x7878, 0x5424, 0xe187, 0x0, 0x1);
        gbc.writeMem(0x5efc, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xdcfe);
        EXPECT(gbc.pc(), 0x5efe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 02A4
        gbc.setState(0xe126, 0x912, 0x96c0, 0xaf6f, 0x1d70, 0x144d, 0x1, 0x0);
        gbc.writeMem(0xe126, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x912);
        EXPECT(gbc.pc(), 0xe128);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe126), 0xcb);
        EXPECT(gbc.readMem(0xe127), 0xcf);
        // CB CF 02A5
        gbc.setState(0x8910, 0x4467, 0xe970, 0x6181, 0x951e, 0x51ef, 0x1, 0x0);
        gbc.writeMem(0x8910, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x4467);
        EXPECT(gbc.pc(), 0x8912);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8910), 0xcb);
        EXPECT(gbc.readMem(0x8911), 0xcf);
        // CB CF 02A6
        gbc.setState(0x1e42, 0x873a, 0xe1f0, 0x22df, 0xb598, 0x448f, 0x0, 0x0);
        gbc.writeMem(0x1e42, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x873a);
        EXPECT(gbc.pc(), 0x1e44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 02A7
        gbc.setState(0x86e0, 0xe45c, 0xc30, 0xa84, 0xb726, 0xf0a3, 0x1, 0x1);
        gbc.writeMem(0x86e0, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xe45c);
        EXPECT(gbc.pc(), 0x86e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86e0), 0xcb);
        EXPECT(gbc.readMem(0x86e1), 0xcf);
        // CB CF 02A8
        gbc.setState(0x577c, 0x4022, 0x15b0, 0x1ba0, 0xfd8e, 0x4c4c, 0x1, 0x1);
        gbc.writeMem(0x577c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x4022);
        EXPECT(gbc.pc(), 0x577e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 02A9
        gbc.setState(0xa70e, 0xb44c, 0xf760, 0x6db8, 0x2e5e, 0xf74e, 0x1, 0x1);
        gbc.writeMem(0xa70e, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xb44c);
        EXPECT(gbc.pc(), 0xa710);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa70e), 0xcb);
        EXPECT(gbc.readMem(0xa70f), 0xcf);
        // CB CF 02AA
        gbc.setState(0x6ba3, 0x2fc6, 0x9920, 0x94bd, 0xd8d7, 0x26e9, 0x1, 0x1);
        gbc.writeMem(0x6ba3, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x2fc6);
        EXPECT(gbc.pc(), 0x6ba5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 02AB
        gbc.setState(0xa08, 0xfc41, 0x63f0, 0xc966, 0xe4d1, 0x577b, 0x0, 0x0);
        gbc.writeMem(0xa08, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xfc41);
        EXPECT(gbc.pc(), 0xa0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 02AC
        gbc.setState(0xf85, 0x2e85, 0x6710, 0x41f9, 0x726, 0x355d, 0x0, 0x1);
        gbc.writeMem(0xf85, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x2e85);
        EXPECT(gbc.pc(), 0xf87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 02AD
        gbc.setState(0x734f, 0x40ee, 0x440, 0xc67c, 0x596e, 0x2a2d, 0x0, 0x1);
        gbc.writeMem(0x734f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x40ee);
        EXPECT(gbc.pc(), 0x7351);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 02AE
        gbc.setState(0x6d06, 0x2a1, 0xec90, 0xfbfa, 0x6415, 0xf4e3, 0x0, 0x0);
        gbc.writeMem(0x6d06, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x2a1);
        EXPECT(gbc.pc(), 0x6d08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 02AF
        gbc.setState(0x99f7, 0xaf52, 0x6120, 0xaf7b, 0xb1a1, 0xf63b, 0x0, 0x1);
        gbc.writeMem(0x99f7, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xaf52);
        EXPECT(gbc.pc(), 0x99f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99f7), 0xcb);
        EXPECT(gbc.readMem(0x99f8), 0xcf);
        // CB CF 02B0
        gbc.setState(0xbd0a, 0x5aa0, 0xf3f0, 0x43bc, 0xeb7b, 0xa53a, 0x1, 0x1);
        gbc.writeMem(0xbd0a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x5aa0);
        EXPECT(gbc.pc(), 0xbd0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd0a), 0xcb);
        EXPECT(gbc.readMem(0xbd0b), 0xcf);
        // CB CF 02B1
        gbc.setState(0xd7b3, 0xb63d, 0x74d0, 0xa914, 0xf8f7, 0x405f, 0x1, 0x0);
        gbc.writeMem(0xd7b3, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb63d);
        EXPECT(gbc.pc(), 0xd7b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7b3), 0xcb);
        EXPECT(gbc.readMem(0xd7b4), 0xcf);
        // CB CF 02B2
        gbc.setState(0x24f1, 0xd32e, 0x100, 0x7c23, 0x88c7, 0xa230, 0x0, 0x0);
        gbc.writeMem(0x24f1, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xd32e);
        EXPECT(gbc.pc(), 0x24f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 02B3
        gbc.setState(0xa99a, 0x8904, 0x43f0, 0x89fc, 0x2b16, 0x5886, 0x0, 0x1);
        gbc.writeMem(0xa99a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x8904);
        EXPECT(gbc.pc(), 0xa99c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa99a), 0xcb);
        EXPECT(gbc.readMem(0xa99b), 0xcf);
        // CB CF 02B4
        gbc.setState(0x7ba8, 0x1364, 0xdba0, 0xa560, 0xb322, 0xca1e, 0x0, 0x1);
        gbc.writeMem(0x7ba8, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1364);
        EXPECT(gbc.pc(), 0x7baa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 02B5
        gbc.setState(0x583c, 0xd9a9, 0xabb0, 0x7eac, 0xf9ea, 0xb98, 0x0, 0x1);
        gbc.writeMem(0x583c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xd9a9);
        EXPECT(gbc.pc(), 0x583e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 02B6
        gbc.setState(0x10a0, 0x5dc3, 0x4120, 0x42a5, 0x2b1c, 0x54, 0x1, 0x1);
        gbc.writeMem(0x10a0, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x5dc3);
        EXPECT(gbc.pc(), 0x10a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 02B7
        gbc.setState(0xd854, 0x3786, 0xf690, 0xb2e3, 0x84f3, 0x2807, 0x0, 0x1);
        gbc.writeMem(0xd854, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3786);
        EXPECT(gbc.pc(), 0xd856);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd854), 0xcb);
        EXPECT(gbc.readMem(0xd855), 0xcf);
        // CB CF 02B8
        gbc.setState(0xaa58, 0xfe1d, 0xcb10, 0x5bb, 0x732e, 0x4d6c, 0x1, 0x0);
        gbc.writeMem(0xaa58, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xfe1d);
        EXPECT(gbc.pc(), 0xaa5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa58), 0xcb);
        EXPECT(gbc.readMem(0xaa59), 0xcf);
        // CB CF 02B9
        gbc.setState(0x870d, 0x2d97, 0x48b0, 0x11f2, 0xc8a9, 0xe134, 0x0, 0x0);
        gbc.writeMem(0x870d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x2d97);
        EXPECT(gbc.pc(), 0x870f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x870d), 0xcb);
        EXPECT(gbc.readMem(0x870e), 0xcf);
        // CB CF 02BA
        gbc.setState(0x3ac2, 0xa50b, 0x86d0, 0x8503, 0x809f, 0xf5de, 0x1, 0x1);
        gbc.writeMem(0x3ac2, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xa50b);
        EXPECT(gbc.pc(), 0x3ac4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 02BB
        gbc.setState(0x9297, 0xa952, 0x14c0, 0x2e82, 0x69f, 0x2248, 0x1, 0x1);
        gbc.writeMem(0x9297, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xa952);
        EXPECT(gbc.pc(), 0x9299);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9297), 0xcb);
        EXPECT(gbc.readMem(0x9298), 0xcf);
        // CB CF 02BC
        gbc.setState(0x2804, 0xc9d0, 0xb430, 0xbce1, 0xf284, 0xedf9, 0x1, 0x1);
        gbc.writeMem(0x2804, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc9d0);
        EXPECT(gbc.pc(), 0x2806);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 02BD
        gbc.setState(0x59d6, 0x6647, 0x8590, 0x506a, 0x343d, 0x61e2, 0x1, 0x1);
        gbc.writeMem(0x59d6, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x6647);
        EXPECT(gbc.pc(), 0x59d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 02BE
        gbc.setState(0x3085, 0xd9f3, 0x5110, 0x66f, 0x3635, 0x539a, 0x0, 0x0);
        gbc.writeMem(0x3085, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd9f3);
        EXPECT(gbc.pc(), 0x3087);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 02BF
        gbc.setState(0x87c8, 0xb37b, 0x7b90, 0xcf68, 0xf599, 0xb0fd, 0x0, 0x0);
        gbc.writeMem(0x87c8, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb37b);
        EXPECT(gbc.pc(), 0x87ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87c8), 0xcb);
        EXPECT(gbc.readMem(0x87c9), 0xcf);
        // CB CF 02C0
        gbc.setState(0xcc84, 0x9753, 0x60d0, 0x817e, 0x3899, 0xeaa0, 0x1, 0x1);
        gbc.writeMem(0xcc84, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x9753);
        EXPECT(gbc.pc(), 0xcc86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc84), 0xcb);
        EXPECT(gbc.readMem(0xcc85), 0xcf);
        // CB CF 02C1
        gbc.setState(0x306, 0x8a34, 0xabd0, 0x1920, 0x3530, 0x79bc, 0x1, 0x1);
        gbc.writeMem(0x306, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8a34);
        EXPECT(gbc.pc(), 0x308);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 02C2
        gbc.setState(0x9402, 0x7cd6, 0x8320, 0xe493, 0x8a34, 0xd5eb, 0x0, 0x0);
        gbc.writeMem(0x9402, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x7cd6);
        EXPECT(gbc.pc(), 0x9404);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9402), 0xcb);
        EXPECT(gbc.readMem(0x9403), 0xcf);
        // CB CF 02C3
        gbc.setState(0x1dcc, 0xd396, 0x8010, 0x7791, 0xee42, 0xaeea, 0x0, 0x0);
        gbc.writeMem(0x1dcc, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xd396);
        EXPECT(gbc.pc(), 0x1dce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 02C4
        gbc.setState(0x938b, 0xabcc, 0x8c00, 0x7347, 0x60b8, 0x4696, 0x0, 0x0);
        gbc.writeMem(0x938b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xabcc);
        EXPECT(gbc.pc(), 0x938d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x938b), 0xcb);
        EXPECT(gbc.readMem(0x938c), 0xcf);
        // CB CF 02C5
        gbc.setState(0xc666, 0x29e9, 0x69c0, 0x2018, 0x23b3, 0x2aef, 0x0, 0x1);
        gbc.writeMem(0xc666, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x29e9);
        EXPECT(gbc.pc(), 0xc668);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc666), 0xcb);
        EXPECT(gbc.readMem(0xc667), 0xcf);
        // CB CF 02C7
        gbc.setState(0x651a, 0x3c4c, 0x7ef0, 0x665, 0xe270, 0x11e5, 0x0, 0x0);
        gbc.writeMem(0x651a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x3c4c);
        EXPECT(gbc.pc(), 0x651c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 02C8
        gbc.setState(0x5aaa, 0xed10, 0x21f0, 0xa07d, 0x48dd, 0x472b, 0x0, 0x0);
        gbc.writeMem(0x5aaa, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xed10);
        EXPECT(gbc.pc(), 0x5aac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 02C9
        gbc.setState(0xc6d3, 0x3a2c, 0x38f0, 0xf448, 0xe5c5, 0x1f77, 0x1, 0x1);
        gbc.writeMem(0xc6d3, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x3a2c);
        EXPECT(gbc.pc(), 0xc6d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6d3), 0xcb);
        EXPECT(gbc.readMem(0xc6d4), 0xcf);
        // CB CF 02CA
        gbc.setState(0xd5e8, 0x2298, 0x260, 0x8ffb, 0x5267, 0xa8cf, 0x1, 0x1);
        gbc.writeMem(0xd5e8, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2298);
        EXPECT(gbc.pc(), 0xd5ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5e8), 0xcb);
        EXPECT(gbc.readMem(0xd5e9), 0xcf);
        // CB CF 02CB
        gbc.setState(0x3eaa, 0xc1d3, 0x68b0, 0x9617, 0x2757, 0xbc84, 0x1, 0x1);
        gbc.writeMem(0x3eaa, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc1d3);
        EXPECT(gbc.pc(), 0x3eac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 02CC
        gbc.setState(0xa0e8, 0x3a5b, 0xca00, 0x4dc4, 0x1f02, 0x9a8b, 0x0, 0x1);
        gbc.writeMem(0xa0e8, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x3a5b);
        EXPECT(gbc.pc(), 0xa0ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0e8), 0xcb);
        EXPECT(gbc.readMem(0xa0e9), 0xcf);
        // CB CF 02CD
        gbc.setState(0xdbb1, 0x8216, 0x9650, 0x5c6e, 0xbaee, 0xdc6e, 0x1, 0x1);
        gbc.writeMem(0xdbb1, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x8216);
        EXPECT(gbc.pc(), 0xdbb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbb1), 0xcb);
        EXPECT(gbc.readMem(0xdbb2), 0xcf);
        // CB CF 02CE
        gbc.setState(0xd888, 0x176, 0x3fe0, 0xaf7, 0x309f, 0xef99, 0x1, 0x1);
        gbc.writeMem(0xd888, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x176);
        EXPECT(gbc.pc(), 0xd88a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd888), 0xcb);
        EXPECT(gbc.readMem(0xd889), 0xcf);
        // CB CF 02CF
        gbc.setState(0xe758, 0x8982, 0x93c0, 0x92ac, 0x8580, 0x824e, 0x0, 0x0);
        gbc.writeMem(0xe758, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x8982);
        EXPECT(gbc.pc(), 0xe75a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe758), 0xcb);
        EXPECT(gbc.readMem(0xe759), 0xcf);
        // CB CF 02D0
        gbc.setState(0x7275, 0x9509, 0xd2f0, 0xbb60, 0x6ca4, 0xd826, 0x1, 0x0);
        gbc.writeMem(0x7275, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x9509);
        EXPECT(gbc.pc(), 0x7277);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 02D1
        gbc.setState(0x31dd, 0x3e89, 0xfe0, 0xb435, 0x6e6c, 0x96f9, 0x1, 0x0);
        gbc.writeMem(0x31dd, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x3e89);
        EXPECT(gbc.pc(), 0x31df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 02D2
        gbc.setState(0xb1fd, 0x31ef, 0xcb20, 0x2505, 0x4bbd, 0x78ab, 0x1, 0x1);
        gbc.writeMem(0xb1fd, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x31ef);
        EXPECT(gbc.pc(), 0xb1ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1fd), 0xcb);
        EXPECT(gbc.readMem(0xb1fe), 0xcf);
        // CB CF 02D3
        gbc.setState(0xc11, 0x8dc7, 0xeb0, 0xd218, 0x5d50, 0xa65e, 0x1, 0x0);
        gbc.writeMem(0xc11, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x8dc7);
        EXPECT(gbc.pc(), 0xc13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 02D4
        gbc.setState(0xb497, 0x47e, 0x2ff0, 0x62b9, 0xf1ad, 0xc4b6, 0x1, 0x1);
        gbc.writeMem(0xb497, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x47e);
        EXPECT(gbc.pc(), 0xb499);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb497), 0xcb);
        EXPECT(gbc.readMem(0xb498), 0xcf);
        // CB CF 02D5
        gbc.setState(0x3fc8, 0xaa8e, 0x4750, 0xab9e, 0xf20, 0x5592, 0x0, 0x1);
        gbc.writeMem(0x3fc8, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xaa8e);
        EXPECT(gbc.pc(), 0x3fca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 02D6
        gbc.setState(0xb1e6, 0x6e7f, 0x7330, 0x449, 0xab31, 0x6755, 0x1, 0x1);
        gbc.writeMem(0xb1e6, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6e7f);
        EXPECT(gbc.pc(), 0xb1e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1e6), 0xcb);
        EXPECT(gbc.readMem(0xb1e7), 0xcf);
        // CB CF 02D7
        gbc.setState(0x2abe, 0xe8e6, 0xb050, 0xbee0, 0xc2e0, 0x4e72, 0x1, 0x0);
        gbc.writeMem(0x2abe, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xe8e6);
        EXPECT(gbc.pc(), 0x2ac0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 02D8
        gbc.setState(0x2b02, 0x57e1, 0x9880, 0xa614, 0x1f58, 0xa4c5, 0x1, 0x0);
        gbc.writeMem(0x2b02, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x57e1);
        EXPECT(gbc.pc(), 0x2b04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 02D9
        gbc.setState(0xb7ce, 0x34f1, 0x2720, 0xd72d, 0xef32, 0x27bd, 0x0, 0x0);
        gbc.writeMem(0xb7ce, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x34f1);
        EXPECT(gbc.pc(), 0xb7d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ce), 0xcb);
        EXPECT(gbc.readMem(0xb7cf), 0xcf);
        // CB CF 02DA
        gbc.setState(0x9b52, 0x3724, 0x1f20, 0xd6bf, 0x103b, 0x6319, 0x0, 0x1);
        gbc.writeMem(0x9b52, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x3724);
        EXPECT(gbc.pc(), 0x9b54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b52), 0xcb);
        EXPECT(gbc.readMem(0x9b53), 0xcf);
        // CB CF 02DB
        gbc.setState(0x7256, 0xdda7, 0xf450, 0xb94d, 0x5658, 0xa1a7, 0x1, 0x1);
        gbc.writeMem(0x7256, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xdda7);
        EXPECT(gbc.pc(), 0x7258);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 02DD
        gbc.setState(0x9e68, 0x9c7f, 0x2a50, 0x3138, 0xc958, 0x9648, 0x0, 0x1);
        gbc.writeMem(0x9e68, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x9c7f);
        EXPECT(gbc.pc(), 0x9e6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e68), 0xcb);
        EXPECT(gbc.readMem(0x9e69), 0xcf);
        // CB CF 02DE
        gbc.setState(0xe5a3, 0x7fb7, 0xd5d0, 0x37bb, 0xdbed, 0xb4dc, 0x0, 0x0);
        gbc.writeMem(0xe5a3, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x7fb7);
        EXPECT(gbc.pc(), 0xe5a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5a3), 0xcb);
        EXPECT(gbc.readMem(0xe5a4), 0xcf);
        // CB CF 02DF
        gbc.setState(0xb962, 0x4fd2, 0xf10, 0xebc2, 0x8ee8, 0xc727, 0x0, 0x0);
        gbc.writeMem(0xb962, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x4fd2);
        EXPECT(gbc.pc(), 0xb964);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb962), 0xcb);
        EXPECT(gbc.readMem(0xb963), 0xcf);
        // CB CF 02E0
        gbc.setState(0x2732, 0xb389, 0x960, 0x734c, 0x3154, 0x12b3, 0x0, 0x1);
        gbc.writeMem(0x2732, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xb389);
        EXPECT(gbc.pc(), 0x2734);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 02E1
        gbc.setState(0x4a4c, 0x8980, 0x4280, 0xb220, 0xb7e6, 0x97f8, 0x0, 0x0);
        gbc.writeMem(0x4a4c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x8980);
        EXPECT(gbc.pc(), 0x4a4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 02E3
        gbc.setState(0x408f, 0x4cc9, 0xdcb0, 0x4826, 0xbb59, 0xb92c, 0x0, 0x1);
        gbc.writeMem(0x408f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4cc9);
        EXPECT(gbc.pc(), 0x4091);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 02E5
        gbc.setState(0x1df3, 0x3599, 0xdc40, 0x9304, 0x767a, 0xfc03, 0x1, 0x0);
        gbc.writeMem(0x1df3, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x3599);
        EXPECT(gbc.pc(), 0x1df5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 02E6
        gbc.setState(0x1530, 0x4f14, 0x8e60, 0xe220, 0x1bd6, 0x347d, 0x1, 0x1);
        gbc.writeMem(0x1530, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x4f14);
        EXPECT(gbc.pc(), 0x1532);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 02E7
        gbc.setState(0x1d12, 0xc3d, 0xacd0, 0x1b1e, 0xeab1, 0xef87, 0x1, 0x1);
        gbc.writeMem(0x1d12, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xc3d);
        EXPECT(gbc.pc(), 0x1d14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 02E8
        gbc.setState(0x5f36, 0xc317, 0xce50, 0x7953, 0xaa59, 0xe973, 0x0, 0x0);
        gbc.writeMem(0x5f36, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xc317);
        EXPECT(gbc.pc(), 0x5f38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 02E9
        gbc.setState(0x4531, 0x7314, 0xa5f0, 0xb8da, 0x861, 0x1d2e, 0x1, 0x0);
        gbc.writeMem(0x4531, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7314);
        EXPECT(gbc.pc(), 0x4533);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 02EA
        gbc.setState(0xcb7b, 0x673b, 0x8cd0, 0x9556, 0xcf00, 0x51ba, 0x1, 0x0);
        gbc.writeMem(0xcb7b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x673b);
        EXPECT(gbc.pc(), 0xcb7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb7b), 0xcb);
        EXPECT(gbc.readMem(0xcb7c), 0xcf);
        // CB CF 02EB
        gbc.setState(0x5060, 0xc75, 0x5300, 0x7ff6, 0xcbc2, 0x5418, 0x1, 0x1);
        gbc.writeMem(0x5060, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xc75);
        EXPECT(gbc.pc(), 0x5062);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 02EC
        gbc.setState(0xb5a1, 0x695f, 0x94c0, 0x6f9e, 0x1d21, 0x6b91, 0x0, 0x1);
        gbc.writeMem(0xb5a1, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x695f);
        EXPECT(gbc.pc(), 0xb5a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5a1), 0xcb);
        EXPECT(gbc.readMem(0xb5a2), 0xcf);
        // CB CF 02ED
        gbc.setState(0x52e8, 0x1441, 0xaf60, 0x61c4, 0xf999, 0xea59, 0x0, 0x0);
        gbc.writeMem(0x52e8, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x1441);
        EXPECT(gbc.pc(), 0x52ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 02EE
        gbc.setState(0xee1a, 0x368a, 0xf270, 0x1020, 0xfabc, 0xbafd, 0x1, 0x1);
        gbc.writeMem(0xee1a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x368a);
        EXPECT(gbc.pc(), 0xee1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee1a), 0xcb);
        EXPECT(gbc.readMem(0xee1b), 0xcf);
        // CB CF 02EF
        gbc.setState(0x330d, 0x8db3, 0xe2d0, 0xe937, 0x2f9c, 0x65a3, 0x0, 0x1);
        gbc.writeMem(0x330d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x8db3);
        EXPECT(gbc.pc(), 0x330f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 02F0
        gbc.setState(0xe807, 0x3ebd, 0x9900, 0xc3e, 0x416f, 0xdd45, 0x0, 0x0);
        gbc.writeMem(0xe807, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x3ebd);
        EXPECT(gbc.pc(), 0xe809);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe807), 0xcb);
        EXPECT(gbc.readMem(0xe808), 0xcf);
        // CB CF 02F1
        gbc.setState(0xbd5d, 0x1588, 0x9ae0, 0xda2d, 0x94d9, 0x2e06, 0x1, 0x0);
        gbc.writeMem(0xbd5d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x1588);
        EXPECT(gbc.pc(), 0xbd5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd5d), 0xcb);
        EXPECT(gbc.readMem(0xbd5e), 0xcf);
        // CB CF 02F2
        gbc.setState(0x7145, 0x34a2, 0xac00, 0xfbf5, 0xc468, 0xebd3, 0x0, 0x1);
        gbc.writeMem(0x7145, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x34a2);
        EXPECT(gbc.pc(), 0x7147);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 02F3
        gbc.setState(0xac30, 0x9e82, 0x2180, 0x4303, 0xe943, 0x9834, 0x1, 0x1);
        gbc.writeMem(0xac30, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9e82);
        EXPECT(gbc.pc(), 0xac32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac30), 0xcb);
        EXPECT(gbc.readMem(0xac31), 0xcf);
        // CB CF 02F4
        gbc.setState(0x9da, 0x2cc5, 0x900, 0xb1e, 0x80a7, 0x347f, 0x0, 0x1);
        gbc.writeMem(0x9da, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2cc5);
        EXPECT(gbc.pc(), 0x9dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 02F5
        gbc.setState(0xd5e2, 0x6d76, 0x95c0, 0x3b9f, 0x3ef3, 0x8dd7, 0x1, 0x0);
        gbc.writeMem(0xd5e2, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x6d76);
        EXPECT(gbc.pc(), 0xd5e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5e2), 0xcb);
        EXPECT(gbc.readMem(0xd5e3), 0xcf);
        // CB CF 02F6
        gbc.setState(0x3756, 0x4714, 0x22d0, 0x2b1f, 0x918a, 0x4ccf, 0x1, 0x0);
        gbc.writeMem(0x3756, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x4714);
        EXPECT(gbc.pc(), 0x3758);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 02F7
        gbc.setState(0x39a5, 0xebee, 0x2ee0, 0xb104, 0xd0af, 0x1e7b, 0x0, 0x0);
        gbc.writeMem(0x39a5, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xebee);
        EXPECT(gbc.pc(), 0x39a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 02F8
        gbc.setState(0x79ca, 0xb297, 0x840, 0xd51, 0x1876, 0x6ac5, 0x0, 0x0);
        gbc.writeMem(0x79ca, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xb297);
        EXPECT(gbc.pc(), 0x79cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 02F9
        gbc.setState(0xb2dd, 0x1da5, 0x7d60, 0xdc21, 0x8597, 0xfecb, 0x1, 0x0);
        gbc.writeMem(0xb2dd, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x1da5);
        EXPECT(gbc.pc(), 0xb2df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2dd), 0xcb);
        EXPECT(gbc.readMem(0xb2de), 0xcf);
        // CB CF 02FA
        gbc.setState(0x1fe2, 0x67c6, 0x2670, 0x97ca, 0xebd4, 0xc780, 0x1, 0x1);
        gbc.writeMem(0x1fe2, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x67c6);
        EXPECT(gbc.pc(), 0x1fe4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 02FB
        gbc.setState(0xd86f, 0x4ddb, 0x8620, 0x28ec, 0x98de, 0x1008, 0x0, 0x1);
        gbc.writeMem(0xd86f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x4ddb);
        EXPECT(gbc.pc(), 0xd871);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd86f), 0xcb);
        EXPECT(gbc.readMem(0xd870), 0xcf);
        // CB CF 02FC
        gbc.setState(0x1480, 0xcb31, 0xf5a0, 0xe60c, 0xfb1c, 0x11f0, 0x0, 0x1);
        gbc.writeMem(0x1480, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xcb31);
        EXPECT(gbc.pc(), 0x1482);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 02FD
        gbc.setState(0xbff6, 0xb158, 0xed80, 0x698a, 0xd0f5, 0x8445, 0x0, 0x1);
        gbc.writeMem(0xbff6, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xb158);
        EXPECT(gbc.pc(), 0xbff8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbff6), 0xcb);
        EXPECT(gbc.readMem(0xbff7), 0xcf);
        // CB CF 02FE
        gbc.setState(0xe0a1, 0xbe98, 0x9b80, 0xab61, 0xb49f, 0x98b1, 0x1, 0x1);
        gbc.writeMem(0xe0a1, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xbe98);
        EXPECT(gbc.pc(), 0xe0a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0a1), 0xcb);
        EXPECT(gbc.readMem(0xe0a2), 0xcf);
        // CB CF 02FF
        gbc.setState(0x6d7c, 0xa8af, 0x7af0, 0xffd4, 0x2d61, 0xfaba, 0x0, 0x1);
        gbc.writeMem(0x6d7c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xa8af);
        EXPECT(gbc.pc(), 0x6d7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0300
        gbc.setState(0x132b, 0xac68, 0xe450, 0x4e7e, 0x724d, 0x68af, 0x0, 0x0);
        gbc.writeMem(0x132b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xac68);
        EXPECT(gbc.pc(), 0x132d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0301
        gbc.setState(0x856e, 0x31fa, 0xc640, 0xdddd, 0x731f, 0xc160, 0x1, 0x1);
        gbc.writeMem(0x856e, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x31fa);
        EXPECT(gbc.pc(), 0x8570);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x856e), 0xcb);
        EXPECT(gbc.readMem(0x856f), 0xcf);
        // CB CF 0302
        gbc.setState(0xb249, 0xf63c, 0xb720, 0x1b4e, 0xda69, 0xa23e, 0x0, 0x1);
        gbc.writeMem(0xb249, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xf63c);
        EXPECT(gbc.pc(), 0xb24b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb249), 0xcb);
        EXPECT(gbc.readMem(0xb24a), 0xcf);
        // CB CF 0303
        gbc.setState(0x909b, 0x6db6, 0x2dd0, 0x6b0c, 0xdae1, 0x8e5b, 0x0, 0x0);
        gbc.writeMem(0x909b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x6db6);
        EXPECT(gbc.pc(), 0x909d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x909b), 0xcb);
        EXPECT(gbc.readMem(0x909c), 0xcf);
        // CB CF 0304
        gbc.setState(0xca75, 0xd3e1, 0x3fc0, 0xe855, 0xe908, 0x56af, 0x1, 0x0);
        gbc.writeMem(0xca75, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xd3e1);
        EXPECT(gbc.pc(), 0xca77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca75), 0xcb);
        EXPECT(gbc.readMem(0xca76), 0xcf);
        // CB CF 0305
        gbc.setState(0xda29, 0x865b, 0x24c0, 0x1a8, 0xcc13, 0x449, 0x0, 0x1);
        gbc.writeMem(0xda29, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x865b);
        EXPECT(gbc.pc(), 0xda2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda29), 0xcb);
        EXPECT(gbc.readMem(0xda2a), 0xcf);
        // CB CF 0307
        gbc.setState(0xad79, 0xb40, 0x4fb0, 0x1b88, 0xa21d, 0x26cb, 0x0, 0x1);
        gbc.writeMem(0xad79, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xb40);
        EXPECT(gbc.pc(), 0xad7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad79), 0xcb);
        EXPECT(gbc.readMem(0xad7a), 0xcf);
        // CB CF 0308
        gbc.setState(0x2b4a, 0x7dcd, 0xee00, 0xc5ab, 0xb700, 0xe729, 0x1, 0x0);
        gbc.writeMem(0x2b4a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x7dcd);
        EXPECT(gbc.pc(), 0x2b4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0309
        gbc.setState(0x7603, 0xa43c, 0xc650, 0xde55, 0xcdd8, 0x6d27, 0x1, 0x1);
        gbc.writeMem(0x7603, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xa43c);
        EXPECT(gbc.pc(), 0x7605);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 030A
        gbc.setState(0x6ff4, 0xb129, 0x3540, 0x5d8f, 0xb5d4, 0xe6c4, 0x1, 0x0);
        gbc.writeMem(0x6ff4, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xb129);
        EXPECT(gbc.pc(), 0x6ff6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 030B
        gbc.setState(0x27c4, 0xf31a, 0x9df0, 0x71fd, 0x2053, 0x8422, 0x1, 0x0);
        gbc.writeMem(0x27c4, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xf31a);
        EXPECT(gbc.pc(), 0x27c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 030C
        gbc.setState(0x12a6, 0x1b96, 0xe410, 0x3ee1, 0x562c, 0x2fcd, 0x1, 0x0);
        gbc.writeMem(0x12a6, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x1b96);
        EXPECT(gbc.pc(), 0x12a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 030D
        gbc.setState(0x58b4, 0xbd60, 0xfcd0, 0xfa30, 0x4426, 0x5cb9, 0x0, 0x1);
        gbc.writeMem(0x58b4, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xbd60);
        EXPECT(gbc.pc(), 0x58b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 030E
        gbc.setState(0x7399, 0xf211, 0x6690, 0xf889, 0xf194, 0x9229, 0x1, 0x0);
        gbc.writeMem(0x7399, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf211);
        EXPECT(gbc.pc(), 0x739b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 030F
        gbc.setState(0x4eb3, 0xb046, 0xace0, 0x553b, 0x972a, 0xe3cc, 0x1, 0x0);
        gbc.writeMem(0x4eb3, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xb046);
        EXPECT(gbc.pc(), 0x4eb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0310
        gbc.setState(0x4185, 0x3694, 0xadf0, 0x1529, 0x3ec, 0xf4fc, 0x0, 0x0);
        gbc.writeMem(0x4185, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x3694);
        EXPECT(gbc.pc(), 0x4187);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0311
        gbc.setState(0xa14, 0xc08e, 0x1f10, 0x759d, 0x1e0b, 0xcb5b, 0x1, 0x0);
        gbc.writeMem(0xa14, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xc08e);
        EXPECT(gbc.pc(), 0xa16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0312
        gbc.setState(0xc827, 0xaa57, 0x7520, 0xd12d, 0x5e93, 0x53d9, 0x0, 0x1);
        gbc.writeMem(0xc827, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xaa57);
        EXPECT(gbc.pc(), 0xc829);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc827), 0xcb);
        EXPECT(gbc.readMem(0xc828), 0xcf);
        // CB CF 0313
        gbc.setState(0x96c3, 0x8f82, 0x4a80, 0x94ef, 0x5dc5, 0x21e1, 0x1, 0x1);
        gbc.writeMem(0x96c3, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x8f82);
        EXPECT(gbc.pc(), 0x96c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96c3), 0xcb);
        EXPECT(gbc.readMem(0x96c4), 0xcf);
        // CB CF 0314
        gbc.setState(0x766b, 0xa041, 0xf1f0, 0x4c48, 0x5b1e, 0xc6, 0x0, 0x0);
        gbc.writeMem(0x766b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xa041);
        EXPECT(gbc.pc(), 0x766d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0315
        gbc.setState(0x342, 0xb647, 0xcdc0, 0x8e3, 0x9d44, 0x31cc, 0x1, 0x0);
        gbc.writeMem(0x342, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xb647);
        EXPECT(gbc.pc(), 0x344);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0316
        gbc.setState(0xa8a0, 0x20e3, 0xe950, 0xc4db, 0xd434, 0xd546, 0x1, 0x0);
        gbc.writeMem(0xa8a0, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x20e3);
        EXPECT(gbc.pc(), 0xa8a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8a0), 0xcb);
        EXPECT(gbc.readMem(0xa8a1), 0xcf);
        // CB CF 0317
        gbc.setState(0x2505, 0x8545, 0x350, 0xf0bf, 0x2069, 0x436c, 0x0, 0x1);
        gbc.writeMem(0x2505, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x8545);
        EXPECT(gbc.pc(), 0x2507);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0318
        gbc.setState(0xb423, 0x8f75, 0xa140, 0x8504, 0xa2d9, 0x4b43, 0x1, 0x1);
        gbc.writeMem(0xb423, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x8f75);
        EXPECT(gbc.pc(), 0xb425);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb423), 0xcb);
        EXPECT(gbc.readMem(0xb424), 0xcf);
        // CB CF 0319
        gbc.setState(0x1a65, 0x3ab7, 0xf2d0, 0x9226, 0xcfeb, 0xa47b, 0x1, 0x1);
        gbc.writeMem(0x1a65, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x3ab7);
        EXPECT(gbc.pc(), 0x1a67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 031A
        gbc.setState(0x330e, 0xe6da, 0x6320, 0x787e, 0xc9c2, 0x8294, 0x0, 0x0);
        gbc.writeMem(0x330e, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xe6da);
        EXPECT(gbc.pc(), 0x3310);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 031B
        gbc.setState(0xdec1, 0x1f94, 0x3740, 0xcbfa, 0x7503, 0x4c8a, 0x0, 0x0);
        gbc.writeMem(0xdec1, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x1f94);
        EXPECT(gbc.pc(), 0xdec3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdec1), 0xcb);
        EXPECT(gbc.readMem(0xdec2), 0xcf);
        // CB CF 031C
        gbc.setState(0x807f, 0x9c7b, 0xa510, 0x6242, 0xc9a9, 0x877, 0x0, 0x0);
        gbc.writeMem(0x807f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x9c7b);
        EXPECT(gbc.pc(), 0x8081);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x807f), 0xcb);
        EXPECT(gbc.readMem(0x8080), 0xcf);
        // CB CF 031E
        gbc.setState(0x4ed8, 0xbd7e, 0x9d0, 0x63e8, 0x2905, 0xf163, 0x0, 0x0);
        gbc.writeMem(0x4ed8, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xbd7e);
        EXPECT(gbc.pc(), 0x4eda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 031F
        gbc.setState(0x576b, 0xd55, 0x2780, 0x2c43, 0xc741, 0x215f, 0x1, 0x1);
        gbc.writeMem(0x576b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xd55);
        EXPECT(gbc.pc(), 0x576d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0320
        gbc.setState(0x63d3, 0xf8c7, 0xece0, 0x5601, 0xffb, 0xd1a9, 0x0, 0x1);
        gbc.writeMem(0x63d3, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xf8c7);
        EXPECT(gbc.pc(), 0x63d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0321
        gbc.setState(0xd235, 0xc02b, 0x9cb0, 0x6662, 0x4044, 0x38d6, 0x1, 0x0);
        gbc.writeMem(0xd235, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xc02b);
        EXPECT(gbc.pc(), 0xd237);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd235), 0xcb);
        EXPECT(gbc.readMem(0xd236), 0xcf);
        // CB CF 0322
        gbc.setState(0x1b18, 0x3aa8, 0xd080, 0xa623, 0xd32f, 0x85b9, 0x1, 0x0);
        gbc.writeMem(0x1b18, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x3aa8);
        EXPECT(gbc.pc(), 0x1b1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0323
        gbc.setState(0xf0c, 0x8a48, 0xee30, 0x53ad, 0xd8be, 0x8d92, 0x1, 0x1);
        gbc.writeMem(0xf0c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x8a48);
        EXPECT(gbc.pc(), 0xf0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0324
        gbc.setState(0xca16, 0x8adf, 0x3130, 0x9c18, 0xb215, 0x59fd, 0x0, 0x0);
        gbc.writeMem(0xca16, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x8adf);
        EXPECT(gbc.pc(), 0xca18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca16), 0xcb);
        EXPECT(gbc.readMem(0xca17), 0xcf);
        // CB CF 0325
        gbc.setState(0xbd1, 0x133e, 0x8b80, 0xc355, 0x440c, 0x7c18, 0x0, 0x1);
        gbc.writeMem(0xbd1, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x133e);
        EXPECT(gbc.pc(), 0xbd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0326
        gbc.setState(0x817e, 0xa9af, 0x25c0, 0xd058, 0x8016, 0xce9d, 0x1, 0x0);
        gbc.writeMem(0x817e, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa9af);
        EXPECT(gbc.pc(), 0x8180);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x817e), 0xcb);
        EXPECT(gbc.readMem(0x817f), 0xcf);
        // CB CF 0327
        gbc.setState(0x352b, 0xbea9, 0xba90, 0xaa04, 0xa385, 0xea5e, 0x0, 0x1);
        gbc.writeMem(0x352b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xbea9);
        EXPECT(gbc.pc(), 0x352d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0328
        gbc.setState(0x3ea6, 0xc9b4, 0x90b0, 0xa14f, 0x49e4, 0x39a2, 0x0, 0x1);
        gbc.writeMem(0x3ea6, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xc9b4);
        EXPECT(gbc.pc(), 0x3ea8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0329
        gbc.setState(0x7fb1, 0xe582, 0xe70, 0xbac0, 0x9e4e, 0x5660, 0x1, 0x1);
        gbc.writeMem(0x7fb1, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xe582);
        EXPECT(gbc.pc(), 0x7fb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 032A
        gbc.setState(0xca6f, 0xe1e2, 0x8b60, 0xfb3b, 0x708f, 0xbabd, 0x0, 0x0);
        gbc.writeMem(0xca6f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xe1e2);
        EXPECT(gbc.pc(), 0xca71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca6f), 0xcb);
        EXPECT(gbc.readMem(0xca70), 0xcf);
        // CB CF 032B
        gbc.setState(0x85d3, 0x49be, 0x5a20, 0xd120, 0xc229, 0x40a3, 0x1, 0x1);
        gbc.writeMem(0x85d3, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x49be);
        EXPECT(gbc.pc(), 0x85d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85d3), 0xcb);
        EXPECT(gbc.readMem(0x85d4), 0xcf);
        // CB CF 032C
        gbc.setState(0x8a1, 0xbc88, 0xb560, 0xd9d4, 0xa1e7, 0xa8f3, 0x1, 0x1);
        gbc.writeMem(0x8a1, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xbc88);
        EXPECT(gbc.pc(), 0x8a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 032D
        gbc.setState(0xe918, 0x7763, 0x1810, 0x7126, 0x2a54, 0x329e, 0x0, 0x0);
        gbc.writeMem(0xe918, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7763);
        EXPECT(gbc.pc(), 0xe91a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe918), 0xcb);
        EXPECT(gbc.readMem(0xe919), 0xcf);
        // CB CF 032E
        gbc.setState(0x9d8a, 0x1064, 0x43a0, 0x678a, 0x30ac, 0xca1, 0x1, 0x0);
        gbc.writeMem(0x9d8a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x1064);
        EXPECT(gbc.pc(), 0x9d8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d8a), 0xcb);
        EXPECT(gbc.readMem(0x9d8b), 0xcf);
        // CB CF 032F
        gbc.setState(0xd1ea, 0x6116, 0x1b90, 0xe44f, 0x8694, 0x985a, 0x0, 0x0);
        gbc.writeMem(0xd1ea, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x6116);
        EXPECT(gbc.pc(), 0xd1ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1ea), 0xcb);
        EXPECT(gbc.readMem(0xd1eb), 0xcf);
        // CB CF 0330
        gbc.setState(0x147f, 0x95d0, 0x5f0, 0x288f, 0xb838, 0x6b49, 0x0, 0x1);
        gbc.writeMem(0x147f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x95d0);
        EXPECT(gbc.pc(), 0x1481);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0331
        gbc.setState(0xd61b, 0x15bb, 0xb580, 0x161f, 0xaa3c, 0x993, 0x1, 0x0);
        gbc.writeMem(0xd61b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x15bb);
        EXPECT(gbc.pc(), 0xd61d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd61b), 0xcb);
        EXPECT(gbc.readMem(0xd61c), 0xcf);
        // CB CF 0332
        gbc.setState(0x579, 0x6639, 0x62a0, 0xfd45, 0x6d49, 0xe068, 0x1, 0x1);
        gbc.writeMem(0x579, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x6639);
        EXPECT(gbc.pc(), 0x57b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0333
        gbc.setState(0x694f, 0x3d26, 0xd780, 0xaf13, 0x7ebb, 0xb73a, 0x0, 0x1);
        gbc.writeMem(0x694f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x3d26);
        EXPECT(gbc.pc(), 0x6951);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0334
        gbc.setState(0xeb36, 0x5ad6, 0x6a50, 0xc712, 0xf0d5, 0xe2b7, 0x1, 0x0);
        gbc.writeMem(0xeb36, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x5ad6);
        EXPECT(gbc.pc(), 0xeb38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb36), 0xcb);
        EXPECT(gbc.readMem(0xeb37), 0xcf);
        // CB CF 0335
        gbc.setState(0x6554, 0xd648, 0xdb10, 0x55ff, 0x93f3, 0xf8ca, 0x0, 0x1);
        gbc.writeMem(0x6554, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xd648);
        EXPECT(gbc.pc(), 0x6556);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0336
        gbc.setState(0x33d8, 0xfe79, 0xee70, 0x9b1c, 0xe5a8, 0x7c32, 0x0, 0x0);
        gbc.writeMem(0x33d8, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xfe79);
        EXPECT(gbc.pc(), 0x33da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0337
        gbc.setState(0xc128, 0xed5e, 0xd5b0, 0x693b, 0x39b1, 0x272b, 0x1, 0x1);
        gbc.writeMem(0xc128, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xed5e);
        EXPECT(gbc.pc(), 0xc12a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc128), 0xcb);
        EXPECT(gbc.readMem(0xc129), 0xcf);
        // CB CF 0338
        gbc.setState(0x6657, 0x89a5, 0xd580, 0xe3c9, 0x266a, 0xdd06, 0x0, 0x1);
        gbc.writeMem(0x6657, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x89a5);
        EXPECT(gbc.pc(), 0x6659);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0339
        gbc.setState(0x2a7d, 0xfa89, 0x7410, 0x447f, 0x194f, 0x3452, 0x1, 0x1);
        gbc.writeMem(0x2a7d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xfa89);
        EXPECT(gbc.pc(), 0x2a7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 033A
        gbc.setState(0x664d, 0xfbb0, 0x14b0, 0x7ee2, 0xd69f, 0x942a, 0x1, 0x0);
        gbc.writeMem(0x664d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xfbb0);
        EXPECT(gbc.pc(), 0x664f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 033B
        gbc.setState(0xd0a2, 0x8402, 0x9910, 0x6cac, 0xcd5b, 0xb7f4, 0x0, 0x1);
        gbc.writeMem(0xd0a2, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x8402);
        EXPECT(gbc.pc(), 0xd0a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0a2), 0xcb);
        EXPECT(gbc.readMem(0xd0a3), 0xcf);
        // CB CF 033C
        gbc.setState(0x4b62, 0xd8b4, 0x1b50, 0xc9db, 0xcbfb, 0xe066, 0x1, 0x0);
        gbc.writeMem(0x4b62, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xd8b4);
        EXPECT(gbc.pc(), 0x4b64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 033D
        gbc.setState(0x4838, 0x2c3e, 0x70a0, 0xf666, 0x3c21, 0x8c17, 0x0, 0x1);
        gbc.writeMem(0x4838, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2c3e);
        EXPECT(gbc.pc(), 0x483a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 033E
        gbc.setState(0x1cd0, 0x4e54, 0xcf50, 0xa149, 0x5557, 0x1f18, 0x1, 0x0);
        gbc.writeMem(0x1cd0, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x4e54);
        EXPECT(gbc.pc(), 0x1cd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 033F
        gbc.setState(0xd3ee, 0xd63f, 0x3240, 0x95a6, 0x4696, 0x728, 0x1, 0x1);
        gbc.writeMem(0xd3ee, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xd63f);
        EXPECT(gbc.pc(), 0xd3f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3ee), 0xcb);
        EXPECT(gbc.readMem(0xd3ef), 0xcf);
        // CB CF 0340
        gbc.setState(0x62e, 0xa65c, 0x47a0, 0x57be, 0x67a4, 0x13d9, 0x0, 0x0);
        gbc.writeMem(0x62e, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xa65c);
        EXPECT(gbc.pc(), 0x630);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0341
        gbc.setState(0x60c2, 0x7c93, 0xb300, 0xbc47, 0x67fb, 0x57fb, 0x1, 0x0);
        gbc.writeMem(0x60c2, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x7c93);
        EXPECT(gbc.pc(), 0x60c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0342
        gbc.setState(0x1365, 0xa06f, 0xeb10, 0x99b4, 0x71c, 0x5c25, 0x0, 0x1);
        gbc.writeMem(0x1365, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xa06f);
        EXPECT(gbc.pc(), 0x1367);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0343
        gbc.setState(0x6d1e, 0xc431, 0xd100, 0x6dfd, 0x208b, 0xbfdb, 0x1, 0x0);
        gbc.writeMem(0x6d1e, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xc431);
        EXPECT(gbc.pc(), 0x6d20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0344
        gbc.setState(0xcba6, 0xf50e, 0x6b0, 0xc251, 0x4ad8, 0x2692, 0x1, 0x1);
        gbc.writeMem(0xcba6, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xf50e);
        EXPECT(gbc.pc(), 0xcba8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcba6), 0xcb);
        EXPECT(gbc.readMem(0xcba7), 0xcf);
        // CB CF 0345
        gbc.setState(0xe729, 0x2954, 0xaa20, 0xb029, 0xdefc, 0xa76c, 0x0, 0x1);
        gbc.writeMem(0xe729, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2954);
        EXPECT(gbc.pc(), 0xe72b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe729), 0xcb);
        EXPECT(gbc.readMem(0xe72a), 0xcf);
        // CB CF 0346
        gbc.setState(0x5d14, 0x315b, 0x2d20, 0x2f60, 0xf2ca, 0xee87, 0x1, 0x1);
        gbc.writeMem(0x5d14, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x315b);
        EXPECT(gbc.pc(), 0x5d16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0347
        gbc.setState(0x3db5, 0x51f4, 0x3fd0, 0xd1e3, 0xa89d, 0xf1c, 0x1, 0x1);
        gbc.writeMem(0x3db5, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x51f4);
        EXPECT(gbc.pc(), 0x3db7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0348
        gbc.setState(0x267, 0x9532, 0xe940, 0xdf85, 0x6411, 0x2095, 0x1, 0x0);
        gbc.writeMem(0x267, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x9532);
        EXPECT(gbc.pc(), 0x269);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0349
        gbc.setState(0x6d89, 0xa5c0, 0x7f80, 0x4a1b, 0xcce6, 0xea3f, 0x0, 0x0);
        gbc.writeMem(0x6d89, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xa5c0);
        EXPECT(gbc.pc(), 0x6d8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 034A
        gbc.setState(0x693d, 0x239, 0x32e0, 0xf89e, 0x9bc5, 0x22bf, 0x0, 0x1);
        gbc.writeMem(0x693d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x239);
        EXPECT(gbc.pc(), 0x693f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 034B
        gbc.setState(0xa993, 0x7fbd, 0xaaa0, 0x46dd, 0xad80, 0x431b, 0x0, 0x1);
        gbc.writeMem(0xa993, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x7fbd);
        EXPECT(gbc.pc(), 0xa995);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa993), 0xcb);
        EXPECT(gbc.readMem(0xa994), 0xcf);
        // CB CF 034C
        gbc.setState(0xbacf, 0x5787, 0x7c80, 0x4409, 0xbf24, 0x8fa8, 0x1, 0x0);
        gbc.writeMem(0xbacf, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5787);
        EXPECT(gbc.pc(), 0xbad1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbacf), 0xcb);
        EXPECT(gbc.readMem(0xbad0), 0xcf);
        // CB CF 034D
        gbc.setState(0x6d7b, 0x5ea, 0xc8f0, 0x972f, 0xe258, 0xa809, 0x0, 0x1);
        gbc.writeMem(0x6d7b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x5ea);
        EXPECT(gbc.pc(), 0x6d7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 034F
        gbc.setState(0x39be, 0xcf7a, 0xc520, 0x1aeb, 0x69c3, 0x2f41, 0x0, 0x0);
        gbc.writeMem(0x39be, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xcf7a);
        EXPECT(gbc.pc(), 0x39c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0350
        gbc.setState(0x4f91, 0x2e77, 0x3950, 0xa4b6, 0xc4f0, 0x881a, 0x1, 0x1);
        gbc.writeMem(0x4f91, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x2e77);
        EXPECT(gbc.pc(), 0x4f93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0351
        gbc.setState(0x1ad, 0x7fc0, 0x1aa0, 0xd3b4, 0x5a24, 0x9a7e, 0x1, 0x1);
        gbc.writeMem(0x1ad, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x7fc0);
        EXPECT(gbc.pc(), 0x1af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0352
        gbc.setState(0xa118, 0xc223, 0x6f60, 0x51e1, 0xfb9a, 0xa4d6, 0x0, 0x0);
        gbc.writeMem(0xa118, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xc223);
        EXPECT(gbc.pc(), 0xa11a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa118), 0xcb);
        EXPECT(gbc.readMem(0xa119), 0xcf);
        // CB CF 0353
        gbc.setState(0x92c2, 0x3eff, 0xd130, 0xfae, 0x7e20, 0x339, 0x1, 0x0);
        gbc.writeMem(0x92c2, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3eff);
        EXPECT(gbc.pc(), 0x92c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92c2), 0xcb);
        EXPECT(gbc.readMem(0x92c3), 0xcf);
        // CB CF 0354
        gbc.setState(0xafdd, 0x62fb, 0x3b50, 0x79ed, 0xb47e, 0xb566, 0x1, 0x1);
        gbc.writeMem(0xafdd, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x62fb);
        EXPECT(gbc.pc(), 0xafdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafdd), 0xcb);
        EXPECT(gbc.readMem(0xafde), 0xcf);
        // CB CF 0355
        gbc.setState(0x137e, 0xb278, 0x28b0, 0x12ca, 0xc558, 0xed3c, 0x0, 0x1);
        gbc.writeMem(0x137e, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb278);
        EXPECT(gbc.pc(), 0x1380);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0357
        gbc.setState(0x1eaa, 0xa235, 0xdc70, 0xb467, 0x24c8, 0xd12c, 0x0, 0x0);
        gbc.writeMem(0x1eaa, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa235);
        EXPECT(gbc.pc(), 0x1eac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0358
        gbc.setState(0xe397, 0xd7c3, 0xca80, 0x27df, 0x675a, 0xc275, 0x0, 0x1);
        gbc.writeMem(0xe397, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xd7c3);
        EXPECT(gbc.pc(), 0xe399);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe397), 0xcb);
        EXPECT(gbc.readMem(0xe398), 0xcf);
        // CB CF 0359
        gbc.setState(0x309f, 0x1070, 0x5c50, 0x8a7b, 0x3757, 0x7dbd, 0x0, 0x0);
        gbc.writeMem(0x309f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1070);
        EXPECT(gbc.pc(), 0x30a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 035A
        gbc.setState(0x2678, 0xed42, 0x3650, 0xc77f, 0x1927, 0x2642, 0x0, 0x1);
        gbc.writeMem(0x2678, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xed42);
        EXPECT(gbc.pc(), 0x267a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 035B
        gbc.setState(0x9ea6, 0x42f5, 0x6490, 0xaa9b, 0x2bb3, 0x4f57, 0x1, 0x1);
        gbc.writeMem(0x9ea6, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x42f5);
        EXPECT(gbc.pc(), 0x9ea8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ea6), 0xcb);
        EXPECT(gbc.readMem(0x9ea7), 0xcf);
        // CB CF 035C
        gbc.setState(0x507d, 0x3c67, 0x1f20, 0xc5b, 0x5c69, 0xb131, 0x1, 0x1);
        gbc.writeMem(0x507d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x3c67);
        EXPECT(gbc.pc(), 0x507f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 035D
        gbc.setState(0xa3b4, 0x730d, 0x9c0, 0x92e1, 0x52f5, 0xb246, 0x0, 0x0);
        gbc.writeMem(0xa3b4, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x730d);
        EXPECT(gbc.pc(), 0xa3b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3b4), 0xcb);
        EXPECT(gbc.readMem(0xa3b5), 0xcf);
        // CB CF 035E
        gbc.setState(0xed64, 0xe16e, 0x9f00, 0x87db, 0x709d, 0xa0cd, 0x0, 0x0);
        gbc.writeMem(0xed64, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xe16e);
        EXPECT(gbc.pc(), 0xed66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed64), 0xcb);
        EXPECT(gbc.readMem(0xed65), 0xcf);
        // CB CF 035F
        gbc.setState(0x9447, 0x9c31, 0x3080, 0x4aa6, 0xf0f8, 0xafd8, 0x1, 0x1);
        gbc.writeMem(0x9447, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x9c31);
        EXPECT(gbc.pc(), 0x9449);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9447), 0xcb);
        EXPECT(gbc.readMem(0x9448), 0xcf);
        // CB CF 0360
        gbc.setState(0x9a81, 0x832d, 0x54f0, 0x4ced, 0x4030, 0x6d4c, 0x1, 0x0);
        gbc.writeMem(0x9a81, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x832d);
        EXPECT(gbc.pc(), 0x9a83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a81), 0xcb);
        EXPECT(gbc.readMem(0x9a82), 0xcf);
        // CB CF 0361
        gbc.setState(0xe47, 0x3a53, 0x11a0, 0x13a, 0x71ed, 0xc522, 0x1, 0x1);
        gbc.writeMem(0xe47, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x3a53);
        EXPECT(gbc.pc(), 0xe49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0362
        gbc.setState(0xb0df, 0x28bd, 0xe170, 0xb7ba, 0x1a7d, 0x5612, 0x1, 0x1);
        gbc.writeMem(0xb0df, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x28bd);
        EXPECT(gbc.pc(), 0xb0e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0df), 0xcb);
        EXPECT(gbc.readMem(0xb0e0), 0xcf);
        // CB CF 0363
        gbc.setState(0x8fb8, 0xf4e9, 0xd9e0, 0xa5ca, 0xf67b, 0xf9ed, 0x1, 0x0);
        gbc.writeMem(0x8fb8, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xf4e9);
        EXPECT(gbc.pc(), 0x8fba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fb8), 0xcb);
        EXPECT(gbc.readMem(0x8fb9), 0xcf);
        // CB CF 0364
        gbc.setState(0x526, 0x3323, 0x4240, 0xba59, 0xa465, 0x7657, 0x0, 0x1);
        gbc.writeMem(0x526, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x3323);
        EXPECT(gbc.pc(), 0x528);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0365
        gbc.setState(0xed90, 0x40b6, 0x8e10, 0xf720, 0xf040, 0x5b3c, 0x0, 0x1);
        gbc.writeMem(0xed90, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x40b6);
        EXPECT(gbc.pc(), 0xed92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed90), 0xcb);
        EXPECT(gbc.readMem(0xed91), 0xcf);
        // CB CF 0366
        gbc.setState(0xd347, 0xdcb5, 0x85b0, 0xac6, 0x606a, 0xe2bd, 0x0, 0x1);
        gbc.writeMem(0xd347, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xdcb5);
        EXPECT(gbc.pc(), 0xd349);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd347), 0xcb);
        EXPECT(gbc.readMem(0xd348), 0xcf);
        // CB CF 0367
        gbc.setState(0x60fb, 0xdb46, 0xe820, 0x7c2c, 0x507, 0xdbf5, 0x0, 0x0);
        gbc.writeMem(0x60fb, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xdb46);
        EXPECT(gbc.pc(), 0x60fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0368
        gbc.setState(0x5df0, 0xb389, 0x77f0, 0x2937, 0x6a4c, 0x6f0a, 0x1, 0x1);
        gbc.writeMem(0x5df0, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xb389);
        EXPECT(gbc.pc(), 0x5df2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0369
        gbc.setState(0xbd22, 0x5a5f, 0x1250, 0xabdd, 0x361c, 0x6c66, 0x0, 0x1);
        gbc.writeMem(0xbd22, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x5a5f);
        EXPECT(gbc.pc(), 0xbd24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd22), 0xcb);
        EXPECT(gbc.readMem(0xbd23), 0xcf);
        // CB CF 036A
        gbc.setState(0x1f69, 0xdb59, 0x5470, 0x1430, 0x263a, 0x9b70, 0x0, 0x0);
        gbc.writeMem(0x1f69, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xdb59);
        EXPECT(gbc.pc(), 0x1f6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 036B
        gbc.setState(0x3f9c, 0x7d1e, 0xcf60, 0x9ea9, 0xbd54, 0xedf5, 0x1, 0x0);
        gbc.writeMem(0x3f9c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x7d1e);
        EXPECT(gbc.pc(), 0x3f9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 036C
        gbc.setState(0x1fe2, 0xb8ee, 0x9e30, 0xf4fe, 0x72cd, 0x462c, 0x0, 0x0);
        gbc.writeMem(0x1fe2, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xb8ee);
        EXPECT(gbc.pc(), 0x1fe4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 036D
        gbc.setState(0xca46, 0x9d3f, 0x3d00, 0x7be6, 0xfe5c, 0xf7eb, 0x0, 0x1);
        gbc.writeMem(0xca46, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x9d3f);
        EXPECT(gbc.pc(), 0xca48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca46), 0xcb);
        EXPECT(gbc.readMem(0xca47), 0xcf);
        // CB CF 036E
        gbc.setState(0x36a9, 0xcf02, 0xde00, 0xf054, 0xf92c, 0x8fee, 0x0, 0x1);
        gbc.writeMem(0x36a9, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xcf02);
        EXPECT(gbc.pc(), 0x36ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 036F
        gbc.setState(0xe1af, 0x2739, 0x1500, 0x8e2e, 0x9b7f, 0x49ef, 0x1, 0x1);
        gbc.writeMem(0xe1af, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x2739);
        EXPECT(gbc.pc(), 0xe1b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1af), 0xcb);
        EXPECT(gbc.readMem(0xe1b0), 0xcf);
        // CB CF 0370
        gbc.setState(0x4cf3, 0xfb0d, 0xd4b0, 0x83e1, 0xc237, 0xdfbc, 0x1, 0x1);
        gbc.writeMem(0x4cf3, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xfb0d);
        EXPECT(gbc.pc(), 0x4cf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0371
        gbc.setState(0x3e11, 0x1eb1, 0xc7f0, 0xcb24, 0x549, 0x4ba2, 0x1, 0x0);
        gbc.writeMem(0x3e11, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x1eb1);
        EXPECT(gbc.pc(), 0x3e13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0372
        gbc.setState(0xe635, 0x42d1, 0xf0a0, 0x87d1, 0x6412, 0x6625, 0x0, 0x1);
        gbc.writeMem(0xe635, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x42d1);
        EXPECT(gbc.pc(), 0xe637);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe635), 0xcb);
        EXPECT(gbc.readMem(0xe636), 0xcf);
        // CB CF 0373
        gbc.setState(0x6fd1, 0x6351, 0xf830, 0x69bd, 0x7791, 0x7b7, 0x1, 0x0);
        gbc.writeMem(0x6fd1, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x6351);
        EXPECT(gbc.pc(), 0x6fd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0374
        gbc.setState(0xa82b, 0xcb18, 0xc1d0, 0xefaa, 0x985c, 0x7009, 0x0, 0x0);
        gbc.writeMem(0xa82b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xcb18);
        EXPECT(gbc.pc(), 0xa82d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa82b), 0xcb);
        EXPECT(gbc.readMem(0xa82c), 0xcf);
        // CB CF 0375
        gbc.setState(0x19e, 0x6e8e, 0xbb30, 0xae16, 0x111, 0xd788, 0x0, 0x0);
        gbc.writeMem(0x19e, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x6e8e);
        EXPECT(gbc.pc(), 0x1a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0376
        gbc.setState(0x30cb, 0x222e, 0xb60, 0xd43e, 0xdb5f, 0xa443, 0x0, 0x1);
        gbc.writeMem(0x30cb, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x222e);
        EXPECT(gbc.pc(), 0x30cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0378
        gbc.setState(0x56a2, 0x5a3c, 0x8120, 0xce33, 0xc45, 0x24db, 0x1, 0x1);
        gbc.writeMem(0x56a2, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5a3c);
        EXPECT(gbc.pc(), 0x56a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0379
        gbc.setState(0x6c12, 0xb029, 0x7160, 0x4d76, 0x9653, 0xef88, 0x1, 0x1);
        gbc.writeMem(0x6c12, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xb029);
        EXPECT(gbc.pc(), 0x6c14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 037A
        gbc.setState(0xb2cf, 0x764c, 0x4f70, 0x908b, 0xa723, 0x54ce, 0x1, 0x1);
        gbc.writeMem(0xb2cf, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x764c);
        EXPECT(gbc.pc(), 0xb2d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2cf), 0xcb);
        EXPECT(gbc.readMem(0xb2d0), 0xcf);
        // CB CF 037B
        gbc.setState(0x464f, 0x5c9d, 0xb600, 0xfd50, 0x1501, 0xb1e9, 0x1, 0x1);
        gbc.writeMem(0x464f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x5c9d);
        EXPECT(gbc.pc(), 0x4651);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 037C
        gbc.setState(0x55ea, 0x9db2, 0xa1f0, 0xc99b, 0x60c3, 0xcc95, 0x0, 0x0);
        gbc.writeMem(0x55ea, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x9db2);
        EXPECT(gbc.pc(), 0x55ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 037D
        gbc.setState(0xe032, 0x1b9e, 0xe160, 0x2780, 0x5cfc, 0x9191, 0x0, 0x0);
        gbc.writeMem(0xe032, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x1b9e);
        EXPECT(gbc.pc(), 0xe034);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe032), 0xcb);
        EXPECT(gbc.readMem(0xe033), 0xcf);
        // CB CF 037E
        gbc.setState(0x833b, 0x38d7, 0x42d0, 0xa61c, 0x9f38, 0x450a, 0x1, 0x0);
        gbc.writeMem(0x833b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x38d7);
        EXPECT(gbc.pc(), 0x833d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x833b), 0xcb);
        EXPECT(gbc.readMem(0x833c), 0xcf);
        // CB CF 037F
        gbc.setState(0x8ec7, 0x6c3a, 0x8df0, 0xce26, 0x9470, 0xa163, 0x1, 0x0);
        gbc.writeMem(0x8ec7, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x6c3a);
        EXPECT(gbc.pc(), 0x8ec9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ec7), 0xcb);
        EXPECT(gbc.readMem(0x8ec8), 0xcf);
        // CB CF 0380
        gbc.setState(0x3672, 0xae5d, 0xb310, 0x9bfa, 0x10ae, 0x449a, 0x1, 0x1);
        gbc.writeMem(0x3672, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xae5d);
        EXPECT(gbc.pc(), 0x3674);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0381
        gbc.setState(0x98ed, 0xa3e9, 0x7370, 0x236a, 0x5d6b, 0x4949, 0x1, 0x1);
        gbc.writeMem(0x98ed, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa3e9);
        EXPECT(gbc.pc(), 0x98ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98ed), 0xcb);
        EXPECT(gbc.readMem(0x98ee), 0xcf);
        // CB CF 0382
        gbc.setState(0x9fc, 0xc383, 0xd9f0, 0x1343, 0x27a4, 0x8ff9, 0x1, 0x1);
        gbc.writeMem(0x9fc, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc383);
        EXPECT(gbc.pc(), 0x9fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0383
        gbc.setState(0x9a3, 0x73d4, 0x2470, 0xa6c4, 0x6438, 0xadb, 0x1, 0x1);
        gbc.writeMem(0x9a3, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x73d4);
        EXPECT(gbc.pc(), 0x9a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0384
        gbc.setState(0x2cd0, 0x5eba, 0xc820, 0x22fc, 0x4459, 0x43bb, 0x1, 0x0);
        gbc.writeMem(0x2cd0, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5eba);
        EXPECT(gbc.pc(), 0x2cd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0385
        gbc.setState(0xb904, 0x9973, 0x1ea0, 0x11f5, 0x2c1, 0xd3a7, 0x1, 0x0);
        gbc.writeMem(0xb904, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x9973);
        EXPECT(gbc.pc(), 0xb906);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb904), 0xcb);
        EXPECT(gbc.readMem(0xb905), 0xcf);
        // CB CF 0386
        gbc.setState(0x8080, 0x7e29, 0x7080, 0x11b5, 0x3343, 0x66dd, 0x1, 0x1);
        gbc.writeMem(0x8080, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x7e29);
        EXPECT(gbc.pc(), 0x8082);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8080), 0xcb);
        EXPECT(gbc.readMem(0x8081), 0xcf);
        // CB CF 0387
        gbc.setState(0x7a51, 0xa7f4, 0xfc00, 0xee84, 0x959f, 0x6402, 0x1, 0x0);
        gbc.writeMem(0x7a51, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xa7f4);
        EXPECT(gbc.pc(), 0x7a53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0388
        gbc.setState(0xc39f, 0xa3da, 0xdd20, 0x37b9, 0xbd33, 0x826e, 0x0, 0x1);
        gbc.writeMem(0xc39f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xa3da);
        EXPECT(gbc.pc(), 0xc3a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc39f), 0xcb);
        EXPECT(gbc.readMem(0xc3a0), 0xcf);
        // CB CF 0389
        gbc.setState(0x1efc, 0x34e9, 0xeb0, 0x48cd, 0xa9dd, 0x3a5f, 0x0, 0x0);
        gbc.writeMem(0x1efc, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x34e9);
        EXPECT(gbc.pc(), 0x1efe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 038A
        gbc.setState(0x86fd, 0xf736, 0x3050, 0xb7a0, 0xe92d, 0x550b, 0x1, 0x0);
        gbc.writeMem(0x86fd, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xf736);
        EXPECT(gbc.pc(), 0x86ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86fd), 0xcb);
        EXPECT(gbc.readMem(0x86fe), 0xcf);
        // CB CF 038B
        gbc.setState(0x4acb, 0xc743, 0x7660, 0xc2b4, 0xc22e, 0x4b88, 0x1, 0x0);
        gbc.writeMem(0x4acb, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xc743);
        EXPECT(gbc.pc(), 0x4acd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 038C
        gbc.setState(0x6d48, 0xcff1, 0x41e0, 0x36a5, 0x3f16, 0x9378, 0x0, 0x1);
        gbc.writeMem(0x6d48, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xcff1);
        EXPECT(gbc.pc(), 0x6d4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 038D
        gbc.setState(0x34a8, 0x3463, 0xfe20, 0x377b, 0x1ad1, 0xdd96, 0x1, 0x0);
        gbc.writeMem(0x34a8, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x3463);
        EXPECT(gbc.pc(), 0x34aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 038E
        gbc.setState(0xb7f0, 0x1ad, 0x6360, 0x8040, 0xe610, 0x4a6a, 0x0, 0x0);
        gbc.writeMem(0xb7f0, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1ad);
        EXPECT(gbc.pc(), 0xb7f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7f0), 0xcb);
        EXPECT(gbc.readMem(0xb7f1), 0xcf);
        // CB CF 038F
        gbc.setState(0xcaa2, 0x3273, 0xe290, 0xe766, 0xff32, 0x6a55, 0x0, 0x0);
        gbc.writeMem(0xcaa2, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x3273);
        EXPECT(gbc.pc(), 0xcaa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaa2), 0xcb);
        EXPECT(gbc.readMem(0xcaa3), 0xcf);
        // CB CF 0390
        gbc.setState(0xd74e, 0xe134, 0xea50, 0xdf6f, 0x71a5, 0x7db6, 0x1, 0x1);
        gbc.writeMem(0xd74e, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xe134);
        EXPECT(gbc.pc(), 0xd750);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd74e), 0xcb);
        EXPECT(gbc.readMem(0xd74f), 0xcf);
        // CB CF 0391
        gbc.setState(0x9841, 0xd520, 0xd370, 0x5422, 0xdeb1, 0x4f98, 0x0, 0x0);
        gbc.writeMem(0x9841, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xd520);
        EXPECT(gbc.pc(), 0x9843);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9841), 0xcb);
        EXPECT(gbc.readMem(0x9842), 0xcf);
        // CB CF 0392
        gbc.setState(0x5bca, 0xbed5, 0xd530, 0x1d1e, 0xc7c9, 0x32a2, 0x1, 0x1);
        gbc.writeMem(0x5bca, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xbed5);
        EXPECT(gbc.pc(), 0x5bcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0393
        gbc.setState(0x72ff, 0x60c8, 0x4f80, 0x278c, 0x89bb, 0x349c, 0x0, 0x1);
        gbc.writeMem(0x72ff, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x60c8);
        EXPECT(gbc.pc(), 0x7301);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0394
        gbc.setState(0xa9d3, 0x5d4f, 0xf170, 0x104c, 0x55e3, 0x5bf1, 0x1, 0x0);
        gbc.writeMem(0xa9d3, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x5d4f);
        EXPECT(gbc.pc(), 0xa9d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9d3), 0xcb);
        EXPECT(gbc.readMem(0xa9d4), 0xcf);
        // CB CF 0395
        gbc.setState(0x276f, 0xc3af, 0xe170, 0x9d33, 0x4203, 0x259, 0x0, 0x1);
        gbc.writeMem(0x276f, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xc3af);
        EXPECT(gbc.pc(), 0x2771);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0396
        gbc.setState(0x765b, 0x14a2, 0x86f0, 0x3094, 0x1e72, 0x796, 0x1, 0x1);
        gbc.writeMem(0x765b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x14a2);
        EXPECT(gbc.pc(), 0x765d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 0397
        gbc.setState(0x414b, 0x2b9e, 0x3de0, 0x723d, 0xdff9, 0xdea8, 0x0, 0x1);
        gbc.writeMem(0x414b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x2b9e);
        EXPECT(gbc.pc(), 0x414d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0398
        gbc.setState(0x78a0, 0x25ec, 0x64e0, 0x45eb, 0x834d, 0xccbc, 0x0, 0x1);
        gbc.writeMem(0x78a0, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x25ec);
        EXPECT(gbc.pc(), 0x78a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 0399
        gbc.setState(0x1fda, 0xcaa3, 0x96a0, 0x1451, 0x31ed, 0x1c, 0x0, 0x0);
        gbc.writeMem(0x1fda, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xcaa3);
        EXPECT(gbc.pc(), 0x1fdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 039A
        gbc.setState(0xc90e, 0x40b5, 0x2250, 0x5668, 0x51ce, 0x1dcf, 0x1, 0x0);
        gbc.writeMem(0xc90e, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x40b5);
        EXPECT(gbc.pc(), 0xc910);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc90e), 0xcb);
        EXPECT(gbc.readMem(0xc90f), 0xcf);
        // CB CF 039B
        gbc.setState(0xaabe, 0x554, 0x6260, 0x37b3, 0x5ec7, 0x8ffd, 0x1, 0x0);
        gbc.writeMem(0xaabe, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x554);
        EXPECT(gbc.pc(), 0xaac0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaabe), 0xcb);
        EXPECT(gbc.readMem(0xaabf), 0xcf);
        // CB CF 039C
        gbc.setState(0xa717, 0xd09f, 0x7e00, 0xf1aa, 0x9326, 0xf7f1, 0x0, 0x0);
        gbc.writeMem(0xa717, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xd09f);
        EXPECT(gbc.pc(), 0xa719);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa717), 0xcb);
        EXPECT(gbc.readMem(0xa718), 0xcf);
        // CB CF 039D
        gbc.setState(0xd760, 0x97ca, 0x1810, 0xf4, 0x5c09, 0x4b72, 0x0, 0x0);
        gbc.writeMem(0xd760, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x97ca);
        EXPECT(gbc.pc(), 0xd762);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd760), 0xcb);
        EXPECT(gbc.readMem(0xd761), 0xcf);
        // CB CF 039E
        gbc.setState(0xed3d, 0x3f7c, 0xd7f0, 0x5ab9, 0x39f4, 0x60fe, 0x0, 0x1);
        gbc.writeMem(0xed3d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x3f7c);
        EXPECT(gbc.pc(), 0xed3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed3d), 0xcb);
        EXPECT(gbc.readMem(0xed3e), 0xcf);
        // CB CF 039F
        gbc.setState(0x93a2, 0xfbe3, 0x4000, 0x51fd, 0x8a77, 0xc305, 0x1, 0x0);
        gbc.writeMem(0x93a2, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xfbe3);
        EXPECT(gbc.pc(), 0x93a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93a2), 0xcb);
        EXPECT(gbc.readMem(0x93a3), 0xcf);
        // CB CF 03A0
        gbc.setState(0x1fcd, 0x9464, 0x1750, 0xed95, 0x1740, 0x9c1, 0x1, 0x0);
        gbc.writeMem(0x1fcd, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9464);
        EXPECT(gbc.pc(), 0x1fcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 03A1
        gbc.setState(0x525b, 0x4e24, 0xfc60, 0x2f21, 0x54a5, 0x711c, 0x0, 0x1);
        gbc.writeMem(0x525b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x4e24);
        EXPECT(gbc.pc(), 0x525d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 03A2
        gbc.setState(0x5b50, 0x9713, 0x76e0, 0x7b56, 0x57db, 0x7216, 0x0, 0x0);
        gbc.writeMem(0x5b50, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x9713);
        EXPECT(gbc.pc(), 0x5b52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 03A3
        gbc.setState(0x6978, 0x3397, 0x3e80, 0x8e7d, 0x5306, 0x799f, 0x1, 0x0);
        gbc.writeMem(0x6978, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x3397);
        EXPECT(gbc.pc(), 0x697a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 03A4
        gbc.setState(0x810b, 0xa61d, 0x9100, 0x9d97, 0xfa22, 0xc878, 0x0, 0x0);
        gbc.writeMem(0x810b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xa61d);
        EXPECT(gbc.pc(), 0x810d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x810b), 0xcb);
        EXPECT(gbc.readMem(0x810c), 0xcf);
        // CB CF 03A5
        gbc.setState(0xa938, 0x44f6, 0xe760, 0x226d, 0x6c23, 0x2f2e, 0x1, 0x1);
        gbc.writeMem(0xa938, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x44f6);
        EXPECT(gbc.pc(), 0xa93a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa938), 0xcb);
        EXPECT(gbc.readMem(0xa939), 0xcf);
        // CB CF 03A6
        gbc.setState(0x4706, 0xb34c, 0xd2e0, 0xae26, 0xeacc, 0xbd0a, 0x0, 0x1);
        gbc.writeMem(0x4706, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xb34c);
        EXPECT(gbc.pc(), 0x4708);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 03A7
        gbc.setState(0x71db, 0x4512, 0x4180, 0x981, 0x36a0, 0x31a, 0x1, 0x0);
        gbc.writeMem(0x71db, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x4512);
        EXPECT(gbc.pc(), 0x71dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 03A8
        gbc.setState(0x77a9, 0x2f6c, 0x1dc0, 0xaeef, 0x1b28, 0xae1a, 0x0, 0x0);
        gbc.writeMem(0x77a9, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x2f6c);
        EXPECT(gbc.pc(), 0x77ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 03A9
        gbc.setState(0x38cf, 0xf4da, 0xc0b0, 0x33f1, 0x308a, 0x2667, 0x1, 0x1);
        gbc.writeMem(0x38cf, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xf4da);
        EXPECT(gbc.pc(), 0x38d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 03AA
        gbc.setState(0x4a73, 0xc7f9, 0x22a0, 0x9398, 0x525a, 0x3dae, 0x1, 0x0);
        gbc.writeMem(0x4a73, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xc7f9);
        EXPECT(gbc.pc(), 0x4a75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 03AB
        gbc.setState(0x1542, 0x5488, 0x7a00, 0x45b, 0x46c4, 0x341b, 0x1, 0x0);
        gbc.writeMem(0x1542, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x5488);
        EXPECT(gbc.pc(), 0x1544);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 03AC
        gbc.setState(0x2139, 0x547d, 0xf370, 0x2d31, 0xdf6, 0x3f32, 0x0, 0x1);
        gbc.writeMem(0x2139, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x547d);
        EXPECT(gbc.pc(), 0x213b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 03AD
        gbc.setState(0xde36, 0x6ddb, 0x8dc0, 0x7bdc, 0xf9cb, 0x7453, 0x0, 0x1);
        gbc.writeMem(0xde36, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x6ddb);
        EXPECT(gbc.pc(), 0xde38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde36), 0xcb);
        EXPECT(gbc.readMem(0xde37), 0xcf);
        // CB CF 03AF
        gbc.setState(0xe64e, 0xc040, 0x7be0, 0xcb85, 0x59c9, 0x7cdc, 0x1, 0x0);
        gbc.writeMem(0xe64e, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xc040);
        EXPECT(gbc.pc(), 0xe650);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe64e), 0xcb);
        EXPECT(gbc.readMem(0xe64f), 0xcf);
        // CB CF 03B1
        gbc.setState(0xb709, 0xed3a, 0x42d0, 0xed28, 0x172a, 0xc966, 0x1, 0x0);
        gbc.writeMem(0xb709, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xed3a);
        EXPECT(gbc.pc(), 0xb70b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb709), 0xcb);
        EXPECT(gbc.readMem(0xb70a), 0xcf);
        // CB CF 03B2
        gbc.setState(0x3851, 0x4980, 0xf940, 0x9bf2, 0x3264, 0x2eb0, 0x1, 0x1);
        gbc.writeMem(0x3851, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x4980);
        EXPECT(gbc.pc(), 0x3853);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 03B3
        gbc.setState(0xea44, 0xcf5f, 0x8730, 0x1441, 0xaf58, 0xf9e1, 0x1, 0x0);
        gbc.writeMem(0xea44, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xcf5f);
        EXPECT(gbc.pc(), 0xea46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea44), 0xcb);
        EXPECT(gbc.readMem(0xea45), 0xcf);
        // CB CF 03B4
        gbc.setState(0x547, 0xd759, 0x58d0, 0xf609, 0x2cb8, 0x6829, 0x0, 0x0);
        gbc.writeMem(0x547, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xd759);
        EXPECT(gbc.pc(), 0x549);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 03B5
        gbc.setState(0x6dfc, 0x605f, 0xd560, 0x2583, 0x138b, 0x7200, 0x1, 0x0);
        gbc.writeMem(0x6dfc, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x605f);
        EXPECT(gbc.pc(), 0x6dfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 03B6
        gbc.setState(0xe989, 0x94f3, 0x9e30, 0xe74b, 0xabd7, 0x6b52, 0x0, 0x1);
        gbc.writeMem(0xe989, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x94f3);
        EXPECT(gbc.pc(), 0xe98b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe989), 0xcb);
        EXPECT(gbc.readMem(0xe98a), 0xcf);
        // CB CF 03B7
        gbc.setState(0x85de, 0xe6f6, 0x2e60, 0xb86c, 0xc27a, 0x4766, 0x1, 0x0);
        gbc.writeMem(0x85de, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xe6f6);
        EXPECT(gbc.pc(), 0x85e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85de), 0xcb);
        EXPECT(gbc.readMem(0x85df), 0xcf);
        // CB CF 03B8
        gbc.setState(0x2d76, 0x7aa7, 0xf5f0, 0xf4cc, 0x6968, 0x33a7, 0x0, 0x1);
        gbc.writeMem(0x2d76, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x7aa7);
        EXPECT(gbc.pc(), 0x2d78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 03B9
        gbc.setState(0x6027, 0x5c33, 0xc6c0, 0x4afa, 0x886e, 0x432, 0x1, 0x1);
        gbc.writeMem(0x6027, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x5c33);
        EXPECT(gbc.pc(), 0x6029);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 03BA
        gbc.setState(0x8034, 0x8644, 0x5c70, 0x5270, 0xccfe, 0x256c, 0x0, 0x0);
        gbc.writeMem(0x8034, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x8644);
        EXPECT(gbc.pc(), 0x8036);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8034), 0xcb);
        EXPECT(gbc.readMem(0x8035), 0xcf);
        // CB CF 03BB
        gbc.setState(0xe757, 0x95ad, 0xc680, 0xdcda, 0x7e0a, 0x18a9, 0x0, 0x0);
        gbc.writeMem(0xe757, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x95ad);
        EXPECT(gbc.pc(), 0xe759);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe757), 0xcb);
        EXPECT(gbc.readMem(0xe758), 0xcf);
        // CB CF 03BC
        gbc.setState(0xa1d6, 0x1045, 0xeed0, 0xd71d, 0xd4f6, 0x758d, 0x0, 0x0);
        gbc.writeMem(0xa1d6, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x1045);
        EXPECT(gbc.pc(), 0xa1d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1d6), 0xcb);
        EXPECT(gbc.readMem(0xa1d7), 0xcf);
        // CB CF 03BD
        gbc.setState(0x7312, 0x3cbd, 0x4f0, 0x5e26, 0x2ee0, 0x6d7, 0x1, 0x1);
        gbc.writeMem(0x7312, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3cbd);
        EXPECT(gbc.pc(), 0x7314);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 03BE
        gbc.setState(0x93a2, 0x94c4, 0x6a70, 0xb931, 0x1bbc, 0x2090, 0x1, 0x0);
        gbc.writeMem(0x93a2, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x94c4);
        EXPECT(gbc.pc(), 0x93a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93a2), 0xcb);
        EXPECT(gbc.readMem(0x93a3), 0xcf);
        // CB CF 03BF
        gbc.setState(0x3712, 0xbc7d, 0x9c40, 0xd973, 0xe399, 0xf91b, 0x1, 0x0);
        gbc.writeMem(0x3712, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xbc7d);
        EXPECT(gbc.pc(), 0x3714);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 03C0
        gbc.setState(0xec32, 0xc4c0, 0x8880, 0xcd65, 0xfe3, 0x5707, 0x1, 0x1);
        gbc.writeMem(0xec32, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xc4c0);
        EXPECT(gbc.pc(), 0xec34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec32), 0xcb);
        EXPECT(gbc.readMem(0xec33), 0xcf);
        // CB CF 03C1
        gbc.setState(0x568, 0x268c, 0x8610, 0x6c0e, 0x7b82, 0xf92c, 0x0, 0x1);
        gbc.writeMem(0x568, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x268c);
        EXPECT(gbc.pc(), 0x56a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 03C3
        gbc.setState(0x376d, 0x98c0, 0xde30, 0x86a5, 0x95d, 0xb9c1, 0x0, 0x0);
        gbc.writeMem(0x376d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x98c0);
        EXPECT(gbc.pc(), 0x376f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 03C4
        gbc.setState(0x9d7d, 0xa72b, 0x1840, 0x5a55, 0xf8e8, 0xa546, 0x1, 0x1);
        gbc.writeMem(0x9d7d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa72b);
        EXPECT(gbc.pc(), 0x9d7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d7d), 0xcb);
        EXPECT(gbc.readMem(0x9d7e), 0xcf);
        // CB CF 03C5
        gbc.setState(0x2f51, 0x4f16, 0x7560, 0x65c5, 0xad9e, 0x530, 0x0, 0x1);
        gbc.writeMem(0x2f51, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x4f16);
        EXPECT(gbc.pc(), 0x2f53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 03C6
        gbc.setState(0xe912, 0x48a, 0x4350, 0x337c, 0x5d3d, 0x8a4, 0x1, 0x0);
        gbc.writeMem(0xe912, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x48a);
        EXPECT(gbc.pc(), 0xe914);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe912), 0xcb);
        EXPECT(gbc.readMem(0xe913), 0xcf);
        // CB CF 03C7
        gbc.setState(0xbff3, 0xa95f, 0xcf20, 0xe9f6, 0x3297, 0x73e1, 0x0, 0x0);
        gbc.writeMem(0xbff3, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa95f);
        EXPECT(gbc.pc(), 0xbff5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbff3), 0xcb);
        EXPECT(gbc.readMem(0xbff4), 0xcf);
        // CB CF 03C8
        gbc.setState(0x22ca, 0xaa43, 0xb8d0, 0x5784, 0xc099, 0xf750, 0x1, 0x1);
        gbc.writeMem(0x22ca, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xaa43);
        EXPECT(gbc.pc(), 0x22cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 03C9
        gbc.setState(0x5001, 0x2539, 0xb220, 0x2914, 0x887c, 0xa797, 0x1, 0x1);
        gbc.writeMem(0x5001, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x2539);
        EXPECT(gbc.pc(), 0x5003);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 03CA
        gbc.setState(0x3968, 0x8581, 0x950, 0x4ba7, 0x557d, 0x4037, 0x1, 0x0);
        gbc.writeMem(0x3968, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x8581);
        EXPECT(gbc.pc(), 0x396a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 03CB
        gbc.setState(0xbd26, 0x5a9, 0x6850, 0x67eb, 0xeaca, 0x4bed, 0x0, 0x0);
        gbc.writeMem(0xbd26, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x5a9);
        EXPECT(gbc.pc(), 0xbd28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd26), 0xcb);
        EXPECT(gbc.readMem(0xbd27), 0xcf);
        // CB CF 03CC
        gbc.setState(0x58d0, 0x2a15, 0xd5b0, 0x2bd2, 0x639a, 0x9db2, 0x0, 0x0);
        gbc.writeMem(0x58d0, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x2a15);
        EXPECT(gbc.pc(), 0x58d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 03CD
        gbc.setState(0x9f90, 0xb156, 0x8040, 0x4c84, 0x2dc, 0x801c, 0x0, 0x1);
        gbc.writeMem(0x9f90, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xb156);
        EXPECT(gbc.pc(), 0x9f92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f90), 0xcb);
        EXPECT(gbc.readMem(0x9f91), 0xcf);
        // CB CF 03CE
        gbc.setState(0xa98a, 0x9c65, 0x2980, 0xdf70, 0xf627, 0x8ba4, 0x1, 0x1);
        gbc.writeMem(0xa98a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x9c65);
        EXPECT(gbc.pc(), 0xa98c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa98a), 0xcb);
        EXPECT(gbc.readMem(0xa98b), 0xcf);
        // CB CF 03CF
        gbc.setState(0xd75c, 0xceda, 0xdab0, 0x54a7, 0x2f6d, 0x9483, 0x1, 0x1);
        gbc.writeMem(0xd75c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xceda);
        EXPECT(gbc.pc(), 0xd75e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd75c), 0xcb);
        EXPECT(gbc.readMem(0xd75d), 0xcf);
        // CB CF 03D0
        gbc.setState(0x3b9, 0x7e42, 0x5a80, 0xec51, 0x47c4, 0xbeb2, 0x1, 0x0);
        gbc.writeMem(0x3b9, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7e42);
        EXPECT(gbc.pc(), 0x3bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 03D1
        gbc.setState(0x11a9, 0xdf53, 0xe500, 0x3c82, 0xe63d, 0xe38, 0x1, 0x1);
        gbc.writeMem(0x11a9, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xdf53);
        EXPECT(gbc.pc(), 0x11ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 03D2
        gbc.setState(0x3d55, 0xe95d, 0x5760, 0x6e09, 0xce59, 0x7f5b, 0x0, 0x1);
        gbc.writeMem(0x3d55, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xe95d);
        EXPECT(gbc.pc(), 0x3d57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 03D4
        gbc.setState(0xd5a5, 0x4154, 0xd8f0, 0x9c27, 0xe0b4, 0x1325, 0x0, 0x1);
        gbc.writeMem(0xd5a5, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4154);
        EXPECT(gbc.pc(), 0xd5a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5a5), 0xcb);
        EXPECT(gbc.readMem(0xd5a6), 0xcf);
        // CB CF 03D6
        gbc.setState(0x12d9, 0x2f48, 0xe170, 0x753f, 0x65a1, 0x5668, 0x0, 0x0);
        gbc.writeMem(0x12d9, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x2f48);
        EXPECT(gbc.pc(), 0x12db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 03D7
        gbc.setState(0x6075, 0x56b7, 0xad50, 0x53e4, 0x71d2, 0xe7cd, 0x0, 0x1);
        gbc.writeMem(0x6075, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x56b7);
        EXPECT(gbc.pc(), 0x6077);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 03D8
        gbc.setState(0x5e97, 0x7f48, 0xc290, 0xc81e, 0xf2b, 0x4fac, 0x0, 0x1);
        gbc.writeMem(0x5e97, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x7f48);
        EXPECT(gbc.pc(), 0x5e99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 03D9
        gbc.setState(0x853c, 0x5d1c, 0x7580, 0x23cd, 0x3175, 0x5b45, 0x1, 0x0);
        gbc.writeMem(0x853c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x5d1c);
        EXPECT(gbc.pc(), 0x853e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x853c), 0xcb);
        EXPECT(gbc.readMem(0x853d), 0xcf);
        // CB CF 03DA
        gbc.setState(0x656b, 0x241e, 0x9710, 0xabde, 0x17ce, 0x5684, 0x0, 0x0);
        gbc.writeMem(0x656b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x241e);
        EXPECT(gbc.pc(), 0x656d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 03DB
        gbc.setState(0xdb20, 0xe24, 0xbc90, 0xd97, 0x9f45, 0x3fa9, 0x1, 0x1);
        gbc.writeMem(0xdb20, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe24);
        EXPECT(gbc.pc(), 0xdb22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb20), 0xcb);
        EXPECT(gbc.readMem(0xdb21), 0xcf);
        // CB CF 03DC
        gbc.setState(0x3e80, 0xf52b, 0x9690, 0xd937, 0xb88a, 0xef5, 0x0, 0x1);
        gbc.writeMem(0x3e80, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xf52b);
        EXPECT(gbc.pc(), 0x3e82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 03DD
        gbc.setState(0x4b9, 0xfa61, 0x3cf0, 0xde92, 0x4f24, 0x7ca0, 0x0, 0x1);
        gbc.writeMem(0x4b9, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xfa61);
        EXPECT(gbc.pc(), 0x4bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CF 03DE
        gbc.setState(0x9cad, 0xb456, 0xd7d0, 0x1b63, 0xd624, 0xb298, 0x1, 0x0);
        gbc.writeMem(0x9cad, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb456);
        EXPECT(gbc.pc(), 0x9caf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cad), 0xcb);
        EXPECT(gbc.readMem(0x9cae), 0xcf);
        // CB CF 03DF
        gbc.setState(0x7154, 0x94ec, 0x6d60, 0xbb5c, 0x23f0, 0x6e52, 0x0, 0x1);
        gbc.writeMem(0x7154, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x94ec);
        EXPECT(gbc.pc(), 0x7156);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 03E0
        gbc.setState(0x76ee, 0x4e13, 0xd920, 0x8b38, 0xd5fc, 0xccc0, 0x0, 0x1);
        gbc.writeMem(0x76ee, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x4e13);
        EXPECT(gbc.pc(), 0x76f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 03E1
        gbc.setState(0x6177, 0x8b9b, 0x22a0, 0x7a02, 0xc956, 0x6446, 0x0, 0x0);
        gbc.writeMem(0x6177, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x8b9b);
        EXPECT(gbc.pc(), 0x6179);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 03E2
        gbc.setState(0xc32a, 0x4739, 0xb7e0, 0x2280, 0xa744, 0xdc86, 0x0, 0x0);
        gbc.writeMem(0xc32a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4739);
        EXPECT(gbc.pc(), 0xc32c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc32a), 0xcb);
        EXPECT(gbc.readMem(0xc32b), 0xcf);
        // CB CF 03E3
        gbc.setState(0x734a, 0x6be0, 0x9210, 0x81b6, 0x34b5, 0xbc70, 0x1, 0x0);
        gbc.writeMem(0x734a, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6be0);
        EXPECT(gbc.pc(), 0x734c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CF 03E4
        gbc.setState(0x4a4c, 0xb988, 0x5c00, 0xa540, 0x73ea, 0x53c7, 0x0, 0x0);
        gbc.writeMem(0x4a4c, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xb988);
        EXPECT(gbc.pc(), 0x4a4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CF 03E5
        gbc.setState(0x296d, 0x60cb, 0x51e0, 0x5e0d, 0x9c1, 0x1982, 0x1, 0x0);
        gbc.writeMem(0x296d, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x60cb);
        EXPECT(gbc.pc(), 0x296f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CF 03E6
        gbc.setState(0x8207, 0xfdef, 0xb020, 0x4b57, 0xba6b, 0xf02a, 0x0, 0x1);
        gbc.writeMem(0x8207, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xfdef);
        EXPECT(gbc.pc(), 0x8209);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8207), 0xcb);
        EXPECT(gbc.readMem(0x8208), 0xcf);
        // CB CF 03E7
        gbc.setState(0x5c1b, 0xfa5, 0xe530, 0xd74a, 0x8dd1, 0x7040, 0x1, 0x1);
        gbc.writeMem(0x5c1b, { 0xcb, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xfa5);
        EXPECT(gbc.pc(), 0x5c1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
    }
