    TEST(gbcemu, opcode_52) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 52 0000
        gbc.setState(0xb7bd, 0xcefd, 0x2720, 0x324a, 0xa4d3, 0x83fd, 0x0, 0x0);
        gbc.writeMem(0xb7bd, { 0x52 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xcefd, gbc.sp());
        EXPECT(0xb7be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb7bd));
        // 52 0002
        gbc.setState(0x5266, 0x2961, 0x1570, 0x1f4a, 0x405, 0xee4, 0x0, 0x1);
        gbc.writeMem(0x5266, { 0x52 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2961, gbc.sp());
        EXPECT(0x5267, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0003
        gbc.setState(0xcce0, 0xab61, 0x5b80, 0x8799, 0x4121, 0xe47, 0x1, 0x1);
        gbc.writeMem(0xcce0, { 0x52 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xab61, gbc.sp());
        EXPECT(0xcce1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xcce0));
        // 52 0004
        gbc.setState(0x74c1, 0xeccd, 0xa310, 0x9356, 0x7501, 0xfcc0, 0x0, 0x1);
        gbc.writeMem(0x74c1, { 0x52 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xeccd, gbc.sp());
        EXPECT(0x74c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0005
        gbc.setState(0x97f7, 0x57c3, 0x40b0, 0x718e, 0xcff4, 0x2690, 0x1, 0x1);
        gbc.writeMem(0x97f7, { 0x52 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x57c3, gbc.sp());
        EXPECT(0x97f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x97f7));
        // 52 0006
        gbc.setState(0x5e8e, 0xcab7, 0x3940, 0x4c90, 0x40b6, 0x7047, 0x0, 0x1);
        gbc.writeMem(0x5e8e, { 0x52 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xcab7, gbc.sp());
        EXPECT(0x5e8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0007
        gbc.setState(0xb63a, 0x7d7e, 0x7dd0, 0x77df, 0x2e1a, 0x3d6d, 0x0, 0x1);
        gbc.writeMem(0xb63a, { 0x52 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7d7e, gbc.sp());
        EXPECT(0xb63b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb63a));
        // 52 0008
        gbc.setState(0xb03e, 0x5247, 0xf3b0, 0xe6e0, 0xc98f, 0x1a48, 0x0, 0x0);
        gbc.writeMem(0xb03e, { 0x52 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5247, gbc.sp());
        EXPECT(0xb03f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb03e));
        // 52 0009
        gbc.setState(0xd1ac, 0x9c42, 0xa7f0, 0x7ca1, 0x51be, 0xa6de, 0x1, 0x1);
        gbc.writeMem(0xd1ac, { 0x52 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9c42, gbc.sp());
        EXPECT(0xd1ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd1ac));
        // 52 000A
        gbc.setState(0xcd6, 0x1e, 0x78d0, 0xe0d8, 0x6581, 0x5cb2, 0x0, 0x1);
        gbc.writeMem(0xcd6, { 0x52 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1e, gbc.sp());
        EXPECT(0xcd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 000B
        gbc.setState(0xb1d4, 0x41d6, 0x8bf0, 0x18ae, 0x4f7a, 0x6cf7, 0x1, 0x0);
        gbc.writeMem(0xb1d4, { 0x52 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x41d6, gbc.sp());
        EXPECT(0xb1d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb1d4));
        // 52 000C
        gbc.setState(0xbfa7, 0xeb81, 0x4360, 0xbf5, 0x7d3e, 0x83c3, 0x0, 0x0);
        gbc.writeMem(0xbfa7, { 0x52 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xeb81, gbc.sp());
        EXPECT(0xbfa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xbfa7));
        // 52 000D
        gbc.setState(0x7b74, 0xcf00, 0x3d20, 0xd069, 0x2b84, 0x4704, 0x1, 0x0);
        gbc.writeMem(0x7b74, { 0x52 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xcf00, gbc.sp());
        EXPECT(0x7b75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 000E
        gbc.setState(0x349b, 0x2b3f, 0x2140, 0xded7, 0xe28f, 0x9e0e, 0x1, 0x1);
        gbc.writeMem(0x349b, { 0x52 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2b3f, gbc.sp());
        EXPECT(0x349c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 000F
        gbc.setState(0xb690, 0xe774, 0x8020, 0x2efd, 0xd462, 0x46d2, 0x0, 0x1);
        gbc.writeMem(0xb690, { 0x52 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe774, gbc.sp());
        EXPECT(0xb691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb690));
        // 52 0010
        gbc.setState(0x320d, 0x75ec, 0x9130, 0x2914, 0x5ed7, 0xcbbf, 0x1, 0x0);
        gbc.writeMem(0x320d, { 0x52 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x75ec, gbc.sp());
        EXPECT(0x320e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0011
        gbc.setState(0x7a07, 0xc2d, 0x96f0, 0x785e, 0xc01a, 0x4184, 0x0, 0x1);
        gbc.writeMem(0x7a07, { 0x52 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc2d, gbc.sp());
        EXPECT(0x7a08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0012
        gbc.setState(0x24f7, 0x40f7, 0x17b0, 0x7586, 0x8c03, 0xb4a7, 0x1, 0x1);
        gbc.writeMem(0x24f7, { 0x52 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x40f7, gbc.sp());
        EXPECT(0x24f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0013
        gbc.setState(0xb6e7, 0x20eb, 0x22d0, 0xe8cc, 0xbb21, 0x12dd, 0x1, 0x0);
        gbc.writeMem(0xb6e7, { 0x52 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x20eb, gbc.sp());
        EXPECT(0xb6e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb6e7));
        // 52 0014
        gbc.setState(0xbb09, 0x52fd, 0x25d0, 0x5b66, 0x3c83, 0xfbb7, 0x1, 0x1);
        gbc.writeMem(0xbb09, { 0x52 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x52fd, gbc.sp());
        EXPECT(0xbb0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xbb09));
        // 52 0016
        gbc.setState(0x24d, 0xbe57, 0x3da0, 0x5e5, 0x335c, 0x241a, 0x0, 0x0);
        gbc.writeMem(0x24d, { 0x52 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbe57, gbc.sp());
        EXPECT(0x24e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0017
        gbc.setState(0xac2, 0xb19e, 0x33e0, 0x8a72, 0x2897, 0x616e, 0x0, 0x0);
        gbc.writeMem(0xac2, { 0x52 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb19e, gbc.sp());
        EXPECT(0xac3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0018
        gbc.setState(0xce6f, 0x2dc6, 0xc1d0, 0x4a0a, 0x30f2, 0xa9a7, 0x1, 0x1);
        gbc.writeMem(0xce6f, { 0x52 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2dc6, gbc.sp());
        EXPECT(0xce70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xce6f));
        // 52 0019
        gbc.setState(0xdc3, 0x567, 0xab0, 0x66e4, 0xcfaf, 0xcdd8, 0x0, 0x0);
        gbc.writeMem(0xdc3, { 0x52 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x567, gbc.sp());
        EXPECT(0xdc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 001A
        gbc.setState(0x8090, 0xb844, 0x7080, 0xf243, 0x797, 0x5be1, 0x1, 0x1);
        gbc.writeMem(0x8090, { 0x52 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb844, gbc.sp());
        EXPECT(0x8091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8090));
        // 52 001B
        gbc.setState(0x230b, 0xef2e, 0xed60, 0xfea6, 0x8ae8, 0xb8e0, 0x0, 0x0);
        gbc.writeMem(0x230b, { 0x52 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xef2e, gbc.sp());
        EXPECT(0x230c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 001C
        gbc.setState(0x7463, 0x8e7b, 0x90b0, 0x81d1, 0xeb72, 0x63ab, 0x0, 0x0);
        gbc.writeMem(0x7463, { 0x52 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x8e7b, gbc.sp());
        EXPECT(0x7464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 001D
        gbc.setState(0xdb79, 0xe990, 0x7230, 0x4c49, 0x5ba1, 0x20e7, 0x0, 0x0);
        gbc.writeMem(0xdb79, { 0x52 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe990, gbc.sp());
        EXPECT(0xdb7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xdb79));
        // 52 001E
        gbc.setState(0xb7f1, 0x7836, 0x440, 0xfe65, 0xfdbf, 0xc7ea, 0x1, 0x1);
        gbc.writeMem(0xb7f1, { 0x52 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7836, gbc.sp());
        EXPECT(0xb7f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb7f1));
        // 52 001F
        gbc.setState(0x8a8b, 0x4986, 0x2740, 0xfedf, 0x296c, 0x601, 0x0, 0x1);
        gbc.writeMem(0x8a8b, { 0x52 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4986, gbc.sp());
        EXPECT(0x8a8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8a8b));
        // 52 0020
        gbc.setState(0xc3c4, 0x886, 0x5840, 0x4f8f, 0xfa46, 0x2153, 0x1, 0x0);
        gbc.writeMem(0xc3c4, { 0x52 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x886, gbc.sp());
        EXPECT(0xc3c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc3c4));
        // 52 0021
        gbc.setState(0xa406, 0xd9a2, 0x34c0, 0x8d83, 0x58c4, 0x3f50, 0x1, 0x0);
        gbc.writeMem(0xa406, { 0x52 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd9a2, gbc.sp());
        EXPECT(0xa407, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa406));
        // 52 0022
        gbc.setState(0xcaf0, 0x25ff, 0x3860, 0x5362, 0xc036, 0x8fb7, 0x1, 0x1);
        gbc.writeMem(0xcaf0, { 0x52 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x25ff, gbc.sp());
        EXPECT(0xcaf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xcaf0));
        // 52 0023
        gbc.setState(0x6386, 0x504d, 0xf570, 0x3093, 0x973c, 0x76a5, 0x0, 0x0);
        gbc.writeMem(0x6386, { 0x52 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x504d, gbc.sp());
        EXPECT(0x6387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0024
        gbc.setState(0xf11, 0xa20b, 0x3d50, 0xbc34, 0xdf7c, 0x892, 0x0, 0x0);
        gbc.writeMem(0xf11, { 0x52 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa20b, gbc.sp());
        EXPECT(0xf12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0025
        gbc.setState(0x8a6, 0xb579, 0xf850, 0x6bc, 0x4692, 0x5f94, 0x0, 0x0);
        gbc.writeMem(0x8a6, { 0x52 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb579, gbc.sp());
        EXPECT(0x8a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0026
        gbc.setState(0x144f, 0x1e29, 0xdfd0, 0xaa38, 0x2cde, 0x4d69, 0x0, 0x0);
        gbc.writeMem(0x144f, { 0x52 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1e29, gbc.sp());
        EXPECT(0x1450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0027
        gbc.setState(0x6780, 0x8b57, 0x5d90, 0x8a98, 0x40e, 0xa496, 0x0, 0x1);
        gbc.writeMem(0x6780, { 0x52 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8b57, gbc.sp());
        EXPECT(0x6781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0028
        gbc.setState(0x1232, 0xa141, 0x55d0, 0x49d2, 0xe1ed, 0x691c, 0x1, 0x0);
        gbc.writeMem(0x1232, { 0x52 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa141, gbc.sp());
        EXPECT(0x1233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0029
        gbc.setState(0xd423, 0x4d13, 0x8700, 0x9f28, 0x372f, 0xe83f, 0x0, 0x1);
        gbc.writeMem(0xd423, { 0x52 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4d13, gbc.sp());
        EXPECT(0xd424, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd423));
        // 52 002A
        gbc.setState(0x787a, 0x1c4f, 0x4d80, 0xf2e0, 0x4673, 0xcc34, 0x0, 0x0);
        gbc.writeMem(0x787a, { 0x52 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1c4f, gbc.sp());
        EXPECT(0x787b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 002B
        gbc.setState(0x5843, 0x770f, 0xeab0, 0xb6f4, 0x409b, 0x8024, 0x1, 0x0);
        gbc.writeMem(0x5843, { 0x52 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x770f, gbc.sp());
        EXPECT(0x5844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 002C
        gbc.setState(0x7fa0, 0x6220, 0x7fa0, 0x8320, 0x2073, 0x1c3, 0x1, 0x1);
        gbc.writeMem(0x7fa0, { 0x52 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6220, gbc.sp());
        EXPECT(0x7fa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 002D
        gbc.setState(0x6ed5, 0xbebb, 0xe980, 0x6a56, 0xf98, 0x41ac, 0x1, 0x1);
        gbc.writeMem(0x6ed5, { 0x52 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xbebb, gbc.sp());
        EXPECT(0x6ed6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 002E
        gbc.setState(0x4d95, 0x636e, 0xfe90, 0x6f9f, 0x1873, 0xfb99, 0x0, 0x0);
        gbc.writeMem(0x4d95, { 0x52 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x636e, gbc.sp());
        EXPECT(0x4d96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 002F
        gbc.setState(0x231c, 0xfda9, 0x4ee0, 0x14ce, 0xd800, 0xe663, 0x1, 0x1);
        gbc.writeMem(0x231c, { 0x52 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xfda9, gbc.sp());
        EXPECT(0x231d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0030
        gbc.setState(0xbf63, 0x159e, 0x8eb0, 0xa9e8, 0xaa, 0xfad0, 0x0, 0x0);
        gbc.writeMem(0xbf63, { 0x52 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x159e, gbc.sp());
        EXPECT(0xbf64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xbf63));
        // 52 0031
        gbc.setState(0x9705, 0x5179, 0xf3d0, 0xa726, 0x7b6b, 0x9474, 0x0, 0x1);
        gbc.writeMem(0x9705, { 0x52 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5179, gbc.sp());
        EXPECT(0x9706, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9705));
        // 52 0032
        gbc.setState(0xc4d2, 0xdc2, 0x2ad0, 0x6514, 0x1c0f, 0xaff6, 0x0, 0x1);
        gbc.writeMem(0xc4d2, { 0x52 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xdc2, gbc.sp());
        EXPECT(0xc4d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc4d2));
        // 52 0034
        gbc.setState(0x3930, 0x2692, 0xbfd0, 0x1dc6, 0xa06, 0xf059, 0x1, 0x1);
        gbc.writeMem(0x3930, { 0x52 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2692, gbc.sp());
        EXPECT(0x3931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0035
        gbc.setState(0x38c4, 0x9031, 0x84a0, 0xc626, 0x33fe, 0xec6, 0x0, 0x0);
        gbc.writeMem(0x38c4, { 0x52 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9031, gbc.sp());
        EXPECT(0x38c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0036
        gbc.setState(0xee02, 0x7ba, 0x2e00, 0x979, 0x22d1, 0x7062, 0x1, 0x0);
        gbc.writeMem(0xee02, { 0x52 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7ba, gbc.sp());
        EXPECT(0xee03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xee02));
        // 52 0037
        gbc.setState(0x963a, 0x6acd, 0xb910, 0xda2f, 0xdc0a, 0x2b4b, 0x1, 0x1);
        gbc.writeMem(0x963a, { 0x52 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6acd, gbc.sp());
        EXPECT(0x963b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x963a));
        // 52 0038
        gbc.setState(0xe56f, 0xbdd4, 0xa510, 0xde84, 0x2751, 0xfe2b, 0x1, 0x1);
        gbc.writeMem(0xe56f, { 0x52 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xbdd4, gbc.sp());
        EXPECT(0xe570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe56f));
        // 52 0039
        gbc.setState(0xbdd5, 0xd47c, 0x9ba0, 0x4725, 0xf886, 0x5b4b, 0x0, 0x0);
        gbc.writeMem(0xbdd5, { 0x52 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd47c, gbc.sp());
        EXPECT(0xbdd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xbdd5));
        // 52 003A
        gbc.setState(0x1428, 0x2b50, 0x2a30, 0xdd22, 0xb9a2, 0x94b, 0x1, 0x0);
        gbc.writeMem(0x1428, { 0x52 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2b50, gbc.sp());
        EXPECT(0x1429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 003B
        gbc.setState(0x5145, 0x5b8b, 0x6100, 0x584c, 0x7134, 0x1933, 0x1, 0x1);
        gbc.writeMem(0x5145, { 0x52 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5b8b, gbc.sp());
        EXPECT(0x5146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 003C
        gbc.setState(0xa299, 0x4435, 0x6cb0, 0x8753, 0x51a8, 0x8843, 0x0, 0x1);
        gbc.writeMem(0xa299, { 0x52 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4435, gbc.sp());
        EXPECT(0xa29a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa299));
        // 52 003D
        gbc.setState(0x4286, 0xbf20, 0x60b0, 0x950e, 0x8648, 0xd9cd, 0x0, 0x0);
        gbc.writeMem(0x4286, { 0x52 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xbf20, gbc.sp());
        EXPECT(0x4287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 003E
        gbc.setState(0xc7f7, 0xb16e, 0x3430, 0x9dc2, 0x1fa, 0xd6b7, 0x0, 0x0);
        gbc.writeMem(0xc7f7, { 0x52 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb16e, gbc.sp());
        EXPECT(0xc7f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc7f7));
        // 52 003F
        gbc.setState(0x2200, 0xa0f2, 0xb820, 0x854f, 0xd1c9, 0xe38c, 0x1, 0x1);
        gbc.writeMem(0x2200, { 0x52 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa0f2, gbc.sp());
        EXPECT(0x2201, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0040
        gbc.setState(0x19c5, 0x384c, 0x53a0, 0x996f, 0x148c, 0x1baf, 0x1, 0x0);
        gbc.writeMem(0x19c5, { 0x52 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x384c, gbc.sp());
        EXPECT(0x19c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0042
        gbc.setState(0x1ab3, 0xc05c, 0xa440, 0x8557, 0x1b27, 0x8621, 0x1, 0x1);
        gbc.writeMem(0x1ab3, { 0x52 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc05c, gbc.sp());
        EXPECT(0x1ab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0043
        gbc.setState(0x36b0, 0xf622, 0xb380, 0x918, 0x785d, 0x6cf1, 0x0, 0x1);
        gbc.writeMem(0x36b0, { 0x52 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf622, gbc.sp());
        EXPECT(0x36b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0044
        gbc.setState(0x9b4d, 0x1a1d, 0xa510, 0x9e55, 0x80ab, 0x297b, 0x1, 0x1);
        gbc.writeMem(0x9b4d, { 0x52 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1a1d, gbc.sp());
        EXPECT(0x9b4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9b4d));
        // 52 0045
        gbc.setState(0x54bf, 0x5fb5, 0xab80, 0x7003, 0xb096, 0x3033, 0x0, 0x1);
        gbc.writeMem(0x54bf, { 0x52 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5fb5, gbc.sp());
        EXPECT(0x54c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0046
        gbc.setState(0xc263, 0x177d, 0xf7e0, 0x3827, 0x9918, 0xfa88, 0x0, 0x0);
        gbc.writeMem(0xc263, { 0x52 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x177d, gbc.sp());
        EXPECT(0xc264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc263));
        // 52 0047
        gbc.setState(0x28af, 0x426e, 0xff0, 0x27ae, 0x9b1a, 0x81cc, 0x1, 0x0);
        gbc.writeMem(0x28af, { 0x52 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x426e, gbc.sp());
        EXPECT(0x28b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0048
        gbc.setState(0x410d, 0x1bab, 0x2430, 0x27be, 0x75e9, 0x2724, 0x1, 0x1);
        gbc.writeMem(0x410d, { 0x52 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1bab, gbc.sp());
        EXPECT(0x410e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0049
        gbc.setState(0x2ebd, 0xc0b1, 0x4650, 0x5280, 0x9d0b, 0x24f7, 0x1, 0x0);
        gbc.writeMem(0x2ebd, { 0x52 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc0b1, gbc.sp());
        EXPECT(0x2ebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 004A
        gbc.setState(0x8043, 0x484d, 0x6500, 0x2d9d, 0x3823, 0xe5c5, 0x0, 0x0);
        gbc.writeMem(0x8043, { 0x52 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x484d, gbc.sp());
        EXPECT(0x8044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8043));
        // 52 004B
        gbc.setState(0x1078, 0x51b5, 0xba20, 0xc8cc, 0x3d03, 0xae34, 0x1, 0x0);
        gbc.writeMem(0x1078, { 0x52 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x51b5, gbc.sp());
        EXPECT(0x1079, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 004C
        gbc.setState(0x9a6f, 0x94a, 0xb180, 0x5303, 0x5ca4, 0x4d28, 0x0, 0x0);
        gbc.writeMem(0x9a6f, { 0x52 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x94a, gbc.sp());
        EXPECT(0x9a70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9a6f));
        // 52 004D
        gbc.setState(0x9f25, 0x9e34, 0x73e0, 0x59bf, 0x4fe4, 0x99ab, 0x0, 0x1);
        gbc.writeMem(0x9f25, { 0x52 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9e34, gbc.sp());
        EXPECT(0x9f26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9f25));
        // 52 004F
        gbc.setState(0x3cfe, 0x7371, 0x9b80, 0xbea7, 0x5864, 0x8077, 0x1, 0x1);
        gbc.writeMem(0x3cfe, { 0x52 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7371, gbc.sp());
        EXPECT(0x3cff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0050
        gbc.setState(0x79da, 0xd3b5, 0xe450, 0x576b, 0xa5d1, 0x601e, 0x1, 0x1);
        gbc.writeMem(0x79da, { 0x52 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd3b5, gbc.sp());
        EXPECT(0x79db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0052
        gbc.setState(0xb56d, 0xf20e, 0xe30, 0xda50, 0xd25f, 0x25fe, 0x0, 0x1);
        gbc.writeMem(0xb56d, { 0x52 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf20e, gbc.sp());
        EXPECT(0xb56e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb56d));
        // 52 0053
        gbc.setState(0x39ee, 0x3795, 0x55e0, 0x598e, 0x9e86, 0x618c, 0x1, 0x1);
        gbc.writeMem(0x39ee, { 0x52 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3795, gbc.sp());
        EXPECT(0x39ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0054
        gbc.setState(0xb060, 0x9cd2, 0x4bd0, 0xd73a, 0x5fd6, 0x4869, 0x1, 0x1);
        gbc.writeMem(0xb060, { 0x52 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9cd2, gbc.sp());
        EXPECT(0xb061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb060));
        // 52 0055
        gbc.setState(0xd03a, 0x29f9, 0x29c0, 0x248c, 0xea0d, 0xdb05, 0x1, 0x1);
        gbc.writeMem(0xd03a, { 0x52 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x29f9, gbc.sp());
        EXPECT(0xd03b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd03a));
        // 52 0056
        gbc.setState(0xd6f8, 0x97f7, 0xc140, 0x637, 0xfb31, 0xd6e, 0x0, 0x0);
        gbc.writeMem(0xd6f8, { 0x52 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x97f7, gbc.sp());
        EXPECT(0xd6f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd6f8));
        // 52 0057
        gbc.setState(0x39f7, 0x6537, 0x710, 0x16c8, 0x5497, 0xd35, 0x0, 0x0);
        gbc.writeMem(0x39f7, { 0x52 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6537, gbc.sp());
        EXPECT(0x39f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0058
        gbc.setState(0x5a2, 0x8e7a, 0xb570, 0x8870, 0x35f8, 0xd675, 0x1, 0x0);
        gbc.writeMem(0x5a2, { 0x52 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8e7a, gbc.sp());
        EXPECT(0x5a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 005B
        gbc.setState(0x999a, 0x99b0, 0x320, 0x7219, 0xa3e8, 0xc509, 0x1, 0x1);
        gbc.writeMem(0x999a, { 0x52 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x99b0, gbc.sp());
        EXPECT(0x999b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x999a));
        // 52 005C
        gbc.setState(0xaf65, 0xc21b, 0x6ed0, 0x1a90, 0xb389, 0x103d, 0x0, 0x0);
        gbc.writeMem(0xaf65, { 0x52 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc21b, gbc.sp());
        EXPECT(0xaf66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xaf65));
        // 52 005E
        gbc.setState(0x1066, 0xa1e6, 0x8ee0, 0x503c, 0xce10, 0xea7d, 0x0, 0x1);
        gbc.writeMem(0x1066, { 0x52 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa1e6, gbc.sp());
        EXPECT(0x1067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 005F
        gbc.setState(0x9dcc, 0x4e36, 0x55f0, 0x4eff, 0x4a12, 0x84af, 0x1, 0x0);
        gbc.writeMem(0x9dcc, { 0x52 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4e36, gbc.sp());
        EXPECT(0x9dcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9dcc));
        // 52 0060
        gbc.setState(0x81c0, 0xd6d1, 0xf050, 0xb211, 0x497d, 0x21a2, 0x1, 0x0);
        gbc.writeMem(0x81c0, { 0x52 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd6d1, gbc.sp());
        EXPECT(0x81c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x81c0));
        // 52 0061
        gbc.setState(0xe060, 0x57f8, 0xf430, 0xa899, 0xd8e5, 0xa90c, 0x1, 0x0);
        gbc.writeMem(0xe060, { 0x52 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x57f8, gbc.sp());
        EXPECT(0xe061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe060));
        // 52 0062
        gbc.setState(0xde44, 0xe71a, 0x7c0, 0x407b, 0xffe3, 0x96bd, 0x0, 0x1);
        gbc.writeMem(0xde44, { 0x52 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe71a, gbc.sp());
        EXPECT(0xde45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xde44));
        // 52 0063
        gbc.setState(0xa183, 0x2428, 0x4c70, 0x6f2c, 0xae58, 0x6e5, 0x0, 0x0);
        gbc.writeMem(0xa183, { 0x52 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2428, gbc.sp());
        EXPECT(0xa184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa183));
        // 52 0064
        gbc.setState(0x7642, 0xc094, 0x86c0, 0xca, 0x6a2f, 0xc39f, 0x1, 0x1);
        gbc.writeMem(0x7642, { 0x52 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc094, gbc.sp());
        EXPECT(0x7643, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0065
        gbc.setState(0x9b8b, 0x7baf, 0x3000, 0xf546, 0x9926, 0xfc1, 0x0, 0x0);
        gbc.writeMem(0x9b8b, { 0x52 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7baf, gbc.sp());
        EXPECT(0x9b8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9b8b));
        // 52 0066
        gbc.setState(0x77eb, 0xc34c, 0x30a0, 0x76d1, 0xfbe2, 0xe45a, 0x1, 0x0);
        gbc.writeMem(0x77eb, { 0x52 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc34c, gbc.sp());
        EXPECT(0x77ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0067
        gbc.setState(0x9797, 0xa115, 0x4b00, 0xe7b7, 0x985a, 0x7900, 0x1, 0x1);
        gbc.writeMem(0x9797, { 0x52 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa115, gbc.sp());
        EXPECT(0x9798, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9797));
        // 52 0068
        gbc.setState(0x8d80, 0x762d, 0xeb60, 0x64dd, 0x67e7, 0xc3cf, 0x1, 0x0);
        gbc.writeMem(0x8d80, { 0x52 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x762d, gbc.sp());
        EXPECT(0x8d81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8d80));
        // 52 0069
        gbc.setState(0xb56a, 0x3081, 0x68b0, 0xff28, 0xddbe, 0xab00, 0x1, 0x1);
        gbc.writeMem(0xb56a, { 0x52 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3081, gbc.sp());
        EXPECT(0xb56b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb56a));
        // 52 006A
        gbc.setState(0x551a, 0x16d2, 0xc520, 0x64fb, 0x970a, 0x51dd, 0x0, 0x1);
        gbc.writeMem(0x551a, { 0x52 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x16d2, gbc.sp());
        EXPECT(0x551b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 006B
        gbc.setState(0x7c76, 0xa824, 0x1b10, 0xf10f, 0x263f, 0x2f89, 0x1, 0x0);
        gbc.writeMem(0x7c76, { 0x52 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa824, gbc.sp());
        EXPECT(0x7c77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 006C
        gbc.setState(0x55f9, 0xebcc, 0xd230, 0xd5e9, 0x31a8, 0xf795, 0x1, 0x0);
        gbc.writeMem(0x55f9, { 0x52 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xebcc, gbc.sp());
        EXPECT(0x55fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 006E
        gbc.setState(0xb802, 0x94fb, 0x3100, 0xb940, 0x7b1d, 0x1422, 0x0, 0x0);
        gbc.writeMem(0xb802, { 0x52 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x94fb, gbc.sp());
        EXPECT(0xb803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb802));
        // 52 006F
        gbc.setState(0x37b4, 0x35e1, 0x1660, 0x338f, 0x90e0, 0x43ab, 0x1, 0x0);
        gbc.writeMem(0x37b4, { 0x52 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x35e1, gbc.sp());
        EXPECT(0x37b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0070
        gbc.setState(0x20f0, 0xda37, 0x8600, 0xcf31, 0x49fd, 0xe02d, 0x1, 0x0);
        gbc.writeMem(0x20f0, { 0x52 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xda37, gbc.sp());
        EXPECT(0x20f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0071
        gbc.setState(0x4fed, 0x2cab, 0x3b10, 0xa1d1, 0xfdeb, 0xcd7a, 0x1, 0x1);
        gbc.writeMem(0x4fed, { 0x52 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2cab, gbc.sp());
        EXPECT(0x4fee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0072
        gbc.setState(0x7555, 0x69d1, 0x5a70, 0xf5e9, 0xa710, 0x2ed4, 0x0, 0x1);
        gbc.writeMem(0x7555, { 0x52 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x69d1, gbc.sp());
        EXPECT(0x7556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0073
        gbc.setState(0x5f6c, 0x32b5, 0x9610, 0xe0e8, 0x52f5, 0xe539, 0x1, 0x0);
        gbc.writeMem(0x5f6c, { 0x52 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x32b5, gbc.sp());
        EXPECT(0x5f6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0074
        gbc.setState(0xb223, 0x7875, 0xbd90, 0x64f5, 0x6469, 0x8d9e, 0x0, 0x0);
        gbc.writeMem(0xb223, { 0x52 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7875, gbc.sp());
        EXPECT(0xb224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb223));
        // 52 0075
        gbc.setState(0x57ff, 0xae24, 0x9c70, 0x42fc, 0x61ad, 0x9262, 0x0, 0x0);
        gbc.writeMem(0x57ff, { 0x52 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xae24, gbc.sp());
        EXPECT(0x5800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0076
        gbc.setState(0xd283, 0xd859, 0xb480, 0x74d3, 0xecec, 0x90e7, 0x0, 0x0);
        gbc.writeMem(0xd283, { 0x52 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd859, gbc.sp());
        EXPECT(0xd284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd283));
        // 52 0078
        gbc.setState(0xc1fd, 0xc185, 0x1600, 0x160c, 0xb402, 0x5dfc, 0x1, 0x1);
        gbc.writeMem(0xc1fd, { 0x52 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc185, gbc.sp());
        EXPECT(0xc1fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc1fd));
        // 52 0079
        gbc.setState(0x3e04, 0xaa9e, 0x9450, 0xcd19, 0x9399, 0x3fa2, 0x0, 0x1);
        gbc.writeMem(0x3e04, { 0x52 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xaa9e, gbc.sp());
        EXPECT(0x3e05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 007A
        gbc.setState(0x9c2a, 0x2542, 0xc80, 0xf5fe, 0x5d70, 0x2bbc, 0x0, 0x1);
        gbc.writeMem(0x9c2a, { 0x52 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2542, gbc.sp());
        EXPECT(0x9c2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9c2a));
        // 52 007B
        gbc.setState(0x59ed, 0xcb88, 0x85a0, 0x28a4, 0x4d57, 0x3cd, 0x0, 0x1);
        gbc.writeMem(0x59ed, { 0x52 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xcb88, gbc.sp());
        EXPECT(0x59ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 007C
        gbc.setState(0xdf9c, 0xa9f6, 0x8290, 0x2d70, 0x1e57, 0xf165, 0x0, 0x0);
        gbc.writeMem(0xdf9c, { 0x52 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa9f6, gbc.sp());
        EXPECT(0xdf9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xdf9c));
        // 52 007D
        gbc.setState(0xe026, 0x3143, 0x8bf0, 0xc08a, 0x5ba0, 0x97c8, 0x1, 0x0);
        gbc.writeMem(0xe026, { 0x52 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3143, gbc.sp());
        EXPECT(0xe027, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe026));
        // 52 007E
        gbc.setState(0xb294, 0x62d9, 0x70, 0x15ec, 0xf6e1, 0xd8b3, 0x1, 0x0);
        gbc.writeMem(0xb294, { 0x52 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x62d9, gbc.sp());
        EXPECT(0xb295, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb294));
        // 52 007F
        gbc.setState(0xe79d, 0x1f7b, 0x5490, 0xdddf, 0x3cf1, 0xdc91, 0x1, 0x0);
        gbc.writeMem(0xe79d, { 0x52 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1f7b, gbc.sp());
        EXPECT(0xe79e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe79d));
        // 52 0080
        gbc.setState(0x586c, 0xb863, 0xf940, 0xbdcd, 0xd447, 0x1af6, 0x1, 0x1);
        gbc.writeMem(0x586c, { 0x52 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb863, gbc.sp());
        EXPECT(0x586d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0081
        gbc.setState(0x8333, 0xb671, 0x3d30, 0x1b0, 0x2f49, 0xe888, 0x1, 0x1);
        gbc.writeMem(0x8333, { 0x52 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb671, gbc.sp());
        EXPECT(0x8334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8333));
        // 52 0082
        gbc.setState(0xe1e6, 0x4673, 0x140, 0x7fa3, 0x60b5, 0x6244, 0x1, 0x1);
        gbc.writeMem(0xe1e6, { 0x52 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4673, gbc.sp());
        EXPECT(0xe1e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe1e6));
        // 52 0083
        gbc.setState(0x14f7, 0xc4f2, 0xc950, 0x5286, 0x1dcb, 0xa4ab, 0x1, 0x1);
        gbc.writeMem(0x14f7, { 0x52 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc4f2, gbc.sp());
        EXPECT(0x14f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0084
        gbc.setState(0xbca5, 0xc8fa, 0x9080, 0xf984, 0xe3eb, 0xbfa8, 0x1, 0x0);
        gbc.writeMem(0xbca5, { 0x52 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc8fa, gbc.sp());
        EXPECT(0xbca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xbca5));
        // 52 0085
        gbc.setState(0x96e9, 0x4b8b, 0x790, 0x77c3, 0x8f71, 0x7a79, 0x0, 0x0);
        gbc.writeMem(0x96e9, { 0x52 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4b8b, gbc.sp());
        EXPECT(0x96ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x96e9));
        // 52 0086
        gbc.setState(0x2c7f, 0xa519, 0xd000, 0xd0b9, 0x68de, 0xd8f9, 0x1, 0x1);
        gbc.writeMem(0x2c7f, { 0x52 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa519, gbc.sp());
        EXPECT(0x2c80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0087
        gbc.setState(0xe0bc, 0x7b01, 0x1ca0, 0xd763, 0x6549, 0xcdc4, 0x1, 0x0);
        gbc.writeMem(0xe0bc, { 0x52 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7b01, gbc.sp());
        EXPECT(0xe0bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe0bc));
        // 52 0088
        gbc.setState(0x6eb6, 0xfd31, 0xf160, 0x4e02, 0xfdbe, 0x87e6, 0x1, 0x0);
        gbc.writeMem(0x6eb6, { 0x52 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xfd31, gbc.sp());
        EXPECT(0x6eb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0089
        gbc.setState(0x1dc5, 0x1412, 0x6d70, 0xf98f, 0x24dd, 0x4399, 0x0, 0x1);
        gbc.writeMem(0x1dc5, { 0x52 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1412, gbc.sp());
        EXPECT(0x1dc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 008A
        gbc.setState(0xd679, 0x5a7, 0x9800, 0xd95e, 0x220d, 0x2abb, 0x1, 0x1);
        gbc.writeMem(0xd679, { 0x52 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5a7, gbc.sp());
        EXPECT(0xd67a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd679));
        // 52 008C
        gbc.setState(0x3eac, 0x9a0c, 0xae90, 0x847, 0x2b4a, 0x5a48, 0x1, 0x1);
        gbc.writeMem(0x3eac, { 0x52 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9a0c, gbc.sp());
        EXPECT(0x3ead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 008D
        gbc.setState(0xd8ae, 0x26cf, 0xb240, 0x5b48, 0x11df, 0x8fe7, 0x0, 0x1);
        gbc.writeMem(0xd8ae, { 0x52 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x26cf, gbc.sp());
        EXPECT(0xd8af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd8ae));
        // 52 008E
        gbc.setState(0xdd3a, 0xaa4f, 0x2c50, 0xfe0d, 0xe81d, 0x15a0, 0x1, 0x1);
        gbc.writeMem(0xdd3a, { 0x52 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xaa4f, gbc.sp());
        EXPECT(0xdd3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xdd3a));
        // 52 008F
        gbc.setState(0x6ebf, 0x60bb, 0xdd50, 0xf95b, 0xb025, 0xc4a8, 0x0, 0x0);
        gbc.writeMem(0x6ebf, { 0x52 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x60bb, gbc.sp());
        EXPECT(0x6ec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0090
        gbc.setState(0xebd0, 0x3255, 0xc350, 0xdf6e, 0x5c33, 0x9789, 0x1, 0x1);
        gbc.writeMem(0xebd0, { 0x52 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3255, gbc.sp());
        EXPECT(0xebd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xebd0));
        // 52 0091
        gbc.setState(0x2eeb, 0x9a02, 0x4ec0, 0x6b5f, 0xf08e, 0x306f, 0x1, 0x1);
        gbc.writeMem(0x2eeb, { 0x52 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9a02, gbc.sp());
        EXPECT(0x2eec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0092
        gbc.setState(0x2193, 0x8005, 0x7220, 0xa9ee, 0xa429, 0xb44e, 0x0, 0x1);
        gbc.writeMem(0x2193, { 0x52 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8005, gbc.sp());
        EXPECT(0x2194, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0093
        gbc.setState(0x58f0, 0x9991, 0xcc0, 0x71c5, 0xdc24, 0x82a2, 0x0, 0x0);
        gbc.writeMem(0x58f0, { 0x52 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9991, gbc.sp());
        EXPECT(0x58f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0094
        gbc.setState(0x3b9, 0x71fc, 0x5020, 0x90cc, 0xd24a, 0xfdce, 0x0, 0x0);
        gbc.writeMem(0x3b9, { 0x52 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x71fc, gbc.sp());
        EXPECT(0x3ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0095
        gbc.setState(0xbad7, 0x4171, 0x7320, 0x3fcc, 0xb8f4, 0xc38b, 0x0, 0x0);
        gbc.writeMem(0xbad7, { 0x52 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4171, gbc.sp());
        EXPECT(0xbad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xbad7));
        // 52 0096
        gbc.setState(0x11d0, 0xc73f, 0x8140, 0xdf49, 0x1650, 0xc39e, 0x1, 0x0);
        gbc.writeMem(0x11d0, { 0x52 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc73f, gbc.sp());
        EXPECT(0x11d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0097
        gbc.setState(0xb532, 0xee1, 0xe410, 0x9018, 0xf878, 0x5968, 0x1, 0x1);
        gbc.writeMem(0xb532, { 0x52 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xee1, gbc.sp());
        EXPECT(0xb533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb532));
        // 52 0098
        gbc.setState(0x38e2, 0x7717, 0xffe0, 0x525b, 0xd2f, 0xf74f, 0x0, 0x1);
        gbc.writeMem(0x38e2, { 0x52 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7717, gbc.sp());
        EXPECT(0x38e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0099
        gbc.setState(0x47e2, 0x760d, 0xe4f0, 0x8c45, 0x68bb, 0xfc59, 0x1, 0x0);
        gbc.writeMem(0x47e2, { 0x52 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x760d, gbc.sp());
        EXPECT(0x47e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 009A
        gbc.setState(0xa7bb, 0xb9, 0x3410, 0xfdc9, 0x4223, 0x4c7d, 0x1, 0x1);
        gbc.writeMem(0xa7bb, { 0x52 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb9, gbc.sp());
        EXPECT(0xa7bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa7bb));
        // 52 009B
        gbc.setState(0xdeee, 0x88b6, 0x7590, 0xebf9, 0xdf1e, 0x4b01, 0x0, 0x1);
        gbc.writeMem(0xdeee, { 0x52 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x88b6, gbc.sp());
        EXPECT(0xdeef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xdeee));
        // 52 009C
        gbc.setState(0x51d2, 0xcd98, 0xdb60, 0x21a, 0xdff8, 0x68cb, 0x1, 0x1);
        gbc.writeMem(0x51d2, { 0x52 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xcd98, gbc.sp());
        EXPECT(0x51d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 009D
        gbc.setState(0xc85f, 0x72b6, 0x2c30, 0xa026, 0x5b44, 0x4f36, 0x0, 0x1);
        gbc.writeMem(0xc85f, { 0x52 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x72b6, gbc.sp());
        EXPECT(0xc860, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc85f));
        // 52 009E
        gbc.setState(0xee7f, 0x6549, 0x2c10, 0x1bf0, 0x31a7, 0x45f5, 0x0, 0x1);
        gbc.writeMem(0xee7f, { 0x52 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6549, gbc.sp());
        EXPECT(0xee80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xee7f));
        // 52 009F
        gbc.setState(0x8c16, 0xb98, 0x5d30, 0x2616, 0xb0e5, 0x1309, 0x1, 0x0);
        gbc.writeMem(0x8c16, { 0x52 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb98, gbc.sp());
        EXPECT(0x8c17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8c16));
        // 52 00A0
        gbc.setState(0x51ea, 0x45ae, 0x8db0, 0xac7c, 0xe8d6, 0x6ada, 0x0, 0x1);
        gbc.writeMem(0x51ea, { 0x52 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x45ae, gbc.sp());
        EXPECT(0x51eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 00A1
        gbc.setState(0xe233, 0x1e5c, 0xe580, 0x2d0d, 0x1d4c, 0xae37, 0x1, 0x0);
        gbc.writeMem(0xe233, { 0x52 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1e5c, gbc.sp());
        EXPECT(0xe234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe233));
        // 52 00A2
        gbc.setState(0xc5eb, 0xd844, 0x7c00, 0x1369, 0x2a2, 0x445a, 0x0, 0x1);
        gbc.writeMem(0xc5eb, { 0x52 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd844, gbc.sp());
        EXPECT(0xc5ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc5eb));
        // 52 00A3
        gbc.setState(0x2ed0, 0x802b, 0xfc30, 0xbbf, 0xed1b, 0x61c0, 0x0, 0x1);
        gbc.writeMem(0x2ed0, { 0x52 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x802b, gbc.sp());
        EXPECT(0x2ed1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 00A4
        gbc.setState(0x2909, 0x5621, 0x6800, 0x9f09, 0xa132, 0xb660, 0x0, 0x0);
        gbc.writeMem(0x2909, { 0x52 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5621, gbc.sp());
        EXPECT(0x290a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 00A5
        gbc.setState(0x570a, 0xeb17, 0x62b0, 0x51bb, 0xfaf0, 0x9fd3, 0x0, 0x0);
        gbc.writeMem(0x570a, { 0x52 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xeb17, gbc.sp());
        EXPECT(0x570b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 00A6
        gbc.setState(0xdf17, 0xd925, 0x32c0, 0xc6b7, 0xfa45, 0x8f63, 0x0, 0x0);
        gbc.writeMem(0xdf17, { 0x52 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd925, gbc.sp());
        EXPECT(0xdf18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xdf17));
        // 52 00A7
        gbc.setState(0xc67f, 0x1764, 0x5b00, 0xae2, 0x73f7, 0xd47c, 0x0, 0x1);
        gbc.writeMem(0xc67f, { 0x52 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1764, gbc.sp());
        EXPECT(0xc680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc67f));
        // 52 00A8
        gbc.setState(0xb451, 0xee58, 0xe9d0, 0x8c7d, 0xff89, 0x7c80, 0x0, 0x0);
        gbc.writeMem(0xb451, { 0x52 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xee58, gbc.sp());
        EXPECT(0xb452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb451));
        // 52 00A9
        gbc.setState(0x64aa, 0x22dd, 0x8f70, 0xfb18, 0xfda0, 0x39d3, 0x1, 0x0);
        gbc.writeMem(0x64aa, { 0x52 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x22dd, gbc.sp());
        EXPECT(0x64ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 00AA
        gbc.setState(0xd9d2, 0x6b1e, 0x6ce0, 0x6aab, 0x2302, 0x5918, 0x1, 0x1);
        gbc.writeMem(0xd9d2, { 0x52 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6b1e, gbc.sp());
        EXPECT(0xd9d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd9d2));
        // 52 00AB
        gbc.setState(0xeb5f, 0x6805, 0x6f00, 0xbf43, 0x206a, 0xcd98, 0x0, 0x1);
        gbc.writeMem(0xeb5f, { 0x52 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6805, gbc.sp());
        EXPECT(0xeb60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xeb5f));
        // 52 00AC
        gbc.setState(0x1ca, 0xdbc9, 0xa5d0, 0x734c, 0xc31a, 0x9ee, 0x1, 0x1);
        gbc.writeMem(0x1ca, { 0x52 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdbc9, gbc.sp());
        EXPECT(0x1cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 00AD
        gbc.setState(0x2fdd, 0x2d66, 0x6bc0, 0x4f82, 0x37eb, 0x7d29, 0x1, 0x1);
        gbc.writeMem(0x2fdd, { 0x52 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2d66, gbc.sp());
        EXPECT(0x2fde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 00AE
        gbc.setState(0x1ef4, 0xd8e6, 0x8040, 0x80d, 0x8bab, 0xd05c, 0x1, 0x0);
        gbc.writeMem(0x1ef4, { 0x52 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd8e6, gbc.sp());
        EXPECT(0x1ef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 00AF
        gbc.setState(0x72e2, 0x3a4d, 0x6b70, 0x9c6c, 0x763b, 0x1f32, 0x0, 0x1);
        gbc.writeMem(0x72e2, { 0x52 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3a4d, gbc.sp());
        EXPECT(0x72e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 00B0
        gbc.setState(0xed70, 0xdede, 0x9430, 0xcbf9, 0x7c0f, 0x997, 0x0, 0x1);
        gbc.writeMem(0xed70, { 0x52 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xdede, gbc.sp());
        EXPECT(0xed71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xed70));
        // 52 00B1
        gbc.setState(0x24ed, 0xb8b8, 0xc850, 0xbc4d, 0x7b37, 0xd192, 0x1, 0x1);
        gbc.writeMem(0x24ed, { 0x52 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb8b8, gbc.sp());
        EXPECT(0x24ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 00B2
        gbc.setState(0x1338, 0x8f2a, 0x28b0, 0x4c9f, 0xe911, 0x7a0e, 0x0, 0x1);
        gbc.writeMem(0x1338, { 0x52 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8f2a, gbc.sp());
        EXPECT(0x1339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 00B3
        gbc.setState(0x1ab2, 0x86b2, 0xd030, 0x4c48, 0xc1b9, 0xdc5b, 0x0, 0x1);
        gbc.writeMem(0x1ab2, { 0x52 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x86b2, gbc.sp());
        EXPECT(0x1ab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 00B4
        gbc.setState(0x48b, 0xe788, 0x3b20, 0x780, 0x41a3, 0xf52, 0x0, 0x1);
        gbc.writeMem(0x48b, { 0x52 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe788, gbc.sp());
        EXPECT(0x48c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 00B5
        gbc.setState(0x1bde, 0xc5a6, 0xa790, 0xab42, 0x325c, 0xc1bb, 0x1, 0x1);
        gbc.writeMem(0x1bde, { 0x52 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc5a6, gbc.sp());
        EXPECT(0x1bdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 00B6
        gbc.setState(0x52d0, 0xaf5, 0x2ea0, 0x55db, 0xc17b, 0x1cf5, 0x0, 0x0);
        gbc.writeMem(0x52d0, { 0x52 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xaf5, gbc.sp());
        EXPECT(0x52d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 00B7
        gbc.setState(0x3612, 0xd404, 0xbf10, 0x909e, 0x5cc8, 0x3117, 0x0, 0x1);
        gbc.writeMem(0x3612, { 0x52 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd404, gbc.sp());
        EXPECT(0x3613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 00B8
        gbc.setState(0x8de2, 0xebfa, 0x2210, 0x5f37, 0xdd48, 0xd861, 0x0, 0x1);
        gbc.writeMem(0x8de2, { 0x52 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xebfa, gbc.sp());
        EXPECT(0x8de3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8de2));
        // 52 00BA
        gbc.setState(0xae46, 0x7dfd, 0x8990, 0x12a0, 0x6b37, 0xbcb6, 0x1, 0x1);
        gbc.writeMem(0xae46, { 0x52 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7dfd, gbc.sp());
        EXPECT(0xae47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xae46));
        // 52 00BB
        gbc.setState(0xc890, 0x5877, 0x470, 0xf34e, 0xc17d, 0xd4ca, 0x0, 0x0);
        gbc.writeMem(0xc890, { 0x52 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5877, gbc.sp());
        EXPECT(0xc891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc890));
        // 52 00BC
        gbc.setState(0xcb16, 0xea60, 0xbe20, 0x31b5, 0x8155, 0x5a88, 0x1, 0x1);
        gbc.writeMem(0xcb16, { 0x52 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xea60, gbc.sp());
        EXPECT(0xcb17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xcb16));
        // 52 00BD
        gbc.setState(0x88c2, 0x7f8e, 0xa360, 0xb11, 0xeb12, 0x4744, 0x1, 0x0);
        gbc.writeMem(0x88c2, { 0x52 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7f8e, gbc.sp());
        EXPECT(0x88c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x88c2));
        // 52 00BE
        gbc.setState(0xde72, 0xa0db, 0x17a0, 0xaccd, 0x708d, 0x76b7, 0x0, 0x0);
        gbc.writeMem(0xde72, { 0x52 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa0db, gbc.sp());
        EXPECT(0xde73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xde72));
        // 52 00BF
        gbc.setState(0x26b0, 0x37a2, 0x3480, 0x9121, 0x2eb8, 0xae92, 0x1, 0x0);
        gbc.writeMem(0x26b0, { 0x52 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x37a2, gbc.sp());
        EXPECT(0x26b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 00C0
        gbc.setState(0x7da2, 0x92ab, 0x2830, 0x6a08, 0x7663, 0xbbc8, 0x1, 0x1);
        gbc.writeMem(0x7da2, { 0x52 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x92ab, gbc.sp());
        EXPECT(0x7da3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 00C1
        gbc.setState(0x4608, 0xd7a3, 0xe2d0, 0x6f19, 0xab63, 0x52cf, 0x0, 0x1);
        gbc.writeMem(0x4608, { 0x52 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd7a3, gbc.sp());
        EXPECT(0x4609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 00C2
        gbc.setState(0xe4ad, 0x96a2, 0xbd00, 0xb379, 0x81ba, 0x85b4, 0x1, 0x0);
        gbc.writeMem(0xe4ad, { 0x52 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x96a2, gbc.sp());
        EXPECT(0xe4ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe4ad));
        // 52 00C3
        gbc.setState(0x29b1, 0x1d8e, 0xd490, 0xe2d2, 0x41b1, 0x7b73, 0x1, 0x1);
        gbc.writeMem(0x29b1, { 0x52 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1d8e, gbc.sp());
        EXPECT(0x29b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 00C4
        gbc.setState(0xf7f, 0x825b, 0xb30, 0xd4d1, 0x9e35, 0x220d, 0x0, 0x0);
        gbc.writeMem(0xf7f, { 0x52 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x825b, gbc.sp());
        EXPECT(0xf80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 00C5
        gbc.setState(0x9e2a, 0x858, 0x90a0, 0x20d9, 0x192, 0x4954, 0x0, 0x1);
        gbc.writeMem(0x9e2a, { 0x52 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x858, gbc.sp());
        EXPECT(0x9e2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9e2a));
        // 52 00C6
        gbc.setState(0x1ac0, 0xca45, 0x9a20, 0x44ae, 0x947e, 0xbb2e, 0x1, 0x1);
        gbc.writeMem(0x1ac0, { 0x52 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xca45, gbc.sp());
        EXPECT(0x1ac1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 00C7
        gbc.setState(0x73f2, 0x3424, 0x5a0, 0x90db, 0x76b6, 0x83d6, 0x0, 0x1);
        gbc.writeMem(0x73f2, { 0x52 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3424, gbc.sp());
        EXPECT(0x73f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 00C8
        gbc.setState(0x4791, 0x55c5, 0x7850, 0x168b, 0x35ca, 0x3129, 0x0, 0x0);
        gbc.writeMem(0x4791, { 0x52 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x55c5, gbc.sp());
        EXPECT(0x4792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 00C9
        gbc.setState(0x58aa, 0x897e, 0xf920, 0xb6a, 0xf721, 0x6983, 0x1, 0x1);
        gbc.writeMem(0x58aa, { 0x52 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x897e, gbc.sp());
        EXPECT(0x58ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 00CA
        gbc.setState(0xbbe0, 0x5da9, 0x6d00, 0x2052, 0xaeda, 0x7250, 0x1, 0x0);
        gbc.writeMem(0xbbe0, { 0x52 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5da9, gbc.sp());
        EXPECT(0xbbe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xbbe0));
        // 52 00CB
        gbc.setState(0xc874, 0xb621, 0x6a30, 0x2928, 0x40aa, 0xa7d8, 0x0, 0x1);
        gbc.writeMem(0xc874, { 0x52 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb621, gbc.sp());
        EXPECT(0xc875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc874));
        // 52 00CC
        gbc.setState(0x60ca, 0xd211, 0x8990, 0x3215, 0x13b4, 0x1420, 0x0, 0x1);
        gbc.writeMem(0x60ca, { 0x52 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd211, gbc.sp());
        EXPECT(0x60cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 00CD
        gbc.setState(0xbff8, 0x104a, 0x8db0, 0xa73, 0xc839, 0xab88, 0x1, 0x0);
        gbc.writeMem(0xbff8, { 0x52 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x104a, gbc.sp());
        EXPECT(0xbff9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xbff8));
        // 52 00CE
        gbc.setState(0x9219, 0xc37, 0xd580, 0xc655, 0x6368, 0xc438, 0x1, 0x0);
        gbc.writeMem(0x9219, { 0x52 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc37, gbc.sp());
        EXPECT(0x921a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9219));
        // 52 00CF
        gbc.setState(0x1639, 0x3400, 0x6fb0, 0xf32f, 0xae8a, 0x28ff, 0x1, 0x0);
        gbc.writeMem(0x1639, { 0x52 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3400, gbc.sp());
        EXPECT(0x163a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 00D0
        gbc.setState(0x899c, 0xfeaf, 0xd6f0, 0x72eb, 0xdd7e, 0x30e7, 0x0, 0x1);
        gbc.writeMem(0x899c, { 0x52 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xfeaf, gbc.sp());
        EXPECT(0x899d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x899c));
        // 52 00D1
        gbc.setState(0x149b, 0xb10e, 0x4ea0, 0x8fed, 0x3661, 0x662, 0x0, 0x1);
        gbc.writeMem(0x149b, { 0x52 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb10e, gbc.sp());
        EXPECT(0x149c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 00D2
        gbc.setState(0xa5dc, 0xfab2, 0x8490, 0xd968, 0x2c46, 0x13a, 0x1, 0x1);
        gbc.writeMem(0xa5dc, { 0x52 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xfab2, gbc.sp());
        EXPECT(0xa5dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa5dc));
        // 52 00D3
        gbc.setState(0x5f8e, 0x7046, 0xbe90, 0x4747, 0x3752, 0x259f, 0x0, 0x0);
        gbc.writeMem(0x5f8e, { 0x52 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7046, gbc.sp());
        EXPECT(0x5f8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 00D4
        gbc.setState(0x2702, 0xa1a9, 0x43f0, 0x7f12, 0x9e20, 0xe621, 0x1, 0x0);
        gbc.writeMem(0x2702, { 0x52 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa1a9, gbc.sp());
        EXPECT(0x2703, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 00D5
        gbc.setState(0xcf8a, 0x6ffe, 0xba00, 0x3877, 0x8c0, 0x25c2, 0x1, 0x1);
        gbc.writeMem(0xcf8a, { 0x52 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6ffe, gbc.sp());
        EXPECT(0xcf8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xcf8a));
        // 52 00D6
        gbc.setState(0xc10f, 0x1efa, 0x7fc0, 0x6303, 0xeb20, 0x991c, 0x1, 0x1);
        gbc.writeMem(0xc10f, { 0x52 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1efa, gbc.sp());
        EXPECT(0xc110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc10f));
        // 52 00D7
        gbc.setState(0x202, 0xad6d, 0x3b30, 0x3a0c, 0xd28f, 0xc609, 0x0, 0x1);
        gbc.writeMem(0x202, { 0x52 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xad6d, gbc.sp());
        EXPECT(0x203, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 00D8
        gbc.setState(0xd262, 0x421b, 0xbb80, 0x2742, 0xd48d, 0x67e6, 0x0, 0x0);
        gbc.writeMem(0xd262, { 0x52 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x421b, gbc.sp());
        EXPECT(0xd263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd262));
        // 52 00D9
        gbc.setState(0x461b, 0xaa0c, 0x6d40, 0x125e, 0xbe81, 0x498b, 0x0, 0x1);
        gbc.writeMem(0x461b, { 0x52 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xaa0c, gbc.sp());
        EXPECT(0x461c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 00DA
        gbc.setState(0x4ab, 0x6e5f, 0x4ab0, 0xdd03, 0x979a, 0x6699, 0x1, 0x0);
        gbc.writeMem(0x4ab, { 0x52 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6e5f, gbc.sp());
        EXPECT(0x4ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 00DB
        gbc.setState(0x4e63, 0x8e48, 0xb7c0, 0xb064, 0xe8b1, 0xa74d, 0x0, 0x1);
        gbc.writeMem(0x4e63, { 0x52 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8e48, gbc.sp());
        EXPECT(0x4e64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 00DC
        gbc.setState(0x6c27, 0x9080, 0x5270, 0xac94, 0xa19f, 0xfb7, 0x1, 0x1);
        gbc.writeMem(0x6c27, { 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9080, gbc.sp());
        EXPECT(0x6c28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 00DD
        gbc.setState(0x3d1d, 0x229c, 0x3e00, 0x5d5d, 0x62eb, 0x7f09, 0x1, 0x1);
        gbc.writeMem(0x3d1d, { 0x52 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x229c, gbc.sp());
        EXPECT(0x3d1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 00DE
        gbc.setState(0x840c, 0xfd81, 0xb910, 0x4b07, 0x4d7e, 0x609e, 0x0, 0x0);
        gbc.writeMem(0x840c, { 0x52 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xfd81, gbc.sp());
        EXPECT(0x840d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x840c));
        // 52 00DF
        gbc.setState(0x76ed, 0xdefc, 0xb3c0, 0x4812, 0x7b29, 0xe3a3, 0x0, 0x1);
        gbc.writeMem(0x76ed, { 0x52 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xdefc, gbc.sp());
        EXPECT(0x76ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 00E0
        gbc.setState(0x1250, 0x683f, 0x220, 0xcaaa, 0x98d8, 0x521b, 0x0, 0x0);
        gbc.writeMem(0x1250, { 0x52 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x683f, gbc.sp());
        EXPECT(0x1251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 00E1
        gbc.setState(0xebea, 0x21a4, 0x2db0, 0xef2e, 0x12d2, 0xbf28, 0x0, 0x0);
        gbc.writeMem(0xebea, { 0x52 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x21a4, gbc.sp());
        EXPECT(0xebeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xebea));
        // 52 00E2
        gbc.setState(0x2ab9, 0xb7f4, 0xe760, 0xb44d, 0x27ab, 0x8c39, 0x0, 0x0);
        gbc.writeMem(0x2ab9, { 0x52 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb7f4, gbc.sp());
        EXPECT(0x2aba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 00E3
        gbc.setState(0x5200, 0xf52b, 0x4560, 0xda80, 0xb405, 0xd9c1, 0x0, 0x0);
        gbc.writeMem(0x5200, { 0x52 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf52b, gbc.sp());
        EXPECT(0x5201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 00E4
        gbc.setState(0x2b05, 0x49e6, 0xaa40, 0xb8c1, 0xc20e, 0xcd2b, 0x1, 0x0);
        gbc.writeMem(0x2b05, { 0x52 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x49e6, gbc.sp());
        EXPECT(0x2b06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 00E5
        gbc.setState(0x883, 0xfa50, 0x5bf0, 0xd91, 0xd80c, 0xe10b, 0x1, 0x1);
        gbc.writeMem(0x883, { 0x52 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xfa50, gbc.sp());
        EXPECT(0x884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 00E7
        gbc.setState(0xa7fd, 0xa502, 0xd260, 0x8338, 0x2e45, 0x558b, 0x1, 0x0);
        gbc.writeMem(0xa7fd, { 0x52 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa502, gbc.sp());
        EXPECT(0xa7fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa7fd));
        // 52 00E8
        gbc.setState(0xb2b, 0x326, 0x1120, 0xb86a, 0xd431, 0x6e01, 0x0, 0x1);
        gbc.writeMem(0xb2b, { 0x52 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x326, gbc.sp());
        EXPECT(0xb2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 00E9
        gbc.setState(0x5ba6, 0xe8a6, 0x9cc0, 0x2037, 0x127d, 0x69ff, 0x0, 0x0);
        gbc.writeMem(0x5ba6, { 0x52 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe8a6, gbc.sp());
        EXPECT(0x5ba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 00EA
        gbc.setState(0x3f74, 0xdc57, 0x85b0, 0x2cf2, 0x694b, 0x3164, 0x1, 0x0);
        gbc.writeMem(0x3f74, { 0x52 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xdc57, gbc.sp());
        EXPECT(0x3f75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 00EB
        gbc.setState(0xdb64, 0x97ef, 0xab80, 0x96d2, 0xdf4f, 0xa5a, 0x0, 0x0);
        gbc.writeMem(0xdb64, { 0x52 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x97ef, gbc.sp());
        EXPECT(0xdb65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xdb64));
        // 52 00EC
        gbc.setState(0x9d40, 0x1300, 0xa6b0, 0xfef1, 0xd16e, 0x690d, 0x0, 0x1);
        gbc.writeMem(0x9d40, { 0x52 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1300, gbc.sp());
        EXPECT(0x9d41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9d40));
        // 52 00EE
        gbc.setState(0x7757, 0x45c5, 0xde20, 0x3fa5, 0xae25, 0x2b5d, 0x0, 0x1);
        gbc.writeMem(0x7757, { 0x52 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x45c5, gbc.sp());
        EXPECT(0x7758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 00EF
        gbc.setState(0x643c, 0x57da, 0xec00, 0xcdf0, 0x8eb4, 0xdeaf, 0x1, 0x0);
        gbc.writeMem(0x643c, { 0x52 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x57da, gbc.sp());
        EXPECT(0x643d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 00F0
        gbc.setState(0x7a88, 0x24fb, 0x2750, 0x85aa, 0xa85f, 0x9298, 0x0, 0x1);
        gbc.writeMem(0x7a88, { 0x52 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x24fb, gbc.sp());
        EXPECT(0x7a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 00F1
        gbc.setState(0x3d82, 0xbec3, 0xfdf0, 0xe7ce, 0xcbb8, 0x2912, 0x0, 0x1);
        gbc.writeMem(0x3d82, { 0x52 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbec3, gbc.sp());
        EXPECT(0x3d83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 00F2
        gbc.setState(0xbb11, 0xe6c2, 0xc190, 0x3f1d, 0xd274, 0x54ef, 0x1, 0x1);
        gbc.writeMem(0xbb11, { 0x52 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe6c2, gbc.sp());
        EXPECT(0xbb12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xbb11));
        // 52 00F3
        gbc.setState(0xe7e8, 0xfdcf, 0x1ea0, 0xeb81, 0x3544, 0xf843, 0x1, 0x1);
        gbc.writeMem(0xe7e8, { 0x52 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xfdcf, gbc.sp());
        EXPECT(0xe7e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe7e8));
        // 52 00F4
        gbc.setState(0x2a1c, 0x6f53, 0xbe70, 0xb508, 0xfa06, 0x13fe, 0x1, 0x1);
        gbc.writeMem(0x2a1c, { 0x52 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6f53, gbc.sp());
        EXPECT(0x2a1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 00F5
        gbc.setState(0xe8ae, 0x6814, 0x6a20, 0x2d49, 0xccde, 0x4785, 0x1, 0x1);
        gbc.writeMem(0xe8ae, { 0x52 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6814, gbc.sp());
        EXPECT(0xe8af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe8ae));
        // 52 00F6
        gbc.setState(0x3a91, 0x2e47, 0xf770, 0x793e, 0xcfa0, 0xcc40, 0x0, 0x0);
        gbc.writeMem(0x3a91, { 0x52 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2e47, gbc.sp());
        EXPECT(0x3a92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 00F7
        gbc.setState(0x9506, 0x2d0e, 0x5590, 0xb49, 0x5463, 0x52d8, 0x1, 0x1);
        gbc.writeMem(0x9506, { 0x52 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2d0e, gbc.sp());
        EXPECT(0x9507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9506));
        // 52 00F8
        gbc.setState(0x5344, 0x8d75, 0x1fd0, 0x70d8, 0x5ae0, 0xacce, 0x0, 0x1);
        gbc.writeMem(0x5344, { 0x52 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8d75, gbc.sp());
        EXPECT(0x5345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 00F9
        gbc.setState(0xbafb, 0x72b8, 0xcb80, 0x11b2, 0x70a8, 0xd29c, 0x1, 0x1);
        gbc.writeMem(0xbafb, { 0x52 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x72b8, gbc.sp());
        EXPECT(0xbafc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xbafb));
        // 52 00FB
        gbc.setState(0xebae, 0x6d5e, 0x37d0, 0xef1e, 0x6d9a, 0x5883, 0x0, 0x0);
        gbc.writeMem(0xebae, { 0x52 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6d5e, gbc.sp());
        EXPECT(0xebaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xebae));
        // 52 00FC
        gbc.setState(0xa37b, 0x6d70, 0x410, 0xcc22, 0x76cc, 0x18fa, 0x1, 0x0);
        gbc.writeMem(0xa37b, { 0x52 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6d70, gbc.sp());
        EXPECT(0xa37c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa37b));
        // 52 00FD
        gbc.setState(0x99a6, 0xa154, 0xc660, 0x2f0b, 0x69e9, 0x2a09, 0x0, 0x1);
        gbc.writeMem(0x99a6, { 0x52 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa154, gbc.sp());
        EXPECT(0x99a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x99a6));
        // 52 00FE
        gbc.setState(0x515d, 0x540, 0x7f60, 0x488, 0x42c1, 0xe90f, 0x1, 0x1);
        gbc.writeMem(0x515d, { 0x52 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x540, gbc.sp());
        EXPECT(0x515e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 00FF
        gbc.setState(0xbb38, 0x534d, 0x27c0, 0x3f7d, 0x756f, 0x9037, 0x0, 0x0);
        gbc.writeMem(0xbb38, { 0x52 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x534d, gbc.sp());
        EXPECT(0xbb39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xbb38));
        // 52 0100
        gbc.setState(0x8d, 0xe4fe, 0xa430, 0xad92, 0xb0ed, 0x40af, 0x0, 0x0);
        gbc.writeMem(0x8d, { 0x52 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe4fe, gbc.sp());
        EXPECT(0x8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0101
        gbc.setState(0x9b3c, 0x44ca, 0x8650, 0xba0, 0x8144, 0x9b22, 0x0, 0x0);
        gbc.writeMem(0x9b3c, { 0x52 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x44ca, gbc.sp());
        EXPECT(0x9b3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9b3c));
        // 52 0102
        gbc.setState(0xbaea, 0x8341, 0xe1f0, 0x7bf3, 0x473f, 0xc233, 0x0, 0x1);
        gbc.writeMem(0xbaea, { 0x52 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8341, gbc.sp());
        EXPECT(0xbaeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xbaea));
        // 52 0104
        gbc.setState(0xbe5, 0xaf9b, 0xec0, 0xfa48, 0x1c5b, 0xb1a8, 0x1, 0x0);
        gbc.writeMem(0xbe5, { 0x52 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xaf9b, gbc.sp());
        EXPECT(0xbe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0105
        gbc.setState(0x6e8a, 0x7d9c, 0xc570, 0xd58b, 0x747d, 0x1154, 0x1, 0x1);
        gbc.writeMem(0x6e8a, { 0x52 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7d9c, gbc.sp());
        EXPECT(0x6e8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0106
        gbc.setState(0x20bb, 0x7010, 0xdf50, 0x38c9, 0x392, 0x622f, 0x0, 0x1);
        gbc.writeMem(0x20bb, { 0x52 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7010, gbc.sp());
        EXPECT(0x20bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0107
        gbc.setState(0x7816, 0xcc58, 0x8030, 0xe373, 0xbfb0, 0xe56f, 0x1, 0x1);
        gbc.writeMem(0x7816, { 0x52 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xcc58, gbc.sp());
        EXPECT(0x7817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0108
        gbc.setState(0xe3ea, 0xad2d, 0x8250, 0xfa22, 0xda68, 0x78db, 0x0, 0x1);
        gbc.writeMem(0xe3ea, { 0x52 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xad2d, gbc.sp());
        EXPECT(0xe3eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe3ea));
        // 52 0109
        gbc.setState(0x57ce, 0xfab0, 0xe1e0, 0xeccb, 0xfb7d, 0x23ab, 0x1, 0x0);
        gbc.writeMem(0x57ce, { 0x52 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xfab0, gbc.sp());
        EXPECT(0x57cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 010A
        gbc.setState(0xd927, 0x2523, 0x5d0, 0x24a6, 0x41ff, 0x1eee, 0x0, 0x0);
        gbc.writeMem(0xd927, { 0x52 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2523, gbc.sp());
        EXPECT(0xd928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd927));
        // 52 010C
        gbc.setState(0x70ec, 0x38d3, 0x86f0, 0x3725, 0x1e8b, 0xc76, 0x1, 0x1);
        gbc.writeMem(0x70ec, { 0x52 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x38d3, gbc.sp());
        EXPECT(0x70ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 010D
        gbc.setState(0x5ab2, 0x7533, 0xcac0, 0xcc25, 0x1999, 0xe6dd, 0x1, 0x0);
        gbc.writeMem(0x5ab2, { 0x52 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7533, gbc.sp());
        EXPECT(0x5ab3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 010E
        gbc.setState(0xa1c1, 0xaa95, 0x19c0, 0x28b9, 0x3d4b, 0xb276, 0x0, 0x1);
        gbc.writeMem(0xa1c1, { 0x52 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xaa95, gbc.sp());
        EXPECT(0xa1c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa1c1));
        // 52 010F
        gbc.setState(0x8125, 0x5f73, 0xb1a0, 0xf22b, 0x2c63, 0xe16e, 0x1, 0x0);
        gbc.writeMem(0x8125, { 0x52 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5f73, gbc.sp());
        EXPECT(0x8126, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8125));
        // 52 0110
        gbc.setState(0x8a85, 0x5552, 0x1c10, 0x21c5, 0x73d, 0xbd14, 0x1, 0x0);
        gbc.writeMem(0x8a85, { 0x52 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5552, gbc.sp());
        EXPECT(0x8a86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8a85));
        // 52 0111
        gbc.setState(0xbe37, 0x8962, 0x4d10, 0x3aaa, 0xf74e, 0x4390, 0x1, 0x1);
        gbc.writeMem(0xbe37, { 0x52 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8962, gbc.sp());
        EXPECT(0xbe38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xbe37));
        // 52 0112
        gbc.setState(0xe30c, 0xff55, 0x7730, 0xf8ee, 0xc699, 0x4263, 0x1, 0x1);
        gbc.writeMem(0xe30c, { 0x52 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xff55, gbc.sp());
        EXPECT(0xe30d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe30c));
        // 52 0113
        gbc.setState(0x5649, 0x313, 0x4160, 0xec04, 0xe3dc, 0x82a2, 0x0, 0x0);
        gbc.writeMem(0x5649, { 0x52 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x313, gbc.sp());
        EXPECT(0x564a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0114
        gbc.setState(0x8c28, 0x7679, 0x4420, 0x5f9, 0xc9a2, 0xfb50, 0x0, 0x0);
        gbc.writeMem(0x8c28, { 0x52 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7679, gbc.sp());
        EXPECT(0x8c29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8c28));
        // 52 0115
        gbc.setState(0xdfd6, 0xec5c, 0x9a10, 0x9796, 0x5772, 0x4c83, 0x1, 0x1);
        gbc.writeMem(0xdfd6, { 0x52 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xec5c, gbc.sp());
        EXPECT(0xdfd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xdfd6));
        // 52 0116
        gbc.setState(0x73fb, 0x332f, 0x41c0, 0x42ad, 0xb981, 0x594d, 0x1, 0x0);
        gbc.writeMem(0x73fb, { 0x52 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x332f, gbc.sp());
        EXPECT(0x73fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0117
        gbc.setState(0x308d, 0x2199, 0x7e80, 0x5b6, 0xf044, 0x447e, 0x1, 0x1);
        gbc.writeMem(0x308d, { 0x52 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2199, gbc.sp());
        EXPECT(0x308e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0118
        gbc.setState(0x834a, 0xfd81, 0xc950, 0x1dba, 0x1dc0, 0xa547, 0x1, 0x1);
        gbc.writeMem(0x834a, { 0x52 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xfd81, gbc.sp());
        EXPECT(0x834b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x834a));
        // 52 0119
        gbc.setState(0x8e35, 0x4b05, 0xd740, 0x93f1, 0x2f71, 0x8325, 0x1, 0x0);
        gbc.writeMem(0x8e35, { 0x52 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4b05, gbc.sp());
        EXPECT(0x8e36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8e35));
        // 52 011A
        gbc.setState(0x4191, 0xa99, 0x3b50, 0x5557, 0x28a8, 0x3cd4, 0x0, 0x0);
        gbc.writeMem(0x4191, { 0x52 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa99, gbc.sp());
        EXPECT(0x4192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 011B
        gbc.setState(0xe1b6, 0xee74, 0x5140, 0x8d63, 0xba38, 0xf7de, 0x0, 0x0);
        gbc.writeMem(0xe1b6, { 0x52 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xee74, gbc.sp());
        EXPECT(0xe1b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe1b6));
        // 52 011C
        gbc.setState(0x5d0c, 0x3bba, 0xdda0, 0xbb62, 0x7173, 0xfd02, 0x1, 0x1);
        gbc.writeMem(0x5d0c, { 0x52 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3bba, gbc.sp());
        EXPECT(0x5d0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 011D
        gbc.setState(0x2312, 0xb4e9, 0x10f0, 0x528e, 0x4257, 0x95fc, 0x0, 0x1);
        gbc.writeMem(0x2312, { 0x52 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb4e9, gbc.sp());
        EXPECT(0x2313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 011E
        gbc.setState(0xe883, 0x4268, 0x80e0, 0xc34c, 0x4a2f, 0xd5f2, 0x1, 0x1);
        gbc.writeMem(0xe883, { 0x52 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4268, gbc.sp());
        EXPECT(0xe884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe883));
        // 52 011F
        gbc.setState(0x2f9f, 0x481d, 0xdcb0, 0xbe7b, 0xcb27, 0xef88, 0x1, 0x0);
        gbc.writeMem(0x2f9f, { 0x52 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x481d, gbc.sp());
        EXPECT(0x2fa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0120
        gbc.setState(0x88a4, 0x41a0, 0xe670, 0x8a1e, 0xa438, 0xf980, 0x0, 0x1);
        gbc.writeMem(0x88a4, { 0x52 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x41a0, gbc.sp());
        EXPECT(0x88a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x88a4));
        // 52 0121
        gbc.setState(0x9dcb, 0xec40, 0xac40, 0x550, 0x13b3, 0xcd0b, 0x1, 0x0);
        gbc.writeMem(0x9dcb, { 0x52 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xec40, gbc.sp());
        EXPECT(0x9dcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9dcb));
        // 52 0122
        gbc.setState(0x503f, 0xb590, 0xf10, 0x5f7d, 0x6a5a, 0x675b, 0x0, 0x0);
        gbc.writeMem(0x503f, { 0x52 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb590, gbc.sp());
        EXPECT(0x5040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0123
        gbc.setState(0x2e53, 0x3bfb, 0xbdb0, 0x2fcb, 0xb6e5, 0x8edf, 0x0, 0x1);
        gbc.writeMem(0x2e53, { 0x52 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x3bfb, gbc.sp());
        EXPECT(0x2e54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0124
        gbc.setState(0x3e98, 0x9c26, 0x6ac0, 0x4383, 0x1d0d, 0x1d66, 0x0, 0x1);
        gbc.writeMem(0x3e98, { 0x52 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9c26, gbc.sp());
        EXPECT(0x3e99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0125
        gbc.setState(0x610e, 0x6667, 0xbfa0, 0x312b, 0xe252, 0xe309, 0x0, 0x0);
        gbc.writeMem(0x610e, { 0x52 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6667, gbc.sp());
        EXPECT(0x610f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0127
        gbc.setState(0x8a32, 0xb031, 0xf110, 0x92de, 0x3496, 0xfab4, 0x1, 0x0);
        gbc.writeMem(0x8a32, { 0x52 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb031, gbc.sp());
        EXPECT(0x8a33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8a32));
        // 52 0128
        gbc.setState(0x2b21, 0xe81, 0xf920, 0x409a, 0xf218, 0xca17, 0x1, 0x0);
        gbc.writeMem(0x2b21, { 0x52 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe81, gbc.sp());
        EXPECT(0x2b22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0129
        gbc.setState(0x304e, 0x1d21, 0xa5c0, 0x9, 0xf567, 0xbb33, 0x1, 0x0);
        gbc.writeMem(0x304e, { 0x52 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1d21, gbc.sp());
        EXPECT(0x304f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 012A
        gbc.setState(0x3c05, 0xa1b5, 0xddb0, 0xb041, 0xbddc, 0xbcc8, 0x0, 0x1);
        gbc.writeMem(0x3c05, { 0x52 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa1b5, gbc.sp());
        EXPECT(0x3c06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 012B
        gbc.setState(0x3de8, 0xa50d, 0xb850, 0x5385, 0xb2c7, 0x115b, 0x0, 0x1);
        gbc.writeMem(0x3de8, { 0x52 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa50d, gbc.sp());
        EXPECT(0x3de9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 012C
        gbc.setState(0xdbde, 0xb45f, 0xba90, 0x20ed, 0x8ba6, 0xcb7e, 0x0, 0x0);
        gbc.writeMem(0xdbde, { 0x52 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb45f, gbc.sp());
        EXPECT(0xdbdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xdbde));
        // 52 012D
        gbc.setState(0xb8ea, 0x8caa, 0x5520, 0x781c, 0xeda5, 0x60d4, 0x1, 0x1);
        gbc.writeMem(0xb8ea, { 0x52 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8caa, gbc.sp());
        EXPECT(0xb8eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb8ea));
        // 52 012E
        gbc.setState(0xd449, 0x7475, 0x8080, 0x8b6d, 0xc6fb, 0x6454, 0x0, 0x0);
        gbc.writeMem(0xd449, { 0x52 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7475, gbc.sp());
        EXPECT(0xd44a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd449));
        // 52 012F
        gbc.setState(0x88f8, 0x7f6e, 0xd6f0, 0x8dac, 0xcc27, 0xd0e7, 0x0, 0x1);
        gbc.writeMem(0x88f8, { 0x52 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7f6e, gbc.sp());
        EXPECT(0x88f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x88f8));
        // 52 0130
        gbc.setState(0xa5b7, 0x9f0b, 0x2ea0, 0x3def, 0x412a, 0x3018, 0x1, 0x0);
        gbc.writeMem(0xa5b7, { 0x52 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9f0b, gbc.sp());
        EXPECT(0xa5b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa5b7));
        // 52 0131
        gbc.setState(0x31f7, 0x890b, 0x3b70, 0x648d, 0xadbc, 0xeb47, 0x1, 0x1);
        gbc.writeMem(0x31f7, { 0x52 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x890b, gbc.sp());
        EXPECT(0x31f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0132
        gbc.setState(0xbe5d, 0x66b3, 0xe70, 0xfa4, 0xc3ac, 0x9ff7, 0x1, 0x0);
        gbc.writeMem(0xbe5d, { 0x52 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x66b3, gbc.sp());
        EXPECT(0xbe5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xbe5d));
        // 52 0133
        gbc.setState(0x7882, 0xcd2a, 0xe4b0, 0xf253, 0x3716, 0x1fef, 0x1, 0x0);
        gbc.writeMem(0x7882, { 0x52 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xcd2a, gbc.sp());
        EXPECT(0x7883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0134
        gbc.setState(0x918d, 0xe203, 0x5ed0, 0x15e4, 0xd766, 0x6eef, 0x0, 0x1);
        gbc.writeMem(0x918d, { 0x52 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe203, gbc.sp());
        EXPECT(0x918e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x918d));
        // 52 0135
        gbc.setState(0xbbdd, 0x1a43, 0xba90, 0x5297, 0xb1af, 0xe05d, 0x0, 0x0);
        gbc.writeMem(0xbbdd, { 0x52 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1a43, gbc.sp());
        EXPECT(0xbbde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xbbdd));
        // 52 0136
        gbc.setState(0xeb69, 0x53c9, 0xe4e0, 0xc031, 0xe1bb, 0xad23, 0x0, 0x1);
        gbc.writeMem(0xeb69, { 0x52 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x53c9, gbc.sp());
        EXPECT(0xeb6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xeb69));
        // 52 0137
        gbc.setState(0x4e0, 0x87d7, 0xbd40, 0xbe7f, 0x9ca3, 0xcab1, 0x0, 0x0);
        gbc.writeMem(0x4e0, { 0x52 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x87d7, gbc.sp());
        EXPECT(0x4e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0138
        gbc.setState(0x32ac, 0xd69b, 0x8b60, 0xebc0, 0x9a03, 0x951c, 0x1, 0x1);
        gbc.writeMem(0x32ac, { 0x52 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd69b, gbc.sp());
        EXPECT(0x32ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0139
        gbc.setState(0x16fd, 0x8339, 0xc9a0, 0x765d, 0x65a5, 0x2ac7, 0x0, 0x1);
        gbc.writeMem(0x16fd, { 0x52 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8339, gbc.sp());
        EXPECT(0x16fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 013A
        gbc.setState(0xdd8a, 0x1626, 0x2d80, 0xc75c, 0xa41f, 0x1aa7, 0x1, 0x0);
        gbc.writeMem(0xdd8a, { 0x52 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1626, gbc.sp());
        EXPECT(0xdd8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xdd8a));
        // 52 013B
        gbc.setState(0x918e, 0x1cc7, 0x64b0, 0x7048, 0xe7a4, 0xa2e6, 0x0, 0x0);
        gbc.writeMem(0x918e, { 0x52 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1cc7, gbc.sp());
        EXPECT(0x918f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x918e));
        // 52 013C
        gbc.setState(0x68ed, 0x9795, 0x1d60, 0xe605, 0x76c1, 0xdede, 0x1, 0x0);
        gbc.writeMem(0x68ed, { 0x52 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9795, gbc.sp());
        EXPECT(0x68ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 013D
        gbc.setState(0x636f, 0xa26f, 0x6250, 0xd9ad, 0xe54c, 0x15d4, 0x1, 0x0);
        gbc.writeMem(0x636f, { 0x52 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa26f, gbc.sp());
        EXPECT(0x6370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 013E
        gbc.setState(0xb8eb, 0x38a7, 0x79c0, 0xd6d5, 0x2df1, 0x84fc, 0x0, 0x1);
        gbc.writeMem(0xb8eb, { 0x52 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x38a7, gbc.sp());
        EXPECT(0xb8ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb8eb));
        // 52 013F
        gbc.setState(0x4933, 0x6908, 0x7c20, 0x1c29, 0x3d95, 0xa339, 0x1, 0x1);
        gbc.writeMem(0x4933, { 0x52 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6908, gbc.sp());
        EXPECT(0x4934, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0140
        gbc.setState(0x4fc9, 0xf2d2, 0xae20, 0x6924, 0xedb8, 0x8a05, 0x1, 0x0);
        gbc.writeMem(0x4fc9, { 0x52 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf2d2, gbc.sp());
        EXPECT(0x4fca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0141
        gbc.setState(0xe20d, 0x2ec9, 0x46f0, 0x3889, 0xf6a0, 0xa22d, 0x1, 0x0);
        gbc.writeMem(0xe20d, { 0x52 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2ec9, gbc.sp());
        EXPECT(0xe20e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe20d));
        // 52 0142
        gbc.setState(0xac08, 0x1028, 0x7a50, 0xeac2, 0x9f75, 0x271, 0x1, 0x0);
        gbc.writeMem(0xac08, { 0x52 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1028, gbc.sp());
        EXPECT(0xac09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xac08));
        // 52 0143
        gbc.setState(0x5175, 0xe4bf, 0x1860, 0x324c, 0x878b, 0xe614, 0x0, 0x0);
        gbc.writeMem(0x5175, { 0x52 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe4bf, gbc.sp());
        EXPECT(0x5176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0144
        gbc.setState(0x6ee3, 0x99bd, 0xeda0, 0x8646, 0x7a4d, 0xf7df, 0x0, 0x1);
        gbc.writeMem(0x6ee3, { 0x52 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x99bd, gbc.sp());
        EXPECT(0x6ee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0145
        gbc.setState(0x8c6a, 0xe93a, 0x16c0, 0xa44a, 0xaf31, 0x14de, 0x1, 0x1);
        gbc.writeMem(0x8c6a, { 0x52 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe93a, gbc.sp());
        EXPECT(0x8c6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8c6a));
        // 52 0146
        gbc.setState(0xab76, 0xaef2, 0xc780, 0x39df, 0x77cb, 0x520c, 0x0, 0x1);
        gbc.writeMem(0xab76, { 0x52 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xaef2, gbc.sp());
        EXPECT(0xab77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xab76));
        // 52 0147
        gbc.setState(0x4a4a, 0x705d, 0xcc00, 0x8a44, 0x9a98, 0x8f26, 0x0, 0x1);
        gbc.writeMem(0x4a4a, { 0x52 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x705d, gbc.sp());
        EXPECT(0x4a4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0148
        gbc.setState(0xd3c0, 0xc35d, 0x4760, 0xd531, 0xde3c, 0xdac3, 0x0, 0x0);
        gbc.writeMem(0xd3c0, { 0x52 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc35d, gbc.sp());
        EXPECT(0xd3c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd3c0));
        // 52 0149
        gbc.setState(0xab52, 0x801d, 0xff60, 0xc70e, 0x54f1, 0x1129, 0x1, 0x1);
        gbc.writeMem(0xab52, { 0x52 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x801d, gbc.sp());
        EXPECT(0xab53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xab52));
        // 52 014A
        gbc.setState(0x50f1, 0xcddb, 0xd360, 0x8288, 0xbda4, 0xfd6e, 0x1, 0x0);
        gbc.writeMem(0x50f1, { 0x52 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xcddb, gbc.sp());
        EXPECT(0x50f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 014B
        gbc.setState(0xd913, 0x1b71, 0x59e0, 0x437, 0x649f, 0xee3e, 0x0, 0x1);
        gbc.writeMem(0xd913, { 0x52 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1b71, gbc.sp());
        EXPECT(0xd914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd913));
        // 52 014C
        gbc.setState(0x6e35, 0xb625, 0x90e0, 0xf737, 0xc0b7, 0xccb1, 0x0, 0x0);
        gbc.writeMem(0x6e35, { 0x52 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb625, gbc.sp());
        EXPECT(0x6e36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 014D
        gbc.setState(0x458f, 0xf1cf, 0x24c0, 0x7eb4, 0xb31f, 0x37d2, 0x0, 0x1);
        gbc.writeMem(0x458f, { 0x52 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf1cf, gbc.sp());
        EXPECT(0x4590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 014E
        gbc.setState(0x90dd, 0x11b7, 0x31a0, 0x60a3, 0xba05, 0x58b8, 0x1, 0x1);
        gbc.writeMem(0x90dd, { 0x52 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x11b7, gbc.sp());
        EXPECT(0x90de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x90dd));
        // 52 014F
        gbc.setState(0xed74, 0x2a96, 0x3a30, 0x88cd, 0xeaa5, 0x9f48, 0x1, 0x0);
        gbc.writeMem(0xed74, { 0x52 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2a96, gbc.sp());
        EXPECT(0xed75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xed74));
        // 52 0150
        gbc.setState(0x922c, 0x5557, 0xc5f0, 0xa408, 0x741, 0x109a, 0x0, 0x0);
        gbc.writeMem(0x922c, { 0x52 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5557, gbc.sp());
        EXPECT(0x922d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x922c));
        // 52 0151
        gbc.setState(0x1d89, 0xcfaf, 0x7310, 0x5ba3, 0xabfe, 0x4c50, 0x1, 0x0);
        gbc.writeMem(0x1d89, { 0x52 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xcfaf, gbc.sp());
        EXPECT(0x1d8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0152
        gbc.setState(0x588, 0x637e, 0x97f0, 0xeb84, 0x1dd5, 0x4dca, 0x0, 0x1);
        gbc.writeMem(0x588, { 0x52 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x637e, gbc.sp());
        EXPECT(0x589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0153
        gbc.setState(0x8f39, 0x6bb3, 0xd00, 0x6ee0, 0xde31, 0x5f08, 0x1, 0x1);
        gbc.writeMem(0x8f39, { 0x52 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6bb3, gbc.sp());
        EXPECT(0x8f3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8f39));
        // 52 0154
        gbc.setState(0x9f7b, 0x3a29, 0xdb60, 0xa0ae, 0xaa92, 0xe0dc, 0x0, 0x1);
        gbc.writeMem(0x9f7b, { 0x52 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3a29, gbc.sp());
        EXPECT(0x9f7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9f7b));
        // 52 0155
        gbc.setState(0x84d1, 0xdcd1, 0xd6e0, 0x3e9d, 0xf519, 0x43e3, 0x0, 0x1);
        gbc.writeMem(0x84d1, { 0x52 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xdcd1, gbc.sp());
        EXPECT(0x84d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x84d1));
        // 52 0157
        gbc.setState(0x2a14, 0xfc2b, 0xcd10, 0x2a79, 0x2284, 0x87d6, 0x0, 0x0);
        gbc.writeMem(0x2a14, { 0x52 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xfc2b, gbc.sp());
        EXPECT(0x2a15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0158
        gbc.setState(0x3902, 0xf344, 0xdf60, 0xa8c8, 0x9fc8, 0x71b6, 0x1, 0x0);
        gbc.writeMem(0x3902, { 0x52 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf344, gbc.sp());
        EXPECT(0x3903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0159
        gbc.setState(0xb189, 0xdcc0, 0x2780, 0xb8d6, 0x1f80, 0x1fee, 0x1, 0x0);
        gbc.writeMem(0xb189, { 0x52 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdcc0, gbc.sp());
        EXPECT(0xb18a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb189));
        // 52 015A
        gbc.setState(0x5309, 0xa35d, 0x83e0, 0xbf6, 0xaac2, 0xcc5e, 0x0, 0x0);
        gbc.writeMem(0x5309, { 0x52 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa35d, gbc.sp());
        EXPECT(0x530a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 015B
        gbc.setState(0xc0, 0xfdb5, 0x2b70, 0xb914, 0xef5d, 0xacfc, 0x0, 0x1);
        gbc.writeMem(0xc0, { 0x52 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xfdb5, gbc.sp());
        EXPECT(0xc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 015C
        gbc.setState(0x4a0e, 0x811a, 0x5530, 0xeda7, 0x3b45, 0xf1f7, 0x0, 0x1);
        gbc.writeMem(0x4a0e, { 0x52 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x811a, gbc.sp());
        EXPECT(0x4a0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 015D
        gbc.setState(0x2681, 0x8ec5, 0xbd50, 0x7f2b, 0x48e1, 0xeff3, 0x0, 0x1);
        gbc.writeMem(0x2681, { 0x52 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8ec5, gbc.sp());
        EXPECT(0x2682, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 015E
        gbc.setState(0xc3f5, 0xe971, 0x91a0, 0x2ced, 0x23cc, 0x8d1a, 0x0, 0x1);
        gbc.writeMem(0xc3f5, { 0x52 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe971, gbc.sp());
        EXPECT(0xc3f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc3f5));
        // 52 015F
        gbc.setState(0x63fe, 0x805a, 0x540, 0x7823, 0x14ad, 0x3fcc, 0x0, 0x1);
        gbc.writeMem(0x63fe, { 0x52 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x805a, gbc.sp());
        EXPECT(0x63ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0160
        gbc.setState(0xcf3c, 0x6398, 0xbd00, 0x386f, 0x82a7, 0x3f4e, 0x1, 0x0);
        gbc.writeMem(0xcf3c, { 0x52 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6398, gbc.sp());
        EXPECT(0xcf3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xcf3c));
        // 52 0161
        gbc.setState(0x9093, 0x5da5, 0x7ed0, 0xb956, 0x605d, 0xe453, 0x1, 0x0);
        gbc.writeMem(0x9093, { 0x52 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5da5, gbc.sp());
        EXPECT(0x9094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9093));
        // 52 0162
        gbc.setState(0x8312, 0xf58c, 0xc3a0, 0xd4f7, 0x8137, 0x25a7, 0x0, 0x0);
        gbc.writeMem(0x8312, { 0x52 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf58c, gbc.sp());
        EXPECT(0x8313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8312));
        // 52 0163
        gbc.setState(0x4673, 0xf8c2, 0x91d0, 0xbdf2, 0x28a6, 0xfffc, 0x0, 0x1);
        gbc.writeMem(0x4673, { 0x52 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf8c2, gbc.sp());
        EXPECT(0x4674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0164
        gbc.setState(0xdad3, 0x3532, 0xf830, 0x3205, 0x674f, 0x84c0, 0x1, 0x1);
        gbc.writeMem(0xdad3, { 0x52 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3532, gbc.sp());
        EXPECT(0xdad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xdad3));
        // 52 0165
        gbc.setState(0x6606, 0x4e80, 0x9a70, 0xb36a, 0xbf6, 0xfbdb, 0x1, 0x1);
        gbc.writeMem(0x6606, { 0x52 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4e80, gbc.sp());
        EXPECT(0x6607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0166
        gbc.setState(0xc980, 0x258f, 0xe140, 0xf7b7, 0x6fc0, 0x9b99, 0x0, 0x1);
        gbc.writeMem(0xc980, { 0x52 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x258f, gbc.sp());
        EXPECT(0xc981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc980));
        // 52 0167
        gbc.setState(0x136b, 0xa307, 0x3d40, 0xc3a0, 0x9534, 0x1852, 0x0, 0x0);
        gbc.writeMem(0x136b, { 0x52 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa307, gbc.sp());
        EXPECT(0x136c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0168
        gbc.setState(0x6ddb, 0x839c, 0x5c70, 0x7ff, 0x1eca, 0xa8f5, 0x1, 0x1);
        gbc.writeMem(0x6ddb, { 0x52 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x839c, gbc.sp());
        EXPECT(0x6ddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0169
        gbc.setState(0x48b7, 0xda26, 0xa620, 0xe93a, 0xdc20, 0x9d31, 0x0, 0x1);
        gbc.writeMem(0x48b7, { 0x52 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xda26, gbc.sp());
        EXPECT(0x48b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 016A
        gbc.setState(0x2d3c, 0x4bf5, 0x7f30, 0x7501, 0x6fbb, 0x936e, 0x0, 0x1);
        gbc.writeMem(0x2d3c, { 0x52 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4bf5, gbc.sp());
        EXPECT(0x2d3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 016B
        gbc.setState(0xeaa, 0x606f, 0x5320, 0xb2c7, 0x5b4f, 0x9d28, 0x1, 0x1);
        gbc.writeMem(0xeaa, { 0x52 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x606f, gbc.sp());
        EXPECT(0xeab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 016C
        gbc.setState(0x7265, 0x4880, 0xa0a0, 0x67f8, 0x1e4, 0xbf, 0x1, 0x1);
        gbc.writeMem(0x7265, { 0x52 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4880, gbc.sp());
        EXPECT(0x7266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 016D
        gbc.setState(0x1653, 0xf7fc, 0x63c0, 0xf731, 0x2c1d, 0x1db7, 0x1, 0x0);
        gbc.writeMem(0x1653, { 0x52 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf7fc, gbc.sp());
        EXPECT(0x1654, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 016E
        gbc.setState(0xc5ae, 0x382e, 0x2790, 0xb293, 0x1368, 0x29b, 0x0, 0x0);
        gbc.writeMem(0xc5ae, { 0x52 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x382e, gbc.sp());
        EXPECT(0xc5af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc5ae));
        // 52 016F
        gbc.setState(0xd37e, 0x8e3c, 0xa7f0, 0x7f8f, 0x6f37, 0x2e47, 0x0, 0x0);
        gbc.writeMem(0xd37e, { 0x52 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8e3c, gbc.sp());
        EXPECT(0xd37f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd37e));
        // 52 0170
        gbc.setState(0x1d83, 0x167f, 0xd420, 0x25de, 0xecbc, 0x8f12, 0x0, 0x0);
        gbc.writeMem(0x1d83, { 0x52 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x167f, gbc.sp());
        EXPECT(0x1d84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0171
        gbc.setState(0xa6ef, 0x32dc, 0xa690, 0x95f4, 0xfc9e, 0xe6f2, 0x0, 0x1);
        gbc.writeMem(0xa6ef, { 0x52 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x32dc, gbc.sp());
        EXPECT(0xa6f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa6ef));
        // 52 0172
        gbc.setState(0xb5af, 0xda03, 0x4bf0, 0x8c83, 0xc194, 0x888b, 0x0, 0x1);
        gbc.writeMem(0xb5af, { 0x52 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xda03, gbc.sp());
        EXPECT(0xb5b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb5af));
        // 52 0173
        gbc.setState(0xe305, 0x9654, 0x66e0, 0xe635, 0xa4d1, 0xa56b, 0x1, 0x0);
        gbc.writeMem(0xe305, { 0x52 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9654, gbc.sp());
        EXPECT(0xe306, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe305));
        // 52 0174
        gbc.setState(0xaf04, 0xede8, 0x64e0, 0x6086, 0x5793, 0x6d9f, 0x0, 0x1);
        gbc.writeMem(0xaf04, { 0x52 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xede8, gbc.sp());
        EXPECT(0xaf05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xaf04));
        // 52 0175
        gbc.setState(0x972c, 0x1151, 0xd270, 0x901d, 0xb738, 0x183, 0x0, 0x0);
        gbc.writeMem(0x972c, { 0x52 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1151, gbc.sp());
        EXPECT(0x972d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x972c));
        // 52 0176
        gbc.setState(0x9f78, 0x8da3, 0x20c0, 0x1bec, 0x99a8, 0x227d, 0x1, 0x0);
        gbc.writeMem(0x9f78, { 0x52 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8da3, gbc.sp());
        EXPECT(0x9f79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9f78));
        // 52 0177
        gbc.setState(0x51bf, 0xc7a, 0x3e20, 0x20f8, 0xf16f, 0x8890, 0x0, 0x1);
        gbc.writeMem(0x51bf, { 0x52 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc7a, gbc.sp());
        EXPECT(0x51c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0178
        gbc.setState(0x4809, 0x4f6d, 0x2ba0, 0xfbf9, 0x2886, 0x772, 0x1, 0x1);
        gbc.writeMem(0x4809, { 0x52 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4f6d, gbc.sp());
        EXPECT(0x480a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0179
        gbc.setState(0xbc52, 0x6c1d, 0xcf0, 0x97d7, 0x3059, 0x898, 0x0, 0x0);
        gbc.writeMem(0xbc52, { 0x52 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6c1d, gbc.sp());
        EXPECT(0xbc53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xbc52));
        // 52 017A
        gbc.setState(0x795, 0xfb5b, 0xce0, 0xcd43, 0x1570, 0xa51d, 0x0, 0x0);
        gbc.writeMem(0x795, { 0x52 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfb5b, gbc.sp());
        EXPECT(0x796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 017B
        gbc.setState(0xfa8, 0xa22b, 0xfaf0, 0x8975, 0x8580, 0x7676, 0x1, 0x0);
        gbc.writeMem(0xfa8, { 0x52 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa22b, gbc.sp());
        EXPECT(0xfa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 017D
        gbc.setState(0x6e2a, 0x23cb, 0xae30, 0x50f1, 0xdf84, 0xde06, 0x0, 0x0);
        gbc.writeMem(0x6e2a, { 0x52 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x23cb, gbc.sp());
        EXPECT(0x6e2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 017E
        gbc.setState(0x19cb, 0xe5dd, 0x3470, 0x467b, 0x7ae3, 0x13df, 0x0, 0x0);
        gbc.writeMem(0x19cb, { 0x52 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe5dd, gbc.sp());
        EXPECT(0x19cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 017F
        gbc.setState(0xb7e1, 0x5810, 0xf720, 0x791f, 0x3fbc, 0x1344, 0x1, 0x1);
        gbc.writeMem(0xb7e1, { 0x52 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5810, gbc.sp());
        EXPECT(0xb7e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb7e1));
        // 52 0181
        gbc.setState(0xa964, 0xc4b7, 0xbf70, 0xc450, 0x52f9, 0xb2c3, 0x0, 0x0);
        gbc.writeMem(0xa964, { 0x52 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc4b7, gbc.sp());
        EXPECT(0xa965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa964));
        // 52 0182
        gbc.setState(0x9e9e, 0xbd3e, 0xae90, 0x6962, 0x272c, 0xd4c9, 0x0, 0x1);
        gbc.writeMem(0x9e9e, { 0x52 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xbd3e, gbc.sp());
        EXPECT(0x9e9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9e9e));
        // 52 0183
        gbc.setState(0x7f59, 0xa25d, 0x1050, 0x8920, 0xf552, 0xbf18, 0x0, 0x1);
        gbc.writeMem(0x7f59, { 0x52 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa25d, gbc.sp());
        EXPECT(0x7f5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0184
        gbc.setState(0xec3a, 0xecb7, 0xe400, 0x846, 0x1582, 0x27cb, 0x0, 0x0);
        gbc.writeMem(0xec3a, { 0x52 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xecb7, gbc.sp());
        EXPECT(0xec3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xec3a));
        // 52 0185
        gbc.setState(0xda65, 0xe07a, 0xa940, 0x6f4e, 0x79fe, 0xe9cb, 0x0, 0x1);
        gbc.writeMem(0xda65, { 0x52 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe07a, gbc.sp());
        EXPECT(0xda66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xda65));
        // 52 0187
        gbc.setState(0xa63, 0xe609, 0xaa00, 0x1034, 0xc0ae, 0xedc, 0x0, 0x1);
        gbc.writeMem(0xa63, { 0x52 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe609, gbc.sp());
        EXPECT(0xa64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0188
        gbc.setState(0x9cc4, 0xa5f4, 0xa430, 0x95b7, 0xc87a, 0x3c48, 0x1, 0x1);
        gbc.writeMem(0x9cc4, { 0x52 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa5f4, gbc.sp());
        EXPECT(0x9cc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9cc4));
        // 52 0189
        gbc.setState(0x6d5a, 0x2f0f, 0x7270, 0xea3c, 0x4add, 0x7091, 0x1, 0x1);
        gbc.writeMem(0x6d5a, { 0x52 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2f0f, gbc.sp());
        EXPECT(0x6d5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 018A
        gbc.setState(0xe339, 0x1ee5, 0x2d90, 0x48f6, 0x719, 0x260e, 0x1, 0x0);
        gbc.writeMem(0xe339, { 0x52 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1ee5, gbc.sp());
        EXPECT(0xe33a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe339));
        // 52 018B
        gbc.setState(0x172, 0x40ba, 0x98f0, 0xfdba, 0xf94e, 0x389a, 0x0, 0x0);
        gbc.writeMem(0x172, { 0x52 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x40ba, gbc.sp());
        EXPECT(0x173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 018C
        gbc.setState(0x32b9, 0x82c0, 0xc090, 0xb004, 0x39c1, 0x17db, 0x0, 0x1);
        gbc.writeMem(0x32b9, { 0x52 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x82c0, gbc.sp());
        EXPECT(0x32ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 018D
        gbc.setState(0xdd0, 0x17f4, 0x860, 0x75e6, 0x3b83, 0xf952, 0x0, 0x1);
        gbc.writeMem(0xdd0, { 0x52 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x17f4, gbc.sp());
        EXPECT(0xdd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 018E
        gbc.setState(0x1672, 0xaf16, 0x8330, 0xfc03, 0x5b96, 0x813e, 0x1, 0x0);
        gbc.writeMem(0x1672, { 0x52 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xaf16, gbc.sp());
        EXPECT(0x1673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 018F
        gbc.setState(0xc84, 0x6733, 0x5200, 0xb72a, 0xf4d5, 0x81af, 0x0, 0x0);
        gbc.writeMem(0xc84, { 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6733, gbc.sp());
        EXPECT(0xc85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0190
        gbc.setState(0x9b98, 0x3a27, 0x28a0, 0x75a9, 0x1b3e, 0xb51a, 0x1, 0x1);
        gbc.writeMem(0x9b98, { 0x52 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3a27, gbc.sp());
        EXPECT(0x9b99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9b98));
        // 52 0191
        gbc.setState(0x439b, 0xdabc, 0x84e0, 0xea39, 0x3d49, 0xa4f, 0x0, 0x0);
        gbc.writeMem(0x439b, { 0x52 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xdabc, gbc.sp());
        EXPECT(0x439c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0192
        gbc.setState(0x9aea, 0xecef, 0x23b0, 0x50f0, 0x76f2, 0x797, 0x0, 0x1);
        gbc.writeMem(0x9aea, { 0x52 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xecef, gbc.sp());
        EXPECT(0x9aeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9aea));
        // 52 0194
        gbc.setState(0x7227, 0x7f85, 0x9fa0, 0xe678, 0x4f29, 0x8627, 0x1, 0x1);
        gbc.writeMem(0x7227, { 0x52 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7f85, gbc.sp());
        EXPECT(0x7228, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0195
        gbc.setState(0x6c9b, 0x6376, 0xd480, 0x5854, 0xe748, 0x9229, 0x1, 0x1);
        gbc.writeMem(0x6c9b, { 0x52 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6376, gbc.sp());
        EXPECT(0x6c9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0196
        gbc.setState(0xe4e1, 0xf61f, 0xd420, 0x6a43, 0x2ba0, 0xfd1c, 0x0, 0x1);
        gbc.writeMem(0xe4e1, { 0x52 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf61f, gbc.sp());
        EXPECT(0xe4e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe4e1));
        // 52 0197
        gbc.setState(0x3fd, 0xeb45, 0x1640, 0x140d, 0x5d9f, 0x9477, 0x1, 0x0);
        gbc.writeMem(0x3fd, { 0x52 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xeb45, gbc.sp());
        EXPECT(0x3fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0198
        gbc.setState(0x3ee1, 0x4824, 0x4770, 0xd766, 0x3e0d, 0x9493, 0x0, 0x1);
        gbc.writeMem(0x3ee1, { 0x52 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x4824, gbc.sp());
        EXPECT(0x3ee2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0199
        gbc.setState(0x6021, 0x4a0e, 0x6850, 0x5a4b, 0x3f32, 0xe820, 0x0, 0x1);
        gbc.writeMem(0x6021, { 0x52 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4a0e, gbc.sp());
        EXPECT(0x6022, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 019A
        gbc.setState(0x59fe, 0x43a3, 0xa5f0, 0xe35a, 0xdaf0, 0x2c82, 0x1, 0x0);
        gbc.writeMem(0x59fe, { 0x52 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x43a3, gbc.sp());
        EXPECT(0x59ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 019B
        gbc.setState(0xe95a, 0x11c2, 0xde00, 0x270d, 0xebf2, 0xd650, 0x0, 0x1);
        gbc.writeMem(0xe95a, { 0x52 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x11c2, gbc.sp());
        EXPECT(0xe95b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe95a));
        // 52 019C
        gbc.setState(0x22c8, 0xfd4e, 0x77e0, 0xbb9d, 0xffa5, 0xc414, 0x0, 0x1);
        gbc.writeMem(0x22c8, { 0x52 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xfd4e, gbc.sp());
        EXPECT(0x22c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 019D
        gbc.setState(0xb4ee, 0xae55, 0x44e0, 0xaab3, 0xee3a, 0x24b2, 0x1, 0x0);
        gbc.writeMem(0xb4ee, { 0x52 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xae55, gbc.sp());
        EXPECT(0xb4ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb4ee));
        // 52 019E
        gbc.setState(0xcaa4, 0x378f, 0x56e0, 0x8466, 0x2bd, 0x98df, 0x0, 0x1);
        gbc.writeMem(0xcaa4, { 0x52 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x378f, gbc.sp());
        EXPECT(0xcaa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xcaa4));
        // 52 019F
        gbc.setState(0x7278, 0x82a7, 0x9900, 0x8e5c, 0xcdbc, 0xb1d0, 0x1, 0x0);
        gbc.writeMem(0x7278, { 0x52 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x82a7, gbc.sp());
        EXPECT(0x7279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 01A0
        gbc.setState(0x4e45, 0x6b08, 0xdeb0, 0x9154, 0x9498, 0x3b9a, 0x0, 0x1);
        gbc.writeMem(0x4e45, { 0x52 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6b08, gbc.sp());
        EXPECT(0x4e46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 01A1
        gbc.setState(0xb8ae, 0x35f8, 0x5070, 0xd6dd, 0x5e03, 0xd012, 0x0, 0x0);
        gbc.writeMem(0xb8ae, { 0x52 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x35f8, gbc.sp());
        EXPECT(0xb8af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb8ae));
        // 52 01A3
        gbc.setState(0x8764, 0x1717, 0x1ae0, 0x7b36, 0xed34, 0xc716, 0x1, 0x0);
        gbc.writeMem(0x8764, { 0x52 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1717, gbc.sp());
        EXPECT(0x8765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8764));
        // 52 01A4
        gbc.setState(0xa71, 0x312c, 0xa790, 0x84e4, 0xde35, 0x15a0, 0x1, 0x0);
        gbc.writeMem(0xa71, { 0x52 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x312c, gbc.sp());
        EXPECT(0xa72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 01A5
        gbc.setState(0xede4, 0x9edc, 0x9060, 0xa2c4, 0x94ec, 0xc6e3, 0x1, 0x1);
        gbc.writeMem(0xede4, { 0x52 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9edc, gbc.sp());
        EXPECT(0xede5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xede4));
        // 52 01A6
        gbc.setState(0xb351, 0x66f6, 0xb940, 0xe6e, 0x62df, 0xc993, 0x1, 0x1);
        gbc.writeMem(0xb351, { 0x52 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x66f6, gbc.sp());
        EXPECT(0xb352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb351));
        // 52 01A7
        gbc.setState(0x4345, 0x85f9, 0x3bd0, 0xfbe, 0xc86f, 0x6a99, 0x0, 0x1);
        gbc.writeMem(0x4345, { 0x52 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x85f9, gbc.sp());
        EXPECT(0x4346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 01A8
        gbc.setState(0xd578, 0x8035, 0x7460, 0xdeb5, 0xf4cb, 0x7233, 0x0, 0x0);
        gbc.writeMem(0xd578, { 0x52 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8035, gbc.sp());
        EXPECT(0xd579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd578));
        // 52 01A9
        gbc.setState(0xc810, 0xa3ad, 0x29b0, 0x3ba7, 0x9040, 0x4c80, 0x0, 0x0);
        gbc.writeMem(0xc810, { 0x52 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa3ad, gbc.sp());
        EXPECT(0xc811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc810));
        // 52 01AA
        gbc.setState(0x981, 0xe96b, 0x7c90, 0x4a91, 0xe4df, 0xe1f0, 0x0, 0x0);
        gbc.writeMem(0x981, { 0x52 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe96b, gbc.sp());
        EXPECT(0x982, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 01AB
        gbc.setState(0x4ec6, 0x9923, 0x7d60, 0x5031, 0x44c4, 0xc527, 0x0, 0x0);
        gbc.writeMem(0x4ec6, { 0x52 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9923, gbc.sp());
        EXPECT(0x4ec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 01AC
        gbc.setState(0xb4a4, 0xf39d, 0xe8b0, 0x977b, 0xcd13, 0x7ac, 0x0, 0x1);
        gbc.writeMem(0xb4a4, { 0x52 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf39d, gbc.sp());
        EXPECT(0xb4a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb4a4));
        // 52 01AD
        gbc.setState(0x1836, 0xb8a1, 0xf190, 0xfa43, 0x100e, 0x4687, 0x0, 0x1);
        gbc.writeMem(0x1836, { 0x52 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb8a1, gbc.sp());
        EXPECT(0x1837, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 01AE
        gbc.setState(0x7f36, 0xdc49, 0x1fb0, 0xc233, 0x8b7d, 0x244b, 0x1, 0x1);
        gbc.writeMem(0x7f36, { 0x52 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xdc49, gbc.sp());
        EXPECT(0x7f37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 01AF
        gbc.setState(0x7214, 0xb7c5, 0x14b0, 0x90d9, 0xc42c, 0x8fec, 0x1, 0x0);
        gbc.writeMem(0x7214, { 0x52 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb7c5, gbc.sp());
        EXPECT(0x7215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 01B0
        gbc.setState(0x78b0, 0xbab8, 0x4250, 0xaecc, 0x17c5, 0xbb5f, 0x1, 0x1);
        gbc.writeMem(0x78b0, { 0x52 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xbab8, gbc.sp());
        EXPECT(0x78b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 01B1
        gbc.setState(0xdae3, 0xa308, 0x4b80, 0x6eb2, 0x7ebd, 0xf919, 0x0, 0x0);
        gbc.writeMem(0xdae3, { 0x52 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa308, gbc.sp());
        EXPECT(0xdae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xdae3));
        // 52 01B2
        gbc.setState(0x5517, 0x6f18, 0x1bb0, 0x7def, 0x92a8, 0xf475, 0x0, 0x1);
        gbc.writeMem(0x5517, { 0x52 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6f18, gbc.sp());
        EXPECT(0x5518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 01B3
        gbc.setState(0x6394, 0xf5c2, 0x5b70, 0x446f, 0xee54, 0x789b, 0x0, 0x0);
        gbc.writeMem(0x6394, { 0x52 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf5c2, gbc.sp());
        EXPECT(0x6395, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 01B4
        gbc.setState(0xc8a9, 0x9155, 0x1070, 0x8b64, 0xa68e, 0xae09, 0x0, 0x0);
        gbc.writeMem(0xc8a9, { 0x52 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9155, gbc.sp());
        EXPECT(0xc8aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc8a9));
        // 52 01B5
        gbc.setState(0xa0e2, 0x9bc3, 0xa650, 0xa72c, 0xcbfe, 0xbe0f, 0x0, 0x0);
        gbc.writeMem(0xa0e2, { 0x52 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9bc3, gbc.sp());
        EXPECT(0xa0e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa0e2));
        // 52 01B6
        gbc.setState(0x92d4, 0xb56b, 0xf9f0, 0x2bad, 0x169a, 0x8f06, 0x1, 0x0);
        gbc.writeMem(0x92d4, { 0x52 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb56b, gbc.sp());
        EXPECT(0x92d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x92d4));
        // 52 01B7
        gbc.setState(0x46fa, 0x75cc, 0x9210, 0xc251, 0x849a, 0xdac9, 0x0, 0x1);
        gbc.writeMem(0x46fa, { 0x52 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x75cc, gbc.sp());
        EXPECT(0x46fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 01B8
        gbc.setState(0xe715, 0xbf0d, 0x9d60, 0x526, 0x28ec, 0xc85f, 0x1, 0x1);
        gbc.writeMem(0xe715, { 0x52 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xbf0d, gbc.sp());
        EXPECT(0xe716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe715));
        // 52 01B9
        gbc.setState(0x8657, 0x23e0, 0x6f10, 0x12ab, 0x16c5, 0xd13, 0x0, 0x1);
        gbc.writeMem(0x8657, { 0x52 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x23e0, gbc.sp());
        EXPECT(0x8658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8657));
        // 52 01BA
        gbc.setState(0x4442, 0x9b2f, 0xc660, 0x8a46, 0x3758, 0xe217, 0x0, 0x0);
        gbc.writeMem(0x4442, { 0x52 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9b2f, gbc.sp());
        EXPECT(0x4443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 01BB
        gbc.setState(0x8370, 0xac27, 0x84c0, 0x438a, 0x97ed, 0x4161, 0x0, 0x1);
        gbc.writeMem(0x8370, { 0x52 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xac27, gbc.sp());
        EXPECT(0x8371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8370));
        // 52 01BC
        gbc.setState(0x9d89, 0x7740, 0x5ef0, 0xace, 0x881b, 0x1348, 0x0, 0x0);
        gbc.writeMem(0x9d89, { 0x52 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7740, gbc.sp());
        EXPECT(0x9d8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9d89));
        // 52 01BD
        gbc.setState(0xdf19, 0x9496, 0x25d0, 0xaa00, 0xa7ae, 0x8f34, 0x1, 0x1);
        gbc.writeMem(0xdf19, { 0x52 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9496, gbc.sp());
        EXPECT(0xdf1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xdf19));
        // 52 01BE
        gbc.setState(0x9da6, 0xa067, 0x1dc0, 0x49b3, 0x7289, 0xedf0, 0x1, 0x1);
        gbc.writeMem(0x9da6, { 0x52 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa067, gbc.sp());
        EXPECT(0x9da7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9da6));
        // 52 01BF
        gbc.setState(0xb94b, 0xd538, 0xa10, 0xbfc, 0x2a94, 0x20c0, 0x1, 0x0);
        gbc.writeMem(0xb94b, { 0x52 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd538, gbc.sp());
        EXPECT(0xb94c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb94b));
        // 52 01C0
        gbc.setState(0x9a9a, 0x5a10, 0xd0c0, 0x8fa9, 0x8b4d, 0xd146, 0x0, 0x1);
        gbc.writeMem(0x9a9a, { 0x52 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5a10, gbc.sp());
        EXPECT(0x9a9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9a9a));
        // 52 01C1
        gbc.setState(0xa5ea, 0xb2b7, 0x6670, 0xc95, 0xb4d4, 0x8d1, 0x0, 0x1);
        gbc.writeMem(0xa5ea, { 0x52 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb2b7, gbc.sp());
        EXPECT(0xa5eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa5ea));
        // 52 01C3
        gbc.setState(0xb61f, 0x11d7, 0x2090, 0x49e8, 0xc4b7, 0x9c4, 0x1, 0x0);
        gbc.writeMem(0xb61f, { 0x52 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x11d7, gbc.sp());
        EXPECT(0xb620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb61f));
        // 52 01C5
        gbc.setState(0x3199, 0xd7ba, 0xe830, 0xb0d5, 0xcab, 0x4d79, 0x1, 0x1);
        gbc.writeMem(0x3199, { 0x52 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd7ba, gbc.sp());
        EXPECT(0x319a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 01C6
        gbc.setState(0x8689, 0x7c45, 0x5ef0, 0xce35, 0xa729, 0x3c74, 0x1, 0x1);
        gbc.writeMem(0x8689, { 0x52 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7c45, gbc.sp());
        EXPECT(0x868a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8689));
        // 52 01C7
        gbc.setState(0x60ae, 0x4d29, 0xf410, 0xb75d, 0x7955, 0xe36b, 0x1, 0x1);
        gbc.writeMem(0x60ae, { 0x52 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4d29, gbc.sp());
        EXPECT(0x60af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 01C8
        gbc.setState(0x1d2f, 0x9232, 0x2ae0, 0xfe8c, 0x46f7, 0xf106, 0x1, 0x1);
        gbc.writeMem(0x1d2f, { 0x52 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9232, gbc.sp());
        EXPECT(0x1d30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 01C9
        gbc.setState(0x7170, 0x9c2d, 0x5e10, 0x4698, 0xd84e, 0x96ea, 0x1, 0x1);
        gbc.writeMem(0x7170, { 0x52 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9c2d, gbc.sp());
        EXPECT(0x7171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 01CA
        gbc.setState(0xc9f4, 0x6b3e, 0x6810, 0xda1, 0x6aaf, 0xf211, 0x1, 0x1);
        gbc.writeMem(0xc9f4, { 0x52 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6b3e, gbc.sp());
        EXPECT(0xc9f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc9f4));
        // 52 01CB
        gbc.setState(0xc8b1, 0xe7b5, 0x9150, 0x5cb, 0x1302, 0xeb07, 0x1, 0x1);
        gbc.writeMem(0xc8b1, { 0x52 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe7b5, gbc.sp());
        EXPECT(0xc8b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc8b1));
        // 52 01CC
        gbc.setState(0xb3c7, 0x3cf, 0xdd80, 0x89db, 0x731b, 0xdf67, 0x0, 0x1);
        gbc.writeMem(0xb3c7, { 0x52 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3cf, gbc.sp());
        EXPECT(0xb3c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb3c7));
        // 52 01CD
        gbc.setState(0xd72b, 0x7605, 0x4e50, 0xdc39, 0x7108, 0xd0d2, 0x1, 0x1);
        gbc.writeMem(0xd72b, { 0x52 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7605, gbc.sp());
        EXPECT(0xd72c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd72b));
        // 52 01CE
        gbc.setState(0xb720, 0xa480, 0x5830, 0x6c7e, 0x6181, 0x1ff8, 0x0, 0x0);
        gbc.writeMem(0xb720, { 0x52 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa480, gbc.sp());
        EXPECT(0xb721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb720));
        // 52 01CF
        gbc.setState(0xe9c4, 0x462c, 0x9b30, 0x5861, 0xfc29, 0x4c16, 0x1, 0x0);
        gbc.writeMem(0xe9c4, { 0x52 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x462c, gbc.sp());
        EXPECT(0xe9c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe9c4));
        // 52 01D1
        gbc.setState(0x6491, 0x3eac, 0x5510, 0xb561, 0x9ce0, 0xcf32, 0x0, 0x0);
        gbc.writeMem(0x6491, { 0x52 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3eac, gbc.sp());
        EXPECT(0x6492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 01D2
        gbc.setState(0xb5c4, 0x79c0, 0x3e30, 0x491d, 0xe42f, 0xe93d, 0x1, 0x0);
        gbc.writeMem(0xb5c4, { 0x52 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x79c0, gbc.sp());
        EXPECT(0xb5c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb5c4));
        // 52 01D4
        gbc.setState(0xc27f, 0x84fa, 0xc320, 0x7130, 0xdfa1, 0x9850, 0x0, 0x1);
        gbc.writeMem(0xc27f, { 0x52 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x84fa, gbc.sp());
        EXPECT(0xc280, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc27f));
        // 52 01D5
        gbc.setState(0x25c, 0x30dc, 0xa1e0, 0x5736, 0x916d, 0x16de, 0x1, 0x1);
        gbc.writeMem(0x25c, { 0x52 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x30dc, gbc.sp());
        EXPECT(0x25d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 01D6
        gbc.setState(0xa0c4, 0x32c9, 0xc90, 0x1737, 0xe2a2, 0x5a42, 0x0, 0x1);
        gbc.writeMem(0xa0c4, { 0x52 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x32c9, gbc.sp());
        EXPECT(0xa0c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa0c4));
        // 52 01D7
        gbc.setState(0xd48b, 0x23df, 0x9650, 0x26a6, 0xbb4b, 0x6017, 0x0, 0x0);
        gbc.writeMem(0xd48b, { 0x52 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x23df, gbc.sp());
        EXPECT(0xd48c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd48b));
        // 52 01D8
        gbc.setState(0xd5e8, 0x3917, 0x5800, 0xb375, 0x72bf, 0x1f86, 0x1, 0x0);
        gbc.writeMem(0xd5e8, { 0x52 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3917, gbc.sp());
        EXPECT(0xd5e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd5e8));
        // 52 01D9
        gbc.setState(0x1cd2, 0x7ec6, 0x7c70, 0xdc17, 0xf87c, 0x511f, 0x1, 0x1);
        gbc.writeMem(0x1cd2, { 0x52 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7ec6, gbc.sp());
        EXPECT(0x1cd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 01DA
        gbc.setState(0x812, 0xf8b3, 0x5260, 0x18c5, 0xd9, 0xc46d, 0x1, 0x1);
        gbc.writeMem(0x812, { 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf8b3, gbc.sp());
        EXPECT(0x813, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 01DB
        gbc.setState(0xc728, 0xb8e, 0x2450, 0xc8f0, 0xd527, 0x5f9d, 0x1, 0x0);
        gbc.writeMem(0xc728, { 0x52 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb8e, gbc.sp());
        EXPECT(0xc729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc728));
        // 52 01DC
        gbc.setState(0x1a27, 0x3520, 0xb540, 0xf9de, 0x57f9, 0x2c50, 0x1, 0x0);
        gbc.writeMem(0x1a27, { 0x52 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3520, gbc.sp());
        EXPECT(0x1a28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 01DD
        gbc.setState(0x40cd, 0x94cb, 0xc360, 0x7631, 0xf4b, 0x789f, 0x1, 0x1);
        gbc.writeMem(0x40cd, { 0x52 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x94cb, gbc.sp());
        EXPECT(0x40ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 01DE
        gbc.setState(0xa94d, 0xc5f7, 0x1df0, 0xcc9, 0xd26d, 0x84c3, 0x0, 0x0);
        gbc.writeMem(0xa94d, { 0x52 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc5f7, gbc.sp());
        EXPECT(0xa94e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa94d));
        // 52 01DF
        gbc.setState(0x8b31, 0x97d9, 0xc760, 0x9df4, 0x5d7f, 0xef40, 0x1, 0x0);
        gbc.writeMem(0x8b31, { 0x52 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x97d9, gbc.sp());
        EXPECT(0x8b32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8b31));
        // 52 01E0
        gbc.setState(0xccc9, 0x2101, 0x9860, 0x6bbc, 0x7168, 0x36c4, 0x1, 0x1);
        gbc.writeMem(0xccc9, { 0x52 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2101, gbc.sp());
        EXPECT(0xccca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xccc9));
        // 52 01E1
        gbc.setState(0xd774, 0x4ae4, 0x90d0, 0xc4cb, 0x625a, 0xf5eb, 0x0, 0x0);
        gbc.writeMem(0xd774, { 0x52 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4ae4, gbc.sp());
        EXPECT(0xd775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd774));
        // 52 01E3
        gbc.setState(0xee7e, 0x69e3, 0x14f0, 0xf690, 0xd956, 0xd58e, 0x1, 0x0);
        gbc.writeMem(0xee7e, { 0x52 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x69e3, gbc.sp());
        EXPECT(0xee7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xee7e));
        // 52 01E4
        gbc.setState(0xb923, 0xe7e9, 0x62a0, 0x135f, 0x6fe3, 0x6196, 0x1, 0x0);
        gbc.writeMem(0xb923, { 0x52 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe7e9, gbc.sp());
        EXPECT(0xb924, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb923));
        // 52 01E5
        gbc.setState(0xded6, 0x429a, 0x5530, 0x480d, 0x51cc, 0x126, 0x1, 0x0);
        gbc.writeMem(0xded6, { 0x52 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x429a, gbc.sp());
        EXPECT(0xded7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xded6));
        // 52 01E7
        gbc.setState(0x355e, 0x8285, 0x5ac0, 0x4e3d, 0x7c2e, 0xa4a6, 0x1, 0x0);
        gbc.writeMem(0x355e, { 0x52 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8285, gbc.sp());
        EXPECT(0x355f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 01E8
        gbc.setState(0x50d4, 0x843f, 0x3770, 0x650c, 0x8625, 0xb204, 0x1, 0x1);
        gbc.writeMem(0x50d4, { 0x52 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x843f, gbc.sp());
        EXPECT(0x50d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 01E9
        gbc.setState(0x6ede, 0x948, 0xe1f0, 0x2e92, 0x22db, 0xa60e, 0x1, 0x1);
        gbc.writeMem(0x6ede, { 0x52 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x948, gbc.sp());
        EXPECT(0x6edf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 01EA
        gbc.setState(0xdf53, 0xce3, 0x3800, 0xc7cf, 0xc8f5, 0x91af, 0x0, 0x0);
        gbc.writeMem(0xdf53, { 0x52 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xce3, gbc.sp());
        EXPECT(0xdf54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xdf53));
        // 52 01EB
        gbc.setState(0x8dfe, 0xc435, 0x9c70, 0x598d, 0x5714, 0x5c63, 0x1, 0x0);
        gbc.writeMem(0x8dfe, { 0x52 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc435, gbc.sp());
        EXPECT(0x8dff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8dfe));
        // 52 01EC
        gbc.setState(0x584c, 0x7629, 0xf0b0, 0x2e0b, 0xcf0d, 0xfc35, 0x0, 0x1);
        gbc.writeMem(0x584c, { 0x52 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7629, gbc.sp());
        EXPECT(0x584d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 01ED
        gbc.setState(0x2136, 0xd58b, 0x9b40, 0x7ba6, 0x474, 0x70bc, 0x0, 0x0);
        gbc.writeMem(0x2136, { 0x52 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd58b, gbc.sp());
        EXPECT(0x2137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 01EF
        gbc.setState(0x2702, 0x4a02, 0x8fb0, 0x2f25, 0x5912, 0x2ed4, 0x0, 0x0);
        gbc.writeMem(0x2702, { 0x52 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4a02, gbc.sp());
        EXPECT(0x2703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 01F0
        gbc.setState(0xb750, 0x49cb, 0xea60, 0xdd86, 0xb5f7, 0x6358, 0x1, 0x1);
        gbc.writeMem(0xb750, { 0x52 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x49cb, gbc.sp());
        EXPECT(0xb751, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb750));
        // 52 01F1
        gbc.setState(0xf54, 0x1fa5, 0xce90, 0x57e4, 0x2830, 0xfb32, 0x1, 0x1);
        gbc.writeMem(0xf54, { 0x52 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1fa5, gbc.sp());
        EXPECT(0xf55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 01F2
        gbc.setState(0xac4d, 0x9d07, 0xe010, 0x9194, 0x9e4f, 0x2ce4, 0x0, 0x0);
        gbc.writeMem(0xac4d, { 0x52 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9d07, gbc.sp());
        EXPECT(0xac4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xac4d));
        // 52 01F3
        gbc.setState(0x4019, 0x2835, 0x3000, 0xe52e, 0x2d40, 0x349c, 0x1, 0x1);
        gbc.writeMem(0x4019, { 0x52 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2835, gbc.sp());
        EXPECT(0x401a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 01F4
        gbc.setState(0x3db9, 0xfcdd, 0xf240, 0x9d4c, 0x9405, 0x1b90, 0x1, 0x1);
        gbc.writeMem(0x3db9, { 0x52 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xfcdd, gbc.sp());
        EXPECT(0x3dba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 01F5
        gbc.setState(0xa39f, 0x251b, 0xd790, 0x757, 0x1e28, 0xb1af, 0x0, 0x1);
        gbc.writeMem(0xa39f, { 0x52 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x251b, gbc.sp());
        EXPECT(0xa3a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa39f));
        // 52 01F6
        gbc.setState(0x60e2, 0x57a2, 0x6d60, 0x15e7, 0x2889, 0x42b2, 0x0, 0x1);
        gbc.writeMem(0x60e2, { 0x52 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x57a2, gbc.sp());
        EXPECT(0x60e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 01F7
        gbc.setState(0x577f, 0xcd31, 0x6830, 0x6314, 0xca74, 0xa9cf, 0x0, 0x0);
        gbc.writeMem(0x577f, { 0x52 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xcd31, gbc.sp());
        EXPECT(0x5780, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 01F8
        gbc.setState(0x7134, 0xba6, 0x3660, 0x5eff, 0x4b92, 0xa2b7, 0x1, 0x0);
        gbc.writeMem(0x7134, { 0x52 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xba6, gbc.sp());
        EXPECT(0x7135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 01F9
        gbc.setState(0x968e, 0x51ee, 0xca20, 0x1f84, 0x133f, 0x618, 0x1, 0x0);
        gbc.writeMem(0x968e, { 0x52 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x51ee, gbc.sp());
        EXPECT(0x968f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x968e));
        // 52 01FA
        gbc.setState(0x7e01, 0x20c4, 0xa1d0, 0x7fdd, 0x7d0d, 0xbafc, 0x1, 0x0);
        gbc.writeMem(0x7e01, { 0x52 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x20c4, gbc.sp());
        EXPECT(0x7e02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 01FB
        gbc.setState(0xe0c3, 0x54ac, 0x9470, 0xb0be, 0x1b33, 0x45e3, 0x0, 0x1);
        gbc.writeMem(0xe0c3, { 0x52 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x54ac, gbc.sp());
        EXPECT(0xe0c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe0c3));
        // 52 01FC
        gbc.setState(0xb01a, 0xa5f0, 0xe030, 0x1238, 0x23d3, 0xb1d, 0x1, 0x0);
        gbc.writeMem(0xb01a, { 0x52 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa5f0, gbc.sp());
        EXPECT(0xb01b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb01a));
        // 52 01FD
        gbc.setState(0x1c97, 0x5d41, 0x2840, 0x541d, 0xc754, 0x1b1, 0x1, 0x0);
        gbc.writeMem(0x1c97, { 0x52 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5d41, gbc.sp());
        EXPECT(0x1c98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 01FE
        gbc.setState(0xce3d, 0x8531, 0x3970, 0x5e52, 0xbeb7, 0x6482, 0x0, 0x0);
        gbc.writeMem(0xce3d, { 0x52 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8531, gbc.sp());
        EXPECT(0xce3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xce3d));
        // 52 01FF
        gbc.setState(0xcb31, 0x6376, 0x6b90, 0x744c, 0x8f3c, 0x4e99, 0x0, 0x1);
        gbc.writeMem(0xcb31, { 0x52 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6376, gbc.sp());
        EXPECT(0xcb32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xcb31));
        // 52 0200
        gbc.setState(0xca7, 0xc2b8, 0x3880, 0x1deb, 0x2ecb, 0x9c1c, 0x1, 0x0);
        gbc.writeMem(0xca7, { 0x52 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc2b8, gbc.sp());
        EXPECT(0xca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0202
        gbc.setState(0xb131, 0xa520, 0xa3b0, 0x7788, 0x157a, 0x34e1, 0x1, 0x1);
        gbc.writeMem(0xb131, { 0x52 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa520, gbc.sp());
        EXPECT(0xb132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb131));
        // 52 0203
        gbc.setState(0x28a, 0x1535, 0x3970, 0xb510, 0xc655, 0xd066, 0x0, 0x1);
        gbc.writeMem(0x28a, { 0x52 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1535, gbc.sp());
        EXPECT(0x28b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0204
        gbc.setState(0x6ae, 0xb03d, 0xb250, 0x54ae, 0x1396, 0x1408, 0x0, 0x1);
        gbc.writeMem(0x6ae, { 0x52 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb03d, gbc.sp());
        EXPECT(0x6af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0205
        gbc.setState(0x4676, 0xa652, 0x9f20, 0xb31a, 0xe87b, 0x86a5, 0x0, 0x1);
        gbc.writeMem(0x4676, { 0x52 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa652, gbc.sp());
        EXPECT(0x4677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0206
        gbc.setState(0xbb88, 0x9e99, 0xdc30, 0xe2cc, 0x9c04, 0xb89a, 0x1, 0x0);
        gbc.writeMem(0xbb88, { 0x52 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9e99, gbc.sp());
        EXPECT(0xbb89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xbb88));
        // 52 0207
        gbc.setState(0x648c, 0x9829, 0xf2b0, 0xd71a, 0x7570, 0xe42c, 0x0, 0x1);
        gbc.writeMem(0x648c, { 0x52 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9829, gbc.sp());
        EXPECT(0x648d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0208
        gbc.setState(0xe489, 0xb5ef, 0x2e60, 0x103d, 0xf840, 0x9aec, 0x1, 0x1);
        gbc.writeMem(0xe489, { 0x52 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb5ef, gbc.sp());
        EXPECT(0xe48a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe489));
        // 52 0209
        gbc.setState(0x9886, 0x9e55, 0x68e0, 0xc1d0, 0x3c24, 0x67c1, 0x1, 0x0);
        gbc.writeMem(0x9886, { 0x52 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9e55, gbc.sp());
        EXPECT(0x9887, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9886));
        // 52 020A
        gbc.setState(0xb7f5, 0x43a8, 0x7750, 0x7458, 0xaf61, 0x5d21, 0x1, 0x0);
        gbc.writeMem(0xb7f5, { 0x52 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x43a8, gbc.sp());
        EXPECT(0xb7f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb7f5));
        // 52 020B
        gbc.setState(0x13af, 0x1f8f, 0x4910, 0x28d, 0x8aa0, 0xda16, 0x0, 0x0);
        gbc.writeMem(0x13af, { 0x52 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1f8f, gbc.sp());
        EXPECT(0x13b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 020C
        gbc.setState(0x3dbc, 0xda76, 0x99f0, 0xff3f, 0x3310, 0xbaf4, 0x0, 0x0);
        gbc.writeMem(0x3dbc, { 0x52 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xda76, gbc.sp());
        EXPECT(0x3dbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 020D
        gbc.setState(0x1a8d, 0xb945, 0x9540, 0x428d, 0xbcd6, 0xf57b, 0x1, 0x0);
        gbc.writeMem(0x1a8d, { 0x52 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb945, gbc.sp());
        EXPECT(0x1a8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 020E
        gbc.setState(0xbe10, 0xe500, 0x2310, 0x413, 0xa8bb, 0xeeb8, 0x0, 0x0);
        gbc.writeMem(0xbe10, { 0x52 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe500, gbc.sp());
        EXPECT(0xbe11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xbe10));
        // 52 020F
        gbc.setState(0x4891, 0xe18d, 0x1f20, 0xfef2, 0xfa80, 0xb14a, 0x1, 0x1);
        gbc.writeMem(0x4891, { 0x52 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe18d, gbc.sp());
        EXPECT(0x4892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0210
        gbc.setState(0xe439, 0xcb0b, 0x7430, 0x6026, 0xaad9, 0x424e, 0x1, 0x1);
        gbc.writeMem(0xe439, { 0x52 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xcb0b, gbc.sp());
        EXPECT(0xe43a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe439));
        // 52 0211
        gbc.setState(0xa40f, 0x5659, 0xb4d0, 0x66c8, 0xf1b5, 0x42a, 0x0, 0x1);
        gbc.writeMem(0xa40f, { 0x52 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5659, gbc.sp());
        EXPECT(0xa410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa40f));
        // 52 0212
        gbc.setState(0x4607, 0x85e4, 0xf8d0, 0x5939, 0xf35c, 0x3f03, 0x0, 0x1);
        gbc.writeMem(0x4607, { 0x52 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x85e4, gbc.sp());
        EXPECT(0x4608, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0213
        gbc.setState(0xab66, 0x56aa, 0xcec0, 0x453, 0x9268, 0x1cde, 0x0, 0x1);
        gbc.writeMem(0xab66, { 0x52 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x56aa, gbc.sp());
        EXPECT(0xab67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xab66));
        // 52 0214
        gbc.setState(0xdf31, 0x940d, 0x2920, 0xe60d, 0x1700, 0x9bc, 0x1, 0x1);
        gbc.writeMem(0xdf31, { 0x52 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x940d, gbc.sp());
        EXPECT(0xdf32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xdf31));
        // 52 0215
        gbc.setState(0x32fd, 0xc2d8, 0x130, 0xa8d3, 0xff4d, 0x68bb, 0x1, 0x0);
        gbc.writeMem(0x32fd, { 0x52 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc2d8, gbc.sp());
        EXPECT(0x32fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0216
        gbc.setState(0x6ec8, 0xedb9, 0x7520, 0x1a23, 0x195d, 0xf6f8, 0x1, 0x1);
        gbc.writeMem(0x6ec8, { 0x52 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xedb9, gbc.sp());
        EXPECT(0x6ec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0217
        gbc.setState(0x79eb, 0x3339, 0xb1c0, 0xe208, 0x342a, 0x9c45, 0x0, 0x1);
        gbc.writeMem(0x79eb, { 0x52 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3339, gbc.sp());
        EXPECT(0x79ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0218
        gbc.setState(0x3d7d, 0x7403, 0xb710, 0xe90b, 0x1640, 0x20ab, 0x1, 0x0);
        gbc.writeMem(0x3d7d, { 0x52 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7403, gbc.sp());
        EXPECT(0x3d7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0219
        gbc.setState(0x1908, 0xbac, 0xbbe0, 0xe664, 0x221d, 0x682d, 0x0, 0x1);
        gbc.writeMem(0x1908, { 0x52 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbac, gbc.sp());
        EXPECT(0x1909, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 021A
        gbc.setState(0x82ae, 0x174c, 0x19e0, 0xcbf8, 0x929b, 0xe5c8, 0x0, 0x1);
        gbc.writeMem(0x82ae, { 0x52 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x174c, gbc.sp());
        EXPECT(0x82af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x82ae));
        // 52 021B
        gbc.setState(0xac93, 0x9acb, 0x5e90, 0x1e50, 0x6f7, 0xffef, 0x0, 0x0);
        gbc.writeMem(0xac93, { 0x52 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9acb, gbc.sp());
        EXPECT(0xac94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xac93));
        // 52 021C
        gbc.setState(0x758c, 0x5fc6, 0x3720, 0x9131, 0x3fd5, 0xc4a2, 0x0, 0x1);
        gbc.writeMem(0x758c, { 0x52 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5fc6, gbc.sp());
        EXPECT(0x758d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 021D
        gbc.setState(0x2eef, 0x2fb5, 0x9240, 0xc348, 0xff01, 0x74c6, 0x1, 0x1);
        gbc.writeMem(0x2eef, { 0x52 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2fb5, gbc.sp());
        EXPECT(0x2ef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 021E
        gbc.setState(0xe4ec, 0xcd4b, 0x980, 0xf4f9, 0x524d, 0xcdf2, 0x1, 0x1);
        gbc.writeMem(0xe4ec, { 0x52 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xcd4b, gbc.sp());
        EXPECT(0xe4ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe4ec));
        // 52 021F
        gbc.setState(0xce0c, 0x4f40, 0x2960, 0x9db3, 0xd45b, 0x433e, 0x0, 0x0);
        gbc.writeMem(0xce0c, { 0x52 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4f40, gbc.sp());
        EXPECT(0xce0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xce0c));
        // 52 0220
        gbc.setState(0xce35, 0xf3d7, 0x1960, 0xb64f, 0x85d1, 0xd607, 0x1, 0x0);
        gbc.writeMem(0xce35, { 0x52 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf3d7, gbc.sp());
        EXPECT(0xce36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xce35));
        // 52 0221
        gbc.setState(0x9984, 0x66c8, 0x2170, 0x51fd, 0xb2bb, 0x5fdc, 0x1, 0x1);
        gbc.writeMem(0x9984, { 0x52 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x66c8, gbc.sp());
        EXPECT(0x9985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9984));
        // 52 0222
        gbc.setState(0xe81d, 0x372e, 0x57f0, 0x113, 0x5bd, 0xf594, 0x1, 0x1);
        gbc.writeMem(0xe81d, { 0x52 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x372e, gbc.sp());
        EXPECT(0xe81e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe81d));
        // 52 0223
        gbc.setState(0x7a03, 0x3bcb, 0x5540, 0x90ba, 0xafb3, 0x18b5, 0x0, 0x0);
        gbc.writeMem(0x7a03, { 0x52 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3bcb, gbc.sp());
        EXPECT(0x7a04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0224
        gbc.setState(0xc172, 0x3c55, 0x3f10, 0x5085, 0x9440, 0x4a50, 0x0, 0x0);
        gbc.writeMem(0xc172, { 0x52 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3c55, gbc.sp());
        EXPECT(0xc173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc172));
        // 52 0225
        gbc.setState(0x142e, 0x6289, 0x2f50, 0x6874, 0xc2b9, 0x392, 0x0, 0x0);
        gbc.writeMem(0x142e, { 0x52 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6289, gbc.sp());
        EXPECT(0x142f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0226
        gbc.setState(0x339e, 0x1069, 0x5e30, 0x456e, 0x11e, 0x3e3, 0x1, 0x0);
        gbc.writeMem(0x339e, { 0x52 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1069, gbc.sp());
        EXPECT(0x339f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0227
        gbc.setState(0xb701, 0xfcce, 0xcde0, 0x1c1, 0xc5c0, 0x1b4a, 0x0, 0x1);
        gbc.writeMem(0xb701, { 0x52 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xfcce, gbc.sp());
        EXPECT(0xb702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb701));
        // 52 0228
        gbc.setState(0x1f08, 0xa3cf, 0x4a10, 0xc376, 0x80e3, 0xd68d, 0x1, 0x0);
        gbc.writeMem(0x1f08, { 0x52 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa3cf, gbc.sp());
        EXPECT(0x1f09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0229
        gbc.setState(0x3e76, 0x7bad, 0xc680, 0x171a, 0xa633, 0xf494, 0x1, 0x0);
        gbc.writeMem(0x3e76, { 0x52 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7bad, gbc.sp());
        EXPECT(0x3e77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 022A
        gbc.setState(0xc46d, 0x3d16, 0x3820, 0xffa7, 0x504f, 0x8f64, 0x0, 0x1);
        gbc.writeMem(0xc46d, { 0x52 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3d16, gbc.sp());
        EXPECT(0xc46e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc46d));
        // 52 022B
        gbc.setState(0x7251, 0x1ed9, 0xeaa0, 0x49be, 0x92ee, 0x412e, 0x0, 0x1);
        gbc.writeMem(0x7251, { 0x52 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1ed9, gbc.sp());
        EXPECT(0x7252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 022C
        gbc.setState(0xe2d, 0x2641, 0x5f00, 0xebdb, 0x6229, 0xd5db, 0x1, 0x1);
        gbc.writeMem(0xe2d, { 0x52 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2641, gbc.sp());
        EXPECT(0xe2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 022D
        gbc.setState(0xca46, 0xe2fc, 0x9d40, 0xf4a6, 0xd167, 0x94e4, 0x1, 0x1);
        gbc.writeMem(0xca46, { 0x52 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe2fc, gbc.sp());
        EXPECT(0xca47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xca46));
        // 52 022E
        gbc.setState(0x645f, 0xa5db, 0x69a0, 0xbe2b, 0xab11, 0x7439, 0x0, 0x0);
        gbc.writeMem(0x645f, { 0x52 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa5db, gbc.sp());
        EXPECT(0x6460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 022F
        gbc.setState(0x96b9, 0xbccc, 0xd860, 0xea76, 0x1cf3, 0x32c1, 0x1, 0x1);
        gbc.writeMem(0x96b9, { 0x52 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xbccc, gbc.sp());
        EXPECT(0x96ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x96b9));
        // 52 0230
        gbc.setState(0x60f8, 0x7d77, 0x98c0, 0x6852, 0x9d34, 0xefe9, 0x0, 0x0);
        gbc.writeMem(0x60f8, { 0x52 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7d77, gbc.sp());
        EXPECT(0x60f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0231
        gbc.setState(0xc096, 0x4e34, 0x8000, 0x4236, 0x66d8, 0x9bc5, 0x0, 0x1);
        gbc.writeMem(0xc096, { 0x52 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4e34, gbc.sp());
        EXPECT(0xc097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc096));
        // 52 0232
        gbc.setState(0xb5cd, 0xffe1, 0xc160, 0x5d6, 0xd84b, 0xe2a3, 0x1, 0x0);
        gbc.writeMem(0xb5cd, { 0x52 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xffe1, gbc.sp());
        EXPECT(0xb5ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb5cd));
        // 52 0233
        gbc.setState(0x1e3b, 0x390d, 0xfbe0, 0x3cf3, 0x5774, 0x150e, 0x0, 0x0);
        gbc.writeMem(0x1e3b, { 0x52 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x390d, gbc.sp());
        EXPECT(0x1e3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0234
        gbc.setState(0x50af, 0xc1db, 0xb3e0, 0x8958, 0x76e6, 0xa0a5, 0x0, 0x0);
        gbc.writeMem(0x50af, { 0x52 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc1db, gbc.sp());
        EXPECT(0x50b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0235
        gbc.setState(0x6e83, 0xb8c2, 0x39f0, 0x3c8a, 0xf62d, 0xb89d, 0x0, 0x1);
        gbc.writeMem(0x6e83, { 0x52 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb8c2, gbc.sp());
        EXPECT(0x6e84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0236
        gbc.setState(0x4ffb, 0x3dfc, 0xcf50, 0xe2f4, 0xb673, 0xdeca, 0x1, 0x0);
        gbc.writeMem(0x4ffb, { 0x52 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3dfc, gbc.sp());
        EXPECT(0x4ffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0237
        gbc.setState(0x795c, 0x3ec7, 0xe840, 0xe9c1, 0x5ca7, 0x423d, 0x0, 0x1);
        gbc.writeMem(0x795c, { 0x52 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3ec7, gbc.sp());
        EXPECT(0x795d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0238
        gbc.setState(0xdc9e, 0x9580, 0x7b20, 0xe774, 0xef6f, 0x8a62, 0x1, 0x0);
        gbc.writeMem(0xdc9e, { 0x52 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9580, gbc.sp());
        EXPECT(0xdc9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xdc9e));
        // 52 0239
        gbc.setState(0x2dc8, 0x7544, 0x8980, 0x1224, 0xcff6, 0xaaf1, 0x1, 0x1);
        gbc.writeMem(0x2dc8, { 0x52 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7544, gbc.sp());
        EXPECT(0x2dc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 023A
        gbc.setState(0x23a9, 0x675, 0x6d30, 0xc57c, 0x8648, 0xe274, 0x1, 0x0);
        gbc.writeMem(0x23a9, { 0x52 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x675, gbc.sp());
        EXPECT(0x23aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 023B
        gbc.setState(0x714d, 0x796e, 0x8030, 0x4984, 0xf874, 0x7462, 0x1, 0x1);
        gbc.writeMem(0x714d, { 0x52 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x796e, gbc.sp());
        EXPECT(0x714e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 023C
        gbc.setState(0x3138, 0x4aed, 0x6f70, 0xd3c, 0x4ca2, 0x4252, 0x1, 0x0);
        gbc.writeMem(0x3138, { 0x52 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4aed, gbc.sp());
        EXPECT(0x3139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 023D
        gbc.setState(0x8bbd, 0x404e, 0x4cb0, 0xada0, 0xc015, 0x56eb, 0x0, 0x0);
        gbc.writeMem(0x8bbd, { 0x52 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x404e, gbc.sp());
        EXPECT(0x8bbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8bbd));
        // 52 023E
        gbc.setState(0x446f, 0xd050, 0xdd20, 0x68e9, 0x9f32, 0xe65f, 0x0, 0x0);
        gbc.writeMem(0x446f, { 0x52 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd050, gbc.sp());
        EXPECT(0x4470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 023F
        gbc.setState(0xd1c, 0xd1de, 0x38c0, 0x813d, 0x4c4, 0x82c3, 0x1, 0x1);
        gbc.writeMem(0xd1c, { 0x52 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd1de, gbc.sp());
        EXPECT(0xd1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0240
        gbc.setState(0x2c68, 0xfda, 0x5ce0, 0xd5c0, 0xfdf6, 0x33cb, 0x0, 0x0);
        gbc.writeMem(0x2c68, { 0x52 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xfda, gbc.sp());
        EXPECT(0x2c69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0241
        gbc.setState(0xc853, 0x4ca9, 0x8780, 0xf80d, 0xeb, 0x551d, 0x1, 0x0);
        gbc.writeMem(0xc853, { 0x52 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4ca9, gbc.sp());
        EXPECT(0xc854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc853));
        // 52 0242
        gbc.setState(0xdae0, 0x40c2, 0x7c80, 0xfc43, 0xac2b, 0x57d2, 0x1, 0x1);
        gbc.writeMem(0xdae0, { 0x52 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x40c2, gbc.sp());
        EXPECT(0xdae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xdae0));
        // 52 0243
        gbc.setState(0xc028, 0x99b, 0x34f0, 0x3d91, 0x5bc6, 0x79c0, 0x1, 0x1);
        gbc.writeMem(0xc028, { 0x52 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x99b, gbc.sp());
        EXPECT(0xc029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc028));
        // 52 0244
        gbc.setState(0x9b5f, 0xa9ff, 0xe190, 0x5959, 0xc900, 0xb527, 0x1, 0x0);
        gbc.writeMem(0x9b5f, { 0x52 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa9ff, gbc.sp());
        EXPECT(0x9b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9b5f));
        // 52 0245
        gbc.setState(0x3b, 0xf2d7, 0xebd0, 0xca7a, 0x9126, 0x6fb9, 0x1, 0x0);
        gbc.writeMem(0x3b, { 0x52 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf2d7, gbc.sp());
        EXPECT(0x3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0246
        gbc.setState(0x2ca4, 0xe432, 0x65b0, 0x52c3, 0x45df, 0x2bf1, 0x0, 0x1);
        gbc.writeMem(0x2ca4, { 0x52 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe432, gbc.sp());
        EXPECT(0x2ca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0247
        gbc.setState(0x3c9c, 0x19c1, 0x7cf0, 0xdfb8, 0xc989, 0x8582, 0x1, 0x1);
        gbc.writeMem(0x3c9c, { 0x52 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x19c1, gbc.sp());
        EXPECT(0x3c9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0248
        gbc.setState(0x1493, 0xd856, 0xb000, 0x222f, 0x322, 0x6953, 0x1, 0x0);
        gbc.writeMem(0x1493, { 0x52 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd856, gbc.sp());
        EXPECT(0x1494, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0249
        gbc.setState(0x8a84, 0xdb6b, 0x2d80, 0x515a, 0xecc6, 0x6b7d, 0x0, 0x0);
        gbc.writeMem(0x8a84, { 0x52 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xdb6b, gbc.sp());
        EXPECT(0x8a85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8a84));
        // 52 024A
        gbc.setState(0xbc7a, 0x627d, 0xe380, 0x8c3f, 0x5ab2, 0xf407, 0x0, 0x0);
        gbc.writeMem(0xbc7a, { 0x52 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x627d, gbc.sp());
        EXPECT(0xbc7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xbc7a));
        // 52 024B
        gbc.setState(0xa716, 0x9ae6, 0x53b0, 0x40b9, 0xf967, 0x687c, 0x1, 0x0);
        gbc.writeMem(0xa716, { 0x52 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9ae6, gbc.sp());
        EXPECT(0xa717, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa716));
        // 52 024C
        gbc.setState(0x18b9, 0x610a, 0xa550, 0xff4f, 0xb38b, 0x3542, 0x1, 0x1);
        gbc.writeMem(0x18b9, { 0x52 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x610a, gbc.sp());
        EXPECT(0x18ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 024D
        gbc.setState(0xf0, 0xe35c, 0x94d0, 0x9cd1, 0xf985, 0x1d60, 0x0, 0x1);
        gbc.writeMem(0xf0, { 0x52 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe35c, gbc.sp());
        EXPECT(0xf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 024E
        gbc.setState(0x7747, 0x9bf9, 0xfcc0, 0xaf28, 0x2d12, 0x4404, 0x0, 0x0);
        gbc.writeMem(0x7747, { 0x52 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9bf9, gbc.sp());
        EXPECT(0x7748, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 024F
        gbc.setState(0x173, 0x75f5, 0x3e60, 0xbe26, 0x5b5b, 0xbdac, 0x0, 0x0);
        gbc.writeMem(0x173, { 0x52 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x75f5, gbc.sp());
        EXPECT(0x174, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0250
        gbc.setState(0x2ec2, 0x83b9, 0x8140, 0x7982, 0x1568, 0x6978, 0x1, 0x0);
        gbc.writeMem(0x2ec2, { 0x52 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x83b9, gbc.sp());
        EXPECT(0x2ec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0251
        gbc.setState(0xcdf8, 0x647c, 0x5140, 0x39b1, 0xbf84, 0x6c79, 0x0, 0x1);
        gbc.writeMem(0xcdf8, { 0x52 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x647c, gbc.sp());
        EXPECT(0xcdf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xcdf8));
        // 52 0252
        gbc.setState(0x1814, 0x9fc3, 0xba0, 0x2d36, 0x5f51, 0xdd6, 0x0, 0x0);
        gbc.writeMem(0x1814, { 0x52 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9fc3, gbc.sp());
        EXPECT(0x1815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0253
        gbc.setState(0x8ed8, 0x3a7a, 0xf5b0, 0x72f1, 0x69ec, 0x4ecb, 0x1, 0x0);
        gbc.writeMem(0x8ed8, { 0x52 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3a7a, gbc.sp());
        EXPECT(0x8ed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8ed8));
        // 52 0254
        gbc.setState(0xe140, 0xb183, 0x3940, 0x458, 0xe70f, 0x2202, 0x1, 0x0);
        gbc.writeMem(0xe140, { 0x52 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb183, gbc.sp());
        EXPECT(0xe141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe140));
        // 52 0255
        gbc.setState(0x5425, 0x30f8, 0x58f0, 0x58eb, 0x2177, 0xb64, 0x0, 0x1);
        gbc.writeMem(0x5425, { 0x52 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x30f8, gbc.sp());
        EXPECT(0x5426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0256
        gbc.setState(0xcd74, 0x6c05, 0x2f00, 0xe0fa, 0x6dc, 0x84f5, 0x1, 0x1);
        gbc.writeMem(0xcd74, { 0x52 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6c05, gbc.sp());
        EXPECT(0xcd75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xcd74));
        // 52 0257
        gbc.setState(0x3834, 0xed51, 0x9dc0, 0x833e, 0xc729, 0x65f1, 0x1, 0x0);
        gbc.writeMem(0x3834, { 0x52 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xed51, gbc.sp());
        EXPECT(0x3835, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0258
        gbc.setState(0x8783, 0x1ea5, 0x110, 0xa4d1, 0xae1a, 0x3482, 0x0, 0x1);
        gbc.writeMem(0x8783, { 0x52 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x1ea5, gbc.sp());
        EXPECT(0x8784, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8783));
        // 52 0259
        gbc.setState(0xe0dd, 0x888c, 0x7640, 0x6dfd, 0xe2a5, 0xd3c8, 0x0, 0x0);
        gbc.writeMem(0xe0dd, { 0x52 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x888c, gbc.sp());
        EXPECT(0xe0de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe0dd));
        // 52 025A
        gbc.setState(0x98d8, 0x51a2, 0xea40, 0x53b9, 0xd16b, 0x75cf, 0x1, 0x1);
        gbc.writeMem(0x98d8, { 0x52 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x51a2, gbc.sp());
        EXPECT(0x98d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x98d8));
        // 52 025B
        gbc.setState(0x9434, 0xc997, 0x8eb0, 0xbc2f, 0xc3f7, 0x68d2, 0x0, 0x0);
        gbc.writeMem(0x9434, { 0x52 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc997, gbc.sp());
        EXPECT(0x9435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9434));
        // 52 025C
        gbc.setState(0x8f6f, 0xa8e8, 0x2440, 0x72ef, 0x4911, 0x9d8b, 0x0, 0x0);
        gbc.writeMem(0x8f6f, { 0x52 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa8e8, gbc.sp());
        EXPECT(0x8f70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8f6f));
        // 52 025E
        gbc.setState(0x2de4, 0x81c0, 0x7c50, 0x560, 0x5df1, 0xf74, 0x1, 0x0);
        gbc.writeMem(0x2de4, { 0x52 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x81c0, gbc.sp());
        EXPECT(0x2de5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 025F
        gbc.setState(0x6d98, 0x53e9, 0x8910, 0x12e7, 0x235b, 0xe4a, 0x0, 0x0);
        gbc.writeMem(0x6d98, { 0x52 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x53e9, gbc.sp());
        EXPECT(0x6d99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0260
        gbc.setState(0xb1b6, 0xefe8, 0x16c0, 0xb7cc, 0xdbbe, 0xe42e, 0x0, 0x1);
        gbc.writeMem(0xb1b6, { 0x52 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xefe8, gbc.sp());
        EXPECT(0xb1b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb1b6));
        // 52 0261
        gbc.setState(0x9dea, 0xf7f5, 0xf3e0, 0xc1d9, 0xd701, 0xa5aa, 0x1, 0x0);
        gbc.writeMem(0x9dea, { 0x52 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf7f5, gbc.sp());
        EXPECT(0x9deb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9dea));
        // 52 0262
        gbc.setState(0xe363, 0x7c57, 0x12f0, 0x8dd0, 0x2f26, 0xf8f2, 0x1, 0x1);
        gbc.writeMem(0xe363, { 0x52 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7c57, gbc.sp());
        EXPECT(0xe364, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe363));
        // 52 0263
        gbc.setState(0xd382, 0x634f, 0xa7f0, 0xe8a4, 0xfe34, 0x782a, 0x1, 0x1);
        gbc.writeMem(0xd382, { 0x52 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x634f, gbc.sp());
        EXPECT(0xd383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd382));
        // 52 0264
        gbc.setState(0x5fd9, 0x365c, 0xb960, 0x14db, 0x1c66, 0xf3c0, 0x0, 0x1);
        gbc.writeMem(0x5fd9, { 0x52 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x365c, gbc.sp());
        EXPECT(0x5fda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0265
        gbc.setState(0x371d, 0xffe7, 0x2300, 0xfa3e, 0x8bf6, 0x876e, 0x0, 0x1);
        gbc.writeMem(0x371d, { 0x52 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xffe7, gbc.sp());
        EXPECT(0x371e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0267
        gbc.setState(0x7cd4, 0x64ad, 0xd2f0, 0x2763, 0x3513, 0xb568, 0x1, 0x0);
        gbc.writeMem(0x7cd4, { 0x52 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x64ad, gbc.sp());
        EXPECT(0x7cd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0268
        gbc.setState(0xe54, 0x1605, 0x7df0, 0x1f6, 0xcf41, 0xcdd0, 0x0, 0x1);
        gbc.writeMem(0xe54, { 0x52 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1605, gbc.sp());
        EXPECT(0xe55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 026A
        gbc.setState(0x8017, 0x43e5, 0xd750, 0x6708, 0xcf4a, 0x6b9b, 0x1, 0x0);
        gbc.writeMem(0x8017, { 0x52 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x43e5, gbc.sp());
        EXPECT(0x8018, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8017));
        // 52 026C
        gbc.setState(0x8739, 0x141, 0x6be0, 0x28cd, 0x5f8b, 0x1091, 0x1, 0x0);
        gbc.writeMem(0x8739, { 0x52 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x141, gbc.sp());
        EXPECT(0x873a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8739));
        // 52 026D
        gbc.setState(0x5bb, 0xcf05, 0x5740, 0x4236, 0xc87b, 0xe2fe, 0x0, 0x1);
        gbc.writeMem(0x5bb, { 0x52 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xcf05, gbc.sp());
        EXPECT(0x5bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 026E
        gbc.setState(0x45e4, 0x8630, 0x6c40, 0xf09e, 0x658, 0xf8a9, 0x1, 0x1);
        gbc.writeMem(0x45e4, { 0x52 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8630, gbc.sp());
        EXPECT(0x45e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 026F
        gbc.setState(0xd53, 0x662c, 0x8820, 0xd632, 0x1c6, 0xb153, 0x0, 0x1);
        gbc.writeMem(0xd53, { 0x52 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x662c, gbc.sp());
        EXPECT(0xd54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0270
        gbc.setState(0xeac8, 0xfb5, 0x7160, 0x315a, 0x8655, 0x1d3c, 0x1, 0x1);
        gbc.writeMem(0xeac8, { 0x52 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xfb5, gbc.sp());
        EXPECT(0xeac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xeac8));
        // 52 0271
        gbc.setState(0xe005, 0x52e8, 0x58f0, 0x2e27, 0x864b, 0x82d4, 0x1, 0x0);
        gbc.writeMem(0xe005, { 0x52 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x52e8, gbc.sp());
        EXPECT(0xe006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe005));
        // 52 0272
        gbc.setState(0x4414, 0xfe58, 0xa8d0, 0xb832, 0xf1b0, 0xa28b, 0x0, 0x0);
        gbc.writeMem(0x4414, { 0x52 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xfe58, gbc.sp());
        EXPECT(0x4415, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0273
        gbc.setState(0xa1f8, 0x7a45, 0x3a10, 0x25d8, 0xa601, 0x4c5, 0x0, 0x1);
        gbc.writeMem(0xa1f8, { 0x52 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7a45, gbc.sp());
        EXPECT(0xa1f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa1f8));
        // 52 0274
        gbc.setState(0x8fbd, 0x7f5a, 0x2c30, 0xf7db, 0xf7c6, 0x8f43, 0x0, 0x0);
        gbc.writeMem(0x8fbd, { 0x52 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7f5a, gbc.sp());
        EXPECT(0x8fbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8fbd));
        // 52 0275
        gbc.setState(0x2712, 0x870b, 0xe5f0, 0xd7f7, 0x87c4, 0x1d86, 0x0, 0x1);
        gbc.writeMem(0x2712, { 0x52 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x870b, gbc.sp());
        EXPECT(0x2713, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0277
        gbc.setState(0x547b, 0xf2bb, 0xe9d0, 0x407b, 0x9b4, 0xff6b, 0x0, 0x0);
        gbc.writeMem(0x547b, { 0x52 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf2bb, gbc.sp());
        EXPECT(0x547c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0278
        gbc.setState(0x976, 0x6c0, 0x6300, 0x38bc, 0x53a6, 0x229b, 0x0, 0x0);
        gbc.writeMem(0x976, { 0x52 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6c0, gbc.sp());
        EXPECT(0x977, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0279
        gbc.setState(0x927e, 0xfcfc, 0x97b0, 0xf9dc, 0x2c0f, 0x4176, 0x1, 0x1);
        gbc.writeMem(0x927e, { 0x52 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xfcfc, gbc.sp());
        EXPECT(0x927f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x927e));
        // 52 027A
        gbc.setState(0x35d5, 0xbd93, 0xe20, 0x1ad, 0x76eb, 0xdab1, 0x0, 0x0);
        gbc.writeMem(0x35d5, { 0x52 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbd93, gbc.sp());
        EXPECT(0x35d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 027B
        gbc.setState(0xc4de, 0x11fc, 0xeee0, 0x1220, 0xc07, 0x910f, 0x1, 0x1);
        gbc.writeMem(0xc4de, { 0x52 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x11fc, gbc.sp());
        EXPECT(0xc4df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc4de));
        // 52 027C
        gbc.setState(0x997e, 0x8b08, 0xfdb0, 0xd6fd, 0xf8b4, 0x2415, 0x1, 0x0);
        gbc.writeMem(0x997e, { 0x52 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8b08, gbc.sp());
        EXPECT(0x997f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x997e));
        // 52 027D
        gbc.setState(0x942, 0x22b6, 0x6ff0, 0xd68f, 0x2f8f, 0x47f4, 0x0, 0x0);
        gbc.writeMem(0x942, { 0x52 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x22b6, gbc.sp());
        EXPECT(0x943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 027E
        gbc.setState(0x7563, 0x7f0b, 0x75b0, 0x19f0, 0xdd78, 0x6bdd, 0x1, 0x1);
        gbc.writeMem(0x7563, { 0x52 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7f0b, gbc.sp());
        EXPECT(0x7564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 027F
        gbc.setState(0x2ddf, 0x8a0, 0x42f0, 0x3447, 0xe5ec, 0xeade, 0x1, 0x0);
        gbc.writeMem(0x2ddf, { 0x52 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8a0, gbc.sp());
        EXPECT(0x2de0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0280
        gbc.setState(0x96db, 0x9592, 0x8d30, 0x1655, 0xd554, 0x3b85, 0x1, 0x0);
        gbc.writeMem(0x96db, { 0x52 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9592, gbc.sp());
        EXPECT(0x96dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x96db));
        // 52 0281
        gbc.setState(0x8fe, 0x9aac, 0x91e0, 0x915, 0x6620, 0x1b67, 0x1, 0x0);
        gbc.writeMem(0x8fe, { 0x52 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9aac, gbc.sp());
        EXPECT(0x8ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0282
        gbc.setState(0x89fb, 0xa232, 0xb00, 0xe257, 0x5358, 0x2748, 0x1, 0x0);
        gbc.writeMem(0x89fb, { 0x52 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa232, gbc.sp());
        EXPECT(0x89fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x89fb));
        // 52 0284
        gbc.setState(0xf44, 0x3a65, 0xf1f0, 0xab22, 0x40d2, 0x30bd, 0x1, 0x1);
        gbc.writeMem(0xf44, { 0x52 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3a65, gbc.sp());
        EXPECT(0xf45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0285
        gbc.setState(0x1020, 0x4a81, 0x7010, 0xa349, 0x309a, 0x5cb8, 0x0, 0x0);
        gbc.writeMem(0x1020, { 0x52 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4a81, gbc.sp());
        EXPECT(0x1021, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0286
        gbc.setState(0x9479, 0x47ee, 0x76d0, 0x8dd7, 0x66ca, 0x4bcf, 0x1, 0x0);
        gbc.writeMem(0x9479, { 0x52 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x47ee, gbc.sp());
        EXPECT(0x947a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9479));
        // 52 0288
        gbc.setState(0x71f5, 0xa11b, 0x24f0, 0xce19, 0x99c0, 0x4c11, 0x0, 0x1);
        gbc.writeMem(0x71f5, { 0x52 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa11b, gbc.sp());
        EXPECT(0x71f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0289
        gbc.setState(0x424c, 0xe368, 0x36c0, 0xbf94, 0xfaa, 0x4336, 0x0, 0x0);
        gbc.writeMem(0x424c, { 0x52 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe368, gbc.sp());
        EXPECT(0x424d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 028B
        gbc.setState(0x4f4a, 0xa0c0, 0x2080, 0x5a6, 0xc69a, 0x4aad, 0x1, 0x0);
        gbc.writeMem(0x4f4a, { 0x52 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa0c0, gbc.sp());
        EXPECT(0x4f4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 028C
        gbc.setState(0xbc43, 0x1de6, 0x4680, 0x8d69, 0x41d8, 0x3516, 0x1, 0x0);
        gbc.writeMem(0xbc43, { 0x52 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1de6, gbc.sp());
        EXPECT(0xbc44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xbc43));
        // 52 028D
        gbc.setState(0xd897, 0xca54, 0x3de0, 0xc9c4, 0x1736, 0x29ca, 0x0, 0x0);
        gbc.writeMem(0xd897, { 0x52 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xca54, gbc.sp());
        EXPECT(0xd898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd897));
        // 52 028E
        gbc.setState(0x4711, 0x1e65, 0xb0, 0x4b7b, 0xdb8b, 0x8a7a, 0x1, 0x0);
        gbc.writeMem(0x4711, { 0x52 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1e65, gbc.sp());
        EXPECT(0x4712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 028F
        gbc.setState(0x7244, 0xc81d, 0xbe30, 0x9000, 0x6f19, 0x77a6, 0x1, 0x1);
        gbc.writeMem(0x7244, { 0x52 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc81d, gbc.sp());
        EXPECT(0x7245, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0290
        gbc.setState(0xa6bc, 0xcbad, 0x4420, 0x692b, 0xfa43, 0x2942, 0x1, 0x0);
        gbc.writeMem(0xa6bc, { 0x52 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xcbad, gbc.sp());
        EXPECT(0xa6bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa6bc));
        // 52 0291
        gbc.setState(0x8a11, 0x8330, 0x8e20, 0x61d3, 0xf33c, 0xc7b6, 0x1, 0x1);
        gbc.writeMem(0x8a11, { 0x52 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8330, gbc.sp());
        EXPECT(0x8a12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8a11));
        // 52 0292
        gbc.setState(0x5ac3, 0x7c2, 0x32a0, 0xfbb2, 0xcc78, 0xad9a, 0x0, 0x0);
        gbc.writeMem(0x5ac3, { 0x52 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7c2, gbc.sp());
        EXPECT(0x5ac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0293
        gbc.setState(0xb816, 0x1773, 0x9340, 0x3c16, 0x2cca, 0x1c8c, 0x0, 0x1);
        gbc.writeMem(0xb816, { 0x52 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1773, gbc.sp());
        EXPECT(0xb817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb816));
        // 52 0294
        gbc.setState(0x912c, 0x7f4, 0xaf10, 0xb52a, 0xdb90, 0xebaf, 0x0, 0x1);
        gbc.writeMem(0x912c, { 0x52 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7f4, gbc.sp());
        EXPECT(0x912d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x912c));
        // 52 0295
        gbc.setState(0x42ee, 0xc330, 0x6750, 0x21c6, 0x57f0, 0x7e4b, 0x1, 0x0);
        gbc.writeMem(0x42ee, { 0x52 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc330, gbc.sp());
        EXPECT(0x42ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0296
        gbc.setState(0xa94, 0x4a61, 0x9d50, 0x8889, 0x78de, 0x2520, 0x1, 0x0);
        gbc.writeMem(0xa94, { 0x52 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4a61, gbc.sp());
        EXPECT(0xa95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0297
        gbc.setState(0x2cbd, 0xd9ce, 0x86c0, 0x88dd, 0xb76f, 0xc151, 0x0, 0x0);
        gbc.writeMem(0x2cbd, { 0x52 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd9ce, gbc.sp());
        EXPECT(0x2cbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0298
        gbc.setState(0x6fbc, 0xe8c5, 0xa170, 0xc6b8, 0x819e, 0x358f, 0x1, 0x0);
        gbc.writeMem(0x6fbc, { 0x52 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe8c5, gbc.sp());
        EXPECT(0x6fbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 029A
        gbc.setState(0x7487, 0xc0d1, 0xdab0, 0xb6dc, 0xf903, 0xa561, 0x0, 0x0);
        gbc.writeMem(0x7487, { 0x52 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc0d1, gbc.sp());
        EXPECT(0x7488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 029B
        gbc.setState(0x990b, 0x392b, 0x3e40, 0x7319, 0xfb5, 0xb745, 0x1, 0x1);
        gbc.writeMem(0x990b, { 0x52 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x392b, gbc.sp());
        EXPECT(0x990c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x990b));
        // 52 029C
        gbc.setState(0x8b7d, 0x1587, 0xf060, 0x4bb4, 0xb7fe, 0xdcc7, 0x1, 0x1);
        gbc.writeMem(0x8b7d, { 0x52 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1587, gbc.sp());
        EXPECT(0x8b7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8b7d));
        // 52 029D
        gbc.setState(0x44bb, 0x3987, 0xd5d0, 0xde7e, 0x8ac1, 0x383d, 0x0, 0x0);
        gbc.writeMem(0x44bb, { 0x52 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3987, gbc.sp());
        EXPECT(0x44bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 029E
        gbc.setState(0xb160, 0x709e, 0x560, 0xc676, 0x894b, 0x54c0, 0x1, 0x0);
        gbc.writeMem(0xb160, { 0x52 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x709e, gbc.sp());
        EXPECT(0xb161, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb160));
        // 52 029F
        gbc.setState(0x22f2, 0xc8f1, 0xd840, 0x6be6, 0xd7f7, 0x462, 0x1, 0x1);
        gbc.writeMem(0x22f2, { 0x52 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc8f1, gbc.sp());
        EXPECT(0x22f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 02A0
        gbc.setState(0xcb0b, 0xb9b, 0x5040, 0x4406, 0x95b6, 0xf502, 0x1, 0x1);
        gbc.writeMem(0xcb0b, { 0x52 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb9b, gbc.sp());
        EXPECT(0xcb0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xcb0b));
        // 52 02A1
        gbc.setState(0xeaa, 0x5dd, 0x6570, 0x8fd6, 0xe565, 0xf73b, 0x1, 0x1);
        gbc.writeMem(0xeaa, { 0x52 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5dd, gbc.sp());
        EXPECT(0xeab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 02A2
        gbc.setState(0x6fd2, 0x5649, 0x5620, 0xb593, 0x6b74, 0x4bb7, 0x0, 0x1);
        gbc.writeMem(0x6fd2, { 0x52 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5649, gbc.sp());
        EXPECT(0x6fd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 02A3
        gbc.setState(0x7eb5, 0x8acf, 0x81c0, 0xd57f, 0xae61, 0xe554, 0x0, 0x0);
        gbc.writeMem(0x7eb5, { 0x52 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8acf, gbc.sp());
        EXPECT(0x7eb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 02A4
        gbc.setState(0xaa4f, 0x95e4, 0x2f50, 0x16f8, 0x9003, 0x2c4c, 0x1, 0x1);
        gbc.writeMem(0xaa4f, { 0x52 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x95e4, gbc.sp());
        EXPECT(0xaa50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xaa4f));
        // 52 02A5
        gbc.setState(0xaeaa, 0x2aeb, 0xc7c0, 0x375e, 0x7ff9, 0xb73e, 0x1, 0x1);
        gbc.writeMem(0xaeaa, { 0x52 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2aeb, gbc.sp());
        EXPECT(0xaeab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xaeaa));
        // 52 02A6
        gbc.setState(0xcfba, 0x64e3, 0x82c0, 0xaec0, 0x7584, 0xd3b2, 0x1, 0x0);
        gbc.writeMem(0xcfba, { 0x52 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x64e3, gbc.sp());
        EXPECT(0xcfbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xcfba));
        // 52 02A7
        gbc.setState(0xe4f3, 0xe584, 0xdf50, 0x2e5e, 0xde9d, 0xda7e, 0x1, 0x0);
        gbc.writeMem(0xe4f3, { 0x52 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe584, gbc.sp());
        EXPECT(0xe4f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe4f3));
        // 52 02A8
        gbc.setState(0x5857, 0x2b90, 0x1b10, 0x20fc, 0x9bf8, 0x58d6, 0x1, 0x0);
        gbc.writeMem(0x5857, { 0x52 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2b90, gbc.sp());
        EXPECT(0x5858, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 02A9
        gbc.setState(0x207a, 0x6ff2, 0xddb0, 0x2b91, 0x9699, 0xfa78, 0x0, 0x1);
        gbc.writeMem(0x207a, { 0x52 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6ff2, gbc.sp());
        EXPECT(0x207b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 02AA
        gbc.setState(0xcf45, 0xd545, 0x2690, 0x8c55, 0x8ebf, 0x9c90, 0x1, 0x1);
        gbc.writeMem(0xcf45, { 0x52 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd545, gbc.sp());
        EXPECT(0xcf46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xcf45));
        // 52 02AC
        gbc.setState(0x69d, 0x9806, 0xa6a0, 0xbe1, 0x113f, 0x760e, 0x1, 0x0);
        gbc.writeMem(0x69d, { 0x52 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9806, gbc.sp());
        EXPECT(0x69e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 02AD
        gbc.setState(0x9940, 0xb878, 0xb980, 0x841, 0x94c2, 0x4330, 0x1, 0x1);
        gbc.writeMem(0x9940, { 0x52 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb878, gbc.sp());
        EXPECT(0x9941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9940));
        // 52 02AE
        gbc.setState(0x11fc, 0x912b, 0x4d0, 0xc485, 0xfe7b, 0xd3cf, 0x1, 0x0);
        gbc.writeMem(0x11fc, { 0x52 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x912b, gbc.sp());
        EXPECT(0x11fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 02AF
        gbc.setState(0xd17a, 0x4bd8, 0xfd70, 0xdbb9, 0xeac4, 0x3f30, 0x0, 0x0);
        gbc.writeMem(0xd17a, { 0x52 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4bd8, gbc.sp());
        EXPECT(0xd17b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd17a));
        // 52 02B0
        gbc.setState(0x113d, 0x6de2, 0x7800, 0x2b45, 0xdd85, 0x7fa3, 0x1, 0x1);
        gbc.writeMem(0x113d, { 0x52 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6de2, gbc.sp());
        EXPECT(0x113e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 02B1
        gbc.setState(0x6015, 0xd303, 0xe080, 0x8b50, 0xc325, 0x2bad, 0x0, 0x1);
        gbc.writeMem(0x6015, { 0x52 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd303, gbc.sp());
        EXPECT(0x6016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 02B2
        gbc.setState(0x1262, 0xb0b8, 0x8400, 0x31c2, 0x174c, 0x81e9, 0x1, 0x1);
        gbc.writeMem(0x1262, { 0x52 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb0b8, gbc.sp());
        EXPECT(0x1263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 02B3
        gbc.setState(0xa531, 0x9547, 0xfc0, 0x5847, 0x8cf3, 0x6cd1, 0x0, 0x1);
        gbc.writeMem(0xa531, { 0x52 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9547, gbc.sp());
        EXPECT(0xa532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa531));
        // 52 02B4
        gbc.setState(0x96e9, 0xf009, 0x63c0, 0x650d, 0xe987, 0x3289, 0x0, 0x1);
        gbc.writeMem(0x96e9, { 0x52 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf009, gbc.sp());
        EXPECT(0x96ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x96e9));
        // 52 02B5
        gbc.setState(0xafe4, 0xd600, 0xc940, 0x4d50, 0xa202, 0x8f63, 0x0, 0x0);
        gbc.writeMem(0xafe4, { 0x52 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd600, gbc.sp());
        EXPECT(0xafe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xafe4));
        // 52 02B7
        gbc.setState(0x74e7, 0xf4d8, 0x5fc0, 0x184a, 0x91b1, 0x5ed8, 0x0, 0x0);
        gbc.writeMem(0x74e7, { 0x52 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf4d8, gbc.sp());
        EXPECT(0x74e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 02B8
        gbc.setState(0x54ff, 0xc91f, 0x9c70, 0x96c6, 0xc25a, 0xf86b, 0x0, 0x0);
        gbc.writeMem(0x54ff, { 0x52 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc91f, gbc.sp());
        EXPECT(0x5500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 02B9
        gbc.setState(0xcab1, 0x5bcf, 0x7360, 0x188b, 0x5822, 0xe0e8, 0x0, 0x1);
        gbc.writeMem(0xcab1, { 0x52 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5bcf, gbc.sp());
        EXPECT(0xcab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xcab1));
        // 52 02BA
        gbc.setState(0xe043, 0xd71b, 0x4760, 0x8dba, 0xdf20, 0x4b08, 0x1, 0x0);
        gbc.writeMem(0xe043, { 0x52 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd71b, gbc.sp());
        EXPECT(0xe044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe043));
        // 52 02BB
        gbc.setState(0x7847, 0x3bd4, 0xd810, 0xa6d5, 0xecd8, 0xb108, 0x0, 0x0);
        gbc.writeMem(0x7847, { 0x52 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3bd4, gbc.sp());
        EXPECT(0x7848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 02BC
        gbc.setState(0xb70d, 0x1fbb, 0x8520, 0x272f, 0x8722, 0x6419, 0x1, 0x1);
        gbc.writeMem(0xb70d, { 0x52 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1fbb, gbc.sp());
        EXPECT(0xb70e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb70d));
        // 52 02BD
        gbc.setState(0x71de, 0xd021, 0xd80, 0x1c48, 0x60e, 0x66cd, 0x0, 0x1);
        gbc.writeMem(0x71de, { 0x52 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd021, gbc.sp());
        EXPECT(0x71df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 02BE
        gbc.setState(0xba0f, 0xe318, 0x6cf0, 0xe120, 0x5ced, 0xb9e3, 0x0, 0x0);
        gbc.writeMem(0xba0f, { 0x52 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe318, gbc.sp());
        EXPECT(0xba10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xba0f));
        // 52 02C0
        gbc.setState(0x9f2e, 0x26f6, 0x100, 0xef67, 0x54fc, 0x67dc, 0x0, 0x1);
        gbc.writeMem(0x9f2e, { 0x52 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x26f6, gbc.sp());
        EXPECT(0x9f2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9f2e));
        // 52 02C1
        gbc.setState(0x7eb4, 0x6c5d, 0xa070, 0x45fa, 0x47da, 0x8d2e, 0x1, 0x0);
        gbc.writeMem(0x7eb4, { 0x52 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6c5d, gbc.sp());
        EXPECT(0x7eb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 02C2
        gbc.setState(0xab2b, 0xec18, 0xcd00, 0x6015, 0x9224, 0x33c6, 0x1, 0x0);
        gbc.writeMem(0xab2b, { 0x52 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xec18, gbc.sp());
        EXPECT(0xab2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xab2b));
        // 52 02C3
        gbc.setState(0x746c, 0xff95, 0x4c40, 0xbb89, 0xe29d, 0xa0a6, 0x1, 0x0);
        gbc.writeMem(0x746c, { 0x52 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xff95, gbc.sp());
        EXPECT(0x746d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 02C4
        gbc.setState(0x72b6, 0xfd64, 0xde10, 0x2022, 0x83d6, 0x5a90, 0x0, 0x1);
        gbc.writeMem(0x72b6, { 0x52 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xfd64, gbc.sp());
        EXPECT(0x72b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 02C5
        gbc.setState(0xda6b, 0x9b3c, 0x5940, 0x3f10, 0x7aca, 0x942e, 0x0, 0x0);
        gbc.writeMem(0xda6b, { 0x52 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9b3c, gbc.sp());
        EXPECT(0xda6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xda6b));
        // 52 02C6
        gbc.setState(0x83da, 0x97a8, 0x80e0, 0x90a4, 0x827c, 0xc588, 0x1, 0x0);
        gbc.writeMem(0x83da, { 0x52 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x97a8, gbc.sp());
        EXPECT(0x83db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x83da));
        // 52 02C7
        gbc.setState(0x2f5f, 0x46f8, 0x77e0, 0x4a0a, 0x3e96, 0x7975, 0x0, 0x1);
        gbc.writeMem(0x2f5f, { 0x52 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x46f8, gbc.sp());
        EXPECT(0x2f60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 02C8
        gbc.setState(0xb202, 0xac25, 0xa970, 0xa9e4, 0x5937, 0xd05, 0x0, 0x1);
        gbc.writeMem(0xb202, { 0x52 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xac25, gbc.sp());
        EXPECT(0xb203, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb202));
        // 52 02C9
        gbc.setState(0x3ce9, 0x18f9, 0x600, 0xf0ea, 0x620a, 0xc7db, 0x1, 0x0);
        gbc.writeMem(0x3ce9, { 0x52 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x18f9, gbc.sp());
        EXPECT(0x3cea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 02CA
        gbc.setState(0x1584, 0xed32, 0xe000, 0xd19d, 0xd995, 0x68f5, 0x0, 0x1);
        gbc.writeMem(0x1584, { 0x52 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xed32, gbc.sp());
        EXPECT(0x1585, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 02CB
        gbc.setState(0xb889, 0xf771, 0x9130, 0xd59f, 0xe3bc, 0x630, 0x0, 0x1);
        gbc.writeMem(0xb889, { 0x52 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf771, gbc.sp());
        EXPECT(0xb88a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb889));
        // 52 02CC
        gbc.setState(0x1aba, 0x73ad, 0xd2c0, 0x26d3, 0xa4c, 0x9a75, 0x1, 0x1);
        gbc.writeMem(0x1aba, { 0x52 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x73ad, gbc.sp());
        EXPECT(0x1abb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 02CD
        gbc.setState(0xdcaa, 0xf87, 0xcf80, 0xd80, 0x9afb, 0x9a8a, 0x1, 0x1);
        gbc.writeMem(0xdcaa, { 0x52 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf87, gbc.sp());
        EXPECT(0xdcab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xdcaa));
        // 52 02CE
        gbc.setState(0x159b, 0xab7c, 0xc5f0, 0xf97d, 0x1045, 0xf5d2, 0x0, 0x1);
        gbc.writeMem(0x159b, { 0x52 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xab7c, gbc.sp());
        EXPECT(0x159c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 02CF
        gbc.setState(0xaf03, 0x2496, 0x2230, 0x4b7, 0x38fe, 0x2d82, 0x0, 0x0);
        gbc.writeMem(0xaf03, { 0x52 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2496, gbc.sp());
        EXPECT(0xaf04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xaf03));
        // 52 02D0
        gbc.setState(0x78a0, 0x8da2, 0x810, 0x18bd, 0x1821, 0x4be3, 0x1, 0x1);
        gbc.writeMem(0x78a0, { 0x52 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8da2, gbc.sp());
        EXPECT(0x78a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 02D1
        gbc.setState(0xda41, 0x2a, 0xeb50, 0x4de3, 0xae47, 0x12e4, 0x0, 0x1);
        gbc.writeMem(0xda41, { 0x52 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2a, gbc.sp());
        EXPECT(0xda42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xda41));
        // 52 02D3
        gbc.setState(0xc401, 0x3cd6, 0x64b0, 0x127a, 0x6275, 0x409c, 0x1, 0x0);
        gbc.writeMem(0xc401, { 0x52 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3cd6, gbc.sp());
        EXPECT(0xc402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc401));
        // 52 02D4
        gbc.setState(0xb59e, 0x1edb, 0xa4f0, 0x7a9a, 0xd525, 0x85bd, 0x1, 0x0);
        gbc.writeMem(0xb59e, { 0x52 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1edb, gbc.sp());
        EXPECT(0xb59f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb59e));
        // 52 02D5
        gbc.setState(0x1e01, 0x7f64, 0x3eb0, 0xd187, 0xfcbd, 0xb372, 0x0, 0x1);
        gbc.writeMem(0x1e01, { 0x52 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7f64, gbc.sp());
        EXPECT(0x1e02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 02D6
        gbc.setState(0x6231, 0x2843, 0xd230, 0x842c, 0x7b22, 0x938c, 0x0, 0x1);
        gbc.writeMem(0x6231, { 0x52 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2843, gbc.sp());
        EXPECT(0x6232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 02D7
        gbc.setState(0x7273, 0xd1ea, 0xad90, 0xdaf5, 0x613e, 0x39d1, 0x0, 0x1);
        gbc.writeMem(0x7273, { 0x52 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd1ea, gbc.sp());
        EXPECT(0x7274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 02D8
        gbc.setState(0x8373, 0x2bb6, 0xc1d0, 0x5aff, 0x4b4d, 0xbe6f, 0x1, 0x1);
        gbc.writeMem(0x8373, { 0x52 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2bb6, gbc.sp());
        EXPECT(0x8374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8373));
        // 52 02D9
        gbc.setState(0x9c1, 0xef42, 0x860, 0x7e9f, 0x2832, 0xc57f, 0x0, 0x1);
        gbc.writeMem(0x9c1, { 0x52 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xef42, gbc.sp());
        EXPECT(0x9c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 02DA
        gbc.setState(0xac81, 0x1c97, 0x73c0, 0x9e6b, 0x143d, 0xb3d5, 0x0, 0x1);
        gbc.writeMem(0xac81, { 0x52 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1c97, gbc.sp());
        EXPECT(0xac82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xac81));
        // 52 02DB
        gbc.setState(0x8a9a, 0xf011, 0xacf0, 0x6dd, 0xba32, 0x220e, 0x0, 0x1);
        gbc.writeMem(0x8a9a, { 0x52 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf011, gbc.sp());
        EXPECT(0x8a9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8a9a));
        // 52 02DD
        gbc.setState(0xa262, 0x4a8c, 0xbdd0, 0xb7e, 0x32d4, 0x3088, 0x0, 0x0);
        gbc.writeMem(0xa262, { 0x52 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4a8c, gbc.sp());
        EXPECT(0xa263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa262));
        // 52 02DE
        gbc.setState(0xb245, 0xe9d8, 0x3eb0, 0x8384, 0xbb91, 0xf05c, 0x0, 0x1);
        gbc.writeMem(0xb245, { 0x52 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe9d8, gbc.sp());
        EXPECT(0xb246, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb245));
        // 52 02DF
        gbc.setState(0x75ae, 0x12a0, 0x35f0, 0x53bd, 0x302c, 0xded3, 0x1, 0x0);
        gbc.writeMem(0x75ae, { 0x52 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x12a0, gbc.sp());
        EXPECT(0x75af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 02E0
        gbc.setState(0xbb24, 0xb33c, 0x6360, 0x37e1, 0x9e1e, 0x9fb0, 0x1, 0x1);
        gbc.writeMem(0xbb24, { 0x52 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb33c, gbc.sp());
        EXPECT(0xbb25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xbb24));
        // 52 02E1
        gbc.setState(0x7d36, 0xd8fe, 0x5c10, 0x918e, 0x6159, 0x378d, 0x0, 0x0);
        gbc.writeMem(0x7d36, { 0x52 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd8fe, gbc.sp());
        EXPECT(0x7d37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 02E2
        gbc.setState(0x3e12, 0x868e, 0x4480, 0x51cb, 0x2bf6, 0x4d49, 0x0, 0x1);
        gbc.writeMem(0x3e12, { 0x52 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x868e, gbc.sp());
        EXPECT(0x3e13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 02E3
        gbc.setState(0x82a9, 0xb08, 0xe8b0, 0x520b, 0xee74, 0xf6dc, 0x1, 0x0);
        gbc.writeMem(0x82a9, { 0x52 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb08, gbc.sp());
        EXPECT(0x82aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x82a9));
        // 52 02E4
        gbc.setState(0xc9a1, 0xf99a, 0xd90, 0x996b, 0xca84, 0x3df2, 0x0, 0x1);
        gbc.writeMem(0xc9a1, { 0x52 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf99a, gbc.sp());
        EXPECT(0xc9a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc9a1));
        // 52 02E6
        gbc.setState(0x8e, 0x7d90, 0x4d30, 0x8a61, 0x8693, 0xf9b0, 0x1, 0x0);
        gbc.writeMem(0x8e, { 0x52 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7d90, gbc.sp());
        EXPECT(0x8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 02E7
        gbc.setState(0xac38, 0x9543, 0xa0d0, 0xc31f, 0xa773, 0x7c8f, 0x0, 0x1);
        gbc.writeMem(0xac38, { 0x52 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9543, gbc.sp());
        EXPECT(0xac39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xac38));
        // 52 02E8
        gbc.setState(0x2db0, 0xfb6, 0x7790, 0x3f5b, 0x5fdf, 0x3951, 0x0, 0x1);
        gbc.writeMem(0x2db0, { 0x52 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xfb6, gbc.sp());
        EXPECT(0x2db1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 02EA
        gbc.setState(0x252a, 0x6db8, 0x6c70, 0x296f, 0x7027, 0x2328, 0x0, 0x1);
        gbc.writeMem(0x252a, { 0x52 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6db8, gbc.sp());
        EXPECT(0x252b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 02EB
        gbc.setState(0x19f8, 0x1246, 0xc0e0, 0x9ae4, 0x4a6b, 0x4fec, 0x0, 0x1);
        gbc.writeMem(0x19f8, { 0x52 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1246, gbc.sp());
        EXPECT(0x19f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 02EC
        gbc.setState(0xedcc, 0xf497, 0xa5b0, 0xe5d8, 0xc661, 0x9771, 0x0, 0x1);
        gbc.writeMem(0xedcc, { 0x52 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf497, gbc.sp());
        EXPECT(0xedcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xedcc));
        // 52 02ED
        gbc.setState(0x7f9c, 0x13c1, 0x4a10, 0x9b5f, 0xc054, 0xb4cc, 0x0, 0x1);
        gbc.writeMem(0x7f9c, { 0x52 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x13c1, gbc.sp());
        EXPECT(0x7f9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 02EE
        gbc.setState(0xeb56, 0x7511, 0x33c0, 0xb68b, 0xd434, 0x52d7, 0x1, 0x0);
        gbc.writeMem(0xeb56, { 0x52 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7511, gbc.sp());
        EXPECT(0xeb57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xeb56));
        // 52 02EF
        gbc.setState(0xe23b, 0x253c, 0x1c40, 0xea04, 0x79ed, 0x2479, 0x0, 0x0);
        gbc.writeMem(0xe23b, { 0x52 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x253c, gbc.sp());
        EXPECT(0xe23c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe23b));
        // 52 02F0
        gbc.setState(0x3b71, 0xa650, 0xd010, 0xb18c, 0x900c, 0x2376, 0x0, 0x0);
        gbc.writeMem(0x3b71, { 0x52 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa650, gbc.sp());
        EXPECT(0x3b72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 02F1
        gbc.setState(0xcea3, 0xdd7, 0xec90, 0x968e, 0xca74, 0x3db6, 0x1, 0x1);
        gbc.writeMem(0xcea3, { 0x52 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xdd7, gbc.sp());
        EXPECT(0xcea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xcea3));
        // 52 02F2
        gbc.setState(0x1d26, 0xa211, 0xe810, 0xbfa4, 0x2361, 0xcd24, 0x1, 0x0);
        gbc.writeMem(0x1d26, { 0x52 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa211, gbc.sp());
        EXPECT(0x1d27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 02F3
        gbc.setState(0x4049, 0x29e, 0x9380, 0xff24, 0x5f08, 0xb043, 0x1, 0x1);
        gbc.writeMem(0x4049, { 0x52 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x29e, gbc.sp());
        EXPECT(0x404a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 02F4
        gbc.setState(0x806f, 0x3538, 0x9360, 0xa94d, 0xa74c, 0xf819, 0x0, 0x1);
        gbc.writeMem(0x806f, { 0x52 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3538, gbc.sp());
        EXPECT(0x8070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x806f));
        // 52 02F5
        gbc.setState(0x6884, 0xca50, 0xcce0, 0xa1c4, 0xf03f, 0xa20f, 0x1, 0x0);
        gbc.writeMem(0x6884, { 0x52 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xca50, gbc.sp());
        EXPECT(0x6885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 02F6
        gbc.setState(0xb57d, 0x5a17, 0xe700, 0x80f, 0xe7d6, 0x6779, 0x0, 0x0);
        gbc.writeMem(0xb57d, { 0x52 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5a17, gbc.sp());
        EXPECT(0xb57e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb57d));
        // 52 02F7
        gbc.setState(0xb58f, 0xa254, 0x6870, 0x59aa, 0x5e95, 0xb750, 0x0, 0x0);
        gbc.writeMem(0xb58f, { 0x52 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa254, gbc.sp());
        EXPECT(0xb590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb58f));
        // 52 02F8
        gbc.setState(0xe87e, 0xcb, 0x2400, 0x4e68, 0xdab0, 0xa538, 0x1, 0x0);
        gbc.writeMem(0xe87e, { 0x52 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xcb, gbc.sp());
        EXPECT(0xe87f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe87e));
        // 52 02F9
        gbc.setState(0x6c99, 0x9edd, 0xbb20, 0x4a5b, 0xa435, 0x618d, 0x0, 0x0);
        gbc.writeMem(0x6c99, { 0x52 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9edd, gbc.sp());
        EXPECT(0x6c9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 02FA
        gbc.setState(0x48cb, 0x7238, 0xd600, 0x470a, 0x2d40, 0xd25e, 0x1, 0x0);
        gbc.writeMem(0x48cb, { 0x52 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7238, gbc.sp());
        EXPECT(0x48cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 02FB
        gbc.setState(0xee6d, 0x228d, 0x1020, 0x11b6, 0xf72e, 0x3d6b, 0x0, 0x0);
        gbc.writeMem(0xee6d, { 0x52 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x228d, gbc.sp());
        EXPECT(0xee6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xee6d));
        // 52 02FC
        gbc.setState(0xc52e, 0x1ea9, 0x4480, 0x4e84, 0x6553, 0x5e36, 0x0, 0x1);
        gbc.writeMem(0xc52e, { 0x52 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1ea9, gbc.sp());
        EXPECT(0xc52f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc52e));
        // 52 02FD
        gbc.setState(0x3659, 0xa239, 0xe740, 0x8d3b, 0xca2, 0x1bee, 0x1, 0x0);
        gbc.writeMem(0x3659, { 0x52 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa239, gbc.sp());
        EXPECT(0x365a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 02FE
        gbc.setState(0xd0ef, 0x2d8, 0x7980, 0x452e, 0x46dc, 0xf2bf, 0x0, 0x0);
        gbc.writeMem(0xd0ef, { 0x52 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2d8, gbc.sp());
        EXPECT(0xd0f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd0ef));
        // 52 02FF
        gbc.setState(0xe581, 0x7294, 0x2820, 0xc4c, 0x38e8, 0x48b9, 0x1, 0x0);
        gbc.writeMem(0xe581, { 0x52 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7294, gbc.sp());
        EXPECT(0xe582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe581));
        // 52 0300
        gbc.setState(0x9b06, 0x723d, 0x4b90, 0xe2d2, 0xf4b7, 0x4628, 0x1, 0x1);
        gbc.writeMem(0x9b06, { 0x52 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x723d, gbc.sp());
        EXPECT(0x9b07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9b06));
        // 52 0301
        gbc.setState(0x87d3, 0xf890, 0x1af0, 0xb08c, 0xec2d, 0xc0d7, 0x1, 0x1);
        gbc.writeMem(0x87d3, { 0x52 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf890, gbc.sp());
        EXPECT(0x87d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x87d3));
        // 52 0302
        gbc.setState(0x147d, 0xc4e7, 0xdc40, 0x84cd, 0xebc8, 0x6a0a, 0x1, 0x0);
        gbc.writeMem(0x147d, { 0x52 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc4e7, gbc.sp());
        EXPECT(0x147e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0303
        gbc.setState(0xb31e, 0x8302, 0x7de0, 0x74de, 0x2d78, 0xa910, 0x0, 0x1);
        gbc.writeMem(0xb31e, { 0x52 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8302, gbc.sp());
        EXPECT(0xb31f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb31e));
        // 52 0304
        gbc.setState(0x571d, 0x30ae, 0x4210, 0x9f90, 0xb798, 0x94cb, 0x0, 0x1);
        gbc.writeMem(0x571d, { 0x52 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x30ae, gbc.sp());
        EXPECT(0x571e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0305
        gbc.setState(0x7dc7, 0xc0a0, 0xddd0, 0xb876, 0x4e35, 0xea19, 0x0, 0x1);
        gbc.writeMem(0x7dc7, { 0x52 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc0a0, gbc.sp());
        EXPECT(0x7dc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0306
        gbc.setState(0x7bfe, 0x5a7f, 0xea20, 0x8e0f, 0x4665, 0x9fd8, 0x1, 0x1);
        gbc.writeMem(0x7bfe, { 0x52 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5a7f, gbc.sp());
        EXPECT(0x7bff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0307
        gbc.setState(0x67fb, 0x67b7, 0xd270, 0x813b, 0x90a7, 0x71ff, 0x1, 0x1);
        gbc.writeMem(0x67fb, { 0x52 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x67b7, gbc.sp());
        EXPECT(0x67fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0308
        gbc.setState(0x6a61, 0x9f2a, 0xbe60, 0xd5e, 0x488f, 0x4bef, 0x0, 0x0);
        gbc.writeMem(0x6a61, { 0x52 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9f2a, gbc.sp());
        EXPECT(0x6a62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0309
        gbc.setState(0x47c8, 0x13b9, 0x2e10, 0x319, 0x7b97, 0x1685, 0x1, 0x0);
        gbc.writeMem(0x47c8, { 0x52 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x13b9, gbc.sp());
        EXPECT(0x47c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 030A
        gbc.setState(0x1adf, 0x657b, 0x3680, 0xbb79, 0xf48e, 0xbbce, 0x1, 0x0);
        gbc.writeMem(0x1adf, { 0x52 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x657b, gbc.sp());
        EXPECT(0x1ae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 030B
        gbc.setState(0x95f8, 0xc6d2, 0xa60, 0x9fa8, 0x7ba6, 0x7761, 0x1, 0x1);
        gbc.writeMem(0x95f8, { 0x52 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc6d2, gbc.sp());
        EXPECT(0x95f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x95f8));
        // 52 030C
        gbc.setState(0x182, 0x9340, 0xcce0, 0x2ecc, 0xf171, 0x56fe, 0x1, 0x1);
        gbc.writeMem(0x182, { 0x52 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9340, gbc.sp());
        EXPECT(0x183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 030D
        gbc.setState(0xa472, 0x7e8c, 0x1610, 0xe9e3, 0x475a, 0xf70e, 0x1, 0x1);
        gbc.writeMem(0xa472, { 0x52 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7e8c, gbc.sp());
        EXPECT(0xa473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa472));
        // 52 030E
        gbc.setState(0x2af, 0xa854, 0x930, 0x49b4, 0x6b23, 0x96b9, 0x0, 0x1);
        gbc.writeMem(0x2af, { 0x52 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa854, gbc.sp());
        EXPECT(0x2b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 030F
        gbc.setState(0xc543, 0x15d, 0xaea0, 0xcca5, 0xe3bc, 0xf257, 0x0, 0x0);
        gbc.writeMem(0xc543, { 0x52 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x15d, gbc.sp());
        EXPECT(0xc544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc543));
        // 52 0310
        gbc.setState(0xd007, 0xe6be, 0x88c0, 0x11f0, 0x6214, 0xb666, 0x0, 0x1);
        gbc.writeMem(0xd007, { 0x52 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe6be, gbc.sp());
        EXPECT(0xd008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd007));
        // 52 0311
        gbc.setState(0xa3e0, 0x7095, 0x3300, 0x8fd8, 0x85e9, 0xfdc8, 0x0, 0x1);
        gbc.writeMem(0xa3e0, { 0x52 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7095, gbc.sp());
        EXPECT(0xa3e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa3e0));
        // 52 0312
        gbc.setState(0xa762, 0x9217, 0xa360, 0x48da, 0xee3a, 0xae93, 0x1, 0x0);
        gbc.writeMem(0xa762, { 0x52 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9217, gbc.sp());
        EXPECT(0xa763, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa762));
        // 52 0313
        gbc.setState(0x944c, 0xf58b, 0xa780, 0x6cc4, 0x1db, 0x9d6c, 0x1, 0x0);
        gbc.writeMem(0x944c, { 0x52 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf58b, gbc.sp());
        EXPECT(0x944d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x944c));
        // 52 0314
        gbc.setState(0x1a70, 0xa92, 0xc020, 0x9e22, 0x2072, 0xc9f7, 0x0, 0x0);
        gbc.writeMem(0x1a70, { 0x52 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa92, gbc.sp());
        EXPECT(0x1a71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0315
        gbc.setState(0x9f0f, 0x2c8b, 0x1c00, 0x358e, 0x7c48, 0xe210, 0x1, 0x1);
        gbc.writeMem(0x9f0f, { 0x52 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2c8b, gbc.sp());
        EXPECT(0x9f10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9f0f));
        // 52 0317
        gbc.setState(0x35c2, 0xc6f2, 0x5da0, 0xd23a, 0xba7, 0x79da, 0x0, 0x1);
        gbc.writeMem(0x35c2, { 0x52 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc6f2, gbc.sp());
        EXPECT(0x35c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0318
        gbc.setState(0x256c, 0xcfe2, 0x9d00, 0x6f5d, 0xe01d, 0xc78b, 0x0, 0x0);
        gbc.writeMem(0x256c, { 0x52 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xcfe2, gbc.sp());
        EXPECT(0x256d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0319
        gbc.setState(0xb153, 0xe642, 0xf050, 0xe04b, 0x780c, 0xde21, 0x1, 0x1);
        gbc.writeMem(0xb153, { 0x52 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe642, gbc.sp());
        EXPECT(0xb154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb153));
        // 52 031A
        gbc.setState(0x509e, 0xfa47, 0x4760, 0xbe69, 0x2215, 0xf183, 0x1, 0x1);
        gbc.writeMem(0x509e, { 0x52 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xfa47, gbc.sp());
        EXPECT(0x509f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 031C
        gbc.setState(0xc012, 0xb70d, 0x2ce0, 0xad1a, 0x4167, 0x5fa9, 0x1, 0x0);
        gbc.writeMem(0xc012, { 0x52 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb70d, gbc.sp());
        EXPECT(0xc013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc012));
        // 52 031D
        gbc.setState(0x491e, 0x1531, 0x38a0, 0x59ef, 0xeb75, 0xc9eb, 0x0, 0x0);
        gbc.writeMem(0x491e, { 0x52 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1531, gbc.sp());
        EXPECT(0x491f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 031E
        gbc.setState(0xcaef, 0x499e, 0xbba0, 0x12f9, 0xb54e, 0x3859, 0x1, 0x1);
        gbc.writeMem(0xcaef, { 0x52 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x499e, gbc.sp());
        EXPECT(0xcaf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xcaef));
        // 52 031F
        gbc.setState(0x654c, 0x34af, 0xa850, 0x19fc, 0xdace, 0xae2a, 0x1, 0x1);
        gbc.writeMem(0x654c, { 0x52 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x34af, gbc.sp());
        EXPECT(0x654d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0320
        gbc.setState(0xc196, 0x30d7, 0x2760, 0xd6f9, 0x2c03, 0x5125, 0x1, 0x0);
        gbc.writeMem(0xc196, { 0x52 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x30d7, gbc.sp());
        EXPECT(0xc197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc196));
        // 52 0321
        gbc.setState(0x226b, 0x71e7, 0x3a90, 0x53cc, 0x169a, 0xa640, 0x0, 0x0);
        gbc.writeMem(0x226b, { 0x52 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x71e7, gbc.sp());
        EXPECT(0x226c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0322
        gbc.setState(0x9f8e, 0x80a0, 0x7960, 0x7594, 0x515, 0x62b6, 0x1, 0x1);
        gbc.writeMem(0x9f8e, { 0x52 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x80a0, gbc.sp());
        EXPECT(0x9f8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9f8e));
        // 52 0323
        gbc.setState(0xc39, 0xa69b, 0x7b50, 0xb6fa, 0xfd41, 0x11e6, 0x1, 0x0);
        gbc.writeMem(0xc39, { 0x52 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa69b, gbc.sp());
        EXPECT(0xc3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0324
        gbc.setState(0x8c96, 0xb371, 0x9c50, 0x2b15, 0xc11a, 0xa905, 0x1, 0x0);
        gbc.writeMem(0x8c96, { 0x52 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb371, gbc.sp());
        EXPECT(0x8c97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8c96));
        // 52 0325
        gbc.setState(0xb07b, 0xef24, 0xc2c0, 0x96fe, 0x1814, 0xd380, 0x0, 0x1);
        gbc.writeMem(0xb07b, { 0x52 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xef24, gbc.sp());
        EXPECT(0xb07c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb07b));
        // 52 0326
        gbc.setState(0x69ad, 0xf9db, 0xea10, 0x2584, 0xe9c7, 0x6711, 0x1, 0x0);
        gbc.writeMem(0x69ad, { 0x52 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf9db, gbc.sp());
        EXPECT(0x69ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0327
        gbc.setState(0xf71, 0x5318, 0x9930, 0x3e76, 0x268, 0xd194, 0x1, 0x1);
        gbc.writeMem(0xf71, { 0x52 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5318, gbc.sp());
        EXPECT(0xf72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0328
        gbc.setState(0xade, 0xbc1, 0xa070, 0xa43f, 0x390b, 0x7477, 0x0, 0x0);
        gbc.writeMem(0xade, { 0x52 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xbc1, gbc.sp());
        EXPECT(0xadf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0329
        gbc.setState(0x4130, 0x8b4a, 0x8130, 0xf682, 0xf7f, 0xc120, 0x0, 0x0);
        gbc.writeMem(0x4130, { 0x52 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8b4a, gbc.sp());
        EXPECT(0x4131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 032A
        gbc.setState(0x54cd, 0xe9fb, 0x3df0, 0xa8e0, 0x370b, 0xf92a, 0x0, 0x0);
        gbc.writeMem(0x54cd, { 0x52 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe9fb, gbc.sp());
        EXPECT(0x54ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 032B
        gbc.setState(0x9c9b, 0x9492, 0xe350, 0x3586, 0x8ffa, 0x1851, 0x0, 0x1);
        gbc.writeMem(0x9c9b, { 0x52 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9492, gbc.sp());
        EXPECT(0x9c9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9c9b));
        // 52 032C
        gbc.setState(0xe712, 0x65fb, 0x5580, 0xeea2, 0xa44f, 0xc9ff, 0x1, 0x0);
        gbc.writeMem(0xe712, { 0x52 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x65fb, gbc.sp());
        EXPECT(0xe713, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe712));
        // 52 032D
        gbc.setState(0x2c92, 0x2757, 0xda90, 0x15c9, 0x6adc, 0xb22c, 0x1, 0x1);
        gbc.writeMem(0x2c92, { 0x52 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2757, gbc.sp());
        EXPECT(0x2c93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 032E
        gbc.setState(0xca38, 0xfae0, 0x7570, 0x52a, 0xc0eb, 0xa597, 0x0, 0x0);
        gbc.writeMem(0xca38, { 0x52 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xfae0, gbc.sp());
        EXPECT(0xca39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xca38));
        // 52 032F
        gbc.setState(0x8113, 0xf9b5, 0x8120, 0xe179, 0x24b2, 0x96dd, 0x0, 0x0);
        gbc.writeMem(0x8113, { 0x52 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf9b5, gbc.sp());
        EXPECT(0x8114, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8113));
        // 52 0330
        gbc.setState(0x4f17, 0xbff7, 0x50d0, 0xbd83, 0xac15, 0xec2c, 0x0, 0x0);
        gbc.writeMem(0x4f17, { 0x52 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xbff7, gbc.sp());
        EXPECT(0x4f18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0331
        gbc.setState(0x8d6a, 0x3263, 0x3930, 0x7fd3, 0x5835, 0x5ecd, 0x0, 0x1);
        gbc.writeMem(0x8d6a, { 0x52 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3263, gbc.sp());
        EXPECT(0x8d6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8d6a));
        // 52 0332
        gbc.setState(0xbe96, 0x23e9, 0x1600, 0xb1f0, 0x11f7, 0xf90a, 0x0, 0x1);
        gbc.writeMem(0xbe96, { 0x52 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x23e9, gbc.sp());
        EXPECT(0xbe97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xbe96));
        // 52 0333
        gbc.setState(0xc3e3, 0x7ddc, 0xd800, 0x31a2, 0x66bb, 0x644d, 0x0, 0x1);
        gbc.writeMem(0xc3e3, { 0x52 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7ddc, gbc.sp());
        EXPECT(0xc3e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc3e3));
        // 52 0334
        gbc.setState(0x7f9f, 0x2746, 0x5dd0, 0xdf48, 0x5ff6, 0x1676, 0x1, 0x0);
        gbc.writeMem(0x7f9f, { 0x52 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2746, gbc.sp());
        EXPECT(0x7fa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0335
        gbc.setState(0x62a3, 0xf2fc, 0x1a10, 0xdfff, 0xee83, 0x8732, 0x0, 0x1);
        gbc.writeMem(0x62a3, { 0x52 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf2fc, gbc.sp());
        EXPECT(0x62a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0336
        gbc.setState(0xd8ba, 0x4e07, 0x7b10, 0x5027, 0x7cb4, 0xfc5b, 0x0, 0x0);
        gbc.writeMem(0xd8ba, { 0x52 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4e07, gbc.sp());
        EXPECT(0xd8bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd8ba));
        // 52 0337
        gbc.setState(0xe8a6, 0x845c, 0x6640, 0xeb3c, 0xb7e6, 0xe6, 0x1, 0x0);
        gbc.writeMem(0xe8a6, { 0x52 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x845c, gbc.sp());
        EXPECT(0xe8a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe8a6));
        // 52 0338
        gbc.setState(0xc7bd, 0x6c64, 0x2af0, 0x7fec, 0x3d57, 0x9b96, 0x0, 0x1);
        gbc.writeMem(0xc7bd, { 0x52 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6c64, gbc.sp());
        EXPECT(0xc7be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc7bd));
        // 52 0339
        gbc.setState(0x4b5d, 0xba22, 0xd6b0, 0xf110, 0xed7, 0xccdb, 0x1, 0x1);
        gbc.writeMem(0x4b5d, { 0x52 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xba22, gbc.sp());
        EXPECT(0x4b5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 033A
        gbc.setState(0x4f7, 0xba1e, 0x6640, 0x8160, 0x5861, 0x172e, 0x0, 0x1);
        gbc.writeMem(0x4f7, { 0x52 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xba1e, gbc.sp());
        EXPECT(0x4f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 033B
        gbc.setState(0x6034, 0xff4a, 0x7190, 0x629a, 0x9a7c, 0xfef, 0x0, 0x0);
        gbc.writeMem(0x6034, { 0x52 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xff4a, gbc.sp());
        EXPECT(0x6035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 033C
        gbc.setState(0xce9f, 0xc1a2, 0xae10, 0xad23, 0xae85, 0x3d6, 0x0, 0x0);
        gbc.writeMem(0xce9f, { 0x52 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc1a2, gbc.sp());
        EXPECT(0xcea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xce9f));
        // 52 033D
        gbc.setState(0x7c97, 0x2ea8, 0x8740, 0x3517, 0xb97, 0x4add, 0x1, 0x0);
        gbc.writeMem(0x7c97, { 0x52 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2ea8, gbc.sp());
        EXPECT(0x7c98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 033E
        gbc.setState(0xe5e1, 0x6493, 0x3360, 0xd1df, 0x9f8b, 0x51c4, 0x0, 0x1);
        gbc.writeMem(0xe5e1, { 0x52 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6493, gbc.sp());
        EXPECT(0xe5e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe5e1));
        // 52 033F
        gbc.setState(0xad28, 0x5a31, 0x9bf0, 0xb637, 0xbb46, 0x2baa, 0x0, 0x0);
        gbc.writeMem(0xad28, { 0x52 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5a31, gbc.sp());
        EXPECT(0xad29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xad28));
        // 52 0340
        gbc.setState(0xecf7, 0x4b85, 0x5f50, 0x1a7f, 0x18bd, 0xfe84, 0x1, 0x0);
        gbc.writeMem(0xecf7, { 0x52 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4b85, gbc.sp());
        EXPECT(0xecf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xecf7));
        // 52 0341
        gbc.setState(0xa73c, 0x5b74, 0xb7b0, 0xae05, 0xb8aa, 0x2786, 0x1, 0x0);
        gbc.writeMem(0xa73c, { 0x52 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5b74, gbc.sp());
        EXPECT(0xa73d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa73c));
        // 52 0342
        gbc.setState(0x29cf, 0xfa42, 0xca50, 0xb48f, 0x9624, 0xd0d7, 0x1, 0x0);
        gbc.writeMem(0x29cf, { 0x52 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xfa42, gbc.sp());
        EXPECT(0x29d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0343
        gbc.setState(0x4d72, 0xd23c, 0xc610, 0xff25, 0x531a, 0x85ab, 0x1, 0x1);
        gbc.writeMem(0x4d72, { 0x52 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd23c, gbc.sp());
        EXPECT(0x4d73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0344
        gbc.setState(0x4449, 0xc6bd, 0xd60, 0x853f, 0x7481, 0xb531, 0x1, 0x0);
        gbc.writeMem(0x4449, { 0x52 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc6bd, gbc.sp());
        EXPECT(0x444a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0345
        gbc.setState(0xa3c2, 0x781d, 0x1580, 0x4f56, 0xf77c, 0x366f, 0x1, 0x1);
        gbc.writeMem(0xa3c2, { 0x52 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x781d, gbc.sp());
        EXPECT(0xa3c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa3c2));
        // 52 0346
        gbc.setState(0xa764, 0x82d, 0x9100, 0xca76, 0xa5b8, 0xb5da, 0x0, 0x0);
        gbc.writeMem(0xa764, { 0x52 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x82d, gbc.sp());
        EXPECT(0xa765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa764));
        // 52 0347
        gbc.setState(0xcd8e, 0xe139, 0x3a50, 0x17b0, 0x3a1e, 0x733e, 0x0, 0x1);
        gbc.writeMem(0xcd8e, { 0x52 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe139, gbc.sp());
        EXPECT(0xcd8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xcd8e));
        // 52 0348
        gbc.setState(0x6ac2, 0xe2a7, 0xb0e0, 0xb805, 0xe395, 0xbe90, 0x0, 0x1);
        gbc.writeMem(0x6ac2, { 0x52 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe2a7, gbc.sp());
        EXPECT(0x6ac3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 034A
        gbc.setState(0xbe11, 0x2c10, 0xc710, 0x8965, 0x8378, 0x91c2, 0x0, 0x0);
        gbc.writeMem(0xbe11, { 0x52 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2c10, gbc.sp());
        EXPECT(0xbe12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xbe11));
        // 52 034B
        gbc.setState(0x10e4, 0xc236, 0xb120, 0xf7da, 0x4851, 0xf009, 0x1, 0x1);
        gbc.writeMem(0x10e4, { 0x52 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc236, gbc.sp());
        EXPECT(0x10e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 034C
        gbc.setState(0xe068, 0x78dd, 0x7d40, 0xfc93, 0x5b10, 0x5008, 0x1, 0x0);
        gbc.writeMem(0xe068, { 0x52 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x78dd, gbc.sp());
        EXPECT(0xe069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe068));
        // 52 034E
        gbc.setState(0xea85, 0x95ee, 0x6600, 0xc9b2, 0x985d, 0xccea, 0x1, 0x1);
        gbc.writeMem(0xea85, { 0x52 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x95ee, gbc.sp());
        EXPECT(0xea86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xea85));
        // 52 034F
        gbc.setState(0x2ba4, 0x787e, 0x430, 0x1150, 0x12f9, 0xa2ea, 0x0, 0x1);
        gbc.writeMem(0x2ba4, { 0x52 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x787e, gbc.sp());
        EXPECT(0x2ba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0350
        gbc.setState(0xd51f, 0x992f, 0x2850, 0x75, 0x5b, 0x7c20, 0x0, 0x0);
        gbc.writeMem(0xd51f, { 0x52 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x992f, gbc.sp());
        EXPECT(0xd520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd51f));
        // 52 0351
        gbc.setState(0x1c85, 0xda5f, 0x4f30, 0xfceb, 0x8442, 0xc895, 0x0, 0x1);
        gbc.writeMem(0x1c85, { 0x52 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xda5f, gbc.sp());
        EXPECT(0x1c86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0352
        gbc.setState(0x856b, 0xc4f8, 0x82a0, 0xe84f, 0xf7c4, 0x7c9e, 0x0, 0x0);
        gbc.writeMem(0x856b, { 0x52 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc4f8, gbc.sp());
        EXPECT(0x856c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x856b));
        // 52 0353
        gbc.setState(0xd9a6, 0xbf64, 0xf9d0, 0xb20c, 0x1474, 0x5389, 0x0, 0x1);
        gbc.writeMem(0xd9a6, { 0x52 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xbf64, gbc.sp());
        EXPECT(0xd9a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd9a6));
        // 52 0354
        gbc.setState(0x60c7, 0x15fc, 0x6030, 0x7e5c, 0x9480, 0x7b4b, 0x0, 0x0);
        gbc.writeMem(0x60c7, { 0x52 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x15fc, gbc.sp());
        EXPECT(0x60c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0355
        gbc.setState(0x33ec, 0xbb8b, 0x59c0, 0x9c0c, 0xb9ae, 0xd508, 0x1, 0x1);
        gbc.writeMem(0x33ec, { 0x52 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xbb8b, gbc.sp());
        EXPECT(0x33ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0356
        gbc.setState(0xa3d6, 0x477c, 0x1200, 0x4f54, 0xe267, 0xa874, 0x1, 0x1);
        gbc.writeMem(0xa3d6, { 0x52 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x477c, gbc.sp());
        EXPECT(0xa3d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa3d6));
        // 52 0357
        gbc.setState(0x37b6, 0x4cb, 0x86a0, 0x6772, 0xa23b, 0xc2e2, 0x1, 0x1);
        gbc.writeMem(0x37b6, { 0x52 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4cb, gbc.sp());
        EXPECT(0x37b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0358
        gbc.setState(0x18cf, 0xe6fd, 0xeaf0, 0xf9e5, 0x33f9, 0xebfd, 0x1, 0x1);
        gbc.writeMem(0x18cf, { 0x52 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe6fd, gbc.sp());
        EXPECT(0x18d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0359
        gbc.setState(0x7fad, 0xc7c9, 0x81d0, 0x663f, 0x5748, 0xdb9, 0x0, 0x1);
        gbc.writeMem(0x7fad, { 0x52 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc7c9, gbc.sp());
        EXPECT(0x7fae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 035A
        gbc.setState(0x15cd, 0xeb14, 0xa430, 0x2c69, 0xb61, 0x490a, 0x1, 0x0);
        gbc.writeMem(0x15cd, { 0x52 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xeb14, gbc.sp());
        EXPECT(0x15ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 035C
        gbc.setState(0x804b, 0xb428, 0xdc20, 0xce3e, 0xabe0, 0x4049, 0x0, 0x1);
        gbc.writeMem(0x804b, { 0x52 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb428, gbc.sp());
        EXPECT(0x804c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x804b));
        // 52 035D
        gbc.setState(0x81fd, 0x6770, 0x37d0, 0xf98f, 0xa254, 0xfcd, 0x0, 0x0);
        gbc.writeMem(0x81fd, { 0x52 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6770, gbc.sp());
        EXPECT(0x81fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x81fd));
        // 52 035E
        gbc.setState(0x63ed, 0x1582, 0x7080, 0x2326, 0x1e50, 0xcaa4, 0x0, 0x0);
        gbc.writeMem(0x63ed, { 0x52 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1582, gbc.sp());
        EXPECT(0x63ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0360
        gbc.setState(0x7aa7, 0xdff6, 0xf360, 0x8551, 0xea7e, 0x97e6, 0x0, 0x0);
        gbc.writeMem(0x7aa7, { 0x52 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xdff6, gbc.sp());
        EXPECT(0x7aa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0361
        gbc.setState(0x6940, 0x9b6, 0xadd0, 0xac0e, 0x2eb5, 0x75a3, 0x1, 0x1);
        gbc.writeMem(0x6940, { 0x52 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9b6, gbc.sp());
        EXPECT(0x6941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0362
        gbc.setState(0x66ce, 0x8924, 0xf870, 0x679c, 0xa4cc, 0xa05d, 0x0, 0x0);
        gbc.writeMem(0x66ce, { 0x52 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8924, gbc.sp());
        EXPECT(0x66cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0363
        gbc.setState(0x6556, 0xa655, 0xe980, 0x1fcc, 0x9624, 0x3548, 0x1, 0x1);
        gbc.writeMem(0x6556, { 0x52 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa655, gbc.sp());
        EXPECT(0x6557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0365
        gbc.setState(0x4cfe, 0x8e36, 0x8570, 0x6b2d, 0x3014, 0x88d5, 0x1, 0x0);
        gbc.writeMem(0x4cfe, { 0x52 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8e36, gbc.sp());
        EXPECT(0x4cff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0366
        gbc.setState(0x9d74, 0x95c, 0x7750, 0xf9f6, 0xed65, 0x2156, 0x1, 0x1);
        gbc.writeMem(0x9d74, { 0x52 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x95c, gbc.sp());
        EXPECT(0x9d75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9d74));
        // 52 0367
        gbc.setState(0x2849, 0x7109, 0x8f40, 0xc305, 0x585c, 0x6d02, 0x1, 0x1);
        gbc.writeMem(0x2849, { 0x52 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7109, gbc.sp());
        EXPECT(0x284a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0368
        gbc.setState(0x1431, 0x54fc, 0xdcd0, 0x38da, 0xe849, 0xe946, 0x0, 0x1);
        gbc.writeMem(0x1431, { 0x52 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x54fc, gbc.sp());
        EXPECT(0x1432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0369
        gbc.setState(0x5bdf, 0xca66, 0x8100, 0xf748, 0xb640, 0x2b86, 0x0, 0x1);
        gbc.writeMem(0x5bdf, { 0x52 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xca66, gbc.sp());
        EXPECT(0x5be0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 036A
        gbc.setState(0xc1b9, 0x388, 0x31a0, 0x2ec5, 0xca8a, 0x5c45, 0x1, 0x1);
        gbc.writeMem(0xc1b9, { 0x52 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x388, gbc.sp());
        EXPECT(0xc1ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc1b9));
        // 52 036B
        gbc.setState(0xca97, 0x9b45, 0x3d00, 0xbc53, 0x6fd4, 0x8573, 0x0, 0x1);
        gbc.writeMem(0xca97, { 0x52 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9b45, gbc.sp());
        EXPECT(0xca98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xca97));
        // 52 036C
        gbc.setState(0xb72d, 0x4cdf, 0x71f0, 0xeb02, 0xba2b, 0x39a0, 0x1, 0x1);
        gbc.writeMem(0xb72d, { 0x52 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4cdf, gbc.sp());
        EXPECT(0xb72e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb72d));
        // 52 036D
        gbc.setState(0x241e, 0xb1b4, 0x3000, 0xedf8, 0xc613, 0x1c5a, 0x1, 0x1);
        gbc.writeMem(0x241e, { 0x52 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb1b4, gbc.sp());
        EXPECT(0x241f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 036E
        gbc.setState(0xfc3, 0x1a01, 0xa200, 0xd503, 0x36c5, 0x9f4a, 0x0, 0x1);
        gbc.writeMem(0xfc3, { 0x52 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1a01, gbc.sp());
        EXPECT(0xfc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 036F
        gbc.setState(0x9c9d, 0xabdd, 0x4800, 0xa1d6, 0xaf11, 0x211f, 0x1, 0x0);
        gbc.writeMem(0x9c9d, { 0x52 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xabdd, gbc.sp());
        EXPECT(0x9c9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9c9d));
        // 52 0370
        gbc.setState(0x867d, 0x9b46, 0xa9c0, 0x6d76, 0x712, 0x2e1d, 0x0, 0x0);
        gbc.writeMem(0x867d, { 0x52 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9b46, gbc.sp());
        EXPECT(0x867e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x867d));
        // 52 0372
        gbc.setState(0x8d86, 0xfcfc, 0xfa20, 0x6cb5, 0xe90, 0xad94, 0x0, 0x0);
        gbc.writeMem(0x8d86, { 0x52 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xfcfc, gbc.sp());
        EXPECT(0x8d87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8d86));
        // 52 0373
        gbc.setState(0x1d8, 0xa61c, 0xbe20, 0x9cf6, 0x702a, 0x278a, 0x0, 0x1);
        gbc.writeMem(0x1d8, { 0x52 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa61c, gbc.sp());
        EXPECT(0x1d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0374
        gbc.setState(0x683b, 0x36e4, 0x6fb0, 0x5043, 0xa08b, 0xf3f4, 0x0, 0x0);
        gbc.writeMem(0x683b, { 0x52 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x36e4, gbc.sp());
        EXPECT(0x683c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0375
        gbc.setState(0x41f5, 0xc9e1, 0x42f0, 0x729d, 0x1b67, 0xaa8c, 0x0, 0x0);
        gbc.writeMem(0x41f5, { 0x52 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc9e1, gbc.sp());
        EXPECT(0x41f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0377
        gbc.setState(0x797c, 0x2737, 0x140, 0xaed3, 0x373f, 0xba0d, 0x0, 0x0);
        gbc.writeMem(0x797c, { 0x52 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2737, gbc.sp());
        EXPECT(0x797d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0378
        gbc.setState(0x176e, 0x75e1, 0xa990, 0x728, 0x41ad, 0x1d2b, 0x1, 0x0);
        gbc.writeMem(0x176e, { 0x52 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x75e1, gbc.sp());
        EXPECT(0x176f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0379
        gbc.setState(0xc36d, 0x608a, 0x1140, 0x8b6b, 0x8638, 0x52e0, 0x1, 0x1);
        gbc.writeMem(0xc36d, { 0x52 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x608a, gbc.sp());
        EXPECT(0xc36e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc36d));
        // 52 037A
        gbc.setState(0xc87e, 0xf30e, 0x3ed0, 0x1d03, 0x23bf, 0x3ac5, 0x1, 0x1);
        gbc.writeMem(0xc87e, { 0x52 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf30e, gbc.sp());
        EXPECT(0xc87f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc87e));
        // 52 037B
        gbc.setState(0x6c1c, 0x7568, 0x56a0, 0x6c70, 0x4a9a, 0x54b0, 0x0, 0x0);
        gbc.writeMem(0x6c1c, { 0x52 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7568, gbc.sp());
        EXPECT(0x6c1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 037C
        gbc.setState(0x5a63, 0x3328, 0x9780, 0x556, 0x5789, 0x3d9, 0x1, 0x0);
        gbc.writeMem(0x5a63, { 0x52 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3328, gbc.sp());
        EXPECT(0x5a64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 037D
        gbc.setState(0x3839, 0x6412, 0x8930, 0x73f3, 0x90ca, 0xcdef, 0x1, 0x0);
        gbc.writeMem(0x3839, { 0x52 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6412, gbc.sp());
        EXPECT(0x383a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 037F
        gbc.setState(0x4e13, 0xe950, 0xc190, 0xb4a5, 0x30a1, 0x7f92, 0x0, 0x1);
        gbc.writeMem(0x4e13, { 0x52 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe950, gbc.sp());
        EXPECT(0x4e14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0380
        gbc.setState(0xd4e, 0x8e44, 0x90c0, 0x6b62, 0x3619, 0x353e, 0x0, 0x1);
        gbc.writeMem(0xd4e, { 0x52 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8e44, gbc.sp());
        EXPECT(0xd4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0381
        gbc.setState(0xab0e, 0xf259, 0x21c0, 0x82b1, 0xfa72, 0x443f, 0x0, 0x1);
        gbc.writeMem(0xab0e, { 0x52 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf259, gbc.sp());
        EXPECT(0xab0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xab0e));
        // 52 0382
        gbc.setState(0x33fe, 0xe51f, 0x4020, 0xfb96, 0xfe94, 0x89de, 0x0, 0x0);
        gbc.writeMem(0x33fe, { 0x52 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe51f, gbc.sp());
        EXPECT(0x33ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0383
        gbc.setState(0x52d3, 0xf493, 0xc9f0, 0x3067, 0xffc6, 0x201, 0x1, 0x0);
        gbc.writeMem(0x52d3, { 0x52 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf493, gbc.sp());
        EXPECT(0x52d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0384
        gbc.setState(0x4f7f, 0x688c, 0xf50, 0x1907, 0x9c70, 0xeba0, 0x0, 0x0);
        gbc.writeMem(0x4f7f, { 0x52 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x688c, gbc.sp());
        EXPECT(0x4f80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0385
        gbc.setState(0x3e4e, 0x2ca0, 0xa920, 0x9a7c, 0x3b8f, 0xaee4, 0x0, 0x0);
        gbc.writeMem(0x3e4e, { 0x52 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2ca0, gbc.sp());
        EXPECT(0x3e4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0386
        gbc.setState(0x49ca, 0x1093, 0xa5c0, 0x73b3, 0xbb88, 0x9270, 0x0, 0x0);
        gbc.writeMem(0x49ca, { 0x52 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1093, gbc.sp());
        EXPECT(0x49cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0387
        gbc.setState(0x6689, 0x339a, 0xb080, 0x6ad5, 0xed7a, 0x3cf4, 0x0, 0x0);
        gbc.writeMem(0x6689, { 0x52 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x339a, gbc.sp());
        EXPECT(0x668a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0388
        gbc.setState(0xc759, 0xbe77, 0xd510, 0xc753, 0xc8ef, 0xce0c, 0x1, 0x0);
        gbc.writeMem(0xc759, { 0x52 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xbe77, gbc.sp());
        EXPECT(0xc75a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc759));
        // 52 0389
        gbc.setState(0x662f, 0xca03, 0x4970, 0x709a, 0x32c0, 0x345b, 0x0, 0x0);
        gbc.writeMem(0x662f, { 0x52 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xca03, gbc.sp());
        EXPECT(0x6630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 038A
        gbc.setState(0x8fb7, 0xe2b6, 0xb10, 0xa714, 0x1564, 0x1a4c, 0x1, 0x0);
        gbc.writeMem(0x8fb7, { 0x52 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe2b6, gbc.sp());
        EXPECT(0x8fb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8fb7));
        // 52 038B
        gbc.setState(0xaf2a, 0x8655, 0x5ea0, 0xcea9, 0xd1e5, 0x4eab, 0x1, 0x1);
        gbc.writeMem(0xaf2a, { 0x52 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x8655, gbc.sp());
        EXPECT(0xaf2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xaf2a));
        // 52 038C
        gbc.setState(0x2533, 0x3705, 0x4cd0, 0xeadc, 0xaff6, 0xa453, 0x0, 0x1);
        gbc.writeMem(0x2533, { 0x52 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3705, gbc.sp());
        EXPECT(0x2534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 038D
        gbc.setState(0xb826, 0x3fea, 0xd100, 0xe570, 0x9f91, 0x917c, 0x0, 0x1);
        gbc.writeMem(0xb826, { 0x52 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x3fea, gbc.sp());
        EXPECT(0xb827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb826));
        // 52 038E
        gbc.setState(0x8d7d, 0xbefc, 0x9190, 0x9593, 0x6de, 0x7867, 0x0, 0x1);
        gbc.writeMem(0x8d7d, { 0x52 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbefc, gbc.sp());
        EXPECT(0x8d7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8d7d));
        // 52 038F
        gbc.setState(0x1139, 0x4e62, 0x30d0, 0x2fbc, 0xe850, 0x9917, 0x0, 0x0);
        gbc.writeMem(0x1139, { 0x52 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4e62, gbc.sp());
        EXPECT(0x113a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0390
        gbc.setState(0x5111, 0x4f74, 0xd4d0, 0xfc15, 0x2a72, 0xafa6, 0x0, 0x1);
        gbc.writeMem(0x5111, { 0x52 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4f74, gbc.sp());
        EXPECT(0x5112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0391
        gbc.setState(0x789, 0x8ff5, 0x7850, 0xc5a2, 0xafd2, 0x9b1f, 0x1, 0x0);
        gbc.writeMem(0x789, { 0x52 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8ff5, gbc.sp());
        EXPECT(0x78a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 0392
        gbc.setState(0x92e6, 0xb81, 0x85e0, 0xc919, 0x846c, 0x5ba5, 0x1, 0x1);
        gbc.writeMem(0x92e6, { 0x52 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb81, gbc.sp());
        EXPECT(0x92e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x92e6));
        // 52 0393
        gbc.setState(0x9bfa, 0x40c8, 0x6850, 0xaa91, 0xbb54, 0xebe6, 0x1, 0x0);
        gbc.writeMem(0x9bfa, { 0x52 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x40c8, gbc.sp());
        EXPECT(0x9bfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9bfa));
        // 52 0394
        gbc.setState(0xd504, 0xb179, 0x8f30, 0x8d8e, 0xba26, 0xb2c, 0x0, 0x0);
        gbc.writeMem(0xd504, { 0x52 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb179, gbc.sp());
        EXPECT(0xd505, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd504));
        // 52 0397
        gbc.setState(0x5cfb, 0x9725, 0xed60, 0xdbe0, 0x7a21, 0x8720, 0x0, 0x0);
        gbc.writeMem(0x5cfb, { 0x52 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9725, gbc.sp());
        EXPECT(0x5cfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 0398
        gbc.setState(0xd697, 0x23c2, 0xfc80, 0xef42, 0xbd57, 0x4755, 0x1, 0x1);
        gbc.writeMem(0xd697, { 0x52 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x23c2, gbc.sp());
        EXPECT(0xd698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd697));
        // 52 0399
        gbc.setState(0x7140, 0xa242, 0x5520, 0xf9f1, 0xfcf1, 0x60a8, 0x1, 0x1);
        gbc.writeMem(0x7140, { 0x52 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa242, gbc.sp());
        EXPECT(0x7141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 039A
        gbc.setState(0x79a0, 0x6340, 0x53b0, 0x361a, 0x17fb, 0x5ca1, 0x1, 0x1);
        gbc.writeMem(0x79a0, { 0x52 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6340, gbc.sp());
        EXPECT(0x79a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 039B
        gbc.setState(0x9ab9, 0xc49a, 0xa200, 0x9169, 0x124c, 0xc10d, 0x1, 0x0);
        gbc.writeMem(0x9ab9, { 0x52 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc49a, gbc.sp());
        EXPECT(0x9aba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9ab9));
        // 52 039C
        gbc.setState(0xceb6, 0x18b, 0xf930, 0xfde1, 0xdda0, 0x3a01, 0x1, 0x1);
        gbc.writeMem(0xceb6, { 0x52 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x18b, gbc.sp());
        EXPECT(0xceb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xceb6));
        // 52 039D
        gbc.setState(0x4f12, 0x1c78, 0x7d30, 0x14d4, 0x12ee, 0x96cd, 0x1, 0x1);
        gbc.writeMem(0x4f12, { 0x52 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1c78, gbc.sp());
        EXPECT(0x4f13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 039E
        gbc.setState(0x7bd9, 0x7734, 0x9d80, 0x5e6d, 0x6699, 0x15d7, 0x1, 0x0);
        gbc.writeMem(0x7bd9, { 0x52 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7734, gbc.sp());
        EXPECT(0x7bda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 039F
        gbc.setState(0x86db, 0x95d3, 0x9a20, 0xa9e5, 0xf9ad, 0x9bc7, 0x0, 0x0);
        gbc.writeMem(0x86db, { 0x52 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x95d3, gbc.sp());
        EXPECT(0x86dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x86db));
        // 52 03A0
        gbc.setState(0x19be, 0x292f, 0xe5d0, 0xac68, 0x96bf, 0xa0db, 0x1, 0x1);
        gbc.writeMem(0x19be, { 0x52 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x292f, gbc.sp());
        EXPECT(0x19bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 03A1
        gbc.setState(0x257e, 0x2707, 0x5ba0, 0xba94, 0x7e23, 0x487, 0x0, 0x0);
        gbc.writeMem(0x257e, { 0x52 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2707, gbc.sp());
        EXPECT(0x257f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 03A2
        gbc.setState(0xd8c6, 0x9d15, 0xa790, 0x542a, 0x63f5, 0xef0f, 0x0, 0x0);
        gbc.writeMem(0xd8c6, { 0x52 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9d15, gbc.sp());
        EXPECT(0xd8c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd8c6));
        // 52 03A3
        gbc.setState(0xa0ce, 0xbfbb, 0x3860, 0x3cb, 0x18a0, 0x5d6f, 0x0, 0x1);
        gbc.writeMem(0xa0ce, { 0x52 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xbfbb, gbc.sp());
        EXPECT(0xa0cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa0ce));
        // 52 03A4
        gbc.setState(0x4b66, 0x66bb, 0x95f0, 0xcc4, 0x9127, 0xa24d, 0x1, 0x1);
        gbc.writeMem(0x4b66, { 0x52 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x66bb, gbc.sp());
        EXPECT(0x4b67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 03A6
        gbc.setState(0xacd2, 0xa800, 0x5b50, 0x9d12, 0x5349, 0x6ef, 0x0, 0x0);
        gbc.writeMem(0xacd2, { 0x52 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa800, gbc.sp());
        EXPECT(0xacd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xacd2));
        // 52 03A7
        gbc.setState(0x3a85, 0x87d5, 0x3f50, 0x5042, 0x289b, 0x3e60, 0x1, 0x1);
        gbc.writeMem(0x3a85, { 0x52 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x87d5, gbc.sp());
        EXPECT(0x3a86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 03A8
        gbc.setState(0x95ad, 0x4090, 0x3ba0, 0xa46b, 0x4569, 0xae4d, 0x0, 0x1);
        gbc.writeMem(0x95ad, { 0x52 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4090, gbc.sp());
        EXPECT(0x95ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x95ad));
        // 52 03A9
        gbc.setState(0x3841, 0x69e1, 0x5140, 0xb5a3, 0xaa99, 0x4aa8, 0x0, 0x1);
        gbc.writeMem(0x3841, { 0x52 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x69e1, gbc.sp());
        EXPECT(0x3842, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 03AA
        gbc.setState(0xca42, 0xdd39, 0x9ef0, 0x57a4, 0xda53, 0x297a, 0x0, 0x1);
        gbc.writeMem(0xca42, { 0x52 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xdd39, gbc.sp());
        EXPECT(0xca43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xca42));
        // 52 03AB
        gbc.setState(0xab7f, 0x6cd, 0x9820, 0x3fd9, 0x26d8, 0xfa77, 0x0, 0x0);
        gbc.writeMem(0xab7f, { 0x52 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6cd, gbc.sp());
        EXPECT(0xab80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xab7f));
        // 52 03AC
        gbc.setState(0x3231, 0x82f5, 0xfbe0, 0x3cc9, 0xdad3, 0x611, 0x0, 0x1);
        gbc.writeMem(0x3231, { 0x52 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x82f5, gbc.sp());
        EXPECT(0x3232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 03AD
        gbc.setState(0xda56, 0xfc67, 0x9750, 0x93e2, 0xe3ad, 0x8dd0, 0x1, 0x1);
        gbc.writeMem(0xda56, { 0x52 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xfc67, gbc.sp());
        EXPECT(0xda57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xda56));
        // 52 03AE
        gbc.setState(0xbf14, 0xda0, 0x3170, 0x40e7, 0x2acf, 0x2776, 0x1, 0x1);
        gbc.writeMem(0xbf14, { 0x52 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xda0, gbc.sp());
        EXPECT(0xbf15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xbf14));
        // 52 03AF
        gbc.setState(0xb47c, 0x86c5, 0xe7d0, 0xcc2b, 0xa515, 0x7e4b, 0x1, 0x1);
        gbc.writeMem(0xb47c, { 0x52 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x86c5, gbc.sp());
        EXPECT(0xb47d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb47c));
        // 52 03B0
        gbc.setState(0x5db2, 0xc455, 0x7b80, 0xf99c, 0x4f95, 0x6744, 0x1, 0x1);
        gbc.writeMem(0x5db2, { 0x52 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc455, gbc.sp());
        EXPECT(0x5db3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 03B1
        gbc.setState(0x6f3f, 0x400e, 0x4e40, 0x44eb, 0x6597, 0x6ca6, 0x1, 0x1);
        gbc.writeMem(0x6f3f, { 0x52 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x400e, gbc.sp());
        EXPECT(0x6f40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 03B2
        gbc.setState(0xa71c, 0x40c7, 0x450, 0xac86, 0xc238, 0xff86, 0x1, 0x1);
        gbc.writeMem(0xa71c, { 0x52 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x40c7, gbc.sp());
        EXPECT(0xa71d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa71c));
        // 52 03B3
        gbc.setState(0x6508, 0x80d6, 0x4b30, 0x3f75, 0xd32d, 0x6ca7, 0x0, 0x0);
        gbc.writeMem(0x6508, { 0x52 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x80d6, gbc.sp());
        EXPECT(0x6509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 03B4
        gbc.setState(0x52da, 0xcbf6, 0xad00, 0xfb95, 0x211c, 0x69c3, 0x0, 0x0);
        gbc.writeMem(0x52da, { 0x52 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xcbf6, gbc.sp());
        EXPECT(0x52db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 03B5
        gbc.setState(0xc1a9, 0x8236, 0xefb0, 0x45a9, 0x714e, 0x6ec5, 0x1, 0x1);
        gbc.writeMem(0xc1a9, { 0x52 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8236, gbc.sp());
        EXPECT(0xc1aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc1a9));
        // 52 03B6
        gbc.setState(0x6809, 0xd57f, 0x9bc0, 0x36c8, 0xde08, 0x255, 0x0, 0x1);
        gbc.writeMem(0x6809, { 0x52 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd57f, gbc.sp());
        EXPECT(0x680a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 03B7
        gbc.setState(0x4e10, 0xaa2e, 0xd5b0, 0x33b, 0xef63, 0x13e3, 0x1, 0x1);
        gbc.writeMem(0x4e10, { 0x52 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xaa2e, gbc.sp());
        EXPECT(0x4e11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 03B8
        gbc.setState(0xeae5, 0x3034, 0x2c40, 0x8d02, 0x3dc, 0x571f, 0x1, 0x1);
        gbc.writeMem(0xeae5, { 0x52 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3034, gbc.sp());
        EXPECT(0xeae6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xeae5));
        // 52 03B9
        gbc.setState(0xe668, 0xde62, 0x59c0, 0x354a, 0xcd7c, 0x8be5, 0x1, 0x1);
        gbc.writeMem(0xe668, { 0x52 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xde62, gbc.sp());
        EXPECT(0xe669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe668));
        // 52 03BA
        gbc.setState(0x17bf, 0xde19, 0x1600, 0x60f6, 0xd756, 0x1afe, 0x0, 0x0);
        gbc.writeMem(0x17bf, { 0x52 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xde19, gbc.sp());
        EXPECT(0x17c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 03BB
        gbc.setState(0x6649, 0xea9b, 0x2090, 0x1c75, 0xa4b6, 0xff9, 0x0, 0x1);
        gbc.writeMem(0x6649, { 0x52 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xea9b, gbc.sp());
        EXPECT(0x664a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 03BC
        gbc.setState(0x39b4, 0x6c68, 0x5370, 0x4492, 0x51a1, 0xc489, 0x0, 0x1);
        gbc.writeMem(0x39b4, { 0x52 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6c68, gbc.sp());
        EXPECT(0x39b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 03BD
        gbc.setState(0x22c1, 0x2fb, 0x7290, 0x9490, 0xc0eb, 0x1688, 0x0, 0x0);
        gbc.writeMem(0x22c1, { 0x52 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2fb, gbc.sp());
        EXPECT(0x22c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 03BE
        gbc.setState(0xe69b, 0xbdf, 0x82c0, 0x979d, 0x3687, 0xf1d2, 0x1, 0x0);
        gbc.writeMem(0xe69b, { 0x52 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbdf, gbc.sp());
        EXPECT(0xe69c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe69b));
        // 52 03BF
        gbc.setState(0x865a, 0x5d5f, 0x6220, 0x99cf, 0x3b8e, 0x94b4, 0x0, 0x0);
        gbc.writeMem(0x865a, { 0x52 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5d5f, gbc.sp());
        EXPECT(0x865b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x865a));
        // 52 03C0
        gbc.setState(0x2ecd, 0x6f3a, 0xbcc0, 0x329d, 0x473d, 0xa60, 0x0, 0x1);
        gbc.writeMem(0x2ecd, { 0x52 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6f3a, gbc.sp());
        EXPECT(0x2ece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 03C1
        gbc.setState(0xe2ef, 0xe0cb, 0x4950, 0x81ac, 0x8279, 0x87fe, 0x0, 0x0);
        gbc.writeMem(0xe2ef, { 0x52 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe0cb, gbc.sp());
        EXPECT(0xe2f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe2ef));
        // 52 03C2
        gbc.setState(0xce6c, 0x1819, 0xdbe0, 0xcc95, 0xcf8d, 0x5caa, 0x0, 0x0);
        gbc.writeMem(0xce6c, { 0x52 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1819, gbc.sp());
        EXPECT(0xce6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xce6c));
        // 52 03C3
        gbc.setState(0x60b5, 0x35a6, 0xa1a0, 0x65f0, 0xeca9, 0x2095, 0x1, 0x0);
        gbc.writeMem(0x60b5, { 0x52 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x35a6, gbc.sp());
        EXPECT(0x60b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 03C4
        gbc.setState(0xaaef, 0xf8d4, 0xb580, 0xb108, 0x24a4, 0xd3a8, 0x1, 0x1);
        gbc.writeMem(0xaaef, { 0x52 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf8d4, gbc.sp());
        EXPECT(0xaaf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xaaef));
        // 52 03C5
        gbc.setState(0x2022, 0x4006, 0x3860, 0xaa15, 0x976a, 0xd77f, 0x1, 0x1);
        gbc.writeMem(0x2022, { 0x52 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4006, gbc.sp());
        EXPECT(0x2023, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 03C6
        gbc.setState(0x3dc6, 0x5cfc, 0xee70, 0xbed9, 0x6042, 0xdecf, 0x0, 0x0);
        gbc.writeMem(0x3dc6, { 0x52 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5cfc, gbc.sp());
        EXPECT(0x3dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 03C7
        gbc.setState(0xa136, 0xe734, 0xaef0, 0x8548, 0x8ac3, 0xadcb, 0x0, 0x1);
        gbc.writeMem(0xa136, { 0x52 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe734, gbc.sp());
        EXPECT(0xa137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa136));
        // 52 03C8
        gbc.setState(0xeded, 0x1a53, 0xde10, 0xc1dd, 0x53bf, 0x42cf, 0x0, 0x0);
        gbc.writeMem(0xeded, { 0x52 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1a53, gbc.sp());
        EXPECT(0xedee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xeded));
        // 52 03C9
        gbc.setState(0xa212, 0xb6e9, 0xaa00, 0xc2ea, 0xdc4e, 0xcc27, 0x1, 0x0);
        gbc.writeMem(0xa212, { 0x52 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb6e9, gbc.sp());
        EXPECT(0xa213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa212));
        // 52 03CA
        gbc.setState(0x1f8, 0x57d, 0xa670, 0xc5c0, 0xfbeb, 0x9aca, 0x0, 0x1);
        gbc.writeMem(0x1f8, { 0x52 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x57d, gbc.sp());
        EXPECT(0x1f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 03CB
        gbc.setState(0x402b, 0x57e3, 0x2310, 0x9511, 0x5472, 0xc1c3, 0x1, 0x1);
        gbc.writeMem(0x402b, { 0x52 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x57e3, gbc.sp());
        EXPECT(0x402c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 03CC
        gbc.setState(0x5875, 0x6e66, 0x8d10, 0x6a94, 0xb4c3, 0xa3ee, 0x0, 0x1);
        gbc.writeMem(0x5875, { 0x52 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6e66, gbc.sp());
        EXPECT(0x5876, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 03CD
        gbc.setState(0x5acb, 0x8d86, 0xdbb0, 0xcd9a, 0x8bc5, 0x856c, 0x1, 0x0);
        gbc.writeMem(0x5acb, { 0x52 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8d86, gbc.sp());
        EXPECT(0x5acc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 03CE
        gbc.setState(0xbf12, 0xbd7e, 0x5730, 0xdd55, 0x5d89, 0xf07a, 0x0, 0x0);
        gbc.writeMem(0xbf12, { 0x52 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xbd7e, gbc.sp());
        EXPECT(0xbf13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xbf12));
        // 52 03D0
        gbc.setState(0x1271, 0x772c, 0x7840, 0x5802, 0x2373, 0x988e, 0x1, 0x0);
        gbc.writeMem(0x1271, { 0x52 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x772c, gbc.sp());
        EXPECT(0x1272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 03D1
        gbc.setState(0x52db, 0x6aaf, 0x81d0, 0x9ada, 0xa7c2, 0x2e1c, 0x0, 0x1);
        gbc.writeMem(0x52db, { 0x52 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6aaf, gbc.sp());
        EXPECT(0x52dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 03D2
        gbc.setState(0x71ac, 0x41fb, 0x8080, 0x9df, 0xc125, 0xc4cc, 0x1, 0x1);
        gbc.writeMem(0x71ac, { 0x52 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x41fb, gbc.sp());
        EXPECT(0x71ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 03D5
        gbc.setState(0xad7f, 0xd95f, 0x6eb0, 0x7d2b, 0xf319, 0x175b, 0x0, 0x0);
        gbc.writeMem(0xad7f, { 0x52 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd95f, gbc.sp());
        EXPECT(0xad80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xad7f));
        // 52 03D6
        gbc.setState(0x5309, 0x2199, 0x4740, 0x7f26, 0x11c5, 0x43df, 0x1, 0x0);
        gbc.writeMem(0x5309, { 0x52 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2199, gbc.sp());
        EXPECT(0x530a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 03D7
        gbc.setState(0xe1fe, 0x22b5, 0x46d0, 0x16f4, 0x5a95, 0x2d93, 0x1, 0x1);
        gbc.writeMem(0xe1fe, { 0x52 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x22b5, gbc.sp());
        EXPECT(0xe1ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe1fe));
        // 52 03D8
        gbc.setState(0x635b, 0xf049, 0x9a20, 0x9a5, 0x3fed, 0xcef2, 0x0, 0x1);
        gbc.writeMem(0x635b, { 0x52 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf049, gbc.sp());
        EXPECT(0x635c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 03D9
        gbc.setState(0x845e, 0x7eb1, 0x5be0, 0x40e7, 0x4399, 0x7432, 0x0, 0x0);
        gbc.writeMem(0x845e, { 0x52 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7eb1, gbc.sp());
        EXPECT(0x845f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x845e));
        // 52 03DA
        gbc.setState(0x6825, 0xa57f, 0xf760, 0xe566, 0x40cc, 0x6473, 0x1, 0x0);
        gbc.writeMem(0x6825, { 0x52 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa57f, gbc.sp());
        EXPECT(0x6826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 03DB
        gbc.setState(0xb2a, 0x9b21, 0x2940, 0xd3c1, 0xfac0, 0xe32f, 0x1, 0x0);
        gbc.writeMem(0xb2a, { 0x52 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9b21, gbc.sp());
        EXPECT(0xb2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 52 03DC
        gbc.setState(0xd40f, 0x2fd8, 0xb5f0, 0x94f9, 0x7399, 0x1ae2, 0x0, 0x1);
        gbc.writeMem(0xd40f, { 0x52 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2fd8, gbc.sp());
        EXPECT(0xd410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd40f));
        // 52 03DD
        gbc.setState(0xee75, 0x5c36, 0xcb30, 0xff34, 0xab02, 0x349, 0x0, 0x0);
        gbc.writeMem(0xee75, { 0x52 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5c36, gbc.sp());
        EXPECT(0xee76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xee75));
        // 52 03DE
        gbc.setState(0xd48d, 0xc8db, 0x71b0, 0x1852, 0xb52d, 0x9292, 0x1, 0x1);
        gbc.writeMem(0xd48d, { 0x52 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc8db, gbc.sp());
        EXPECT(0xd48e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd48d));
        // 52 03DF
        gbc.setState(0xa90a, 0xaf92, 0x5650, 0x4591, 0x9a8c, 0x503, 0x0, 0x1);
        gbc.writeMem(0xa90a, { 0x52 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xaf92, gbc.sp());
        EXPECT(0xa90b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa90a));
        // 52 03E0
        gbc.setState(0xb54d, 0x60b5, 0x2cc0, 0xd797, 0xadf1, 0xa7b6, 0x1, 0x0);
        gbc.writeMem(0xb54d, { 0x52 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x60b5, gbc.sp());
        EXPECT(0xb54e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb54d));
        // 52 03E1
        gbc.setState(0x85d4, 0xec9f, 0xcab0, 0x48ff, 0xfd3b, 0x6cf, 0x0, 0x1);
        gbc.writeMem(0x85d4, { 0x52 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xec9f, gbc.sp());
        EXPECT(0x85d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x85d4));
        // 52 03E2
        gbc.setState(0xd464, 0xb1f2, 0xc170, 0x880c, 0x347b, 0xbb7d, 0x0, 0x1);
        gbc.writeMem(0xd464, { 0x52 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb1f2, gbc.sp());
        EXPECT(0xd465, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd464));
        // 52 03E3
        gbc.setState(0x386a, 0x1bf, 0x3030, 0x2e0e, 0x3cc1, 0x877b, 0x1, 0x0);
        gbc.writeMem(0x386a, { 0x52 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1bf, gbc.sp());
        EXPECT(0x386b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 52 03E4
        gbc.setState(0xdf2d, 0xda76, 0x1da0, 0xc760, 0x4726, 0x440c, 0x0, 0x1);
        gbc.writeMem(0xdf2d, { 0x52 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xda76, gbc.sp());
        EXPECT(0xdf2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xdf2d));
        // 52 03E5
        gbc.setState(0xe4df, 0x8422, 0xc350, 0x8017, 0x78ea, 0x91d7, 0x1, 0x1);
        gbc.writeMem(0xe4df, { 0x52 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8422, gbc.sp());
        EXPECT(0xe4e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe4df));
        // 52 03E7
        gbc.setState(0xb291, 0xbdc7, 0xccd0, 0x86bb, 0xe3ef, 0x3148, 0x1, 0x1);
        gbc.writeMem(0xb291, { 0x52 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbdc7, gbc.sp());
        EXPECT(0xb292, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xb291));
    }
