    TEST(gbcemu, opcode_cb_a4) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB A4 0000
        gbc.setState(0x63b9, 0x289d, 0x1590, 0x3209, 0xfab3, 0xc814, 0x1, 0x0);
        gbc.writeMem(0x63b9, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x289d, gbc.sp());
        EXPECT(0x63bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0001
        gbc.setState(0x9556, 0xc655, 0xd450, 0x121d, 0xb7f0, 0xe5f9, 0x0, 0x0);
        gbc.writeMem(0x9556, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc655, gbc.sp());
        EXPECT(0x9558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9556));
        EXPECT(0xa4, gbc.readMem(0x9557));
        // CB A4 0002
        gbc.setState(0x91b9, 0x37bd, 0x94c0, 0xa24a, 0xe9f4, 0x756f, 0x1, 0x0);
        gbc.writeMem(0x91b9, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x37bd, gbc.sp());
        EXPECT(0x91bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91b9));
        EXPECT(0xa4, gbc.readMem(0x91ba));
        // CB A4 0003
        gbc.setState(0xb193, 0x3e6a, 0xb380, 0x5da0, 0x5f26, 0x8615, 0x1, 0x1);
        gbc.writeMem(0xb193, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3e6a, gbc.sp());
        EXPECT(0xb195, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb193));
        EXPECT(0xa4, gbc.readMem(0xb194));
        // CB A4 0004
        gbc.setState(0xc5d8, 0xee78, 0x3350, 0xef9, 0xeab7, 0xfd51, 0x0, 0x0);
        gbc.writeMem(0xc5d8, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xee78, gbc.sp());
        EXPECT(0xc5da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5d8));
        EXPECT(0xa4, gbc.readMem(0xc5d9));
        // CB A4 0005
        gbc.setState(0x1007, 0x31cb, 0x3cf0, 0x94fd, 0x1421, 0x1335, 0x0, 0x1);
        gbc.writeMem(0x1007, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x31cb, gbc.sp());
        EXPECT(0x1009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0006
        gbc.setState(0x16aa, 0x9a19, 0x9cd0, 0xd6ad, 0xaf24, 0x415d, 0x1, 0x0);
        gbc.writeMem(0x16aa, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9a19, gbc.sp());
        EXPECT(0x16ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0007
        gbc.setState(0x1ad2, 0x524a, 0x4bf0, 0x3d09, 0xde13, 0xc25b, 0x0, 0x1);
        gbc.writeMem(0x1ad2, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x524a, gbc.sp());
        EXPECT(0x1ad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0009
        gbc.setState(0x2540, 0xfafd, 0xe040, 0xfe3, 0xa768, 0xe595, 0x1, 0x0);
        gbc.writeMem(0x2540, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xfafd, gbc.sp());
        EXPECT(0x2542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 000A
        gbc.setState(0x51c8, 0x42c0, 0x360, 0xce31, 0xbcc0, 0xdc71, 0x0, 0x0);
        gbc.writeMem(0x51c8, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x42c0, gbc.sp());
        EXPECT(0x51ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 000B
        gbc.setState(0x3b9e, 0x3398, 0x7140, 0xc2f0, 0xd34f, 0x7f71, 0x0, 0x1);
        gbc.writeMem(0x3b9e, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x3398, gbc.sp());
        EXPECT(0x3ba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 000C
        gbc.setState(0xaa03, 0xf7b9, 0xebe0, 0x48b1, 0x3593, 0xaf60, 0x1, 0x0);
        gbc.writeMem(0xaa03, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf7b9, gbc.sp());
        EXPECT(0xaa05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa03));
        EXPECT(0xa4, gbc.readMem(0xaa04));
        // CB A4 000D
        gbc.setState(0x81fb, 0xdcc4, 0xc5f0, 0x981a, 0xab88, 0x6caf, 0x1, 0x0);
        gbc.writeMem(0x81fb, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xdcc4, gbc.sp());
        EXPECT(0x81fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81fb));
        EXPECT(0xa4, gbc.readMem(0x81fc));
        // CB A4 000F
        gbc.setState(0xc8c2, 0x7c1, 0x640, 0xc729, 0x46, 0xf1a5, 0x0, 0x1);
        gbc.writeMem(0xc8c2, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7c1, gbc.sp());
        EXPECT(0xc8c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8c2));
        EXPECT(0xa4, gbc.readMem(0xc8c3));
        // CB A4 0011
        gbc.setState(0x1c15, 0x9fbf, 0xb890, 0x905c, 0xa8ec, 0x7cee, 0x0, 0x0);
        gbc.writeMem(0x1c15, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9fbf, gbc.sp());
        EXPECT(0x1c17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0012
        gbc.setState(0x99b9, 0xa8cb, 0x4d70, 0xcbd4, 0x80d2, 0xd09, 0x0, 0x1);
        gbc.writeMem(0x99b9, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa8cb, gbc.sp());
        EXPECT(0x99bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99b9));
        EXPECT(0xa4, gbc.readMem(0x99ba));
        // CB A4 0013
        gbc.setState(0x43bb, 0x562f, 0x43f0, 0xbf22, 0xc065, 0x62a4, 0x1, 0x1);
        gbc.writeMem(0x43bb, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x562f, gbc.sp());
        EXPECT(0x43bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0014
        gbc.setState(0x48e5, 0xcdf7, 0x8f80, 0xb80b, 0xf93a, 0x2f4d, 0x1, 0x1);
        gbc.writeMem(0x48e5, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xcdf7, gbc.sp());
        EXPECT(0x48e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0015
        gbc.setState(0x478c, 0xedc5, 0xb740, 0x5857, 0xf634, 0xac69, 0x1, 0x1);
        gbc.writeMem(0x478c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xedc5, gbc.sp());
        EXPECT(0x478e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0016
        gbc.setState(0xbf28, 0xc1cf, 0x2ea0, 0x1cc, 0xff1b, 0x8f87, 0x0, 0x1);
        gbc.writeMem(0xbf28, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc1cf, gbc.sp());
        EXPECT(0xbf2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf28));
        EXPECT(0xa4, gbc.readMem(0xbf29));
        // CB A4 0017
        gbc.setState(0x4894, 0x86e0, 0xf570, 0x89de, 0x8bc9, 0x9dfb, 0x1, 0x0);
        gbc.writeMem(0x4894, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x86e0, gbc.sp());
        EXPECT(0x4896, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0018
        gbc.setState(0x9395, 0x21f8, 0x2890, 0x1c0, 0xdf27, 0xc0c1, 0x0, 0x1);
        gbc.writeMem(0x9395, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x21f8, gbc.sp());
        EXPECT(0x9397, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9395));
        EXPECT(0xa4, gbc.readMem(0x9396));
        // CB A4 0019
        gbc.setState(0xd669, 0xd1a3, 0xc7e0, 0xad9c, 0x3133, 0x2316, 0x0, 0x0);
        gbc.writeMem(0xd669, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd1a3, gbc.sp());
        EXPECT(0xd66b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd669));
        EXPECT(0xa4, gbc.readMem(0xd66a));
        // CB A4 001A
        gbc.setState(0x7cd5, 0x6c29, 0x9c00, 0x9baa, 0x5729, 0xb055, 0x0, 0x0);
        gbc.writeMem(0x7cd5, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6c29, gbc.sp());
        EXPECT(0x7cd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 001B
        gbc.setState(0x158, 0x73a6, 0xe1c0, 0xe8bb, 0xbb3, 0x67aa, 0x0, 0x1);
        gbc.writeMem(0x158, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x73a6, gbc.sp());
        EXPECT(0x15a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 001C
        gbc.setState(0x9633, 0x39f7, 0x82d0, 0xb850, 0xf0fc, 0x9680, 0x0, 0x1);
        gbc.writeMem(0x9633, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x39f7, gbc.sp());
        EXPECT(0x9635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9633));
        EXPECT(0xa4, gbc.readMem(0x9634));
        // CB A4 001D
        gbc.setState(0x9e94, 0xc5c7, 0x2850, 0x3d59, 0xa60b, 0xb13c, 0x1, 0x0);
        gbc.writeMem(0x9e94, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc5c7, gbc.sp());
        EXPECT(0x9e96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e94));
        EXPECT(0xa4, gbc.readMem(0x9e95));
        // CB A4 001F
        gbc.setState(0xdd9c, 0xd821, 0x3190, 0x10ae, 0xea9b, 0x6287, 0x0, 0x0);
        gbc.writeMem(0xdd9c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd821, gbc.sp());
        EXPECT(0xdd9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd9c));
        EXPECT(0xa4, gbc.readMem(0xdd9d));
        // CB A4 0020
        gbc.setState(0x29c5, 0x9a25, 0x5fe0, 0xaee1, 0x3292, 0x643f, 0x1, 0x0);
        gbc.writeMem(0x29c5, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9a25, gbc.sp());
        EXPECT(0x29c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0021
        gbc.setState(0xc182, 0xc46b, 0xf6e0, 0xbe77, 0xe92a, 0xaaa0, 0x1, 0x1);
        gbc.writeMem(0xc182, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc46b, gbc.sp());
        EXPECT(0xc184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc182));
        EXPECT(0xa4, gbc.readMem(0xc183));
        // CB A4 0022
        gbc.setState(0x100d, 0x9906, 0xa2a0, 0x9999, 0x15d8, 0x772a, 0x0, 0x1);
        gbc.writeMem(0x100d, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9906, gbc.sp());
        EXPECT(0x100f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0023
        gbc.setState(0xedfa, 0xc783, 0x98f0, 0x761e, 0xc8c7, 0x64f0, 0x0, 0x0);
        gbc.writeMem(0xedfa, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc783, gbc.sp());
        EXPECT(0xedfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedfa));
        EXPECT(0xa4, gbc.readMem(0xedfb));
        // CB A4 0024
        gbc.setState(0x50af, 0x47e8, 0xc850, 0x9528, 0x936d, 0x2f32, 0x0, 0x0);
        gbc.writeMem(0x50af, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x47e8, gbc.sp());
        EXPECT(0x50b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0025
        gbc.setState(0x789f, 0x7388, 0x51e0, 0xe0fa, 0xe1b1, 0xa743, 0x1, 0x1);
        gbc.writeMem(0x789f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7388, gbc.sp());
        EXPECT(0x78a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0026
        gbc.setState(0x277a, 0x478, 0x3af0, 0x31b6, 0x9ed, 0x4cb6, 0x0, 0x1);
        gbc.writeMem(0x277a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x478, gbc.sp());
        EXPECT(0x277c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0027
        gbc.setState(0xee2b, 0x1ed1, 0xa000, 0x5982, 0x2b27, 0x4ae0, 0x0, 0x1);
        gbc.writeMem(0xee2b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1ed1, gbc.sp());
        EXPECT(0xee2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee2b));
        EXPECT(0xa4, gbc.readMem(0xee2c));
        // CB A4 0028
        gbc.setState(0x7cb6, 0x600b, 0xb360, 0x2b26, 0x5736, 0xf860, 0x0, 0x1);
        gbc.writeMem(0x7cb6, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x600b, gbc.sp());
        EXPECT(0x7cb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0029
        gbc.setState(0x9619, 0x40ac, 0x3620, 0x80d1, 0x4cdd, 0x9d9a, 0x0, 0x1);
        gbc.writeMem(0x9619, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x40ac, gbc.sp());
        EXPECT(0x961b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9619));
        EXPECT(0xa4, gbc.readMem(0x961a));
        // CB A4 002A
        gbc.setState(0x57eb, 0x6dce, 0x7980, 0x9353, 0x2a64, 0xca17, 0x0, 0x0);
        gbc.writeMem(0x57eb, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6dce, gbc.sp());
        EXPECT(0x57ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 002B
        gbc.setState(0x9d36, 0x1e6c, 0x2f80, 0x518, 0x63f4, 0xbea9, 0x1, 0x1);
        gbc.writeMem(0x9d36, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1e6c, gbc.sp());
        EXPECT(0x9d38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d36));
        EXPECT(0xa4, gbc.readMem(0x9d37));
        // CB A4 002C
        gbc.setState(0x22ed, 0x54f8, 0xf620, 0x2e11, 0xd540, 0x94e3, 0x1, 0x1);
        gbc.writeMem(0x22ed, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x54f8, gbc.sp());
        EXPECT(0x22ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 002D
        gbc.setState(0x6576, 0xa711, 0xa750, 0xf389, 0xe8cd, 0x6b28, 0x1, 0x0);
        gbc.writeMem(0x6576, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa711, gbc.sp());
        EXPECT(0x6578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 002E
        gbc.setState(0xa715, 0x2adb, 0x5d50, 0x716f, 0x9b65, 0x6192, 0x0, 0x0);
        gbc.writeMem(0xa715, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2adb, gbc.sp());
        EXPECT(0xa717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa715));
        EXPECT(0xa4, gbc.readMem(0xa716));
        // CB A4 002F
        gbc.setState(0x9d27, 0xd3d8, 0x4bd0, 0xed2, 0xfafb, 0x9087, 0x1, 0x0);
        gbc.writeMem(0x9d27, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd3d8, gbc.sp());
        EXPECT(0x9d29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d27));
        EXPECT(0xa4, gbc.readMem(0x9d28));
        // CB A4 0031
        gbc.setState(0xdfb8, 0xadd6, 0xf510, 0xb753, 0xc668, 0xe871, 0x1, 0x0);
        gbc.writeMem(0xdfb8, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xadd6, gbc.sp());
        EXPECT(0xdfba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfb8));
        EXPECT(0xa4, gbc.readMem(0xdfb9));
        // CB A4 0032
        gbc.setState(0x593a, 0x582c, 0x10a0, 0xe25c, 0x1722, 0x500a, 0x1, 0x1);
        gbc.writeMem(0x593a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x582c, gbc.sp());
        EXPECT(0x593c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0033
        gbc.setState(0x5c98, 0xe544, 0xdfe0, 0x292f, 0x7af2, 0x34a7, 0x0, 0x1);
        gbc.writeMem(0x5c98, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe544, gbc.sp());
        EXPECT(0x5c9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0034
        gbc.setState(0xd2dc, 0x3501, 0x1f10, 0x3d21, 0xefcd, 0x3c1d, 0x1, 0x1);
        gbc.writeMem(0xd2dc, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3501, gbc.sp());
        EXPECT(0xd2de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2dc));
        EXPECT(0xa4, gbc.readMem(0xd2dd));
        // CB A4 0035
        gbc.setState(0x87f3, 0x39ee, 0x1f10, 0xe9e, 0x3f09, 0x1bc4, 0x0, 0x0);
        gbc.writeMem(0x87f3, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x39ee, gbc.sp());
        EXPECT(0x87f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87f3));
        EXPECT(0xa4, gbc.readMem(0x87f4));
        // CB A4 0037
        gbc.setState(0xd074, 0xd029, 0x1270, 0x4039, 0x9446, 0x92f, 0x0, 0x1);
        gbc.writeMem(0xd074, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd029, gbc.sp());
        EXPECT(0xd076, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd074));
        EXPECT(0xa4, gbc.readMem(0xd075));
        // CB A4 0038
        gbc.setState(0x6c58, 0x6fd3, 0x9450, 0x1dba, 0x56e4, 0x5492, 0x0, 0x1);
        gbc.writeMem(0x6c58, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6fd3, gbc.sp());
        EXPECT(0x6c5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0039
        gbc.setState(0x910f, 0x16ce, 0x9a0, 0xc12a, 0x9ecb, 0x495e, 0x1, 0x0);
        gbc.writeMem(0x910f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x16ce, gbc.sp());
        EXPECT(0x9111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x910f));
        EXPECT(0xa4, gbc.readMem(0x9110));
        // CB A4 003A
        gbc.setState(0xe497, 0x18c7, 0x520, 0xfda9, 0xa216, 0x2827, 0x0, 0x0);
        gbc.writeMem(0xe497, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x18c7, gbc.sp());
        EXPECT(0xe499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe497));
        EXPECT(0xa4, gbc.readMem(0xe498));
        // CB A4 003B
        gbc.setState(0xc012, 0x45db, 0x20c0, 0x2871, 0xd256, 0x3333, 0x1, 0x0);
        gbc.writeMem(0xc012, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x45db, gbc.sp());
        EXPECT(0xc014, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc012));
        EXPECT(0xa4, gbc.readMem(0xc013));
        // CB A4 003C
        gbc.setState(0x2851, 0xef46, 0x7250, 0x9712, 0x607, 0x4bd4, 0x1, 0x0);
        gbc.writeMem(0x2851, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xef46, gbc.sp());
        EXPECT(0x2853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 003E
        gbc.setState(0xbf2d, 0xd64d, 0x71a0, 0x4f34, 0x4003, 0x8130, 0x1, 0x0);
        gbc.writeMem(0xbf2d, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd64d, gbc.sp());
        EXPECT(0xbf2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf2d));
        EXPECT(0xa4, gbc.readMem(0xbf2e));
        // CB A4 0040
        gbc.setState(0x4a, 0x6f7c, 0x10, 0x36e9, 0x4c8b, 0x87cf, 0x1, 0x0);
        gbc.writeMem(0x4a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6f7c, gbc.sp());
        EXPECT(0x4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0041
        gbc.setState(0xca4b, 0x65ab, 0xf930, 0xd6a, 0xf008, 0x470e, 0x1, 0x0);
        gbc.writeMem(0xca4b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x65ab, gbc.sp());
        EXPECT(0xca4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca4b));
        EXPECT(0xa4, gbc.readMem(0xca4c));
        // CB A4 0042
        gbc.setState(0x2f50, 0x4ad6, 0xc30, 0x2264, 0xf606, 0x454a, 0x0, 0x1);
        gbc.writeMem(0x2f50, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x4ad6, gbc.sp());
        EXPECT(0x2f52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0044
        gbc.setState(0x81c1, 0xc170, 0x93d0, 0x71ff, 0xb368, 0xcb86, 0x1, 0x0);
        gbc.writeMem(0x81c1, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc170, gbc.sp());
        EXPECT(0x81c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81c1));
        EXPECT(0xa4, gbc.readMem(0x81c2));
        // CB A4 0045
        gbc.setState(0x1b6a, 0xed80, 0x8e80, 0x3060, 0xe008, 0x4a71, 0x1, 0x0);
        gbc.writeMem(0x1b6a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xed80, gbc.sp());
        EXPECT(0x1b6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0046
        gbc.setState(0xcb46, 0x2cf7, 0xb860, 0x346f, 0xd8b, 0x70b9, 0x1, 0x1);
        gbc.writeMem(0xcb46, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2cf7, gbc.sp());
        EXPECT(0xcb48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb46));
        EXPECT(0xa4, gbc.readMem(0xcb47));
        // CB A4 0047
        gbc.setState(0x2014, 0x2914, 0x2150, 0xd5be, 0x480c, 0x45b0, 0x1, 0x1);
        gbc.writeMem(0x2014, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2914, gbc.sp());
        EXPECT(0x2016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0048
        gbc.setState(0x9915, 0xf6b4, 0x4280, 0xe7a6, 0x1f3d, 0xcf91, 0x0, 0x1);
        gbc.writeMem(0x9915, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf6b4, gbc.sp());
        EXPECT(0x9917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9915));
        EXPECT(0xa4, gbc.readMem(0x9916));
        // CB A4 0049
        gbc.setState(0x67b0, 0x774a, 0x90b0, 0xf94b, 0x4199, 0xd0b, 0x0, 0x0);
        gbc.writeMem(0x67b0, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x774a, gbc.sp());
        EXPECT(0x67b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 004A
        gbc.setState(0xd8ad, 0x43e8, 0x300, 0xd2f0, 0xbb7a, 0x7da5, 0x0, 0x1);
        gbc.writeMem(0xd8ad, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x43e8, gbc.sp());
        EXPECT(0xd8af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8ad));
        EXPECT(0xa4, gbc.readMem(0xd8ae));
        // CB A4 004B
        gbc.setState(0x5815, 0x3110, 0xa270, 0x3904, 0xdb0f, 0xae53, 0x0, 0x0);
        gbc.writeMem(0x5815, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3110, gbc.sp());
        EXPECT(0x5817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 004C
        gbc.setState(0x9741, 0xb16f, 0xa250, 0x8c85, 0xdf2f, 0xbd9e, 0x0, 0x1);
        gbc.writeMem(0x9741, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb16f, gbc.sp());
        EXPECT(0x9743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9741));
        EXPECT(0xa4, gbc.readMem(0x9742));
        // CB A4 004D
        gbc.setState(0xd372, 0x472e, 0xf9c0, 0x2002, 0x274b, 0x8a8a, 0x1, 0x1);
        gbc.writeMem(0xd372, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x472e, gbc.sp());
        EXPECT(0xd374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd372));
        EXPECT(0xa4, gbc.readMem(0xd373));
        // CB A4 004F
        gbc.setState(0x6484, 0x9a78, 0x8c70, 0x73d2, 0x74b4, 0x5edd, 0x0, 0x0);
        gbc.writeMem(0x6484, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9a78, gbc.sp());
        EXPECT(0x6486, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0050
        gbc.setState(0xaff7, 0x7d64, 0xfa40, 0x5070, 0xcf92, 0x4627, 0x0, 0x1);
        gbc.writeMem(0xaff7, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7d64, gbc.sp());
        EXPECT(0xaff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaff7));
        EXPECT(0xa4, gbc.readMem(0xaff8));
        // CB A4 0051
        gbc.setState(0xc7c6, 0xb8a7, 0xe040, 0x36dc, 0xc784, 0x7c2c, 0x0, 0x0);
        gbc.writeMem(0xc7c6, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb8a7, gbc.sp());
        EXPECT(0xc7c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7c6));
        EXPECT(0xa4, gbc.readMem(0xc7c7));
        // CB A4 0052
        gbc.setState(0x77e0, 0xb294, 0xfd50, 0x970b, 0x33c2, 0x1a83, 0x1, 0x0);
        gbc.writeMem(0x77e0, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb294, gbc.sp());
        EXPECT(0x77e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0053
        gbc.setState(0xe89e, 0xc50, 0x9e60, 0x6b27, 0x8af3, 0xe4e3, 0x0, 0x0);
        gbc.writeMem(0xe89e, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc50, gbc.sp());
        EXPECT(0xe8a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe89e));
        EXPECT(0xa4, gbc.readMem(0xe89f));
        // CB A4 0054
        gbc.setState(0xbec5, 0x5c4a, 0xff10, 0xe311, 0x6e30, 0xba28, 0x0, 0x0);
        gbc.writeMem(0xbec5, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5c4a, gbc.sp());
        EXPECT(0xbec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbec5));
        EXPECT(0xa4, gbc.readMem(0xbec6));
        // CB A4 0055
        gbc.setState(0xbc2b, 0xe101, 0xbf60, 0x991, 0x7fe5, 0x74f, 0x0, 0x1);
        gbc.writeMem(0xbc2b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe101, gbc.sp());
        EXPECT(0xbc2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc2b));
        EXPECT(0xa4, gbc.readMem(0xbc2c));
        // CB A4 0056
        gbc.setState(0xcff, 0xb787, 0x1760, 0x5a39, 0x837, 0x855c, 0x0, 0x1);
        gbc.writeMem(0xcff, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb787, gbc.sp());
        EXPECT(0xd01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0057
        gbc.setState(0xd791, 0x9dd2, 0x7f90, 0xa770, 0x1e68, 0x4752, 0x0, 0x0);
        gbc.writeMem(0xd791, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9dd2, gbc.sp());
        EXPECT(0xd793, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd791));
        EXPECT(0xa4, gbc.readMem(0xd792));
        // CB A4 0058
        gbc.setState(0xb17c, 0x78e5, 0xe920, 0x914a, 0x929f, 0xe3ba, 0x1, 0x1);
        gbc.writeMem(0xb17c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x78e5, gbc.sp());
        EXPECT(0xb17e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb17c));
        EXPECT(0xa4, gbc.readMem(0xb17d));
        // CB A4 0059
        gbc.setState(0x9cab, 0x7aed, 0xd3a0, 0x88bf, 0x2444, 0x8110, 0x0, 0x0);
        gbc.writeMem(0x9cab, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7aed, gbc.sp());
        EXPECT(0x9cad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cab));
        EXPECT(0xa4, gbc.readMem(0x9cac));
        // CB A4 005A
        gbc.setState(0xc9f1, 0x6e52, 0x5db0, 0xfa9a, 0xd2aa, 0xbbb2, 0x0, 0x0);
        gbc.writeMem(0xc9f1, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6e52, gbc.sp());
        EXPECT(0xc9f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9f1));
        EXPECT(0xa4, gbc.readMem(0xc9f2));
        // CB A4 005B
        gbc.setState(0x6f6e, 0xbbfa, 0xf930, 0x3a4a, 0x205d, 0x3dfb, 0x0, 0x0);
        gbc.writeMem(0x6f6e, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xbbfa, gbc.sp());
        EXPECT(0x6f70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 005C
        gbc.setState(0x3bb4, 0xf472, 0x1a40, 0x4884, 0x47e3, 0xce51, 0x0, 0x1);
        gbc.writeMem(0x3bb4, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf472, gbc.sp());
        EXPECT(0x3bb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 005D
        gbc.setState(0xca18, 0x5051, 0x4530, 0xd548, 0xbf1, 0x2a0f, 0x1, 0x1);
        gbc.writeMem(0xca18, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5051, gbc.sp());
        EXPECT(0xca1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca18));
        EXPECT(0xa4, gbc.readMem(0xca19));
        // CB A4 005E
        gbc.setState(0x8898, 0xb053, 0x48e0, 0x6b84, 0x8e2d, 0xf649, 0x0, 0x0);
        gbc.writeMem(0x8898, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb053, gbc.sp());
        EXPECT(0x889a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8898));
        EXPECT(0xa4, gbc.readMem(0x8899));
        // CB A4 005F
        gbc.setState(0x7d95, 0x77fb, 0x3500, 0xefa0, 0xc3f8, 0x1780, 0x1, 0x0);
        gbc.writeMem(0x7d95, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x77fb, gbc.sp());
        EXPECT(0x7d97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0060
        gbc.setState(0x11b5, 0x9a19, 0x6fa0, 0xaf19, 0x53af, 0x7968, 0x0, 0x0);
        gbc.writeMem(0x11b5, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9a19, gbc.sp());
        EXPECT(0x11b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0061
        gbc.setState(0x3e61, 0x2c75, 0xc150, 0x463a, 0x5b76, 0x8f33, 0x1, 0x1);
        gbc.writeMem(0x3e61, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2c75, gbc.sp());
        EXPECT(0x3e63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0062
        gbc.setState(0x6f80, 0x4b5b, 0xa9f0, 0x75ef, 0x1079, 0xf47f, 0x0, 0x0);
        gbc.writeMem(0x6f80, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4b5b, gbc.sp());
        EXPECT(0x6f82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0063
        gbc.setState(0x8aef, 0xc4d, 0x5790, 0x1498, 0xeb6e, 0xf871, 0x0, 0x1);
        gbc.writeMem(0x8aef, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc4d, gbc.sp());
        EXPECT(0x8af1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aef));
        EXPECT(0xa4, gbc.readMem(0x8af0));
        // CB A4 0064
        gbc.setState(0xd84e, 0x2358, 0x8c50, 0x82b2, 0xcbdd, 0x8acf, 0x0, 0x1);
        gbc.writeMem(0xd84e, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2358, gbc.sp());
        EXPECT(0xd850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd84e));
        EXPECT(0xa4, gbc.readMem(0xd84f));
        // CB A4 0065
        gbc.setState(0x863, 0x10ff, 0x9150, 0xa068, 0xa24a, 0x4297, 0x1, 0x0);
        gbc.writeMem(0x863, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x10ff, gbc.sp());
        EXPECT(0x865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0066
        gbc.setState(0x8d04, 0x41ac, 0x3930, 0x928a, 0xbe72, 0x6f6c, 0x1, 0x1);
        gbc.writeMem(0x8d04, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x41ac, gbc.sp());
        EXPECT(0x8d06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d04));
        EXPECT(0xa4, gbc.readMem(0x8d05));
        // CB A4 0067
        gbc.setState(0x184, 0x14f, 0x64e0, 0x65cc, 0xcca, 0xe603, 0x0, 0x0);
        gbc.writeMem(0x184, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x14f, gbc.sp());
        EXPECT(0x186, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0068
        gbc.setState(0x545b, 0xe61c, 0x9e60, 0xcda3, 0xcca9, 0xbd37, 0x1, 0x1);
        gbc.writeMem(0x545b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe61c, gbc.sp());
        EXPECT(0x545d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0069
        gbc.setState(0x985, 0x6321, 0xd2c0, 0x845e, 0x2071, 0x4f29, 0x0, 0x0);
        gbc.writeMem(0x985, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6321, gbc.sp());
        EXPECT(0x987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 006A
        gbc.setState(0x274, 0x5034, 0x8ca0, 0xb754, 0xadb5, 0x4b7a, 0x0, 0x0);
        gbc.writeMem(0x274, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5034, gbc.sp());
        EXPECT(0x276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 006B
        gbc.setState(0x6e01, 0xa508, 0x6030, 0xc422, 0xb5b9, 0x3972, 0x0, 0x1);
        gbc.writeMem(0x6e01, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa508, gbc.sp());
        EXPECT(0x6e03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 006D
        gbc.setState(0xa70c, 0x1097, 0xf3f0, 0x9dd3, 0xbde2, 0xe25a, 0x1, 0x1);
        gbc.writeMem(0xa70c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1097, gbc.sp());
        EXPECT(0xa70e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa70c));
        EXPECT(0xa4, gbc.readMem(0xa70d));
        // CB A4 006E
        gbc.setState(0x4713, 0x32de, 0xde20, 0xfc7a, 0xb2fe, 0xb675, 0x1, 0x0);
        gbc.writeMem(0x4713, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x32de, gbc.sp());
        EXPECT(0x4715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 006F
        gbc.setState(0xc5d7, 0x7d9b, 0xd7e0, 0x8e8a, 0x6710, 0xde75, 0x0, 0x1);
        gbc.writeMem(0xc5d7, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7d9b, gbc.sp());
        EXPECT(0xc5d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5d7));
        EXPECT(0xa4, gbc.readMem(0xc5d8));
        // CB A4 0070
        gbc.setState(0x8065, 0xcda4, 0xabd0, 0xfeef, 0xf0ad, 0x905e, 0x0, 0x0);
        gbc.writeMem(0x8065, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xcda4, gbc.sp());
        EXPECT(0x8067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8065));
        EXPECT(0xa4, gbc.readMem(0x8066));
        // CB A4 0071
        gbc.setState(0x5dd1, 0x1a9a, 0x710, 0x428d, 0x7673, 0x9525, 0x1, 0x1);
        gbc.writeMem(0x5dd1, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1a9a, gbc.sp());
        EXPECT(0x5dd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0072
        gbc.setState(0x50b, 0xa056, 0x1d0, 0x86b1, 0x1202, 0x49f0, 0x0, 0x0);
        gbc.writeMem(0x50b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa056, gbc.sp());
        EXPECT(0x50d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0073
        gbc.setState(0x70fc, 0xcc6f, 0x1040, 0x66f8, 0xaf6, 0x8e65, 0x0, 0x1);
        gbc.writeMem(0x70fc, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xcc6f, gbc.sp());
        EXPECT(0x70fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0074
        gbc.setState(0xd4f1, 0xb2f3, 0x6860, 0x96d8, 0xbbfd, 0xfc62, 0x1, 0x1);
        gbc.writeMem(0xd4f1, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb2f3, gbc.sp());
        EXPECT(0xd4f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4f1));
        EXPECT(0xa4, gbc.readMem(0xd4f2));
        // CB A4 0075
        gbc.setState(0x12d5, 0xcc92, 0xe400, 0x69de, 0x901e, 0x7b72, 0x1, 0x1);
        gbc.writeMem(0x12d5, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xcc92, gbc.sp());
        EXPECT(0x12d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0076
        gbc.setState(0xd85a, 0xfcec, 0x1400, 0x4c73, 0x9f5c, 0x429e, 0x1, 0x0);
        gbc.writeMem(0xd85a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xfcec, gbc.sp());
        EXPECT(0xd85c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd85a));
        EXPECT(0xa4, gbc.readMem(0xd85b));
        // CB A4 0077
        gbc.setState(0xacfa, 0xc439, 0x5b10, 0xb2b, 0xc2fc, 0x5918, 0x0, 0x1);
        gbc.writeMem(0xacfa, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc439, gbc.sp());
        EXPECT(0xacfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacfa));
        EXPECT(0xa4, gbc.readMem(0xacfb));
        // CB A4 0078
        gbc.setState(0x9f8f, 0xc6c7, 0x7850, 0x7bf8, 0x10a8, 0xf270, 0x0, 0x0);
        gbc.writeMem(0x9f8f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc6c7, gbc.sp());
        EXPECT(0x9f91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f8f));
        EXPECT(0xa4, gbc.readMem(0x9f90));
        // CB A4 0079
        gbc.setState(0xb8a9, 0xbaa, 0x9f10, 0xbb23, 0xbcbd, 0x7ca2, 0x0, 0x0);
        gbc.writeMem(0xb8a9, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbaa, gbc.sp());
        EXPECT(0xb8ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8a9));
        EXPECT(0xa4, gbc.readMem(0xb8aa));
        // CB A4 007A
        gbc.setState(0x489, 0xd108, 0xdbb0, 0x997b, 0x72af, 0x5159, 0x0, 0x1);
        gbc.writeMem(0x489, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd108, gbc.sp());
        EXPECT(0x48b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 007B
        gbc.setState(0xbce3, 0xd5fd, 0x9fe0, 0xa2cc, 0x389a, 0xe56c, 0x0, 0x0);
        gbc.writeMem(0xbce3, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd5fd, gbc.sp());
        EXPECT(0xbce5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbce3));
        EXPECT(0xa4, gbc.readMem(0xbce4));
        // CB A4 007C
        gbc.setState(0x1773, 0x38ab, 0xe850, 0xfc2a, 0x8580, 0xd38d, 0x1, 0x0);
        gbc.writeMem(0x1773, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x38ab, gbc.sp());
        EXPECT(0x1775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 007D
        gbc.setState(0x5e39, 0x2cd5, 0x9170, 0x3b80, 0x219, 0x8b9, 0x0, 0x0);
        gbc.writeMem(0x5e39, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2cd5, gbc.sp());
        EXPECT(0x5e3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 007E
        gbc.setState(0x3046, 0x39d3, 0xdb40, 0xfaac, 0xda1e, 0xab2, 0x1, 0x1);
        gbc.writeMem(0x3046, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x39d3, gbc.sp());
        EXPECT(0x3048, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 007F
        gbc.setState(0x5044, 0x1984, 0xbcb0, 0xd404, 0x5e78, 0x333b, 0x1, 0x0);
        gbc.writeMem(0x5044, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1984, gbc.sp());
        EXPECT(0x5046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0081
        gbc.setState(0x344d, 0x91be, 0xdc70, 0xf309, 0xad7a, 0x1f6a, 0x0, 0x1);
        gbc.writeMem(0x344d, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x91be, gbc.sp());
        EXPECT(0x344f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0082
        gbc.setState(0x4110, 0x8c6, 0xfa30, 0x41ec, 0x90ca, 0x9131, 0x1, 0x0);
        gbc.writeMem(0x4110, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8c6, gbc.sp());
        EXPECT(0x4112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0083
        gbc.setState(0x7bc7, 0x6855, 0xf2f0, 0x46da, 0x1999, 0x9614, 0x1, 0x1);
        gbc.writeMem(0x7bc7, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6855, gbc.sp());
        EXPECT(0x7bc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0084
        gbc.setState(0xdc5f, 0xc7f9, 0xc1d0, 0x71ea, 0x10a7, 0xf1f8, 0x1, 0x1);
        gbc.writeMem(0xdc5f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xc7f9, gbc.sp());
        EXPECT(0xdc61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc5f));
        EXPECT(0xa4, gbc.readMem(0xdc60));
        // CB A4 0085
        gbc.setState(0xaa91, 0x10b1, 0x95b0, 0x288b, 0xe28b, 0x6699, 0x1, 0x1);
        gbc.writeMem(0xaa91, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x10b1, gbc.sp());
        EXPECT(0xaa93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa91));
        EXPECT(0xa4, gbc.readMem(0xaa92));
        // CB A4 0086
        gbc.setState(0xde6f, 0x3ce2, 0xcd80, 0x380d, 0x3808, 0xc9e, 0x1, 0x1);
        gbc.writeMem(0xde6f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3ce2, gbc.sp());
        EXPECT(0xde71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde6f));
        EXPECT(0xa4, gbc.readMem(0xde70));
        // CB A4 0087
        gbc.setState(0x367a, 0xb324, 0x5910, 0xaee8, 0xc1ba, 0x63ec, 0x0, 0x1);
        gbc.writeMem(0x367a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb324, gbc.sp());
        EXPECT(0x367c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0088
        gbc.setState(0xd75d, 0x752a, 0xadc0, 0x6d82, 0x1dd3, 0x6e05, 0x1, 0x0);
        gbc.writeMem(0xd75d, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x752a, gbc.sp());
        EXPECT(0xd75f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd75d));
        EXPECT(0xa4, gbc.readMem(0xd75e));
        // CB A4 0089
        gbc.setState(0x35b, 0x2a2a, 0x3dc0, 0x5753, 0x484d, 0x59b2, 0x1, 0x1);
        gbc.writeMem(0x35b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2a2a, gbc.sp());
        EXPECT(0x35d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 008A
        gbc.setState(0x367c, 0x9964, 0x88b0, 0xa7c6, 0xabee, 0xa99b, 0x0, 0x1);
        gbc.writeMem(0x367c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9964, gbc.sp());
        EXPECT(0x367e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 008B
        gbc.setState(0x4d2d, 0xc700, 0x8350, 0xe6a9, 0x7740, 0xbb39, 0x0, 0x0);
        gbc.writeMem(0x4d2d, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc700, gbc.sp());
        EXPECT(0x4d2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 008C
        gbc.setState(0x291a, 0xadc0, 0x2300, 0xd9e, 0x69da, 0x5d7, 0x0, 0x1);
        gbc.writeMem(0x291a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xadc0, gbc.sp());
        EXPECT(0x291c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 008D
        gbc.setState(0x9cd4, 0xe15b, 0x2970, 0x6059, 0xf85e, 0x620e, 0x0, 0x0);
        gbc.writeMem(0x9cd4, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe15b, gbc.sp());
        EXPECT(0x9cd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd4));
        EXPECT(0xa4, gbc.readMem(0x9cd5));
        // CB A4 008E
        gbc.setState(0xadc6, 0x87b0, 0xb230, 0x6da4, 0x748c, 0xb266, 0x1, 0x1);
        gbc.writeMem(0xadc6, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x87b0, gbc.sp());
        EXPECT(0xadc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc6));
        EXPECT(0xa4, gbc.readMem(0xadc7));
        // CB A4 008F
        gbc.setState(0x17b0, 0xe725, 0xdb00, 0x7059, 0x8578, 0x6ded, 0x1, 0x0);
        gbc.writeMem(0x17b0, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe725, gbc.sp());
        EXPECT(0x17b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0090
        gbc.setState(0x8945, 0xcb73, 0xc790, 0x1fab, 0xcb4d, 0x164e, 0x0, 0x1);
        gbc.writeMem(0x8945, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xcb73, gbc.sp());
        EXPECT(0x8947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8945));
        EXPECT(0xa4, gbc.readMem(0x8946));
        // CB A4 0091
        gbc.setState(0x86a8, 0x79cb, 0x3fa0, 0x7aa3, 0xb724, 0x3871, 0x1, 0x1);
        gbc.writeMem(0x86a8, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x79cb, gbc.sp());
        EXPECT(0x86aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86a8));
        EXPECT(0xa4, gbc.readMem(0x86a9));
        // CB A4 0092
        gbc.setState(0x5427, 0xa31d, 0x1060, 0x6062, 0xa796, 0xfd14, 0x1, 0x1);
        gbc.writeMem(0x5427, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa31d, gbc.sp());
        EXPECT(0x5429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0093
        gbc.setState(0x5449, 0x6882, 0x7500, 0xd78d, 0x8b0f, 0x5bb2, 0x0, 0x1);
        gbc.writeMem(0x5449, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6882, gbc.sp());
        EXPECT(0x544b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0094
        gbc.setState(0xd6eb, 0xf8c3, 0xd990, 0x299d, 0xff64, 0xe1bf, 0x0, 0x1);
        gbc.writeMem(0xd6eb, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf8c3, gbc.sp());
        EXPECT(0xd6ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6eb));
        EXPECT(0xa4, gbc.readMem(0xd6ec));
        // CB A4 0095
        gbc.setState(0x2929, 0x7dae, 0x9ee0, 0x105d, 0x199a, 0xc83a, 0x0, 0x1);
        gbc.writeMem(0x2929, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7dae, gbc.sp());
        EXPECT(0x292b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0096
        gbc.setState(0xcd02, 0xb14b, 0x7590, 0x46a0, 0x6436, 0xb420, 0x1, 0x0);
        gbc.writeMem(0xcd02, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb14b, gbc.sp());
        EXPECT(0xcd04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd02));
        EXPECT(0xa4, gbc.readMem(0xcd03));
        // CB A4 0097
        gbc.setState(0x9a69, 0xb8f, 0x5af0, 0x4da, 0x8e9b, 0x500e, 0x1, 0x0);
        gbc.writeMem(0x9a69, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb8f, gbc.sp());
        EXPECT(0x9a6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a69));
        EXPECT(0xa4, gbc.readMem(0x9a6a));
        // CB A4 0098
        gbc.setState(0x38ed, 0x950, 0x1f90, 0x2fba, 0xf5dd, 0xfc25, 0x1, 0x0);
        gbc.writeMem(0x38ed, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x950, gbc.sp());
        EXPECT(0x38ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0099
        gbc.setState(0x5036, 0xea03, 0x5c90, 0x91a9, 0xea62, 0xaee4, 0x1, 0x1);
        gbc.writeMem(0x5036, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xea03, gbc.sp());
        EXPECT(0x5038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 009A
        gbc.setState(0x4dee, 0x74c4, 0x6390, 0xa177, 0x1b42, 0x5e2b, 0x0, 0x1);
        gbc.writeMem(0x4dee, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x74c4, gbc.sp());
        EXPECT(0x4df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 009B
        gbc.setState(0x353c, 0x5dce, 0x54c0, 0x444f, 0xd6e0, 0xec4d, 0x1, 0x1);
        gbc.writeMem(0x353c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5dce, gbc.sp());
        EXPECT(0x353e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 009C
        gbc.setState(0x851d, 0x3472, 0x2550, 0x6835, 0x58f, 0x6cb7, 0x1, 0x0);
        gbc.writeMem(0x851d, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3472, gbc.sp());
        EXPECT(0x851f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x851d));
        EXPECT(0xa4, gbc.readMem(0x851e));
        // CB A4 009D
        gbc.setState(0x91b5, 0x9bb, 0xccc0, 0x72c6, 0xad23, 0xb342, 0x0, 0x0);
        gbc.writeMem(0x91b5, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9bb, gbc.sp());
        EXPECT(0x91b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91b5));
        EXPECT(0xa4, gbc.readMem(0x91b6));
        // CB A4 009E
        gbc.setState(0x800f, 0x564d, 0x67d0, 0xa4ea, 0xd70, 0xc82a, 0x0, 0x0);
        gbc.writeMem(0x800f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x564d, gbc.sp());
        EXPECT(0x8011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x800f));
        EXPECT(0xa4, gbc.readMem(0x8010));
        // CB A4 00A0
        gbc.setState(0xb9c1, 0xd90a, 0x3450, 0x6501, 0x7082, 0xc754, 0x1, 0x0);
        gbc.writeMem(0xb9c1, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd90a, gbc.sp());
        EXPECT(0xb9c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9c1));
        EXPECT(0xa4, gbc.readMem(0xb9c2));
        // CB A4 00A1
        gbc.setState(0xca22, 0x9fc8, 0xc980, 0xc79b, 0x9cd2, 0x3073, 0x1, 0x0);
        gbc.writeMem(0xca22, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9fc8, gbc.sp());
        EXPECT(0xca24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca22));
        EXPECT(0xa4, gbc.readMem(0xca23));
        // CB A4 00A2
        gbc.setState(0x5faf, 0x5c44, 0xf0, 0xd4a8, 0x61bd, 0xb3b2, 0x0, 0x0);
        gbc.writeMem(0x5faf, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5c44, gbc.sp());
        EXPECT(0x5fb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 00A3
        gbc.setState(0x78bb, 0xb9d6, 0x5f80, 0xb356, 0x106f, 0x90ad, 0x0, 0x0);
        gbc.writeMem(0x78bb, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb9d6, gbc.sp());
        EXPECT(0x78bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 00A5
        gbc.setState(0xaf5d, 0xf3c3, 0xb900, 0xc7a9, 0xe150, 0x63f4, 0x0, 0x0);
        gbc.writeMem(0xaf5d, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf3c3, gbc.sp());
        EXPECT(0xaf5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf5d));
        EXPECT(0xa4, gbc.readMem(0xaf5e));
        // CB A4 00A6
        gbc.setState(0x43ca, 0x5bde, 0x4660, 0x5b1d, 0x3013, 0xcd31, 0x1, 0x0);
        gbc.writeMem(0x43ca, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5bde, gbc.sp());
        EXPECT(0x43cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 00A7
        gbc.setState(0xaa1d, 0x448c, 0x9ef0, 0xd2ce, 0x9be7, 0xbbec, 0x1, 0x0);
        gbc.writeMem(0xaa1d, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x448c, gbc.sp());
        EXPECT(0xaa1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa1d));
        EXPECT(0xa4, gbc.readMem(0xaa1e));
        // CB A4 00A8
        gbc.setState(0xa50e, 0x91a5, 0xd650, 0x2933, 0x3b81, 0xf5e8, 0x0, 0x0);
        gbc.writeMem(0xa50e, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x91a5, gbc.sp());
        EXPECT(0xa510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa50e));
        EXPECT(0xa4, gbc.readMem(0xa50f));
        // CB A4 00A9
        gbc.setState(0xa466, 0x3e66, 0xb2a0, 0x84da, 0x8b48, 0xd788, 0x0, 0x0);
        gbc.writeMem(0xa466, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x3e66, gbc.sp());
        EXPECT(0xa468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa466));
        EXPECT(0xa4, gbc.readMem(0xa467));
        // CB A4 00AA
        gbc.setState(0x5104, 0x5d49, 0xca00, 0xc70e, 0xc78a, 0xc0cb, 0x0, 0x1);
        gbc.writeMem(0x5104, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5d49, gbc.sp());
        EXPECT(0x5106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 00AB
        gbc.setState(0xa7f8, 0x609a, 0xb8f0, 0x71, 0x54fd, 0x64df, 0x0, 0x0);
        gbc.writeMem(0xa7f8, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x609a, gbc.sp());
        EXPECT(0xa7fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f8));
        EXPECT(0xa4, gbc.readMem(0xa7f9));
        // CB A4 00AC
        gbc.setState(0xc959, 0xe703, 0x45c0, 0x9c98, 0xa9c2, 0xc06a, 0x1, 0x1);
        gbc.writeMem(0xc959, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe703, gbc.sp());
        EXPECT(0xc95b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc959));
        EXPECT(0xa4, gbc.readMem(0xc95a));
        // CB A4 00AE
        gbc.setState(0x92ed, 0xa3c4, 0xdcc0, 0x803, 0x25d4, 0x88da, 0x1, 0x1);
        gbc.writeMem(0x92ed, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa3c4, gbc.sp());
        EXPECT(0x92ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ed));
        EXPECT(0xa4, gbc.readMem(0x92ee));
        // CB A4 00AF
        gbc.setState(0x120, 0x5af4, 0xc130, 0x4bcf, 0xe36c, 0xe213, 0x1, 0x1);
        gbc.writeMem(0x120, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5af4, gbc.sp());
        EXPECT(0x122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 00B0
        gbc.setState(0xeb0d, 0x2137, 0x4f90, 0x3ba2, 0xaf6, 0x2ab3, 0x0, 0x1);
        gbc.writeMem(0xeb0d, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2137, gbc.sp());
        EXPECT(0xeb0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb0d));
        EXPECT(0xa4, gbc.readMem(0xeb0e));
        // CB A4 00B1
        gbc.setState(0x4add, 0x8037, 0xbb30, 0x68db, 0xb50e, 0xc5e4, 0x1, 0x0);
        gbc.writeMem(0x4add, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8037, gbc.sp());
        EXPECT(0x4adf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 00B2
        gbc.setState(0x1eb1, 0xdf02, 0x9ea0, 0xd2cf, 0xd8d1, 0xd6d9, 0x0, 0x0);
        gbc.writeMem(0x1eb1, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xdf02, gbc.sp());
        EXPECT(0x1eb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 00B3
        gbc.setState(0x3c1, 0x24e0, 0x2f0, 0x56a3, 0x2916, 0xfc17, 0x1, 0x0);
        gbc.writeMem(0x3c1, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x24e0, gbc.sp());
        EXPECT(0x3c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 00B4
        gbc.setState(0x8c93, 0x246d, 0xe630, 0xe413, 0x80e0, 0xaf, 0x1, 0x1);
        gbc.writeMem(0x8c93, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x246d, gbc.sp());
        EXPECT(0x8c95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c93));
        EXPECT(0xa4, gbc.readMem(0x8c94));
        // CB A4 00B5
        gbc.setState(0x4bb0, 0x29f7, 0x3c00, 0x784a, 0x626e, 0x59ff, 0x1, 0x0);
        gbc.writeMem(0x4bb0, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x29f7, gbc.sp());
        EXPECT(0x4bb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 00B6
        gbc.setState(0x3b0f, 0xd43a, 0xce40, 0xbedf, 0x2b83, 0xc51a, 0x0, 0x0);
        gbc.writeMem(0x3b0f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd43a, gbc.sp());
        EXPECT(0x3b11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 00B7
        gbc.setState(0xd84e, 0x6373, 0xe740, 0x5616, 0x6eb7, 0x319c, 0x1, 0x0);
        gbc.writeMem(0xd84e, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6373, gbc.sp());
        EXPECT(0xd850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd84e));
        EXPECT(0xa4, gbc.readMem(0xd84f));
        // CB A4 00B8
        gbc.setState(0x55a0, 0xc845, 0xe70, 0x7482, 0x4bb2, 0x7786, 0x1, 0x0);
        gbc.writeMem(0x55a0, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc845, gbc.sp());
        EXPECT(0x55a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 00B9
        gbc.setState(0x1b1c, 0x5f08, 0x4890, 0xba, 0x5fc0, 0xd33e, 0x0, 0x1);
        gbc.writeMem(0x1b1c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5f08, gbc.sp());
        EXPECT(0x1b1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 00BA
        gbc.setState(0x200c, 0x3741, 0xf7c0, 0xc9af, 0x921c, 0xfe73, 0x1, 0x0);
        gbc.writeMem(0x200c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3741, gbc.sp());
        EXPECT(0x200e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 00BB
        gbc.setState(0x4d0b, 0xe332, 0x9d0, 0x4065, 0xc794, 0xe05, 0x1, 0x1);
        gbc.writeMem(0x4d0b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe332, gbc.sp());
        EXPECT(0x4d0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 00BC
        gbc.setState(0x5c06, 0xaf53, 0x1f30, 0x2504, 0x13c1, 0xb570, 0x1, 0x0);
        gbc.writeMem(0x5c06, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xaf53, gbc.sp());
        EXPECT(0x5c08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 00BD
        gbc.setState(0x10a5, 0x25f, 0x78e0, 0x2487, 0x12ae, 0xabe5, 0x0, 0x1);
        gbc.writeMem(0x10a5, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x25f, gbc.sp());
        EXPECT(0x10a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 00BE
        gbc.setState(0xd3d6, 0x60e9, 0x31a0, 0x31d7, 0x829, 0x2e3a, 0x0, 0x0);
        gbc.writeMem(0xd3d6, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x60e9, gbc.sp());
        EXPECT(0xd3d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3d6));
        EXPECT(0xa4, gbc.readMem(0xd3d7));
        // CB A4 00BF
        gbc.setState(0x65e5, 0x8492, 0x8e40, 0x496a, 0xcfdf, 0x88df, 0x1, 0x0);
        gbc.writeMem(0x65e5, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8492, gbc.sp());
        EXPECT(0x65e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 00C0
        gbc.setState(0x6e85, 0x2e32, 0x6ac0, 0x3641, 0x49aa, 0x8761, 0x0, 0x0);
        gbc.writeMem(0x6e85, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2e32, gbc.sp());
        EXPECT(0x6e87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 00C1
        gbc.setState(0x2d6, 0x8b03, 0xa870, 0x32c0, 0xba69, 0x426b, 0x0, 0x0);
        gbc.writeMem(0x2d6, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8b03, gbc.sp());
        EXPECT(0x2d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 00C2
        gbc.setState(0x1d01, 0x3cc0, 0x4740, 0x1792, 0xdc2, 0x7131, 0x0, 0x1);
        gbc.writeMem(0x1d01, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3cc0, gbc.sp());
        EXPECT(0x1d03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 00C4
        gbc.setState(0x5783, 0xbd2a, 0xb6e0, 0xf8ab, 0xd472, 0x9afd, 0x0, 0x1);
        gbc.writeMem(0x5783, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xbd2a, gbc.sp());
        EXPECT(0x5785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 00C6
        gbc.setState(0xb104, 0x1e9c, 0x2c30, 0x8167, 0x2ab9, 0x866f, 0x0, 0x0);
        gbc.writeMem(0xb104, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1e9c, gbc.sp());
        EXPECT(0xb106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb104));
        EXPECT(0xa4, gbc.readMem(0xb105));
        // CB A4 00C7
        gbc.setState(0x7c64, 0x3afb, 0x1ff0, 0x9a83, 0x2639, 0xf6ed, 0x1, 0x1);
        gbc.writeMem(0x7c64, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3afb, gbc.sp());
        EXPECT(0x7c66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 00C8
        gbc.setState(0x151, 0xa603, 0xe210, 0xb02f, 0xa2d3, 0x1b9a, 0x1, 0x1);
        gbc.writeMem(0x151, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa603, gbc.sp());
        EXPECT(0x153, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 00C9
        gbc.setState(0xd293, 0xd84a, 0x10b0, 0xa0fa, 0xe8e, 0xe7f, 0x1, 0x0);
        gbc.writeMem(0xd293, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd84a, gbc.sp());
        EXPECT(0xd295, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd293));
        EXPECT(0xa4, gbc.readMem(0xd294));
        // CB A4 00CA
        gbc.setState(0xad5e, 0x38b8, 0xa540, 0x3250, 0xc5fe, 0x1d7a, 0x1, 0x1);
        gbc.writeMem(0xad5e, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x38b8, gbc.sp());
        EXPECT(0xad60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad5e));
        EXPECT(0xa4, gbc.readMem(0xad5f));
        // CB A4 00CB
        gbc.setState(0x80, 0xd409, 0xf410, 0x4b03, 0xd521, 0x1e1a, 0x0, 0x1);
        gbc.writeMem(0x80, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd409, gbc.sp());
        EXPECT(0x82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 00CD
        gbc.setState(0x2236, 0x596e, 0x1f70, 0xaf8a, 0xb51e, 0xee6b, 0x0, 0x1);
        gbc.writeMem(0x2236, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x596e, gbc.sp());
        EXPECT(0x2238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 00CE
        gbc.setState(0xd213, 0x2edc, 0x2c30, 0x99db, 0xb96e, 0x3bd0, 0x1, 0x0);
        gbc.writeMem(0xd213, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2edc, gbc.sp());
        EXPECT(0xd215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd213));
        EXPECT(0xa4, gbc.readMem(0xd214));
        // CB A4 00CF
        gbc.setState(0x40e7, 0x21dd, 0xcf90, 0x155a, 0x7d8a, 0x2af8, 0x0, 0x1);
        gbc.writeMem(0x40e7, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x21dd, gbc.sp());
        EXPECT(0x40e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 00D0
        gbc.setState(0x3d66, 0xb4b, 0x93c0, 0x7d0e, 0x5977, 0x4d83, 0x1, 0x1);
        gbc.writeMem(0x3d66, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb4b, gbc.sp());
        EXPECT(0x3d68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 00D2
        gbc.setState(0x1382, 0xb54, 0xee40, 0x8e73, 0xa235, 0x4043, 0x1, 0x0);
        gbc.writeMem(0x1382, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb54, gbc.sp());
        EXPECT(0x1384, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 00D3
        gbc.setState(0xaca4, 0x9681, 0xc1a0, 0xebfe, 0x5ebc, 0xa9ec, 0x0, 0x1);
        gbc.writeMem(0xaca4, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9681, gbc.sp());
        EXPECT(0xaca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaca4));
        EXPECT(0xa4, gbc.readMem(0xaca5));
        // CB A4 00D4
        gbc.setState(0xb6fa, 0x3a8b, 0x5290, 0x9b56, 0xa31, 0xd8a1, 0x0, 0x0);
        gbc.writeMem(0xb6fa, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3a8b, gbc.sp());
        EXPECT(0xb6fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6fa));
        EXPECT(0xa4, gbc.readMem(0xb6fb));
        // CB A4 00D5
        gbc.setState(0x4421, 0x89df, 0xb710, 0xd48a, 0x6b21, 0xb, 0x0, 0x1);
        gbc.writeMem(0x4421, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x89df, gbc.sp());
        EXPECT(0x4423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 00D6
        gbc.setState(0xc4fd, 0xdc42, 0x71e0, 0xce8c, 0x80fc, 0x8f96, 0x1, 0x1);
        gbc.writeMem(0xc4fd, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xdc42, gbc.sp());
        EXPECT(0xc4ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4fd));
        EXPECT(0xa4, gbc.readMem(0xc4fe));
        // CB A4 00D8
        gbc.setState(0xbd28, 0x40f5, 0x5e60, 0xc384, 0x6353, 0x773a, 0x0, 0x1);
        gbc.writeMem(0xbd28, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x40f5, gbc.sp());
        EXPECT(0xbd2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd28));
        EXPECT(0xa4, gbc.readMem(0xbd29));
        // CB A4 00D9
        gbc.setState(0xc3b5, 0xa7c7, 0xe9e0, 0x7e70, 0x60f, 0x4ef3, 0x0, 0x0);
        gbc.writeMem(0xc3b5, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa7c7, gbc.sp());
        EXPECT(0xc3b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3b5));
        EXPECT(0xa4, gbc.readMem(0xc3b6));
        // CB A4 00DA
        gbc.setState(0xde7e, 0x1e70, 0x760, 0x40d9, 0x8674, 0xaf6c, 0x0, 0x1);
        gbc.writeMem(0xde7e, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1e70, gbc.sp());
        EXPECT(0xde80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde7e));
        EXPECT(0xa4, gbc.readMem(0xde7f));
        // CB A4 00DB
        gbc.setState(0x8282, 0xf5da, 0x4da0, 0x879d, 0x2318, 0xa8ae, 0x0, 0x0);
        gbc.writeMem(0x8282, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf5da, gbc.sp());
        EXPECT(0x8284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8282));
        EXPECT(0xa4, gbc.readMem(0x8283));
        // CB A4 00DC
        gbc.setState(0x11b6, 0x92fc, 0xca20, 0x691a, 0x7c69, 0x9f3f, 0x0, 0x1);
        gbc.writeMem(0x11b6, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x92fc, gbc.sp());
        EXPECT(0x11b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 00DD
        gbc.setState(0xc01f, 0x33c5, 0x5b60, 0x7120, 0xae18, 0x3ecb, 0x1, 0x1);
        gbc.writeMem(0xc01f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x33c5, gbc.sp());
        EXPECT(0xc021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc01f));
        EXPECT(0xa4, gbc.readMem(0xc020));
        // CB A4 00DE
        gbc.setState(0xa5b4, 0xb298, 0x2fe0, 0x3539, 0x41d8, 0x9c53, 0x1, 0x1);
        gbc.writeMem(0xa5b4, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb298, gbc.sp());
        EXPECT(0xa5b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5b4));
        EXPECT(0xa4, gbc.readMem(0xa5b5));
        // CB A4 00E0
        gbc.setState(0x9f57, 0xe8ce, 0xaf40, 0xe21c, 0xae27, 0xe9be, 0x1, 0x1);
        gbc.writeMem(0x9f57, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe8ce, gbc.sp());
        EXPECT(0x9f59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f57));
        EXPECT(0xa4, gbc.readMem(0x9f58));
        // CB A4 00E1
        gbc.setState(0x629f, 0xae41, 0xd250, 0xe20f, 0xbfa3, 0x9d45, 0x1, 0x1);
        gbc.writeMem(0x629f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xae41, gbc.sp());
        EXPECT(0x62a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 00E2
        gbc.setState(0x4150, 0xe68, 0x440, 0xce89, 0x68b0, 0x29f6, 0x1, 0x0);
        gbc.writeMem(0x4150, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe68, gbc.sp());
        EXPECT(0x4152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 00E3
        gbc.setState(0x145f, 0xd8a8, 0xefe0, 0x6323, 0x314e, 0xb849, 0x0, 0x0);
        gbc.writeMem(0x145f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd8a8, gbc.sp());
        EXPECT(0x1461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 00E4
        gbc.setState(0x2c9a, 0xe591, 0x7f20, 0x8159, 0xd322, 0xb9fe, 0x1, 0x1);
        gbc.writeMem(0x2c9a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe591, gbc.sp());
        EXPECT(0x2c9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 00E5
        gbc.setState(0xbc03, 0xaddd, 0xf60, 0xde55, 0xbb50, 0x5cb7, 0x0, 0x0);
        gbc.writeMem(0xbc03, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xaddd, gbc.sp());
        EXPECT(0xbc05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc03));
        EXPECT(0xa4, gbc.readMem(0xbc04));
        // CB A4 00E6
        gbc.setState(0x778b, 0x63cd, 0x2a70, 0x49fa, 0xa845, 0xdc0d, 0x1, 0x1);
        gbc.writeMem(0x778b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x63cd, gbc.sp());
        EXPECT(0x778d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 00E7
        gbc.setState(0xefdb, 0x8378, 0xff10, 0xea84, 0x6526, 0x1d16, 0x1, 0x1);
        gbc.writeMem(0xefdb, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8378, gbc.sp());
        EXPECT(0xefdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefdb));
        EXPECT(0xa4, gbc.readMem(0xefdc));
        // CB A4 00E8
        gbc.setState(0xd906, 0xb1f2, 0x2e00, 0xb721, 0x6c86, 0x945a, 0x1, 0x1);
        gbc.writeMem(0xd906, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb1f2, gbc.sp());
        EXPECT(0xd908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd906));
        EXPECT(0xa4, gbc.readMem(0xd907));
        // CB A4 00E9
        gbc.setState(0xb017, 0x384f, 0xd160, 0xd1af, 0xc39, 0x3b6a, 0x1, 0x1);
        gbc.writeMem(0xb017, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x384f, gbc.sp());
        EXPECT(0xb019, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb017));
        EXPECT(0xa4, gbc.readMem(0xb018));
        // CB A4 00EA
        gbc.setState(0x63c4, 0x79a6, 0x7750, 0x607a, 0x739d, 0xbe3b, 0x1, 0x0);
        gbc.writeMem(0x63c4, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x79a6, gbc.sp());
        EXPECT(0x63c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 00EB
        gbc.setState(0x73ee, 0x22b1, 0x5b30, 0xec9a, 0x45a5, 0xb82, 0x0, 0x0);
        gbc.writeMem(0x73ee, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x22b1, gbc.sp());
        EXPECT(0x73f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 00EC
        gbc.setState(0x826c, 0x8ef4, 0xb290, 0x6433, 0x975, 0xda44, 0x1, 0x1);
        gbc.writeMem(0x826c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8ef4, gbc.sp());
        EXPECT(0x826e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x826c));
        EXPECT(0xa4, gbc.readMem(0x826d));
        // CB A4 00ED
        gbc.setState(0x30fd, 0x2b82, 0x5070, 0xc2de, 0xdcc4, 0x5ed5, 0x0, 0x0);
        gbc.writeMem(0x30fd, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2b82, gbc.sp());
        EXPECT(0x30ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 00EE
        gbc.setState(0xa615, 0x26f6, 0xc380, 0xb618, 0x1105, 0xa5d9, 0x0, 0x0);
        gbc.writeMem(0xa615, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x26f6, gbc.sp());
        EXPECT(0xa617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa615));
        EXPECT(0xa4, gbc.readMem(0xa616));
        // CB A4 00EF
        gbc.setState(0x13be, 0xc6f8, 0x5770, 0x2199, 0x495f, 0xefad, 0x0, 0x0);
        gbc.writeMem(0x13be, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc6f8, gbc.sp());
        EXPECT(0x13c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 00F0
        gbc.setState(0x8f87, 0x6dcb, 0xc960, 0xbfec, 0xba33, 0xc5ba, 0x0, 0x0);
        gbc.writeMem(0x8f87, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6dcb, gbc.sp());
        EXPECT(0x8f89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f87));
        EXPECT(0xa4, gbc.readMem(0x8f88));
        // CB A4 00F1
        gbc.setState(0x536f, 0xfa51, 0xa3e0, 0x5a8d, 0x876e, 0xc96e, 0x0, 0x0);
        gbc.writeMem(0x536f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xfa51, gbc.sp());
        EXPECT(0x5371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 00F2
        gbc.setState(0xde54, 0x77f7, 0xf7c0, 0x910a, 0xab45, 0x37d7, 0x1, 0x1);
        gbc.writeMem(0xde54, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x77f7, gbc.sp());
        EXPECT(0xde56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde54));
        EXPECT(0xa4, gbc.readMem(0xde55));
        // CB A4 00F3
        gbc.setState(0xb6ea, 0x42d3, 0x8590, 0x1987, 0x13be, 0xdaa1, 0x0, 0x0);
        gbc.writeMem(0xb6ea, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x42d3, gbc.sp());
        EXPECT(0xb6ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6ea));
        EXPECT(0xa4, gbc.readMem(0xb6eb));
        // CB A4 00F4
        gbc.setState(0xbbe3, 0x9e0a, 0xead0, 0xabe5, 0x1115, 0xed8a, 0x0, 0x0);
        gbc.writeMem(0xbbe3, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9e0a, gbc.sp());
        EXPECT(0xbbe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe3));
        EXPECT(0xa4, gbc.readMem(0xbbe4));
        // CB A4 00F5
        gbc.setState(0xbc01, 0xfabf, 0x3550, 0x4f38, 0xe40b, 0x20d0, 0x1, 0x0);
        gbc.writeMem(0xbc01, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xfabf, gbc.sp());
        EXPECT(0xbc03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc01));
        EXPECT(0xa4, gbc.readMem(0xbc02));
        // CB A4 00F6
        gbc.setState(0xccb1, 0x806, 0xe4a0, 0x2756, 0xd61, 0x420b, 0x0, 0x0);
        gbc.writeMem(0xccb1, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x806, gbc.sp());
        EXPECT(0xccb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccb1));
        EXPECT(0xa4, gbc.readMem(0xccb2));
        // CB A4 00F7
        gbc.setState(0x3956, 0x5c9, 0x60e0, 0xd105, 0xe915, 0xb883, 0x0, 0x0);
        gbc.writeMem(0x3956, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5c9, gbc.sp());
        EXPECT(0x3958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 00F8
        gbc.setState(0xc878, 0xcd17, 0x4280, 0x6235, 0x6db0, 0x9836, 0x0, 0x1);
        gbc.writeMem(0xc878, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xcd17, gbc.sp());
        EXPECT(0xc87a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc878));
        EXPECT(0xa4, gbc.readMem(0xc879));
        // CB A4 00F9
        gbc.setState(0xb7f7, 0x4134, 0x14e0, 0x609e, 0x43a9, 0xe571, 0x1, 0x1);
        gbc.writeMem(0xb7f7, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4134, gbc.sp());
        EXPECT(0xb7f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7f7));
        EXPECT(0xa4, gbc.readMem(0xb7f8));
        // CB A4 00FA
        gbc.setState(0xe162, 0x6203, 0x7280, 0xe123, 0xc04a, 0xdade, 0x1, 0x1);
        gbc.writeMem(0xe162, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6203, gbc.sp());
        EXPECT(0xe164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe162));
        EXPECT(0xa4, gbc.readMem(0xe163));
        // CB A4 00FB
        gbc.setState(0x881b, 0xa2b0, 0x40e0, 0xeb58, 0xf7e9, 0x1963, 0x1, 0x1);
        gbc.writeMem(0x881b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa2b0, gbc.sp());
        EXPECT(0x881d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x881b));
        EXPECT(0xa4, gbc.readMem(0x881c));
        // CB A4 00FC
        gbc.setState(0x1361, 0xa5e3, 0xa1d0, 0x289d, 0x4d46, 0xb63, 0x1, 0x1);
        gbc.writeMem(0x1361, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa5e3, gbc.sp());
        EXPECT(0x1363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 00FD
        gbc.setState(0xc880, 0xc2d4, 0x2840, 0x9e21, 0xccdb, 0x818d, 0x0, 0x0);
        gbc.writeMem(0xc880, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc2d4, gbc.sp());
        EXPECT(0xc882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc880));
        EXPECT(0xa4, gbc.readMem(0xc881));
        // CB A4 00FE
        gbc.setState(0xee8, 0x813e, 0x5e0, 0x1def, 0x247, 0xa911, 0x1, 0x0);
        gbc.writeMem(0xee8, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x813e, gbc.sp());
        EXPECT(0xeea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 00FF
        gbc.setState(0xa92b, 0x2881, 0x8930, 0x2c7f, 0x3ba8, 0xce0d, 0x0, 0x1);
        gbc.writeMem(0xa92b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2881, gbc.sp());
        EXPECT(0xa92d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa92b));
        EXPECT(0xa4, gbc.readMem(0xa92c));
        // CB A4 0100
        gbc.setState(0x8b4c, 0x87d0, 0x9120, 0x1d09, 0x8f26, 0xb497, 0x0, 0x1);
        gbc.writeMem(0x8b4c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x87d0, gbc.sp());
        EXPECT(0x8b4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b4c));
        EXPECT(0xa4, gbc.readMem(0x8b4d));
        // CB A4 0101
        gbc.setState(0x3bf0, 0x2264, 0x4b40, 0xa570, 0xf29, 0x2b10, 0x1, 0x1);
        gbc.writeMem(0x3bf0, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2264, gbc.sp());
        EXPECT(0x3bf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0102
        gbc.setState(0x20d1, 0xd4b, 0x7850, 0x316f, 0x9c49, 0x1461, 0x0, 0x0);
        gbc.writeMem(0x20d1, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd4b, gbc.sp());
        EXPECT(0x20d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0103
        gbc.setState(0x2417, 0xc3f4, 0x93a0, 0xb09c, 0xbce4, 0xc492, 0x1, 0x1);
        gbc.writeMem(0x2417, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc3f4, gbc.sp());
        EXPECT(0x2419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0104
        gbc.setState(0x9b79, 0x42e3, 0xb1e0, 0x3d65, 0x4205, 0x2d56, 0x1, 0x0);
        gbc.writeMem(0x9b79, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x42e3, gbc.sp());
        EXPECT(0x9b7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b79));
        EXPECT(0xa4, gbc.readMem(0x9b7a));
        // CB A4 0106
        gbc.setState(0x1f22, 0x763, 0x2110, 0xedb7, 0x2b98, 0x9e7e, 0x1, 0x0);
        gbc.writeMem(0x1f22, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x763, gbc.sp());
        EXPECT(0x1f24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0107
        gbc.setState(0x3b65, 0xbdea, 0x22f0, 0xf3df, 0x6767, 0x766b, 0x0, 0x0);
        gbc.writeMem(0x3b65, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xbdea, gbc.sp());
        EXPECT(0x3b67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0108
        gbc.setState(0xc91a, 0xaf81, 0x5de0, 0xe0f4, 0x22, 0x4fc4, 0x0, 0x1);
        gbc.writeMem(0xc91a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xaf81, gbc.sp());
        EXPECT(0xc91c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc91a));
        EXPECT(0xa4, gbc.readMem(0xc91b));
        // CB A4 0109
        gbc.setState(0x58aa, 0x3042, 0x6cc0, 0xb11c, 0x383b, 0xa9b9, 0x1, 0x1);
        gbc.writeMem(0x58aa, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3042, gbc.sp());
        EXPECT(0x58ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 010A
        gbc.setState(0xb122, 0x8042, 0x82b0, 0xaf64, 0x2e03, 0xb08c, 0x1, 0x0);
        gbc.writeMem(0xb122, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8042, gbc.sp());
        EXPECT(0xb124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb122));
        EXPECT(0xa4, gbc.readMem(0xb123));
        // CB A4 010B
        gbc.setState(0x7042, 0x505, 0x8fe0, 0x7906, 0x4ed1, 0x6b4c, 0x1, 0x1);
        gbc.writeMem(0x7042, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x505, gbc.sp());
        EXPECT(0x7044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 010C
        gbc.setState(0xcf95, 0xef62, 0xc790, 0xdbf6, 0xb1ae, 0xae7a, 0x0, 0x1);
        gbc.writeMem(0xcf95, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xef62, gbc.sp());
        EXPECT(0xcf97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf95));
        EXPECT(0xa4, gbc.readMem(0xcf96));
        // CB A4 010D
        gbc.setState(0x6f8, 0x30dd, 0xcbd0, 0x1639, 0xac68, 0xe9b2, 0x1, 0x0);
        gbc.writeMem(0x6f8, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x30dd, gbc.sp());
        EXPECT(0x6fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 010E
        gbc.setState(0xe2b3, 0x8ea0, 0xbea0, 0xfde8, 0xd4f1, 0xc542, 0x0, 0x1);
        gbc.writeMem(0xe2b3, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8ea0, gbc.sp());
        EXPECT(0xe2b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2b3));
        EXPECT(0xa4, gbc.readMem(0xe2b4));
        // CB A4 0110
        gbc.setState(0x1079, 0x6b1b, 0x7e20, 0x3a09, 0x8ce1, 0x9300, 0x0, 0x0);
        gbc.writeMem(0x1079, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6b1b, gbc.sp());
        EXPECT(0x107b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0111
        gbc.setState(0x162e, 0xb823, 0x5460, 0x6215, 0xea7d, 0x3e72, 0x0, 0x0);
        gbc.writeMem(0x162e, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb823, gbc.sp());
        EXPECT(0x1630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0112
        gbc.setState(0x7a2a, 0xcf72, 0x6f90, 0x6d7f, 0x3c7e, 0xb663, 0x1, 0x0);
        gbc.writeMem(0x7a2a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xcf72, gbc.sp());
        EXPECT(0x7a2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0113
        gbc.setState(0xecb8, 0x2aaf, 0xec20, 0xc510, 0xa24, 0x75bb, 0x0, 0x0);
        gbc.writeMem(0xecb8, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2aaf, gbc.sp());
        EXPECT(0xecba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecb8));
        EXPECT(0xa4, gbc.readMem(0xecb9));
        // CB A4 0114
        gbc.setState(0xd0a0, 0x4233, 0xcad0, 0x5d74, 0x95b8, 0x23fa, 0x0, 0x1);
        gbc.writeMem(0xd0a0, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4233, gbc.sp());
        EXPECT(0xd0a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0a0));
        EXPECT(0xa4, gbc.readMem(0xd0a1));
        // CB A4 0115
        gbc.setState(0x8bfd, 0xd08f, 0x7100, 0xf27f, 0x6e68, 0xf5ad, 0x0, 0x1);
        gbc.writeMem(0x8bfd, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd08f, gbc.sp());
        EXPECT(0x8bff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bfd));
        EXPECT(0xa4, gbc.readMem(0x8bfe));
        // CB A4 0116
        gbc.setState(0x33ef, 0x6714, 0xdde0, 0xd448, 0x9ec0, 0x12d8, 0x1, 0x1);
        gbc.writeMem(0x33ef, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6714, gbc.sp());
        EXPECT(0x33f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0117
        gbc.setState(0x4051, 0xa073, 0x73b0, 0x87c2, 0x4477, 0xd87b, 0x0, 0x1);
        gbc.writeMem(0x4051, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa073, gbc.sp());
        EXPECT(0x4053, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0118
        gbc.setState(0xe906, 0x9222, 0xcb10, 0x95c0, 0x2337, 0x8809, 0x0, 0x0);
        gbc.writeMem(0xe906, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9222, gbc.sp());
        EXPECT(0xe908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe906));
        EXPECT(0xa4, gbc.readMem(0xe907));
        // CB A4 0119
        gbc.setState(0xc575, 0x4a37, 0xa520, 0x3c47, 0x6cd7, 0xa9c3, 0x0, 0x1);
        gbc.writeMem(0xc575, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4a37, gbc.sp());
        EXPECT(0xc577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc575));
        EXPECT(0xa4, gbc.readMem(0xc576));
        // CB A4 011A
        gbc.setState(0xdd6f, 0xe294, 0xa5c0, 0xc532, 0xe6a3, 0x73c5, 0x0, 0x0);
        gbc.writeMem(0xdd6f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe294, gbc.sp());
        EXPECT(0xdd71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd6f));
        EXPECT(0xa4, gbc.readMem(0xdd70));
        // CB A4 011B
        gbc.setState(0x6ed1, 0xe19d, 0xc770, 0x4685, 0x8801, 0x4148, 0x1, 0x0);
        gbc.writeMem(0x6ed1, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe19d, gbc.sp());
        EXPECT(0x6ed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 011C
        gbc.setState(0xdece, 0xbfa9, 0x1f90, 0x74f6, 0x54d4, 0x4ef7, 0x1, 0x0);
        gbc.writeMem(0xdece, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbfa9, gbc.sp());
        EXPECT(0xded0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdece));
        EXPECT(0xa4, gbc.readMem(0xdecf));
        // CB A4 011D
        gbc.setState(0x5582, 0xa81f, 0xf510, 0x7153, 0x9d60, 0x2826, 0x0, 0x0);
        gbc.writeMem(0x5582, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa81f, gbc.sp());
        EXPECT(0x5584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 011E
        gbc.setState(0x6e81, 0x53c2, 0xf230, 0xf80a, 0xa27d, 0x7eef, 0x1, 0x1);
        gbc.writeMem(0x6e81, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x53c2, gbc.sp());
        EXPECT(0x6e83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0120
        gbc.setState(0x4c14, 0xd5e2, 0xff70, 0xcdff, 0xf183, 0x2d78, 0x1, 0x1);
        gbc.writeMem(0x4c14, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd5e2, gbc.sp());
        EXPECT(0x4c16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0121
        gbc.setState(0x1cea, 0xb5ec, 0xad50, 0xc527, 0x11e4, 0x1c80, 0x0, 0x0);
        gbc.writeMem(0x1cea, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb5ec, gbc.sp());
        EXPECT(0x1cec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0122
        gbc.setState(0x93d1, 0x5707, 0x9b10, 0xf50, 0x44da, 0xd18e, 0x1, 0x1);
        gbc.writeMem(0x93d1, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5707, gbc.sp());
        EXPECT(0x93d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93d1));
        EXPECT(0xa4, gbc.readMem(0x93d2));
        // CB A4 0123
        gbc.setState(0x3588, 0x47fa, 0xf330, 0xfc73, 0xb3c4, 0xb6b5, 0x0, 0x0);
        gbc.writeMem(0x3588, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x47fa, gbc.sp());
        EXPECT(0x358a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0124
        gbc.setState(0x7741, 0x6e43, 0xb6d0, 0xf04a, 0x8102, 0x19ba, 0x1, 0x1);
        gbc.writeMem(0x7741, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6e43, gbc.sp());
        EXPECT(0x7743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0125
        gbc.setState(0x6cac, 0x1df9, 0x64f0, 0xcb5f, 0xc055, 0x393, 0x0, 0x0);
        gbc.writeMem(0x6cac, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1df9, gbc.sp());
        EXPECT(0x6cae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0126
        gbc.setState(0x6ad1, 0x50a3, 0xf930, 0xd967, 0xbb6e, 0x1bf8, 0x1, 0x0);
        gbc.writeMem(0x6ad1, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x50a3, gbc.sp());
        EXPECT(0x6ad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0127
        gbc.setState(0x7219, 0x2cf9, 0x1e60, 0x9fe, 0xdad4, 0x3c4c, 0x0, 0x0);
        gbc.writeMem(0x7219, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2cf9, gbc.sp());
        EXPECT(0x721b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0128
        gbc.setState(0x9da4, 0x62d, 0x5e60, 0x2075, 0x4151, 0xffcd, 0x1, 0x0);
        gbc.writeMem(0x9da4, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x62d, gbc.sp());
        EXPECT(0x9da6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9da4));
        EXPECT(0xa4, gbc.readMem(0x9da5));
        // CB A4 0129
        gbc.setState(0x5b87, 0xf497, 0x9f90, 0x7c7c, 0x90a7, 0x921, 0x0, 0x1);
        gbc.writeMem(0x5b87, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf497, gbc.sp());
        EXPECT(0x5b89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 012A
        gbc.setState(0x5e12, 0xf46, 0x6a80, 0x944d, 0x5208, 0x274, 0x1, 0x1);
        gbc.writeMem(0x5e12, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf46, gbc.sp());
        EXPECT(0x5e14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 012B
        gbc.setState(0xbc8c, 0xd721, 0x24e0, 0x9c90, 0x58bc, 0xaabf, 0x0, 0x0);
        gbc.writeMem(0xbc8c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd721, gbc.sp());
        EXPECT(0xbc8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc8c));
        EXPECT(0xa4, gbc.readMem(0xbc8d));
        // CB A4 012C
        gbc.setState(0xdf5f, 0x6e09, 0xbc60, 0xad25, 0xe1a0, 0xd5ea, 0x0, 0x0);
        gbc.writeMem(0xdf5f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6e09, gbc.sp());
        EXPECT(0xdf61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf5f));
        EXPECT(0xa4, gbc.readMem(0xdf60));
        // CB A4 012D
        gbc.setState(0xbfde, 0xf156, 0xd8a0, 0xe779, 0xe3f2, 0xe868, 0x0, 0x1);
        gbc.writeMem(0xbfde, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf156, gbc.sp());
        EXPECT(0xbfe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfde));
        EXPECT(0xa4, gbc.readMem(0xbfdf));
        // CB A4 012E
        gbc.setState(0xe56d, 0x7883, 0xe550, 0x577b, 0xc0eb, 0xab8f, 0x0, 0x1);
        gbc.writeMem(0xe56d, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7883, gbc.sp());
        EXPECT(0xe56f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe56d));
        EXPECT(0xa4, gbc.readMem(0xe56e));
        // CB A4 012F
        gbc.setState(0x92af, 0x4708, 0xa0c0, 0xbfd2, 0x78b6, 0x6fc3, 0x1, 0x0);
        gbc.writeMem(0x92af, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4708, gbc.sp());
        EXPECT(0x92b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92af));
        EXPECT(0xa4, gbc.readMem(0x92b0));
        // CB A4 0130
        gbc.setState(0xccd0, 0xcd72, 0x6df0, 0xf682, 0x3c64, 0x50b2, 0x0, 0x0);
        gbc.writeMem(0xccd0, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xcd72, gbc.sp());
        EXPECT(0xccd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccd0));
        EXPECT(0xa4, gbc.readMem(0xccd1));
        // CB A4 0131
        gbc.setState(0x5a02, 0xfd44, 0xeba0, 0xabb3, 0xcf7a, 0xec69, 0x1, 0x1);
        gbc.writeMem(0x5a02, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xfd44, gbc.sp());
        EXPECT(0x5a04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0132
        gbc.setState(0xca8f, 0xab9d, 0x5140, 0x71ae, 0x855d, 0x5a74, 0x1, 0x0);
        gbc.writeMem(0xca8f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xab9d, gbc.sp());
        EXPECT(0xca91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca8f));
        EXPECT(0xa4, gbc.readMem(0xca90));
        // CB A4 0133
        gbc.setState(0x99f7, 0x1336, 0xdf10, 0x569f, 0xb194, 0xff14, 0x0, 0x0);
        gbc.writeMem(0x99f7, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1336, gbc.sp());
        EXPECT(0x99f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99f7));
        EXPECT(0xa4, gbc.readMem(0x99f8));
        // CB A4 0134
        gbc.setState(0x95fd, 0xd6, 0x4420, 0xff95, 0xe0, 0xab8c, 0x0, 0x1);
        gbc.writeMem(0x95fd, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd6, gbc.sp());
        EXPECT(0x95ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95fd));
        EXPECT(0xa4, gbc.readMem(0x95fe));
        // CB A4 0135
        gbc.setState(0x61e8, 0xdee5, 0x3350, 0x9f5c, 0xefcd, 0x24ce, 0x0, 0x0);
        gbc.writeMem(0x61e8, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xdee5, gbc.sp());
        EXPECT(0x61ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0136
        gbc.setState(0x9e7a, 0x570, 0x1060, 0xd35e, 0xe8d7, 0xc126, 0x1, 0x1);
        gbc.writeMem(0x9e7a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x570, gbc.sp());
        EXPECT(0x9e7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e7a));
        EXPECT(0xa4, gbc.readMem(0x9e7b));
        // CB A4 0137
        gbc.setState(0xb876, 0x627a, 0x76a0, 0x539, 0x60da, 0x99db, 0x0, 0x0);
        gbc.writeMem(0xb876, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x627a, gbc.sp());
        EXPECT(0xb878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb876));
        EXPECT(0xa4, gbc.readMem(0xb877));
        // CB A4 0138
        gbc.setState(0xbccb, 0x6c5, 0x3780, 0x7866, 0xcfb7, 0xebe3, 0x1, 0x1);
        gbc.writeMem(0xbccb, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6c5, gbc.sp());
        EXPECT(0xbccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbccb));
        EXPECT(0xa4, gbc.readMem(0xbccc));
        // CB A4 0139
        gbc.setState(0x8d64, 0xdb57, 0x6950, 0xf6b, 0xd0c0, 0xed41, 0x1, 0x0);
        gbc.writeMem(0x8d64, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xdb57, gbc.sp());
        EXPECT(0x8d66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d64));
        EXPECT(0xa4, gbc.readMem(0x8d65));
        // CB A4 013A
        gbc.setState(0xacdf, 0xf91d, 0xb9b0, 0xd880, 0x52cb, 0xacf1, 0x1, 0x1);
        gbc.writeMem(0xacdf, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf91d, gbc.sp());
        EXPECT(0xace1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacdf));
        EXPECT(0xa4, gbc.readMem(0xace0));
        // CB A4 013B
        gbc.setState(0x7f5f, 0x2ee9, 0xae50, 0xdba7, 0xfe5a, 0xcc13, 0x0, 0x0);
        gbc.writeMem(0x7f5f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2ee9, gbc.sp());
        EXPECT(0x7f61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 013C
        gbc.setState(0xbf7a, 0xac1a, 0x3ec0, 0xc82c, 0x3acc, 0xc615, 0x0, 0x1);
        gbc.writeMem(0xbf7a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xac1a, gbc.sp());
        EXPECT(0xbf7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf7a));
        EXPECT(0xa4, gbc.readMem(0xbf7b));
        // CB A4 013E
        gbc.setState(0x792a, 0x1069, 0x1630, 0x9866, 0x527a, 0x45f2, 0x1, 0x0);
        gbc.writeMem(0x792a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1069, gbc.sp());
        EXPECT(0x792c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 013F
        gbc.setState(0x3fcb, 0x7e5c, 0x5680, 0x1f3e, 0x3b6f, 0x25d0, 0x0, 0x1);
        gbc.writeMem(0x3fcb, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7e5c, gbc.sp());
        EXPECT(0x3fcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0140
        gbc.setState(0x933c, 0xcdba, 0x3c80, 0xdf3b, 0x3822, 0xe5b7, 0x1, 0x0);
        gbc.writeMem(0x933c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xcdba, gbc.sp());
        EXPECT(0x933e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x933c));
        EXPECT(0xa4, gbc.readMem(0x933d));
        // CB A4 0141
        gbc.setState(0x4d7c, 0x370e, 0xd640, 0xce3, 0x7045, 0x620b, 0x0, 0x1);
        gbc.writeMem(0x4d7c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x370e, gbc.sp());
        EXPECT(0x4d7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0142
        gbc.setState(0x3249, 0x3b4f, 0xa880, 0x70e3, 0x821f, 0xda4e, 0x0, 0x0);
        gbc.writeMem(0x3249, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3b4f, gbc.sp());
        EXPECT(0x324b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0143
        gbc.setState(0xa9ab, 0xdf54, 0xa5d0, 0xd365, 0x5ff9, 0xd784, 0x1, 0x1);
        gbc.writeMem(0xa9ab, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xdf54, gbc.sp());
        EXPECT(0xa9ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9ab));
        EXPECT(0xa4, gbc.readMem(0xa9ac));
        // CB A4 0144
        gbc.setState(0xc1a7, 0x1d85, 0x99a0, 0x71e, 0x9e87, 0xa1e, 0x0, 0x1);
        gbc.writeMem(0xc1a7, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1d85, gbc.sp());
        EXPECT(0xc1a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1a7));
        EXPECT(0xa4, gbc.readMem(0xc1a8));
        // CB A4 0145
        gbc.setState(0x8dc9, 0xed14, 0xb000, 0xb09f, 0x4705, 0x59f7, 0x1, 0x0);
        gbc.writeMem(0x8dc9, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xed14, gbc.sp());
        EXPECT(0x8dcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dc9));
        EXPECT(0xa4, gbc.readMem(0x8dca));
        // CB A4 0146
        gbc.setState(0x57f6, 0x8e84, 0x90f0, 0x8c43, 0x363d, 0x241e, 0x1, 0x0);
        gbc.writeMem(0x57f6, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8e84, gbc.sp());
        EXPECT(0x57f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0147
        gbc.setState(0x9593, 0x1e06, 0xccb0, 0x63f7, 0x8695, 0x8a87, 0x1, 0x1);
        gbc.writeMem(0x9593, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1e06, gbc.sp());
        EXPECT(0x9595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9593));
        EXPECT(0xa4, gbc.readMem(0x9594));
        // CB A4 0148
        gbc.setState(0x34c0, 0xa1a6, 0x2cd0, 0xffd0, 0x4a40, 0x56d5, 0x0, 0x0);
        gbc.writeMem(0x34c0, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa1a6, gbc.sp());
        EXPECT(0x34c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0149
        gbc.setState(0xdcd9, 0x8857, 0xbae0, 0x3ead, 0x3db7, 0xee7e, 0x0, 0x0);
        gbc.writeMem(0xdcd9, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8857, gbc.sp());
        EXPECT(0xdcdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcd9));
        EXPECT(0xa4, gbc.readMem(0xdcda));
        // CB A4 014A
        gbc.setState(0xee04, 0x52a8, 0xc860, 0x104b, 0x57ee, 0x2355, 0x1, 0x0);
        gbc.writeMem(0xee04, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x52a8, gbc.sp());
        EXPECT(0xee06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee04));
        EXPECT(0xa4, gbc.readMem(0xee05));
        // CB A4 014B
        gbc.setState(0x492a, 0x9f94, 0xb0, 0x1a58, 0x8d4b, 0xc860, 0x1, 0x0);
        gbc.writeMem(0x492a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9f94, gbc.sp());
        EXPECT(0x492c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 014C
        gbc.setState(0xcf69, 0x84e5, 0xe250, 0x670e, 0x6e74, 0xeade, 0x0, 0x0);
        gbc.writeMem(0xcf69, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x84e5, gbc.sp());
        EXPECT(0xcf6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf69));
        EXPECT(0xa4, gbc.readMem(0xcf6a));
        // CB A4 014D
        gbc.setState(0x3d78, 0x9a68, 0x5440, 0x6f5f, 0xe3c7, 0xd3dc, 0x0, 0x0);
        gbc.writeMem(0x3d78, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9a68, gbc.sp());
        EXPECT(0x3d7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 014E
        gbc.setState(0x548a, 0x5623, 0xfef0, 0x99ab, 0x91ed, 0x8abf, 0x0, 0x1);
        gbc.writeMem(0x548a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5623, gbc.sp());
        EXPECT(0x548c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 014F
        gbc.setState(0xe9f8, 0xbf8b, 0x9030, 0x774e, 0xa04b, 0x624b, 0x0, 0x0);
        gbc.writeMem(0xe9f8, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbf8b, gbc.sp());
        EXPECT(0xe9fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9f8));
        EXPECT(0xa4, gbc.readMem(0xe9f9));
        // CB A4 0150
        gbc.setState(0xa396, 0xf8a1, 0x8380, 0xbe45, 0x98fd, 0x6a9d, 0x0, 0x0);
        gbc.writeMem(0xa396, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf8a1, gbc.sp());
        EXPECT(0xa398, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa396));
        EXPECT(0xa4, gbc.readMem(0xa397));
        // CB A4 0151
        gbc.setState(0x277b, 0x5863, 0x71d0, 0x802, 0x30b3, 0xf17b, 0x0, 0x0);
        gbc.writeMem(0x277b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5863, gbc.sp());
        EXPECT(0x277d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0152
        gbc.setState(0x3d5c, 0xe72a, 0xd9a0, 0xdba7, 0xdf2c, 0x91b3, 0x1, 0x1);
        gbc.writeMem(0x3d5c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe72a, gbc.sp());
        EXPECT(0x3d5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0153
        gbc.setState(0x6bb3, 0xc72c, 0x8f60, 0xc3f0, 0xc38f, 0x2b83, 0x1, 0x0);
        gbc.writeMem(0x6bb3, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc72c, gbc.sp());
        EXPECT(0x6bb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0154
        gbc.setState(0xe47c, 0x933c, 0xf820, 0xd09, 0x8465, 0x5505, 0x0, 0x0);
        gbc.writeMem(0xe47c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x933c, gbc.sp());
        EXPECT(0xe47e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe47c));
        EXPECT(0xa4, gbc.readMem(0xe47d));
        // CB A4 0155
        gbc.setState(0xbea7, 0x57f9, 0x610, 0x4315, 0xc44f, 0x55f3, 0x1, 0x0);
        gbc.writeMem(0xbea7, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x57f9, gbc.sp());
        EXPECT(0xbea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbea7));
        EXPECT(0xa4, gbc.readMem(0xbea8));
        // CB A4 0156
        gbc.setState(0xce26, 0xe25e, 0x4fb0, 0x19c2, 0x4930, 0xb526, 0x0, 0x0);
        gbc.writeMem(0xce26, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe25e, gbc.sp());
        EXPECT(0xce28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce26));
        EXPECT(0xa4, gbc.readMem(0xce27));
        // CB A4 0157
        gbc.setState(0x96d7, 0x958d, 0xbdc0, 0x49a0, 0xe485, 0xe8d8, 0x1, 0x0);
        gbc.writeMem(0x96d7, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x958d, gbc.sp());
        EXPECT(0x96d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96d7));
        EXPECT(0xa4, gbc.readMem(0x96d8));
        // CB A4 0158
        gbc.setState(0xad21, 0x2c90, 0xf230, 0xfa5c, 0x6a5f, 0x821c, 0x1, 0x1);
        gbc.writeMem(0xad21, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2c90, gbc.sp());
        EXPECT(0xad23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad21));
        EXPECT(0xa4, gbc.readMem(0xad22));
        // CB A4 0159
        gbc.setState(0x82a8, 0x9044, 0x1ae0, 0x67f8, 0xd45c, 0x606b, 0x1, 0x0);
        gbc.writeMem(0x82a8, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9044, gbc.sp());
        EXPECT(0x82aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82a8));
        EXPECT(0xa4, gbc.readMem(0x82a9));
        // CB A4 015A
        gbc.setState(0x3d88, 0x28db, 0x3ec0, 0xe89a, 0x53cc, 0xb670, 0x1, 0x0);
        gbc.writeMem(0x3d88, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x28db, gbc.sp());
        EXPECT(0x3d8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 015B
        gbc.setState(0x2c47, 0xff5f, 0xdfc0, 0xe365, 0x9215, 0x840e, 0x0, 0x1);
        gbc.writeMem(0x2c47, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xff5f, gbc.sp());
        EXPECT(0x2c49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 015C
        gbc.setState(0x3f25, 0x24ab, 0x3460, 0x552a, 0xfcb0, 0x9958, 0x0, 0x1);
        gbc.writeMem(0x3f25, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x24ab, gbc.sp());
        EXPECT(0x3f27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 015D
        gbc.setState(0x7c7c, 0x49de, 0x5120, 0x3205, 0x663b, 0x2079, 0x1, 0x1);
        gbc.writeMem(0x7c7c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x49de, gbc.sp());
        EXPECT(0x7c7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 015E
        gbc.setState(0xea1d, 0xb3d5, 0xf1a0, 0x51cf, 0x37ae, 0xc0ec, 0x0, 0x1);
        gbc.writeMem(0xea1d, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb3d5, gbc.sp());
        EXPECT(0xea1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea1d));
        EXPECT(0xa4, gbc.readMem(0xea1e));
        // CB A4 0160
        gbc.setState(0x374e, 0xebb9, 0xfd10, 0xdb52, 0xe5b1, 0x18f, 0x1, 0x1);
        gbc.writeMem(0x374e, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xebb9, gbc.sp());
        EXPECT(0x3750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0161
        gbc.setState(0x1360, 0x67be, 0x9950, 0x2a95, 0xd871, 0x1168, 0x1, 0x1);
        gbc.writeMem(0x1360, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x67be, gbc.sp());
        EXPECT(0x1362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0162
        gbc.setState(0x97cb, 0x2b6, 0x7c60, 0xdd6d, 0xf21a, 0x1529, 0x0, 0x1);
        gbc.writeMem(0x97cb, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2b6, gbc.sp());
        EXPECT(0x97cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97cb));
        EXPECT(0xa4, gbc.readMem(0x97cc));
        // CB A4 0163
        gbc.setState(0xdd66, 0x6854, 0x82c0, 0xde45, 0x31cd, 0xf0dd, 0x1, 0x1);
        gbc.writeMem(0xdd66, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6854, gbc.sp());
        EXPECT(0xdd68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd66));
        EXPECT(0xa4, gbc.readMem(0xdd67));
        // CB A4 0164
        gbc.setState(0xb404, 0xa150, 0x1cb0, 0xb2d0, 0x37cf, 0xaf3a, 0x1, 0x1);
        gbc.writeMem(0xb404, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa150, gbc.sp());
        EXPECT(0xb406, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb404));
        EXPECT(0xa4, gbc.readMem(0xb405));
        // CB A4 0165
        gbc.setState(0x2509, 0xc726, 0x8320, 0xbb1b, 0x3e24, 0x2f1a, 0x0, 0x1);
        gbc.writeMem(0x2509, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc726, gbc.sp());
        EXPECT(0x250b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0167
        gbc.setState(0x4917, 0x238c, 0x3580, 0x3961, 0xca3b, 0xe21f, 0x1, 0x0);
        gbc.writeMem(0x4917, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x238c, gbc.sp());
        EXPECT(0x4919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0168
        gbc.setState(0xc6d5, 0x83bb, 0x8bb0, 0x7a4c, 0x532c, 0x859b, 0x1, 0x1);
        gbc.writeMem(0xc6d5, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x83bb, gbc.sp());
        EXPECT(0xc6d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6d5));
        EXPECT(0xa4, gbc.readMem(0xc6d6));
        // CB A4 0169
        gbc.setState(0x3fd5, 0x96a7, 0xfcb0, 0x7c70, 0x87e9, 0x5818, 0x0, 0x1);
        gbc.writeMem(0x3fd5, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x96a7, gbc.sp());
        EXPECT(0x3fd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 016A
        gbc.setState(0xa7c2, 0xd48d, 0x9320, 0xcfef, 0x4eeb, 0x8639, 0x0, 0x0);
        gbc.writeMem(0xa7c2, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd48d, gbc.sp());
        EXPECT(0xa7c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7c2));
        EXPECT(0xa4, gbc.readMem(0xa7c3));
        // CB A4 016B
        gbc.setState(0x2fd9, 0x74ba, 0x94f0, 0x640, 0xfbaf, 0x876e, 0x0, 0x0);
        gbc.writeMem(0x2fd9, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x74ba, gbc.sp());
        EXPECT(0x2fdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 016C
        gbc.setState(0xd5b4, 0x4293, 0xda30, 0x7925, 0x19c5, 0x34ea, 0x1, 0x1);
        gbc.writeMem(0xd5b4, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4293, gbc.sp());
        EXPECT(0xd5b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5b4));
        EXPECT(0xa4, gbc.readMem(0xd5b5));
        // CB A4 016D
        gbc.setState(0x8006, 0x24e1, 0xd8e0, 0x3c, 0x85c5, 0xcb4c, 0x0, 0x1);
        gbc.writeMem(0x8006, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x24e1, gbc.sp());
        EXPECT(0x8008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8006));
        EXPECT(0xa4, gbc.readMem(0x8007));
        // CB A4 016E
        gbc.setState(0x2338, 0x186f, 0x5440, 0xdaa3, 0x825a, 0xd48d, 0x1, 0x0);
        gbc.writeMem(0x2338, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x186f, gbc.sp());
        EXPECT(0x233a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 016F
        gbc.setState(0x16ed, 0x3ebe, 0x4040, 0x2e90, 0x3db8, 0xff9c, 0x1, 0x1);
        gbc.writeMem(0x16ed, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3ebe, gbc.sp());
        EXPECT(0x16ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0170
        gbc.setState(0x1387, 0xa99f, 0xe570, 0x700, 0x2507, 0x3480, 0x1, 0x1);
        gbc.writeMem(0x1387, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa99f, gbc.sp());
        EXPECT(0x1389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0171
        gbc.setState(0xe2a7, 0x9a7d, 0x70b0, 0xd06c, 0x1385, 0x236, 0x0, 0x1);
        gbc.writeMem(0xe2a7, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9a7d, gbc.sp());
        EXPECT(0xe2a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2a7));
        EXPECT(0xa4, gbc.readMem(0xe2a8));
        // CB A4 0172
        gbc.setState(0xde8a, 0x11cc, 0xfa0, 0x9cfa, 0x7825, 0x7f2c, 0x1, 0x1);
        gbc.writeMem(0xde8a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x11cc, gbc.sp());
        EXPECT(0xde8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde8a));
        EXPECT(0xa4, gbc.readMem(0xde8b));
        // CB A4 0173
        gbc.setState(0x1dd5, 0x9521, 0xf770, 0x90cd, 0x35e6, 0xd094, 0x1, 0x1);
        gbc.writeMem(0x1dd5, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9521, gbc.sp());
        EXPECT(0x1dd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0174
        gbc.setState(0x4690, 0xcf24, 0xe9c0, 0x314a, 0x5188, 0x4de, 0x1, 0x0);
        gbc.writeMem(0x4690, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xcf24, gbc.sp());
        EXPECT(0x4692, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0176
        gbc.setState(0x3515, 0x9ddb, 0x8670, 0x44e0, 0x1317, 0x957e, 0x1, 0x0);
        gbc.writeMem(0x3515, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9ddb, gbc.sp());
        EXPECT(0x3517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0177
        gbc.setState(0xbd64, 0x5141, 0x83b0, 0x9a04, 0x9e1d, 0x4a99, 0x1, 0x0);
        gbc.writeMem(0xbd64, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5141, gbc.sp());
        EXPECT(0xbd66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd64));
        EXPECT(0xa4, gbc.readMem(0xbd65));
        // CB A4 0178
        gbc.setState(0x2355, 0x46ba, 0x94d0, 0x504b, 0xdf20, 0xd9a, 0x1, 0x0);
        gbc.writeMem(0x2355, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x46ba, gbc.sp());
        EXPECT(0x2357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0179
        gbc.setState(0x9bbe, 0xcc3f, 0xb7a0, 0x9c8a, 0x5cdf, 0xca0b, 0x1, 0x1);
        gbc.writeMem(0x9bbe, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xcc3f, gbc.sp());
        EXPECT(0x9bc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bbe));
        EXPECT(0xa4, gbc.readMem(0x9bbf));
        // CB A4 017A
        gbc.setState(0x405c, 0x9b61, 0xc800, 0x49f3, 0x7c09, 0x69a, 0x1, 0x1);
        gbc.writeMem(0x405c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9b61, gbc.sp());
        EXPECT(0x405e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 017B
        gbc.setState(0x1f49, 0x1b53, 0x3680, 0x96fd, 0x1ade, 0xf0c, 0x1, 0x1);
        gbc.writeMem(0x1f49, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1b53, gbc.sp());
        EXPECT(0x1f4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 017C
        gbc.setState(0xd91d, 0xfcc3, 0xf440, 0x14a9, 0x5f57, 0xdb8, 0x0, 0x0);
        gbc.writeMem(0xd91d, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xfcc3, gbc.sp());
        EXPECT(0xd91f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd91d));
        EXPECT(0xa4, gbc.readMem(0xd91e));
        // CB A4 017D
        gbc.setState(0x354a, 0x8ba7, 0xd620, 0xe7ee, 0xea2a, 0xd449, 0x1, 0x1);
        gbc.writeMem(0x354a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8ba7, gbc.sp());
        EXPECT(0x354c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 017E
        gbc.setState(0x8c8, 0x24d7, 0x7030, 0xd482, 0x3a34, 0xb22f, 0x1, 0x1);
        gbc.writeMem(0x8c8, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x24d7, gbc.sp());
        EXPECT(0x8ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 017F
        gbc.setState(0x5d0b, 0x35bf, 0xb6a0, 0x483b, 0x57bc, 0x27b2, 0x1, 0x1);
        gbc.writeMem(0x5d0b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x35bf, gbc.sp());
        EXPECT(0x5d0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0180
        gbc.setState(0x32cb, 0xa772, 0x19b0, 0xca70, 0x5f82, 0x9dc0, 0x1, 0x1);
        gbc.writeMem(0x32cb, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa772, gbc.sp());
        EXPECT(0x32cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0182
        gbc.setState(0xca5c, 0xdf2e, 0x3c80, 0x4fed, 0x8bb4, 0xcf76, 0x1, 0x1);
        gbc.writeMem(0xca5c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xdf2e, gbc.sp());
        EXPECT(0xca5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca5c));
        EXPECT(0xa4, gbc.readMem(0xca5d));
        // CB A4 0183
        gbc.setState(0x8c1f, 0x22bb, 0x4e60, 0xfa42, 0x219a, 0x75aa, 0x1, 0x0);
        gbc.writeMem(0x8c1f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x22bb, gbc.sp());
        EXPECT(0x8c21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c1f));
        EXPECT(0xa4, gbc.readMem(0x8c20));
        // CB A4 0184
        gbc.setState(0x568f, 0xd3d8, 0xc9d0, 0xc4ff, 0xa2e6, 0x1edc, 0x0, 0x1);
        gbc.writeMem(0x568f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd3d8, gbc.sp());
        EXPECT(0x5691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0185
        gbc.setState(0x4e65, 0xf5f3, 0xf170, 0xb932, 0x4d50, 0xa614, 0x1, 0x1);
        gbc.writeMem(0x4e65, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf5f3, gbc.sp());
        EXPECT(0x4e67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0186
        gbc.setState(0x8e1d, 0x7fa1, 0xc700, 0x9601, 0xe846, 0xb065, 0x0, 0x1);
        gbc.writeMem(0x8e1d, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7fa1, gbc.sp());
        EXPECT(0x8e1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e1d));
        EXPECT(0xa4, gbc.readMem(0x8e1e));
        // CB A4 0187
        gbc.setState(0x1433, 0xdf9c, 0xd080, 0x994b, 0x170c, 0xb19e, 0x1, 0x0);
        gbc.writeMem(0x1433, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xdf9c, gbc.sp());
        EXPECT(0x1435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0188
        gbc.setState(0x7dc3, 0xfa9a, 0xc6e0, 0xfa4b, 0xb80, 0x62a8, 0x1, 0x0);
        gbc.writeMem(0x7dc3, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xfa9a, gbc.sp());
        EXPECT(0x7dc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0189
        gbc.setState(0x516e, 0x67a5, 0x6b0, 0x168a, 0xa97d, 0xab6e, 0x0, 0x1);
        gbc.writeMem(0x516e, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x67a5, gbc.sp());
        EXPECT(0x5170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 018A
        gbc.setState(0x30d8, 0x7480, 0x5950, 0xe2, 0x101d, 0x83b4, 0x0, 0x1);
        gbc.writeMem(0x30d8, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7480, gbc.sp());
        EXPECT(0x30da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 018B
        gbc.setState(0xe2cd, 0x4c8f, 0x59f0, 0x3cc4, 0xc15, 0xe969, 0x1, 0x0);
        gbc.writeMem(0xe2cd, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4c8f, gbc.sp());
        EXPECT(0xe2cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2cd));
        EXPECT(0xa4, gbc.readMem(0xe2ce));
        // CB A4 018C
        gbc.setState(0xacf9, 0x502d, 0x5860, 0xf628, 0xf99b, 0x521b, 0x0, 0x1);
        gbc.writeMem(0xacf9, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x502d, gbc.sp());
        EXPECT(0xacfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacf9));
        EXPECT(0xa4, gbc.readMem(0xacfa));
        // CB A4 018E
        gbc.setState(0xbdf3, 0x3bca, 0x59d0, 0x49cc, 0x65e5, 0x5dc5, 0x1, 0x1);
        gbc.writeMem(0xbdf3, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3bca, gbc.sp());
        EXPECT(0xbdf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdf3));
        EXPECT(0xa4, gbc.readMem(0xbdf4));
        // CB A4 0190
        gbc.setState(0xe910, 0xc6b8, 0x5920, 0x7a59, 0x5ca9, 0x26a6, 0x1, 0x1);
        gbc.writeMem(0xe910, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc6b8, gbc.sp());
        EXPECT(0xe912, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe910));
        EXPECT(0xa4, gbc.readMem(0xe911));
        // CB A4 0191
        gbc.setState(0x3da6, 0x362d, 0xcad0, 0x709c, 0x532f, 0x4d44, 0x1, 0x1);
        gbc.writeMem(0x3da6, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x362d, gbc.sp());
        EXPECT(0x3da8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0192
        gbc.setState(0x1489, 0xfe5f, 0xcce0, 0x11c9, 0xb207, 0xf08f, 0x0, 0x0);
        gbc.writeMem(0x1489, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xfe5f, gbc.sp());
        EXPECT(0x148b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0193
        gbc.setState(0x2d35, 0xb4e, 0xeb80, 0x395c, 0xbe9, 0x6223, 0x0, 0x1);
        gbc.writeMem(0x2d35, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb4e, gbc.sp());
        EXPECT(0x2d37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0194
        gbc.setState(0xde69, 0xb26a, 0xb9f0, 0x1ac9, 0x7f19, 0x4949, 0x1, 0x0);
        gbc.writeMem(0xde69, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb26a, gbc.sp());
        EXPECT(0xde6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde69));
        EXPECT(0xa4, gbc.readMem(0xde6a));
        // CB A4 0195
        gbc.setState(0x14f, 0x372e, 0x7630, 0x305, 0x2fb5, 0xd297, 0x0, 0x1);
        gbc.writeMem(0x14f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x372e, gbc.sp());
        EXPECT(0x151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0196
        gbc.setState(0x8b48, 0x4ee9, 0xf580, 0x49f4, 0xd20f, 0xea7d, 0x1, 0x1);
        gbc.writeMem(0x8b48, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4ee9, gbc.sp());
        EXPECT(0x8b4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b48));
        EXPECT(0xa4, gbc.readMem(0x8b49));
        // CB A4 0197
        gbc.setState(0x4d2b, 0x69e7, 0xac70, 0xe811, 0x8333, 0x4a29, 0x1, 0x0);
        gbc.writeMem(0x4d2b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x69e7, gbc.sp());
        EXPECT(0x4d2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0198
        gbc.setState(0xd69c, 0x32ba, 0x47c0, 0x4f9a, 0xef1a, 0x6c9d, 0x1, 0x0);
        gbc.writeMem(0xd69c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x32ba, gbc.sp());
        EXPECT(0xd69e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd69c));
        EXPECT(0xa4, gbc.readMem(0xd69d));
        // CB A4 019A
        gbc.setState(0x652a, 0x267c, 0xd4e0, 0x9a5a, 0xbfdf, 0x40f8, 0x0, 0x0);
        gbc.writeMem(0x652a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x267c, gbc.sp());
        EXPECT(0x652c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 019B
        gbc.setState(0x6cb2, 0x9a86, 0xda0, 0x3fdd, 0x7013, 0x2aaa, 0x0, 0x1);
        gbc.writeMem(0x6cb2, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9a86, gbc.sp());
        EXPECT(0x6cb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 019C
        gbc.setState(0x2943, 0xee28, 0x4560, 0xcb52, 0x8c8e, 0x2fc9, 0x0, 0x1);
        gbc.writeMem(0x2943, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xee28, gbc.sp());
        EXPECT(0x2945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 019D
        gbc.setState(0x551b, 0x2922, 0x5c50, 0x9bf5, 0x7991, 0x67d2, 0x1, 0x0);
        gbc.writeMem(0x551b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2922, gbc.sp());
        EXPECT(0x551d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 019E
        gbc.setState(0x62af, 0x5472, 0x2ea0, 0xae2b, 0x74a5, 0xc917, 0x1, 0x1);
        gbc.writeMem(0x62af, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5472, gbc.sp());
        EXPECT(0x62b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 019F
        gbc.setState(0x57d1, 0x3a5c, 0x6fe0, 0x7b32, 0xbd1, 0xb092, 0x1, 0x1);
        gbc.writeMem(0x57d1, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3a5c, gbc.sp());
        EXPECT(0x57d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01A0
        gbc.setState(0x73c7, 0x8e31, 0xa9a0, 0xfa9, 0x7486, 0xb464, 0x1, 0x1);
        gbc.writeMem(0x73c7, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8e31, gbc.sp());
        EXPECT(0x73c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01A1
        gbc.setState(0x57d3, 0x26bc, 0xb6e0, 0xe8b2, 0xec8c, 0xa86d, 0x1, 0x0);
        gbc.writeMem(0x57d3, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x26bc, gbc.sp());
        EXPECT(0x57d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01A2
        gbc.setState(0x6510, 0xe5b3, 0x4240, 0xa100, 0x9290, 0xacfd, 0x1, 0x0);
        gbc.writeMem(0x6510, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe5b3, gbc.sp());
        EXPECT(0x6512, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01A3
        gbc.setState(0x2945, 0xf889, 0x7f0, 0x9890, 0x4604, 0x84ad, 0x1, 0x0);
        gbc.writeMem(0x2945, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf889, gbc.sp());
        EXPECT(0x2947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 01A4
        gbc.setState(0xdc63, 0x8f19, 0x8700, 0x3b89, 0x1ecb, 0x2bf8, 0x0, 0x1);
        gbc.writeMem(0xdc63, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8f19, gbc.sp());
        EXPECT(0xdc65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc63));
        EXPECT(0xa4, gbc.readMem(0xdc64));
        // CB A4 01A5
        gbc.setState(0x7aea, 0x7cce, 0x23b0, 0xf0da, 0x7324, 0xf270, 0x1, 0x0);
        gbc.writeMem(0x7aea, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7cce, gbc.sp());
        EXPECT(0x7aec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 01A7
        gbc.setState(0x53a5, 0x10ba, 0x6a30, 0xf7d6, 0x5068, 0xef3c, 0x0, 0x0);
        gbc.writeMem(0x53a5, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x10ba, gbc.sp());
        EXPECT(0x53a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 01A8
        gbc.setState(0x4a43, 0xd62f, 0x4ed0, 0xffd3, 0x8530, 0xb591, 0x1, 0x1);
        gbc.writeMem(0x4a43, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd62f, gbc.sp());
        EXPECT(0x4a45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 01A9
        gbc.setState(0x4178, 0x1d82, 0xf600, 0x89f0, 0x60a2, 0x1ab9, 0x0, 0x1);
        gbc.writeMem(0x4178, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1d82, gbc.sp());
        EXPECT(0x417a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01AA
        gbc.setState(0x7862, 0x8ddc, 0xe5f0, 0x12be, 0x9701, 0xda18, 0x1, 0x1);
        gbc.writeMem(0x7862, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8ddc, gbc.sp());
        EXPECT(0x7864, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 01AB
        gbc.setState(0x8256, 0xfcc3, 0xe200, 0xa98e, 0xc6db, 0x2f6d, 0x1, 0x0);
        gbc.writeMem(0x8256, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xfcc3, gbc.sp());
        EXPECT(0x8258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8256));
        EXPECT(0xa4, gbc.readMem(0x8257));
        // CB A4 01AC
        gbc.setState(0x46c4, 0xac59, 0xab00, 0x7b86, 0xe47e, 0x7dc, 0x0, 0x1);
        gbc.writeMem(0x46c4, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xac59, gbc.sp());
        EXPECT(0x46c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01AD
        gbc.setState(0x28e6, 0x1a80, 0x7350, 0xe091, 0x8254, 0x500, 0x1, 0x1);
        gbc.writeMem(0x28e6, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1a80, gbc.sp());
        EXPECT(0x28e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 01AE
        gbc.setState(0x7fec, 0x67d, 0x9f90, 0x43da, 0xa060, 0x4f26, 0x1, 0x1);
        gbc.writeMem(0x7fec, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x67d, gbc.sp());
        EXPECT(0x7fee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 01AF
        gbc.setState(0x11e2, 0x10a6, 0xef10, 0x1f9d, 0x4b98, 0x3dee, 0x1, 0x0);
        gbc.writeMem(0x11e2, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x10a6, gbc.sp());
        EXPECT(0x11e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 01B0
        gbc.setState(0x9207, 0x5f1a, 0xb800, 0x8df3, 0x3d8e, 0x9ce2, 0x1, 0x1);
        gbc.writeMem(0x9207, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5f1a, gbc.sp());
        EXPECT(0x9209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9207));
        EXPECT(0xa4, gbc.readMem(0x9208));
        // CB A4 01B1
        gbc.setState(0x31c5, 0x1977, 0x3aa0, 0x18a4, 0x68e4, 0x25a3, 0x0, 0x0);
        gbc.writeMem(0x31c5, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1977, gbc.sp());
        EXPECT(0x31c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01B2
        gbc.setState(0x6958, 0xda0b, 0xba80, 0x9f2e, 0x7c0f, 0xe0bb, 0x1, 0x1);
        gbc.writeMem(0x6958, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xda0b, gbc.sp());
        EXPECT(0x695a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01B3
        gbc.setState(0xe7d6, 0x68b0, 0x1250, 0x8ffe, 0xcdb2, 0x14d8, 0x1, 0x1);
        gbc.writeMem(0xe7d6, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x68b0, gbc.sp());
        EXPECT(0xe7d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7d6));
        EXPECT(0xa4, gbc.readMem(0xe7d7));
        // CB A4 01B4
        gbc.setState(0x3a4, 0x7301, 0x2ff0, 0x20d4, 0xe14a, 0x3432, 0x1, 0x1);
        gbc.writeMem(0x3a4, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7301, gbc.sp());
        EXPECT(0x3a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 01B5
        gbc.setState(0x2892, 0x3e35, 0x7060, 0xb72a, 0xe251, 0x5fd3, 0x0, 0x0);
        gbc.writeMem(0x2892, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3e35, gbc.sp());
        EXPECT(0x2894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01B6
        gbc.setState(0x176b, 0xeb02, 0x97a0, 0x2795, 0xf8e8, 0xbceb, 0x0, 0x0);
        gbc.writeMem(0x176b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xeb02, gbc.sp());
        EXPECT(0x176d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01B7
        gbc.setState(0xc9d9, 0x4187, 0x6f40, 0x85c3, 0x1adc, 0x7caf, 0x0, 0x0);
        gbc.writeMem(0xc9d9, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4187, gbc.sp());
        EXPECT(0xc9db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9d9));
        EXPECT(0xa4, gbc.readMem(0xc9da));
        // CB A4 01B8
        gbc.setState(0x73ba, 0x9b59, 0x1190, 0x44c7, 0x82e6, 0x87f7, 0x0, 0x1);
        gbc.writeMem(0x73ba, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9b59, gbc.sp());
        EXPECT(0x73bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 01B9
        gbc.setState(0x6f06, 0xf0d1, 0x6900, 0xb482, 0x532b, 0xdc98, 0x1, 0x0);
        gbc.writeMem(0x6f06, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf0d1, gbc.sp());
        EXPECT(0x6f08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01BA
        gbc.setState(0xce74, 0x3a0b, 0xd5d0, 0xc040, 0x312, 0x78e5, 0x1, 0x1);
        gbc.writeMem(0xce74, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3a0b, gbc.sp());
        EXPECT(0xce76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce74));
        EXPECT(0xa4, gbc.readMem(0xce75));
        // CB A4 01BB
        gbc.setState(0xca64, 0x3c3d, 0x8cd0, 0xb12d, 0x152e, 0x5037, 0x0, 0x1);
        gbc.writeMem(0xca64, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3c3d, gbc.sp());
        EXPECT(0xca66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca64));
        EXPECT(0xa4, gbc.readMem(0xca65));
        // CB A4 01BC
        gbc.setState(0xdf48, 0x3c4a, 0xe0f0, 0xb835, 0x400d, 0xe23a, 0x1, 0x1);
        gbc.writeMem(0xdf48, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3c4a, gbc.sp());
        EXPECT(0xdf4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf48));
        EXPECT(0xa4, gbc.readMem(0xdf49));
        // CB A4 01BD
        gbc.setState(0x7f69, 0x45f, 0x6860, 0x375b, 0x3250, 0x2b7f, 0x1, 0x0);
        gbc.writeMem(0x7f69, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x45f, gbc.sp());
        EXPECT(0x7f6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01BE
        gbc.setState(0x4615, 0x75c1, 0x5970, 0xd723, 0x38ad, 0x4913, 0x0, 0x1);
        gbc.writeMem(0x4615, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x75c1, gbc.sp());
        EXPECT(0x4617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 01BF
        gbc.setState(0x3265, 0x97ad, 0x8220, 0x27c9, 0xb096, 0x22c, 0x1, 0x0);
        gbc.writeMem(0x3265, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x97ad, gbc.sp());
        EXPECT(0x3267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01C0
        gbc.setState(0x1682, 0x96ef, 0xb9a0, 0xfdf7, 0x652d, 0xa394, 0x0, 0x0);
        gbc.writeMem(0x1682, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x96ef, gbc.sp());
        EXPECT(0x1684, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01C1
        gbc.setState(0x926b, 0x9447, 0x3dd0, 0xbd84, 0x6882, 0x7aa7, 0x1, 0x1);
        gbc.writeMem(0x926b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9447, gbc.sp());
        EXPECT(0x926d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x926b));
        EXPECT(0xa4, gbc.readMem(0x926c));
        // CB A4 01C2
        gbc.setState(0x868, 0xc289, 0x8850, 0xada6, 0xbb87, 0xe73d, 0x1, 0x1);
        gbc.writeMem(0x868, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc289, gbc.sp());
        EXPECT(0x86a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 01C3
        gbc.setState(0x186, 0xa102, 0x37a0, 0x6f9e, 0x580f, 0xb109, 0x0, 0x1);
        gbc.writeMem(0x186, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa102, gbc.sp());
        EXPECT(0x188, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01C5
        gbc.setState(0x1259, 0xb742, 0xa270, 0x880f, 0x1446, 0xf24f, 0x0, 0x0);
        gbc.writeMem(0x1259, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb742, gbc.sp());
        EXPECT(0x125b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 01C6
        gbc.setState(0x177b, 0x4e49, 0xc5b0, 0xfb0e, 0xa84, 0xd987, 0x1, 0x1);
        gbc.writeMem(0x177b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4e49, gbc.sp());
        EXPECT(0x177d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 01C7
        gbc.setState(0x33e6, 0x8c8c, 0x5940, 0x6099, 0x2c9a, 0x3226, 0x1, 0x1);
        gbc.writeMem(0x33e6, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x8c8c, gbc.sp());
        EXPECT(0x33e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01C8
        gbc.setState(0xc2ff, 0xd7d6, 0x4450, 0x8025, 0xe813, 0x3a40, 0x0, 0x1);
        gbc.writeMem(0xc2ff, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd7d6, gbc.sp());
        EXPECT(0xc301, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ff));
        EXPECT(0xa4, gbc.readMem(0xc300));
        // CB A4 01C9
        gbc.setState(0x96b5, 0x3529, 0xb0e0, 0xf735, 0x35a7, 0xeff9, 0x1, 0x1);
        gbc.writeMem(0x96b5, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3529, gbc.sp());
        EXPECT(0x96b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96b5));
        EXPECT(0xa4, gbc.readMem(0x96b6));
        // CB A4 01CA
        gbc.setState(0x5801, 0x1149, 0x1e00, 0x438, 0xf786, 0x1241, 0x1, 0x1);
        gbc.writeMem(0x5801, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1149, gbc.sp());
        EXPECT(0x5803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01CB
        gbc.setState(0xaee4, 0xbbac, 0x3990, 0x196d, 0x2ba2, 0x98f4, 0x0, 0x1);
        gbc.writeMem(0xaee4, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xbbac, gbc.sp());
        EXPECT(0xaee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaee4));
        EXPECT(0xa4, gbc.readMem(0xaee5));
        // CB A4 01CC
        gbc.setState(0xd2a2, 0x6cb4, 0xda90, 0x569b, 0xb1d, 0x1256, 0x1, 0x1);
        gbc.writeMem(0xd2a2, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6cb4, gbc.sp());
        EXPECT(0xd2a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2a2));
        EXPECT(0xa4, gbc.readMem(0xd2a3));
        // CB A4 01CF
        gbc.setState(0x7917, 0x62a, 0xd8e0, 0xcd74, 0xcf43, 0x711a, 0x1, 0x1);
        gbc.writeMem(0x7917, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x62a, gbc.sp());
        EXPECT(0x7919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01D0
        gbc.setState(0x92c2, 0x6d42, 0xebf0, 0x6ee5, 0x94a8, 0x1f0b, 0x1, 0x0);
        gbc.writeMem(0x92c2, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6d42, gbc.sp());
        EXPECT(0x92c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92c2));
        EXPECT(0xa4, gbc.readMem(0x92c3));
        // CB A4 01D1
        gbc.setState(0xb1f3, 0x1e05, 0xf540, 0xfebe, 0x55ae, 0xe86a, 0x0, 0x0);
        gbc.writeMem(0xb1f3, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1e05, gbc.sp());
        EXPECT(0xb1f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1f3));
        EXPECT(0xa4, gbc.readMem(0xb1f4));
        // CB A4 01D2
        gbc.setState(0x337d, 0x5554, 0xfa0, 0x9e54, 0x611f, 0x90a6, 0x0, 0x0);
        gbc.writeMem(0x337d, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5554, gbc.sp());
        EXPECT(0x337f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01D3
        gbc.setState(0x1e0e, 0x6490, 0x2600, 0x7801, 0xd1f8, 0xd779, 0x0, 0x0);
        gbc.writeMem(0x1e0e, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6490, gbc.sp());
        EXPECT(0x1e10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01D4
        gbc.setState(0xebb8, 0x28d6, 0xaf50, 0xc759, 0x7e66, 0x5b2e, 0x1, 0x1);
        gbc.writeMem(0xebb8, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x28d6, gbc.sp());
        EXPECT(0xebba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebb8));
        EXPECT(0xa4, gbc.readMem(0xebb9));
        // CB A4 01D5
        gbc.setState(0x24c0, 0xe609, 0x5010, 0x364b, 0x160, 0x6442, 0x1, 0x0);
        gbc.writeMem(0x24c0, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe609, gbc.sp());
        EXPECT(0x24c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 01D6
        gbc.setState(0x6cac, 0xe133, 0x60, 0x62f7, 0x5b37, 0xd00c, 0x1, 0x0);
        gbc.writeMem(0x6cac, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe133, gbc.sp());
        EXPECT(0x6cae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01D8
        gbc.setState(0x7637, 0x9d79, 0xe890, 0xe03c, 0xf818, 0x9ea0, 0x0, 0x0);
        gbc.writeMem(0x7637, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9d79, gbc.sp());
        EXPECT(0x7639, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 01D9
        gbc.setState(0x4c7a, 0x6a31, 0x8410, 0x7fe6, 0x1090, 0x5ac0, 0x1, 0x0);
        gbc.writeMem(0x4c7a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6a31, gbc.sp());
        EXPECT(0x4c7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 01DA
        gbc.setState(0x76bd, 0x182e, 0xe600, 0x8635, 0xb14d, 0x79fe, 0x0, 0x1);
        gbc.writeMem(0x76bd, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x182e, gbc.sp());
        EXPECT(0x76bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01DB
        gbc.setState(0x34e5, 0xaaf6, 0x6f40, 0x8ac7, 0xd983, 0xbd79, 0x0, 0x1);
        gbc.writeMem(0x34e5, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xaaf6, gbc.sp());
        EXPECT(0x34e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01DC
        gbc.setState(0x61cc, 0x7691, 0x2d20, 0xd4c, 0x2426, 0xad25, 0x1, 0x0);
        gbc.writeMem(0x61cc, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7691, gbc.sp());
        EXPECT(0x61ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01DD
        gbc.setState(0x57d4, 0x1487, 0xabd0, 0xc775, 0xa8a9, 0xc1bb, 0x1, 0x0);
        gbc.writeMem(0x57d4, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1487, gbc.sp());
        EXPECT(0x57d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 01DE
        gbc.setState(0xb6e0, 0xc061, 0xdc10, 0xfdd2, 0xf793, 0x55bd, 0x1, 0x1);
        gbc.writeMem(0xb6e0, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc061, gbc.sp());
        EXPECT(0xb6e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6e0));
        EXPECT(0xa4, gbc.readMem(0xb6e1));
        // CB A4 01DF
        gbc.setState(0x76e8, 0x98ae, 0x23c0, 0xaf95, 0x9f99, 0xca, 0x0, 0x0);
        gbc.writeMem(0x76e8, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x98ae, gbc.sp());
        EXPECT(0x76ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01E0
        gbc.setState(0x821, 0x4edc, 0x4ff0, 0x2a39, 0x774e, 0x6763, 0x1, 0x1);
        gbc.writeMem(0x821, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4edc, gbc.sp());
        EXPECT(0x823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 01E1
        gbc.setState(0x5132, 0xef3b, 0x3f20, 0xd5c9, 0xb6be, 0x1003, 0x0, 0x0);
        gbc.writeMem(0x5132, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xef3b, gbc.sp());
        EXPECT(0x5134, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01E2
        gbc.setState(0x67d, 0xf2eb, 0x9e00, 0x9c31, 0xd293, 0x4de3, 0x0, 0x0);
        gbc.writeMem(0x67d, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf2eb, gbc.sp());
        EXPECT(0x67f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01E3
        gbc.setState(0x9017, 0x62d6, 0x16d0, 0xa0f2, 0xa948, 0x1b9a, 0x1, 0x1);
        gbc.writeMem(0x9017, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x62d6, gbc.sp());
        EXPECT(0x9019, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9017));
        EXPECT(0xa4, gbc.readMem(0x9018));
        // CB A4 01E4
        gbc.setState(0xae1, 0xe641, 0xe70, 0x772d, 0xa8a1, 0x968c, 0x0, 0x0);
        gbc.writeMem(0xae1, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe641, gbc.sp());
        EXPECT(0xae3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 01E5
        gbc.setState(0xdd0a, 0x5fb0, 0xf740, 0x9bc8, 0x3e12, 0x54cd, 0x1, 0x1);
        gbc.writeMem(0xdd0a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5fb0, gbc.sp());
        EXPECT(0xdd0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd0a));
        EXPECT(0xa4, gbc.readMem(0xdd0b));
        // CB A4 01E7
        gbc.setState(0xc051, 0xdab8, 0x2260, 0xc16f, 0xafa4, 0x82f3, 0x1, 0x1);
        gbc.writeMem(0xc051, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xdab8, gbc.sp());
        EXPECT(0xc053, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc051));
        EXPECT(0xa4, gbc.readMem(0xc052));
        // CB A4 01E8
        gbc.setState(0xb71b, 0xb01, 0x2350, 0x95fa, 0x2f16, 0xe9eb, 0x1, 0x0);
        gbc.writeMem(0xb71b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb01, gbc.sp());
        EXPECT(0xb71d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb71b));
        EXPECT(0xa4, gbc.readMem(0xb71c));
        // CB A4 01E9
        gbc.setState(0x9fb1, 0x7a23, 0xe140, 0xe54d, 0xf078, 0xdc17, 0x0, 0x0);
        gbc.writeMem(0x9fb1, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7a23, gbc.sp());
        EXPECT(0x9fb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fb1));
        EXPECT(0xa4, gbc.readMem(0x9fb2));
        // CB A4 01EA
        gbc.setState(0xd142, 0xe3cc, 0xe7e0, 0x2447, 0x5961, 0x9753, 0x0, 0x1);
        gbc.writeMem(0xd142, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe3cc, gbc.sp());
        EXPECT(0xd144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd142));
        EXPECT(0xa4, gbc.readMem(0xd143));
        // CB A4 01EB
        gbc.setState(0x3045, 0x7792, 0x7880, 0x71ae, 0x4aee, 0x5658, 0x0, 0x1);
        gbc.writeMem(0x3045, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7792, gbc.sp());
        EXPECT(0x3047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01EC
        gbc.setState(0x9d1d, 0x4261, 0x6a10, 0x7c8a, 0x1302, 0xa3e3, 0x0, 0x1);
        gbc.writeMem(0x9d1d, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4261, gbc.sp());
        EXPECT(0x9d1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d1d));
        EXPECT(0xa4, gbc.readMem(0x9d1e));
        // CB A4 01ED
        gbc.setState(0x606c, 0x8e9e, 0xb920, 0xd5be, 0xb2a7, 0x4306, 0x0, 0x1);
        gbc.writeMem(0x606c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8e9e, gbc.sp());
        EXPECT(0x606e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01EE
        gbc.setState(0xdeda, 0x27d8, 0x5db0, 0x99db, 0xc2e9, 0x45e3, 0x0, 0x0);
        gbc.writeMem(0xdeda, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x27d8, gbc.sp());
        EXPECT(0xdedc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeda));
        EXPECT(0xa4, gbc.readMem(0xdedb));
        // CB A4 01EF
        gbc.setState(0x7972, 0x2877, 0xe910, 0x5d45, 0xd9aa, 0xae50, 0x0, 0x0);
        gbc.writeMem(0x7972, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2877, gbc.sp());
        EXPECT(0x7974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 01F0
        gbc.setState(0xba9b, 0x2780, 0x2650, 0xa9bb, 0x39f9, 0x665e, 0x0, 0x1);
        gbc.writeMem(0xba9b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2780, gbc.sp());
        EXPECT(0xba9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba9b));
        EXPECT(0xa4, gbc.readMem(0xba9c));
        // CB A4 01F1
        gbc.setState(0x3eb0, 0xe73b, 0x9810, 0xd27b, 0x5f09, 0x1f96, 0x0, 0x0);
        gbc.writeMem(0x3eb0, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe73b, gbc.sp());
        EXPECT(0x3eb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 01F3
        gbc.setState(0xfa3, 0x2a55, 0xf770, 0xb390, 0xf58b, 0xbcbc, 0x1, 0x1);
        gbc.writeMem(0xfa3, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2a55, gbc.sp());
        EXPECT(0xfa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 01F4
        gbc.setState(0x322c, 0xa09c, 0x4820, 0x58ca, 0x1541, 0x7f8, 0x1, 0x1);
        gbc.writeMem(0x322c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa09c, gbc.sp());
        EXPECT(0x322e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01F5
        gbc.setState(0xd2a2, 0x4b82, 0x4160, 0x6c1f, 0x6bba, 0x32bc, 0x1, 0x1);
        gbc.writeMem(0xd2a2, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4b82, gbc.sp());
        EXPECT(0xd2a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2a2));
        EXPECT(0xa4, gbc.readMem(0xd2a3));
        // CB A4 01F6
        gbc.setState(0x9ff8, 0xc8dd, 0x9d70, 0x8379, 0x7373, 0x2adf, 0x0, 0x1);
        gbc.writeMem(0x9ff8, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc8dd, gbc.sp());
        EXPECT(0x9ffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ff8));
        EXPECT(0xa4, gbc.readMem(0x9ff9));
        // CB A4 01F7
        gbc.setState(0xb7b5, 0x6326, 0xed30, 0x580a, 0x8daf, 0x2bdd, 0x1, 0x0);
        gbc.writeMem(0xb7b5, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6326, gbc.sp());
        EXPECT(0xb7b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7b5));
        EXPECT(0xa4, gbc.readMem(0xb7b6));
        // CB A4 01F8
        gbc.setState(0xa9b2, 0x5ceb, 0x5230, 0x5293, 0x6ab4, 0x38d7, 0x0, 0x0);
        gbc.writeMem(0xa9b2, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5ceb, gbc.sp());
        EXPECT(0xa9b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9b2));
        EXPECT(0xa4, gbc.readMem(0xa9b3));
        // CB A4 01F9
        gbc.setState(0x9fe0, 0x6a84, 0x6cd0, 0x10db, 0x293, 0xe087, 0x1, 0x1);
        gbc.writeMem(0x9fe0, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6a84, gbc.sp());
        EXPECT(0x9fe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fe0));
        EXPECT(0xa4, gbc.readMem(0x9fe1));
        // CB A4 01FA
        gbc.setState(0x72b8, 0xe72c, 0xa850, 0x1edf, 0x3d, 0x968f, 0x1, 0x0);
        gbc.writeMem(0x72b8, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe72c, gbc.sp());
        EXPECT(0x72ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 01FB
        gbc.setState(0x39a2, 0x22d9, 0xa340, 0x6537, 0xae51, 0xe718, 0x0, 0x0);
        gbc.writeMem(0x39a2, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x22d9, gbc.sp());
        EXPECT(0x39a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01FC
        gbc.setState(0xb24f, 0x83c0, 0x31a0, 0xc996, 0xdca8, 0xf6a7, 0x1, 0x0);
        gbc.writeMem(0xb24f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x83c0, gbc.sp());
        EXPECT(0xb251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb24f));
        EXPECT(0xa4, gbc.readMem(0xb250));
        // CB A4 01FD
        gbc.setState(0x2b19, 0xcf5f, 0xa7a0, 0x3a8c, 0x5fc8, 0x57d, 0x1, 0x1);
        gbc.writeMem(0x2b19, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xcf5f, gbc.sp());
        EXPECT(0x2b1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 01FE
        gbc.setState(0x9790, 0xd716, 0x6980, 0x4c4f, 0x6fd3, 0xab54, 0x0, 0x1);
        gbc.writeMem(0x9790, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd716, gbc.sp());
        EXPECT(0x9792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9790));
        EXPECT(0xa4, gbc.readMem(0x9791));
        // CB A4 01FF
        gbc.setState(0x8d60, 0xc02e, 0xa0d0, 0x9249, 0x611e, 0xe85c, 0x1, 0x0);
        gbc.writeMem(0x8d60, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc02e, gbc.sp());
        EXPECT(0x8d62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d60));
        EXPECT(0xa4, gbc.readMem(0x8d61));
        // CB A4 0200
        gbc.setState(0x5067, 0xbda0, 0xb700, 0x280f, 0x5902, 0xaf6e, 0x0, 0x1);
        gbc.writeMem(0x5067, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xbda0, gbc.sp());
        EXPECT(0x5069, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0201
        gbc.setState(0x5b20, 0xe0bd, 0xc800, 0xdb6d, 0xd430, 0xa972, 0x1, 0x0);
        gbc.writeMem(0x5b20, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe0bd, gbc.sp());
        EXPECT(0x5b22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0202
        gbc.setState(0xda88, 0xac30, 0x7750, 0x396a, 0xc4da, 0x6b37, 0x1, 0x0);
        gbc.writeMem(0xda88, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xac30, gbc.sp());
        EXPECT(0xda8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda88));
        EXPECT(0xa4, gbc.readMem(0xda89));
        // CB A4 0203
        gbc.setState(0xedcb, 0x5ff6, 0x72c0, 0x8d21, 0x67d6, 0x5c53, 0x1, 0x1);
        gbc.writeMem(0xedcb, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5ff6, gbc.sp());
        EXPECT(0xedcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedcb));
        EXPECT(0xa4, gbc.readMem(0xedcc));
        // CB A4 0204
        gbc.setState(0x34d9, 0x54cc, 0x2fb0, 0xd520, 0x403c, 0x1e91, 0x1, 0x0);
        gbc.writeMem(0x34d9, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x54cc, gbc.sp());
        EXPECT(0x34db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0205
        gbc.setState(0x9c0d, 0x8c84, 0xb90, 0x8567, 0x5517, 0xf690, 0x0, 0x0);
        gbc.writeMem(0x9c0d, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8c84, gbc.sp());
        EXPECT(0x9c0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c0d));
        EXPECT(0xa4, gbc.readMem(0x9c0e));
        // CB A4 0206
        gbc.setState(0x92bd, 0x3512, 0x7420, 0xda63, 0x6106, 0x8a4e, 0x1, 0x0);
        gbc.writeMem(0x92bd, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3512, gbc.sp());
        EXPECT(0x92bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92bd));
        EXPECT(0xa4, gbc.readMem(0x92be));
        // CB A4 0207
        gbc.setState(0x7081, 0x9874, 0x72f0, 0xb61b, 0x91c0, 0xb5ca, 0x1, 0x1);
        gbc.writeMem(0x7081, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9874, gbc.sp());
        EXPECT(0x7083, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0208
        gbc.setState(0xcd66, 0xf40e, 0x7e20, 0x61c6, 0x2921, 0x39e8, 0x0, 0x1);
        gbc.writeMem(0xcd66, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf40e, gbc.sp());
        EXPECT(0xcd68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd66));
        EXPECT(0xa4, gbc.readMem(0xcd67));
        // CB A4 0209
        gbc.setState(0xdb3c, 0x3caf, 0xbab0, 0x8639, 0xe108, 0x6d21, 0x1, 0x0);
        gbc.writeMem(0xdb3c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3caf, gbc.sp());
        EXPECT(0xdb3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb3c));
        EXPECT(0xa4, gbc.readMem(0xdb3d));
        // CB A4 020A
        gbc.setState(0xca13, 0x794b, 0xc970, 0x551e, 0x9d82, 0x80e7, 0x0, 0x1);
        gbc.writeMem(0xca13, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x794b, gbc.sp());
        EXPECT(0xca15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca13));
        EXPECT(0xa4, gbc.readMem(0xca14));
        // CB A4 020B
        gbc.setState(0x84b5, 0x763b, 0x350, 0x85ab, 0xf32e, 0x436, 0x0, 0x0);
        gbc.writeMem(0x84b5, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x763b, gbc.sp());
        EXPECT(0x84b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84b5));
        EXPECT(0xa4, gbc.readMem(0x84b6));
        // CB A4 020C
        gbc.setState(0x8019, 0xb137, 0x2da0, 0xcd3c, 0x80e1, 0xc87c, 0x1, 0x1);
        gbc.writeMem(0x8019, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb137, gbc.sp());
        EXPECT(0x801b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8019));
        EXPECT(0xa4, gbc.readMem(0x801a));
        // CB A4 020D
        gbc.setState(0x12ed, 0x12e7, 0x6100, 0xf9b2, 0x4f19, 0xdf7b, 0x1, 0x1);
        gbc.writeMem(0x12ed, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x12e7, gbc.sp());
        EXPECT(0x12ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 020E
        gbc.setState(0x1775, 0x3052, 0x9ba0, 0x4710, 0x7b0f, 0xd0ea, 0x0, 0x0);
        gbc.writeMem(0x1775, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3052, gbc.sp());
        EXPECT(0x1777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 020F
        gbc.setState(0xc3ac, 0xbc9b, 0x24a0, 0x9b98, 0xe7e7, 0x179d, 0x1, 0x0);
        gbc.writeMem(0xc3ac, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xbc9b, gbc.sp());
        EXPECT(0xc3ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ac));
        EXPECT(0xa4, gbc.readMem(0xc3ad));
        // CB A4 0210
        gbc.setState(0xeb06, 0x306e, 0xe6e0, 0x8d0a, 0xc721, 0x5fca, 0x0, 0x0);
        gbc.writeMem(0xeb06, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x306e, gbc.sp());
        EXPECT(0xeb08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb06));
        EXPECT(0xa4, gbc.readMem(0xeb07));
        // CB A4 0211
        gbc.setState(0xcfdd, 0x8161, 0xea70, 0xeb68, 0x9c10, 0x81bb, 0x1, 0x1);
        gbc.writeMem(0xcfdd, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8161, gbc.sp());
        EXPECT(0xcfdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfdd));
        EXPECT(0xa4, gbc.readMem(0xcfde));
        // CB A4 0213
        gbc.setState(0x837, 0xb677, 0x470, 0x86d, 0x4465, 0xd17b, 0x0, 0x1);
        gbc.writeMem(0x837, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb677, gbc.sp());
        EXPECT(0x839, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0214
        gbc.setState(0xee15, 0xa442, 0x4d10, 0x825c, 0xb32e, 0xa0e5, 0x1, 0x0);
        gbc.writeMem(0xee15, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa442, gbc.sp());
        EXPECT(0xee17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee15));
        EXPECT(0xa4, gbc.readMem(0xee16));
        // CB A4 0215
        gbc.setState(0x1da6, 0x60f3, 0x2360, 0x33bc, 0x4074, 0x9f2a, 0x0, 0x0);
        gbc.writeMem(0x1da6, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x60f3, gbc.sp());
        EXPECT(0x1da8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0216
        gbc.setState(0xaeb7, 0x6a0d, 0xdf80, 0x7da1, 0x1905, 0xfb08, 0x0, 0x1);
        gbc.writeMem(0xaeb7, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6a0d, gbc.sp());
        EXPECT(0xaeb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeb7));
        EXPECT(0xa4, gbc.readMem(0xaeb8));
        // CB A4 0217
        gbc.setState(0x34f2, 0x7d7c, 0x42f0, 0xd9df, 0x1a8f, 0x2d56, 0x0, 0x0);
        gbc.writeMem(0x34f2, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7d7c, gbc.sp());
        EXPECT(0x34f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0218
        gbc.setState(0x5dc5, 0x5468, 0x9240, 0xac79, 0x4b07, 0x78d3, 0x0, 0x1);
        gbc.writeMem(0x5dc5, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5468, gbc.sp());
        EXPECT(0x5dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0219
        gbc.setState(0xf53, 0xa340, 0x4ba0, 0x677c, 0x1689, 0xd92f, 0x0, 0x0);
        gbc.writeMem(0xf53, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa340, gbc.sp());
        EXPECT(0xf55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 021A
        gbc.setState(0xd899, 0xf359, 0xe210, 0x28ff, 0x3870, 0xf909, 0x0, 0x1);
        gbc.writeMem(0xd899, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf359, gbc.sp());
        EXPECT(0xd89b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd899));
        EXPECT(0xa4, gbc.readMem(0xd89a));
        // CB A4 021B
        gbc.setState(0xe766, 0x44ee, 0xf5d0, 0x1f30, 0xe102, 0xd40a, 0x1, 0x1);
        gbc.writeMem(0xe766, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x44ee, gbc.sp());
        EXPECT(0xe768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe766));
        EXPECT(0xa4, gbc.readMem(0xe767));
        // CB A4 021C
        gbc.setState(0xdfd3, 0xe5bb, 0xa370, 0xcdc4, 0xa8a0, 0x71de, 0x0, 0x0);
        gbc.writeMem(0xdfd3, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe5bb, gbc.sp());
        EXPECT(0xdfd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfd3));
        EXPECT(0xa4, gbc.readMem(0xdfd4));
        // CB A4 021D
        gbc.setState(0xa168, 0x6d11, 0xd380, 0x5579, 0x1a24, 0x7026, 0x1, 0x1);
        gbc.writeMem(0xa168, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6d11, gbc.sp());
        EXPECT(0xa16a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa168));
        EXPECT(0xa4, gbc.readMem(0xa169));
        // CB A4 021E
        gbc.setState(0x7393, 0x96c2, 0x3ce0, 0xec10, 0xbaf8, 0x71f5, 0x0, 0x0);
        gbc.writeMem(0x7393, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x96c2, gbc.sp());
        EXPECT(0x7395, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 021F
        gbc.setState(0xd6c6, 0x4f3e, 0xa420, 0xb938, 0xd2f, 0xedb7, 0x1, 0x0);
        gbc.writeMem(0xd6c6, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4f3e, gbc.sp());
        EXPECT(0xd6c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6c6));
        EXPECT(0xa4, gbc.readMem(0xd6c7));
        // CB A4 0220
        gbc.setState(0x6fca, 0x147a, 0x9af0, 0xc496, 0xf780, 0x275b, 0x0, 0x1);
        gbc.writeMem(0x6fca, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x147a, gbc.sp());
        EXPECT(0x6fcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0221
        gbc.setState(0xff1, 0x76ac, 0xa200, 0xbfc6, 0x7e57, 0x6db0, 0x1, 0x1);
        gbc.writeMem(0xff1, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x76ac, gbc.sp());
        EXPECT(0xff3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0222
        gbc.setState(0xae1e, 0xfa7e, 0x1370, 0xa228, 0x66fd, 0x81b8, 0x0, 0x0);
        gbc.writeMem(0xae1e, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xfa7e, gbc.sp());
        EXPECT(0xae20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae1e));
        EXPECT(0xa4, gbc.readMem(0xae1f));
        // CB A4 0223
        gbc.setState(0xaf83, 0x7aa8, 0x8e00, 0x98c8, 0x4bb0, 0x16c, 0x1, 0x1);
        gbc.writeMem(0xaf83, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7aa8, gbc.sp());
        EXPECT(0xaf85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf83));
        EXPECT(0xa4, gbc.readMem(0xaf84));
        // CB A4 0224
        gbc.setState(0xbd89, 0x202, 0xd150, 0xfcb0, 0x9bbc, 0xb2f7, 0x0, 0x0);
        gbc.writeMem(0xbd89, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x202, gbc.sp());
        EXPECT(0xbd8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd89));
        EXPECT(0xa4, gbc.readMem(0xbd8a));
        // CB A4 0226
        gbc.setState(0x8514, 0x83fc, 0xde0, 0xbb99, 0xea05, 0x6f8b, 0x1, 0x1);
        gbc.writeMem(0x8514, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x83fc, gbc.sp());
        EXPECT(0x8516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8514));
        EXPECT(0xa4, gbc.readMem(0x8515));
        // CB A4 0227
        gbc.setState(0x681c, 0xd0d7, 0xac90, 0xbce0, 0x3068, 0x4db0, 0x0, 0x1);
        gbc.writeMem(0x681c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd0d7, gbc.sp());
        EXPECT(0x681e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0228
        gbc.setState(0x6eb5, 0x681, 0xfcb0, 0x3d50, 0xbc55, 0x4365, 0x1, 0x0);
        gbc.writeMem(0x6eb5, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x681, gbc.sp());
        EXPECT(0x6eb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0229
        gbc.setState(0x419c, 0x4f45, 0x7b10, 0x2d89, 0xa55d, 0xa1d5, 0x1, 0x0);
        gbc.writeMem(0x419c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4f45, gbc.sp());
        EXPECT(0x419e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 022A
        gbc.setState(0xeadb, 0xfe61, 0x17b0, 0xd4da, 0x77af, 0xc684, 0x0, 0x1);
        gbc.writeMem(0xeadb, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfe61, gbc.sp());
        EXPECT(0xeadd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeadb));
        EXPECT(0xa4, gbc.readMem(0xeadc));
        // CB A4 022C
        gbc.setState(0x7105, 0x5047, 0x3fd0, 0x59e0, 0x8185, 0x9fec, 0x1, 0x0);
        gbc.writeMem(0x7105, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5047, gbc.sp());
        EXPECT(0x7107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 022D
        gbc.setState(0xa266, 0x6852, 0xca10, 0x8229, 0x4651, 0xf925, 0x1, 0x0);
        gbc.writeMem(0xa266, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6852, gbc.sp());
        EXPECT(0xa268, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa266));
        EXPECT(0xa4, gbc.readMem(0xa267));
        // CB A4 022E
        gbc.setState(0xbc87, 0x244a, 0xb440, 0x165f, 0x649b, 0xfbfd, 0x1, 0x0);
        gbc.writeMem(0xbc87, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x244a, gbc.sp());
        EXPECT(0xbc89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc87));
        EXPECT(0xa4, gbc.readMem(0xbc88));
        // CB A4 022F
        gbc.setState(0x14cb, 0x1630, 0x8b30, 0x7199, 0x203d, 0x5dda, 0x1, 0x1);
        gbc.writeMem(0x14cb, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1630, gbc.sp());
        EXPECT(0x14cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0231
        gbc.setState(0xd6fb, 0x5b25, 0x1930, 0xcaa2, 0xb3a0, 0x46ff, 0x0, 0x0);
        gbc.writeMem(0xd6fb, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5b25, gbc.sp());
        EXPECT(0xd6fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6fb));
        EXPECT(0xa4, gbc.readMem(0xd6fc));
        // CB A4 0232
        gbc.setState(0xb23f, 0x678c, 0x130, 0x4fe1, 0x3611, 0x1798, 0x0, 0x1);
        gbc.writeMem(0xb23f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x678c, gbc.sp());
        EXPECT(0xb241, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb23f));
        EXPECT(0xa4, gbc.readMem(0xb240));
        // CB A4 0233
        gbc.setState(0x2879, 0x7692, 0x33a0, 0xcd4a, 0xf7c3, 0xaa88, 0x0, 0x1);
        gbc.writeMem(0x2879, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7692, gbc.sp());
        EXPECT(0x287b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0234
        gbc.setState(0xa034, 0x8d81, 0xd250, 0xdd4c, 0x74fe, 0x4556, 0x1, 0x1);
        gbc.writeMem(0xa034, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8d81, gbc.sp());
        EXPECT(0xa036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa034));
        EXPECT(0xa4, gbc.readMem(0xa035));
        // CB A4 0235
        gbc.setState(0x53bf, 0xb248, 0x8600, 0x695e, 0x73d5, 0xc7ef, 0x0, 0x1);
        gbc.writeMem(0x53bf, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb248, gbc.sp());
        EXPECT(0x53c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0237
        gbc.setState(0xd95f, 0xd19f, 0xf820, 0x638d, 0x1022, 0xba99, 0x0, 0x0);
        gbc.writeMem(0xd95f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd19f, gbc.sp());
        EXPECT(0xd961, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd95f));
        EXPECT(0xa4, gbc.readMem(0xd960));
        // CB A4 0238
        gbc.setState(0x9141, 0xabef, 0xe6a0, 0xed6f, 0xa748, 0x54fe, 0x0, 0x0);
        gbc.writeMem(0x9141, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xabef, gbc.sp());
        EXPECT(0x9143, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9141));
        EXPECT(0xa4, gbc.readMem(0x9142));
        // CB A4 0239
        gbc.setState(0x74b0, 0x1563, 0xc6e0, 0x16ce, 0x8b1e, 0x7a6d, 0x0, 0x1);
        gbc.writeMem(0x74b0, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1563, gbc.sp());
        EXPECT(0x74b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 023B
        gbc.setState(0x70aa, 0x417, 0x8100, 0xd736, 0x387d, 0xbbe8, 0x0, 0x0);
        gbc.writeMem(0x70aa, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x417, gbc.sp());
        EXPECT(0x70ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 023C
        gbc.setState(0xe417, 0x63f2, 0x3690, 0x3d00, 0xeb73, 0x9280, 0x1, 0x1);
        gbc.writeMem(0xe417, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x63f2, gbc.sp());
        EXPECT(0xe419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe417));
        EXPECT(0xa4, gbc.readMem(0xe418));
        // CB A4 023D
        gbc.setState(0xfa3, 0x3d06, 0xae00, 0x2a3c, 0xef4c, 0xbeb7, 0x0, 0x0);
        gbc.writeMem(0xfa3, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3d06, gbc.sp());
        EXPECT(0xfa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 023E
        gbc.setState(0x43e8, 0x7657, 0xcd50, 0x6d8a, 0x42f6, 0x28b8, 0x1, 0x1);
        gbc.writeMem(0x43e8, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7657, gbc.sp());
        EXPECT(0x43ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 023F
        gbc.setState(0xeaa, 0x4406, 0x9da0, 0xb639, 0x4069, 0x62d3, 0x1, 0x1);
        gbc.writeMem(0xeaa, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4406, gbc.sp());
        EXPECT(0xeac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0240
        gbc.setState(0x2ef0, 0xb093, 0x680, 0xbcd3, 0x1778, 0x4d49, 0x0, 0x1);
        gbc.writeMem(0x2ef0, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb093, gbc.sp());
        EXPECT(0x2ef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0241
        gbc.setState(0x2e8a, 0x8546, 0x3d10, 0xac4a, 0xee5d, 0x7fb0, 0x1, 0x1);
        gbc.writeMem(0x2e8a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8546, gbc.sp());
        EXPECT(0x2e8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0242
        gbc.setState(0x44ef, 0xe230, 0x5480, 0xa6c8, 0x7d88, 0x33a3, 0x0, 0x0);
        gbc.writeMem(0x44ef, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe230, gbc.sp());
        EXPECT(0x44f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0243
        gbc.setState(0x5bb9, 0x5f20, 0x7b50, 0xe2cf, 0xb6f2, 0x3a9f, 0x0, 0x0);
        gbc.writeMem(0x5bb9, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5f20, gbc.sp());
        EXPECT(0x5bbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0244
        gbc.setState(0xd38c, 0xf964, 0x5a90, 0x3637, 0xc023, 0xb3c8, 0x1, 0x0);
        gbc.writeMem(0xd38c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xf964, gbc.sp());
        EXPECT(0xd38e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd38c));
        EXPECT(0xa4, gbc.readMem(0xd38d));
        // CB A4 0245
        gbc.setState(0xcebf, 0x2bb3, 0xc6a0, 0xf2c8, 0x4118, 0xb14d, 0x1, 0x1);
        gbc.writeMem(0xcebf, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2bb3, gbc.sp());
        EXPECT(0xcec1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcebf));
        EXPECT(0xa4, gbc.readMem(0xcec0));
        // CB A4 0246
        gbc.setState(0x6fe, 0xf880, 0xbdc0, 0xc26e, 0xfbfc, 0x7f5f, 0x0, 0x0);
        gbc.writeMem(0x6fe, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf880, gbc.sp());
        EXPECT(0x700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0247
        gbc.setState(0xd354, 0xb137, 0x2db0, 0xbec1, 0xaf1f, 0xde85, 0x1, 0x1);
        gbc.writeMem(0xd354, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb137, gbc.sp());
        EXPECT(0xd356, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd354));
        EXPECT(0xa4, gbc.readMem(0xd355));
        // CB A4 0248
        gbc.setState(0xf8, 0xc0ad, 0x7600, 0x93aa, 0xebca, 0x9085, 0x0, 0x1);
        gbc.writeMem(0xf8, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc0ad, gbc.sp());
        EXPECT(0xfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0249
        gbc.setState(0xc4f1, 0x1988, 0xd4a0, 0x8faf, 0x62c6, 0x3650, 0x0, 0x1);
        gbc.writeMem(0xc4f1, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1988, gbc.sp());
        EXPECT(0xc4f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4f1));
        EXPECT(0xa4, gbc.readMem(0xc4f2));
        // CB A4 024A
        gbc.setState(0x9036, 0x1517, 0x5030, 0x1d90, 0xf55f, 0x2ab4, 0x0, 0x1);
        gbc.writeMem(0x9036, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1517, gbc.sp());
        EXPECT(0x9038, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9036));
        EXPECT(0xa4, gbc.readMem(0x9037));
        // CB A4 024C
        gbc.setState(0x485c, 0xcd89, 0xd040, 0xef59, 0x2388, 0x662e, 0x1, 0x0);
        gbc.writeMem(0x485c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xcd89, gbc.sp());
        EXPECT(0x485e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 024D
        gbc.setState(0x92b, 0x685e, 0x8600, 0xfabd, 0x53c1, 0xff7a, 0x1, 0x0);
        gbc.writeMem(0x92b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x685e, gbc.sp());
        EXPECT(0x92d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 024F
        gbc.setState(0x91fe, 0x1372, 0x1ac0, 0xa70d, 0x2ea4, 0xeba8, 0x0, 0x1);
        gbc.writeMem(0x91fe, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1372, gbc.sp());
        EXPECT(0x9200, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91fe));
        EXPECT(0xa4, gbc.readMem(0x91ff));
        // CB A4 0250
        gbc.setState(0x2df9, 0x17af, 0xfdc0, 0x4b42, 0x17ce, 0xa262, 0x1, 0x0);
        gbc.writeMem(0x2df9, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x17af, gbc.sp());
        EXPECT(0x2dfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0251
        gbc.setState(0xb0f7, 0x670e, 0x10, 0xfb61, 0x92b5, 0x89fa, 0x0, 0x0);
        gbc.writeMem(0xb0f7, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x670e, gbc.sp());
        EXPECT(0xb0f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0f7));
        EXPECT(0xa4, gbc.readMem(0xb0f8));
        // CB A4 0252
        gbc.setState(0xe398, 0x1654, 0x3af0, 0xe6b1, 0xacbb, 0xcd5f, 0x0, 0x0);
        gbc.writeMem(0xe398, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1654, gbc.sp());
        EXPECT(0xe39a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe398));
        EXPECT(0xa4, gbc.readMem(0xe399));
        // CB A4 0253
        gbc.setState(0x9ca1, 0x5f23, 0x4990, 0x5fbc, 0xdc33, 0xe854, 0x1, 0x0);
        gbc.writeMem(0x9ca1, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5f23, gbc.sp());
        EXPECT(0x9ca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ca1));
        EXPECT(0xa4, gbc.readMem(0x9ca2));
        // CB A4 0254
        gbc.setState(0x86bd, 0x2673, 0xf6c0, 0x4a2b, 0x7464, 0x80d9, 0x1, 0x0);
        gbc.writeMem(0x86bd, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2673, gbc.sp());
        EXPECT(0x86bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86bd));
        EXPECT(0xa4, gbc.readMem(0x86be));
        // CB A4 0255
        gbc.setState(0x27fe, 0x2903, 0x4a70, 0xfa1e, 0x9aed, 0xaeed, 0x0, 0x0);
        gbc.writeMem(0x27fe, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2903, gbc.sp());
        EXPECT(0x2800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0256
        gbc.setState(0xde53, 0x362b, 0xab10, 0xa081, 0x4d33, 0x8412, 0x1, 0x1);
        gbc.writeMem(0xde53, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x362b, gbc.sp());
        EXPECT(0xde55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde53));
        EXPECT(0xa4, gbc.readMem(0xde54));
        // CB A4 0257
        gbc.setState(0xe1cd, 0x9d24, 0x3dd0, 0x4f3f, 0x5389, 0x3733, 0x0, 0x1);
        gbc.writeMem(0xe1cd, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9d24, gbc.sp());
        EXPECT(0xe1cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1cd));
        EXPECT(0xa4, gbc.readMem(0xe1ce));
        // CB A4 0258
        gbc.setState(0xb88f, 0xbf27, 0x8d70, 0xea48, 0xde57, 0x5147, 0x0, 0x0);
        gbc.writeMem(0xb88f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xbf27, gbc.sp());
        EXPECT(0xb891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb88f));
        EXPECT(0xa4, gbc.readMem(0xb890));
        // CB A4 0259
        gbc.setState(0x96c8, 0x86c2, 0x6a80, 0xa78e, 0xe77b, 0x6780, 0x1, 0x0);
        gbc.writeMem(0x96c8, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x86c2, gbc.sp());
        EXPECT(0x96ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96c8));
        EXPECT(0xa4, gbc.readMem(0x96c9));
        // CB A4 025A
        gbc.setState(0x7c8a, 0x3455, 0x1b30, 0x67e4, 0x44b0, 0x75b9, 0x0, 0x0);
        gbc.writeMem(0x7c8a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3455, gbc.sp());
        EXPECT(0x7c8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 025B
        gbc.setState(0xa18, 0xa426, 0x8fd0, 0xeba1, 0x8801, 0xd92f, 0x0, 0x1);
        gbc.writeMem(0xa18, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa426, gbc.sp());
        EXPECT(0xa1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 025C
        gbc.setState(0xd8af, 0xba6b, 0x1c60, 0xc546, 0xbe3e, 0x8211, 0x1, 0x1);
        gbc.writeMem(0xd8af, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xba6b, gbc.sp());
        EXPECT(0xd8b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8af));
        EXPECT(0xa4, gbc.readMem(0xd8b0));
        // CB A4 025D
        gbc.setState(0x980, 0x1cf9, 0xf8f0, 0x1005, 0x9ada, 0xff98, 0x1, 0x1);
        gbc.writeMem(0x980, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1cf9, gbc.sp());
        EXPECT(0x982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 025E
        gbc.setState(0x71d6, 0x9d87, 0xb310, 0xe0a1, 0x78e8, 0x7c1a, 0x0, 0x1);
        gbc.writeMem(0x71d6, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9d87, gbc.sp());
        EXPECT(0x71d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 025F
        gbc.setState(0xc3f7, 0xb4de, 0x1830, 0x92c1, 0xe299, 0xd9e3, 0x1, 0x1);
        gbc.writeMem(0xc3f7, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb4de, gbc.sp());
        EXPECT(0xc3f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3f7));
        EXPECT(0xa4, gbc.readMem(0xc3f8));
        // CB A4 0260
        gbc.setState(0xd730, 0xb5c9, 0x7e40, 0xb65a, 0x6d5a, 0x6803, 0x1, 0x1);
        gbc.writeMem(0xd730, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb5c9, gbc.sp());
        EXPECT(0xd732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd730));
        EXPECT(0xa4, gbc.readMem(0xd731));
        // CB A4 0261
        gbc.setState(0xecc9, 0xac25, 0x6fe0, 0xf939, 0x7496, 0xa103, 0x1, 0x0);
        gbc.writeMem(0xecc9, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xac25, gbc.sp());
        EXPECT(0xeccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecc9));
        EXPECT(0xa4, gbc.readMem(0xecca));
        // CB A4 0262
        gbc.setState(0x5e37, 0x9352, 0xf870, 0x8c36, 0xa34b, 0xc362, 0x1, 0x1);
        gbc.writeMem(0x5e37, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9352, gbc.sp());
        EXPECT(0x5e39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0263
        gbc.setState(0x3bd2, 0x63f5, 0x69c0, 0x8ceb, 0xcf1d, 0xbd2, 0x1, 0x1);
        gbc.writeMem(0x3bd2, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x63f5, gbc.sp());
        EXPECT(0x3bd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0264
        gbc.setState(0x514b, 0x7874, 0xa0c0, 0xc89d, 0x2ee3, 0x6f8c, 0x0, 0x0);
        gbc.writeMem(0x514b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7874, gbc.sp());
        EXPECT(0x514d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0265
        gbc.setState(0xe49d, 0x546b, 0x82d0, 0xef67, 0x230b, 0x2813, 0x1, 0x1);
        gbc.writeMem(0xe49d, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x546b, gbc.sp());
        EXPECT(0xe49f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe49d));
        EXPECT(0xa4, gbc.readMem(0xe49e));
        // CB A4 0266
        gbc.setState(0x12a8, 0x8ea0, 0x14d0, 0xa165, 0x8343, 0x6f11, 0x0, 0x0);
        gbc.writeMem(0x12a8, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8ea0, gbc.sp());
        EXPECT(0x12aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0267
        gbc.setState(0xacb8, 0xd5e0, 0xb4c0, 0x47b7, 0xfcc4, 0x67be, 0x1, 0x0);
        gbc.writeMem(0xacb8, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd5e0, gbc.sp());
        EXPECT(0xacba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacb8));
        EXPECT(0xa4, gbc.readMem(0xacb9));
        // CB A4 0268
        gbc.setState(0x2acb, 0x751, 0xda00, 0x567e, 0x8960, 0xe55e, 0x0, 0x0);
        gbc.writeMem(0x2acb, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x751, gbc.sp());
        EXPECT(0x2acd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0269
        gbc.setState(0x7079, 0x8de0, 0x1de0, 0x6a76, 0xbf75, 0xb848, 0x0, 0x0);
        gbc.writeMem(0x7079, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8de0, gbc.sp());
        EXPECT(0x707b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 026A
        gbc.setState(0x72f0, 0xd952, 0xf990, 0x9d02, 0x8193, 0x1cd5, 0x0, 0x1);
        gbc.writeMem(0x72f0, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd952, gbc.sp());
        EXPECT(0x72f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 026B
        gbc.setState(0x8fe2, 0x480e, 0xeb30, 0x45a1, 0xeab8, 0x5632, 0x1, 0x0);
        gbc.writeMem(0x8fe2, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x480e, gbc.sp());
        EXPECT(0x8fe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fe2));
        EXPECT(0xa4, gbc.readMem(0x8fe3));
        // CB A4 026C
        gbc.setState(0x558d, 0x6023, 0x19e0, 0x1fdf, 0xd0e7, 0xaf77, 0x1, 0x0);
        gbc.writeMem(0x558d, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6023, gbc.sp());
        EXPECT(0x558f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 026F
        gbc.setState(0x2bc2, 0xce91, 0x8e70, 0x2bc4, 0x97b2, 0xc58a, 0x1, 0x1);
        gbc.writeMem(0x2bc2, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xce91, gbc.sp());
        EXPECT(0x2bc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0270
        gbc.setState(0x1f0b, 0x82f4, 0x6f30, 0x6765, 0x77f4, 0xa34c, 0x1, 0x0);
        gbc.writeMem(0x1f0b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x82f4, gbc.sp());
        EXPECT(0x1f0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0271
        gbc.setState(0x2f30, 0x6093, 0x4940, 0x9c72, 0x7241, 0x7c66, 0x0, 0x1);
        gbc.writeMem(0x2f30, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6093, gbc.sp());
        EXPECT(0x2f32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0272
        gbc.setState(0xc8fa, 0x495b, 0xd5e0, 0x1d7f, 0xcbe6, 0x6039, 0x0, 0x1);
        gbc.writeMem(0xc8fa, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x495b, gbc.sp());
        EXPECT(0xc8fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8fa));
        EXPECT(0xa4, gbc.readMem(0xc8fb));
        // CB A4 0273
        gbc.setState(0x4155, 0xb341, 0xf6b0, 0x85fc, 0x2eeb, 0x7bf, 0x1, 0x1);
        gbc.writeMem(0x4155, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb341, gbc.sp());
        EXPECT(0x4157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0274
        gbc.setState(0x3bff, 0x4350, 0x8100, 0xf7b4, 0xc0d4, 0xdf90, 0x0, 0x1);
        gbc.writeMem(0x3bff, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4350, gbc.sp());
        EXPECT(0x3c01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0275
        gbc.setState(0xda67, 0x8, 0xcf70, 0x5fb5, 0x7ccb, 0xa90b, 0x1, 0x0);
        gbc.writeMem(0xda67, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8, gbc.sp());
        EXPECT(0xda69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda67));
        EXPECT(0xa4, gbc.readMem(0xda68));
        // CB A4 0276
        gbc.setState(0xafdf, 0x55cb, 0x4ce0, 0xb72e, 0xb415, 0x69ab, 0x1, 0x0);
        gbc.writeMem(0xafdf, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x55cb, gbc.sp());
        EXPECT(0xafe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafdf));
        EXPECT(0xa4, gbc.readMem(0xafe0));
        // CB A4 0277
        gbc.setState(0xc77a, 0xa9db, 0xa8e0, 0x2969, 0xe31f, 0xdc2b, 0x0, 0x0);
        gbc.writeMem(0xc77a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa9db, gbc.sp());
        EXPECT(0xc77c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc77a));
        EXPECT(0xa4, gbc.readMem(0xc77b));
        // CB A4 0278
        gbc.setState(0x894a, 0xf7b6, 0xe430, 0xe9d3, 0xd008, 0x97d1, 0x0, 0x1);
        gbc.writeMem(0x894a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf7b6, gbc.sp());
        EXPECT(0x894c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x894a));
        EXPECT(0xa4, gbc.readMem(0x894b));
        // CB A4 0279
        gbc.setState(0x8dec, 0x9ad7, 0x8840, 0xcd50, 0x15b3, 0x6e7a, 0x1, 0x0);
        gbc.writeMem(0x8dec, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9ad7, gbc.sp());
        EXPECT(0x8dee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dec));
        EXPECT(0xa4, gbc.readMem(0x8ded));
        // CB A4 027A
        gbc.setState(0xc7ff, 0xcc8c, 0xc0c0, 0xcbed, 0xe37e, 0x3b09, 0x0, 0x1);
        gbc.writeMem(0xc7ff, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xcc8c, gbc.sp());
        EXPECT(0xc801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7ff));
        EXPECT(0xa4, gbc.readMem(0xc800));
        // CB A4 027B
        gbc.setState(0xac0b, 0x92b6, 0x8a70, 0xdd6f, 0xefda, 0x332a, 0x1, 0x1);
        gbc.writeMem(0xac0b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x92b6, gbc.sp());
        EXPECT(0xac0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac0b));
        EXPECT(0xa4, gbc.readMem(0xac0c));
        // CB A4 027C
        gbc.setState(0xc577, 0x3e04, 0xf030, 0xcbcf, 0x77e7, 0x2d26, 0x0, 0x1);
        gbc.writeMem(0xc577, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3e04, gbc.sp());
        EXPECT(0xc579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc577));
        EXPECT(0xa4, gbc.readMem(0xc578));
        // CB A4 027D
        gbc.setState(0x534f, 0x1333, 0x9340, 0x854a, 0x3f75, 0x22ae, 0x0, 0x0);
        gbc.writeMem(0x534f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1333, gbc.sp());
        EXPECT(0x5351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 027E
        gbc.setState(0x3ed6, 0x2fa0, 0xe3c0, 0x9391, 0x1542, 0x5b62, 0x1, 0x1);
        gbc.writeMem(0x3ed6, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2fa0, gbc.sp());
        EXPECT(0x3ed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 027F
        gbc.setState(0x49b1, 0xe1, 0x4030, 0x9d20, 0x42cf, 0x2527, 0x0, 0x0);
        gbc.writeMem(0x49b1, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe1, gbc.sp());
        EXPECT(0x49b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0280
        gbc.setState(0x9aff, 0xf4be, 0x9fd0, 0x5f53, 0x8b77, 0xb426, 0x0, 0x1);
        gbc.writeMem(0x9aff, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf4be, gbc.sp());
        EXPECT(0x9b01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aff));
        EXPECT(0xa4, gbc.readMem(0x9b00));
        // CB A4 0281
        gbc.setState(0x74bb, 0xeea8, 0x16f0, 0x52d7, 0x55fd, 0xb3c9, 0x1, 0x1);
        gbc.writeMem(0x74bb, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xeea8, gbc.sp());
        EXPECT(0x74bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0282
        gbc.setState(0xa741, 0x7b28, 0xf160, 0xdea8, 0xdac, 0x7515, 0x0, 0x1);
        gbc.writeMem(0xa741, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7b28, gbc.sp());
        EXPECT(0xa743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa741));
        EXPECT(0xa4, gbc.readMem(0xa742));
        // CB A4 0283
        gbc.setState(0x1dfc, 0x1c82, 0xf570, 0x87b1, 0x8a70, 0x1330, 0x1, 0x1);
        gbc.writeMem(0x1dfc, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1c82, gbc.sp());
        EXPECT(0x1dfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0284
        gbc.setState(0x9547, 0xf5bb, 0x8520, 0xc11b, 0x37d4, 0x37df, 0x0, 0x0);
        gbc.writeMem(0x9547, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf5bb, gbc.sp());
        EXPECT(0x9549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9547));
        EXPECT(0xa4, gbc.readMem(0x9548));
        // CB A4 0285
        gbc.setState(0x2955, 0x11ed, 0xb210, 0x5803, 0x3d62, 0x6da4, 0x1, 0x0);
        gbc.writeMem(0x2955, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x11ed, gbc.sp());
        EXPECT(0x2957, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0286
        gbc.setState(0x9036, 0x79e8, 0x2480, 0xe61b, 0x4c25, 0x3827, 0x0, 0x1);
        gbc.writeMem(0x9036, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x79e8, gbc.sp());
        EXPECT(0x9038, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9036));
        EXPECT(0xa4, gbc.readMem(0x9037));
        // CB A4 0287
        gbc.setState(0x1534, 0xd3f8, 0x2ae0, 0xf820, 0xcd1d, 0xa5e5, 0x1, 0x0);
        gbc.writeMem(0x1534, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd3f8, gbc.sp());
        EXPECT(0x1536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0288
        gbc.setState(0x2ee4, 0x19, 0xf090, 0x3ca6, 0xbde5, 0x11ae, 0x1, 0x0);
        gbc.writeMem(0x2ee4, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x19, gbc.sp());
        EXPECT(0x2ee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0289
        gbc.setState(0x351b, 0x9b9c, 0xba70, 0x6ad1, 0x513d, 0x6d8c, 0x1, 0x1);
        gbc.writeMem(0x351b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9b9c, gbc.sp());
        EXPECT(0x351d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 028A
        gbc.setState(0x9974, 0xdc8f, 0xfeb0, 0xe6a1, 0xe595, 0xb71f, 0x0, 0x0);
        gbc.writeMem(0x9974, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xdc8f, gbc.sp());
        EXPECT(0x9976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9974));
        EXPECT(0xa4, gbc.readMem(0x9975));
        // CB A4 028B
        gbc.setState(0xdcdc, 0x7330, 0x3cc0, 0x8de1, 0x3d0b, 0xf1ae, 0x0, 0x1);
        gbc.writeMem(0xdcdc, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7330, gbc.sp());
        EXPECT(0xdcde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcdc));
        EXPECT(0xa4, gbc.readMem(0xdcdd));
        // CB A4 028C
        gbc.setState(0x6f07, 0x29a, 0xfc0, 0x4ad1, 0x9924, 0x4dd0, 0x0, 0x1);
        gbc.writeMem(0x6f07, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x29a, gbc.sp());
        EXPECT(0x6f09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 028D
        gbc.setState(0x710f, 0x6d72, 0xcd00, 0xf788, 0xc4c, 0x8d52, 0x1, 0x1);
        gbc.writeMem(0x710f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6d72, gbc.sp());
        EXPECT(0x7111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 028E
        gbc.setState(0xcdbe, 0x39b0, 0xe170, 0xc8e6, 0xba27, 0x25dc, 0x0, 0x0);
        gbc.writeMem(0xcdbe, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x39b0, gbc.sp());
        EXPECT(0xcdc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdbe));
        EXPECT(0xa4, gbc.readMem(0xcdbf));
        // CB A4 028F
        gbc.setState(0xbebd, 0x94bd, 0x13e0, 0xacff, 0xe6ca, 0x85b9, 0x0, 0x0);
        gbc.writeMem(0xbebd, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x94bd, gbc.sp());
        EXPECT(0xbebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbebd));
        EXPECT(0xa4, gbc.readMem(0xbebe));
        // CB A4 0290
        gbc.setState(0xcc70, 0x7458, 0x38b0, 0xc04b, 0x1d14, 0xe93c, 0x0, 0x0);
        gbc.writeMem(0xcc70, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7458, gbc.sp());
        EXPECT(0xcc72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc70));
        EXPECT(0xa4, gbc.readMem(0xcc71));
        // CB A4 0291
        gbc.setState(0x1fb, 0x794e, 0x1e80, 0xf145, 0x69df, 0x529c, 0x0, 0x0);
        gbc.writeMem(0x1fb, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x794e, gbc.sp());
        EXPECT(0x1fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0292
        gbc.setState(0x11f3, 0x8742, 0x5d50, 0x23db, 0x907f, 0x6d66, 0x1, 0x0);
        gbc.writeMem(0x11f3, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8742, gbc.sp());
        EXPECT(0x11f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0293
        gbc.setState(0x5231, 0x5c75, 0x4160, 0x2309, 0xa0f, 0xf040, 0x1, 0x0);
        gbc.writeMem(0x5231, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5c75, gbc.sp());
        EXPECT(0x5233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0295
        gbc.setState(0x4975, 0xc546, 0xf610, 0x1948, 0xa35c, 0x82c8, 0x1, 0x0);
        gbc.writeMem(0x4975, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc546, gbc.sp());
        EXPECT(0x4977, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0296
        gbc.setState(0xa9ec, 0x353b, 0x2fe0, 0xb327, 0x9b8c, 0xc2e1, 0x0, 0x1);
        gbc.writeMem(0xa9ec, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x353b, gbc.sp());
        EXPECT(0xa9ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9ec));
        EXPECT(0xa4, gbc.readMem(0xa9ed));
        // CB A4 0297
        gbc.setState(0x386a, 0x363e, 0xaf30, 0xb612, 0x9ba2, 0x277, 0x0, 0x0);
        gbc.writeMem(0x386a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x363e, gbc.sp());
        EXPECT(0x386c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0299
        gbc.setState(0x1f72, 0xe7c1, 0x5670, 0x7591, 0x7aa4, 0x60cd, 0x0, 0x0);
        gbc.writeMem(0x1f72, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe7c1, gbc.sp());
        EXPECT(0x1f74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 029A
        gbc.setState(0x337, 0x8a4d, 0xf440, 0x5358, 0x2d82, 0xf1ba, 0x1, 0x0);
        gbc.writeMem(0x337, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8a4d, gbc.sp());
        EXPECT(0x339, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 029C
        gbc.setState(0xa135, 0x29ba, 0xb0, 0x2334, 0x4e89, 0x4f57, 0x0, 0x1);
        gbc.writeMem(0xa135, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x29ba, gbc.sp());
        EXPECT(0xa137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa135));
        EXPECT(0xa4, gbc.readMem(0xa136));
        // CB A4 029D
        gbc.setState(0xaba6, 0xd57b, 0x6e80, 0x7f68, 0x4dac, 0x4993, 0x0, 0x0);
        gbc.writeMem(0xaba6, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd57b, gbc.sp());
        EXPECT(0xaba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaba6));
        EXPECT(0xa4, gbc.readMem(0xaba7));
        // CB A4 029E
        gbc.setState(0xaa0a, 0x6db6, 0x5a40, 0x4490, 0x8a9f, 0x5adb, 0x0, 0x1);
        gbc.writeMem(0xaa0a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6db6, gbc.sp());
        EXPECT(0xaa0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa0a));
        EXPECT(0xa4, gbc.readMem(0xaa0b));
        // CB A4 029F
        gbc.setState(0xafa6, 0x7ba2, 0x7ce0, 0xe8b2, 0x8f48, 0x9366, 0x1, 0x0);
        gbc.writeMem(0xafa6, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7ba2, gbc.sp());
        EXPECT(0xafa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafa6));
        EXPECT(0xa4, gbc.readMem(0xafa7));
        // CB A4 02A0
        gbc.setState(0x6718, 0x14b5, 0xafd0, 0x2ea6, 0x9df, 0xeab9, 0x0, 0x1);
        gbc.writeMem(0x6718, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x14b5, gbc.sp());
        EXPECT(0x671a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 02A1
        gbc.setState(0x6620, 0x7d77, 0xce90, 0xb6dd, 0x194e, 0xec25, 0x1, 0x1);
        gbc.writeMem(0x6620, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7d77, gbc.sp());
        EXPECT(0x6622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 02A2
        gbc.setState(0x7611, 0xa80c, 0xdd60, 0x79e1, 0xb443, 0x75c7, 0x1, 0x1);
        gbc.writeMem(0x7611, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa80c, gbc.sp());
        EXPECT(0x7613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 02A3
        gbc.setState(0x24bf, 0xa0a1, 0xb350, 0x1a5a, 0xfa23, 0x5eb1, 0x1, 0x1);
        gbc.writeMem(0x24bf, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa0a1, gbc.sp());
        EXPECT(0x24c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 02A4
        gbc.setState(0xd8b0, 0xf010, 0x1c60, 0x9a6d, 0xc163, 0x2a6a, 0x1, 0x0);
        gbc.writeMem(0xd8b0, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf010, gbc.sp());
        EXPECT(0xd8b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8b0));
        EXPECT(0xa4, gbc.readMem(0xd8b1));
        // CB A4 02A5
        gbc.setState(0x877, 0xc92e, 0xa840, 0xd24f, 0x333a, 0xd196, 0x0, 0x1);
        gbc.writeMem(0x877, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc92e, gbc.sp());
        EXPECT(0x879, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 02A7
        gbc.setState(0x5db1, 0x278d, 0xdc70, 0xb74f, 0xae7, 0x8b3c, 0x0, 0x0);
        gbc.writeMem(0x5db1, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x278d, gbc.sp());
        EXPECT(0x5db3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 02A8
        gbc.setState(0x7490, 0xe645, 0x56b0, 0x62f, 0x94b3, 0x89fa, 0x0, 0x0);
        gbc.writeMem(0x7490, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe645, gbc.sp());
        EXPECT(0x7492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 02A9
        gbc.setState(0x74aa, 0x86f8, 0xc4d0, 0xaa41, 0xb194, 0x5b9d, 0x0, 0x1);
        gbc.writeMem(0x74aa, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x86f8, gbc.sp());
        EXPECT(0x74ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 02AA
        gbc.setState(0x44cf, 0x869a, 0x1f20, 0x8fc6, 0x8162, 0xea54, 0x0, 0x1);
        gbc.writeMem(0x44cf, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x869a, gbc.sp());
        EXPECT(0x44d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 02AB
        gbc.setState(0xa387, 0x4f15, 0xd010, 0xb96a, 0x3fbb, 0xe3c5, 0x0, 0x0);
        gbc.writeMem(0xa387, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4f15, gbc.sp());
        EXPECT(0xa389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa387));
        EXPECT(0xa4, gbc.readMem(0xa388));
        // CB A4 02AC
        gbc.setState(0xb32d, 0x8efe, 0x65e0, 0xbc92, 0x82a6, 0x6c4, 0x0, 0x0);
        gbc.writeMem(0xb32d, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8efe, gbc.sp());
        EXPECT(0xb32f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb32d));
        EXPECT(0xa4, gbc.readMem(0xb32e));
        // CB A4 02AD
        gbc.setState(0x61da, 0x447c, 0x7d70, 0x9758, 0x778f, 0xfae9, 0x0, 0x0);
        gbc.writeMem(0x61da, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x447c, gbc.sp());
        EXPECT(0x61dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 02AE
        gbc.setState(0xe65a, 0x9623, 0x5a10, 0x8f0a, 0x4ba, 0x6f03, 0x0, 0x0);
        gbc.writeMem(0xe65a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9623, gbc.sp());
        EXPECT(0xe65c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe65a));
        EXPECT(0xa4, gbc.readMem(0xe65b));
        // CB A4 02AF
        gbc.setState(0xed76, 0x8cca, 0x4e20, 0xb1ab, 0x5308, 0xcfcc, 0x1, 0x0);
        gbc.writeMem(0xed76, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8cca, gbc.sp());
        EXPECT(0xed78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed76));
        EXPECT(0xa4, gbc.readMem(0xed77));
        // CB A4 02B1
        gbc.setState(0x1c31, 0x11cc, 0x6df0, 0xce22, 0x559a, 0x7f89, 0x1, 0x0);
        gbc.writeMem(0x1c31, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x11cc, gbc.sp());
        EXPECT(0x1c33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 02B2
        gbc.setState(0x576e, 0xc674, 0x6550, 0xaf5d, 0xf339, 0xb493, 0x1, 0x0);
        gbc.writeMem(0x576e, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc674, gbc.sp());
        EXPECT(0x5770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 02B3
        gbc.setState(0x1130, 0xdf0c, 0xbfc0, 0xa499, 0xbb06, 0xe0db, 0x0, 0x1);
        gbc.writeMem(0x1130, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xdf0c, gbc.sp());
        EXPECT(0x1132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 02B4
        gbc.setState(0xd7df, 0xe274, 0xa960, 0x320a, 0xaf0e, 0x2c2c, 0x1, 0x1);
        gbc.writeMem(0xd7df, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe274, gbc.sp());
        EXPECT(0xd7e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7df));
        EXPECT(0xa4, gbc.readMem(0xd7e0));
        // CB A4 02B5
        gbc.setState(0xc8b3, 0xe04c, 0xe720, 0xeb7c, 0x3fbd, 0x565c, 0x0, 0x0);
        gbc.writeMem(0xc8b3, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe04c, gbc.sp());
        EXPECT(0xc8b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8b3));
        EXPECT(0xa4, gbc.readMem(0xc8b4));
        // CB A4 02B6
        gbc.setState(0x158, 0x9411, 0x7400, 0x678e, 0x7cb0, 0x8629, 0x0, 0x0);
        gbc.writeMem(0x158, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9411, gbc.sp());
        EXPECT(0x15a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 02B7
        gbc.setState(0x4d25, 0x1bfa, 0xf4f0, 0x8721, 0x61cd, 0xe121, 0x1, 0x1);
        gbc.writeMem(0x4d25, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1bfa, gbc.sp());
        EXPECT(0x4d27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 02B9
        gbc.setState(0x81ec, 0x1e3, 0x53b0, 0x3bab, 0xff21, 0x4844, 0x0, 0x1);
        gbc.writeMem(0x81ec, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1e3, gbc.sp());
        EXPECT(0x81ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81ec));
        EXPECT(0xa4, gbc.readMem(0x81ed));
        // CB A4 02BA
        gbc.setState(0x61f0, 0x841e, 0x8140, 0xdd0, 0x4b53, 0xde85, 0x1, 0x0);
        gbc.writeMem(0x61f0, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x841e, gbc.sp());
        EXPECT(0x61f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 02BB
        gbc.setState(0x4412, 0xd3c7, 0x32a0, 0xad4f, 0xac1e, 0xc68d, 0x1, 0x0);
        gbc.writeMem(0x4412, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd3c7, gbc.sp());
        EXPECT(0x4414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 02BC
        gbc.setState(0x8106, 0x5011, 0xa5e0, 0x3933, 0xfb6f, 0xb84b, 0x0, 0x1);
        gbc.writeMem(0x8106, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5011, gbc.sp());
        EXPECT(0x8108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8106));
        EXPECT(0xa4, gbc.readMem(0x8107));
        // CB A4 02BD
        gbc.setState(0x5f17, 0xb2e0, 0x5ab0, 0x4da1, 0xac9, 0xc93d, 0x0, 0x1);
        gbc.writeMem(0x5f17, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb2e0, gbc.sp());
        EXPECT(0x5f19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 02BE
        gbc.setState(0xa93f, 0x749a, 0x66c0, 0x5318, 0x7f8b, 0xfa6a, 0x0, 0x1);
        gbc.writeMem(0xa93f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x749a, gbc.sp());
        EXPECT(0xa941, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa93f));
        EXPECT(0xa4, gbc.readMem(0xa940));
        // CB A4 02BF
        gbc.setState(0x260a, 0x3128, 0x7e50, 0x2346, 0x8ca5, 0xfd3c, 0x0, 0x1);
        gbc.writeMem(0x260a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3128, gbc.sp());
        EXPECT(0x260c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 02C0
        gbc.setState(0xcd82, 0x811f, 0xce20, 0x7b91, 0xf03e, 0xc0b1, 0x0, 0x1);
        gbc.writeMem(0xcd82, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x811f, gbc.sp());
        EXPECT(0xcd84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd82));
        EXPECT(0xa4, gbc.readMem(0xcd83));
        // CB A4 02C1
        gbc.setState(0x22e7, 0x7773, 0x9ea0, 0xbba4, 0x10e, 0x36ca, 0x0, 0x0);
        gbc.writeMem(0x22e7, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7773, gbc.sp());
        EXPECT(0x22e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 02C2
        gbc.setState(0x350e, 0x28de, 0xd4c0, 0x3fcd, 0x4f4e, 0x5d2d, 0x1, 0x1);
        gbc.writeMem(0x350e, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x28de, gbc.sp());
        EXPECT(0x3510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 02C3
        gbc.setState(0xb77b, 0x5038, 0x3b00, 0xd03d, 0x7ff3, 0x26b2, 0x1, 0x0);
        gbc.writeMem(0xb77b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5038, gbc.sp());
        EXPECT(0xb77d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb77b));
        EXPECT(0xa4, gbc.readMem(0xb77c));
        // CB A4 02C4
        gbc.setState(0x77d4, 0xc0f2, 0x750, 0x666f, 0x59b0, 0x6a8d, 0x0, 0x1);
        gbc.writeMem(0x77d4, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc0f2, gbc.sp());
        EXPECT(0x77d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 02C5
        gbc.setState(0x1e35, 0x4150, 0xab30, 0x280e, 0x5641, 0x9d36, 0x1, 0x0);
        gbc.writeMem(0x1e35, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4150, gbc.sp());
        EXPECT(0x1e37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 02C6
        gbc.setState(0x21a2, 0xc3f2, 0xa560, 0x79db, 0xe10b, 0xbbb9, 0x1, 0x0);
        gbc.writeMem(0x21a2, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc3f2, gbc.sp());
        EXPECT(0x21a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 02C7
        gbc.setState(0x6170, 0x64bf, 0x4490, 0xcc4, 0x78ad, 0x45f9, 0x0, 0x1);
        gbc.writeMem(0x6170, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x64bf, gbc.sp());
        EXPECT(0x6172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 02C8
        gbc.setState(0x9188, 0x16fe, 0xfcc0, 0xe4b9, 0x1274, 0x1f40, 0x1, 0x1);
        gbc.writeMem(0x9188, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x16fe, gbc.sp());
        EXPECT(0x918a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9188));
        EXPECT(0xa4, gbc.readMem(0x9189));
        // CB A4 02C9
        gbc.setState(0xdc96, 0x61ab, 0x72f0, 0xa3e9, 0x8f41, 0x56cb, 0x0, 0x1);
        gbc.writeMem(0xdc96, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x61ab, gbc.sp());
        EXPECT(0xdc98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc96));
        EXPECT(0xa4, gbc.readMem(0xdc97));
        // CB A4 02CA
        gbc.setState(0xabb4, 0xb0e8, 0xab10, 0x9b5e, 0x5087, 0x6991, 0x1, 0x1);
        gbc.writeMem(0xabb4, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb0e8, gbc.sp());
        EXPECT(0xabb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabb4));
        EXPECT(0xa4, gbc.readMem(0xabb5));
        // CB A4 02CC
        gbc.setState(0x7440, 0x4478, 0x70b0, 0x558d, 0x93be, 0xbb40, 0x1, 0x1);
        gbc.writeMem(0x7440, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4478, gbc.sp());
        EXPECT(0x7442, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 02CD
        gbc.setState(0x7b3c, 0xc791, 0x3360, 0xdfad, 0xda46, 0xc90a, 0x1, 0x1);
        gbc.writeMem(0x7b3c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc791, gbc.sp());
        EXPECT(0x7b3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 02CE
        gbc.setState(0x6e3b, 0x27b2, 0x8cc0, 0x6d9a, 0xf54b, 0x27bd, 0x0, 0x1);
        gbc.writeMem(0x6e3b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x27b2, gbc.sp());
        EXPECT(0x6e3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 02CF
        gbc.setState(0x1802, 0xacc9, 0xa20, 0x6076, 0xf40b, 0x217d, 0x1, 0x1);
        gbc.writeMem(0x1802, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xacc9, gbc.sp());
        EXPECT(0x1804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 02D0
        gbc.setState(0x68bc, 0x6b0b, 0xbf0, 0x94fa, 0xcd7c, 0xda6e, 0x1, 0x1);
        gbc.writeMem(0x68bc, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6b0b, gbc.sp());
        EXPECT(0x68be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 02D1
        gbc.setState(0x6c92, 0x5b65, 0xf0f0, 0x1297, 0x7af8, 0x902f, 0x1, 0x1);
        gbc.writeMem(0x6c92, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5b65, gbc.sp());
        EXPECT(0x6c94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 02D2
        gbc.setState(0xec46, 0x2c29, 0xcb80, 0x96b1, 0x315b, 0x2d35, 0x0, 0x1);
        gbc.writeMem(0xec46, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2c29, gbc.sp());
        EXPECT(0xec48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec46));
        EXPECT(0xa4, gbc.readMem(0xec47));
        // CB A4 02D3
        gbc.setState(0xacd3, 0x8fbc, 0xd810, 0x1f4, 0x3b5c, 0x4bce, 0x0, 0x1);
        gbc.writeMem(0xacd3, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8fbc, gbc.sp());
        EXPECT(0xacd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacd3));
        EXPECT(0xa4, gbc.readMem(0xacd4));
        // CB A4 02D4
        gbc.setState(0x64ae, 0x9edd, 0x92d0, 0x30bd, 0x381a, 0xe206, 0x0, 0x1);
        gbc.writeMem(0x64ae, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9edd, gbc.sp());
        EXPECT(0x64b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 02D5
        gbc.setState(0xa622, 0x49e2, 0x82d0, 0xe98c, 0xa5ea, 0x58c5, 0x1, 0x1);
        gbc.writeMem(0xa622, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x49e2, gbc.sp());
        EXPECT(0xa624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa622));
        EXPECT(0xa4, gbc.readMem(0xa623));
        // CB A4 02D6
        gbc.setState(0x7177, 0x93f9, 0x2c20, 0x58da, 0x8592, 0x3b5c, 0x1, 0x0);
        gbc.writeMem(0x7177, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x93f9, gbc.sp());
        EXPECT(0x7179, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 02D7
        gbc.setState(0xb9fd, 0xc8cd, 0xbb00, 0x3127, 0xca25, 0x222c, 0x0, 0x1);
        gbc.writeMem(0xb9fd, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc8cd, gbc.sp());
        EXPECT(0xb9ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9fd));
        EXPECT(0xa4, gbc.readMem(0xb9fe));
        // CB A4 02D8
        gbc.setState(0xe675, 0x3735, 0x74c0, 0x41af, 0x7f59, 0xb558, 0x0, 0x0);
        gbc.writeMem(0xe675, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3735, gbc.sp());
        EXPECT(0xe677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe675));
        EXPECT(0xa4, gbc.readMem(0xe676));
        // CB A4 02D9
        gbc.setState(0xb8c, 0x6fe4, 0x7a90, 0x59fc, 0xbaff, 0x8d1a, 0x0, 0x0);
        gbc.writeMem(0xb8c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6fe4, gbc.sp());
        EXPECT(0xb8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 02DA
        gbc.setState(0xee66, 0x2de5, 0xacf0, 0x863d, 0x695a, 0xf0c3, 0x0, 0x0);
        gbc.writeMem(0xee66, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2de5, gbc.sp());
        EXPECT(0xee68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee66));
        EXPECT(0xa4, gbc.readMem(0xee67));
        // CB A4 02DB
        gbc.setState(0xd353, 0x85b1, 0x78b0, 0xfa4b, 0xc365, 0x144e, 0x0, 0x1);
        gbc.writeMem(0xd353, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x85b1, gbc.sp());
        EXPECT(0xd355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd353));
        EXPECT(0xa4, gbc.readMem(0xd354));
        // CB A4 02DD
        gbc.setState(0x9514, 0x81b3, 0x1970, 0x28a8, 0xeb8c, 0x9ddc, 0x1, 0x0);
        gbc.writeMem(0x9514, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x81b3, gbc.sp());
        EXPECT(0x9516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9514));
        EXPECT(0xa4, gbc.readMem(0x9515));
        // CB A4 02DE
        gbc.setState(0x836f, 0x5fbd, 0xb780, 0x3ffe, 0x1279, 0xf35, 0x0, 0x0);
        gbc.writeMem(0x836f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5fbd, gbc.sp());
        EXPECT(0x8371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x836f));
        EXPECT(0xa4, gbc.readMem(0x8370));
        // CB A4 02DF
        gbc.setState(0xbc43, 0x7ccd, 0x1600, 0xe871, 0x7dd2, 0x8d15, 0x0, 0x0);
        gbc.writeMem(0xbc43, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7ccd, gbc.sp());
        EXPECT(0xbc45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc43));
        EXPECT(0xa4, gbc.readMem(0xbc44));
        // CB A4 02E0
        gbc.setState(0x3a6a, 0x10b4, 0x4300, 0x7304, 0x47be, 0x240d, 0x1, 0x1);
        gbc.writeMem(0x3a6a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x10b4, gbc.sp());
        EXPECT(0x3a6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 02E1
        gbc.setState(0x2785, 0xb343, 0xbee0, 0x51c2, 0x5841, 0xb7e8, 0x1, 0x0);
        gbc.writeMem(0x2785, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb343, gbc.sp());
        EXPECT(0x2787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 02E2
        gbc.setState(0x5a4c, 0x409d, 0xa9f0, 0xd40c, 0x3558, 0x7eb5, 0x1, 0x0);
        gbc.writeMem(0x5a4c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x409d, gbc.sp());
        EXPECT(0x5a4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 02E3
        gbc.setState(0xc966, 0x4214, 0xc060, 0xeedf, 0x511c, 0xcf00, 0x0, 0x0);
        gbc.writeMem(0xc966, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4214, gbc.sp());
        EXPECT(0xc968, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc966));
        EXPECT(0xa4, gbc.readMem(0xc967));
        // CB A4 02E4
        gbc.setState(0x2235, 0x2a6f, 0xe330, 0x3591, 0x3d4a, 0xb9fc, 0x1, 0x0);
        gbc.writeMem(0x2235, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2a6f, gbc.sp());
        EXPECT(0x2237, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 02E5
        gbc.setState(0x2cff, 0x562b, 0x6a40, 0x788b, 0x9274, 0xdb55, 0x1, 0x0);
        gbc.writeMem(0x2cff, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x562b, gbc.sp());
        EXPECT(0x2d01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 02E6
        gbc.setState(0x28b8, 0xd37a, 0xb7f0, 0x515f, 0x22c8, 0x3713, 0x0, 0x0);
        gbc.writeMem(0x28b8, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd37a, gbc.sp());
        EXPECT(0x28ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 02E7
        gbc.setState(0xe51, 0x70e5, 0x1440, 0x13b8, 0x5e17, 0x23cb, 0x0, 0x1);
        gbc.writeMem(0xe51, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x70e5, gbc.sp());
        EXPECT(0xe53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 02E8
        gbc.setState(0x6988, 0x5eab, 0xbb0, 0x1154, 0xc090, 0xdc97, 0x1, 0x1);
        gbc.writeMem(0x6988, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5eab, gbc.sp());
        EXPECT(0x698a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 02E9
        gbc.setState(0x3d1c, 0x69ad, 0x38c0, 0xfb24, 0xc215, 0x7340, 0x0, 0x0);
        gbc.writeMem(0x3d1c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x69ad, gbc.sp());
        EXPECT(0x3d1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 02EA
        gbc.setState(0x9257, 0xcfa3, 0xd560, 0xf3e7, 0x77d1, 0xdba9, 0x0, 0x0);
        gbc.writeMem(0x9257, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xcfa3, gbc.sp());
        EXPECT(0x9259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9257));
        EXPECT(0xa4, gbc.readMem(0x9258));
        // CB A4 02EB
        gbc.setState(0xd611, 0xa6be, 0xe460, 0x824d, 0x75a, 0x8db9, 0x1, 0x0);
        gbc.writeMem(0xd611, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa6be, gbc.sp());
        EXPECT(0xd613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd611));
        EXPECT(0xa4, gbc.readMem(0xd612));
        // CB A4 02EC
        gbc.setState(0x2ea0, 0xe9a4, 0x6df0, 0x64a3, 0xaf53, 0x282d, 0x1, 0x0);
        gbc.writeMem(0x2ea0, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe9a4, gbc.sp());
        EXPECT(0x2ea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 02ED
        gbc.setState(0x750c, 0xb1e0, 0xee90, 0xb71f, 0xdbc9, 0xe7a9, 0x1, 0x1);
        gbc.writeMem(0x750c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb1e0, gbc.sp());
        EXPECT(0x750e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 02EE
        gbc.setState(0x6045, 0x10f0, 0x5cb0, 0x9433, 0x158e, 0x849c, 0x0, 0x0);
        gbc.writeMem(0x6045, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x10f0, gbc.sp());
        EXPECT(0x6047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 02EF
        gbc.setState(0x9493, 0x4efc, 0xf8f0, 0xf0c8, 0x8c6a, 0x776d, 0x1, 0x1);
        gbc.writeMem(0x9493, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4efc, gbc.sp());
        EXPECT(0x9495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9493));
        EXPECT(0xa4, gbc.readMem(0x9494));
        // CB A4 02F0
        gbc.setState(0xe2ad, 0xf4d3, 0x9b20, 0x4e1b, 0x6130, 0x545, 0x0, 0x1);
        gbc.writeMem(0xe2ad, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf4d3, gbc.sp());
        EXPECT(0xe2af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2ad));
        EXPECT(0xa4, gbc.readMem(0xe2ae));
        // CB A4 02F1
        gbc.setState(0xcd60, 0x3d5b, 0x64a0, 0x33ea, 0xd683, 0x95f7, 0x0, 0x1);
        gbc.writeMem(0xcd60, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3d5b, gbc.sp());
        EXPECT(0xcd62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd60));
        EXPECT(0xa4, gbc.readMem(0xcd61));
        // CB A4 02F2
        gbc.setState(0x1cd5, 0x1ce1, 0x16c0, 0x16a6, 0x8aeb, 0x8e0f, 0x0, 0x0);
        gbc.writeMem(0x1cd5, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1ce1, gbc.sp());
        EXPECT(0x1cd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 02F3
        gbc.setState(0x97fc, 0x4f88, 0x67d0, 0xb630, 0x69b2, 0x7d54, 0x1, 0x1);
        gbc.writeMem(0x97fc, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4f88, gbc.sp());
        EXPECT(0x97fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97fc));
        EXPECT(0xa4, gbc.readMem(0x97fd));
        // CB A4 02F4
        gbc.setState(0x4992, 0x8fee, 0x3a40, 0x6212, 0x36dd, 0x25ee, 0x1, 0x1);
        gbc.writeMem(0x4992, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8fee, gbc.sp());
        EXPECT(0x4994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 02F5
        gbc.setState(0x20f1, 0x4d66, 0x2c20, 0xa8ab, 0x12f4, 0xcf7e, 0x0, 0x1);
        gbc.writeMem(0x20f1, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x4d66, gbc.sp());
        EXPECT(0x20f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 02F6
        gbc.setState(0x7495, 0xe15, 0x9970, 0xc279, 0x71b1, 0x5e20, 0x1, 0x1);
        gbc.writeMem(0x7495, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe15, gbc.sp());
        EXPECT(0x7497, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 02F8
        gbc.setState(0x62ea, 0xaf, 0x8410, 0x6af7, 0xd7dd, 0xe761, 0x1, 0x0);
        gbc.writeMem(0x62ea, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xaf, gbc.sp());
        EXPECT(0x62ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 02F9
        gbc.setState(0x648b, 0xf37b, 0xb750, 0x691d, 0xa1fc, 0xeb, 0x1, 0x0);
        gbc.writeMem(0x648b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf37b, gbc.sp());
        EXPECT(0x648d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 02FA
        gbc.setState(0x147, 0x4f87, 0xe510, 0x3235, 0xe27b, 0xc81f, 0x0, 0x1);
        gbc.writeMem(0x147, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4f87, gbc.sp());
        EXPECT(0x149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 02FB
        gbc.setState(0x8f42, 0xf602, 0x42b0, 0x7905, 0xfff0, 0x7c76, 0x1, 0x1);
        gbc.writeMem(0x8f42, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf602, gbc.sp());
        EXPECT(0x8f44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f42));
        EXPECT(0xa4, gbc.readMem(0x8f43));
        // CB A4 02FC
        gbc.setState(0x6862, 0x7966, 0xd1a0, 0x1557, 0xf317, 0x32ab, 0x1, 0x1);
        gbc.writeMem(0x6862, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7966, gbc.sp());
        EXPECT(0x6864, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 02FD
        gbc.setState(0xbfc9, 0x7294, 0x8c40, 0xb61b, 0x7c8, 0x48c7, 0x1, 0x0);
        gbc.writeMem(0xbfc9, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7294, gbc.sp());
        EXPECT(0xbfcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfc9));
        EXPECT(0xa4, gbc.readMem(0xbfca));
        // CB A4 02FE
        gbc.setState(0x363, 0xd55d, 0x4390, 0x4d49, 0xe91a, 0xc82d, 0x0, 0x0);
        gbc.writeMem(0x363, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd55d, gbc.sp());
        EXPECT(0x365, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0300
        gbc.setState(0xae64, 0x9aa, 0x8030, 0xe17b, 0xf6ea, 0x2a50, 0x0, 0x1);
        gbc.writeMem(0xae64, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9aa, gbc.sp());
        EXPECT(0xae66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae64));
        EXPECT(0xa4, gbc.readMem(0xae65));
        // CB A4 0301
        gbc.setState(0xa666, 0xf878, 0x2af0, 0x37fb, 0xd230, 0x2a91, 0x1, 0x0);
        gbc.writeMem(0xa666, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf878, gbc.sp());
        EXPECT(0xa668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa666));
        EXPECT(0xa4, gbc.readMem(0xa667));
        // CB A4 0302
        gbc.setState(0xafba, 0xeb88, 0xa460, 0x5ac9, 0x5035, 0xc54, 0x1, 0x1);
        gbc.writeMem(0xafba, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xeb88, gbc.sp());
        EXPECT(0xafbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafba));
        EXPECT(0xa4, gbc.readMem(0xafbb));
        // CB A4 0303
        gbc.setState(0x73c8, 0xd163, 0x2a80, 0x67c9, 0xf1ba, 0x1e77, 0x0, 0x1);
        gbc.writeMem(0x73c8, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd163, gbc.sp());
        EXPECT(0x73ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0304
        gbc.setState(0xd567, 0xd521, 0xdb40, 0x4e9a, 0xd1b7, 0xb3f2, 0x0, 0x0);
        gbc.writeMem(0xd567, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd521, gbc.sp());
        EXPECT(0xd569, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd567));
        EXPECT(0xa4, gbc.readMem(0xd568));
        // CB A4 0305
        gbc.setState(0x49e0, 0x7824, 0xa510, 0xf74a, 0x8665, 0xd940, 0x0, 0x1);
        gbc.writeMem(0x49e0, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7824, gbc.sp());
        EXPECT(0x49e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0306
        gbc.setState(0xed23, 0x8f23, 0x8570, 0xf5e3, 0xf460, 0x7e4c, 0x1, 0x1);
        gbc.writeMem(0xed23, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8f23, gbc.sp());
        EXPECT(0xed25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed23));
        EXPECT(0xa4, gbc.readMem(0xed24));
        // CB A4 0307
        gbc.setState(0xc387, 0xfe1a, 0x6cd0, 0x4d17, 0x570d, 0x4a78, 0x0, 0x1);
        gbc.writeMem(0xc387, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xfe1a, gbc.sp());
        EXPECT(0xc389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc387));
        EXPECT(0xa4, gbc.readMem(0xc388));
        // CB A4 0308
        gbc.setState(0x1122, 0xd63c, 0x7da0, 0x2ce3, 0xdf8a, 0xcc4d, 0x1, 0x1);
        gbc.writeMem(0x1122, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd63c, gbc.sp());
        EXPECT(0x1124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0309
        gbc.setState(0xaa1f, 0x3c66, 0xea50, 0xd809, 0xd96, 0x9877, 0x0, 0x0);
        gbc.writeMem(0xaa1f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3c66, gbc.sp());
        EXPECT(0xaa21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa1f));
        EXPECT(0xa4, gbc.readMem(0xaa20));
        // CB A4 030B
        gbc.setState(0x48d3, 0xd261, 0xb160, 0x4d1f, 0x43a3, 0x8c9b, 0x0, 0x0);
        gbc.writeMem(0x48d3, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd261, gbc.sp());
        EXPECT(0x48d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 030C
        gbc.setState(0x69b3, 0xf32a, 0x1710, 0x6dc9, 0x4a55, 0xb4d0, 0x0, 0x1);
        gbc.writeMem(0x69b3, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf32a, gbc.sp());
        EXPECT(0x69b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 030D
        gbc.setState(0x9e79, 0xccca, 0x58d0, 0xeccd, 0xc6cd, 0xa625, 0x1, 0x0);
        gbc.writeMem(0x9e79, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xccca, gbc.sp());
        EXPECT(0x9e7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e79));
        EXPECT(0xa4, gbc.readMem(0x9e7a));
        // CB A4 030E
        gbc.setState(0x4b42, 0xaf41, 0x9a00, 0x4243, 0x17c1, 0xd33c, 0x1, 0x1);
        gbc.writeMem(0x4b42, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xaf41, gbc.sp());
        EXPECT(0x4b44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 030F
        gbc.setState(0x4005, 0xcead, 0xeb0, 0xa159, 0x88d0, 0xd22c, 0x0, 0x1);
        gbc.writeMem(0x4005, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xcead, gbc.sp());
        EXPECT(0x4007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0310
        gbc.setState(0xcc42, 0xe619, 0x3910, 0x45fe, 0x3ee6, 0x7367, 0x0, 0x0);
        gbc.writeMem(0xcc42, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe619, gbc.sp());
        EXPECT(0xcc44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc42));
        EXPECT(0xa4, gbc.readMem(0xcc43));
        // CB A4 0311
        gbc.setState(0xcc7d, 0xde51, 0x69c0, 0x8f8d, 0x4a7d, 0xbb2, 0x0, 0x1);
        gbc.writeMem(0xcc7d, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xde51, gbc.sp());
        EXPECT(0xcc7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc7d));
        EXPECT(0xa4, gbc.readMem(0xcc7e));
        // CB A4 0312
        gbc.setState(0x81f2, 0x5dde, 0x1900, 0xd7b7, 0x1b9e, 0x6819, 0x1, 0x0);
        gbc.writeMem(0x81f2, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5dde, gbc.sp());
        EXPECT(0x81f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81f2));
        EXPECT(0xa4, gbc.readMem(0x81f3));
        // CB A4 0313
        gbc.setState(0x64f6, 0x7010, 0x2340, 0xb7ba, 0x7e42, 0xf234, 0x1, 0x0);
        gbc.writeMem(0x64f6, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7010, gbc.sp());
        EXPECT(0x64f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0314
        gbc.setState(0x9150, 0x66c9, 0x3c0, 0x49f, 0xcdb, 0xdf8b, 0x1, 0x1);
        gbc.writeMem(0x9150, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x66c9, gbc.sp());
        EXPECT(0x9152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9150));
        EXPECT(0xa4, gbc.readMem(0x9151));
        // CB A4 0315
        gbc.setState(0xe992, 0x8321, 0xb400, 0x11d0, 0x511d, 0x5c97, 0x1, 0x1);
        gbc.writeMem(0xe992, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8321, gbc.sp());
        EXPECT(0xe994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe992));
        EXPECT(0xa4, gbc.readMem(0xe993));
        // CB A4 0316
        gbc.setState(0xef58, 0x6125, 0xfb90, 0x6e2a, 0x9e27, 0xbf1f, 0x0, 0x0);
        gbc.writeMem(0xef58, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6125, gbc.sp());
        EXPECT(0xef5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef58));
        EXPECT(0xa4, gbc.readMem(0xef59));
        // CB A4 0317
        gbc.setState(0xc160, 0x96c1, 0x8430, 0xde73, 0x1099, 0xb62d, 0x0, 0x0);
        gbc.writeMem(0xc160, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x96c1, gbc.sp());
        EXPECT(0xc162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc160));
        EXPECT(0xa4, gbc.readMem(0xc161));
        // CB A4 0318
        gbc.setState(0xa721, 0x5b87, 0xe430, 0x1ca6, 0xfeff, 0x100, 0x1, 0x0);
        gbc.writeMem(0xa721, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5b87, gbc.sp());
        EXPECT(0xa723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa721));
        EXPECT(0xa4, gbc.readMem(0xa722));
        // CB A4 0319
        gbc.setState(0xb51a, 0xb4b1, 0x4930, 0x2518, 0xf347, 0x3a3b, 0x0, 0x1);
        gbc.writeMem(0xb51a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb4b1, gbc.sp());
        EXPECT(0xb51c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb51a));
        EXPECT(0xa4, gbc.readMem(0xb51b));
        // CB A4 031A
        gbc.setState(0x971b, 0xaab5, 0x39e0, 0x78a, 0x3fd5, 0x92d1, 0x0, 0x1);
        gbc.writeMem(0x971b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xaab5, gbc.sp());
        EXPECT(0x971d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x971b));
        EXPECT(0xa4, gbc.readMem(0x971c));
        // CB A4 031B
        gbc.setState(0x70ff, 0x9b7f, 0x6150, 0x6573, 0x62c9, 0x5c71, 0x0, 0x0);
        gbc.writeMem(0x70ff, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9b7f, gbc.sp());
        EXPECT(0x7101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 031C
        gbc.setState(0x516d, 0xfd49, 0xe000, 0x19d9, 0xd446, 0xbd42, 0x0, 0x1);
        gbc.writeMem(0x516d, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xfd49, gbc.sp());
        EXPECT(0x516f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 031D
        gbc.setState(0xc4da, 0x2341, 0x5ce0, 0x2c72, 0xc374, 0x91ce, 0x1, 0x1);
        gbc.writeMem(0xc4da, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2341, gbc.sp());
        EXPECT(0xc4dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4da));
        EXPECT(0xa4, gbc.readMem(0xc4db));
        // CB A4 031E
        gbc.setState(0x92ea, 0xe83f, 0x9d30, 0xafbc, 0x6f4a, 0x86ab, 0x1, 0x0);
        gbc.writeMem(0x92ea, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe83f, gbc.sp());
        EXPECT(0x92ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ea));
        EXPECT(0xa4, gbc.readMem(0x92eb));
        // CB A4 031F
        gbc.setState(0x611e, 0xb024, 0xbc90, 0x9871, 0x9424, 0x823c, 0x1, 0x1);
        gbc.writeMem(0x611e, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb024, gbc.sp());
        EXPECT(0x6120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0320
        gbc.setState(0x3ccc, 0xc5f5, 0x7e90, 0x8c1c, 0xaf94, 0x7f34, 0x1, 0x1);
        gbc.writeMem(0x3ccc, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc5f5, gbc.sp());
        EXPECT(0x3cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0321
        gbc.setState(0x6035, 0x5c3, 0x6dd0, 0xf356, 0xdd30, 0x1ecf, 0x1, 0x1);
        gbc.writeMem(0x6035, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5c3, gbc.sp());
        EXPECT(0x6037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0322
        gbc.setState(0x1df4, 0x3b88, 0x25b0, 0xb5f2, 0xbe4, 0xbf12, 0x1, 0x1);
        gbc.writeMem(0x1df4, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3b88, gbc.sp());
        EXPECT(0x1df6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0323
        gbc.setState(0xe9aa, 0x614b, 0xe710, 0x4b2c, 0x521, 0x22d1, 0x0, 0x1);
        gbc.writeMem(0xe9aa, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x614b, gbc.sp());
        EXPECT(0xe9ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9aa));
        EXPECT(0xa4, gbc.readMem(0xe9ab));
        // CB A4 0324
        gbc.setState(0x5edf, 0x372f, 0xd820, 0x5fa4, 0xba5a, 0xab0, 0x0, 0x0);
        gbc.writeMem(0x5edf, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x372f, gbc.sp());
        EXPECT(0x5ee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0325
        gbc.setState(0x3579, 0xfb0f, 0x4540, 0x9014, 0x51fa, 0x83c6, 0x1, 0x0);
        gbc.writeMem(0x3579, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xfb0f, gbc.sp());
        EXPECT(0x357b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0327
        gbc.setState(0x440b, 0xaae, 0x4400, 0xb377, 0x2725, 0xd3b3, 0x0, 0x0);
        gbc.writeMem(0x440b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xaae, gbc.sp());
        EXPECT(0x440d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0328
        gbc.setState(0x843a, 0xb929, 0x7f80, 0xdfd8, 0xc197, 0xa9ca, 0x0, 0x1);
        gbc.writeMem(0x843a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb929, gbc.sp());
        EXPECT(0x843c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x843a));
        EXPECT(0xa4, gbc.readMem(0x843b));
        // CB A4 0329
        gbc.setState(0x2d46, 0xea9c, 0x7500, 0xe216, 0xee6c, 0xcb15, 0x0, 0x1);
        gbc.writeMem(0x2d46, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xea9c, gbc.sp());
        EXPECT(0x2d48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 032A
        gbc.setState(0x3a3, 0xf461, 0xe5c0, 0xfb37, 0xecf0, 0x283e, 0x0, 0x0);
        gbc.writeMem(0x3a3, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf461, gbc.sp());
        EXPECT(0x3a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 032B
        gbc.setState(0xa68, 0xd7e3, 0x3570, 0xf86c, 0xde15, 0x8130, 0x0, 0x0);
        gbc.writeMem(0xa68, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd7e3, gbc.sp());
        EXPECT(0xa6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 032D
        gbc.setState(0xaf57, 0xd5b7, 0xa550, 0xf5db, 0xc56f, 0xfa5d, 0x0, 0x1);
        gbc.writeMem(0xaf57, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd5b7, gbc.sp());
        EXPECT(0xaf59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf57));
        EXPECT(0xa4, gbc.readMem(0xaf58));
        // CB A4 032E
        gbc.setState(0xe114, 0x1a8c, 0xc020, 0x1ccd, 0x3fa4, 0x7da1, 0x0, 0x1);
        gbc.writeMem(0xe114, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1a8c, gbc.sp());
        EXPECT(0xe116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe114));
        EXPECT(0xa4, gbc.readMem(0xe115));
        // CB A4 032F
        gbc.setState(0xa3fc, 0x6c1f, 0x76a0, 0x8f72, 0xe13, 0x5aa4, 0x1, 0x1);
        gbc.writeMem(0xa3fc, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6c1f, gbc.sp());
        EXPECT(0xa3fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3fc));
        EXPECT(0xa4, gbc.readMem(0xa3fd));
        // CB A4 0330
        gbc.setState(0xdd38, 0x31fa, 0x8b50, 0x5039, 0x556a, 0xa8b8, 0x0, 0x1);
        gbc.writeMem(0xdd38, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x31fa, gbc.sp());
        EXPECT(0xdd3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd38));
        EXPECT(0xa4, gbc.readMem(0xdd39));
        // CB A4 0332
        gbc.setState(0xe1d7, 0x4f2a, 0xa8d0, 0xe578, 0x8727, 0x26a4, 0x1, 0x1);
        gbc.writeMem(0xe1d7, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4f2a, gbc.sp());
        EXPECT(0xe1d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1d7));
        EXPECT(0xa4, gbc.readMem(0xe1d8));
        // CB A4 0333
        gbc.setState(0xa92e, 0x9e82, 0x53e0, 0xacef, 0x1d20, 0x24d7, 0x1, 0x0);
        gbc.writeMem(0xa92e, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9e82, gbc.sp());
        EXPECT(0xa930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa92e));
        EXPECT(0xa4, gbc.readMem(0xa92f));
        // CB A4 0334
        gbc.setState(0xbc04, 0xe047, 0xf020, 0x58d5, 0xd60d, 0x1945, 0x0, 0x0);
        gbc.writeMem(0xbc04, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe047, gbc.sp());
        EXPECT(0xbc06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc04));
        EXPECT(0xa4, gbc.readMem(0xbc05));
        // CB A4 0335
        gbc.setState(0x9dd7, 0xdced, 0xc030, 0xeba4, 0x2fc6, 0x7ba8, 0x0, 0x1);
        gbc.writeMem(0x9dd7, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xdced, gbc.sp());
        EXPECT(0x9dd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dd7));
        EXPECT(0xa4, gbc.readMem(0x9dd8));
        // CB A4 0336
        gbc.setState(0x4552, 0x6e33, 0x6010, 0x33f, 0xd0d, 0xcf13, 0x1, 0x0);
        gbc.writeMem(0x4552, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6e33, gbc.sp());
        EXPECT(0x4554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0337
        gbc.setState(0x3ea8, 0xeb04, 0xf080, 0x42f1, 0x499c, 0x4583, 0x1, 0x0);
        gbc.writeMem(0x3ea8, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xeb04, gbc.sp());
        EXPECT(0x3eaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0338
        gbc.setState(0x6b17, 0x48f1, 0xe2f0, 0x4001, 0xd65, 0xaeb4, 0x1, 0x1);
        gbc.writeMem(0x6b17, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x48f1, gbc.sp());
        EXPECT(0x6b19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0339
        gbc.setState(0xa26e, 0x7e39, 0xa280, 0x7554, 0x659e, 0x4e0e, 0x0, 0x0);
        gbc.writeMem(0xa26e, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7e39, gbc.sp());
        EXPECT(0xa270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa26e));
        EXPECT(0xa4, gbc.readMem(0xa26f));
        // CB A4 033A
        gbc.setState(0xd556, 0x8be3, 0x4810, 0x236a, 0xfd6a, 0x715b, 0x1, 0x1);
        gbc.writeMem(0xd556, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8be3, gbc.sp());
        EXPECT(0xd558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd556));
        EXPECT(0xa4, gbc.readMem(0xd557));
        // CB A4 033B
        gbc.setState(0x3efa, 0x6da6, 0x1a70, 0x4bf7, 0x2307, 0x7f04, 0x0, 0x0);
        gbc.writeMem(0x3efa, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6da6, gbc.sp());
        EXPECT(0x3efc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 033C
        gbc.setState(0x499d, 0x9e08, 0xe830, 0xf7d7, 0x8f8c, 0x823a, 0x1, 0x0);
        gbc.writeMem(0x499d, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9e08, gbc.sp());
        EXPECT(0x499f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 033D
        gbc.setState(0x378, 0x45c7, 0x1db0, 0x7e87, 0xcff, 0x2ee4, 0x0, 0x0);
        gbc.writeMem(0x378, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x45c7, gbc.sp());
        EXPECT(0x37a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 033E
        gbc.setState(0xb903, 0x8c7c, 0x5280, 0xe8e6, 0x872d, 0xd335, 0x0, 0x0);
        gbc.writeMem(0xb903, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8c7c, gbc.sp());
        EXPECT(0xb905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb903));
        EXPECT(0xa4, gbc.readMem(0xb904));
        // CB A4 033F
        gbc.setState(0x536c, 0xd5a1, 0xc0c0, 0x770e, 0x462d, 0x686e, 0x1, 0x1);
        gbc.writeMem(0x536c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd5a1, gbc.sp());
        EXPECT(0x536e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0340
        gbc.setState(0x3218, 0x4f86, 0x6480, 0x2326, 0xa163, 0x3c1e, 0x1, 0x1);
        gbc.writeMem(0x3218, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4f86, gbc.sp());
        EXPECT(0x321a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0341
        gbc.setState(0x7a89, 0x3fc, 0x48d0, 0xbf06, 0xd70, 0xd9be, 0x1, 0x0);
        gbc.writeMem(0x7a89, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3fc, gbc.sp());
        EXPECT(0x7a8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0342
        gbc.setState(0x9db3, 0xee40, 0x7200, 0xe23a, 0x4044, 0xb7a1, 0x1, 0x0);
        gbc.writeMem(0x9db3, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xee40, gbc.sp());
        EXPECT(0x9db5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9db3));
        EXPECT(0xa4, gbc.readMem(0x9db4));
        // CB A4 0343
        gbc.setState(0x5fdf, 0xbf0d, 0xb660, 0x39b6, 0x1ee9, 0xd23c, 0x0, 0x1);
        gbc.writeMem(0x5fdf, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xbf0d, gbc.sp());
        EXPECT(0x5fe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0344
        gbc.setState(0xb26c, 0x9b82, 0x28d0, 0xb80, 0x3d7a, 0xd4fc, 0x1, 0x0);
        gbc.writeMem(0xb26c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9b82, gbc.sp());
        EXPECT(0xb26e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb26c));
        EXPECT(0xa4, gbc.readMem(0xb26d));
        // CB A4 0345
        gbc.setState(0xa323, 0xb9d0, 0x44f0, 0xb1cb, 0xee33, 0x685a, 0x0, 0x1);
        gbc.writeMem(0xa323, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb9d0, gbc.sp());
        EXPECT(0xa325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa323));
        EXPECT(0xa4, gbc.readMem(0xa324));
        // CB A4 0346
        gbc.setState(0x5680, 0x31cf, 0xa0d0, 0x761a, 0xce3e, 0x59fe, 0x0, 0x1);
        gbc.writeMem(0x5680, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x31cf, gbc.sp());
        EXPECT(0x5682, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0347
        gbc.setState(0xdf, 0x2e29, 0x6050, 0x1799, 0x3c7b, 0x4165, 0x0, 0x1);
        gbc.writeMem(0xdf, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2e29, gbc.sp());
        EXPECT(0xe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0348
        gbc.setState(0x8f7f, 0x50e6, 0xec80, 0x5d3c, 0x5393, 0x4bcd, 0x1, 0x1);
        gbc.writeMem(0x8f7f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x50e6, gbc.sp());
        EXPECT(0x8f81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f7f));
        EXPECT(0xa4, gbc.readMem(0x8f80));
        // CB A4 0349
        gbc.setState(0x5ea9, 0xf1e1, 0x9540, 0x5bf, 0x67b4, 0x6843, 0x1, 0x1);
        gbc.writeMem(0x5ea9, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf1e1, gbc.sp());
        EXPECT(0x5eab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 034A
        gbc.setState(0x3317, 0x9be8, 0x8230, 0xab3c, 0xdf8d, 0x5e38, 0x1, 0x1);
        gbc.writeMem(0x3317, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9be8, gbc.sp());
        EXPECT(0x3319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 034B
        gbc.setState(0xb36c, 0x3a53, 0xfd10, 0xfff5, 0xb8f7, 0x71af, 0x0, 0x1);
        gbc.writeMem(0xb36c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x3a53, gbc.sp());
        EXPECT(0xb36e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb36c));
        EXPECT(0xa4, gbc.readMem(0xb36d));
        // CB A4 034C
        gbc.setState(0xd204, 0xf35f, 0xd280, 0x886, 0xfa33, 0xc64a, 0x1, 0x1);
        gbc.writeMem(0xd204, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf35f, gbc.sp());
        EXPECT(0xd206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd204));
        EXPECT(0xa4, gbc.readMem(0xd205));
        // CB A4 034D
        gbc.setState(0xc141, 0x9dd0, 0xb20, 0x40e4, 0xcdd5, 0x1d83, 0x1, 0x1);
        gbc.writeMem(0xc141, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9dd0, gbc.sp());
        EXPECT(0xc143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc141));
        EXPECT(0xa4, gbc.readMem(0xc142));
        // CB A4 034E
        gbc.setState(0xd810, 0xdb7b, 0x9c60, 0xc7de, 0xf890, 0x149d, 0x0, 0x1);
        gbc.writeMem(0xd810, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xdb7b, gbc.sp());
        EXPECT(0xd812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd810));
        EXPECT(0xa4, gbc.readMem(0xd811));
        // CB A4 034F
        gbc.setState(0x7ab2, 0x9868, 0x7260, 0x3587, 0xdc10, 0x9355, 0x1, 0x1);
        gbc.writeMem(0x7ab2, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9868, gbc.sp());
        EXPECT(0x7ab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0350
        gbc.setState(0x8e5e, 0xb426, 0xd1c0, 0xf8c3, 0xd791, 0x2ce1, 0x0, 0x0);
        gbc.writeMem(0x8e5e, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb426, gbc.sp());
        EXPECT(0x8e60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e5e));
        EXPECT(0xa4, gbc.readMem(0x8e5f));
        // CB A4 0352
        gbc.setState(0x6690, 0xeef4, 0x1850, 0x5b5a, 0x161d, 0xbff9, 0x0, 0x1);
        gbc.writeMem(0x6690, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xeef4, gbc.sp());
        EXPECT(0x6692, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0353
        gbc.setState(0x611b, 0xb264, 0x1160, 0x813a, 0xe4bc, 0xe91f, 0x0, 0x0);
        gbc.writeMem(0x611b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb264, gbc.sp());
        EXPECT(0x611d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0354
        gbc.setState(0xe3b0, 0xc76a, 0xbd10, 0x9fdf, 0x4c2c, 0xe788, 0x0, 0x1);
        gbc.writeMem(0xe3b0, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc76a, gbc.sp());
        EXPECT(0xe3b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3b0));
        EXPECT(0xa4, gbc.readMem(0xe3b1));
        // CB A4 0355
        gbc.setState(0x8638, 0x47f5, 0x4bb0, 0x9f26, 0x1f3d, 0x256b, 0x1, 0x0);
        gbc.writeMem(0x8638, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x47f5, gbc.sp());
        EXPECT(0x863a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8638));
        EXPECT(0xa4, gbc.readMem(0x8639));
        // CB A4 0356
        gbc.setState(0xbc1a, 0xe669, 0x790, 0xa114, 0x8093, 0xa36c, 0x1, 0x1);
        gbc.writeMem(0xbc1a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe669, gbc.sp());
        EXPECT(0xbc1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc1a));
        EXPECT(0xa4, gbc.readMem(0xbc1b));
        // CB A4 0357
        gbc.setState(0xea77, 0x5153, 0x8000, 0xdb5c, 0xfad3, 0x9b88, 0x1, 0x1);
        gbc.writeMem(0xea77, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5153, gbc.sp());
        EXPECT(0xea79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea77));
        EXPECT(0xa4, gbc.readMem(0xea78));
        // CB A4 0358
        gbc.setState(0xb862, 0xb8d5, 0x81a0, 0x8e91, 0xd5f8, 0xf37a, 0x1, 0x1);
        gbc.writeMem(0xb862, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb8d5, gbc.sp());
        EXPECT(0xb864, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb862));
        EXPECT(0xa4, gbc.readMem(0xb863));
        // CB A4 0359
        gbc.setState(0x2a49, 0x20a2, 0x5450, 0x8d27, 0xae73, 0xd34f, 0x0, 0x0);
        gbc.writeMem(0x2a49, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x20a2, gbc.sp());
        EXPECT(0x2a4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 035A
        gbc.setState(0x64, 0x2b35, 0x3ed0, 0x9674, 0x2f7e, 0x60c8, 0x0, 0x1);
        gbc.writeMem(0x64, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2b35, gbc.sp());
        EXPECT(0x66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 035B
        gbc.setState(0x3910, 0xb995, 0x3480, 0xa81e, 0x7456, 0x3a8e, 0x0, 0x1);
        gbc.writeMem(0x3910, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb995, gbc.sp());
        EXPECT(0x3912, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 035C
        gbc.setState(0x3edb, 0xd630, 0x430, 0xbbcb, 0x843c, 0x125e, 0x0, 0x1);
        gbc.writeMem(0x3edb, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd630, gbc.sp());
        EXPECT(0x3edd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 035D
        gbc.setState(0x59d3, 0x4623, 0x8f90, 0x547a, 0x29f2, 0x1200, 0x1, 0x1);
        gbc.writeMem(0x59d3, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4623, gbc.sp());
        EXPECT(0x59d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 035E
        gbc.setState(0xcea2, 0x8638, 0x9bf0, 0x2c9f, 0x7180, 0x2c1f, 0x1, 0x1);
        gbc.writeMem(0xcea2, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8638, gbc.sp());
        EXPECT(0xcea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcea2));
        EXPECT(0xa4, gbc.readMem(0xcea3));
        // CB A4 035F
        gbc.setState(0x775d, 0xc496, 0xb310, 0x704a, 0x6a63, 0x3e82, 0x1, 0x1);
        gbc.writeMem(0x775d, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc496, gbc.sp());
        EXPECT(0x775f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0360
        gbc.setState(0x6db0, 0x3f04, 0xaa50, 0x9ed5, 0x48bd, 0x4cb2, 0x1, 0x1);
        gbc.writeMem(0x6db0, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3f04, gbc.sp());
        EXPECT(0x6db2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0361
        gbc.setState(0xd606, 0x5139, 0x5b20, 0x9189, 0xf5e9, 0x8d3d, 0x0, 0x0);
        gbc.writeMem(0xd606, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5139, gbc.sp());
        EXPECT(0xd608, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd606));
        EXPECT(0xa4, gbc.readMem(0xd607));
        // CB A4 0362
        gbc.setState(0xddb2, 0xde4b, 0x5200, 0x4697, 0x5f73, 0x29df, 0x0, 0x0);
        gbc.writeMem(0xddb2, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xde4b, gbc.sp());
        EXPECT(0xddb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddb2));
        EXPECT(0xa4, gbc.readMem(0xddb3));
        // CB A4 0363
        gbc.setState(0x625c, 0xab1f, 0x82e0, 0x414a, 0xe48d, 0x4186, 0x0, 0x1);
        gbc.writeMem(0x625c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xab1f, gbc.sp());
        EXPECT(0x625e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0364
        gbc.setState(0x5733, 0x27ea, 0xa000, 0x5c0d, 0xeaa6, 0x9f32, 0x0, 0x1);
        gbc.writeMem(0x5733, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x27ea, gbc.sp());
        EXPECT(0x5735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0366
        gbc.setState(0x584c, 0x8fda, 0xdba0, 0xcab0, 0x29e7, 0x97e8, 0x1, 0x0);
        gbc.writeMem(0x584c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8fda, gbc.sp());
        EXPECT(0x584e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0367
        gbc.setState(0x2afb, 0x2021, 0x3860, 0xfc99, 0x3f35, 0xf9bf, 0x1, 0x1);
        gbc.writeMem(0x2afb, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2021, gbc.sp());
        EXPECT(0x2afd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0368
        gbc.setState(0x9322, 0x8ead, 0xf110, 0x56c3, 0x99ca, 0xccfc, 0x0, 0x1);
        gbc.writeMem(0x9322, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8ead, gbc.sp());
        EXPECT(0x9324, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9322));
        EXPECT(0xa4, gbc.readMem(0x9323));
        // CB A4 0369
        gbc.setState(0xee5b, 0xa553, 0x7780, 0xde22, 0x6cc, 0xae90, 0x1, 0x0);
        gbc.writeMem(0xee5b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa553, gbc.sp());
        EXPECT(0xee5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee5b));
        EXPECT(0xa4, gbc.readMem(0xee5c));
        // CB A4 036A
        gbc.setState(0xedbf, 0x49d5, 0x1280, 0x23d7, 0x575c, 0xda1e, 0x1, 0x0);
        gbc.writeMem(0xedbf, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x49d5, gbc.sp());
        EXPECT(0xedc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedbf));
        EXPECT(0xa4, gbc.readMem(0xedc0));
        // CB A4 036B
        gbc.setState(0x2699, 0x14ea, 0x2ec0, 0x9cd6, 0x6f0e, 0xca0c, 0x0, 0x1);
        gbc.writeMem(0x2699, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x14ea, gbc.sp());
        EXPECT(0x269b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 036C
        gbc.setState(0xf08, 0x838, 0x5e10, 0x8f67, 0x90d, 0x84c, 0x1, 0x0);
        gbc.writeMem(0xf08, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x838, gbc.sp());
        EXPECT(0xf0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 036D
        gbc.setState(0x1d15, 0xf060, 0xe5b0, 0x36a2, 0x9610, 0x2013, 0x0, 0x1);
        gbc.writeMem(0x1d15, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf060, gbc.sp());
        EXPECT(0x1d17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0370
        gbc.setState(0x2a1a, 0x883b, 0x660, 0x348b, 0x7660, 0x3af8, 0x1, 0x1);
        gbc.writeMem(0x2a1a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x883b, gbc.sp());
        EXPECT(0x2a1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0372
        gbc.setState(0xeef4, 0x4410, 0x8220, 0xe361, 0x9e0d, 0xab0b, 0x0, 0x1);
        gbc.writeMem(0xeef4, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4410, gbc.sp());
        EXPECT(0xeef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeef4));
        EXPECT(0xa4, gbc.readMem(0xeef5));
        // CB A4 0373
        gbc.setState(0x5eb4, 0x1cfc, 0x72c0, 0xfcf6, 0x74fb, 0x2a71, 0x0, 0x1);
        gbc.writeMem(0x5eb4, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1cfc, gbc.sp());
        EXPECT(0x5eb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0374
        gbc.setState(0x2bf1, 0x1248, 0xf320, 0x338d, 0xb572, 0x8ef0, 0x0, 0x0);
        gbc.writeMem(0x2bf1, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1248, gbc.sp());
        EXPECT(0x2bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0375
        gbc.setState(0xd9fd, 0x9929, 0x85b0, 0x3f01, 0xcc20, 0xcba3, 0x1, 0x0);
        gbc.writeMem(0xd9fd, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9929, gbc.sp());
        EXPECT(0xd9ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9fd));
        EXPECT(0xa4, gbc.readMem(0xd9fe));
        // CB A4 0376
        gbc.setState(0x358d, 0xb486, 0xf520, 0xd151, 0xc84d, 0xef72, 0x1, 0x1);
        gbc.writeMem(0x358d, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb486, gbc.sp());
        EXPECT(0x358f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0377
        gbc.setState(0xc126, 0x8365, 0xb7a0, 0x99f, 0xcb7, 0xfc21, 0x1, 0x0);
        gbc.writeMem(0xc126, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8365, gbc.sp());
        EXPECT(0xc128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc126));
        EXPECT(0xa4, gbc.readMem(0xc127));
        // CB A4 0378
        gbc.setState(0xb153, 0xe9d2, 0x870, 0x33ed, 0x50a, 0xbc5c, 0x1, 0x0);
        gbc.writeMem(0xb153, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe9d2, gbc.sp());
        EXPECT(0xb155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb153));
        EXPECT(0xa4, gbc.readMem(0xb154));
        // CB A4 0379
        gbc.setState(0x1fce, 0xfbf7, 0xf720, 0xb881, 0xd863, 0x8445, 0x0, 0x1);
        gbc.writeMem(0x1fce, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xfbf7, gbc.sp());
        EXPECT(0x1fd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 037A
        gbc.setState(0xf4c, 0x6d4e, 0x6220, 0x27dd, 0x2006, 0x24e5, 0x0, 0x0);
        gbc.writeMem(0xf4c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6d4e, gbc.sp());
        EXPECT(0xf4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 037B
        gbc.setState(0x5a62, 0x6e18, 0xe040, 0x9d2b, 0xf163, 0xa899, 0x0, 0x1);
        gbc.writeMem(0x5a62, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6e18, gbc.sp());
        EXPECT(0x5a64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 037D
        gbc.setState(0xae6f, 0xe152, 0x4570, 0x5d67, 0x13f9, 0x9a31, 0x0, 0x0);
        gbc.writeMem(0xae6f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe152, gbc.sp());
        EXPECT(0xae71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae6f));
        EXPECT(0xa4, gbc.readMem(0xae70));
        // CB A4 037E
        gbc.setState(0xd81d, 0x215c, 0x7840, 0x612b, 0xc7d2, 0x3716, 0x0, 0x0);
        gbc.writeMem(0xd81d, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x215c, gbc.sp());
        EXPECT(0xd81f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd81d));
        EXPECT(0xa4, gbc.readMem(0xd81e));
        // CB A4 037F
        gbc.setState(0x5c2d, 0xbf71, 0xabb0, 0x4af0, 0x25d7, 0x5705, 0x1, 0x1);
        gbc.writeMem(0x5c2d, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xbf71, gbc.sp());
        EXPECT(0x5c2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0380
        gbc.setState(0xdefc, 0x3440, 0x3fc0, 0x9db4, 0x9101, 0x8948, 0x0, 0x0);
        gbc.writeMem(0xdefc, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3440, gbc.sp());
        EXPECT(0xdefe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdefc));
        EXPECT(0xa4, gbc.readMem(0xdefd));
        // CB A4 0381
        gbc.setState(0x6318, 0x7afa, 0x4f10, 0x59d1, 0x7b11, 0xf089, 0x1, 0x0);
        gbc.writeMem(0x6318, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7afa, gbc.sp());
        EXPECT(0x631a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0382
        gbc.setState(0x5b30, 0xabea, 0x6ea0, 0x6cae, 0xf46e, 0xf2a9, 0x0, 0x0);
        gbc.writeMem(0x5b30, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xabea, gbc.sp());
        EXPECT(0x5b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0383
        gbc.setState(0xa05e, 0x899e, 0x49f0, 0x83bc, 0xa468, 0xf009, 0x1, 0x0);
        gbc.writeMem(0xa05e, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x899e, gbc.sp());
        EXPECT(0xa060, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa05e));
        EXPECT(0xa4, gbc.readMem(0xa05f));
        // CB A4 0384
        gbc.setState(0x343d, 0x2cf5, 0x2b30, 0xe71f, 0xecef, 0xb18b, 0x0, 0x0);
        gbc.writeMem(0x343d, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2cf5, gbc.sp());
        EXPECT(0x343f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0385
        gbc.setState(0x5da0, 0xf27, 0xc7a0, 0x4291, 0xacbd, 0x454c, 0x1, 0x0);
        gbc.writeMem(0x5da0, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf27, gbc.sp());
        EXPECT(0x5da2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0386
        gbc.setState(0x81ec, 0xf219, 0x78d0, 0x56f, 0xebc8, 0x1346, 0x0, 0x0);
        gbc.writeMem(0x81ec, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf219, gbc.sp());
        EXPECT(0x81ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81ec));
        EXPECT(0xa4, gbc.readMem(0x81ed));
        // CB A4 0388
        gbc.setState(0x4be6, 0xe97a, 0xbf60, 0xe013, 0xd8ae, 0xbc74, 0x1, 0x0);
        gbc.writeMem(0x4be6, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe97a, gbc.sp());
        EXPECT(0x4be8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0389
        gbc.setState(0x1287, 0xd7bf, 0x4750, 0x99c8, 0xe3c1, 0x6564, 0x0, 0x0);
        gbc.writeMem(0x1287, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd7bf, gbc.sp());
        EXPECT(0x1289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 038A
        gbc.setState(0x30e1, 0xf1be, 0xd430, 0x9db3, 0xb3a5, 0xab7a, 0x0, 0x1);
        gbc.writeMem(0x30e1, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf1be, gbc.sp());
        EXPECT(0x30e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 038B
        gbc.setState(0xb5b7, 0xc07d, 0x9e70, 0xa761, 0xea40, 0x537c, 0x1, 0x0);
        gbc.writeMem(0xb5b7, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc07d, gbc.sp());
        EXPECT(0xb5b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5b7));
        EXPECT(0xa4, gbc.readMem(0xb5b8));
        // CB A4 038C
        gbc.setState(0x8e04, 0x21f3, 0x66b0, 0x4f0f, 0xefb, 0xc8a0, 0x0, 0x0);
        gbc.writeMem(0x8e04, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x21f3, gbc.sp());
        EXPECT(0x8e06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e04));
        EXPECT(0xa4, gbc.readMem(0x8e05));
        // CB A4 038D
        gbc.setState(0x663b, 0x47b6, 0xc870, 0x5f55, 0xaf45, 0x4e12, 0x0, 0x1);
        gbc.writeMem(0x663b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x47b6, gbc.sp());
        EXPECT(0x663d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 038E
        gbc.setState(0x3adb, 0x99e6, 0xab00, 0x7973, 0x8eec, 0x8fab, 0x1, 0x0);
        gbc.writeMem(0x3adb, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x99e6, gbc.sp());
        EXPECT(0x3add, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 038F
        gbc.setState(0x4465, 0x845f, 0x3540, 0xf7f3, 0xe6e3, 0x9ed, 0x1, 0x0);
        gbc.writeMem(0x4465, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x845f, gbc.sp());
        EXPECT(0x4467, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0390
        gbc.setState(0x138e, 0x8efd, 0x9450, 0xb54c, 0xe2f, 0xc4bc, 0x1, 0x0);
        gbc.writeMem(0x138e, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8efd, gbc.sp());
        EXPECT(0x1390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0391
        gbc.setState(0x1534, 0x5d9e, 0x12a0, 0x864c, 0xbe6d, 0x46b8, 0x1, 0x1);
        gbc.writeMem(0x1534, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5d9e, gbc.sp());
        EXPECT(0x1536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0392
        gbc.setState(0xd727, 0x648b, 0x1eb0, 0xb0e9, 0x3a4c, 0xf78f, 0x1, 0x0);
        gbc.writeMem(0xd727, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x648b, gbc.sp());
        EXPECT(0xd729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd727));
        EXPECT(0xa4, gbc.readMem(0xd728));
        // CB A4 0393
        gbc.setState(0xd80e, 0xe49f, 0x7540, 0x8c75, 0x3649, 0xdda1, 0x0, 0x0);
        gbc.writeMem(0xd80e, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe49f, gbc.sp());
        EXPECT(0xd810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd80e));
        EXPECT(0xa4, gbc.readMem(0xd80f));
        // CB A4 0394
        gbc.setState(0x132d, 0x4923, 0x8460, 0xd25f, 0x2435, 0x2200, 0x1, 0x1);
        gbc.writeMem(0x132d, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4923, gbc.sp());
        EXPECT(0x132f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0395
        gbc.setState(0xb4dd, 0x66ff, 0x6a30, 0x9188, 0xdad1, 0x70e4, 0x1, 0x0);
        gbc.writeMem(0xb4dd, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x66ff, gbc.sp());
        EXPECT(0xb4df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4dd));
        EXPECT(0xa4, gbc.readMem(0xb4de));
        // CB A4 0396
        gbc.setState(0x46c6, 0xfccc, 0x780, 0x755, 0x1ced, 0x621f, 0x0, 0x0);
        gbc.writeMem(0x46c6, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xfccc, gbc.sp());
        EXPECT(0x46c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 0397
        gbc.setState(0xe6a7, 0xc4c7, 0x5e80, 0xf620, 0x1e2c, 0x2403, 0x0, 0x0);
        gbc.writeMem(0xe6a7, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc4c7, gbc.sp());
        EXPECT(0xe6a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6a7));
        EXPECT(0xa4, gbc.readMem(0xe6a8));
        // CB A4 0398
        gbc.setState(0x884, 0xc7dd, 0x86b0, 0x8bbe, 0x3b0c, 0x1883, 0x1, 0x1);
        gbc.writeMem(0x884, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc7dd, gbc.sp());
        EXPECT(0x886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 0399
        gbc.setState(0x29a7, 0xf164, 0x2410, 0xecb5, 0x1b82, 0x7c41, 0x0, 0x0);
        gbc.writeMem(0x29a7, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf164, gbc.sp());
        EXPECT(0x29a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 039A
        gbc.setState(0x1340, 0x1807, 0x1c80, 0xeff, 0x730a, 0x9bd6, 0x0, 0x0);
        gbc.writeMem(0x1340, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1807, gbc.sp());
        EXPECT(0x1342, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 039B
        gbc.setState(0x43a6, 0x3e08, 0x3f60, 0x62d4, 0x45f, 0x5dfb, 0x1, 0x0);
        gbc.writeMem(0x43a6, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3e08, gbc.sp());
        EXPECT(0x43a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 039C
        gbc.setState(0xc5d7, 0x7a2a, 0x5ce0, 0xc0e3, 0xa6e6, 0xefa0, 0x1, 0x0);
        gbc.writeMem(0xc5d7, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7a2a, gbc.sp());
        EXPECT(0xc5d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5d7));
        EXPECT(0xa4, gbc.readMem(0xc5d8));
        // CB A4 039D
        gbc.setState(0x21c0, 0x2932, 0x3a80, 0xd4f4, 0x18e6, 0xf884, 0x1, 0x0);
        gbc.writeMem(0x21c0, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2932, gbc.sp());
        EXPECT(0x21c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 039E
        gbc.setState(0x55ce, 0xb1de, 0x1730, 0x3ef1, 0x4690, 0x94af, 0x0, 0x0);
        gbc.writeMem(0x55ce, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb1de, gbc.sp());
        EXPECT(0x55d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 039F
        gbc.setState(0x95d8, 0x1b74, 0x5630, 0xddfc, 0xd0fb, 0x3d07, 0x0, 0x0);
        gbc.writeMem(0x95d8, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1b74, gbc.sp());
        EXPECT(0x95da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95d8));
        EXPECT(0xa4, gbc.readMem(0x95d9));
        // CB A4 03A0
        gbc.setState(0x316c, 0x5d, 0xcda0, 0x45b1, 0xe20c, 0xc659, 0x0, 0x0);
        gbc.writeMem(0x316c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5d, gbc.sp());
        EXPECT(0x316e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 03A1
        gbc.setState(0xeb71, 0x3d19, 0x2050, 0x6d9, 0x4dab, 0x84db, 0x0, 0x1);
        gbc.writeMem(0xeb71, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3d19, gbc.sp());
        EXPECT(0xeb73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb71));
        EXPECT(0xa4, gbc.readMem(0xeb72));
        // CB A4 03A2
        gbc.setState(0x4015, 0x9b1c, 0x6a30, 0xcfb1, 0x43c4, 0xb7c3, 0x1, 0x1);
        gbc.writeMem(0x4015, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9b1c, gbc.sp());
        EXPECT(0x4017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 03A4
        gbc.setState(0x3614, 0xc850, 0x5b40, 0xc9a9, 0x2e97, 0x9b81, 0x1, 0x0);
        gbc.writeMem(0x3614, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc850, gbc.sp());
        EXPECT(0x3616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 03A5
        gbc.setState(0xb5a4, 0x2f95, 0x3af0, 0x9d9d, 0xa625, 0xcdda, 0x0, 0x0);
        gbc.writeMem(0xb5a4, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2f95, gbc.sp());
        EXPECT(0xb5a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5a4));
        EXPECT(0xa4, gbc.readMem(0xb5a5));
        // CB A4 03A6
        gbc.setState(0x513c, 0x65d1, 0x1100, 0xb9f7, 0x528, 0xe0c8, 0x1, 0x0);
        gbc.writeMem(0x513c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x65d1, gbc.sp());
        EXPECT(0x513e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 03A7
        gbc.setState(0x91e7, 0x31df, 0xf720, 0xab23, 0x9c7c, 0xbe78, 0x0, 0x0);
        gbc.writeMem(0x91e7, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x31df, gbc.sp());
        EXPECT(0x91e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91e7));
        EXPECT(0xa4, gbc.readMem(0x91e8));
        // CB A4 03A8
        gbc.setState(0x2793, 0x83bc, 0x6f00, 0xedfd, 0x224b, 0xb7df, 0x0, 0x1);
        gbc.writeMem(0x2793, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x83bc, gbc.sp());
        EXPECT(0x2795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 03A9
        gbc.setState(0x64ab, 0x259c, 0xbba0, 0xad3, 0x5325, 0xce27, 0x0, 0x1);
        gbc.writeMem(0x64ab, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x259c, gbc.sp());
        EXPECT(0x64ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 03AB
        gbc.setState(0x42ea, 0x6285, 0x4ed0, 0x6ecc, 0x3dc6, 0x8f8f, 0x1, 0x1);
        gbc.writeMem(0x42ea, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6285, gbc.sp());
        EXPECT(0x42ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 03AC
        gbc.setState(0xee0c, 0x132f, 0x9e90, 0xa35b, 0x14de, 0xee6f, 0x1, 0x1);
        gbc.writeMem(0xee0c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x132f, gbc.sp());
        EXPECT(0xee0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee0c));
        EXPECT(0xa4, gbc.readMem(0xee0d));
        // CB A4 03AD
        gbc.setState(0xc2f6, 0x8098, 0x91d0, 0xed23, 0x5a6f, 0xe803, 0x1, 0x1);
        gbc.writeMem(0xc2f6, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8098, gbc.sp());
        EXPECT(0xc2f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2f6));
        EXPECT(0xa4, gbc.readMem(0xc2f7));
        // CB A4 03AE
        gbc.setState(0x223e, 0xa124, 0x93b0, 0x8135, 0x5f19, 0xd01c, 0x0, 0x1);
        gbc.writeMem(0x223e, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa124, gbc.sp());
        EXPECT(0x2240, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 03AF
        gbc.setState(0x8518, 0xac53, 0xc9c0, 0x43da, 0x9117, 0x880, 0x1, 0x0);
        gbc.writeMem(0x8518, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xac53, gbc.sp());
        EXPECT(0x851a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8518));
        EXPECT(0xa4, gbc.readMem(0x8519));
        // CB A4 03B0
        gbc.setState(0x2c4d, 0xec18, 0x9fe0, 0xf6d1, 0x3f87, 0xaa3b, 0x1, 0x0);
        gbc.writeMem(0x2c4d, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xec18, gbc.sp());
        EXPECT(0x2c4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 03B1
        gbc.setState(0xca11, 0xb655, 0xdc90, 0x71bb, 0x2364, 0xbb2d, 0x0, 0x1);
        gbc.writeMem(0xca11, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb655, gbc.sp());
        EXPECT(0xca13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca11));
        EXPECT(0xa4, gbc.readMem(0xca12));
        // CB A4 03B2
        gbc.setState(0xd49e, 0xeb4c, 0x75e0, 0x6b25, 0x989e, 0x1aae, 0x0, 0x0);
        gbc.writeMem(0xd49e, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xeb4c, gbc.sp());
        EXPECT(0xd4a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd49e));
        EXPECT(0xa4, gbc.readMem(0xd49f));
        // CB A4 03B3
        gbc.setState(0xb31f, 0x7a4c, 0xf660, 0x15da, 0xf44c, 0xd604, 0x0, 0x1);
        gbc.writeMem(0xb31f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7a4c, gbc.sp());
        EXPECT(0xb321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb31f));
        EXPECT(0xa4, gbc.readMem(0xb320));
        // CB A4 03B4
        gbc.setState(0x66f, 0xe9fa, 0xb6e0, 0xfd09, 0x6dc0, 0xeb8f, 0x1, 0x1);
        gbc.writeMem(0x66f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe9fa, gbc.sp());
        EXPECT(0x671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 03B5
        gbc.setState(0x6705, 0x75aa, 0x29f0, 0x85ca, 0x3f0d, 0xa2cd, 0x0, 0x1);
        gbc.writeMem(0x6705, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x75aa, gbc.sp());
        EXPECT(0x6707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 03B6
        gbc.setState(0x5841, 0x1816, 0x5890, 0xf484, 0x4b2d, 0x7f92, 0x1, 0x0);
        gbc.writeMem(0x5841, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1816, gbc.sp());
        EXPECT(0x5843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 03B7
        gbc.setState(0x7c20, 0xf9aa, 0xf4f0, 0xb458, 0x9239, 0x44e1, 0x0, 0x0);
        gbc.writeMem(0x7c20, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf9aa, gbc.sp());
        EXPECT(0x7c22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 03B8
        gbc.setState(0xa299, 0xd1f7, 0xda30, 0x8cf, 0xf6ee, 0x96e6, 0x1, 0x1);
        gbc.writeMem(0xa299, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd1f7, gbc.sp());
        EXPECT(0xa29b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa299));
        EXPECT(0xa4, gbc.readMem(0xa29a));
        // CB A4 03B9
        gbc.setState(0x63ca, 0xc0fc, 0x96b0, 0xdbc2, 0x2ee8, 0x9436, 0x0, 0x1);
        gbc.writeMem(0x63ca, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc0fc, gbc.sp());
        EXPECT(0x63cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 03BA
        gbc.setState(0xa8e3, 0xb4ff, 0x2e0, 0x2165, 0x7349, 0x8606, 0x0, 0x1);
        gbc.writeMem(0xa8e3, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb4ff, gbc.sp());
        EXPECT(0xa8e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8e3));
        EXPECT(0xa4, gbc.readMem(0xa8e4));
        // CB A4 03BB
        gbc.setState(0xebfb, 0xf09c, 0x1000, 0x5b75, 0x4ef1, 0xe0a4, 0x0, 0x1);
        gbc.writeMem(0xebfb, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf09c, gbc.sp());
        EXPECT(0xebfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebfb));
        EXPECT(0xa4, gbc.readMem(0xebfc));
        // CB A4 03BC
        gbc.setState(0xb97f, 0x7c53, 0xe5b0, 0x7346, 0x3365, 0x5e47, 0x0, 0x1);
        gbc.writeMem(0xb97f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7c53, gbc.sp());
        EXPECT(0xb981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb97f));
        EXPECT(0xa4, gbc.readMem(0xb980));
        // CB A4 03BD
        gbc.setState(0xc73f, 0x8d6e, 0xf950, 0x1b4, 0x2b0b, 0x83da, 0x0, 0x1);
        gbc.writeMem(0xc73f, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8d6e, gbc.sp());
        EXPECT(0xc741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc73f));
        EXPECT(0xa4, gbc.readMem(0xc740));
        // CB A4 03BE
        gbc.setState(0xc1d2, 0xe883, 0xfda0, 0x9cad, 0xd5e1, 0xd6a, 0x1, 0x0);
        gbc.writeMem(0xc1d2, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe883, gbc.sp());
        EXPECT(0xc1d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1d2));
        EXPECT(0xa4, gbc.readMem(0xc1d3));
        // CB A4 03BF
        gbc.setState(0x64d5, 0x106, 0xdcb0, 0xa70, 0x9eb3, 0x1fcf, 0x1, 0x0);
        gbc.writeMem(0x64d5, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x106, gbc.sp());
        EXPECT(0x64d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 03C0
        gbc.setState(0x49d9, 0x44b7, 0x21f0, 0x1960, 0x9782, 0xdc86, 0x0, 0x1);
        gbc.writeMem(0x49d9, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x44b7, gbc.sp());
        EXPECT(0x49db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 03C1
        gbc.setState(0x76da, 0x914e, 0x8da0, 0x31ab, 0x42ce, 0x9af0, 0x1, 0x0);
        gbc.writeMem(0x76da, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x914e, gbc.sp());
        EXPECT(0x76dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 03C2
        gbc.setState(0x60fd, 0xa661, 0x28a0, 0xc685, 0xa30e, 0x7de, 0x0, 0x1);
        gbc.writeMem(0x60fd, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa661, gbc.sp());
        EXPECT(0x60ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 03C3
        gbc.setState(0x85eb, 0x450c, 0xd450, 0xbe6e, 0xf44b, 0x234c, 0x0, 0x0);
        gbc.writeMem(0x85eb, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x450c, gbc.sp());
        EXPECT(0x85ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85eb));
        EXPECT(0xa4, gbc.readMem(0x85ec));
        // CB A4 03C4
        gbc.setState(0x65e7, 0x8026, 0xddd0, 0x2f02, 0xbfdf, 0xfa84, 0x0, 0x1);
        gbc.writeMem(0x65e7, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8026, gbc.sp());
        EXPECT(0x65e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 03C5
        gbc.setState(0x7c7, 0xffbd, 0x2130, 0xc915, 0x841f, 0x303d, 0x1, 0x1);
        gbc.writeMem(0x7c7, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xffbd, gbc.sp());
        EXPECT(0x7c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 03C6
        gbc.setState(0xa8fe, 0x2d71, 0xaad0, 0x4ebe, 0xc9df, 0xc7e6, 0x1, 0x0);
        gbc.writeMem(0xa8fe, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2d71, gbc.sp());
        EXPECT(0xa900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8fe));
        EXPECT(0xa4, gbc.readMem(0xa8ff));
        // CB A4 03C7
        gbc.setState(0x1ed5, 0x96b9, 0xa280, 0x2c33, 0x5642, 0x7500, 0x1, 0x1);
        gbc.writeMem(0x1ed5, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x96b9, gbc.sp());
        EXPECT(0x1ed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 03C8
        gbc.setState(0xc1ee, 0x2f6e, 0x5110, 0x2d82, 0x5868, 0x2803, 0x0, 0x0);
        gbc.writeMem(0xc1ee, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2f6e, gbc.sp());
        EXPECT(0xc1f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ee));
        EXPECT(0xa4, gbc.readMem(0xc1ef));
        // CB A4 03C9
        gbc.setState(0x8930, 0x4aea, 0x5860, 0x5453, 0x9f7, 0x2aa9, 0x0, 0x0);
        gbc.writeMem(0x8930, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4aea, gbc.sp());
        EXPECT(0x8932, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8930));
        EXPECT(0xa4, gbc.readMem(0x8931));
        // CB A4 03CA
        gbc.setState(0xb66, 0x596c, 0x7470, 0xb857, 0x2c3, 0xb402, 0x1, 0x1);
        gbc.writeMem(0xb66, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x596c, gbc.sp());
        EXPECT(0xb68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 03CB
        gbc.setState(0x5fc6, 0xbd9c, 0x5bf0, 0x1782, 0xbcee, 0x806d, 0x1, 0x1);
        gbc.writeMem(0x5fc6, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xbd9c, gbc.sp());
        EXPECT(0x5fc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 03CC
        gbc.setState(0xba5c, 0x7c7a, 0xc90, 0xb287, 0xc1df, 0x974a, 0x1, 0x1);
        gbc.writeMem(0xba5c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7c7a, gbc.sp());
        EXPECT(0xba5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba5c));
        EXPECT(0xa4, gbc.readMem(0xba5d));
        // CB A4 03CD
        gbc.setState(0x1c5a, 0x235, 0x4730, 0x8dfe, 0xc665, 0xf24b, 0x0, 0x0);
        gbc.writeMem(0x1c5a, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x235, gbc.sp());
        EXPECT(0x1c5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 03CF
        gbc.setState(0x88a7, 0x9396, 0x4410, 0x1979, 0x1523, 0x14c, 0x1, 0x1);
        gbc.writeMem(0x88a7, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9396, gbc.sp());
        EXPECT(0x88a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88a7));
        EXPECT(0xa4, gbc.readMem(0x88a8));
        // CB A4 03D0
        gbc.setState(0x37c8, 0x3dbd, 0x2400, 0xfba8, 0x1ee8, 0x3cb9, 0x1, 0x1);
        gbc.writeMem(0x37c8, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3dbd, gbc.sp());
        EXPECT(0x37ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 03D1
        gbc.setState(0x348b, 0xb06, 0x3d50, 0x7d0c, 0xd40a, 0xf833, 0x1, 0x0);
        gbc.writeMem(0x348b, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb06, gbc.sp());
        EXPECT(0x348d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 03D2
        gbc.setState(0x6802, 0x37f8, 0x7b50, 0x7b3d, 0xfdaa, 0xfe5c, 0x1, 0x1);
        gbc.writeMem(0x6802, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x37f8, gbc.sp());
        EXPECT(0x6804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 03D3
        gbc.setState(0x22aa, 0x7b23, 0x7fa0, 0xeb44, 0x553, 0xf2ef, 0x1, 0x0);
        gbc.writeMem(0x22aa, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7b23, gbc.sp());
        EXPECT(0x22ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 03D4
        gbc.setState(0x62ae, 0x15cf, 0x33b0, 0x1aac, 0x49a9, 0x68a5, 0x1, 0x0);
        gbc.writeMem(0x62ae, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x15cf, gbc.sp());
        EXPECT(0x62b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 03D6
        gbc.setState(0x9caf, 0x4f42, 0xa160, 0xa9d, 0xae28, 0xc6d0, 0x1, 0x0);
        gbc.writeMem(0x9caf, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4f42, gbc.sp());
        EXPECT(0x9cb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9caf));
        EXPECT(0xa4, gbc.readMem(0x9cb0));
        // CB A4 03D7
        gbc.setState(0x9113, 0x4cd3, 0x5de0, 0x8c64, 0x345c, 0xb4a9, 0x1, 0x1);
        gbc.writeMem(0x9113, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4cd3, gbc.sp());
        EXPECT(0x9115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9113));
        EXPECT(0xa4, gbc.readMem(0x9114));
        // CB A4 03D8
        gbc.setState(0x935e, 0x22b7, 0xbfa0, 0xafb3, 0x449, 0x5737, 0x1, 0x1);
        gbc.writeMem(0x935e, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x22b7, gbc.sp());
        EXPECT(0x9360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x935e));
        EXPECT(0xa4, gbc.readMem(0x935f));
        // CB A4 03D9
        gbc.setState(0xb882, 0x41df, 0xc770, 0x51ff, 0x2755, 0x4201, 0x1, 0x0);
        gbc.writeMem(0xb882, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x41df, gbc.sp());
        EXPECT(0xb884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb882));
        EXPECT(0xa4, gbc.readMem(0xb883));
        // CB A4 03DA
        gbc.setState(0x93e7, 0x4efe, 0x2380, 0xc0cc, 0x1c9f, 0x620, 0x1, 0x1);
        gbc.writeMem(0x93e7, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4efe, gbc.sp());
        EXPECT(0x93e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93e7));
        EXPECT(0xa4, gbc.readMem(0x93e8));
        // CB A4 03DB
        gbc.setState(0x7f4, 0x42b8, 0x5730, 0x622a, 0xfba4, 0x7729, 0x1, 0x1);
        gbc.writeMem(0x7f4, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x42b8, gbc.sp());
        EXPECT(0x7f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 03DC
        gbc.setState(0x3601, 0xc48c, 0x1470, 0xb50b, 0xa414, 0xe693, 0x0, 0x1);
        gbc.writeMem(0x3601, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc48c, gbc.sp());
        EXPECT(0x3603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 03DD
        gbc.setState(0x2439, 0x2ace, 0x6f80, 0x6a54, 0x4e1e, 0x18a8, 0x0, 0x0);
        gbc.writeMem(0x2439, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2ace, gbc.sp());
        EXPECT(0x243b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 03DE
        gbc.setState(0xca88, 0x3632, 0xf800, 0x32a7, 0x301c, 0xae4, 0x1, 0x1);
        gbc.writeMem(0xca88, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3632, gbc.sp());
        EXPECT(0xca8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca88));
        EXPECT(0xa4, gbc.readMem(0xca89));
        // CB A4 03E0
        gbc.setState(0xa0b3, 0xd76f, 0xbfe0, 0x647c, 0x7455, 0x4247, 0x0, 0x1);
        gbc.writeMem(0xa0b3, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd76f, gbc.sp());
        EXPECT(0xa0b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0b3));
        EXPECT(0xa4, gbc.readMem(0xa0b4));
        // CB A4 03E1
        gbc.setState(0x4954, 0xa99d, 0x2f90, 0xe164, 0x9862, 0xf9c8, 0x0, 0x1);
        gbc.writeMem(0x4954, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa99d, gbc.sp());
        EXPECT(0x4956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB A4 03E2
        gbc.setState(0xab9c, 0xbc66, 0xfa50, 0x99d9, 0xf607, 0x21a2, 0x1, 0x1);
        gbc.writeMem(0xab9c, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbc66, gbc.sp());
        EXPECT(0xab9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab9c));
        EXPECT(0xa4, gbc.readMem(0xab9d));
        // CB A4 03E3
        gbc.setState(0x1cd0, 0x6059, 0xa2c0, 0x3965, 0x3254, 0x39c3, 0x1, 0x1);
        gbc.writeMem(0x1cd0, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6059, gbc.sp());
        EXPECT(0x1cd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB A4 03E4
        gbc.setState(0xd251, 0x8891, 0x14c0, 0xf4, 0xfdd1, 0x633, 0x1, 0x0);
        gbc.writeMem(0xd251, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8891, gbc.sp());
        EXPECT(0xd253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd251));
        EXPECT(0xa4, gbc.readMem(0xd252));
        // CB A4 03E5
        gbc.setState(0xbae0, 0x3bb, 0xf8f0, 0xe8c1, 0x689c, 0xe869, 0x1, 0x0);
        gbc.writeMem(0xbae0, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3bb, gbc.sp());
        EXPECT(0xbae2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbae0));
        EXPECT(0xa4, gbc.readMem(0xbae1));
        // CB A4 03E7
        gbc.setState(0xe9b3, 0x6bc4, 0x440, 0x410b, 0xeb2b, 0x75e2, 0x1, 0x0);
        gbc.writeMem(0xe9b3, { 0xcb, 0xa4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6bc4, gbc.sp());
        EXPECT(0xe9b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9b3));
        EXPECT(0xa4, gbc.readMem(0xe9b4));
    }
