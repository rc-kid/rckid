#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_12)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_12) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 12 0000
        gbc.setState(0x854d, 0x1ab3, 0x5390, 0x1a6f, 0xcff3, 0xbd0a, 0x1, 0x1);
        gbc.writeMem(0x854d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x1ab3);
        EXPECT(gbc.pc(), 0x854f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x854d), 0xcb);
        EXPECT(gbc.readMem(0x854e), 0x12);
        // CB 12 0001
        gbc.setState(0xd6fa, 0x4956, 0x2060, 0x73e1, 0xe772, 0xb195, 0x0, 0x0);
        gbc.writeMem(0xd6fa, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x4956);
        EXPECT(gbc.pc(), 0xd6fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6fa), 0xcb);
        EXPECT(gbc.readMem(0xd6fb), 0x12);
        // CB 12 0002
        gbc.setState(0xe403, 0x902f, 0x3900, 0x7549, 0x11dc, 0x362f, 0x0, 0x0);
        gbc.writeMem(0xe403, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x902f);
        EXPECT(gbc.pc(), 0xe405);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe403), 0xcb);
        EXPECT(gbc.readMem(0xe404), 0x12);
        // CB 12 0003
        gbc.setState(0x3309, 0x7ac0, 0xdb60, 0x1237, 0x261e, 0x1573, 0x0, 0x1);
        gbc.writeMem(0x3309, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x7ac0);
        EXPECT(gbc.pc(), 0x330b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0004
        gbc.setState(0x48ed, 0x7a7, 0x7ad0, 0x12d8, 0xc8c, 0x35f1, 0x0, 0x0);
        gbc.writeMem(0x48ed, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x7a7);
        EXPECT(gbc.pc(), 0x48ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0005
        gbc.setState(0x88ed, 0xb025, 0x4b30, 0xb9d1, 0x4d20, 0x31d9, 0x0, 0x1);
        gbc.writeMem(0x88ed, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xb025);
        EXPECT(gbc.pc(), 0x88ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88ed), 0xcb);
        EXPECT(gbc.readMem(0x88ee), 0x12);
        // CB 12 0006
        gbc.setState(0xaba4, 0x8670, 0xa7e0, 0xa01c, 0xd766, 0xd5f4, 0x0, 0x0);
        gbc.writeMem(0xaba4, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x8670);
        EXPECT(gbc.pc(), 0xaba6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaba4), 0xcb);
        EXPECT(gbc.readMem(0xaba5), 0x12);
        // CB 12 0007
        gbc.setState(0x89fd, 0xab7d, 0xf840, 0xa8d, 0xc56b, 0xfaf2, 0x1, 0x0);
        gbc.writeMem(0x89fd, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xab7d);
        EXPECT(gbc.pc(), 0x89ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89fd), 0xcb);
        EXPECT(gbc.readMem(0x89fe), 0x12);
        // CB 12 0008
        gbc.setState(0x6302, 0x6f56, 0x30b0, 0x47bb, 0xcec4, 0x4f7c, 0x0, 0x1);
        gbc.writeMem(0x6302, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x6f56);
        EXPECT(gbc.pc(), 0x6304);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0009
        gbc.setState(0xb32c, 0x6494, 0xc070, 0xd5db, 0xf38a, 0x2ef7, 0x0, 0x0);
        gbc.writeMem(0xb32c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6494);
        EXPECT(gbc.pc(), 0xb32e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb32c), 0xcb);
        EXPECT(gbc.readMem(0xb32d), 0x12);
        // CB 12 000A
        gbc.setState(0xc2eb, 0xb468, 0x1950, 0x3874, 0xe5ee, 0x2d10, 0x1, 0x0);
        gbc.writeMem(0xc2eb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb468);
        EXPECT(gbc.pc(), 0xc2ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2eb), 0xcb);
        EXPECT(gbc.readMem(0xc2ec), 0x12);
        // CB 12 000C
        gbc.setState(0xb979, 0x74b8, 0x5b50, 0xc0df, 0xc6db, 0xc4d9, 0x0, 0x0);
        gbc.writeMem(0xb979, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x74b8);
        EXPECT(gbc.pc(), 0xb97b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb979), 0xcb);
        EXPECT(gbc.readMem(0xb97a), 0x12);
        // CB 12 000D
        gbc.setState(0x38b7, 0x814a, 0x9cc0, 0xb533, 0x113f, 0x41bf, 0x1, 0x1);
        gbc.writeMem(0x38b7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x814a);
        EXPECT(gbc.pc(), 0x38b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 000E
        gbc.setState(0xc750, 0x68d9, 0xa890, 0xeaf5, 0xf4d3, 0xe88c, 0x0, 0x0);
        gbc.writeMem(0xc750, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x68d9);
        EXPECT(gbc.pc(), 0xc752);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc750), 0xcb);
        EXPECT(gbc.readMem(0xc751), 0x12);
        // CB 12 000F
        gbc.setState(0xd323, 0x8642, 0x420, 0xb2bd, 0xaf49, 0x3541, 0x1, 0x1);
        gbc.writeMem(0xd323, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8642);
        EXPECT(gbc.pc(), 0xd325);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd323), 0xcb);
        EXPECT(gbc.readMem(0xd324), 0x12);
        // CB 12 0010
        gbc.setState(0xa64f, 0xf765, 0x6ec0, 0x3386, 0x250f, 0x7dd1, 0x1, 0x1);
        gbc.writeMem(0xa64f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xf765);
        EXPECT(gbc.pc(), 0xa651);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa64f), 0xcb);
        EXPECT(gbc.readMem(0xa650), 0x12);
        // CB 12 0011
        gbc.setState(0x6766, 0xe0d3, 0xf850, 0xe7f0, 0x73c8, 0xd6e, 0x0, 0x1);
        gbc.writeMem(0x6766, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xe0d3);
        EXPECT(gbc.pc(), 0x6768);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0012
        gbc.setState(0xa37c, 0x21b2, 0xfc50, 0x3515, 0x83aa, 0xacef, 0x0, 0x0);
        gbc.writeMem(0xa37c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x21b2);
        EXPECT(gbc.pc(), 0xa37e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa37c), 0xcb);
        EXPECT(gbc.readMem(0xa37d), 0x12);
        // CB 12 0013
        gbc.setState(0x1f2a, 0x3dff, 0x26b0, 0xd321, 0xce2d, 0xf10c, 0x1, 0x0);
        gbc.writeMem(0x1f2a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x3dff);
        EXPECT(gbc.pc(), 0x1f2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0014
        gbc.setState(0xb9e8, 0x581a, 0x3bd0, 0x3798, 0xfbb3, 0x9f92, 0x1, 0x0);
        gbc.writeMem(0xb9e8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x581a);
        EXPECT(gbc.pc(), 0xb9ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9e8), 0xcb);
        EXPECT(gbc.readMem(0xb9e9), 0x12);
        // CB 12 0015
        gbc.setState(0x3006, 0x2864, 0x3530, 0xbb4e, 0x4555, 0x76c7, 0x0, 0x0);
        gbc.writeMem(0x3006, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x2864);
        EXPECT(gbc.pc(), 0x3008);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0016
        gbc.setState(0xe1e4, 0xbe51, 0x8860, 0x483, 0x308c, 0xbce5, 0x0, 0x1);
        gbc.writeMem(0xe1e4, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xbe51);
        EXPECT(gbc.pc(), 0xe1e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1e4), 0xcb);
        EXPECT(gbc.readMem(0xe1e5), 0x12);
        // CB 12 0017
        gbc.setState(0x2af1, 0x4527, 0x4e00, 0x3843, 0x8474, 0x87e7, 0x1, 0x1);
        gbc.writeMem(0x2af1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4527);
        EXPECT(gbc.pc(), 0x2af3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0018
        gbc.setState(0x69f7, 0x83f3, 0x92d0, 0x6ea, 0xcbc3, 0xdc2d, 0x1, 0x1);
        gbc.writeMem(0x69f7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x83f3);
        EXPECT(gbc.pc(), 0x69f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 001A
        gbc.setState(0x8cc2, 0x2337, 0xc8e0, 0xdc26, 0x59f1, 0x3cfc, 0x1, 0x1);
        gbc.writeMem(0x8cc2, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2337);
        EXPECT(gbc.pc(), 0x8cc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cc2), 0xcb);
        EXPECT(gbc.readMem(0x8cc3), 0x12);
        // CB 12 001B
        gbc.setState(0xde9c, 0x26ed, 0x6880, 0xe1ff, 0xae36, 0xab5, 0x1, 0x0);
        gbc.writeMem(0xde9c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x26ed);
        EXPECT(gbc.pc(), 0xde9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde9c), 0xcb);
        EXPECT(gbc.readMem(0xde9d), 0x12);
        // CB 12 001D
        gbc.setState(0xee82, 0xe3d3, 0xe640, 0xdbde, 0xe84d, 0xedd, 0x1, 0x1);
        gbc.writeMem(0xee82, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe3d3);
        EXPECT(gbc.pc(), 0xee84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee82), 0xcb);
        EXPECT(gbc.readMem(0xee83), 0x12);
        // CB 12 001E
        gbc.setState(0x56d8, 0x5e29, 0x1270, 0x839a, 0xdad0, 0x45b3, 0x0, 0x0);
        gbc.writeMem(0x56d8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x5e29);
        EXPECT(gbc.pc(), 0x56da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 001F
        gbc.setState(0xba49, 0xbe16, 0xbba0, 0x89cf, 0x9218, 0xae84, 0x0, 0x1);
        gbc.writeMem(0xba49, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xbe16);
        EXPECT(gbc.pc(), 0xba4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba49), 0xcb);
        EXPECT(gbc.readMem(0xba4a), 0x12);
        // CB 12 0020
        gbc.setState(0x3d8e, 0x493c, 0x67d0, 0xfc8f, 0xd23d, 0x90f9, 0x0, 0x1);
        gbc.writeMem(0x3d8e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x493c);
        EXPECT(gbc.pc(), 0x3d90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0021
        gbc.setState(0x6add, 0xfe64, 0xb860, 0xfba8, 0x13ce, 0xd60f, 0x1, 0x1);
        gbc.writeMem(0x6add, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xfe64);
        EXPECT(gbc.pc(), 0x6adf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0022
        gbc.setState(0xb0fa, 0xae6c, 0xc2b0, 0x1447, 0xeeff, 0xee17, 0x0, 0x0);
        gbc.writeMem(0xb0fa, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xae6c);
        EXPECT(gbc.pc(), 0xb0fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0fa), 0xcb);
        EXPECT(gbc.readMem(0xb0fb), 0x12);
        // CB 12 0023
        gbc.setState(0x6c03, 0x6ddb, 0x5bb0, 0xe278, 0xc1d6, 0x52f3, 0x1, 0x1);
        gbc.writeMem(0x6c03, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x6ddb);
        EXPECT(gbc.pc(), 0x6c05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0024
        gbc.setState(0x991e, 0xe7f3, 0x1290, 0xbe3f, 0x81fb, 0xecb9, 0x1, 0x1);
        gbc.writeMem(0x991e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xe7f3);
        EXPECT(gbc.pc(), 0x9920);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x991e), 0xcb);
        EXPECT(gbc.readMem(0x991f), 0x12);
        // CB 12 0025
        gbc.setState(0x7d67, 0x251b, 0x21f0, 0xdaaa, 0xed13, 0xaf27, 0x0, 0x0);
        gbc.writeMem(0x7d67, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x251b);
        EXPECT(gbc.pc(), 0x7d69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0026
        gbc.setState(0x6a12, 0xe6e0, 0x7060, 0x5882, 0xb5ce, 0xc5a6, 0x0, 0x0);
        gbc.writeMem(0x6a12, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xe6e0);
        EXPECT(gbc.pc(), 0x6a14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0027
        gbc.setState(0x5717, 0x24d8, 0xd890, 0xe4b7, 0x925b, 0x79b8, 0x1, 0x0);
        gbc.writeMem(0x5717, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x24d8);
        EXPECT(gbc.pc(), 0x5719);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0028
        gbc.setState(0x502c, 0x842f, 0x1370, 0xd74f, 0xdc32, 0x7962, 0x1, 0x0);
        gbc.writeMem(0x502c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x842f);
        EXPECT(gbc.pc(), 0x502e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0029
        gbc.setState(0xb51f, 0x2aa6, 0x4690, 0x6ac2, 0x47f4, 0x6aac, 0x1, 0x1);
        gbc.writeMem(0xb51f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x2aa6);
        EXPECT(gbc.pc(), 0xb521);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb51f), 0xcb);
        EXPECT(gbc.readMem(0xb520), 0x12);
        // CB 12 002B
        gbc.setState(0xc10e, 0xbbc8, 0xe1c0, 0xf731, 0x536a, 0xd95, 0x1, 0x1);
        gbc.writeMem(0xc10e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xbbc8);
        EXPECT(gbc.pc(), 0xc110);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc10e), 0xcb);
        EXPECT(gbc.readMem(0xc10f), 0x12);
        // CB 12 002C
        gbc.setState(0x33be, 0xcfc6, 0x61d0, 0x6109, 0xd1b7, 0x757a, 0x0, 0x1);
        gbc.writeMem(0x33be, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xcfc6);
        EXPECT(gbc.pc(), 0x33c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 002D
        gbc.setState(0x43ed, 0x42ad, 0x2c10, 0x5ca2, 0xf212, 0x3c86, 0x1, 0x1);
        gbc.writeMem(0x43ed, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x42ad);
        EXPECT(gbc.pc(), 0x43ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 002E
        gbc.setState(0x7380, 0x819d, 0xcde0, 0x6503, 0x1a74, 0xe436, 0x0, 0x0);
        gbc.writeMem(0x7380, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x819d);
        EXPECT(gbc.pc(), 0x7382);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 002F
        gbc.setState(0xe63a, 0xc494, 0xae30, 0xa08e, 0x510a, 0xc968, 0x0, 0x0);
        gbc.writeMem(0xe63a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc494);
        EXPECT(gbc.pc(), 0xe63c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe63a), 0xcb);
        EXPECT(gbc.readMem(0xe63b), 0x12);
        // CB 12 0030
        gbc.setState(0x816b, 0x2cc9, 0x5ec0, 0x526b, 0xa5d4, 0xb288, 0x0, 0x0);
        gbc.writeMem(0x816b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x2cc9);
        EXPECT(gbc.pc(), 0x816d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x816b), 0xcb);
        EXPECT(gbc.readMem(0x816c), 0x12);
        // CB 12 0031
        gbc.setState(0xe5cb, 0x8a83, 0x59d0, 0x627b, 0xdcab, 0xbcac, 0x0, 0x0);
        gbc.writeMem(0xe5cb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x8a83);
        EXPECT(gbc.pc(), 0xe5cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5cb), 0xcb);
        EXPECT(gbc.readMem(0xe5cc), 0x12);
        // CB 12 0032
        gbc.setState(0x8799, 0x5a7c, 0xac30, 0xb38e, 0xd910, 0xe44, 0x0, 0x0);
        gbc.writeMem(0x8799, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x5a7c);
        EXPECT(gbc.pc(), 0x879b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8799), 0xcb);
        EXPECT(gbc.readMem(0x879a), 0x12);
        // CB 12 0033
        gbc.setState(0xa1ef, 0x45c1, 0xd110, 0x6ef1, 0xd04e, 0x2333, 0x1, 0x1);
        gbc.writeMem(0xa1ef, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x45c1);
        EXPECT(gbc.pc(), 0xa1f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1ef), 0xcb);
        EXPECT(gbc.readMem(0xa1f0), 0x12);
        // CB 12 0034
        gbc.setState(0xeb2f, 0x79f0, 0x2980, 0x62f7, 0x3372, 0xcdfe, 0x1, 0x0);
        gbc.writeMem(0xeb2f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x79f0);
        EXPECT(gbc.pc(), 0xeb31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb2f), 0xcb);
        EXPECT(gbc.readMem(0xeb30), 0x12);
        // CB 12 0035
        gbc.setState(0x6420, 0xcf83, 0x6110, 0xf99c, 0x5b17, 0x6eee, 0x1, 0x0);
        gbc.writeMem(0x6420, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xcf83);
        EXPECT(gbc.pc(), 0x6422);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0036
        gbc.setState(0x47da, 0x5004, 0x8520, 0xf2b8, 0xce41, 0xc64c, 0x1, 0x0);
        gbc.writeMem(0x47da, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x5004);
        EXPECT(gbc.pc(), 0x47dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0038
        gbc.setState(0xdba0, 0x7491, 0x6c40, 0x9926, 0x1073, 0xe1f9, 0x1, 0x0);
        gbc.writeMem(0xdba0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x7491);
        EXPECT(gbc.pc(), 0xdba2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdba0), 0xcb);
        EXPECT(gbc.readMem(0xdba1), 0x12);
        // CB 12 0039
        gbc.setState(0xccd1, 0xbcfc, 0xd360, 0x5092, 0xe0ea, 0xe15d, 0x0, 0x0);
        gbc.writeMem(0xccd1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xbcfc);
        EXPECT(gbc.pc(), 0xccd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccd1), 0xcb);
        EXPECT(gbc.readMem(0xccd2), 0x12);
        // CB 12 003A
        gbc.setState(0x3faf, 0xe69d, 0x8050, 0xb477, 0xf831, 0xe22c, 0x0, 0x1);
        gbc.writeMem(0x3faf, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe69d);
        EXPECT(gbc.pc(), 0x3fb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 003B
        gbc.setState(0xbe0f, 0xdeef, 0xaa0, 0x3659, 0x7668, 0x2713, 0x0, 0x1);
        gbc.writeMem(0xbe0f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xdeef);
        EXPECT(gbc.pc(), 0xbe11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe0f), 0xcb);
        EXPECT(gbc.readMem(0xbe10), 0x12);
        // CB 12 003C
        gbc.setState(0xdf9f, 0xed1d, 0xd50, 0xb29e, 0x626c, 0x643e, 0x1, 0x0);
        gbc.writeMem(0xdf9f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xed1d);
        EXPECT(gbc.pc(), 0xdfa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf9f), 0xcb);
        EXPECT(gbc.readMem(0xdfa0), 0x12);
        // CB 12 003D
        gbc.setState(0x1126, 0x23fd, 0x2b90, 0x4762, 0x711d, 0x954d, 0x0, 0x1);
        gbc.writeMem(0x1126, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x23fd);
        EXPECT(gbc.pc(), 0x1128);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 003E
        gbc.setState(0x5d7f, 0x8ae8, 0xe780, 0x2979, 0x6cf7, 0xb249, 0x1, 0x0);
        gbc.writeMem(0x5d7f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x8ae8);
        EXPECT(gbc.pc(), 0x5d81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 003F
        gbc.setState(0x9007, 0xc75c, 0x89e0, 0xd255, 0x5065, 0x18a6, 0x1, 0x1);
        gbc.writeMem(0x9007, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc75c);
        EXPECT(gbc.pc(), 0x9009);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9007), 0xcb);
        EXPECT(gbc.readMem(0x9008), 0x12);
        // CB 12 0041
        gbc.setState(0xc42, 0xc2c8, 0xfc30, 0xbb5a, 0xa7d8, 0x6aff, 0x0, 0x1);
        gbc.writeMem(0xc42, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xc2c8);
        EXPECT(gbc.pc(), 0xc44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0042
        gbc.setState(0x4409, 0xb9f9, 0xa830, 0x73d3, 0x5d9a, 0x3297, 0x1, 0x1);
        gbc.writeMem(0x4409, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xb9f9);
        EXPECT(gbc.pc(), 0x440b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0044
        gbc.setState(0x3a1d, 0x77a1, 0xbb60, 0xb2c6, 0x2898, 0xf8f8, 0x0, 0x0);
        gbc.writeMem(0x3a1d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x77a1);
        EXPECT(gbc.pc(), 0x3a1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0045
        gbc.setState(0x8f9e, 0xa28e, 0x8290, 0x1349, 0x6f0f, 0xc269, 0x0, 0x0);
        gbc.writeMem(0x8f9e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xa28e);
        EXPECT(gbc.pc(), 0x8fa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f9e), 0xcb);
        EXPECT(gbc.readMem(0x8f9f), 0x12);
        // CB 12 0046
        gbc.setState(0xcdf3, 0x27c8, 0xb6a0, 0x3e05, 0x399a, 0xdaa0, 0x0, 0x1);
        gbc.writeMem(0xcdf3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x27c8);
        EXPECT(gbc.pc(), 0xcdf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdf3), 0xcb);
        EXPECT(gbc.readMem(0xcdf4), 0x12);
        // CB 12 0047
        gbc.setState(0xdb9d, 0x9f7c, 0xd0f0, 0x917f, 0x416c, 0x7f92, 0x1, 0x1);
        gbc.writeMem(0xdb9d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x9f7c);
        EXPECT(gbc.pc(), 0xdb9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb9d), 0xcb);
        EXPECT(gbc.readMem(0xdb9e), 0x12);
        // CB 12 0048
        gbc.setState(0x8987, 0x13bb, 0x9c70, 0xb703, 0xc7d1, 0xb3d, 0x1, 0x0);
        gbc.writeMem(0x8987, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x13bb);
        EXPECT(gbc.pc(), 0x8989);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8987), 0xcb);
        EXPECT(gbc.readMem(0x8988), 0x12);
        // CB 12 0049
        gbc.setState(0xba1f, 0x909, 0x3750, 0x6b98, 0x690f, 0xa593, 0x1, 0x0);
        gbc.writeMem(0xba1f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x909);
        EXPECT(gbc.pc(), 0xba21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba1f), 0xcb);
        EXPECT(gbc.readMem(0xba20), 0x12);
        // CB 12 004A
        gbc.setState(0xbc20, 0x3d74, 0xbcc0, 0x6c69, 0x525f, 0x4536, 0x1, 0x0);
        gbc.writeMem(0xbc20, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3d74);
        EXPECT(gbc.pc(), 0xbc22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc20), 0xcb);
        EXPECT(gbc.readMem(0xbc21), 0x12);
        // CB 12 004B
        gbc.setState(0xc7f5, 0x7e7a, 0xea90, 0xac19, 0x2a2, 0x53b, 0x1, 0x1);
        gbc.writeMem(0xc7f5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x7e7a);
        EXPECT(gbc.pc(), 0xc7f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7f5), 0xcb);
        EXPECT(gbc.readMem(0xc7f6), 0x12);
        // CB 12 004C
        gbc.setState(0x2ada, 0x186a, 0x2810, 0xc7c, 0xd1aa, 0xb703, 0x0, 0x1);
        gbc.writeMem(0x2ada, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x186a);
        EXPECT(gbc.pc(), 0x2adc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 004D
        gbc.setState(0x9467, 0x4f11, 0xc870, 0xdb1b, 0x1a9d, 0x5413, 0x1, 0x0);
        gbc.writeMem(0x9467, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x4f11);
        EXPECT(gbc.pc(), 0x9469);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9467), 0xcb);
        EXPECT(gbc.readMem(0x9468), 0x12);
        // CB 12 004E
        gbc.setState(0xb96f, 0xa098, 0x5a0, 0x9bf8, 0xd1df, 0x44b0, 0x1, 0x1);
        gbc.writeMem(0xb96f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xa098);
        EXPECT(gbc.pc(), 0xb971);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb96f), 0xcb);
        EXPECT(gbc.readMem(0xb970), 0x12);
        // CB 12 004F
        gbc.setState(0xc5b, 0xdba3, 0x56a0, 0x5571, 0xe7ab, 0x7907, 0x1, 0x0);
        gbc.writeMem(0xc5b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xdba3);
        EXPECT(gbc.pc(), 0xc5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0050
        gbc.setState(0xe17d, 0xf407, 0x3df0, 0x6e63, 0xaab1, 0xb83b, 0x0, 0x0);
        gbc.writeMem(0xe17d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xf407);
        EXPECT(gbc.pc(), 0xe17f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe17d), 0xcb);
        EXPECT(gbc.readMem(0xe17e), 0x12);
        // CB 12 0051
        gbc.setState(0x7d88, 0x70eb, 0x6050, 0x628d, 0x1986, 0x2e8f, 0x0, 0x1);
        gbc.writeMem(0x7d88, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x70eb);
        EXPECT(gbc.pc(), 0x7d8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0052
        gbc.setState(0x3d2b, 0x7503, 0xa240, 0xa070, 0x65cb, 0xb5d6, 0x0, 0x1);
        gbc.writeMem(0x3d2b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x7503);
        EXPECT(gbc.pc(), 0x3d2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0053
        gbc.setState(0xe361, 0x43ed, 0x4ce0, 0xb28f, 0xa14b, 0xa097, 0x1, 0x1);
        gbc.writeMem(0xe361, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x43ed);
        EXPECT(gbc.pc(), 0xe363);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe361), 0xcb);
        EXPECT(gbc.readMem(0xe362), 0x12);
        // CB 12 0054
        gbc.setState(0xd2d6, 0xd3a3, 0x1ac0, 0xc1d8, 0x4e76, 0x4448, 0x1, 0x0);
        gbc.writeMem(0xd2d6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xd3a3);
        EXPECT(gbc.pc(), 0xd2d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2d6), 0xcb);
        EXPECT(gbc.readMem(0xd2d7), 0x12);
        // CB 12 0055
        gbc.setState(0x87b7, 0xe22c, 0x18d0, 0x96ae, 0x3b8c, 0xac6, 0x0, 0x0);
        gbc.writeMem(0x87b7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xe22c);
        EXPECT(gbc.pc(), 0x87b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87b7), 0xcb);
        EXPECT(gbc.readMem(0x87b8), 0x12);
        // CB 12 0056
        gbc.setState(0x25db, 0x9e25, 0x3a30, 0x6844, 0x912c, 0x8535, 0x0, 0x1);
        gbc.writeMem(0x25db, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x9e25);
        EXPECT(gbc.pc(), 0x25dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0057
        gbc.setState(0x6242, 0xcd50, 0x3c40, 0xae7b, 0xc793, 0x1303, 0x0, 0x0);
        gbc.writeMem(0x6242, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xcd50);
        EXPECT(gbc.pc(), 0x6244);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0058
        gbc.setState(0x5afe, 0x89a6, 0x8a30, 0xb73d, 0x60f1, 0x111, 0x0, 0x1);
        gbc.writeMem(0x5afe, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x89a6);
        EXPECT(gbc.pc(), 0x5b00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0059
        gbc.setState(0xdfbd, 0x1adc, 0xb60, 0xf0e, 0xd551, 0x5289, 0x0, 0x1);
        gbc.writeMem(0xdfbd, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1adc);
        EXPECT(gbc.pc(), 0xdfbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfbd), 0xcb);
        EXPECT(gbc.readMem(0xdfbe), 0x12);
        // CB 12 005A
        gbc.setState(0x6d8f, 0x135f, 0xeec0, 0x55b6, 0xa5a3, 0xff77, 0x0, 0x0);
        gbc.writeMem(0x6d8f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x135f);
        EXPECT(gbc.pc(), 0x6d91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 005B
        gbc.setState(0xc8c0, 0x16cf, 0xaf0, 0x61d8, 0x903, 0x75b5, 0x1, 0x1);
        gbc.writeMem(0xc8c0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x16cf);
        EXPECT(gbc.pc(), 0xc8c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8c0), 0xcb);
        EXPECT(gbc.readMem(0xc8c1), 0x12);
        // CB 12 005C
        gbc.setState(0xad90, 0xcaca, 0xb410, 0xc8df, 0x4038, 0xa388, 0x0, 0x0);
        gbc.writeMem(0xad90, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xcaca);
        EXPECT(gbc.pc(), 0xad92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad90), 0xcb);
        EXPECT(gbc.readMem(0xad91), 0x12);
        // CB 12 005D
        gbc.setState(0x2b4a, 0x6a79, 0x4e0, 0x60fc, 0xf1b2, 0xce32, 0x0, 0x1);
        gbc.writeMem(0x2b4a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x6a79);
        EXPECT(gbc.pc(), 0x2b4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 005E
        gbc.setState(0x2772, 0x79d, 0x7470, 0xebcb, 0x66c1, 0xcfe8, 0x1, 0x1);
        gbc.writeMem(0x2772, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x79d);
        EXPECT(gbc.pc(), 0x2774);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0060
        gbc.setState(0xbfee, 0x3d5b, 0x6c80, 0x67b1, 0x674, 0x64fb, 0x0, 0x1);
        gbc.writeMem(0xbfee, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x3d5b);
        EXPECT(gbc.pc(), 0xbff0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfee), 0xcb);
        EXPECT(gbc.readMem(0xbfef), 0x12);
        // CB 12 0061
        gbc.setState(0xe850, 0x556e, 0x6c70, 0xcdea, 0xa4d7, 0x7ecb, 0x0, 0x0);
        gbc.writeMem(0xe850, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x556e);
        EXPECT(gbc.pc(), 0xe852);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe850), 0xcb);
        EXPECT(gbc.readMem(0xe851), 0x12);
        // CB 12 0062
        gbc.setState(0x8378, 0x1b36, 0x5330, 0xbe1a, 0xb20, 0xe29e, 0x0, 0x1);
        gbc.writeMem(0x8378, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x1b36);
        EXPECT(gbc.pc(), 0x837a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8378), 0xcb);
        EXPECT(gbc.readMem(0x8379), 0x12);
        // CB 12 0063
        gbc.setState(0x1b30, 0x76cd, 0xb6d0, 0x822c, 0x7aed, 0xf966, 0x0, 0x0);
        gbc.writeMem(0x1b30, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x76cd);
        EXPECT(gbc.pc(), 0x1b32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0064
        gbc.setState(0x5926, 0x9f85, 0x6850, 0x4c6d, 0x126e, 0x6b1d, 0x0, 0x0);
        gbc.writeMem(0x5926, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x9f85);
        EXPECT(gbc.pc(), 0x5928);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0065
        gbc.setState(0xa7eb, 0x69ec, 0x9420, 0xf35b, 0x9269, 0x8f4b, 0x1, 0x0);
        gbc.writeMem(0xa7eb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x69ec);
        EXPECT(gbc.pc(), 0xa7ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7eb), 0xcb);
        EXPECT(gbc.readMem(0xa7ec), 0x12);
        // CB 12 0066
        gbc.setState(0xc81, 0xeab1, 0x2930, 0xeecd, 0x65fe, 0xe562, 0x1, 0x0);
        gbc.writeMem(0xc81, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xeab1);
        EXPECT(gbc.pc(), 0xc83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0067
        gbc.setState(0x9551, 0xb122, 0x34c0, 0x6355, 0x7537, 0xd26c, 0x0, 0x1);
        gbc.writeMem(0x9551, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xb122);
        EXPECT(gbc.pc(), 0x9553);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9551), 0xcb);
        EXPECT(gbc.readMem(0x9552), 0x12);
        // CB 12 0068
        gbc.setState(0x36f3, 0xb9df, 0x5a70, 0x6543, 0x9038, 0x37d3, 0x1, 0x1);
        gbc.writeMem(0x36f3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb9df);
        EXPECT(gbc.pc(), 0x36f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0069
        gbc.setState(0x7812, 0x6996, 0xf7c0, 0xb31e, 0xe5c1, 0x6425, 0x0, 0x1);
        gbc.writeMem(0x7812, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x6996);
        EXPECT(gbc.pc(), 0x7814);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 006A
        gbc.setState(0x56, 0xc525, 0xc3d0, 0x665f, 0x434b, 0xafa9, 0x0, 0x0);
        gbc.writeMem(0x56, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xc525);
        EXPECT(gbc.pc(), 0x58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 006B
        gbc.setState(0x14c3, 0xbf0f, 0x1540, 0xdad6, 0x2ef2, 0x107, 0x1, 0x0);
        gbc.writeMem(0x14c3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xbf0f);
        EXPECT(gbc.pc(), 0x14c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 006E
        gbc.setState(0xe1b, 0x4343, 0xbb20, 0x4bea, 0x2333, 0x2bd7, 0x1, 0x1);
        gbc.writeMem(0xe1b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x4343);
        EXPECT(gbc.pc(), 0xe1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 006F
        gbc.setState(0x5854, 0x3ec6, 0xfaa0, 0xe53a, 0xe23c, 0xf52, 0x0, 0x0);
        gbc.writeMem(0x5854, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x3ec6);
        EXPECT(gbc.pc(), 0x5856);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0070
        gbc.setState(0x3d2b, 0xb20e, 0xb7c0, 0x966e, 0x6347, 0x8843, 0x0, 0x1);
        gbc.writeMem(0x3d2b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb20e);
        EXPECT(gbc.pc(), 0x3d2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0072
        gbc.setState(0x1e83, 0x7e3b, 0xc090, 0x8fe7, 0x6776, 0x390f, 0x0, 0x1);
        gbc.writeMem(0x1e83, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7e3b);
        EXPECT(gbc.pc(), 0x1e85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0073
        gbc.setState(0xa038, 0x7dde, 0x170, 0xe701, 0x39b6, 0x6add, 0x0, 0x1);
        gbc.writeMem(0xa038, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x7dde);
        EXPECT(gbc.pc(), 0xa03a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa038), 0xcb);
        EXPECT(gbc.readMem(0xa039), 0x12);
        // CB 12 0074
        gbc.setState(0xdc03, 0x8efa, 0x5580, 0x1c0d, 0x1055, 0xb45f, 0x1, 0x1);
        gbc.writeMem(0xdc03, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x8efa);
        EXPECT(gbc.pc(), 0xdc05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc03), 0xcb);
        EXPECT(gbc.readMem(0xdc04), 0x12);
        // CB 12 0075
        gbc.setState(0xe6d6, 0x834d, 0x4d60, 0x2571, 0x8dd8, 0xf4c6, 0x0, 0x0);
        gbc.writeMem(0xe6d6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x834d);
        EXPECT(gbc.pc(), 0xe6d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6d6), 0xcb);
        EXPECT(gbc.readMem(0xe6d7), 0x12);
        // CB 12 0076
        gbc.setState(0xd4bc, 0xbfd1, 0x7bf0, 0x5b1d, 0xf37a, 0xc222, 0x0, 0x1);
        gbc.writeMem(0xd4bc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xbfd1);
        EXPECT(gbc.pc(), 0xd4be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4bc), 0xcb);
        EXPECT(gbc.readMem(0xd4bd), 0x12);
        // CB 12 0077
        gbc.setState(0x12db, 0x4573, 0x5990, 0x25cd, 0xf705, 0xcc92, 0x0, 0x0);
        gbc.writeMem(0x12db, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x4573);
        EXPECT(gbc.pc(), 0x12dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0078
        gbc.setState(0xa9c0, 0x51e5, 0x5740, 0x3d73, 0x8603, 0x1d8d, 0x0, 0x1);
        gbc.writeMem(0xa9c0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x51e5);
        EXPECT(gbc.pc(), 0xa9c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9c0), 0xcb);
        EXPECT(gbc.readMem(0xa9c1), 0x12);
        // CB 12 0079
        gbc.setState(0x9659, 0x6e32, 0xce00, 0x73e3, 0x7ec3, 0xf554, 0x1, 0x0);
        gbc.writeMem(0x9659, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x6e32);
        EXPECT(gbc.pc(), 0x965b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9659), 0xcb);
        EXPECT(gbc.readMem(0x965a), 0x12);
        // CB 12 007A
        gbc.setState(0x6c53, 0x98e7, 0xaa20, 0x95af, 0x3306, 0x313b, 0x0, 0x1);
        gbc.writeMem(0x6c53, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x98e7);
        EXPECT(gbc.pc(), 0x6c55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 007B
        gbc.setState(0xd339, 0xae52, 0x83f0, 0x71d0, 0xddcb, 0x8fb3, 0x0, 0x0);
        gbc.writeMem(0xd339, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xae52);
        EXPECT(gbc.pc(), 0xd33b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd339), 0xcb);
        EXPECT(gbc.readMem(0xd33a), 0x12);
        // CB 12 007C
        gbc.setState(0xd469, 0xf79, 0x7b70, 0xfd22, 0x7ea2, 0xe62, 0x0, 0x1);
        gbc.writeMem(0xd469, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf79);
        EXPECT(gbc.pc(), 0xd46b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd469), 0xcb);
        EXPECT(gbc.readMem(0xd46a), 0x12);
        // CB 12 007D
        gbc.setState(0xe287, 0x8dce, 0xf150, 0xc5f1, 0x36e6, 0xd0e1, 0x0, 0x1);
        gbc.writeMem(0xe287, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x8dce);
        EXPECT(gbc.pc(), 0xe289);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe287), 0xcb);
        EXPECT(gbc.readMem(0xe288), 0x12);
        // CB 12 007E
        gbc.setState(0x1aa9, 0x3484, 0x7700, 0x691a, 0x516e, 0xbdd9, 0x0, 0x0);
        gbc.writeMem(0x1aa9, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x3484);
        EXPECT(gbc.pc(), 0x1aab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 007F
        gbc.setState(0x27a1, 0x60d3, 0x4c20, 0x235, 0x7019, 0xf241, 0x0, 0x1);
        gbc.writeMem(0x27a1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x60d3);
        EXPECT(gbc.pc(), 0x27a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0080
        gbc.setState(0x2583, 0x24c0, 0xcfd0, 0xffcc, 0xa7c0, 0x35af, 0x1, 0x1);
        gbc.writeMem(0x2583, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x24c0);
        EXPECT(gbc.pc(), 0x2585);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0081
        gbc.setState(0x48fb, 0xed25, 0x26a0, 0x7f36, 0xe918, 0xd9cb, 0x0, 0x0);
        gbc.writeMem(0x48fb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xed25);
        EXPECT(gbc.pc(), 0x48fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0082
        gbc.setState(0xa60f, 0xcdf5, 0x9610, 0xc075, 0x4a84, 0xa1d1, 0x0, 0x0);
        gbc.writeMem(0xa60f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xcdf5);
        EXPECT(gbc.pc(), 0xa611);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa60f), 0xcb);
        EXPECT(gbc.readMem(0xa610), 0x12);
        // CB 12 0083
        gbc.setState(0xa452, 0x1c01, 0x4300, 0xd9b1, 0x5a04, 0x3d60, 0x1, 0x1);
        gbc.writeMem(0xa452, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x1c01);
        EXPECT(gbc.pc(), 0xa454);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa452), 0xcb);
        EXPECT(gbc.readMem(0xa453), 0x12);
        // CB 12 0084
        gbc.setState(0xc43f, 0x7728, 0xafb0, 0x9fcb, 0xa76d, 0x3aae, 0x1, 0x1);
        gbc.writeMem(0xc43f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x7728);
        EXPECT(gbc.pc(), 0xc441);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc43f), 0xcb);
        EXPECT(gbc.readMem(0xc440), 0x12);
        // CB 12 0086
        gbc.setState(0x1f64, 0xd461, 0x6c20, 0x750f, 0xc18d, 0x65b3, 0x1, 0x0);
        gbc.writeMem(0x1f64, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xd461);
        EXPECT(gbc.pc(), 0x1f66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0088
        gbc.setState(0x9d14, 0x8066, 0xe330, 0xdfe4, 0x922f, 0x84a4, 0x1, 0x1);
        gbc.writeMem(0x9d14, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x8066);
        EXPECT(gbc.pc(), 0x9d16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d14), 0xcb);
        EXPECT(gbc.readMem(0x9d15), 0x12);
        // CB 12 0089
        gbc.setState(0xe73a, 0xbc91, 0x5850, 0x788c, 0xcfef, 0x3f46, 0x1, 0x1);
        gbc.writeMem(0xe73a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xbc91);
        EXPECT(gbc.pc(), 0xe73c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe73a), 0xcb);
        EXPECT(gbc.readMem(0xe73b), 0x12);
        // CB 12 008A
        gbc.setState(0x7b9a, 0x3342, 0xd540, 0x3c70, 0xc723, 0x7cc6, 0x1, 0x0);
        gbc.writeMem(0x7b9a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x3342);
        EXPECT(gbc.pc(), 0x7b9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 008B
        gbc.setState(0x91a7, 0x21a, 0xd8f0, 0xede8, 0x2870, 0xcb7c, 0x0, 0x0);
        gbc.writeMem(0x91a7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x21a);
        EXPECT(gbc.pc(), 0x91a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91a7), 0xcb);
        EXPECT(gbc.readMem(0x91a8), 0x12);
        // CB 12 008C
        gbc.setState(0x476f, 0x900e, 0x8db0, 0xb2b5, 0x1fe7, 0xccc8, 0x1, 0x1);
        gbc.writeMem(0x476f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x900e);
        EXPECT(gbc.pc(), 0x4771);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 008D
        gbc.setState(0xc69c, 0x105b, 0xd690, 0x30ef, 0x6ac7, 0x704a, 0x0, 0x1);
        gbc.writeMem(0xc69c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x105b);
        EXPECT(gbc.pc(), 0xc69e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc69c), 0xcb);
        EXPECT(gbc.readMem(0xc69d), 0x12);
        // CB 12 008F
        gbc.setState(0x216e, 0x2d3e, 0xd580, 0xb718, 0xadc9, 0x6f9f, 0x0, 0x1);
        gbc.writeMem(0x216e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x2d3e);
        EXPECT(gbc.pc(), 0x2170);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0090
        gbc.setState(0x1cf5, 0xe850, 0x6820, 0x351a, 0x95, 0x7895, 0x0, 0x0);
        gbc.writeMem(0x1cf5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xe850);
        EXPECT(gbc.pc(), 0x1cf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0091
        gbc.setState(0x6e0d, 0x3d00, 0x580, 0x6e61, 0x46c6, 0xf78e, 0x0, 0x0);
        gbc.writeMem(0x6e0d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x3d00);
        EXPECT(gbc.pc(), 0x6e0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0092
        gbc.setState(0x3dd1, 0x8de, 0xaeb0, 0x3664, 0xf813, 0x24bd, 0x1, 0x1);
        gbc.writeMem(0x3dd1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x8de);
        EXPECT(gbc.pc(), 0x3dd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0093
        gbc.setState(0xbc19, 0x8205, 0x8320, 0x3eaa, 0x5557, 0xaf3e, 0x0, 0x1);
        gbc.writeMem(0xbc19, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8205);
        EXPECT(gbc.pc(), 0xbc1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc19), 0xcb);
        EXPECT(gbc.readMem(0xbc1a), 0x12);
        // CB 12 0094
        gbc.setState(0x7b42, 0xefc8, 0x76f0, 0xc899, 0x7ae2, 0xb9f1, 0x0, 0x1);
        gbc.writeMem(0x7b42, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xefc8);
        EXPECT(gbc.pc(), 0x7b44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0095
        gbc.setState(0x9ff8, 0x994f, 0x2a80, 0xc982, 0xa2de, 0xf8d6, 0x1, 0x0);
        gbc.writeMem(0x9ff8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x994f);
        EXPECT(gbc.pc(), 0x9ffa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ff8), 0xcb);
        EXPECT(gbc.readMem(0x9ff9), 0x12);
        // CB 12 0096
        gbc.setState(0x616c, 0x7d8a, 0x6150, 0xfcf2, 0x95d5, 0xad62, 0x0, 0x0);
        gbc.writeMem(0x616c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x7d8a);
        EXPECT(gbc.pc(), 0x616e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0097
        gbc.setState(0x7d41, 0xa78f, 0x9d60, 0x6783, 0x2e15, 0x2b44, 0x1, 0x0);
        gbc.writeMem(0x7d41, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xa78f);
        EXPECT(gbc.pc(), 0x7d43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0098
        gbc.setState(0x2297, 0xa430, 0xf140, 0x1475, 0xbc17, 0x587c, 0x0, 0x0);
        gbc.writeMem(0x2297, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xa430);
        EXPECT(gbc.pc(), 0x2299);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0099
        gbc.setState(0x6e6c, 0x2010, 0x50e0, 0x3696, 0x93ff, 0xa041, 0x0, 0x0);
        gbc.writeMem(0x6e6c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x2010);
        EXPECT(gbc.pc(), 0x6e6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 009A
        gbc.setState(0x2dd8, 0x7c72, 0x52e0, 0xdf87, 0xd359, 0x9ef6, 0x1, 0x1);
        gbc.writeMem(0x2dd8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7c72);
        EXPECT(gbc.pc(), 0x2dda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 009B
        gbc.setState(0xe18c, 0x4a0d, 0x5300, 0x7fbc, 0x69ed, 0xbdc7, 0x0, 0x1);
        gbc.writeMem(0xe18c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x4a0d);
        EXPECT(gbc.pc(), 0xe18e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe18c), 0xcb);
        EXPECT(gbc.readMem(0xe18d), 0x12);
        // CB 12 009D
        gbc.setState(0x62c, 0xe5fc, 0x1b10, 0xe0e4, 0x6074, 0x556a, 0x0, 0x0);
        gbc.writeMem(0x62c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe5fc);
        EXPECT(gbc.pc(), 0x62e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 009E
        gbc.setState(0x84fa, 0x19c2, 0xbff0, 0x3dbc, 0x3e66, 0x240a, 0x1, 0x1);
        gbc.writeMem(0x84fa, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x19c2);
        EXPECT(gbc.pc(), 0x84fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84fa), 0xcb);
        EXPECT(gbc.readMem(0x84fb), 0x12);
        // CB 12 009F
        gbc.setState(0xbb10, 0x55b0, 0x25a0, 0x86e3, 0xfc00, 0x58ca, 0x0, 0x0);
        gbc.writeMem(0xbb10, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x55b0);
        EXPECT(gbc.pc(), 0xbb12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb10), 0xcb);
        EXPECT(gbc.readMem(0xbb11), 0x12);
        // CB 12 00A0
        gbc.setState(0x47b4, 0xda6f, 0x9cc0, 0xf2a2, 0x9fad, 0x1fa9, 0x0, 0x1);
        gbc.writeMem(0x47b4, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xda6f);
        EXPECT(gbc.pc(), 0x47b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 00A1
        gbc.setState(0x4339, 0xf1de, 0xc180, 0xcbb3, 0x537, 0xd4f1, 0x1, 0x1);
        gbc.writeMem(0x4339, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xf1de);
        EXPECT(gbc.pc(), 0x433b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 00A2
        gbc.setState(0x384f, 0x3342, 0xe0a0, 0x8a0e, 0x8c29, 0x6f79, 0x1, 0x0);
        gbc.writeMem(0x384f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x3342);
        EXPECT(gbc.pc(), 0x3851);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 00A3
        gbc.setState(0xde85, 0xb5ee, 0x55b0, 0x5f2c, 0x362c, 0xf86a, 0x1, 0x1);
        gbc.writeMem(0xde85, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb5ee);
        EXPECT(gbc.pc(), 0xde87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde85), 0xcb);
        EXPECT(gbc.readMem(0xde86), 0x12);
        // CB 12 00A4
        gbc.setState(0xaa2c, 0xe43a, 0x9d90, 0x7787, 0xcb10, 0x302b, 0x0, 0x0);
        gbc.writeMem(0xaa2c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xe43a);
        EXPECT(gbc.pc(), 0xaa2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa2c), 0xcb);
        EXPECT(gbc.readMem(0xaa2d), 0x12);
        // CB 12 00A5
        gbc.setState(0xd709, 0x5537, 0x41a0, 0x6835, 0x84d3, 0x4ab4, 0x0, 0x1);
        gbc.writeMem(0xd709, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x5537);
        EXPECT(gbc.pc(), 0xd70b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd709), 0xcb);
        EXPECT(gbc.readMem(0xd70a), 0x12);
        // CB 12 00A6
        gbc.setState(0xa433, 0x2600, 0xd510, 0x9e81, 0x332f, 0xe4a9, 0x0, 0x0);
        gbc.writeMem(0xa433, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x2600);
        EXPECT(gbc.pc(), 0xa435);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa433), 0xcb);
        EXPECT(gbc.readMem(0xa434), 0x12);
        // CB 12 00A8
        gbc.setState(0x44, 0x5ab4, 0xf000, 0xd8e8, 0x2652, 0xbf42, 0x0, 0x1);
        gbc.writeMem(0x44, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5ab4);
        EXPECT(gbc.pc(), 0x46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 00A9
        gbc.setState(0xe3c3, 0x1fda, 0x3590, 0xf477, 0x6edb, 0xaac2, 0x0, 0x0);
        gbc.writeMem(0xe3c3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x1fda);
        EXPECT(gbc.pc(), 0xe3c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3c3), 0xcb);
        EXPECT(gbc.readMem(0xe3c4), 0x12);
        // CB 12 00AA
        gbc.setState(0x908a, 0x45d4, 0x5b70, 0x89ae, 0x138, 0x282e, 0x1, 0x0);
        gbc.writeMem(0x908a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x45d4);
        EXPECT(gbc.pc(), 0x908c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x908a), 0xcb);
        EXPECT(gbc.readMem(0x908b), 0x12);
        // CB 12 00AB
        gbc.setState(0xe798, 0xab44, 0x3da0, 0x318c, 0x2e2b, 0x6488, 0x0, 0x1);
        gbc.writeMem(0xe798, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xab44);
        EXPECT(gbc.pc(), 0xe79a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe798), 0xcb);
        EXPECT(gbc.readMem(0xe799), 0x12);
        // CB 12 00AC
        gbc.setState(0xdafb, 0x5794, 0x50f0, 0xc2de, 0x8da, 0xf02b, 0x0, 0x0);
        gbc.writeMem(0xdafb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x5794);
        EXPECT(gbc.pc(), 0xdafd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdafb), 0xcb);
        EXPECT(gbc.readMem(0xdafc), 0x12);
        // CB 12 00AD
        gbc.setState(0x2a5e, 0xac0d, 0x27f0, 0xae3a, 0xd077, 0xf8c0, 0x1, 0x0);
        gbc.writeMem(0x2a5e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xac0d);
        EXPECT(gbc.pc(), 0x2a60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 00AE
        gbc.setState(0x2024, 0x15f3, 0x2f60, 0xfebd, 0x9f8b, 0x3400, 0x0, 0x0);
        gbc.writeMem(0x2024, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x15f3);
        EXPECT(gbc.pc(), 0x2026);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 00AF
        gbc.setState(0x6594, 0x9ecf, 0xd920, 0x2450, 0xf730, 0x9834, 0x1, 0x1);
        gbc.writeMem(0x6594, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9ecf);
        EXPECT(gbc.pc(), 0x6596);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 00B0
        gbc.setState(0xcf8a, 0x51ec, 0xa430, 0x3f25, 0xa9c5, 0x1b73, 0x0, 0x1);
        gbc.writeMem(0xcf8a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x51ec);
        EXPECT(gbc.pc(), 0xcf8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf8a), 0xcb);
        EXPECT(gbc.readMem(0xcf8b), 0x12);
        // CB 12 00B1
        gbc.setState(0x2497, 0x8068, 0x70c0, 0xf0a7, 0x8c8b, 0x3e03, 0x1, 0x0);
        gbc.writeMem(0x2497, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x8068);
        EXPECT(gbc.pc(), 0x2499);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 00B2
        gbc.setState(0xcb07, 0xb105, 0x2680, 0x4f2e, 0xceda, 0x5135, 0x0, 0x0);
        gbc.writeMem(0xcb07, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xb105);
        EXPECT(gbc.pc(), 0xcb09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb07), 0xcb);
        EXPECT(gbc.readMem(0xcb08), 0x12);
        // CB 12 00B3
        gbc.setState(0x6403, 0x410a, 0x7800, 0xa854, 0xc9b8, 0x3fd, 0x0, 0x0);
        gbc.writeMem(0x6403, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x410a);
        EXPECT(gbc.pc(), 0x6405);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 00B4
        gbc.setState(0xea7e, 0x4ddb, 0xd8f0, 0x57ff, 0xcb22, 0xc8e8, 0x0, 0x0);
        gbc.writeMem(0xea7e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4ddb);
        EXPECT(gbc.pc(), 0xea80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea7e), 0xcb);
        EXPECT(gbc.readMem(0xea7f), 0x12);
        // CB 12 00B5
        gbc.setState(0xcd3e, 0x8ae4, 0xe4d0, 0x106a, 0x1bd3, 0x67c, 0x1, 0x0);
        gbc.writeMem(0xcd3e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x8ae4);
        EXPECT(gbc.pc(), 0xcd40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd3e), 0xcb);
        EXPECT(gbc.readMem(0xcd3f), 0x12);
        // CB 12 00B6
        gbc.setState(0x974f, 0x1f20, 0xce80, 0xfb6, 0x4222, 0x749d, 0x0, 0x1);
        gbc.writeMem(0x974f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x1f20);
        EXPECT(gbc.pc(), 0x9751);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x974f), 0xcb);
        EXPECT(gbc.readMem(0x9750), 0x12);
        // CB 12 00B8
        gbc.setState(0x3891, 0x9f85, 0xf7b0, 0x98d1, 0x5c05, 0x757c, 0x0, 0x0);
        gbc.writeMem(0x3891, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x9f85);
        EXPECT(gbc.pc(), 0x3893);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 00BA
        gbc.setState(0x86, 0xe278, 0x5690, 0x24b, 0x2032, 0x9f99, 0x0, 0x0);
        gbc.writeMem(0x86, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xe278);
        EXPECT(gbc.pc(), 0x88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 00BB
        gbc.setState(0x64fe, 0x21d3, 0xfa40, 0xd260, 0x2aa4, 0x21c1, 0x1, 0x0);
        gbc.writeMem(0x64fe, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x21d3);
        EXPECT(gbc.pc(), 0x6500);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 00BC
        gbc.setState(0x90d1, 0xdb42, 0x3100, 0xf1fe, 0x9c51, 0xec02, 0x0, 0x1);
        gbc.writeMem(0x90d1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xdb42);
        EXPECT(gbc.pc(), 0x90d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90d1), 0xcb);
        EXPECT(gbc.readMem(0x90d2), 0x12);
        // CB 12 00BD
        gbc.setState(0x384d, 0x1429, 0x4b40, 0xa4e7, 0xd227, 0x494e, 0x1, 0x0);
        gbc.writeMem(0x384d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x1429);
        EXPECT(gbc.pc(), 0x384f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 00BE
        gbc.setState(0x38d7, 0x44c8, 0xe490, 0x5eb8, 0xc5ce, 0x1706, 0x0, 0x0);
        gbc.writeMem(0x38d7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x44c8);
        EXPECT(gbc.pc(), 0x38d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 00C0
        gbc.setState(0x8e2e, 0xdb56, 0x4d70, 0xaf58, 0x50b5, 0x84ac, 0x0, 0x1);
        gbc.writeMem(0x8e2e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xdb56);
        EXPECT(gbc.pc(), 0x8e30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e2e), 0xcb);
        EXPECT(gbc.readMem(0x8e2f), 0x12);
        // CB 12 00C1
        gbc.setState(0x5b8f, 0x9907, 0x8b10, 0x9686, 0xa9d0, 0xea96, 0x1, 0x1);
        gbc.writeMem(0x5b8f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x9907);
        EXPECT(gbc.pc(), 0x5b91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 00C2
        gbc.setState(0xe8c7, 0x54e1, 0x18f0, 0xfaf6, 0x1ee8, 0x9613, 0x1, 0x0);
        gbc.writeMem(0xe8c7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x54e1);
        EXPECT(gbc.pc(), 0xe8c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8c7), 0xcb);
        EXPECT(gbc.readMem(0xe8c8), 0x12);
        // CB 12 00C3
        gbc.setState(0xdeb6, 0x8cf8, 0xf2c0, 0xeda3, 0x62c7, 0x2e4c, 0x1, 0x0);
        gbc.writeMem(0xdeb6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x8cf8);
        EXPECT(gbc.pc(), 0xdeb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeb6), 0xcb);
        EXPECT(gbc.readMem(0xdeb7), 0x12);
        // CB 12 00C4
        gbc.setState(0x70f0, 0xdc, 0x1880, 0x3f69, 0x62d6, 0x9cc7, 0x1, 0x1);
        gbc.writeMem(0x70f0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xdc);
        EXPECT(gbc.pc(), 0x70f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 00C5
        gbc.setState(0xc163, 0x1b4f, 0xe130, 0x4d86, 0xb590, 0x3e40, 0x1, 0x0);
        gbc.writeMem(0xc163, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1b4f);
        EXPECT(gbc.pc(), 0xc165);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc163), 0xcb);
        EXPECT(gbc.readMem(0xc164), 0x12);
        // CB 12 00C6
        gbc.setState(0xeeeb, 0xe6ba, 0xa980, 0x5362, 0x3df0, 0xc36a, 0x1, 0x0);
        gbc.writeMem(0xeeeb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe6ba);
        EXPECT(gbc.pc(), 0xeeed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeeb), 0xcb);
        EXPECT(gbc.readMem(0xeeec), 0x12);
        // CB 12 00C7
        gbc.setState(0xb91b, 0x6e27, 0x1de0, 0x39ce, 0xb23d, 0xd90a, 0x1, 0x0);
        gbc.writeMem(0xb91b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x6e27);
        EXPECT(gbc.pc(), 0xb91d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb91b), 0xcb);
        EXPECT(gbc.readMem(0xb91c), 0x12);
        // CB 12 00C9
        gbc.setState(0xdb5a, 0xe3cf, 0x1e50, 0x978, 0x75a2, 0xe223, 0x0, 0x1);
        gbc.writeMem(0xdb5a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xe3cf);
        EXPECT(gbc.pc(), 0xdb5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb5a), 0xcb);
        EXPECT(gbc.readMem(0xdb5b), 0x12);
        // CB 12 00CA
        gbc.setState(0x9e2b, 0xa07c, 0x8e90, 0xa3f0, 0xdec1, 0x5f08, 0x1, 0x1);
        gbc.writeMem(0x9e2b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xa07c);
        EXPECT(gbc.pc(), 0x9e2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e2b), 0xcb);
        EXPECT(gbc.readMem(0x9e2c), 0x12);
        // CB 12 00CB
        gbc.setState(0x3a42, 0x1582, 0x95e0, 0xa840, 0x4be0, 0xef77, 0x0, 0x1);
        gbc.writeMem(0x3a42, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x1582);
        EXPECT(gbc.pc(), 0x3a44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 00CC
        gbc.setState(0x8f18, 0xcaa, 0x8ac0, 0x6592, 0x69ef, 0x3ffc, 0x1, 0x1);
        gbc.writeMem(0x8f18, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xcaa);
        EXPECT(gbc.pc(), 0x8f1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f18), 0xcb);
        EXPECT(gbc.readMem(0x8f19), 0x12);
        // CB 12 00CD
        gbc.setState(0x2999, 0xaf14, 0x5fc0, 0xb7eb, 0xaae8, 0x2f51, 0x0, 0x1);
        gbc.writeMem(0x2999, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xaf14);
        EXPECT(gbc.pc(), 0x299b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 00CE
        gbc.setState(0xb215, 0xe0d, 0x1740, 0xe808, 0x2e6a, 0xc03b, 0x0, 0x1);
        gbc.writeMem(0xb215, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xe0d);
        EXPECT(gbc.pc(), 0xb217);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb215), 0xcb);
        EXPECT(gbc.readMem(0xb216), 0x12);
        // CB 12 00CF
        gbc.setState(0x69a1, 0x9627, 0x9f50, 0xb017, 0xe485, 0x944d, 0x0, 0x1);
        gbc.writeMem(0x69a1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x9627);
        EXPECT(gbc.pc(), 0x69a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 00D1
        gbc.setState(0x294d, 0x41e6, 0x9dc0, 0x19ee, 0x228, 0x5759, 0x0, 0x0);
        gbc.writeMem(0x294d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x41e6);
        EXPECT(gbc.pc(), 0x294f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 00D2
        gbc.setState(0x4eb9, 0x99b, 0x74f0, 0xa3a2, 0xcd19, 0xe944, 0x1, 0x0);
        gbc.writeMem(0x4eb9, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x99b);
        EXPECT(gbc.pc(), 0x4ebb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 00D3
        gbc.setState(0x5f01, 0x18d6, 0xfa00, 0xe77c, 0x88ae, 0x665, 0x1, 0x1);
        gbc.writeMem(0x5f01, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x18d6);
        EXPECT(gbc.pc(), 0x5f03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 00D4
        gbc.setState(0x363e, 0xfe71, 0xbf50, 0xa0c0, 0x5f29, 0x813b, 0x1, 0x1);
        gbc.writeMem(0x363e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xfe71);
        EXPECT(gbc.pc(), 0x3640);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 00D5
        gbc.setState(0x8b4a, 0x26c1, 0x8450, 0x969b, 0x3f4a, 0xce99, 0x1, 0x1);
        gbc.writeMem(0x8b4a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x26c1);
        EXPECT(gbc.pc(), 0x8b4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b4a), 0xcb);
        EXPECT(gbc.readMem(0x8b4b), 0x12);
        // CB 12 00D6
        gbc.setState(0xddcc, 0xc6a2, 0x6c40, 0xac52, 0x22e, 0xae99, 0x0, 0x1);
        gbc.writeMem(0xddcc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xc6a2);
        EXPECT(gbc.pc(), 0xddce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddcc), 0xcb);
        EXPECT(gbc.readMem(0xddcd), 0x12);
        // CB 12 00D7
        gbc.setState(0x5767, 0x8a6b, 0xf6d0, 0x3c5a, 0x86a, 0xbb15, 0x1, 0x1);
        gbc.writeMem(0x5767, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x8a6b);
        EXPECT(gbc.pc(), 0x5769);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 00D8
        gbc.setState(0xa570, 0xc2e6, 0x3810, 0x3989, 0x3fb7, 0x14b1, 0x0, 0x0);
        gbc.writeMem(0xa570, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xc2e6);
        EXPECT(gbc.pc(), 0xa572);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa570), 0xcb);
        EXPECT(gbc.readMem(0xa571), 0x12);
        // CB 12 00D9
        gbc.setState(0x92e, 0x71e1, 0x16b0, 0x194d, 0x9680, 0x6f29, 0x1, 0x1);
        gbc.writeMem(0x92e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x71e1);
        EXPECT(gbc.pc(), 0x930);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 00DA
        gbc.setState(0x14e4, 0xeec3, 0xa6b0, 0x44d3, 0xce7b, 0xe171, 0x1, 0x1);
        gbc.writeMem(0x14e4, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xeec3);
        EXPECT(gbc.pc(), 0x14e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 00DB
        gbc.setState(0xa0a6, 0xf2e7, 0xf9c0, 0x148d, 0xa744, 0x4dda, 0x1, 0x0);
        gbc.writeMem(0xa0a6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xf2e7);
        EXPECT(gbc.pc(), 0xa0a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0a6), 0xcb);
        EXPECT(gbc.readMem(0xa0a7), 0x12);
        // CB 12 00DC
        gbc.setState(0x1713, 0x82a0, 0xd0c0, 0x9ecc, 0xccd5, 0x2654, 0x1, 0x1);
        gbc.writeMem(0x1713, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x82a0);
        EXPECT(gbc.pc(), 0x1715);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 00DD
        gbc.setState(0xaf9c, 0x62d7, 0x84c0, 0xaa96, 0xea24, 0x1822, 0x1, 0x0);
        gbc.writeMem(0xaf9c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x62d7);
        EXPECT(gbc.pc(), 0xaf9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf9c), 0xcb);
        EXPECT(gbc.readMem(0xaf9d), 0x12);
        // CB 12 00DE
        gbc.setState(0x8799, 0x21e5, 0x6a50, 0xe717, 0x6292, 0x3fb2, 0x1, 0x1);
        gbc.writeMem(0x8799, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x21e5);
        EXPECT(gbc.pc(), 0x879b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8799), 0xcb);
        EXPECT(gbc.readMem(0x879a), 0x12);
        // CB 12 00DF
        gbc.setState(0x48cc, 0x2952, 0x76a0, 0x3fce, 0xb3c8, 0xbc9c, 0x0, 0x0);
        gbc.writeMem(0x48cc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x2952);
        EXPECT(gbc.pc(), 0x48ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 00E0
        gbc.setState(0xc180, 0xe1fe, 0xf4e0, 0x733b, 0xf69b, 0xaf9e, 0x1, 0x0);
        gbc.writeMem(0xc180, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xe1fe);
        EXPECT(gbc.pc(), 0xc182);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc180), 0xcb);
        EXPECT(gbc.readMem(0xc181), 0x12);
        // CB 12 00E1
        gbc.setState(0x4cf3, 0x127f, 0x10a0, 0x5d73, 0xc9f8, 0x2bb2, 0x1, 0x1);
        gbc.writeMem(0x4cf3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x127f);
        EXPECT(gbc.pc(), 0x4cf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 00E2
        gbc.setState(0xcfd4, 0xad8c, 0xbed0, 0x937, 0x9eb4, 0x6131, 0x1, 0x0);
        gbc.writeMem(0xcfd4, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xad8c);
        EXPECT(gbc.pc(), 0xcfd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfd4), 0xcb);
        EXPECT(gbc.readMem(0xcfd5), 0x12);
        // CB 12 00E3
        gbc.setState(0xc040, 0x49e, 0xebe0, 0x6bed, 0xcdaf, 0xf3b4, 0x1, 0x1);
        gbc.writeMem(0xc040, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x49e);
        EXPECT(gbc.pc(), 0xc042);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc040), 0xcb);
        EXPECT(gbc.readMem(0xc041), 0x12);
        // CB 12 00E4
        gbc.setState(0xeefe, 0xc881, 0x4ac0, 0x2ee6, 0xf8ce, 0xf883, 0x1, 0x1);
        gbc.writeMem(0xeefe, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xc881);
        EXPECT(gbc.pc(), 0xef00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeefe), 0xcb);
        EXPECT(gbc.readMem(0xeeff), 0x12);
        // CB 12 00E5
        gbc.setState(0x733a, 0x49ed, 0x6870, 0x140e, 0x7aaa, 0xf2f4, 0x0, 0x1);
        gbc.writeMem(0x733a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x49ed);
        EXPECT(gbc.pc(), 0x733c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 00E6
        gbc.setState(0xd19, 0x118c, 0xcd60, 0xccdd, 0x4ddc, 0x68e0, 0x1, 0x1);
        gbc.writeMem(0xd19, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x118c);
        EXPECT(gbc.pc(), 0xd1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 00E7
        gbc.setState(0x202d, 0x39e8, 0xc740, 0xa023, 0x8a9e, 0x905a, 0x0, 0x1);
        gbc.writeMem(0x202d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x39e8);
        EXPECT(gbc.pc(), 0x202f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 00E8
        gbc.setState(0x7c06, 0x184e, 0x24b0, 0x1cc, 0x8ca5, 0xa243, 0x0, 0x1);
        gbc.writeMem(0x7c06, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x184e);
        EXPECT(gbc.pc(), 0x7c08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 00E9
        gbc.setState(0x7db8, 0x8fec, 0x30e0, 0x27e0, 0x9d39, 0x31c5, 0x1, 0x0);
        gbc.writeMem(0x7db8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x8fec);
        EXPECT(gbc.pc(), 0x7dba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 00EA
        gbc.setState(0xb798, 0x1ee0, 0xae70, 0x3f0f, 0x7ad0, 0x6d76, 0x0, 0x0);
        gbc.writeMem(0xb798, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x1ee0);
        EXPECT(gbc.pc(), 0xb79a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb798), 0xcb);
        EXPECT(gbc.readMem(0xb799), 0x12);
        // CB 12 00EB
        gbc.setState(0x4e2, 0xbfa1, 0x3740, 0x634, 0x9d23, 0xb69b, 0x1, 0x1);
        gbc.writeMem(0x4e2, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xbfa1);
        EXPECT(gbc.pc(), 0x4e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 00ED
        gbc.setState(0x2f79, 0x9c1, 0xcb40, 0xa1eb, 0xc088, 0xcce1, 0x0, 0x0);
        gbc.writeMem(0x2f79, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x9c1);
        EXPECT(gbc.pc(), 0x2f7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 00EE
        gbc.setState(0x4688, 0x2f24, 0x40b0, 0x7708, 0x522f, 0x5afe, 0x1, 0x0);
        gbc.writeMem(0x4688, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x2f24);
        EXPECT(gbc.pc(), 0x468a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 00EF
        gbc.setState(0x86fb, 0x283a, 0x5d80, 0xd4ef, 0xdb84, 0x27ba, 0x1, 0x0);
        gbc.writeMem(0x86fb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x283a);
        EXPECT(gbc.pc(), 0x86fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86fb), 0xcb);
        EXPECT(gbc.readMem(0x86fc), 0x12);
        // CB 12 00F0
        gbc.setState(0x1603, 0xc3c9, 0xbf70, 0x40ee, 0x6f21, 0x66a0, 0x1, 0x1);
        gbc.writeMem(0x1603, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xc3c9);
        EXPECT(gbc.pc(), 0x1605);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 00F1
        gbc.setState(0xbfee, 0x6bc7, 0xc240, 0x5c95, 0x4ed5, 0x6efa, 0x1, 0x0);
        gbc.writeMem(0xbfee, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6bc7);
        EXPECT(gbc.pc(), 0xbff0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfee), 0xcb);
        EXPECT(gbc.readMem(0xbfef), 0x12);
        // CB 12 00F2
        gbc.setState(0x959e, 0x4efc, 0x7130, 0x1107, 0x4b3e, 0x351b, 0x0, 0x0);
        gbc.writeMem(0x959e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x4efc);
        EXPECT(gbc.pc(), 0x95a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x959e), 0xcb);
        EXPECT(gbc.readMem(0x959f), 0x12);
        // CB 12 00F3
        gbc.setState(0xe9c2, 0x6778, 0xe050, 0xad22, 0x18c7, 0x53e4, 0x0, 0x1);
        gbc.writeMem(0xe9c2, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6778);
        EXPECT(gbc.pc(), 0xe9c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9c2), 0xcb);
        EXPECT(gbc.readMem(0xe9c3), 0x12);
        // CB 12 00F4
        gbc.setState(0x181a, 0x3c26, 0x2a50, 0x84f6, 0xe00, 0x5328, 0x0, 0x1);
        gbc.writeMem(0x181a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x3c26);
        EXPECT(gbc.pc(), 0x181c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 00F5
        gbc.setState(0x6110, 0x75f6, 0xc7a0, 0x179c, 0xc31d, 0xacfe, 0x0, 0x1);
        gbc.writeMem(0x6110, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x75f6);
        EXPECT(gbc.pc(), 0x6112);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 00F6
        gbc.setState(0xd0ac, 0xfa5b, 0x1440, 0xe24a, 0xa259, 0x5017, 0x1, 0x1);
        gbc.writeMem(0xd0ac, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xfa5b);
        EXPECT(gbc.pc(), 0xd0ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0ac), 0xcb);
        EXPECT(gbc.readMem(0xd0ad), 0x12);
        // CB 12 00F8
        gbc.setState(0x92dc, 0x68d7, 0x2cb0, 0x67c1, 0x179f, 0x15ea, 0x1, 0x0);
        gbc.writeMem(0x92dc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x68d7);
        EXPECT(gbc.pc(), 0x92de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92dc), 0xcb);
        EXPECT(gbc.readMem(0x92dd), 0x12);
        // CB 12 00F9
        gbc.setState(0x2bef, 0x37d5, 0xc860, 0xf9c4, 0x82f9, 0x1989, 0x1, 0x0);
        gbc.writeMem(0x2bef, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x37d5);
        EXPECT(gbc.pc(), 0x2bf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 00FA
        gbc.setState(0x810a, 0xdfdc, 0xd720, 0x4b6f, 0x506b, 0x3ee7, 0x1, 0x0);
        gbc.writeMem(0x810a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xdfdc);
        EXPECT(gbc.pc(), 0x810c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x810a), 0xcb);
        EXPECT(gbc.readMem(0x810b), 0x12);
        // CB 12 00FB
        gbc.setState(0x4f0a, 0xe0f, 0xc350, 0xf48f, 0x597c, 0x5885, 0x0, 0x1);
        gbc.writeMem(0x4f0a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xe0f);
        EXPECT(gbc.pc(), 0x4f0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 00FC
        gbc.setState(0x9d30, 0xa7e1, 0x7a60, 0x3423, 0x5941, 0x57ad, 0x0, 0x0);
        gbc.writeMem(0x9d30, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xa7e1);
        EXPECT(gbc.pc(), 0x9d32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d30), 0xcb);
        EXPECT(gbc.readMem(0x9d31), 0x12);
        // CB 12 00FD
        gbc.setState(0x302c, 0x55be, 0xe770, 0xd1c6, 0x3045, 0xbe44, 0x1, 0x1);
        gbc.writeMem(0x302c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x55be);
        EXPECT(gbc.pc(), 0x302e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 00FE
        gbc.setState(0x69bf, 0x23e4, 0xa0f0, 0x2aa2, 0xc826, 0x57c9, 0x0, 0x1);
        gbc.writeMem(0x69bf, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x23e4);
        EXPECT(gbc.pc(), 0x69c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 00FF
        gbc.setState(0xb89f, 0x5cf9, 0x50f0, 0x7df4, 0xd2a4, 0x79cb, 0x0, 0x1);
        gbc.writeMem(0xb89f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x5cf9);
        EXPECT(gbc.pc(), 0xb8a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb89f), 0xcb);
        EXPECT(gbc.readMem(0xb8a0), 0x12);
        // CB 12 0100
        gbc.setState(0xcb1c, 0xf1c9, 0x9c70, 0xff34, 0x9bca, 0x5cb, 0x0, 0x1);
        gbc.writeMem(0xcb1c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xf1c9);
        EXPECT(gbc.pc(), 0xcb1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb1c), 0xcb);
        EXPECT(gbc.readMem(0xcb1d), 0x12);
        // CB 12 0101
        gbc.setState(0xb876, 0x7c14, 0xeba0, 0xb85e, 0x7288, 0xbda1, 0x0, 0x1);
        gbc.writeMem(0xb876, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x7c14);
        EXPECT(gbc.pc(), 0xb878);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb876), 0xcb);
        EXPECT(gbc.readMem(0xb877), 0x12);
        // CB 12 0102
        gbc.setState(0xe9f0, 0x2758, 0xaca0, 0x6231, 0x4936, 0xeea7, 0x1, 0x1);
        gbc.writeMem(0xe9f0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x2758);
        EXPECT(gbc.pc(), 0xe9f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9f0), 0xcb);
        EXPECT(gbc.readMem(0xe9f1), 0x12);
        // CB 12 0103
        gbc.setState(0x16e, 0x9232, 0xbf20, 0xeb8d, 0x108c, 0x3c28, 0x0, 0x1);
        gbc.writeMem(0x16e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9232);
        EXPECT(gbc.pc(), 0x170);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0104
        gbc.setState(0x2a1b, 0xb752, 0xbcb0, 0x1383, 0x6f69, 0xffd0, 0x0, 0x0);
        gbc.writeMem(0x2a1b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xb752);
        EXPECT(gbc.pc(), 0x2a1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0105
        gbc.setState(0x8cc4, 0x1936, 0x8490, 0x9018, 0x77c8, 0x62ac, 0x1, 0x1);
        gbc.writeMem(0x8cc4, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x1936);
        EXPECT(gbc.pc(), 0x8cc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cc4), 0xcb);
        EXPECT(gbc.readMem(0x8cc5), 0x12);
        // CB 12 0106
        gbc.setState(0x7483, 0x5195, 0x7210, 0xe940, 0x9ae1, 0xd331, 0x1, 0x1);
        gbc.writeMem(0x7483, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x5195);
        EXPECT(gbc.pc(), 0x7485);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0107
        gbc.setState(0x3881, 0x419f, 0x4560, 0x5935, 0xf2c3, 0x731b, 0x1, 0x0);
        gbc.writeMem(0x3881, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x419f);
        EXPECT(gbc.pc(), 0x3883);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0108
        gbc.setState(0x8d6d, 0xf937, 0xc0c0, 0x6321, 0x47e7, 0xd6c6, 0x1, 0x1);
        gbc.writeMem(0x8d6d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xf937);
        EXPECT(gbc.pc(), 0x8d6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d6d), 0xcb);
        EXPECT(gbc.readMem(0x8d6e), 0x12);
        // CB 12 0109
        gbc.setState(0xe638, 0x26e6, 0x63d0, 0xa602, 0xd44c, 0x6c1d, 0x1, 0x1);
        gbc.writeMem(0xe638, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x26e6);
        EXPECT(gbc.pc(), 0xe63a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe638), 0xcb);
        EXPECT(gbc.readMem(0xe639), 0x12);
        // CB 12 010A
        gbc.setState(0x7c6b, 0x817e, 0xe9b0, 0x51a8, 0x85b6, 0x3a06, 0x1, 0x1);
        gbc.writeMem(0x7c6b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x817e);
        EXPECT(gbc.pc(), 0x7c6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 010C
        gbc.setState(0x98a5, 0x14c1, 0x8a30, 0x7bd9, 0xc5aa, 0x2ea1, 0x0, 0x0);
        gbc.writeMem(0x98a5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x14c1);
        EXPECT(gbc.pc(), 0x98a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98a5), 0xcb);
        EXPECT(gbc.readMem(0x98a6), 0x12);
        // CB 12 010D
        gbc.setState(0xaa95, 0xe186, 0x20a0, 0x2912, 0x6cbf, 0xda9, 0x0, 0x0);
        gbc.writeMem(0xaa95, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe186);
        EXPECT(gbc.pc(), 0xaa97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa95), 0xcb);
        EXPECT(gbc.readMem(0xaa96), 0x12);
        // CB 12 010E
        gbc.setState(0x2265, 0x7fe2, 0x61b0, 0xced, 0x1126, 0xacf, 0x0, 0x1);
        gbc.writeMem(0x2265, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x7fe2);
        EXPECT(gbc.pc(), 0x2267);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 010F
        gbc.setState(0xaf5e, 0x39bf, 0xffc0, 0xedd6, 0x7d8f, 0x53d6, 0x0, 0x0);
        gbc.writeMem(0xaf5e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x39bf);
        EXPECT(gbc.pc(), 0xaf60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf5e), 0xcb);
        EXPECT(gbc.readMem(0xaf5f), 0x12);
        // CB 12 0110
        gbc.setState(0x5ab0, 0xd7b4, 0xb920, 0x150, 0x58e2, 0x19f9, 0x1, 0x0);
        gbc.writeMem(0x5ab0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd7b4);
        EXPECT(gbc.pc(), 0x5ab2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0111
        gbc.setState(0x170f, 0x6e22, 0xd030, 0x636f, 0x92d7, 0xa553, 0x1, 0x1);
        gbc.writeMem(0x170f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x6e22);
        EXPECT(gbc.pc(), 0x1711);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0112
        gbc.setState(0x72b9, 0x92ed, 0xc80, 0xa200, 0x172d, 0xf9f2, 0x1, 0x1);
        gbc.writeMem(0x72b9, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x92ed);
        EXPECT(gbc.pc(), 0x72bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0113
        gbc.setState(0xc668, 0xffe1, 0x6340, 0x347d, 0xd48, 0xfd56, 0x1, 0x0);
        gbc.writeMem(0xc668, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xffe1);
        EXPECT(gbc.pc(), 0xc66a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc668), 0xcb);
        EXPECT(gbc.readMem(0xc669), 0x12);
        // CB 12 0114
        gbc.setState(0x70aa, 0x7bdf, 0xba10, 0x2ffb, 0x5616, 0x21bf, 0x1, 0x1);
        gbc.writeMem(0x70aa, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x7bdf);
        EXPECT(gbc.pc(), 0x70ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0115
        gbc.setState(0x824c, 0x343b, 0x25f0, 0x987b, 0x7768, 0x3e69, 0x1, 0x0);
        gbc.writeMem(0x824c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x343b);
        EXPECT(gbc.pc(), 0x824e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x824c), 0xcb);
        EXPECT(gbc.readMem(0x824d), 0x12);
        // CB 12 0116
        gbc.setState(0x86a4, 0x9f2e, 0x56f0, 0x23f3, 0x714, 0x3b9c, 0x1, 0x0);
        gbc.writeMem(0x86a4, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x9f2e);
        EXPECT(gbc.pc(), 0x86a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86a4), 0xcb);
        EXPECT(gbc.readMem(0x86a5), 0x12);
        // CB 12 0117
        gbc.setState(0xef0c, 0x8e8b, 0x1f0, 0x4192, 0xeac1, 0xbb7c, 0x0, 0x1);
        gbc.writeMem(0xef0c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x8e8b);
        EXPECT(gbc.pc(), 0xef0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef0c), 0xcb);
        EXPECT(gbc.readMem(0xef0d), 0x12);
        // CB 12 0118
        gbc.setState(0xa477, 0x2ae, 0xbd30, 0x7e0b, 0x7867, 0x1600, 0x1, 0x0);
        gbc.writeMem(0xa477, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x2ae);
        EXPECT(gbc.pc(), 0xa479);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa477), 0xcb);
        EXPECT(gbc.readMem(0xa478), 0x12);
        // CB 12 0119
        gbc.setState(0xb02d, 0x2f46, 0xee20, 0x529b, 0xf625, 0xedcf, 0x0, 0x0);
        gbc.writeMem(0xb02d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2f46);
        EXPECT(gbc.pc(), 0xb02f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb02d), 0xcb);
        EXPECT(gbc.readMem(0xb02e), 0x12);
        // CB 12 011A
        gbc.setState(0x527e, 0xf3c9, 0x2d70, 0xb8c9, 0xdaba, 0x13fd, 0x0, 0x0);
        gbc.writeMem(0x527e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xf3c9);
        EXPECT(gbc.pc(), 0x5280);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 011B
        gbc.setState(0x3d37, 0xed1e, 0x9330, 0xff62, 0x94da, 0xd4c7, 0x0, 0x0);
        gbc.writeMem(0x3d37, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xed1e);
        EXPECT(gbc.pc(), 0x3d39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 011C
        gbc.setState(0x8a3, 0x21e7, 0xb3a0, 0xcdf1, 0x98ee, 0xbfc4, 0x1, 0x1);
        gbc.writeMem(0x8a3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x21e7);
        EXPECT(gbc.pc(), 0x8a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 011D
        gbc.setState(0x677b, 0x38c2, 0x4cd0, 0x2a8a, 0x335f, 0xc2da, 0x0, 0x0);
        gbc.writeMem(0x677b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x38c2);
        EXPECT(gbc.pc(), 0x677d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 011E
        gbc.setState(0x5f61, 0x4fd4, 0xb620, 0x1e2f, 0x8967, 0x2c36, 0x0, 0x1);
        gbc.writeMem(0x5f61, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x4fd4);
        EXPECT(gbc.pc(), 0x5f63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 011F
        gbc.setState(0x72e0, 0xef5f, 0xe340, 0xe9bb, 0x2fa3, 0x55a0, 0x0, 0x0);
        gbc.writeMem(0x72e0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xef5f);
        EXPECT(gbc.pc(), 0x72e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0120
        gbc.setState(0x9a52, 0x40b4, 0x3eb0, 0xb9bb, 0xd235, 0x917, 0x1, 0x1);
        gbc.writeMem(0x9a52, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x40b4);
        EXPECT(gbc.pc(), 0x9a54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a52), 0xcb);
        EXPECT(gbc.readMem(0x9a53), 0x12);
        // CB 12 0121
        gbc.setState(0x45eb, 0x3128, 0x930, 0x51d4, 0x712d, 0xbfd3, 0x1, 0x1);
        gbc.writeMem(0x45eb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x3128);
        EXPECT(gbc.pc(), 0x45ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0122
        gbc.setState(0x66cc, 0xe777, 0xbc70, 0xccec, 0x6913, 0xc576, 0x1, 0x0);
        gbc.writeMem(0x66cc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xe777);
        EXPECT(gbc.pc(), 0x66ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0123
        gbc.setState(0x9a43, 0xdef9, 0x2b10, 0xb1c4, 0xe1c, 0xb98, 0x1, 0x0);
        gbc.writeMem(0x9a43, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xdef9);
        EXPECT(gbc.pc(), 0x9a45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a43), 0xcb);
        EXPECT(gbc.readMem(0x9a44), 0x12);
        // CB 12 0124
        gbc.setState(0x8210, 0xfd90, 0xdb90, 0x25de, 0x2db, 0x14eb, 0x0, 0x0);
        gbc.writeMem(0x8210, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xfd90);
        EXPECT(gbc.pc(), 0x8212);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8210), 0xcb);
        EXPECT(gbc.readMem(0x8211), 0x12);
        // CB 12 0125
        gbc.setState(0x951d, 0x9038, 0xf9e0, 0xe4f6, 0x3eb0, 0x4e35, 0x0, 0x1);
        gbc.writeMem(0x951d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x9038);
        EXPECT(gbc.pc(), 0x951f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x951d), 0xcb);
        EXPECT(gbc.readMem(0x951e), 0x12);
        // CB 12 0126
        gbc.setState(0x7676, 0x3666, 0x72f0, 0x6a34, 0x999a, 0x1517, 0x1, 0x1);
        gbc.writeMem(0x7676, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x3666);
        EXPECT(gbc.pc(), 0x7678);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0127
        gbc.setState(0x272, 0xbb7e, 0xd8c0, 0x6d22, 0xd942, 0x8c2d, 0x0, 0x1);
        gbc.writeMem(0x272, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xbb7e);
        EXPECT(gbc.pc(), 0x274);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0128
        gbc.setState(0x57d7, 0x6fe3, 0xc020, 0xc2a5, 0x2885, 0x3c05, 0x1, 0x1);
        gbc.writeMem(0x57d7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x6fe3);
        EXPECT(gbc.pc(), 0x57d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0129
        gbc.setState(0xcd37, 0x753c, 0x9af0, 0x8024, 0xbfd8, 0x3d6d, 0x1, 0x0);
        gbc.writeMem(0xcd37, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x753c);
        EXPECT(gbc.pc(), 0xcd39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd37), 0xcb);
        EXPECT(gbc.readMem(0xcd38), 0x12);
        // CB 12 012A
        gbc.setState(0x2a66, 0x27e4, 0xc0f0, 0xdc9b, 0x5406, 0x6ee6, 0x0, 0x0);
        gbc.writeMem(0x2a66, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x27e4);
        EXPECT(gbc.pc(), 0x2a68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 012D
        gbc.setState(0xb7ce, 0x7731, 0x1a60, 0x3cea, 0xfeb6, 0x99f7, 0x0, 0x1);
        gbc.writeMem(0xb7ce, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x7731);
        EXPECT(gbc.pc(), 0xb7d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7ce), 0xcb);
        EXPECT(gbc.readMem(0xb7cf), 0x12);
        // CB 12 012E
        gbc.setState(0x2e16, 0xb1d3, 0x3fe0, 0xc3d7, 0x3aa, 0xe43a, 0x1, 0x0);
        gbc.writeMem(0x2e16, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xb1d3);
        EXPECT(gbc.pc(), 0x2e18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 012F
        gbc.setState(0xd70f, 0xd0c3, 0x9c50, 0x9bda, 0x9347, 0x4ca2, 0x0, 0x1);
        gbc.writeMem(0xd70f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xd0c3);
        EXPECT(gbc.pc(), 0xd711);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd70f), 0xcb);
        EXPECT(gbc.readMem(0xd710), 0x12);
        // CB 12 0130
        gbc.setState(0x1c2b, 0xbc6c, 0x30f0, 0xac4b, 0x3da7, 0xf6c0, 0x0, 0x1);
        gbc.writeMem(0x1c2b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xbc6c);
        EXPECT(gbc.pc(), 0x1c2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0131
        gbc.setState(0x683, 0x825a, 0x98c0, 0xbf73, 0x112a, 0x979a, 0x0, 0x1);
        gbc.writeMem(0x683, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x825a);
        EXPECT(gbc.pc(), 0x685);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0132
        gbc.setState(0x93da, 0x53c4, 0x8610, 0xbe79, 0xb032, 0x549, 0x0, 0x1);
        gbc.writeMem(0x93da, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x53c4);
        EXPECT(gbc.pc(), 0x93dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93da), 0xcb);
        EXPECT(gbc.readMem(0x93db), 0x12);
        // CB 12 0133
        gbc.setState(0xed9b, 0xb3e3, 0x54c0, 0x2e48, 0x971f, 0x4dc, 0x0, 0x0);
        gbc.writeMem(0xed9b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xb3e3);
        EXPECT(gbc.pc(), 0xed9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed9b), 0xcb);
        EXPECT(gbc.readMem(0xed9c), 0x12);
        // CB 12 0134
        gbc.setState(0xe481, 0x9f24, 0x7ba0, 0xc847, 0x3384, 0xd37c, 0x1, 0x1);
        gbc.writeMem(0xe481, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x9f24);
        EXPECT(gbc.pc(), 0xe483);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe481), 0xcb);
        EXPECT(gbc.readMem(0xe482), 0x12);
        // CB 12 0135
        gbc.setState(0x7b37, 0xe6bf, 0x8340, 0xc82c, 0x2943, 0x5973, 0x1, 0x1);
        gbc.writeMem(0x7b37, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe6bf);
        EXPECT(gbc.pc(), 0x7b39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0136
        gbc.setState(0x160e, 0x1a5, 0xbc90, 0x2418, 0x9eba, 0x609a, 0x1, 0x1);
        gbc.writeMem(0x160e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x1a5);
        EXPECT(gbc.pc(), 0x1610);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0137
        gbc.setState(0x3f04, 0x724, 0xd690, 0xfa65, 0x8803, 0x4fa, 0x1, 0x1);
        gbc.writeMem(0x3f04, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x724);
        EXPECT(gbc.pc(), 0x3f06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0138
        gbc.setState(0x6eeb, 0x6045, 0x4060, 0x2bb2, 0x632a, 0x2912, 0x0, 0x0);
        gbc.writeMem(0x6eeb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x6045);
        EXPECT(gbc.pc(), 0x6eed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0139
        gbc.setState(0xab3e, 0x73d2, 0x8270, 0xbc26, 0x4a6d, 0xc72b, 0x1, 0x0);
        gbc.writeMem(0xab3e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x73d2);
        EXPECT(gbc.pc(), 0xab40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab3e), 0xcb);
        EXPECT(gbc.readMem(0xab3f), 0x12);
        // CB 12 013A
        gbc.setState(0x9b93, 0xab9b, 0xb2c0, 0xf002, 0x3cb4, 0x6468, 0x1, 0x0);
        gbc.writeMem(0x9b93, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xab9b);
        EXPECT(gbc.pc(), 0x9b95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b93), 0xcb);
        EXPECT(gbc.readMem(0x9b94), 0x12);
        // CB 12 013B
        gbc.setState(0x977f, 0x49b3, 0xcbc0, 0xb096, 0xd89d, 0x5a3, 0x1, 0x1);
        gbc.writeMem(0x977f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x49b3);
        EXPECT(gbc.pc(), 0x9781);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x977f), 0xcb);
        EXPECT(gbc.readMem(0x9780), 0x12);
        // CB 12 013C
        gbc.setState(0x5537, 0x14de, 0x87f0, 0x730, 0xf489, 0x6e10, 0x1, 0x0);
        gbc.writeMem(0x5537, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x14de);
        EXPECT(gbc.pc(), 0x5539);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 013D
        gbc.setState(0x1400, 0xb721, 0x3250, 0x2b5, 0xec3d, 0xba95, 0x1, 0x0);
        gbc.writeMem(0x1400, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xb721);
        EXPECT(gbc.pc(), 0x1402);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 013E
        gbc.setState(0x5a7a, 0x74aa, 0x7240, 0xbf7e, 0xa2ae, 0xeff5, 0x1, 0x0);
        gbc.writeMem(0x5a7a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x74aa);
        EXPECT(gbc.pc(), 0x5a7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 013F
        gbc.setState(0x76a5, 0xc294, 0x1eb0, 0xc37e, 0xc096, 0xffd9, 0x0, 0x0);
        gbc.writeMem(0x76a5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xc294);
        EXPECT(gbc.pc(), 0x76a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0140
        gbc.setState(0xd402, 0x4ba3, 0x3740, 0x6113, 0x1597, 0xf546, 0x1, 0x1);
        gbc.writeMem(0xd402, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x4ba3);
        EXPECT(gbc.pc(), 0xd404);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd402), 0xcb);
        EXPECT(gbc.readMem(0xd403), 0x12);
        // CB 12 0141
        gbc.setState(0x12ba, 0x8bc6, 0x91b0, 0xff9a, 0xa7cd, 0x27d8, 0x1, 0x0);
        gbc.writeMem(0x12ba, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x8bc6);
        EXPECT(gbc.pc(), 0x12bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0142
        gbc.setState(0x3201, 0x669f, 0x6c90, 0xe07a, 0x807b, 0x1cd2, 0x0, 0x0);
        gbc.writeMem(0x3201, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x669f);
        EXPECT(gbc.pc(), 0x3203);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0143
        gbc.setState(0xe8e8, 0x6c8a, 0x7ef0, 0xfbe5, 0x188d, 0xd7c9, 0x1, 0x1);
        gbc.writeMem(0xe8e8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6c8a);
        EXPECT(gbc.pc(), 0xe8ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8e8), 0xcb);
        EXPECT(gbc.readMem(0xe8e9), 0x12);
        // CB 12 0144
        gbc.setState(0x720b, 0xa6bf, 0xd430, 0x692c, 0x5efe, 0x5a85, 0x1, 0x1);
        gbc.writeMem(0x720b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa6bf);
        EXPECT(gbc.pc(), 0x720d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0145
        gbc.setState(0xa743, 0x66a0, 0xc150, 0x6dcd, 0xfc7d, 0x6fed, 0x1, 0x0);
        gbc.writeMem(0xa743, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x66a0);
        EXPECT(gbc.pc(), 0xa745);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa743), 0xcb);
        EXPECT(gbc.readMem(0xa744), 0x12);
        // CB 12 0146
        gbc.setState(0x7541, 0x84b0, 0xc2b0, 0xee25, 0x1800, 0xb31c, 0x1, 0x1);
        gbc.writeMem(0x7541, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x84b0);
        EXPECT(gbc.pc(), 0x7543);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0147
        gbc.setState(0xebc2, 0x5cdb, 0x2380, 0x6297, 0x4781, 0x7724, 0x1, 0x1);
        gbc.writeMem(0xebc2, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x5cdb);
        EXPECT(gbc.pc(), 0xebc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebc2), 0xcb);
        EXPECT(gbc.readMem(0xebc3), 0x12);
        // CB 12 0148
        gbc.setState(0x9432, 0xcf66, 0x9a00, 0xeb4b, 0x5e57, 0x681e, 0x1, 0x0);
        gbc.writeMem(0x9432, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xcf66);
        EXPECT(gbc.pc(), 0x9434);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9432), 0xcb);
        EXPECT(gbc.readMem(0x9433), 0x12);
        // CB 12 0149
        gbc.setState(0x8b8, 0xcff4, 0x2740, 0xf617, 0xdbaa, 0x12f2, 0x0, 0x1);
        gbc.writeMem(0x8b8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xcff4);
        EXPECT(gbc.pc(), 0x8ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 014A
        gbc.setState(0x49ee, 0xddc4, 0xf790, 0xb846, 0xc495, 0x6dd8, 0x1, 0x1);
        gbc.writeMem(0x49ee, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xddc4);
        EXPECT(gbc.pc(), 0x49f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 014C
        gbc.setState(0xc205, 0xcdeb, 0xf110, 0xffe0, 0xb557, 0xa4ed, 0x1, 0x0);
        gbc.writeMem(0xc205, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xcdeb);
        EXPECT(gbc.pc(), 0xc207);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc205), 0xcb);
        EXPECT(gbc.readMem(0xc206), 0x12);
        // CB 12 014D
        gbc.setState(0x6fcb, 0xb706, 0x3ff0, 0x4be8, 0x2106, 0x4aab, 0x0, 0x0);
        gbc.writeMem(0x6fcb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xb706);
        EXPECT(gbc.pc(), 0x6fcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 014E
        gbc.setState(0xa8e2, 0x823f, 0x9910, 0x2583, 0x81e0, 0x8748, 0x0, 0x0);
        gbc.writeMem(0xa8e2, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x823f);
        EXPECT(gbc.pc(), 0xa8e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8e2), 0xcb);
        EXPECT(gbc.readMem(0xa8e3), 0x12);
        // CB 12 014F
        gbc.setState(0x7163, 0xc584, 0x2f20, 0x8b0e, 0x7cdc, 0x67f0, 0x1, 0x0);
        gbc.writeMem(0x7163, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc584);
        EXPECT(gbc.pc(), 0x7165);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0150
        gbc.setState(0xc8f4, 0xb598, 0x9920, 0x4769, 0x5d67, 0x3f97, 0x0, 0x1);
        gbc.writeMem(0xc8f4, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xb598);
        EXPECT(gbc.pc(), 0xc8f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8f4), 0xcb);
        EXPECT(gbc.readMem(0xc8f5), 0x12);
        // CB 12 0151
        gbc.setState(0xba7f, 0x3eff, 0x2600, 0x6d, 0xb164, 0x3c35, 0x1, 0x0);
        gbc.writeMem(0xba7f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3eff);
        EXPECT(gbc.pc(), 0xba81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba7f), 0xcb);
        EXPECT(gbc.readMem(0xba80), 0x12);
        // CB 12 0152
        gbc.setState(0x88bf, 0x92c3, 0x49f0, 0x3860, 0x58a4, 0x2a42, 0x1, 0x1);
        gbc.writeMem(0x88bf, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x92c3);
        EXPECT(gbc.pc(), 0x88c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88bf), 0xcb);
        EXPECT(gbc.readMem(0x88c0), 0x12);
        // CB 12 0153
        gbc.setState(0xc4af, 0x7724, 0x8800, 0x9e4c, 0x8299, 0x8e97, 0x0, 0x1);
        gbc.writeMem(0xc4af, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x7724);
        EXPECT(gbc.pc(), 0xc4b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4af), 0xcb);
        EXPECT(gbc.readMem(0xc4b0), 0x12);
        // CB 12 0154
        gbc.setState(0x6ccf, 0x465c, 0x1f20, 0xbdf7, 0x25e8, 0xdb3, 0x0, 0x0);
        gbc.writeMem(0x6ccf, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x465c);
        EXPECT(gbc.pc(), 0x6cd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0156
        gbc.setState(0xd872, 0xece2, 0x2140, 0xae0c, 0x8d3, 0x5ab4, 0x0, 0x0);
        gbc.writeMem(0xd872, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xece2);
        EXPECT(gbc.pc(), 0xd874);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd872), 0xcb);
        EXPECT(gbc.readMem(0xd873), 0x12);
        // CB 12 0157
        gbc.setState(0x5d61, 0x66de, 0xfdf0, 0x9cfd, 0xabe6, 0xd4f9, 0x0, 0x1);
        gbc.writeMem(0x5d61, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x66de);
        EXPECT(gbc.pc(), 0x5d63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0158
        gbc.setState(0x6dc, 0xf42b, 0x30f0, 0x88fb, 0xf6b6, 0xf9d4, 0x0, 0x0);
        gbc.writeMem(0x6dc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xf42b);
        EXPECT(gbc.pc(), 0x6de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0159
        gbc.setState(0x4bf9, 0xb8ce, 0xfa00, 0xadcf, 0x5703, 0xc503, 0x1, 0x0);
        gbc.writeMem(0x4bf9, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xb8ce);
        EXPECT(gbc.pc(), 0x4bfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 015A
        gbc.setState(0x7ff, 0x61e, 0x1460, 0xd756, 0xd480, 0xb8d0, 0x1, 0x1);
        gbc.writeMem(0x7ff, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x61e);
        EXPECT(gbc.pc(), 0x801);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 015B
        gbc.setState(0x193c, 0x1596, 0x1f30, 0x5676, 0xd6bb, 0xbeb0, 0x0, 0x0);
        gbc.writeMem(0x193c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x1596);
        EXPECT(gbc.pc(), 0x193e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 015C
        gbc.setState(0x5976, 0x6134, 0xc740, 0x2c9f, 0x31f6, 0xe5d7, 0x0, 0x0);
        gbc.writeMem(0x5976, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x6134);
        EXPECT(gbc.pc(), 0x5978);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 015D
        gbc.setState(0x1620, 0x67db, 0xe850, 0x1052, 0x6493, 0x287, 0x1, 0x1);
        gbc.writeMem(0x1620, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x67db);
        EXPECT(gbc.pc(), 0x1622);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 015E
        gbc.setState(0x692, 0x3837, 0xc450, 0x545f, 0xb3ed, 0x88d0, 0x0, 0x0);
        gbc.writeMem(0x692, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x3837);
        EXPECT(gbc.pc(), 0x694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 015F
        gbc.setState(0x19be, 0x52c8, 0xb4a0, 0x3b65, 0xbb, 0x849, 0x0, 0x1);
        gbc.writeMem(0x19be, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x52c8);
        EXPECT(gbc.pc(), 0x19c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0160
        gbc.setState(0xb408, 0x6602, 0x3700, 0x70fb, 0xb27b, 0x3ec9, 0x1, 0x0);
        gbc.writeMem(0xb408, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6602);
        EXPECT(gbc.pc(), 0xb40a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb408), 0xcb);
        EXPECT(gbc.readMem(0xb409), 0x12);
        // CB 12 0161
        gbc.setState(0x348, 0xb81c, 0x50d0, 0x9e00, 0x65b3, 0x5d98, 0x0, 0x1);
        gbc.writeMem(0x348, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb81c);
        EXPECT(gbc.pc(), 0x34a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0162
        gbc.setState(0x5074, 0x2e2e, 0x3e00, 0x6fbf, 0x9d80, 0x73d3, 0x0, 0x1);
        gbc.writeMem(0x5074, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2e2e);
        EXPECT(gbc.pc(), 0x5076);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0163
        gbc.setState(0xd631, 0xe5c3, 0xcbf0, 0x358b, 0x15fc, 0x69fb, 0x0, 0x0);
        gbc.writeMem(0xd631, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe5c3);
        EXPECT(gbc.pc(), 0xd633);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd631), 0xcb);
        EXPECT(gbc.readMem(0xd632), 0x12);
        // CB 12 0164
        gbc.setState(0x86df, 0x41c7, 0xbab0, 0x785e, 0x8476, 0x534e, 0x1, 0x0);
        gbc.writeMem(0x86df, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x41c7);
        EXPECT(gbc.pc(), 0x86e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86df), 0xcb);
        EXPECT(gbc.readMem(0x86e0), 0x12);
        // CB 12 0165
        gbc.setState(0x905a, 0x270e, 0xb2c0, 0x7684, 0xd5e7, 0x2ee6, 0x0, 0x1);
        gbc.writeMem(0x905a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x270e);
        EXPECT(gbc.pc(), 0x905c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x905a), 0xcb);
        EXPECT(gbc.readMem(0x905b), 0x12);
        // CB 12 0167
        gbc.setState(0xd7cd, 0xcaf, 0x9660, 0xad47, 0x18f0, 0x5787, 0x0, 0x1);
        gbc.writeMem(0xd7cd, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xcaf);
        EXPECT(gbc.pc(), 0xd7cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7cd), 0xcb);
        EXPECT(gbc.readMem(0xd7ce), 0x12);
        // CB 12 0168
        gbc.setState(0x6b73, 0xd5a9, 0x78b0, 0xf83f, 0xeee3, 0x3789, 0x0, 0x0);
        gbc.writeMem(0x6b73, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xd5a9);
        EXPECT(gbc.pc(), 0x6b75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0169
        gbc.setState(0x31ca, 0x46d3, 0x7150, 0x35fe, 0xebe9, 0x3f5d, 0x1, 0x0);
        gbc.writeMem(0x31ca, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x46d3);
        EXPECT(gbc.pc(), 0x31cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 016A
        gbc.setState(0xc74d, 0xfaf5, 0x4e30, 0x5758, 0x4bc7, 0x2a7a, 0x0, 0x0);
        gbc.writeMem(0xc74d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xfaf5);
        EXPECT(gbc.pc(), 0xc74f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc74d), 0xcb);
        EXPECT(gbc.readMem(0xc74e), 0x12);
        // CB 12 016B
        gbc.setState(0x5a56, 0xc2f3, 0x1e80, 0x221e, 0xfb8d, 0x8bac, 0x0, 0x0);
        gbc.writeMem(0x5a56, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc2f3);
        EXPECT(gbc.pc(), 0x5a58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 016C
        gbc.setState(0xd304, 0x7dac, 0xa0c0, 0x4f90, 0x6d92, 0x9d95, 0x1, 0x1);
        gbc.writeMem(0xd304, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x7dac);
        EXPECT(gbc.pc(), 0xd306);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd304), 0xcb);
        EXPECT(gbc.readMem(0xd305), 0x12);
        // CB 12 016D
        gbc.setState(0x569e, 0x3295, 0x2be0, 0x9461, 0xada7, 0x783c, 0x0, 0x0);
        gbc.writeMem(0x569e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3295);
        EXPECT(gbc.pc(), 0x56a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 016E
        gbc.setState(0xe7dd, 0x49b, 0x280, 0xa77c, 0xe2ae, 0xcd0f, 0x1, 0x0);
        gbc.writeMem(0xe7dd, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x49b);
        EXPECT(gbc.pc(), 0xe7df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7dd), 0xcb);
        EXPECT(gbc.readMem(0xe7de), 0x12);
        // CB 12 016F
        gbc.setState(0xe93, 0x2608, 0x7530, 0x7201, 0x8794, 0x8a3a, 0x1, 0x1);
        gbc.writeMem(0xe93, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x2608);
        EXPECT(gbc.pc(), 0xe95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0170
        gbc.setState(0x601e, 0x2eba, 0xa430, 0x3d97, 0x6d55, 0x8ccb, 0x0, 0x0);
        gbc.writeMem(0x601e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x2eba);
        EXPECT(gbc.pc(), 0x6020);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0171
        gbc.setState(0x246d, 0x9939, 0xc690, 0x409d, 0x76fe, 0x5f14, 0x0, 0x0);
        gbc.writeMem(0x246d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x9939);
        EXPECT(gbc.pc(), 0x246f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0172
        gbc.setState(0x66a7, 0x4268, 0xb80, 0xdc2e, 0x4a8c, 0x8b99, 0x1, 0x0);
        gbc.writeMem(0x66a7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4268);
        EXPECT(gbc.pc(), 0x66a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0173
        gbc.setState(0xe4d2, 0x2a0, 0x1d70, 0x6087, 0x6bb0, 0xdd7e, 0x0, 0x0);
        gbc.writeMem(0xe4d2, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x2a0);
        EXPECT(gbc.pc(), 0xe4d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4d2), 0xcb);
        EXPECT(gbc.readMem(0xe4d3), 0x12);
        // CB 12 0174
        gbc.setState(0x68ad, 0xeacf, 0x7ad0, 0xe79e, 0xca3e, 0xbd2c, 0x0, 0x0);
        gbc.writeMem(0x68ad, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xeacf);
        EXPECT(gbc.pc(), 0x68af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0175
        gbc.setState(0x4a75, 0xb7e0, 0xd570, 0x240e, 0x5a25, 0x2400, 0x1, 0x1);
        gbc.writeMem(0x4a75, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb7e0);
        EXPECT(gbc.pc(), 0x4a77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0176
        gbc.setState(0x367d, 0x6d7c, 0x7bb0, 0x7859, 0xb16e, 0xe9b0, 0x0, 0x1);
        gbc.writeMem(0x367d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x6d7c);
        EXPECT(gbc.pc(), 0x367f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0177
        gbc.setState(0xc4bd, 0x6131, 0x4f60, 0x3243, 0x95ee, 0x72bd, 0x0, 0x1);
        gbc.writeMem(0xc4bd, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x6131);
        EXPECT(gbc.pc(), 0xc4bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4bd), 0xcb);
        EXPECT(gbc.readMem(0xc4be), 0x12);
        // CB 12 0179
        gbc.setState(0x71eb, 0x9b45, 0xfe80, 0xf3cf, 0x6aaf, 0x2998, 0x0, 0x1);
        gbc.writeMem(0x71eb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x9b45);
        EXPECT(gbc.pc(), 0x71ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 017A
        gbc.setState(0x951, 0x9871, 0xe4f0, 0x5c4b, 0x28c5, 0x13ed, 0x1, 0x1);
        gbc.writeMem(0x951, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9871);
        EXPECT(gbc.pc(), 0x953);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 017B
        gbc.setState(0x90a0, 0xb5d8, 0x4c40, 0x6f2f, 0x8ed0, 0x9f65, 0x0, 0x1);
        gbc.writeMem(0x90a0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb5d8);
        EXPECT(gbc.pc(), 0x90a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90a0), 0xcb);
        EXPECT(gbc.readMem(0x90a1), 0x12);
        // CB 12 017C
        gbc.setState(0x42ff, 0xd72c, 0x6d60, 0xc771, 0xe4a9, 0x1cd0, 0x1, 0x1);
        gbc.writeMem(0x42ff, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xd72c);
        EXPECT(gbc.pc(), 0x4301);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 017D
        gbc.setState(0x2aa5, 0xa657, 0xcd50, 0xefb5, 0xa4cb, 0x172a, 0x1, 0x0);
        gbc.writeMem(0x2aa5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xa657);
        EXPECT(gbc.pc(), 0x2aa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 017E
        gbc.setState(0x9e6c, 0xed9b, 0xe560, 0x7ccf, 0x2208, 0x4343, 0x1, 0x1);
        gbc.writeMem(0x9e6c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xed9b);
        EXPECT(gbc.pc(), 0x9e6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e6c), 0xcb);
        EXPECT(gbc.readMem(0x9e6d), 0x12);
        // CB 12 017F
        gbc.setState(0xe966, 0x1d06, 0xf260, 0xee40, 0x9255, 0x789d, 0x0, 0x1);
        gbc.writeMem(0xe966, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x1d06);
        EXPECT(gbc.pc(), 0xe968);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe966), 0xcb);
        EXPECT(gbc.readMem(0xe967), 0x12);
        // CB 12 0180
        gbc.setState(0xd009, 0x4cac, 0x7cb0, 0xc893, 0x831c, 0xc835, 0x1, 0x1);
        gbc.writeMem(0xd009, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x4cac);
        EXPECT(gbc.pc(), 0xd00b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd009), 0xcb);
        EXPECT(gbc.readMem(0xd00a), 0x12);
        // CB 12 0181
        gbc.setState(0x79b5, 0xdc08, 0x62a0, 0xadbc, 0xcdd9, 0xd49a, 0x1, 0x1);
        gbc.writeMem(0x79b5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xdc08);
        EXPECT(gbc.pc(), 0x79b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0182
        gbc.setState(0xcb68, 0xf839, 0x58b0, 0xcb76, 0x7fe9, 0x5e71, 0x1, 0x1);
        gbc.writeMem(0xcb68, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xf839);
        EXPECT(gbc.pc(), 0xcb6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb68), 0xcb);
        EXPECT(gbc.readMem(0xcb69), 0x12);
        // CB 12 0183
        gbc.setState(0xe9cb, 0xf18d, 0x6dd0, 0x7230, 0x7d77, 0xb1fc, 0x0, 0x1);
        gbc.writeMem(0xe9cb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xf18d);
        EXPECT(gbc.pc(), 0xe9cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9cb), 0xcb);
        EXPECT(gbc.readMem(0xe9cc), 0x12);
        // CB 12 0184
        gbc.setState(0x9e77, 0x2ffe, 0x7550, 0xf421, 0x515b, 0xcc7f, 0x1, 0x1);
        gbc.writeMem(0x9e77, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2ffe);
        EXPECT(gbc.pc(), 0x9e79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e77), 0xcb);
        EXPECT(gbc.readMem(0x9e78), 0x12);
        // CB 12 0185
        gbc.setState(0x9715, 0xf118, 0x7700, 0x92f7, 0x5738, 0x209c, 0x1, 0x0);
        gbc.writeMem(0x9715, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xf118);
        EXPECT(gbc.pc(), 0x9717);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9715), 0xcb);
        EXPECT(gbc.readMem(0x9716), 0x12);
        // CB 12 0186
        gbc.setState(0x7282, 0x6e79, 0xf130, 0x7a93, 0xb631, 0x18dc, 0x1, 0x0);
        gbc.writeMem(0x7282, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x6e79);
        EXPECT(gbc.pc(), 0x7284);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0187
        gbc.setState(0x8c23, 0xb047, 0xce90, 0x15df, 0xc45c, 0xd78a, 0x0, 0x0);
        gbc.writeMem(0x8c23, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xb047);
        EXPECT(gbc.pc(), 0x8c25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c23), 0xcb);
        EXPECT(gbc.readMem(0x8c24), 0x12);
        // CB 12 0188
        gbc.setState(0xc84a, 0xfa7b, 0x4eb0, 0xa028, 0xb6b, 0xc94a, 0x1, 0x0);
        gbc.writeMem(0xc84a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xfa7b);
        EXPECT(gbc.pc(), 0xc84c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc84a), 0xcb);
        EXPECT(gbc.readMem(0xc84b), 0x12);
        // CB 12 0189
        gbc.setState(0x118b, 0x89b1, 0x34e0, 0x370c, 0x47bb, 0x9b71, 0x1, 0x1);
        gbc.writeMem(0x118b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x89b1);
        EXPECT(gbc.pc(), 0x118d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 018A
        gbc.setState(0x7b0, 0x5834, 0xe550, 0xd522, 0x1592, 0x6dd4, 0x1, 0x0);
        gbc.writeMem(0x7b0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x5834);
        EXPECT(gbc.pc(), 0x7b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 018B
        gbc.setState(0xb655, 0x554a, 0x6ef0, 0xea72, 0xb9db, 0x6e92, 0x0, 0x1);
        gbc.writeMem(0xb655, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x554a);
        EXPECT(gbc.pc(), 0xb657);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb655), 0xcb);
        EXPECT(gbc.readMem(0xb656), 0x12);
        // CB 12 018C
        gbc.setState(0xd8f7, 0x3d7d, 0xa020, 0xed6c, 0x6e24, 0xe621, 0x1, 0x0);
        gbc.writeMem(0xd8f7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x3d7d);
        EXPECT(gbc.pc(), 0xd8f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8f7), 0xcb);
        EXPECT(gbc.readMem(0xd8f8), 0x12);
        // CB 12 018D
        gbc.setState(0xb9d6, 0xa88c, 0x98f0, 0x3f66, 0xa0e6, 0xfbd0, 0x0, 0x0);
        gbc.writeMem(0xb9d6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xa88c);
        EXPECT(gbc.pc(), 0xb9d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9d6), 0xcb);
        EXPECT(gbc.readMem(0xb9d7), 0x12);
        // CB 12 018E
        gbc.setState(0xdc00, 0x4920, 0x5790, 0xf92a, 0x3dee, 0x7276, 0x1, 0x0);
        gbc.writeMem(0xdc00, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x4920);
        EXPECT(gbc.pc(), 0xdc02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc00), 0xcb);
        EXPECT(gbc.readMem(0xdc01), 0x12);
        // CB 12 018F
        gbc.setState(0xe33a, 0x655b, 0x51a0, 0xc8c2, 0x8d27, 0xb614, 0x0, 0x1);
        gbc.writeMem(0xe33a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x655b);
        EXPECT(gbc.pc(), 0xe33c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe33a), 0xcb);
        EXPECT(gbc.readMem(0xe33b), 0x12);
        // CB 12 0190
        gbc.setState(0xd808, 0xb52c, 0x4060, 0x331a, 0x7d7a, 0x4bc1, 0x1, 0x1);
        gbc.writeMem(0xd808, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb52c);
        EXPECT(gbc.pc(), 0xd80a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd808), 0xcb);
        EXPECT(gbc.readMem(0xd809), 0x12);
        // CB 12 0191
        gbc.setState(0x53bc, 0x609d, 0x7e40, 0xfaef, 0x3b9f, 0xa4de, 0x1, 0x1);
        gbc.writeMem(0x53bc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x609d);
        EXPECT(gbc.pc(), 0x53be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0192
        gbc.setState(0x9981, 0xfa6e, 0xb6b0, 0x7eb3, 0x8e9b, 0xc99e, 0x0, 0x0);
        gbc.writeMem(0x9981, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xfa6e);
        EXPECT(gbc.pc(), 0x9983);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9981), 0xcb);
        EXPECT(gbc.readMem(0x9982), 0x12);
        // CB 12 0193
        gbc.setState(0x8498, 0xe9b6, 0x6fc0, 0xf3e9, 0x2aa, 0x705f, 0x1, 0x0);
        gbc.writeMem(0x8498, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xe9b6);
        EXPECT(gbc.pc(), 0x849a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8498), 0xcb);
        EXPECT(gbc.readMem(0x8499), 0x12);
        // CB 12 0194
        gbc.setState(0x665e, 0x72e1, 0x5360, 0xdb62, 0x5d23, 0xeb8a, 0x0, 0x0);
        gbc.writeMem(0x665e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x72e1);
        EXPECT(gbc.pc(), 0x6660);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0195
        gbc.setState(0x1560, 0x9563, 0x510, 0xf3f7, 0xf35c, 0x1a56, 0x0, 0x0);
        gbc.writeMem(0x1560, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x9563);
        EXPECT(gbc.pc(), 0x1562);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0196
        gbc.setState(0xaf08, 0x9ed5, 0x7cf0, 0x5e0b, 0x55f8, 0xccfe, 0x0, 0x0);
        gbc.writeMem(0xaf08, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x9ed5);
        EXPECT(gbc.pc(), 0xaf0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf08), 0xcb);
        EXPECT(gbc.readMem(0xaf09), 0x12);
        // CB 12 0197
        gbc.setState(0x483a, 0x6c0, 0x8150, 0xb3b1, 0xcd3a, 0x6e50, 0x0, 0x1);
        gbc.writeMem(0x483a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x6c0);
        EXPECT(gbc.pc(), 0x483c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0198
        gbc.setState(0xb0b9, 0x202b, 0x4680, 0xd81a, 0x8e36, 0x39de, 0x1, 0x0);
        gbc.writeMem(0xb0b9, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x202b);
        EXPECT(gbc.pc(), 0xb0bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0b9), 0xcb);
        EXPECT(gbc.readMem(0xb0ba), 0x12);
        // CB 12 0199
        gbc.setState(0x3f72, 0x1ef7, 0x4900, 0x7890, 0x9431, 0x5d4d, 0x1, 0x1);
        gbc.writeMem(0x3f72, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x1ef7);
        EXPECT(gbc.pc(), 0x3f74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 019A
        gbc.setState(0x7b56, 0x54fc, 0xe690, 0x7592, 0xf75d, 0x56cd, 0x0, 0x1);
        gbc.writeMem(0x7b56, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x54fc);
        EXPECT(gbc.pc(), 0x7b58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 019B
        gbc.setState(0x1d1e, 0x80ee, 0x89a0, 0xb17b, 0x94fb, 0xd7d1, 0x1, 0x0);
        gbc.writeMem(0x1d1e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x80ee);
        EXPECT(gbc.pc(), 0x1d20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 019C
        gbc.setState(0x716f, 0x9341, 0x3a80, 0xfa3a, 0xe1df, 0xc350, 0x1, 0x1);
        gbc.writeMem(0x716f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x9341);
        EXPECT(gbc.pc(), 0x7171);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 019D
        gbc.setState(0xdb47, 0x7d6a, 0xc550, 0x14ed, 0x287e, 0x100a, 0x1, 0x1);
        gbc.writeMem(0xdb47, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x7d6a);
        EXPECT(gbc.pc(), 0xdb49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb47), 0xcb);
        EXPECT(gbc.readMem(0xdb48), 0x12);
        // CB 12 019E
        gbc.setState(0x11c8, 0xc09d, 0x1300, 0x712c, 0x6973, 0x673f, 0x1, 0x0);
        gbc.writeMem(0x11c8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xc09d);
        EXPECT(gbc.pc(), 0x11ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 019F
        gbc.setState(0x9ca6, 0x4be1, 0x5220, 0x4c1c, 0x8c51, 0x35d2, 0x0, 0x1);
        gbc.writeMem(0x9ca6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x4be1);
        EXPECT(gbc.pc(), 0x9ca8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ca6), 0xcb);
        EXPECT(gbc.readMem(0x9ca7), 0x12);
        // CB 12 01A0
        gbc.setState(0x7f6f, 0x1c74, 0x300, 0xf992, 0xa7ac, 0x72d4, 0x0, 0x1);
        gbc.writeMem(0x7f6f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x1c74);
        EXPECT(gbc.pc(), 0x7f71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 01A1
        gbc.setState(0x5e3b, 0xc5bc, 0x6930, 0x846f, 0x7f0d, 0xf9c3, 0x0, 0x1);
        gbc.writeMem(0x5e3b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc5bc);
        EXPECT(gbc.pc(), 0x5e3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 01A2
        gbc.setState(0xe5af, 0x8890, 0xe5f0, 0xb2dd, 0x89de, 0x2ec6, 0x0, 0x1);
        gbc.writeMem(0xe5af, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x8890);
        EXPECT(gbc.pc(), 0xe5b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5af), 0xcb);
        EXPECT(gbc.readMem(0xe5b0), 0x12);
        // CB 12 01A5
        gbc.setState(0x91e8, 0x8b58, 0xbf70, 0xa564, 0xd387, 0x9857, 0x1, 0x0);
        gbc.writeMem(0x91e8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x8b58);
        EXPECT(gbc.pc(), 0x91ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91e8), 0xcb);
        EXPECT(gbc.readMem(0x91e9), 0x12);
        // CB 12 01A6
        gbc.setState(0xd0f5, 0xd18c, 0xe1d0, 0x4a3b, 0x2ae9, 0x238d, 0x1, 0x0);
        gbc.writeMem(0xd0f5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xd18c);
        EXPECT(gbc.pc(), 0xd0f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0f5), 0xcb);
        EXPECT(gbc.readMem(0xd0f6), 0x12);
        // CB 12 01A7
        gbc.setState(0x4659, 0x8f96, 0xfd60, 0x6389, 0x1801, 0xb69e, 0x0, 0x0);
        gbc.writeMem(0x4659, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x8f96);
        EXPECT(gbc.pc(), 0x465b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 01A8
        gbc.setState(0x352c, 0x8788, 0x1260, 0xabe1, 0x3304, 0x378e, 0x0, 0x0);
        gbc.writeMem(0x352c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x8788);
        EXPECT(gbc.pc(), 0x352e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 01A9
        gbc.setState(0x36a7, 0x313f, 0x9410, 0x7206, 0x7307, 0x4988, 0x0, 0x0);
        gbc.writeMem(0x36a7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x313f);
        EXPECT(gbc.pc(), 0x36a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 01AA
        gbc.setState(0xeaa0, 0x5d96, 0xcc40, 0xdc72, 0x92b, 0x8dbc, 0x0, 0x0);
        gbc.writeMem(0xeaa0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x5d96);
        EXPECT(gbc.pc(), 0xeaa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaa0), 0xcb);
        EXPECT(gbc.readMem(0xeaa1), 0x12);
        // CB 12 01AB
        gbc.setState(0xbf83, 0x760d, 0xf000, 0x4c14, 0x9a9, 0xb7d6, 0x1, 0x1);
        gbc.writeMem(0xbf83, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x760d);
        EXPECT(gbc.pc(), 0xbf85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf83), 0xcb);
        EXPECT(gbc.readMem(0xbf84), 0x12);
        // CB 12 01AC
        gbc.setState(0x869c, 0x4e4, 0xb3e0, 0xc19a, 0xf6c1, 0xc767, 0x0, 0x1);
        gbc.writeMem(0x869c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x4e4);
        EXPECT(gbc.pc(), 0x869e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x869c), 0xcb);
        EXPECT(gbc.readMem(0x869d), 0x12);
        // CB 12 01AD
        gbc.setState(0x5444, 0xb8e5, 0xf80, 0x1e00, 0xd2b8, 0x8121, 0x0, 0x1);
        gbc.writeMem(0x5444, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xb8e5);
        EXPECT(gbc.pc(), 0x5446);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 01AE
        gbc.setState(0x3fdc, 0xbbe5, 0xabc0, 0xc882, 0x1893, 0x85c8, 0x0, 0x0);
        gbc.writeMem(0x3fdc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xbbe5);
        EXPECT(gbc.pc(), 0x3fde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 01AF
        gbc.setState(0x90af, 0x7f28, 0xb990, 0x8129, 0xadbc, 0xf9c, 0x0, 0x0);
        gbc.writeMem(0x90af, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x7f28);
        EXPECT(gbc.pc(), 0x90b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90af), 0xcb);
        EXPECT(gbc.readMem(0x90b0), 0x12);
        // CB 12 01B0
        gbc.setState(0xb1a1, 0x8685, 0x2c40, 0x7e04, 0xd49c, 0xc10d, 0x0, 0x1);
        gbc.writeMem(0xb1a1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8685);
        EXPECT(gbc.pc(), 0xb1a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1a1), 0xcb);
        EXPECT(gbc.readMem(0xb1a2), 0x12);
        // CB 12 01B1
        gbc.setState(0xab10, 0xf085, 0x6350, 0x630c, 0xe5db, 0x1461, 0x1, 0x0);
        gbc.writeMem(0xab10, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xf085);
        EXPECT(gbc.pc(), 0xab12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab10), 0xcb);
        EXPECT(gbc.readMem(0xab11), 0x12);
        // CB 12 01B2
        gbc.setState(0x3ef4, 0x5c37, 0x5fc0, 0xa309, 0x524e, 0xc39c, 0x0, 0x0);
        gbc.writeMem(0x3ef4, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x5c37);
        EXPECT(gbc.pc(), 0x3ef6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 01B4
        gbc.setState(0xce1e, 0x4eef, 0x4540, 0xff66, 0xe797, 0x9545, 0x1, 0x0);
        gbc.writeMem(0xce1e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x4eef);
        EXPECT(gbc.pc(), 0xce20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce1e), 0xcb);
        EXPECT(gbc.readMem(0xce1f), 0x12);
        // CB 12 01B5
        gbc.setState(0xd00c, 0xd160, 0x1990, 0x4d2b, 0x11b4, 0xc675, 0x1, 0x1);
        gbc.writeMem(0xd00c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xd160);
        EXPECT(gbc.pc(), 0xd00e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd00c), 0xcb);
        EXPECT(gbc.readMem(0xd00d), 0x12);
        // CB 12 01B6
        gbc.setState(0x82af, 0xbb08, 0xcb40, 0x63ee, 0x9fcd, 0x9c34, 0x1, 0x1);
        gbc.writeMem(0x82af, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xbb08);
        EXPECT(gbc.pc(), 0x82b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82af), 0xcb);
        EXPECT(gbc.readMem(0x82b0), 0x12);
        // CB 12 01B7
        gbc.setState(0xe7ea, 0xd7db, 0x3800, 0xd98a, 0x3f3d, 0xa35d, 0x0, 0x0);
        gbc.writeMem(0xe7ea, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xd7db);
        EXPECT(gbc.pc(), 0xe7ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7ea), 0xcb);
        EXPECT(gbc.readMem(0xe7eb), 0x12);
        // CB 12 01B8
        gbc.setState(0x4282, 0xfdb9, 0x60c0, 0x523a, 0x94b6, 0xbe49, 0x1, 0x0);
        gbc.writeMem(0x4282, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xfdb9);
        EXPECT(gbc.pc(), 0x4284);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 01B9
        gbc.setState(0x53e3, 0x6f58, 0x9390, 0x7ba6, 0x8dc6, 0x8c94, 0x0, 0x1);
        gbc.writeMem(0x53e3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x6f58);
        EXPECT(gbc.pc(), 0x53e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 01BA
        gbc.setState(0x3a88, 0x652c, 0x1ff0, 0xa80b, 0x7141, 0x918a, 0x0, 0x0);
        gbc.writeMem(0x3a88, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x652c);
        EXPECT(gbc.pc(), 0x3a8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 01BB
        gbc.setState(0x7a63, 0xb384, 0x8690, 0x4edb, 0xb79, 0x1086, 0x1, 0x1);
        gbc.writeMem(0x7a63, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xb384);
        EXPECT(gbc.pc(), 0x7a65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 01BC
        gbc.setState(0x862f, 0xd135, 0x91e0, 0x2aa4, 0x7405, 0x717e, 0x1, 0x1);
        gbc.writeMem(0x862f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xd135);
        EXPECT(gbc.pc(), 0x8631);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x862f), 0xcb);
        EXPECT(gbc.readMem(0x8630), 0x12);
        // CB 12 01BD
        gbc.setState(0xdbdb, 0x9839, 0x440, 0x4bf3, 0x2a9a, 0xb4e3, 0x1, 0x1);
        gbc.writeMem(0xdbdb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x9839);
        EXPECT(gbc.pc(), 0xdbdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbdb), 0xcb);
        EXPECT(gbc.readMem(0xdbdc), 0x12);
        // CB 12 01BE
        gbc.setState(0x8c00, 0x21d1, 0x19d0, 0x5fe4, 0xea4c, 0xe4d, 0x1, 0x0);
        gbc.writeMem(0x8c00, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x21d1);
        EXPECT(gbc.pc(), 0x8c02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c00), 0xcb);
        EXPECT(gbc.readMem(0x8c01), 0x12);
        // CB 12 01BF
        gbc.setState(0x6082, 0x8450, 0xdc00, 0x9532, 0x14f, 0xe087, 0x0, 0x0);
        gbc.writeMem(0x6082, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x8450);
        EXPECT(gbc.pc(), 0x6084);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 01C0
        gbc.setState(0x5a6f, 0xbe0d, 0xdd40, 0x2c6f, 0x802e, 0xce99, 0x0, 0x1);
        gbc.writeMem(0x5a6f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xbe0d);
        EXPECT(gbc.pc(), 0x5a71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 01C1
        gbc.setState(0xe1, 0x26d1, 0xf270, 0x35c4, 0xf734, 0x60c0, 0x0, 0x0);
        gbc.writeMem(0xe1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x26d1);
        EXPECT(gbc.pc(), 0xe3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 01C2
        gbc.setState(0x8ec9, 0x3b44, 0xf2d0, 0x5fec, 0x7fdf, 0xd301, 0x0, 0x0);
        gbc.writeMem(0x8ec9, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x3b44);
        EXPECT(gbc.pc(), 0x8ecb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ec9), 0xcb);
        EXPECT(gbc.readMem(0x8eca), 0x12);
        // CB 12 01C3
        gbc.setState(0x8d72, 0xe326, 0x9cf0, 0x9c7d, 0x91f5, 0xedc6, 0x0, 0x1);
        gbc.writeMem(0x8d72, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xe326);
        EXPECT(gbc.pc(), 0x8d74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d72), 0xcb);
        EXPECT(gbc.readMem(0x8d73), 0x12);
        // CB 12 01C5
        gbc.setState(0xad90, 0x451d, 0x210, 0xed28, 0x27f8, 0x5d0f, 0x0, 0x1);
        gbc.writeMem(0xad90, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x451d);
        EXPECT(gbc.pc(), 0xad92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad90), 0xcb);
        EXPECT(gbc.readMem(0xad91), 0x12);
        // CB 12 01C6
        gbc.setState(0xbc85, 0x77f9, 0xbb40, 0x8018, 0xf2ae, 0x29da, 0x1, 0x0);
        gbc.writeMem(0xbc85, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x77f9);
        EXPECT(gbc.pc(), 0xbc87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc85), 0xcb);
        EXPECT(gbc.readMem(0xbc86), 0x12);
        // CB 12 01C7
        gbc.setState(0x60ab, 0x728b, 0x9b70, 0xbadd, 0xde51, 0x4c56, 0x0, 0x1);
        gbc.writeMem(0x60ab, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x728b);
        EXPECT(gbc.pc(), 0x60ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 01C8
        gbc.setState(0x426c, 0xbd4f, 0x7c0, 0x6901, 0xca77, 0x9fb9, 0x1, 0x0);
        gbc.writeMem(0x426c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xbd4f);
        EXPECT(gbc.pc(), 0x426e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 01C9
        gbc.setState(0x970, 0x5faf, 0xb3c0, 0x82e0, 0x9ce7, 0x5d42, 0x1, 0x1);
        gbc.writeMem(0x970, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5faf);
        EXPECT(gbc.pc(), 0x972);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 01CA
        gbc.setState(0x790c, 0x481b, 0xc330, 0x6278, 0xfbf8, 0x813b, 0x1, 0x0);
        gbc.writeMem(0x790c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x481b);
        EXPECT(gbc.pc(), 0x790e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 01CB
        gbc.setState(0xece1, 0x9699, 0x7f50, 0x555b, 0xbf08, 0xfab8, 0x1, 0x0);
        gbc.writeMem(0xece1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x9699);
        EXPECT(gbc.pc(), 0xece3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xece1), 0xcb);
        EXPECT(gbc.readMem(0xece2), 0x12);
        // CB 12 01CD
        gbc.setState(0x2cc0, 0xfcd, 0x1080, 0x8c96, 0xf04d, 0xdbbf, 0x0, 0x1);
        gbc.writeMem(0x2cc0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xfcd);
        EXPECT(gbc.pc(), 0x2cc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 01CE
        gbc.setState(0xb9ff, 0xe74d, 0x12a0, 0x346d, 0x3fe, 0xc18f, 0x0, 0x1);
        gbc.writeMem(0xb9ff, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xe74d);
        EXPECT(gbc.pc(), 0xba01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9ff), 0xcb);
        EXPECT(gbc.readMem(0xba00), 0x12);
        // CB 12 01CF
        gbc.setState(0x2d6b, 0x9f7f, 0x34b0, 0xc846, 0x4eef, 0x2efb, 0x1, 0x0);
        gbc.writeMem(0x2d6b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x9f7f);
        EXPECT(gbc.pc(), 0x2d6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 01D0
        gbc.setState(0xf83, 0x22cc, 0xa360, 0x8204, 0xd3fc, 0x9db0, 0x0, 0x1);
        gbc.writeMem(0xf83, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x22cc);
        EXPECT(gbc.pc(), 0xf85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 01D1
        gbc.setState(0xeeff, 0xa38a, 0x7c00, 0x5673, 0x47e1, 0x9931, 0x0, 0x1);
        gbc.writeMem(0xeeff, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa38a);
        EXPECT(gbc.pc(), 0xef01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeff), 0xcb);
        EXPECT(gbc.readMem(0xef00), 0x12);
        // CB 12 01D2
        gbc.setState(0xc2b8, 0x7b98, 0x1510, 0xd49d, 0x45d6, 0xbfb6, 0x1, 0x1);
        gbc.writeMem(0xc2b8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7b98);
        EXPECT(gbc.pc(), 0xc2ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2b8), 0xcb);
        EXPECT(gbc.readMem(0xc2b9), 0x12);
        // CB 12 01D3
        gbc.setState(0xc551, 0x484b, 0x4090, 0x3c89, 0xa5d3, 0xe0d9, 0x0, 0x0);
        gbc.writeMem(0xc551, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x484b);
        EXPECT(gbc.pc(), 0xc553);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc551), 0xcb);
        EXPECT(gbc.readMem(0xc552), 0x12);
        // CB 12 01D6
        gbc.setState(0x819, 0x7e50, 0x8ab0, 0x8100, 0x3689, 0x890c, 0x0, 0x0);
        gbc.writeMem(0x819, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x7e50);
        EXPECT(gbc.pc(), 0x81b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 01D7
        gbc.setState(0xfe6, 0xfe42, 0x7310, 0x5200, 0xddb7, 0xb750, 0x1, 0x0);
        gbc.writeMem(0xfe6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xfe42);
        EXPECT(gbc.pc(), 0xfe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 01D8
        gbc.setState(0x8be6, 0xcdfa, 0xfac0, 0x8247, 0xf34c, 0x9e03, 0x0, 0x0);
        gbc.writeMem(0x8be6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xcdfa);
        EXPECT(gbc.pc(), 0x8be8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8be6), 0xcb);
        EXPECT(gbc.readMem(0x8be7), 0x12);
        // CB 12 01DA
        gbc.setState(0xc93a, 0x542b, 0x2ce0, 0xe07f, 0xece6, 0xf63, 0x1, 0x0);
        gbc.writeMem(0xc93a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x542b);
        EXPECT(gbc.pc(), 0xc93c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc93a), 0xcb);
        EXPECT(gbc.readMem(0xc93b), 0x12);
        // CB 12 01DB
        gbc.setState(0x4e7e, 0xe415, 0x35f0, 0x9745, 0x509a, 0x1155, 0x0, 0x1);
        gbc.writeMem(0x4e7e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe415);
        EXPECT(gbc.pc(), 0x4e80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 01DC
        gbc.setState(0x8bf, 0x9d25, 0x550, 0x680b, 0x31b7, 0xafd3, 0x0, 0x1);
        gbc.writeMem(0x8bf, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x9d25);
        EXPECT(gbc.pc(), 0x8c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 01DD
        gbc.setState(0x12a, 0x93c7, 0x2710, 0x57c1, 0x33a9, 0xdefa, 0x0, 0x0);
        gbc.writeMem(0x12a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x93c7);
        EXPECT(gbc.pc(), 0x12c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 01DE
        gbc.setState(0x6bdb, 0xd3ee, 0xbc90, 0x15e1, 0x6769, 0x15aa, 0x1, 0x1);
        gbc.writeMem(0x6bdb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xd3ee);
        EXPECT(gbc.pc(), 0x6bdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 01DF
        gbc.setState(0x4dd5, 0x952e, 0xace0, 0x94b6, 0xd2a, 0xf006, 0x0, 0x0);
        gbc.writeMem(0x4dd5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x952e);
        EXPECT(gbc.pc(), 0x4dd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 01E0
        gbc.setState(0xd12f, 0x1166, 0x27a0, 0x2595, 0xda70, 0xfb82, 0x0, 0x1);
        gbc.writeMem(0xd12f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x1166);
        EXPECT(gbc.pc(), 0xd131);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd12f), 0xcb);
        EXPECT(gbc.readMem(0xd130), 0x12);
        // CB 12 01E1
        gbc.setState(0xe76f, 0x82ac, 0x1910, 0x9d76, 0x5b67, 0x59bb, 0x1, 0x0);
        gbc.writeMem(0xe76f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x82ac);
        EXPECT(gbc.pc(), 0xe771);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe76f), 0xcb);
        EXPECT(gbc.readMem(0xe770), 0x12);
        // CB 12 01E2
        gbc.setState(0x24cc, 0xd052, 0xa120, 0x7521, 0xc795, 0xcee8, 0x0, 0x0);
        gbc.writeMem(0x24cc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xd052);
        EXPECT(gbc.pc(), 0x24ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 01E3
        gbc.setState(0x5000, 0xe85a, 0x8990, 0x8e40, 0x448f, 0xf5b9, 0x1, 0x0);
        gbc.writeMem(0x5000, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xe85a);
        EXPECT(gbc.pc(), 0x5002);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 01E4
        gbc.setState(0xd64f, 0x9216, 0xb1a0, 0xdab, 0x34c, 0xf22f, 0x1, 0x0);
        gbc.writeMem(0xd64f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9216);
        EXPECT(gbc.pc(), 0xd651);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd64f), 0xcb);
        EXPECT(gbc.readMem(0xd650), 0x12);
        // CB 12 01E5
        gbc.setState(0xd9c8, 0xaa2, 0x4d10, 0x3ebd, 0x5843, 0x28bd, 0x0, 0x1);
        gbc.writeMem(0xd9c8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xaa2);
        EXPECT(gbc.pc(), 0xd9ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9c8), 0xcb);
        EXPECT(gbc.readMem(0xd9c9), 0x12);
        // CB 12 01E6
        gbc.setState(0x4b58, 0x1b84, 0x4050, 0x1c31, 0xfaa0, 0x2e1e, 0x0, 0x0);
        gbc.writeMem(0x4b58, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1b84);
        EXPECT(gbc.pc(), 0x4b5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 01E7
        gbc.setState(0xd55d, 0xc244, 0x34e0, 0xcd26, 0xd0d5, 0x1be9, 0x1, 0x0);
        gbc.writeMem(0xd55d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xc244);
        EXPECT(gbc.pc(), 0xd55f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd55d), 0xcb);
        EXPECT(gbc.readMem(0xd55e), 0x12);
        // CB 12 01E8
        gbc.setState(0x1132, 0xb809, 0x79b0, 0x3795, 0x2783, 0x444a, 0x0, 0x0);
        gbc.writeMem(0x1132, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb809);
        EXPECT(gbc.pc(), 0x1134);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 01E9
        gbc.setState(0x93ae, 0xabd7, 0xe770, 0xaaef, 0xc67d, 0x251d, 0x1, 0x1);
        gbc.writeMem(0x93ae, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xabd7);
        EXPECT(gbc.pc(), 0x93b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93ae), 0xcb);
        EXPECT(gbc.readMem(0x93af), 0x12);
        // CB 12 01EA
        gbc.setState(0x1471, 0xeba4, 0x9740, 0xd7c, 0x6daf, 0x2e93, 0x1, 0x0);
        gbc.writeMem(0x1471, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xeba4);
        EXPECT(gbc.pc(), 0x1473);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 01EB
        gbc.setState(0xef9d, 0x10ef, 0x9f0, 0xf8b4, 0x6b1e, 0xb2b0, 0x0, 0x0);
        gbc.writeMem(0xef9d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x10ef);
        EXPECT(gbc.pc(), 0xef9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef9d), 0xcb);
        EXPECT(gbc.readMem(0xef9e), 0x12);
        // CB 12 01EC
        gbc.setState(0x2980, 0x4381, 0x3590, 0x319a, 0xfdb2, 0x61a2, 0x1, 0x0);
        gbc.writeMem(0x2980, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x4381);
        EXPECT(gbc.pc(), 0x2982);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 01ED
        gbc.setState(0xe1a6, 0x3ae8, 0x3f50, 0xb212, 0x16dd, 0x75f4, 0x1, 0x0);
        gbc.writeMem(0xe1a6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x3ae8);
        EXPECT(gbc.pc(), 0xe1a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1a6), 0xcb);
        EXPECT(gbc.readMem(0xe1a7), 0x12);
        // CB 12 01EE
        gbc.setState(0xe19f, 0x5620, 0x21d0, 0xba72, 0x8650, 0x34df, 0x0, 0x0);
        gbc.writeMem(0xe19f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x5620);
        EXPECT(gbc.pc(), 0xe1a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe19f), 0xcb);
        EXPECT(gbc.readMem(0xe1a0), 0x12);
        // CB 12 01EF
        gbc.setState(0xead3, 0xeaf8, 0x6ff0, 0x1508, 0x7208, 0xa556, 0x1, 0x1);
        gbc.writeMem(0xead3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xeaf8);
        EXPECT(gbc.pc(), 0xead5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xead3), 0xcb);
        EXPECT(gbc.readMem(0xead4), 0x12);
        // CB 12 01F0
        gbc.setState(0x8724, 0xefcc, 0xf620, 0x2874, 0x2947, 0x5a7e, 0x0, 0x0);
        gbc.writeMem(0x8724, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xefcc);
        EXPECT(gbc.pc(), 0x8726);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8724), 0xcb);
        EXPECT(gbc.readMem(0x8725), 0x12);
        // CB 12 01F1
        gbc.setState(0x1c03, 0xca87, 0x5d20, 0x2462, 0x7e5b, 0x3da0, 0x1, 0x1);
        gbc.writeMem(0x1c03, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xca87);
        EXPECT(gbc.pc(), 0x1c05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 01F2
        gbc.setState(0x86c7, 0xd10, 0xf2b0, 0x469, 0xd5b7, 0x526b, 0x1, 0x1);
        gbc.writeMem(0x86c7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xd10);
        EXPECT(gbc.pc(), 0x86c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86c7), 0xcb);
        EXPECT(gbc.readMem(0x86c8), 0x12);
        // CB 12 01F3
        gbc.setState(0x7ef, 0xebea, 0x5c30, 0x4419, 0x39c3, 0x5d31, 0x0, 0x1);
        gbc.writeMem(0x7ef, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xebea);
        EXPECT(gbc.pc(), 0x7f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 01F4
        gbc.setState(0x1d1, 0xf2eb, 0x2350, 0x6f64, 0xd2d, 0x6619, 0x0, 0x0);
        gbc.writeMem(0x1d1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xf2eb);
        EXPECT(gbc.pc(), 0x1d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 01F5
        gbc.setState(0xe865, 0xe631, 0xba80, 0x1e9e, 0x2c5b, 0x79b5, 0x1, 0x1);
        gbc.writeMem(0xe865, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xe631);
        EXPECT(gbc.pc(), 0xe867);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe865), 0xcb);
        EXPECT(gbc.readMem(0xe866), 0x12);
        // CB 12 01F7
        gbc.setState(0xab43, 0x32ee, 0xaeb0, 0x4159, 0x4e42, 0xf177, 0x1, 0x1);
        gbc.writeMem(0xab43, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x32ee);
        EXPECT(gbc.pc(), 0xab45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab43), 0xcb);
        EXPECT(gbc.readMem(0xab44), 0x12);
        // CB 12 01F8
        gbc.setState(0x93a6, 0x6d41, 0x68c0, 0xfe53, 0xa3f2, 0xd79f, 0x1, 0x1);
        gbc.writeMem(0x93a6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x6d41);
        EXPECT(gbc.pc(), 0x93a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93a6), 0xcb);
        EXPECT(gbc.readMem(0x93a7), 0x12);
        // CB 12 01F9
        gbc.setState(0x6b29, 0xa107, 0x89e0, 0xfaaf, 0x8771, 0xaf38, 0x1, 0x0);
        gbc.writeMem(0x6b29, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xa107);
        EXPECT(gbc.pc(), 0x6b2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 01FA
        gbc.setState(0x8bff, 0x81e5, 0x9f00, 0x63f4, 0xb3eb, 0xbf6d, 0x0, 0x0);
        gbc.writeMem(0x8bff, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x81e5);
        EXPECT(gbc.pc(), 0x8c01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bff), 0xcb);
        EXPECT(gbc.readMem(0x8c00), 0x12);
        // CB 12 01FB
        gbc.setState(0xdee8, 0xbb8a, 0x21f0, 0x494, 0x441c, 0xeeb1, 0x1, 0x0);
        gbc.writeMem(0xdee8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xbb8a);
        EXPECT(gbc.pc(), 0xdeea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdee8), 0xcb);
        EXPECT(gbc.readMem(0xdee9), 0x12);
        // CB 12 01FC
        gbc.setState(0xb18a, 0xffdd, 0x6c80, 0x849f, 0xf1df, 0x5e82, 0x1, 0x1);
        gbc.writeMem(0xb18a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xffdd);
        EXPECT(gbc.pc(), 0xb18c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb18a), 0xcb);
        EXPECT(gbc.readMem(0xb18b), 0x12);
        // CB 12 01FD
        gbc.setState(0xb0e2, 0x9fc8, 0x9de0, 0x129c, 0x8e96, 0xeb17, 0x0, 0x1);
        gbc.writeMem(0xb0e2, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x9fc8);
        EXPECT(gbc.pc(), 0xb0e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0e2), 0xcb);
        EXPECT(gbc.readMem(0xb0e3), 0x12);
        // CB 12 01FE
        gbc.setState(0x487c, 0xe2c7, 0x18c0, 0x2f5f, 0x32c8, 0xc66d, 0x1, 0x1);
        gbc.writeMem(0x487c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xe2c7);
        EXPECT(gbc.pc(), 0x487e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 01FF
        gbc.setState(0x4d06, 0x4fd3, 0xbd00, 0x358, 0x7ea8, 0xa72e, 0x0, 0x1);
        gbc.writeMem(0x4d06, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x4fd3);
        EXPECT(gbc.pc(), 0x4d08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0200
        gbc.setState(0xe957, 0xafab, 0xd520, 0xec54, 0xd93b, 0x59e5, 0x1, 0x1);
        gbc.writeMem(0xe957, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xafab);
        EXPECT(gbc.pc(), 0xe959);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe957), 0xcb);
        EXPECT(gbc.readMem(0xe958), 0x12);
        // CB 12 0201
        gbc.setState(0x3f4a, 0xe5da, 0x3900, 0x2712, 0x2163, 0xbe87, 0x1, 0x1);
        gbc.writeMem(0x3f4a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xe5da);
        EXPECT(gbc.pc(), 0x3f4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0202
        gbc.setState(0x875d, 0x8eba, 0xe20, 0x2ae3, 0xe17c, 0x437, 0x0, 0x0);
        gbc.writeMem(0x875d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x8eba);
        EXPECT(gbc.pc(), 0x875f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x875d), 0xcb);
        EXPECT(gbc.readMem(0x875e), 0x12);
        // CB 12 0203
        gbc.setState(0x4a95, 0xb6de, 0xb300, 0x3ce, 0xf105, 0xe3a1, 0x0, 0x1);
        gbc.writeMem(0x4a95, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xb6de);
        EXPECT(gbc.pc(), 0x4a97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0204
        gbc.setState(0xb2b2, 0x3bd, 0x7090, 0xef1a, 0xb5dc, 0x338, 0x1, 0x1);
        gbc.writeMem(0xb2b2, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x3bd);
        EXPECT(gbc.pc(), 0xb2b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2b2), 0xcb);
        EXPECT(gbc.readMem(0xb2b3), 0x12);
        // CB 12 0205
        gbc.setState(0x82a3, 0xfa64, 0x38b0, 0x2121, 0xe7fc, 0x55b4, 0x0, 0x1);
        gbc.writeMem(0x82a3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xfa64);
        EXPECT(gbc.pc(), 0x82a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82a3), 0xcb);
        EXPECT(gbc.readMem(0x82a4), 0x12);
        // CB 12 0206
        gbc.setState(0x23ff, 0xcd22, 0xa1a0, 0x3485, 0xce16, 0x7b26, 0x1, 0x0);
        gbc.writeMem(0x23ff, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xcd22);
        EXPECT(gbc.pc(), 0x2401);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0207
        gbc.setState(0xd548, 0x5218, 0x9af0, 0x3127, 0x2d3a, 0xad93, 0x0, 0x1);
        gbc.writeMem(0xd548, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x5218);
        EXPECT(gbc.pc(), 0xd54a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd548), 0xcb);
        EXPECT(gbc.readMem(0xd549), 0x12);
        // CB 12 0208
        gbc.setState(0xe8fa, 0x9273, 0xbc90, 0x3f97, 0x6dc3, 0xbe14, 0x0, 0x1);
        gbc.writeMem(0xe8fa, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x9273);
        EXPECT(gbc.pc(), 0xe8fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8fa), 0xcb);
        EXPECT(gbc.readMem(0xe8fb), 0x12);
        // CB 12 0209
        gbc.setState(0x4760, 0x7f54, 0xbe40, 0x4693, 0xb8a0, 0xa868, 0x0, 0x0);
        gbc.writeMem(0x4760, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x7f54);
        EXPECT(gbc.pc(), 0x4762);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 020A
        gbc.setState(0x7d6f, 0x17ba, 0x7160, 0x8277, 0xc33d, 0x486f, 0x0, 0x1);
        gbc.writeMem(0x7d6f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x17ba);
        EXPECT(gbc.pc(), 0x7d71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 020B
        gbc.setState(0x704c, 0x19e2, 0x9ee0, 0xb389, 0xf03e, 0xb01, 0x0, 0x1);
        gbc.writeMem(0x704c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x19e2);
        EXPECT(gbc.pc(), 0x704e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 020C
        gbc.setState(0xd748, 0xdfb, 0x9180, 0x506e, 0x47, 0xa424, 0x0, 0x0);
        gbc.writeMem(0xd748, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xdfb);
        EXPECT(gbc.pc(), 0xd74a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd748), 0xcb);
        EXPECT(gbc.readMem(0xd749), 0x12);
        // CB 12 020E
        gbc.setState(0x17eb, 0x5fa, 0xd860, 0x9c9a, 0x2e06, 0xcb14, 0x1, 0x1);
        gbc.writeMem(0x17eb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x5fa);
        EXPECT(gbc.pc(), 0x17ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 020F
        gbc.setState(0xcf70, 0x1bb9, 0xb550, 0x36a8, 0xd3c4, 0xcc2c, 0x1, 0x1);
        gbc.writeMem(0xcf70, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x1bb9);
        EXPECT(gbc.pc(), 0xcf72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf70), 0xcb);
        EXPECT(gbc.readMem(0xcf71), 0x12);
        // CB 12 0210
        gbc.setState(0x7f3, 0x2c55, 0x84f0, 0x212, 0x1d34, 0x78a9, 0x0, 0x1);
        gbc.writeMem(0x7f3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x2c55);
        EXPECT(gbc.pc(), 0x7f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0211
        gbc.setState(0xc380, 0xd7f6, 0x8dd0, 0x7ec6, 0xbaf3, 0xe74c, 0x1, 0x1);
        gbc.writeMem(0xc380, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xd7f6);
        EXPECT(gbc.pc(), 0xc382);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc380), 0xcb);
        EXPECT(gbc.readMem(0xc381), 0x12);
        // CB 12 0212
        gbc.setState(0x53cf, 0xbdd8, 0x5100, 0x8370, 0xe4b3, 0x330a, 0x0, 0x0);
        gbc.writeMem(0x53cf, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xbdd8);
        EXPECT(gbc.pc(), 0x53d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0213
        gbc.setState(0x565, 0x3de4, 0xc980, 0x68ea, 0xca49, 0x12cd, 0x1, 0x0);
        gbc.writeMem(0x565, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x3de4);
        EXPECT(gbc.pc(), 0x567);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0214
        gbc.setState(0xaa52, 0x5fc0, 0x2370, 0xc0a1, 0x5f66, 0x6896, 0x0, 0x1);
        gbc.writeMem(0xaa52, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5fc0);
        EXPECT(gbc.pc(), 0xaa54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa52), 0xcb);
        EXPECT(gbc.readMem(0xaa53), 0x12);
        // CB 12 0215
        gbc.setState(0x845f, 0x31bf, 0xf4a0, 0xb247, 0xd406, 0x4c66, 0x1, 0x1);
        gbc.writeMem(0x845f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x31bf);
        EXPECT(gbc.pc(), 0x8461);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x845f), 0xcb);
        EXPECT(gbc.readMem(0x8460), 0x12);
        // CB 12 0216
        gbc.setState(0xef1a, 0xcb03, 0xdcc0, 0x7a45, 0x8a34, 0x79f1, 0x0, 0x0);
        gbc.writeMem(0xef1a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xcb03);
        EXPECT(gbc.pc(), 0xef1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef1a), 0xcb);
        EXPECT(gbc.readMem(0xef1b), 0x12);
        // CB 12 0217
        gbc.setState(0x1f82, 0x2151, 0x7ca0, 0xf64c, 0x4469, 0x6f8f, 0x0, 0x1);
        gbc.writeMem(0x1f82, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x2151);
        EXPECT(gbc.pc(), 0x1f84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0219
        gbc.setState(0xc252, 0x678e, 0xaa10, 0xb80e, 0x7d9a, 0xfdd4, 0x1, 0x1);
        gbc.writeMem(0xc252, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x678e);
        EXPECT(gbc.pc(), 0xc254);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc252), 0xcb);
        EXPECT(gbc.readMem(0xc253), 0x12);
        // CB 12 021A
        gbc.setState(0x4ada, 0x6b46, 0x4240, 0xc314, 0x8595, 0xd895, 0x1, 0x0);
        gbc.writeMem(0x4ada, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x6b46);
        EXPECT(gbc.pc(), 0x4adc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 021B
        gbc.setState(0x126f, 0xd7d9, 0xb810, 0xb17a, 0xbd5b, 0x9aa, 0x1, 0x1);
        gbc.writeMem(0x126f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xd7d9);
        EXPECT(gbc.pc(), 0x1271);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 021C
        gbc.setState(0x9a67, 0xcc24, 0x1120, 0xbe14, 0xa4b9, 0x8e63, 0x0, 0x1);
        gbc.writeMem(0x9a67, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xcc24);
        EXPECT(gbc.pc(), 0x9a69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a67), 0xcb);
        EXPECT(gbc.readMem(0x9a68), 0x12);
        // CB 12 021D
        gbc.setState(0xaf60, 0x2991, 0x17d0, 0x5f70, 0x4f16, 0x8266, 0x1, 0x0);
        gbc.writeMem(0xaf60, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x2991);
        EXPECT(gbc.pc(), 0xaf62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf60), 0xcb);
        EXPECT(gbc.readMem(0xaf61), 0x12);
        // CB 12 021E
        gbc.setState(0x1f10, 0xb921, 0x3870, 0x5fa6, 0x28c4, 0x748b, 0x1, 0x1);
        gbc.writeMem(0x1f10, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xb921);
        EXPECT(gbc.pc(), 0x1f12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 021F
        gbc.setState(0x6389, 0x99b0, 0x3f30, 0x1851, 0xb9ba, 0xb1d9, 0x0, 0x0);
        gbc.writeMem(0x6389, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x99b0);
        EXPECT(gbc.pc(), 0x638b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0220
        gbc.setState(0xd1ff, 0x8580, 0x240, 0x8b3a, 0x22ef, 0xb9b2, 0x1, 0x0);
        gbc.writeMem(0xd1ff, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x8580);
        EXPECT(gbc.pc(), 0xd201);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1ff), 0xcb);
        EXPECT(gbc.readMem(0xd200), 0x12);
        // CB 12 0221
        gbc.setState(0xa45c, 0x80a9, 0x6120, 0xfd54, 0xbd60, 0x69bf, 0x1, 0x0);
        gbc.writeMem(0xa45c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x80a9);
        EXPECT(gbc.pc(), 0xa45e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa45c), 0xcb);
        EXPECT(gbc.readMem(0xa45d), 0x12);
        // CB 12 0222
        gbc.setState(0x23fc, 0x8c9, 0x5d60, 0xda0e, 0x3434, 0x8220, 0x0, 0x1);
        gbc.writeMem(0x23fc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x8c9);
        EXPECT(gbc.pc(), 0x23fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0223
        gbc.setState(0xc689, 0x4483, 0xa5b0, 0xb59e, 0x64c4, 0xb7a, 0x0, 0x1);
        gbc.writeMem(0xc689, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x4483);
        EXPECT(gbc.pc(), 0xc68b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc689), 0xcb);
        EXPECT(gbc.readMem(0xc68a), 0x12);
        // CB 12 0224
        gbc.setState(0x38f1, 0x7336, 0x9500, 0xd797, 0x6c1e, 0xbbf8, 0x1, 0x0);
        gbc.writeMem(0x38f1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x7336);
        EXPECT(gbc.pc(), 0x38f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0225
        gbc.setState(0x83e3, 0x3c1, 0xf9d0, 0x8c76, 0xd647, 0x1834, 0x1, 0x0);
        gbc.writeMem(0x83e3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3c1);
        EXPECT(gbc.pc(), 0x83e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83e3), 0xcb);
        EXPECT(gbc.readMem(0x83e4), 0x12);
        // CB 12 0226
        gbc.setState(0x280c, 0x3621, 0x8160, 0xfe69, 0xc2fc, 0x1848, 0x1, 0x0);
        gbc.writeMem(0x280c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x3621);
        EXPECT(gbc.pc(), 0x280e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0227
        gbc.setState(0xabe7, 0x5fb3, 0xc30, 0x93c2, 0xeb11, 0x41b1, 0x1, 0x0);
        gbc.writeMem(0xabe7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5fb3);
        EXPECT(gbc.pc(), 0xabe9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabe7), 0xcb);
        EXPECT(gbc.readMem(0xabe8), 0x12);
        // CB 12 0228
        gbc.setState(0x98d0, 0xdd91, 0x7e00, 0xa639, 0x508a, 0x98bd, 0x0, 0x1);
        gbc.writeMem(0x98d0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xdd91);
        EXPECT(gbc.pc(), 0x98d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98d0), 0xcb);
        EXPECT(gbc.readMem(0x98d1), 0x12);
        // CB 12 0229
        gbc.setState(0xa5aa, 0x409c, 0x8880, 0xd433, 0x31d9, 0x38f3, 0x0, 0x1);
        gbc.writeMem(0xa5aa, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x409c);
        EXPECT(gbc.pc(), 0xa5ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5aa), 0xcb);
        EXPECT(gbc.readMem(0xa5ab), 0x12);
        // CB 12 022A
        gbc.setState(0x6d35, 0x5060, 0x7ad0, 0xa309, 0xbf6b, 0xac24, 0x0, 0x1);
        gbc.writeMem(0x6d35, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x5060);
        EXPECT(gbc.pc(), 0x6d37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 022B
        gbc.setState(0xd9e7, 0x420d, 0xd7d0, 0x28b9, 0xbad5, 0x9f0c, 0x0, 0x0);
        gbc.writeMem(0xd9e7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x420d);
        EXPECT(gbc.pc(), 0xd9e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9e7), 0xcb);
        EXPECT(gbc.readMem(0xd9e8), 0x12);
        // CB 12 022C
        gbc.setState(0x2387, 0xf2e5, 0x7b10, 0x5f37, 0x50ad, 0x8e1a, 0x1, 0x0);
        gbc.writeMem(0x2387, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xf2e5);
        EXPECT(gbc.pc(), 0x2389);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 022D
        gbc.setState(0x3cd0, 0x7022, 0x29d0, 0xfa5a, 0x1ca9, 0x184f, 0x0, 0x1);
        gbc.writeMem(0x3cd0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x7022);
        EXPECT(gbc.pc(), 0x3cd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 022F
        gbc.setState(0xb737, 0xfc2d, 0xd5d0, 0x858a, 0x23d6, 0xc578, 0x0, 0x1);
        gbc.writeMem(0xb737, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xfc2d);
        EXPECT(gbc.pc(), 0xb739);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb737), 0xcb);
        EXPECT(gbc.readMem(0xb738), 0x12);
        // CB 12 0230
        gbc.setState(0xcbfa, 0x74dc, 0x6ae0, 0xdb27, 0x101a, 0x9542, 0x1, 0x1);
        gbc.writeMem(0xcbfa, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x74dc);
        EXPECT(gbc.pc(), 0xcbfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbfa), 0xcb);
        EXPECT(gbc.readMem(0xcbfb), 0x12);
        // CB 12 0231
        gbc.setState(0x8d94, 0x66db, 0x38b0, 0xbe5e, 0xcf92, 0xb466, 0x0, 0x0);
        gbc.writeMem(0x8d94, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x66db);
        EXPECT(gbc.pc(), 0x8d96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d94), 0xcb);
        EXPECT(gbc.readMem(0x8d95), 0x12);
        // CB 12 0232
        gbc.setState(0xa3e6, 0xce4f, 0xb540, 0xb538, 0x5e92, 0xb167, 0x0, 0x0);
        gbc.writeMem(0xa3e6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xce4f);
        EXPECT(gbc.pc(), 0xa3e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3e6), 0xcb);
        EXPECT(gbc.readMem(0xa3e7), 0x12);
        // CB 12 0233
        gbc.setState(0xe10, 0xebe2, 0x3d30, 0x8675, 0xc5fb, 0x66b, 0x0, 0x0);
        gbc.writeMem(0xe10, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xebe2);
        EXPECT(gbc.pc(), 0xe12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0234
        gbc.setState(0x3f82, 0x75f1, 0xc490, 0x153f, 0x7e2d, 0xe860, 0x1, 0x1);
        gbc.writeMem(0x3f82, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x75f1);
        EXPECT(gbc.pc(), 0x3f84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0235
        gbc.setState(0x2ac5, 0x1759, 0xd8b0, 0xa5ae, 0xd908, 0xa9b, 0x0, 0x1);
        gbc.writeMem(0x2ac5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x1759);
        EXPECT(gbc.pc(), 0x2ac7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0236
        gbc.setState(0x9055, 0xd644, 0x2b0, 0x22e3, 0x53ca, 0xb50e, 0x0, 0x0);
        gbc.writeMem(0x9055, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd644);
        EXPECT(gbc.pc(), 0x9057);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9055), 0xcb);
        EXPECT(gbc.readMem(0x9056), 0x12);
        // CB 12 0237
        gbc.setState(0x2273, 0x39b3, 0xbd0, 0x5cf5, 0xa80c, 0x5071, 0x0, 0x0);
        gbc.writeMem(0x2273, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x39b3);
        EXPECT(gbc.pc(), 0x2275);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0239
        gbc.setState(0x1bda, 0xd537, 0xc2c0, 0xaeb3, 0xbd2a, 0xc75c, 0x0, 0x1);
        gbc.writeMem(0x1bda, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd537);
        EXPECT(gbc.pc(), 0x1bdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 023A
        gbc.setState(0xe951, 0xb0ea, 0x3630, 0x2a18, 0x6740, 0x4a60, 0x0, 0x0);
        gbc.writeMem(0xe951, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb0ea);
        EXPECT(gbc.pc(), 0xe953);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe951), 0xcb);
        EXPECT(gbc.readMem(0xe952), 0x12);
        // CB 12 023B
        gbc.setState(0x8439, 0x4b40, 0xd1b0, 0xf812, 0xd509, 0xe880, 0x1, 0x0);
        gbc.writeMem(0x8439, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x4b40);
        EXPECT(gbc.pc(), 0x843b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8439), 0xcb);
        EXPECT(gbc.readMem(0x843a), 0x12);
        // CB 12 023C
        gbc.setState(0x3e16, 0xc5b7, 0x4260, 0x8fc4, 0xbe11, 0x5284, 0x1, 0x1);
        gbc.writeMem(0x3e16, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc5b7);
        EXPECT(gbc.pc(), 0x3e18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 023D
        gbc.setState(0x366a, 0xca60, 0x5310, 0x2085, 0x874, 0xeecb, 0x1, 0x0);
        gbc.writeMem(0x366a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xca60);
        EXPECT(gbc.pc(), 0x366c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 023E
        gbc.setState(0xb098, 0x72d0, 0x5420, 0x7915, 0x7f94, 0x9d9e, 0x0, 0x0);
        gbc.writeMem(0xb098, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x72d0);
        EXPECT(gbc.pc(), 0xb09a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb098), 0xcb);
        EXPECT(gbc.readMem(0xb099), 0x12);
        // CB 12 023F
        gbc.setState(0x3670, 0x70be, 0xa430, 0x2730, 0x357, 0x9cc9, 0x1, 0x0);
        gbc.writeMem(0x3670, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x70be);
        EXPECT(gbc.pc(), 0x3672);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0240
        gbc.setState(0x23f0, 0x1fc5, 0x72c0, 0xa22d, 0x4868, 0x1674, 0x0, 0x0);
        gbc.writeMem(0x23f0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x1fc5);
        EXPECT(gbc.pc(), 0x23f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0242
        gbc.setState(0x43de, 0x8760, 0x3660, 0x4985, 0xbfdf, 0x15d9, 0x1, 0x0);
        gbc.writeMem(0x43de, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x8760);
        EXPECT(gbc.pc(), 0x43e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0243
        gbc.setState(0xdaaa, 0x108c, 0x3020, 0x3117, 0xbb35, 0x6878, 0x0, 0x0);
        gbc.writeMem(0xdaaa, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x108c);
        EXPECT(gbc.pc(), 0xdaac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaaa), 0xcb);
        EXPECT(gbc.readMem(0xdaab), 0x12);
        // CB 12 0244
        gbc.setState(0xb1ef, 0xc8b2, 0xd040, 0xf063, 0xa23e, 0xdf52, 0x1, 0x1);
        gbc.writeMem(0xb1ef, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xc8b2);
        EXPECT(gbc.pc(), 0xb1f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1ef), 0xcb);
        EXPECT(gbc.readMem(0xb1f0), 0x12);
        // CB 12 0245
        gbc.setState(0x6e84, 0xb326, 0xa650, 0x2a25, 0x2c30, 0xe029, 0x0, 0x0);
        gbc.writeMem(0x6e84, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xb326);
        EXPECT(gbc.pc(), 0x6e86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0246
        gbc.setState(0x71cf, 0xaea3, 0x1d00, 0x1fbf, 0xbad0, 0xc946, 0x1, 0x1);
        gbc.writeMem(0x71cf, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xaea3);
        EXPECT(gbc.pc(), 0x71d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0247
        gbc.setState(0x1172, 0x84ed, 0x1b00, 0x35a8, 0x20d1, 0x7e03, 0x1, 0x0);
        gbc.writeMem(0x1172, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x84ed);
        EXPECT(gbc.pc(), 0x1174);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0248
        gbc.setState(0xb494, 0xded3, 0xd90, 0xa0c3, 0xc13a, 0x1a2b, 0x1, 0x0);
        gbc.writeMem(0xb494, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xded3);
        EXPECT(gbc.pc(), 0xb496);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb494), 0xcb);
        EXPECT(gbc.readMem(0xb495), 0x12);
        // CB 12 024A
        gbc.setState(0xc5, 0xf571, 0xb7b0, 0x3591, 0x667f, 0xde44, 0x0, 0x1);
        gbc.writeMem(0xc5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf571);
        EXPECT(gbc.pc(), 0xc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 024B
        gbc.setState(0xab15, 0x9e, 0x5a60, 0x42a0, 0xc420, 0x7189, 0x1, 0x0);
        gbc.writeMem(0xab15, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x9e);
        EXPECT(gbc.pc(), 0xab17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab15), 0xcb);
        EXPECT(gbc.readMem(0xab16), 0x12);
        // CB 12 024C
        gbc.setState(0x50b0, 0x66cb, 0xee40, 0x8c5b, 0x59ef, 0x8c98, 0x1, 0x1);
        gbc.writeMem(0x50b0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x66cb);
        EXPECT(gbc.pc(), 0x50b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 024D
        gbc.setState(0x6419, 0x318d, 0xf210, 0x4c07, 0x166d, 0xc16d, 0x1, 0x1);
        gbc.writeMem(0x6419, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x318d);
        EXPECT(gbc.pc(), 0x641b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 024E
        gbc.setState(0x8ad5, 0x1ca5, 0x8a70, 0x9e48, 0x500d, 0x55a, 0x1, 0x0);
        gbc.writeMem(0x8ad5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x1ca5);
        EXPECT(gbc.pc(), 0x8ad7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ad5), 0xcb);
        EXPECT(gbc.readMem(0x8ad6), 0x12);
        // CB 12 024F
        gbc.setState(0xb740, 0x77f6, 0x8c50, 0x1aaf, 0xc1ba, 0x5a3f, 0x1, 0x1);
        gbc.writeMem(0xb740, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x77f6);
        EXPECT(gbc.pc(), 0xb742);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb740), 0xcb);
        EXPECT(gbc.readMem(0xb741), 0x12);
        // CB 12 0250
        gbc.setState(0x2955, 0xed8, 0x1e20, 0x972f, 0x5ad3, 0xf7dd, 0x1, 0x1);
        gbc.writeMem(0x2955, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xed8);
        EXPECT(gbc.pc(), 0x2957);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0251
        gbc.setState(0xd335, 0xac45, 0x81c0, 0x110e, 0xb661, 0x83c4, 0x0, 0x1);
        gbc.writeMem(0xd335, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xac45);
        EXPECT(gbc.pc(), 0xd337);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd335), 0xcb);
        EXPECT(gbc.readMem(0xd336), 0x12);
        // CB 12 0252
        gbc.setState(0x81df, 0x1466, 0x9d60, 0x3254, 0x7bfc, 0x555b, 0x0, 0x0);
        gbc.writeMem(0x81df, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x1466);
        EXPECT(gbc.pc(), 0x81e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81df), 0xcb);
        EXPECT(gbc.readMem(0x81e0), 0x12);
        // CB 12 0253
        gbc.setState(0xd6c, 0x3246, 0x9f90, 0x7e5d, 0xb94c, 0x19bb, 0x0, 0x0);
        gbc.writeMem(0xd6c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x3246);
        EXPECT(gbc.pc(), 0xd6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0254
        gbc.setState(0x9477, 0xaa83, 0x4db0, 0xaa6e, 0xe757, 0x83cd, 0x0, 0x0);
        gbc.writeMem(0x9477, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xaa83);
        EXPECT(gbc.pc(), 0x9479);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9477), 0xcb);
        EXPECT(gbc.readMem(0x9478), 0x12);
        // CB 12 0255
        gbc.setState(0x4114, 0xfa1e, 0xb4c0, 0xcb5c, 0x7fd8, 0x8f5b, 0x0, 0x1);
        gbc.writeMem(0x4114, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xfa1e);
        EXPECT(gbc.pc(), 0x4116);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0256
        gbc.setState(0x4736, 0xaa41, 0xb430, 0xe468, 0x89a6, 0x3ce6, 0x0, 0x0);
        gbc.writeMem(0x4736, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xaa41);
        EXPECT(gbc.pc(), 0x4738);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0257
        gbc.setState(0x46b6, 0x5901, 0x1980, 0xf906, 0x5281, 0xe1e2, 0x0, 0x0);
        gbc.writeMem(0x46b6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5901);
        EXPECT(gbc.pc(), 0x46b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0258
        gbc.setState(0x9364, 0x92ba, 0xd0b0, 0x4f18, 0x12b2, 0xf7ad, 0x0, 0x0);
        gbc.writeMem(0x9364, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x92ba);
        EXPECT(gbc.pc(), 0x9366);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9364), 0xcb);
        EXPECT(gbc.readMem(0x9365), 0x12);
        // CB 12 0259
        gbc.setState(0xbbbe, 0xf1c7, 0x1fb0, 0x4f9c, 0x41c3, 0xf36d, 0x1, 0x0);
        gbc.writeMem(0xbbbe, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xf1c7);
        EXPECT(gbc.pc(), 0xbbc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbbe), 0xcb);
        EXPECT(gbc.readMem(0xbbbf), 0x12);
        // CB 12 025A
        gbc.setState(0xbc1d, 0x135b, 0x4d70, 0x3886, 0xb21e, 0xda4, 0x1, 0x1);
        gbc.writeMem(0xbc1d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x135b);
        EXPECT(gbc.pc(), 0xbc1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc1d), 0xcb);
        EXPECT(gbc.readMem(0xbc1e), 0x12);
        // CB 12 025B
        gbc.setState(0x9190, 0xde96, 0x8330, 0xce11, 0x8a95, 0xe249, 0x0, 0x0);
        gbc.writeMem(0x9190, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xde96);
        EXPECT(gbc.pc(), 0x9192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9190), 0xcb);
        EXPECT(gbc.readMem(0x9191), 0x12);
        // CB 12 025C
        gbc.setState(0x20ac, 0x2fcf, 0x9c10, 0x4f1c, 0x17a2, 0xcc9, 0x1, 0x0);
        gbc.writeMem(0x20ac, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x2fcf);
        EXPECT(gbc.pc(), 0x20ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 025D
        gbc.setState(0xa9a3, 0xbd29, 0x4c90, 0x14b8, 0x5c81, 0xec01, 0x1, 0x0);
        gbc.writeMem(0xa9a3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xbd29);
        EXPECT(gbc.pc(), 0xa9a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9a3), 0xcb);
        EXPECT(gbc.readMem(0xa9a4), 0x12);
        // CB 12 025E
        gbc.setState(0xbe8b, 0xdc4f, 0x58c0, 0xa3d8, 0x266d, 0xa94f, 0x0, 0x1);
        gbc.writeMem(0xbe8b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xdc4f);
        EXPECT(gbc.pc(), 0xbe8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe8b), 0xcb);
        EXPECT(gbc.readMem(0xbe8c), 0x12);
        // CB 12 025F
        gbc.setState(0x6a86, 0x3b69, 0xf620, 0x589f, 0x70eb, 0xffb5, 0x1, 0x1);
        gbc.writeMem(0x6a86, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x3b69);
        EXPECT(gbc.pc(), 0x6a88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0260
        gbc.setState(0xc3d0, 0x2741, 0x9fa0, 0x2c01, 0x4f41, 0xee75, 0x0, 0x1);
        gbc.writeMem(0xc3d0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x2741);
        EXPECT(gbc.pc(), 0xc3d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3d0), 0xcb);
        EXPECT(gbc.readMem(0xc3d1), 0x12);
        // CB 12 0261
        gbc.setState(0x7a98, 0x7a0d, 0xb8e0, 0x22bc, 0xac2b, 0xee5b, 0x0, 0x0);
        gbc.writeMem(0x7a98, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x7a0d);
        EXPECT(gbc.pc(), 0x7a9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0262
        gbc.setState(0x2781, 0x239c, 0x1450, 0x3717, 0xa4e2, 0xf2cb, 0x0, 0x1);
        gbc.writeMem(0x2781, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x239c);
        EXPECT(gbc.pc(), 0x2783);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0263
        gbc.setState(0x3fe2, 0xcfc, 0x3670, 0x466d, 0x7cb0, 0x2b44, 0x1, 0x0);
        gbc.writeMem(0x3fe2, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xcfc);
        EXPECT(gbc.pc(), 0x3fe4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0264
        gbc.setState(0x4ac1, 0x2ca7, 0x2290, 0x973c, 0x859d, 0xe074, 0x0, 0x1);
        gbc.writeMem(0x4ac1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x2ca7);
        EXPECT(gbc.pc(), 0x4ac3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0265
        gbc.setState(0x82ca, 0x378c, 0xfe90, 0x6bc5, 0xb41f, 0x4ca4, 0x1, 0x0);
        gbc.writeMem(0x82ca, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x378c);
        EXPECT(gbc.pc(), 0x82cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82ca), 0xcb);
        EXPECT(gbc.readMem(0x82cb), 0x12);
        // CB 12 0266
        gbc.setState(0x65fc, 0x1751, 0x7af0, 0x58f0, 0xed30, 0x8501, 0x0, 0x0);
        gbc.writeMem(0x65fc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x1751);
        EXPECT(gbc.pc(), 0x65fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0267
        gbc.setState(0x9337, 0x904e, 0x9720, 0x8ca6, 0xe008, 0x69e5, 0x0, 0x1);
        gbc.writeMem(0x9337, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x904e);
        EXPECT(gbc.pc(), 0x9339);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9337), 0xcb);
        EXPECT(gbc.readMem(0x9338), 0x12);
        // CB 12 0268
        gbc.setState(0x5878, 0x7343, 0xcb60, 0x8b1f, 0xfc9f, 0xe44a, 0x0, 0x1);
        gbc.writeMem(0x5878, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x7343);
        EXPECT(gbc.pc(), 0x587a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0269
        gbc.setState(0x144b, 0x3dc8, 0xbbb0, 0xa11, 0xdff6, 0x4350, 0x0, 0x1);
        gbc.writeMem(0x144b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x3dc8);
        EXPECT(gbc.pc(), 0x144d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 026A
        gbc.setState(0x3ed, 0x1c15, 0xe00, 0x8636, 0xd327, 0x5558, 0x1, 0x1);
        gbc.writeMem(0x3ed, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x1c15);
        EXPECT(gbc.pc(), 0x3ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 026B
        gbc.setState(0x5f96, 0x3f08, 0x33a0, 0xfb82, 0x3292, 0xaf6c, 0x0, 0x1);
        gbc.writeMem(0x5f96, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x3f08);
        EXPECT(gbc.pc(), 0x5f98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 026C
        gbc.setState(0x3531, 0xb0ab, 0xaa10, 0xd82d, 0x953f, 0x2911, 0x1, 0x1);
        gbc.writeMem(0x3531, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb0ab);
        EXPECT(gbc.pc(), 0x3533);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 026D
        gbc.setState(0x75ad, 0x2610, 0x18c0, 0x74fe, 0x9d49, 0x4216, 0x0, 0x0);
        gbc.writeMem(0x75ad, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x2610);
        EXPECT(gbc.pc(), 0x75af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 026E
        gbc.setState(0x1659, 0xb606, 0x4350, 0xad6c, 0xa3bb, 0x98a7, 0x0, 0x1);
        gbc.writeMem(0x1659, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xb606);
        EXPECT(gbc.pc(), 0x165b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 026F
        gbc.setState(0xedea, 0x8113, 0x2d10, 0x43e1, 0x6012, 0x368c, 0x1, 0x1);
        gbc.writeMem(0xedea, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x8113);
        EXPECT(gbc.pc(), 0xedec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedea), 0xcb);
        EXPECT(gbc.readMem(0xedeb), 0x12);
        // CB 12 0270
        gbc.setState(0x5b15, 0xfe7c, 0xccf0, 0x3177, 0xc83f, 0xd59b, 0x0, 0x0);
        gbc.writeMem(0x5b15, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xfe7c);
        EXPECT(gbc.pc(), 0x5b17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0271
        gbc.setState(0xeb55, 0x3e2b, 0x2e40, 0x96db, 0x2efa, 0x9a83, 0x0, 0x0);
        gbc.writeMem(0xeb55, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x3e2b);
        EXPECT(gbc.pc(), 0xeb57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb55), 0xcb);
        EXPECT(gbc.readMem(0xeb56), 0x12);
        // CB 12 0272
        gbc.setState(0xae84, 0x4632, 0xdea0, 0x9e29, 0x229c, 0x99bf, 0x1, 0x1);
        gbc.writeMem(0xae84, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4632);
        EXPECT(gbc.pc(), 0xae86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae84), 0xcb);
        EXPECT(gbc.readMem(0xae85), 0x12);
        // CB 12 0273
        gbc.setState(0x4272, 0x5d4, 0xb210, 0xa7e8, 0xea9d, 0x3042, 0x1, 0x1);
        gbc.writeMem(0x4272, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5d4);
        EXPECT(gbc.pc(), 0x4274);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0274
        gbc.setState(0x3f11, 0xc5fa, 0x2280, 0x8be3, 0x910a, 0x7cbc, 0x0, 0x1);
        gbc.writeMem(0x3f11, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xc5fa);
        EXPECT(gbc.pc(), 0x3f13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0275
        gbc.setState(0x566a, 0x38f1, 0x2a20, 0x7f08, 0x7c61, 0xb69b, 0x1, 0x0);
        gbc.writeMem(0x566a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x38f1);
        EXPECT(gbc.pc(), 0x566c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0276
        gbc.setState(0xcd73, 0x16bc, 0xbf50, 0xc56c, 0x283e, 0xa11c, 0x0, 0x1);
        gbc.writeMem(0xcd73, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x16bc);
        EXPECT(gbc.pc(), 0xcd75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd73), 0xcb);
        EXPECT(gbc.readMem(0xcd74), 0x12);
        // CB 12 0277
        gbc.setState(0x364b, 0x167c, 0xb090, 0x1c29, 0xc92, 0xd726, 0x0, 0x0);
        gbc.writeMem(0x364b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x167c);
        EXPECT(gbc.pc(), 0x364d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0278
        gbc.setState(0xec79, 0x987f, 0xd650, 0xc77b, 0x7471, 0xe29f, 0x0, 0x1);
        gbc.writeMem(0xec79, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x987f);
        EXPECT(gbc.pc(), 0xec7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec79), 0xcb);
        EXPECT(gbc.readMem(0xec7a), 0x12);
        // CB 12 0279
        gbc.setState(0x1030, 0xe85a, 0x9410, 0x4e9b, 0x2d10, 0x240d, 0x1, 0x0);
        gbc.writeMem(0x1030, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xe85a);
        EXPECT(gbc.pc(), 0x1032);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 027A
        gbc.setState(0x58bf, 0x2c9, 0x8f50, 0xd8cd, 0x1539, 0xfe5d, 0x0, 0x0);
        gbc.writeMem(0x58bf, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x2c9);
        EXPECT(gbc.pc(), 0x58c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 027B
        gbc.setState(0xc785, 0x28a0, 0x780, 0xc582, 0x8682, 0x3304, 0x0, 0x0);
        gbc.writeMem(0xc785, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x28a0);
        EXPECT(gbc.pc(), 0xc787);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc785), 0xcb);
        EXPECT(gbc.readMem(0xc786), 0x12);
        // CB 12 027C
        gbc.setState(0x2e66, 0x8ea2, 0x100, 0x56ef, 0x256d, 0xf64b, 0x1, 0x0);
        gbc.writeMem(0x2e66, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8ea2);
        EXPECT(gbc.pc(), 0x2e68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 027D
        gbc.setState(0x2ae3, 0xcc99, 0xbf80, 0x1308, 0x68be, 0xf030, 0x0, 0x1);
        gbc.writeMem(0x2ae3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xcc99);
        EXPECT(gbc.pc(), 0x2ae5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 027E
        gbc.setState(0x9ec1, 0x6716, 0x1120, 0x1944, 0x428b, 0xc6c2, 0x1, 0x1);
        gbc.writeMem(0x9ec1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x6716);
        EXPECT(gbc.pc(), 0x9ec3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ec1), 0xcb);
        EXPECT(gbc.readMem(0x9ec2), 0x12);
        // CB 12 027F
        gbc.setState(0xc3a7, 0xcbd7, 0xec30, 0x8273, 0x2964, 0x92b3, 0x1, 0x1);
        gbc.writeMem(0xc3a7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xcbd7);
        EXPECT(gbc.pc(), 0xc3a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3a7), 0xcb);
        EXPECT(gbc.readMem(0xc3a8), 0x12);
        // CB 12 0280
        gbc.setState(0x9abc, 0x5219, 0xf360, 0x364b, 0x5a7, 0x6ef4, 0x1, 0x1);
        gbc.writeMem(0x9abc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x5219);
        EXPECT(gbc.pc(), 0x9abe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9abc), 0xcb);
        EXPECT(gbc.readMem(0x9abd), 0x12);
        // CB 12 0281
        gbc.setState(0xef16, 0x1ba4, 0xbc20, 0x1668, 0x922, 0x25f9, 0x1, 0x1);
        gbc.writeMem(0xef16, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x1ba4);
        EXPECT(gbc.pc(), 0xef18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef16), 0xcb);
        EXPECT(gbc.readMem(0xef17), 0x12);
        // CB 12 0282
        gbc.setState(0xa575, 0xcf96, 0x40b0, 0x4231, 0x1bc7, 0xb116, 0x0, 0x0);
        gbc.writeMem(0xa575, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xcf96);
        EXPECT(gbc.pc(), 0xa577);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa575), 0xcb);
        EXPECT(gbc.readMem(0xa576), 0x12);
        // CB 12 0283
        gbc.setState(0x4993, 0x5e9e, 0xc8f0, 0xe297, 0xcd1, 0x73ca, 0x0, 0x1);
        gbc.writeMem(0x4993, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x5e9e);
        EXPECT(gbc.pc(), 0x4995);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0284
        gbc.setState(0x9807, 0xd125, 0xa650, 0x1cde, 0x7229, 0xfa7a, 0x1, 0x1);
        gbc.writeMem(0x9807, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd125);
        EXPECT(gbc.pc(), 0x9809);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9807), 0xcb);
        EXPECT(gbc.readMem(0x9808), 0x12);
        // CB 12 0285
        gbc.setState(0xe4b5, 0x3804, 0x250, 0xe9bb, 0x7683, 0xe649, 0x0, 0x1);
        gbc.writeMem(0xe4b5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x3804);
        EXPECT(gbc.pc(), 0xe4b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4b5), 0xcb);
        EXPECT(gbc.readMem(0xe4b6), 0x12);
        // CB 12 0286
        gbc.setState(0x3485, 0xf684, 0x6790, 0x8580, 0xcc78, 0xe47, 0x0, 0x1);
        gbc.writeMem(0x3485, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xf684);
        EXPECT(gbc.pc(), 0x3487);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0287
        gbc.setState(0xc3, 0x39f3, 0x1f0, 0x5bd8, 0xf80a, 0x6884, 0x1, 0x0);
        gbc.writeMem(0xc3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x39f3);
        EXPECT(gbc.pc(), 0xc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0288
        gbc.setState(0xfb3, 0x7c19, 0xdbf0, 0x15c1, 0xebe, 0x9602, 0x0, 0x1);
        gbc.writeMem(0xfb3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x7c19);
        EXPECT(gbc.pc(), 0xfb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0289
        gbc.setState(0xe139, 0xf590, 0x1740, 0x2a44, 0x3eeb, 0xb94b, 0x1, 0x0);
        gbc.writeMem(0xe139, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xf590);
        EXPECT(gbc.pc(), 0xe13b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe139), 0xcb);
        EXPECT(gbc.readMem(0xe13a), 0x12);
        // CB 12 028A
        gbc.setState(0x37b6, 0xacc4, 0x4a70, 0x2634, 0xfcbf, 0xbec4, 0x0, 0x1);
        gbc.writeMem(0x37b6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xacc4);
        EXPECT(gbc.pc(), 0x37b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 028B
        gbc.setState(0xbb0f, 0x6dc2, 0x5620, 0xd6af, 0xbe64, 0x519c, 0x0, 0x0);
        gbc.writeMem(0xbb0f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6dc2);
        EXPECT(gbc.pc(), 0xbb11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb0f), 0xcb);
        EXPECT(gbc.readMem(0xbb10), 0x12);
        // CB 12 028C
        gbc.setState(0x8a4f, 0x76f4, 0xe710, 0xec15, 0x17a8, 0x4f0b, 0x0, 0x1);
        gbc.writeMem(0x8a4f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x76f4);
        EXPECT(gbc.pc(), 0x8a51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a4f), 0xcb);
        EXPECT(gbc.readMem(0x8a50), 0x12);
        // CB 12 028D
        gbc.setState(0x754f, 0xaee6, 0xe980, 0xe05b, 0x96cd, 0xbf06, 0x1, 0x1);
        gbc.writeMem(0x754f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xaee6);
        EXPECT(gbc.pc(), 0x7551);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 028E
        gbc.setState(0x151a, 0x519e, 0x520, 0x5f12, 0xf125, 0x6ecf, 0x0, 0x0);
        gbc.writeMem(0x151a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x519e);
        EXPECT(gbc.pc(), 0x151c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 028F
        gbc.setState(0x9b95, 0x2b48, 0xe5b0, 0xdcb6, 0x4976, 0xd9de, 0x1, 0x0);
        gbc.writeMem(0x9b95, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x2b48);
        EXPECT(gbc.pc(), 0x9b97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b95), 0xcb);
        EXPECT(gbc.readMem(0x9b96), 0x12);
        // CB 12 0290
        gbc.setState(0x1c8a, 0x4d7b, 0xda10, 0xab6f, 0x3ee5, 0xeb9c, 0x1, 0x0);
        gbc.writeMem(0x1c8a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x4d7b);
        EXPECT(gbc.pc(), 0x1c8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0291
        gbc.setState(0x92a7, 0x459, 0xf9f0, 0x26e0, 0x3009, 0x9d07, 0x1, 0x0);
        gbc.writeMem(0x92a7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x459);
        EXPECT(gbc.pc(), 0x92a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92a7), 0xcb);
        EXPECT(gbc.readMem(0x92a8), 0x12);
        // CB 12 0292
        gbc.setState(0xd031, 0xc685, 0x7060, 0xfb50, 0xe636, 0xdde8, 0x1, 0x1);
        gbc.writeMem(0xd031, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xc685);
        EXPECT(gbc.pc(), 0xd033);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd031), 0xcb);
        EXPECT(gbc.readMem(0xd032), 0x12);
        // CB 12 0293
        gbc.setState(0x4fc5, 0xcc01, 0x2a0, 0x3448, 0xbac1, 0x5856, 0x0, 0x0);
        gbc.writeMem(0x4fc5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xcc01);
        EXPECT(gbc.pc(), 0x4fc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0294
        gbc.setState(0x8427, 0xa8e, 0xa180, 0x9b16, 0xa27c, 0x7317, 0x1, 0x0);
        gbc.writeMem(0x8427, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xa8e);
        EXPECT(gbc.pc(), 0x8429);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8427), 0xcb);
        EXPECT(gbc.readMem(0x8428), 0x12);
        // CB 12 0295
        gbc.setState(0xd1a5, 0xd5c6, 0xf590, 0x4716, 0x5045, 0xc1a8, 0x0, 0x0);
        gbc.writeMem(0xd1a5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xd5c6);
        EXPECT(gbc.pc(), 0xd1a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1a5), 0xcb);
        EXPECT(gbc.readMem(0xd1a6), 0x12);
        // CB 12 0296
        gbc.setState(0xca21, 0x2053, 0x2f50, 0x1c6b, 0xbc3f, 0x9791, 0x0, 0x0);
        gbc.writeMem(0xca21, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x2053);
        EXPECT(gbc.pc(), 0xca23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca21), 0xcb);
        EXPECT(gbc.readMem(0xca22), 0x12);
        // CB 12 0297
        gbc.setState(0x9a88, 0xf990, 0xbe70, 0xc047, 0xf5eb, 0xa8b2, 0x0, 0x0);
        gbc.writeMem(0x9a88, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xf990);
        EXPECT(gbc.pc(), 0x9a8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a88), 0xcb);
        EXPECT(gbc.readMem(0x9a89), 0x12);
        // CB 12 0298
        gbc.setState(0xe3b5, 0xd2f7, 0x9650, 0xa1a4, 0xee08, 0x8f63, 0x1, 0x0);
        gbc.writeMem(0xe3b5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xd2f7);
        EXPECT(gbc.pc(), 0xe3b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3b5), 0xcb);
        EXPECT(gbc.readMem(0xe3b6), 0x12);
        // CB 12 0299
        gbc.setState(0x25ab, 0x66d2, 0xd340, 0xf3a3, 0x4c, 0x1522, 0x1, 0x0);
        gbc.writeMem(0x25ab, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x66d2);
        EXPECT(gbc.pc(), 0x25ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 029A
        gbc.setState(0x5dc, 0x288b, 0x1340, 0xb3fd, 0xa0c5, 0x982a, 0x1, 0x1);
        gbc.writeMem(0x5dc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x288b);
        EXPECT(gbc.pc(), 0x5de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 029B
        gbc.setState(0x5738, 0x3c9d, 0x7450, 0xb00c, 0x63f0, 0xb5de, 0x0, 0x1);
        gbc.writeMem(0x5738, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x3c9d);
        EXPECT(gbc.pc(), 0x573a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 029C
        gbc.setState(0xcbff, 0x6bfa, 0x8440, 0x7bd3, 0x50e0, 0x284d, 0x1, 0x1);
        gbc.writeMem(0xcbff, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x6bfa);
        EXPECT(gbc.pc(), 0xcc01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbff), 0xcb);
        EXPECT(gbc.readMem(0xcc00), 0x12);
        // CB 12 029D
        gbc.setState(0xd169, 0xa8be, 0x6d10, 0x9b70, 0x79b9, 0xfb84, 0x1, 0x1);
        gbc.writeMem(0xd169, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa8be);
        EXPECT(gbc.pc(), 0xd16b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd169), 0xcb);
        EXPECT(gbc.readMem(0xd16a), 0x12);
        // CB 12 029E
        gbc.setState(0x3640, 0x9803, 0xa180, 0x3e54, 0xd7fe, 0x1aa1, 0x0, 0x1);
        gbc.writeMem(0x3640, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9803);
        EXPECT(gbc.pc(), 0x3642);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 029F
        gbc.setState(0xdb5c, 0x1965, 0x51e0, 0xead0, 0xafd4, 0x5f69, 0x0, 0x0);
        gbc.writeMem(0xdb5c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1965);
        EXPECT(gbc.pc(), 0xdb5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb5c), 0xcb);
        EXPECT(gbc.readMem(0xdb5d), 0x12);
        // CB 12 02A0
        gbc.setState(0xcdee, 0x4a8a, 0xb280, 0xcdd2, 0x4741, 0x4421, 0x1, 0x0);
        gbc.writeMem(0xcdee, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x4a8a);
        EXPECT(gbc.pc(), 0xcdf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdee), 0xcb);
        EXPECT(gbc.readMem(0xcdef), 0x12);
        // CB 12 02A1
        gbc.setState(0x25bd, 0xd67d, 0x6c30, 0x24e2, 0xe0bc, 0xc5e1, 0x0, 0x0);
        gbc.writeMem(0x25bd, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd67d);
        EXPECT(gbc.pc(), 0x25bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 02A2
        gbc.setState(0x4de1, 0xad45, 0xc130, 0x4a0e, 0xa51b, 0x3b23, 0x0, 0x0);
        gbc.writeMem(0x4de1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xad45);
        EXPECT(gbc.pc(), 0x4de3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 02A3
        gbc.setState(0xb500, 0xc7be, 0x97b0, 0x8ed0, 0x1efb, 0x3360, 0x0, 0x1);
        gbc.writeMem(0xb500, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xc7be);
        EXPECT(gbc.pc(), 0xb502);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb500), 0xcb);
        EXPECT(gbc.readMem(0xb501), 0x12);
        // CB 12 02A4
        gbc.setState(0x6e1d, 0xa1f6, 0xbe30, 0xdaa1, 0x187f, 0xe75f, 0x0, 0x1);
        gbc.writeMem(0x6e1d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xa1f6);
        EXPECT(gbc.pc(), 0x6e1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 02A5
        gbc.setState(0xdfbc, 0xb0f3, 0x9280, 0xe4d5, 0xe9c0, 0x912a, 0x0, 0x0);
        gbc.writeMem(0xdfbc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xb0f3);
        EXPECT(gbc.pc(), 0xdfbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfbc), 0xcb);
        EXPECT(gbc.readMem(0xdfbd), 0x12);
        // CB 12 02A6
        gbc.setState(0x6eab, 0xa48d, 0x6810, 0x54c9, 0x7427, 0xcf5, 0x0, 0x1);
        gbc.writeMem(0x6eab, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa48d);
        EXPECT(gbc.pc(), 0x6ead);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 02A7
        gbc.setState(0x20ac, 0xfbe7, 0xb510, 0x88e1, 0xadcd, 0xcd17, 0x1, 0x0);
        gbc.writeMem(0x20ac, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xfbe7);
        EXPECT(gbc.pc(), 0x20ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 02A8
        gbc.setState(0xc571, 0xe5cd, 0x4990, 0xd309, 0xb7c8, 0x5c21, 0x1, 0x1);
        gbc.writeMem(0xc571, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xe5cd);
        EXPECT(gbc.pc(), 0xc573);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc571), 0xcb);
        EXPECT(gbc.readMem(0xc572), 0x12);
        // CB 12 02A9
        gbc.setState(0x9e7f, 0x2075, 0x7280, 0xe66, 0xc648, 0x5139, 0x0, 0x1);
        gbc.writeMem(0x9e7f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2075);
        EXPECT(gbc.pc(), 0x9e81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e7f), 0xcb);
        EXPECT(gbc.readMem(0x9e80), 0x12);
        // CB 12 02AA
        gbc.setState(0xc71c, 0x5376, 0x3b50, 0x52f3, 0x13e9, 0x8bf6, 0x0, 0x0);
        gbc.writeMem(0xc71c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x5376);
        EXPECT(gbc.pc(), 0xc71e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc71c), 0xcb);
        EXPECT(gbc.readMem(0xc71d), 0x12);
        // CB 12 02AB
        gbc.setState(0xe87b, 0x9945, 0x8090, 0xc981, 0x5718, 0xb1e7, 0x0, 0x0);
        gbc.writeMem(0xe87b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x9945);
        EXPECT(gbc.pc(), 0xe87d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe87b), 0xcb);
        EXPECT(gbc.readMem(0xe87c), 0x12);
        // CB 12 02AC
        gbc.setState(0x3604, 0x9c2d, 0x58f0, 0x8825, 0x5e89, 0xad0b, 0x0, 0x1);
        gbc.writeMem(0x3604, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x9c2d);
        EXPECT(gbc.pc(), 0x3606);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 02AD
        gbc.setState(0x4b48, 0xd272, 0xd2c0, 0x31ae, 0xa7ba, 0x3f85, 0x0, 0x1);
        gbc.writeMem(0x4b48, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xd272);
        EXPECT(gbc.pc(), 0x4b4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 02AE
        gbc.setState(0x808f, 0x543, 0x48b0, 0xe17a, 0x3ed2, 0x6fee, 0x1, 0x0);
        gbc.writeMem(0x808f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x543);
        EXPECT(gbc.pc(), 0x8091);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x808f), 0xcb);
        EXPECT(gbc.readMem(0x8090), 0x12);
        // CB 12 02AF
        gbc.setState(0xd23c, 0xb2a3, 0xc0, 0xc707, 0xe2b9, 0x6dc3, 0x1, 0x1);
        gbc.writeMem(0xd23c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xb2a3);
        EXPECT(gbc.pc(), 0xd23e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd23c), 0xcb);
        EXPECT(gbc.readMem(0xd23d), 0x12);
        // CB 12 02B0
        gbc.setState(0x1169, 0xfc75, 0x8da0, 0x55e9, 0x2f4a, 0x328f, 0x1, 0x0);
        gbc.writeMem(0x1169, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xfc75);
        EXPECT(gbc.pc(), 0x116b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 02B1
        gbc.setState(0x2ce1, 0xcc55, 0x7eb0, 0x888e, 0x622e, 0xbe40, 0x0, 0x0);
        gbc.writeMem(0x2ce1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xcc55);
        EXPECT(gbc.pc(), 0x2ce3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 02B2
        gbc.setState(0x647b, 0x4a2a, 0x1300, 0xfb9b, 0xdaf5, 0x1ef0, 0x0, 0x1);
        gbc.writeMem(0x647b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x4a2a);
        EXPECT(gbc.pc(), 0x647d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 02B3
        gbc.setState(0xe1e1, 0x977, 0xaeb0, 0xe256, 0x9ec7, 0x664c, 0x1, 0x0);
        gbc.writeMem(0xe1e1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x977);
        EXPECT(gbc.pc(), 0xe1e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1e1), 0xcb);
        EXPECT(gbc.readMem(0xe1e2), 0x12);
        // CB 12 02B4
        gbc.setState(0xb32f, 0xc6d6, 0x2c90, 0xb6fb, 0x405d, 0x58de, 0x1, 0x0);
        gbc.writeMem(0xb32f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xc6d6);
        EXPECT(gbc.pc(), 0xb331);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb32f), 0xcb);
        EXPECT(gbc.readMem(0xb330), 0x12);
        // CB 12 02B5
        gbc.setState(0x96ab, 0x76f1, 0xae20, 0xd1ef, 0xebdd, 0xe708, 0x0, 0x1);
        gbc.writeMem(0x96ab, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x76f1);
        EXPECT(gbc.pc(), 0x96ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96ab), 0xcb);
        EXPECT(gbc.readMem(0x96ac), 0x12);
        // CB 12 02B6
        gbc.setState(0xbf50, 0x208d, 0x3020, 0x380c, 0xa89, 0x4a77, 0x1, 0x1);
        gbc.writeMem(0xbf50, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x208d);
        EXPECT(gbc.pc(), 0xbf52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf50), 0xcb);
        EXPECT(gbc.readMem(0xbf51), 0x12);
        // CB 12 02B7
        gbc.setState(0x5b3d, 0xe63a, 0xc860, 0xc387, 0xf6fb, 0xf9c5, 0x1, 0x1);
        gbc.writeMem(0x5b3d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xe63a);
        EXPECT(gbc.pc(), 0x5b3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 02B8
        gbc.setState(0x3323, 0x2f4f, 0x6af0, 0xe1dd, 0xe777, 0xa65e, 0x1, 0x0);
        gbc.writeMem(0x3323, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2f4f);
        EXPECT(gbc.pc(), 0x3325);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 02B9
        gbc.setState(0x524c, 0xd6da, 0xe410, 0xcc73, 0x25fe, 0xd184, 0x0, 0x1);
        gbc.writeMem(0x524c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xd6da);
        EXPECT(gbc.pc(), 0x524e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 02BA
        gbc.setState(0x9dcf, 0xe8d4, 0x6770, 0xdf0f, 0x4057, 0x9035, 0x0, 0x0);
        gbc.writeMem(0x9dcf, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xe8d4);
        EXPECT(gbc.pc(), 0x9dd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dcf), 0xcb);
        EXPECT(gbc.readMem(0x9dd0), 0x12);
        // CB 12 02BB
        gbc.setState(0x7f25, 0x8ad9, 0xc940, 0x7653, 0x113, 0xcabd, 0x1, 0x0);
        gbc.writeMem(0x7f25, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x8ad9);
        EXPECT(gbc.pc(), 0x7f27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 02BC
        gbc.setState(0x2f, 0x1959, 0x9320, 0x5294, 0xf614, 0x25c, 0x0, 0x0);
        gbc.writeMem(0x2f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x1959);
        EXPECT(gbc.pc(), 0x31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 02BD
        gbc.setState(0x243a, 0xa879, 0x4d50, 0x7b07, 0x2c68, 0xa8e6, 0x1, 0x0);
        gbc.writeMem(0x243a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa879);
        EXPECT(gbc.pc(), 0x243c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 02BE
        gbc.setState(0x273d, 0xaa59, 0xe430, 0x9e14, 0x1d7d, 0xbb1, 0x0, 0x1);
        gbc.writeMem(0x273d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xaa59);
        EXPECT(gbc.pc(), 0x273f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 02BF
        gbc.setState(0xef79, 0xb46a, 0x97a0, 0x59ba, 0xfaef, 0x1ac, 0x1, 0x0);
        gbc.writeMem(0xef79, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xb46a);
        EXPECT(gbc.pc(), 0xef7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef79), 0xcb);
        EXPECT(gbc.readMem(0xef7a), 0x12);
        // CB 12 02C0
        gbc.setState(0xe464, 0xab0c, 0x7470, 0xae0e, 0x7a85, 0x4146, 0x1, 0x1);
        gbc.writeMem(0xe464, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xab0c);
        EXPECT(gbc.pc(), 0xe466);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe464), 0xcb);
        EXPECT(gbc.readMem(0xe465), 0x12);
        // CB 12 02C1
        gbc.setState(0x88f1, 0x4f6a, 0x3650, 0xfa39, 0xb04, 0xba24, 0x1, 0x1);
        gbc.writeMem(0x88f1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x4f6a);
        EXPECT(gbc.pc(), 0x88f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88f1), 0xcb);
        EXPECT(gbc.readMem(0x88f2), 0x12);
        // CB 12 02C2
        gbc.setState(0x4ce9, 0x6710, 0x6790, 0x933, 0x2767, 0xe904, 0x1, 0x0);
        gbc.writeMem(0x4ce9, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6710);
        EXPECT(gbc.pc(), 0x4ceb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 02C3
        gbc.setState(0x25e8, 0xd9d1, 0x7cc0, 0xff61, 0x66fa, 0xf, 0x1, 0x1);
        gbc.writeMem(0x25e8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd9d1);
        EXPECT(gbc.pc(), 0x25ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 02C4
        gbc.setState(0x287b, 0x9b7, 0xfa90, 0xafb2, 0x87b5, 0xb2f6, 0x1, 0x1);
        gbc.writeMem(0x287b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x9b7);
        EXPECT(gbc.pc(), 0x287d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 02C5
        gbc.setState(0xc52d, 0x34bd, 0xbd0, 0xb8b6, 0x1a16, 0x473b, 0x1, 0x0);
        gbc.writeMem(0xc52d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x34bd);
        EXPECT(gbc.pc(), 0xc52f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc52d), 0xcb);
        EXPECT(gbc.readMem(0xc52e), 0x12);
        // CB 12 02C6
        gbc.setState(0x87d8, 0x2768, 0xf3d0, 0x5542, 0xe944, 0xfc1f, 0x1, 0x1);
        gbc.writeMem(0x87d8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x2768);
        EXPECT(gbc.pc(), 0x87da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87d8), 0xcb);
        EXPECT(gbc.readMem(0x87d9), 0x12);
        // CB 12 02C7
        gbc.setState(0x4015, 0x4a2a, 0x2380, 0x1b70, 0x74da, 0x6576, 0x0, 0x0);
        gbc.writeMem(0x4015, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x4a2a);
        EXPECT(gbc.pc(), 0x4017);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 02C8
        gbc.setState(0x3ec7, 0xb2af, 0x710, 0x6f3f, 0x4139, 0x71ce, 0x0, 0x0);
        gbc.writeMem(0x3ec7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xb2af);
        EXPECT(gbc.pc(), 0x3ec9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 02C9
        gbc.setState(0x108d, 0x687d, 0xde50, 0x5d8c, 0x1211, 0x3bd3, 0x0, 0x1);
        gbc.writeMem(0x108d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x687d);
        EXPECT(gbc.pc(), 0x108f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 02CA
        gbc.setState(0x3943, 0x8a15, 0xa520, 0x3774, 0x7206, 0xc2c6, 0x1, 0x0);
        gbc.writeMem(0x3943, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x8a15);
        EXPECT(gbc.pc(), 0x3945);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 02CB
        gbc.setState(0x952f, 0x284c, 0x53f0, 0x20d3, 0x49fb, 0x4e30, 0x1, 0x0);
        gbc.writeMem(0x952f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x284c);
        EXPECT(gbc.pc(), 0x9531);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x952f), 0xcb);
        EXPECT(gbc.readMem(0x9530), 0x12);
        // CB 12 02CC
        gbc.setState(0x86e3, 0xea83, 0x98e0, 0xf9db, 0x12f2, 0x1a0f, 0x0, 0x1);
        gbc.writeMem(0x86e3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xea83);
        EXPECT(gbc.pc(), 0x86e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86e3), 0xcb);
        EXPECT(gbc.readMem(0x86e4), 0x12);
        // CB 12 02CD
        gbc.setState(0x267a, 0xd43c, 0xccf0, 0xc34a, 0x68ea, 0x242, 0x1, 0x1);
        gbc.writeMem(0x267a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xd43c);
        EXPECT(gbc.pc(), 0x267c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 02CE
        gbc.setState(0xca61, 0x8d74, 0x3cb0, 0x7d27, 0x5fd3, 0x8119, 0x0, 0x0);
        gbc.writeMem(0xca61, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8d74);
        EXPECT(gbc.pc(), 0xca63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca61), 0xcb);
        EXPECT(gbc.readMem(0xca62), 0x12);
        // CB 12 02CF
        gbc.setState(0xd296, 0xc52c, 0xd5c0, 0x7175, 0xee09, 0xa88, 0x0, 0x1);
        gbc.writeMem(0xd296, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xc52c);
        EXPECT(gbc.pc(), 0xd298);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd296), 0xcb);
        EXPECT(gbc.readMem(0xd297), 0x12);
        // CB 12 02D0
        gbc.setState(0x8699, 0xaa09, 0xcc70, 0x8a1a, 0xee07, 0xfbc, 0x1, 0x1);
        gbc.writeMem(0x8699, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xaa09);
        EXPECT(gbc.pc(), 0x869b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8699), 0xcb);
        EXPECT(gbc.readMem(0x869a), 0x12);
        // CB 12 02D1
        gbc.setState(0x6c60, 0x6066, 0x4880, 0x3bd, 0x1192, 0x6f29, 0x1, 0x1);
        gbc.writeMem(0x6c60, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x6066);
        EXPECT(gbc.pc(), 0x6c62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 02D2
        gbc.setState(0xb924, 0x2129, 0x5bf0, 0xf8a4, 0xf35e, 0xee13, 0x1, 0x1);
        gbc.writeMem(0xb924, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2129);
        EXPECT(gbc.pc(), 0xb926);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb924), 0xcb);
        EXPECT(gbc.readMem(0xb925), 0x12);
        // CB 12 02D3
        gbc.setState(0x4613, 0x5b50, 0x95f0, 0x7ff2, 0x5d25, 0xa969, 0x0, 0x1);
        gbc.writeMem(0x4613, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x5b50);
        EXPECT(gbc.pc(), 0x4615);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 02D4
        gbc.setState(0xdd2, 0x6a, 0xc0b0, 0xdfed, 0xaec0, 0x19ef, 0x1, 0x1);
        gbc.writeMem(0xdd2, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6a);
        EXPECT(gbc.pc(), 0xdd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 02D5
        gbc.setState(0x4612, 0x3357, 0x47b0, 0x41e5, 0xe134, 0x93fa, 0x1, 0x0);
        gbc.writeMem(0x4612, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x3357);
        EXPECT(gbc.pc(), 0x4614);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 02D6
        gbc.setState(0x4d7b, 0xacde, 0x17a0, 0x9731, 0xd17, 0x3f7c, 0x0, 0x0);
        gbc.writeMem(0x4d7b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xacde);
        EXPECT(gbc.pc(), 0x4d7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 02D7
        gbc.setState(0xb2f7, 0x77c0, 0x3030, 0xb6a1, 0x32d8, 0xa522, 0x0, 0x1);
        gbc.writeMem(0xb2f7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x77c0);
        EXPECT(gbc.pc(), 0xb2f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2f7), 0xcb);
        EXPECT(gbc.readMem(0xb2f8), 0x12);
        // CB 12 02D8
        gbc.setState(0x1038, 0xf3c7, 0xf720, 0x64ef, 0xce1b, 0x5a0c, 0x1, 0x0);
        gbc.writeMem(0x1038, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf3c7);
        EXPECT(gbc.pc(), 0x103a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 02D9
        gbc.setState(0xc684, 0xcca0, 0x8c20, 0xde5, 0xbf68, 0xeda3, 0x0, 0x0);
        gbc.writeMem(0xc684, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xcca0);
        EXPECT(gbc.pc(), 0xc686);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc684), 0xcb);
        EXPECT(gbc.readMem(0xc685), 0x12);
        // CB 12 02DB
        gbc.setState(0x1e72, 0x5d8c, 0x260, 0x9f1e, 0x63d4, 0x8c3d, 0x0, 0x0);
        gbc.writeMem(0x1e72, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5d8c);
        EXPECT(gbc.pc(), 0x1e74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 02DC
        gbc.setState(0xecda, 0xbd5f, 0xa0a0, 0xf920, 0x77e0, 0x35d2, 0x1, 0x0);
        gbc.writeMem(0xecda, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xbd5f);
        EXPECT(gbc.pc(), 0xecdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecda), 0xcb);
        EXPECT(gbc.readMem(0xecdb), 0x12);
        // CB 12 02DD
        gbc.setState(0x1978, 0xbec3, 0x50b0, 0x6c67, 0x11f5, 0x9b8b, 0x1, 0x1);
        gbc.writeMem(0x1978, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xbec3);
        EXPECT(gbc.pc(), 0x197a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 02DE
        gbc.setState(0xe0bd, 0x191d, 0xc880, 0xe329, 0x79b0, 0x4806, 0x1, 0x0);
        gbc.writeMem(0xe0bd, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x191d);
        EXPECT(gbc.pc(), 0xe0bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0bd), 0xcb);
        EXPECT(gbc.readMem(0xe0be), 0x12);
        // CB 12 02DF
        gbc.setState(0xe357, 0x7a3a, 0x790, 0x8582, 0xff6, 0xac3d, 0x0, 0x0);
        gbc.writeMem(0xe357, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x7a3a);
        EXPECT(gbc.pc(), 0xe359);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe357), 0xcb);
        EXPECT(gbc.readMem(0xe358), 0x12);
        // CB 12 02E0
        gbc.setState(0x5f6b, 0x8b63, 0x9720, 0x4c59, 0xf1be, 0xc7ac, 0x0, 0x0);
        gbc.writeMem(0x5f6b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x8b63);
        EXPECT(gbc.pc(), 0x5f6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 02E1
        gbc.setState(0x390e, 0x2dff, 0x1dc0, 0x8103, 0x952, 0xb413, 0x1, 0x0);
        gbc.writeMem(0x390e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2dff);
        EXPECT(gbc.pc(), 0x3910);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 02E2
        gbc.setState(0x177, 0x362e, 0x4ff0, 0x17a4, 0x4111, 0x33a3, 0x1, 0x0);
        gbc.writeMem(0x177, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x362e);
        EXPECT(gbc.pc(), 0x179);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 02E3
        gbc.setState(0x30e7, 0x89a7, 0x7580, 0x49bf, 0xc606, 0x7e6b, 0x1, 0x1);
        gbc.writeMem(0x30e7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x89a7);
        EXPECT(gbc.pc(), 0x30e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 02E4
        gbc.setState(0xcdde, 0x8919, 0x8f70, 0x239, 0x3df, 0x5e6, 0x1, 0x0);
        gbc.writeMem(0xcdde, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8919);
        EXPECT(gbc.pc(), 0xcde0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdde), 0xcb);
        EXPECT(gbc.readMem(0xcddf), 0x12);
        // CB 12 02E5
        gbc.setState(0x2075, 0x6003, 0x90c0, 0x2b35, 0x1f7d, 0x1a07, 0x0, 0x0);
        gbc.writeMem(0x2075, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x6003);
        EXPECT(gbc.pc(), 0x2077);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 02E6
        gbc.setState(0xd32e, 0xdb1e, 0xecc0, 0x1e02, 0xf757, 0xbdbf, 0x0, 0x0);
        gbc.writeMem(0xd32e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xdb1e);
        EXPECT(gbc.pc(), 0xd330);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd32e), 0xcb);
        EXPECT(gbc.readMem(0xd32f), 0x12);
        // CB 12 02E7
        gbc.setState(0xa7fd, 0xbb4c, 0x6ec0, 0x238, 0x63ed, 0xee92, 0x0, 0x1);
        gbc.writeMem(0xa7fd, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xbb4c);
        EXPECT(gbc.pc(), 0xa7ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7fd), 0xcb);
        EXPECT(gbc.readMem(0xa7fe), 0x12);
        // CB 12 02E8
        gbc.setState(0x1a5e, 0xd817, 0xfc0, 0xd870, 0x709e, 0x49e1, 0x1, 0x0);
        gbc.writeMem(0x1a5e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd817);
        EXPECT(gbc.pc(), 0x1a60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 02E9
        gbc.setState(0x82c6, 0x481a, 0x37e0, 0xac5, 0x2aa7, 0x9aa5, 0x1, 0x1);
        gbc.writeMem(0x82c6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x481a);
        EXPECT(gbc.pc(), 0x82c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82c6), 0xcb);
        EXPECT(gbc.readMem(0x82c7), 0x12);
        // CB 12 02EA
        gbc.setState(0xc549, 0x4322, 0x5790, 0x45dd, 0x6285, 0x6d59, 0x0, 0x1);
        gbc.writeMem(0xc549, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x4322);
        EXPECT(gbc.pc(), 0xc54b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc549), 0xcb);
        EXPECT(gbc.readMem(0xc54a), 0x12);
        // CB 12 02EB
        gbc.setState(0xdfca, 0x6380, 0x4370, 0x3487, 0x6209, 0x3c8, 0x0, 0x1);
        gbc.writeMem(0xdfca, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x6380);
        EXPECT(gbc.pc(), 0xdfcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfca), 0xcb);
        EXPECT(gbc.readMem(0xdfcb), 0x12);
        // CB 12 02EC
        gbc.setState(0x304c, 0x3d1c, 0xf220, 0xe4ff, 0x97b2, 0xb3ac, 0x1, 0x0);
        gbc.writeMem(0x304c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x3d1c);
        EXPECT(gbc.pc(), 0x304e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 02ED
        gbc.setState(0x3ee7, 0x66ab, 0x36d0, 0x3a9e, 0x3f7b, 0x76ef, 0x0, 0x0);
        gbc.writeMem(0x3ee7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x66ab);
        EXPECT(gbc.pc(), 0x3ee9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 02EE
        gbc.setState(0x622a, 0x7169, 0x6d0, 0x23c, 0x47e, 0x8e87, 0x1, 0x0);
        gbc.writeMem(0x622a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x7169);
        EXPECT(gbc.pc(), 0x622c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 02EF
        gbc.setState(0x45ca, 0xe900, 0x1b0, 0xf7fb, 0xbfbc, 0x66a, 0x0, 0x1);
        gbc.writeMem(0x45ca, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe900);
        EXPECT(gbc.pc(), 0x45cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 02F0
        gbc.setState(0x510a, 0x5869, 0x2930, 0xa69b, 0x9d85, 0x88c5, 0x1, 0x0);
        gbc.writeMem(0x510a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x5869);
        EXPECT(gbc.pc(), 0x510c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 02F1
        gbc.setState(0x3a5, 0x2204, 0x2830, 0xe1f9, 0xa5eb, 0x74a9, 0x1, 0x1);
        gbc.writeMem(0x3a5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x2204);
        EXPECT(gbc.pc(), 0x3a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 02F2
        gbc.setState(0xa3bc, 0x1ade, 0x8150, 0x9be2, 0x3513, 0x6c6, 0x1, 0x1);
        gbc.writeMem(0xa3bc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x1ade);
        EXPECT(gbc.pc(), 0xa3be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3bc), 0xcb);
        EXPECT(gbc.readMem(0xa3bd), 0x12);
        // CB 12 02F3
        gbc.setState(0x605b, 0xefc1, 0xa220, 0x12d8, 0x4258, 0x9021, 0x1, 0x0);
        gbc.writeMem(0x605b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xefc1);
        EXPECT(gbc.pc(), 0x605d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 02F4
        gbc.setState(0x3dce, 0x6aaa, 0x69f0, 0x913f, 0xf019, 0x5a50, 0x0, 0x1);
        gbc.writeMem(0x3dce, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x6aaa);
        EXPECT(gbc.pc(), 0x3dd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 02F5
        gbc.setState(0xec5c, 0xfeea, 0x360, 0xfeb5, 0x56d1, 0x1b6b, 0x0, 0x0);
        gbc.writeMem(0xec5c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xfeea);
        EXPECT(gbc.pc(), 0xec5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec5c), 0xcb);
        EXPECT(gbc.readMem(0xec5d), 0x12);
        // CB 12 02F6
        gbc.setState(0x92bb, 0xa6fc, 0x9870, 0xbca6, 0x80ee, 0x4cf2, 0x0, 0x0);
        gbc.writeMem(0x92bb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xa6fc);
        EXPECT(gbc.pc(), 0x92bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92bb), 0xcb);
        EXPECT(gbc.readMem(0x92bc), 0x12);
        // CB 12 02F7
        gbc.setState(0x95d9, 0x3b8b, 0x2800, 0x7786, 0x6ce8, 0x5e8c, 0x1, 0x1);
        gbc.writeMem(0x95d9, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x3b8b);
        EXPECT(gbc.pc(), 0x95db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95d9), 0xcb);
        EXPECT(gbc.readMem(0x95da), 0x12);
        // CB 12 02F8
        gbc.setState(0x64f9, 0xbc76, 0x7540, 0x3332, 0x3da7, 0x2607, 0x0, 0x1);
        gbc.writeMem(0x64f9, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xbc76);
        EXPECT(gbc.pc(), 0x64fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 02F9
        gbc.setState(0xb276, 0xf430, 0x9040, 0x60a3, 0x2156, 0xe8d3, 0x0, 0x0);
        gbc.writeMem(0xb276, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xf430);
        EXPECT(gbc.pc(), 0xb278);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb276), 0xcb);
        EXPECT(gbc.readMem(0xb277), 0x12);
        // CB 12 02FA
        gbc.setState(0x365d, 0xab59, 0xd290, 0x3f92, 0xfdc9, 0xdff5, 0x0, 0x0);
        gbc.writeMem(0x365d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xab59);
        EXPECT(gbc.pc(), 0x365f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 02FB
        gbc.setState(0x3711, 0x9c5f, 0x4a70, 0xd04d, 0x2ab5, 0x4d08, 0x0, 0x0);
        gbc.writeMem(0x3711, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x9c5f);
        EXPECT(gbc.pc(), 0x3713);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 02FC
        gbc.setState(0x5fc1, 0x571a, 0x8dd0, 0xf502, 0x84cc, 0x1657, 0x1, 0x1);
        gbc.writeMem(0x5fc1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x571a);
        EXPECT(gbc.pc(), 0x5fc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 02FD
        gbc.setState(0x6fa3, 0x28e2, 0x3410, 0x9041, 0x9d54, 0x95ab, 0x1, 0x1);
        gbc.writeMem(0x6fa3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x28e2);
        EXPECT(gbc.pc(), 0x6fa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 02FE
        gbc.setState(0x83ba, 0x23ee, 0x6eb0, 0x6269, 0xc798, 0xf4b4, 0x1, 0x1);
        gbc.writeMem(0x83ba, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x23ee);
        EXPECT(gbc.pc(), 0x83bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83ba), 0xcb);
        EXPECT(gbc.readMem(0x83bb), 0x12);
        // CB 12 02FF
        gbc.setState(0x92f6, 0xcad2, 0x1350, 0xec52, 0x8c0d, 0x5a3a, 0x0, 0x0);
        gbc.writeMem(0x92f6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xcad2);
        EXPECT(gbc.pc(), 0x92f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92f6), 0xcb);
        EXPECT(gbc.readMem(0x92f7), 0x12);
        // CB 12 0300
        gbc.setState(0x6a72, 0x35d1, 0x4ee0, 0x52e0, 0xd25e, 0xf13b, 0x1, 0x1);
        gbc.writeMem(0x6a72, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x35d1);
        EXPECT(gbc.pc(), 0x6a74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0301
        gbc.setState(0x5444, 0xd1a9, 0x8a20, 0xae4, 0x723b, 0x6507, 0x1, 0x1);
        gbc.writeMem(0x5444, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xd1a9);
        EXPECT(gbc.pc(), 0x5446);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0302
        gbc.setState(0x8b6c, 0x81f0, 0x74a0, 0xc0f6, 0x7222, 0xd4cf, 0x0, 0x1);
        gbc.writeMem(0x8b6c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x81f0);
        EXPECT(gbc.pc(), 0x8b6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b6c), 0xcb);
        EXPECT(gbc.readMem(0x8b6d), 0x12);
        // CB 12 0303
        gbc.setState(0xc8cb, 0x4fa5, 0x1e20, 0x2f90, 0xed6a, 0x8ac4, 0x0, 0x0);
        gbc.writeMem(0xc8cb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x4fa5);
        EXPECT(gbc.pc(), 0xc8cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8cb), 0xcb);
        EXPECT(gbc.readMem(0xc8cc), 0x12);
        // CB 12 0304
        gbc.setState(0xde15, 0x6f51, 0xf1f0, 0x26b8, 0x1b29, 0xb384, 0x0, 0x1);
        gbc.writeMem(0xde15, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x6f51);
        EXPECT(gbc.pc(), 0xde17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde15), 0xcb);
        EXPECT(gbc.readMem(0xde16), 0x12);
        // CB 12 0305
        gbc.setState(0x3a81, 0xf65b, 0xd540, 0xe8e8, 0x97c, 0x23cb, 0x0, 0x0);
        gbc.writeMem(0x3a81, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xf65b);
        EXPECT(gbc.pc(), 0x3a83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0306
        gbc.setState(0x46dc, 0xac81, 0x2c80, 0x92c, 0x455a, 0x363d, 0x1, 0x1);
        gbc.writeMem(0x46dc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xac81);
        EXPECT(gbc.pc(), 0x46de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0307
        gbc.setState(0x290a, 0x1014, 0x4b20, 0x74fd, 0x165c, 0xc99a, 0x1, 0x0);
        gbc.writeMem(0x290a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x1014);
        EXPECT(gbc.pc(), 0x290c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0308
        gbc.setState(0xb3b0, 0x69f5, 0x4e00, 0xeec6, 0x4092, 0xf462, 0x0, 0x0);
        gbc.writeMem(0xb3b0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x69f5);
        EXPECT(gbc.pc(), 0xb3b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3b0), 0xcb);
        EXPECT(gbc.readMem(0xb3b1), 0x12);
        // CB 12 0309
        gbc.setState(0xaa86, 0xeb0, 0x7ee0, 0xbce0, 0x8cca, 0x9a22, 0x0, 0x1);
        gbc.writeMem(0xaa86, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xeb0);
        EXPECT(gbc.pc(), 0xaa88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa86), 0xcb);
        EXPECT(gbc.readMem(0xaa87), 0x12);
        // CB 12 030A
        gbc.setState(0xd475, 0x5326, 0x8fa0, 0xb40f, 0xcb71, 0x91ba, 0x1, 0x1);
        gbc.writeMem(0xd475, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x5326);
        EXPECT(gbc.pc(), 0xd477);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd475), 0xcb);
        EXPECT(gbc.readMem(0xd476), 0x12);
        // CB 12 030B
        gbc.setState(0xe353, 0x7560, 0xcbb0, 0x791d, 0xfbe4, 0x9412, 0x0, 0x0);
        gbc.writeMem(0xe353, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x7560);
        EXPECT(gbc.pc(), 0xe355);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe353), 0xcb);
        EXPECT(gbc.readMem(0xe354), 0x12);
        // CB 12 030C
        gbc.setState(0xd35e, 0x2317, 0x8d0, 0xfb06, 0xf478, 0xd748, 0x0, 0x1);
        gbc.writeMem(0xd35e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x2317);
        EXPECT(gbc.pc(), 0xd360);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd35e), 0xcb);
        EXPECT(gbc.readMem(0xd35f), 0x12);
        // CB 12 030D
        gbc.setState(0x1a4c, 0xc1a9, 0x6440, 0x721e, 0x30cb, 0x438c, 0x1, 0x0);
        gbc.writeMem(0x1a4c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xc1a9);
        EXPECT(gbc.pc(), 0x1a4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 030E
        gbc.setState(0x123, 0xeb37, 0xc350, 0xd3a9, 0xcd7e, 0xdca, 0x0, 0x0);
        gbc.writeMem(0x123, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xeb37);
        EXPECT(gbc.pc(), 0x125);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 030F
        gbc.setState(0x430a, 0xb874, 0xbe50, 0xf14b, 0x6a5f, 0xa1c7, 0x1, 0x1);
        gbc.writeMem(0x430a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xb874);
        EXPECT(gbc.pc(), 0x430c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0310
        gbc.setState(0xac0a, 0x35e7, 0x9e10, 0xa344, 0x3fbf, 0xf1b4, 0x1, 0x1);
        gbc.writeMem(0xac0a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x35e7);
        EXPECT(gbc.pc(), 0xac0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac0a), 0xcb);
        EXPECT(gbc.readMem(0xac0b), 0x12);
        // CB 12 0311
        gbc.setState(0xbe8, 0xf623, 0x3eb0, 0x7cff, 0x55a5, 0x2663, 0x0, 0x1);
        gbc.writeMem(0xbe8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xf623);
        EXPECT(gbc.pc(), 0xbea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0312
        gbc.setState(0x30ef, 0x1150, 0xc750, 0xcc9d, 0x5ccc, 0xf721, 0x0, 0x0);
        gbc.writeMem(0x30ef, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x1150);
        EXPECT(gbc.pc(), 0x30f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0313
        gbc.setState(0x8423, 0x822a, 0xbb10, 0x46ee, 0x38e7, 0xcba3, 0x0, 0x1);
        gbc.writeMem(0x8423, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x822a);
        EXPECT(gbc.pc(), 0x8425);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8423), 0xcb);
        EXPECT(gbc.readMem(0x8424), 0x12);
        // CB 12 0314
        gbc.setState(0x9f76, 0x6da5, 0x8650, 0xb964, 0x79df, 0x7ed1, 0x0, 0x1);
        gbc.writeMem(0x9f76, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x6da5);
        EXPECT(gbc.pc(), 0x9f78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f76), 0xcb);
        EXPECT(gbc.readMem(0x9f77), 0x12);
        // CB 12 0315
        gbc.setState(0x9a6f, 0x1d7b, 0x2400, 0xa7e6, 0x12f3, 0xa3f4, 0x0, 0x0);
        gbc.writeMem(0x9a6f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x1d7b);
        EXPECT(gbc.pc(), 0x9a71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a6f), 0xcb);
        EXPECT(gbc.readMem(0x9a70), 0x12);
        // CB 12 0316
        gbc.setState(0x3ce0, 0xd01d, 0xa6b0, 0xb908, 0x3603, 0xed75, 0x1, 0x0);
        gbc.writeMem(0x3ce0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xd01d);
        EXPECT(gbc.pc(), 0x3ce2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0317
        gbc.setState(0x6d46, 0x6fd, 0x45e0, 0x6d9, 0x2f4e, 0x6a33, 0x1, 0x1);
        gbc.writeMem(0x6d46, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x6fd);
        EXPECT(gbc.pc(), 0x6d48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0318
        gbc.setState(0xae46, 0x516f, 0x8440, 0x65e5, 0x7c15, 0x8307, 0x1, 0x1);
        gbc.writeMem(0xae46, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x516f);
        EXPECT(gbc.pc(), 0xae48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae46), 0xcb);
        EXPECT(gbc.readMem(0xae47), 0x12);
        // CB 12 0319
        gbc.setState(0x31e1, 0xa5df, 0x8f20, 0x57c, 0x239d, 0x1461, 0x0, 0x1);
        gbc.writeMem(0x31e1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xa5df);
        EXPECT(gbc.pc(), 0x31e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 031A
        gbc.setState(0xd277, 0xfafb, 0x4550, 0xc2c5, 0xd901, 0xe0b9, 0x1, 0x1);
        gbc.writeMem(0xd277, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xfafb);
        EXPECT(gbc.pc(), 0xd279);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd277), 0xcb);
        EXPECT(gbc.readMem(0xd278), 0x12);
        // CB 12 031B
        gbc.setState(0xd3be, 0x802b, 0xc840, 0xa927, 0xa169, 0x81d6, 0x0, 0x1);
        gbc.writeMem(0xd3be, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x802b);
        EXPECT(gbc.pc(), 0xd3c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3be), 0xcb);
        EXPECT(gbc.readMem(0xd3bf), 0x12);
        // CB 12 031C
        gbc.setState(0xefd2, 0x3702, 0x6a50, 0x76ae, 0xe6ab, 0xf013, 0x1, 0x1);
        gbc.writeMem(0xefd2, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x3702);
        EXPECT(gbc.pc(), 0xefd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefd2), 0xcb);
        EXPECT(gbc.readMem(0xefd3), 0x12);
        // CB 12 031D
        gbc.setState(0x8f4d, 0x21ad, 0xb040, 0x76de, 0xbe0e, 0x5a81, 0x0, 0x0);
        gbc.writeMem(0x8f4d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x21ad);
        EXPECT(gbc.pc(), 0x8f4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f4d), 0xcb);
        EXPECT(gbc.readMem(0x8f4e), 0x12);
        // CB 12 031E
        gbc.setState(0x659d, 0xfc7c, 0x1170, 0x5bc4, 0xe58e, 0x4106, 0x1, 0x1);
        gbc.writeMem(0x659d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xfc7c);
        EXPECT(gbc.pc(), 0x659f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 031F
        gbc.setState(0x2a46, 0xc7d1, 0x9240, 0xe14f, 0xbb17, 0x9a56, 0x1, 0x0);
        gbc.writeMem(0x2a46, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xc7d1);
        EXPECT(gbc.pc(), 0x2a48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0320
        gbc.setState(0x13dc, 0xedda, 0x210, 0x6108, 0xbbad, 0x5a32, 0x1, 0x1);
        gbc.writeMem(0x13dc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xedda);
        EXPECT(gbc.pc(), 0x13de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0321
        gbc.setState(0x2690, 0x82a9, 0x4650, 0x2b31, 0x1cfd, 0x889a, 0x1, 0x0);
        gbc.writeMem(0x2690, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x82a9);
        EXPECT(gbc.pc(), 0x2692);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0322
        gbc.setState(0xb070, 0xedac, 0xb950, 0x2abe, 0xa1ec, 0x413, 0x1, 0x0);
        gbc.writeMem(0xb070, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xedac);
        EXPECT(gbc.pc(), 0xb072);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb070), 0xcb);
        EXPECT(gbc.readMem(0xb071), 0x12);
        // CB 12 0323
        gbc.setState(0xa1fb, 0x7c9d, 0x4f20, 0x9c9e, 0xdd65, 0x6faa, 0x1, 0x1);
        gbc.writeMem(0xa1fb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x7c9d);
        EXPECT(gbc.pc(), 0xa1fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1fb), 0xcb);
        EXPECT(gbc.readMem(0xa1fc), 0x12);
        // CB 12 0324
        gbc.setState(0xa545, 0xd398, 0xd470, 0x3ad6, 0x9484, 0x6f78, 0x1, 0x1);
        gbc.writeMem(0xa545, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xd398);
        EXPECT(gbc.pc(), 0xa547);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa545), 0xcb);
        EXPECT(gbc.readMem(0xa546), 0x12);
        // CB 12 0325
        gbc.setState(0x79e0, 0xc6cf, 0x2450, 0x7a93, 0x325e, 0x2e5e, 0x0, 0x1);
        gbc.writeMem(0x79e0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xc6cf);
        EXPECT(gbc.pc(), 0x79e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0326
        gbc.setState(0xdb7d, 0x8244, 0x2910, 0x7341, 0x1459, 0x449f, 0x0, 0x1);
        gbc.writeMem(0xdb7d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x8244);
        EXPECT(gbc.pc(), 0xdb7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb7d), 0xcb);
        EXPECT(gbc.readMem(0xdb7e), 0x12);
        // CB 12 0327
        gbc.setState(0x4385, 0x9df9, 0xeea0, 0x311b, 0xd312, 0x9d4f, 0x1, 0x1);
        gbc.writeMem(0x4385, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x9df9);
        EXPECT(gbc.pc(), 0x4387);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0328
        gbc.setState(0x690f, 0xd66c, 0xdbb0, 0x956f, 0x3a70, 0x16be, 0x0, 0x1);
        gbc.writeMem(0x690f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xd66c);
        EXPECT(gbc.pc(), 0x6911);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0329
        gbc.setState(0x4467, 0x7ed8, 0xac70, 0x1fa9, 0x36e5, 0x5cfe, 0x0, 0x0);
        gbc.writeMem(0x4467, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x7ed8);
        EXPECT(gbc.pc(), 0x4469);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 032B
        gbc.setState(0x4dde, 0x2e82, 0x3740, 0x7f13, 0x7218, 0x1b25, 0x1, 0x0);
        gbc.writeMem(0x4dde, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x2e82);
        EXPECT(gbc.pc(), 0x4de0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 032C
        gbc.setState(0xc68e, 0xf134, 0x8c60, 0xfdb9, 0x4356, 0x16df, 0x1, 0x1);
        gbc.writeMem(0xc68e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xf134);
        EXPECT(gbc.pc(), 0xc690);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc68e), 0xcb);
        EXPECT(gbc.readMem(0xc68f), 0x12);
        // CB 12 032D
        gbc.setState(0xa879, 0x9523, 0x4570, 0x6f3c, 0x3459, 0x7f11, 0x0, 0x0);
        gbc.writeMem(0xa879, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9523);
        EXPECT(gbc.pc(), 0xa87b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa879), 0xcb);
        EXPECT(gbc.readMem(0xa87a), 0x12);
        // CB 12 032E
        gbc.setState(0xc8b6, 0x535a, 0xce10, 0xf9f6, 0x65fc, 0x6d96, 0x1, 0x0);
        gbc.writeMem(0xc8b6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x535a);
        EXPECT(gbc.pc(), 0xc8b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8b6), 0xcb);
        EXPECT(gbc.readMem(0xc8b7), 0x12);
        // CB 12 032F
        gbc.setState(0x1719, 0x9a2f, 0x4360, 0x62bf, 0xa989, 0x1bc6, 0x1, 0x1);
        gbc.writeMem(0x1719, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x9a2f);
        EXPECT(gbc.pc(), 0x171b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0332
        gbc.setState(0x749d, 0x4ce8, 0xde00, 0x737e, 0x8a87, 0x9015, 0x1, 0x1);
        gbc.writeMem(0x749d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x4ce8);
        EXPECT(gbc.pc(), 0x749f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0333
        gbc.setState(0xc59, 0xc97, 0xcaf0, 0xe359, 0x4db5, 0x4104, 0x1, 0x1);
        gbc.writeMem(0xc59, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xc97);
        EXPECT(gbc.pc(), 0xc5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0334
        gbc.setState(0xfca, 0x749, 0x4c50, 0xa48, 0x911b, 0x6bf7, 0x0, 0x1);
        gbc.writeMem(0xfca, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x749);
        EXPECT(gbc.pc(), 0xfcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0335
        gbc.setState(0x185b, 0x1648, 0x9560, 0xb8ed, 0x3b16, 0xf98, 0x1, 0x0);
        gbc.writeMem(0x185b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x1648);
        EXPECT(gbc.pc(), 0x185d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0336
        gbc.setState(0x577f, 0x46a1, 0x3de0, 0x4780, 0x9a04, 0xd660, 0x0, 0x0);
        gbc.writeMem(0x577f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x46a1);
        EXPECT(gbc.pc(), 0x5781);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0337
        gbc.setState(0x3378, 0x3121, 0x1660, 0x9e9c, 0x476d, 0xa5ff, 0x1, 0x1);
        gbc.writeMem(0x3378, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x3121);
        EXPECT(gbc.pc(), 0x337a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0338
        gbc.setState(0xa353, 0xdfcc, 0x3490, 0xb1de, 0x229b, 0xbb14, 0x0, 0x1);
        gbc.writeMem(0xa353, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xdfcc);
        EXPECT(gbc.pc(), 0xa355);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa353), 0xcb);
        EXPECT(gbc.readMem(0xa354), 0x12);
        // CB 12 033A
        gbc.setState(0xd4c6, 0x9ad2, 0x1300, 0xab2c, 0x7dde, 0x2b01, 0x0, 0x1);
        gbc.writeMem(0xd4c6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x9ad2);
        EXPECT(gbc.pc(), 0xd4c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4c6), 0xcb);
        EXPECT(gbc.readMem(0xd4c7), 0x12);
        // CB 12 033B
        gbc.setState(0x73ac, 0xd78b, 0x3c60, 0xa723, 0x99b3, 0x2381, 0x0, 0x0);
        gbc.writeMem(0x73ac, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xd78b);
        EXPECT(gbc.pc(), 0x73ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 033C
        gbc.setState(0x7d65, 0x16a3, 0x5b50, 0xdc00, 0x8a11, 0x833, 0x1, 0x0);
        gbc.writeMem(0x7d65, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x16a3);
        EXPECT(gbc.pc(), 0x7d67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 033D
        gbc.setState(0xe79b, 0x3811, 0x940, 0x71fa, 0x9858, 0xfb81, 0x0, 0x1);
        gbc.writeMem(0xe79b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x3811);
        EXPECT(gbc.pc(), 0xe79d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe79b), 0xcb);
        EXPECT(gbc.readMem(0xe79c), 0x12);
        // CB 12 033E
        gbc.setState(0x261f, 0x2535, 0x4ca0, 0xe723, 0x193f, 0x18c9, 0x0, 0x0);
        gbc.writeMem(0x261f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x2535);
        EXPECT(gbc.pc(), 0x2621);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 033F
        gbc.setState(0xc6b9, 0xaec, 0x39b0, 0x1cd4, 0xd4a5, 0xf297, 0x0, 0x0);
        gbc.writeMem(0xc6b9, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xaec);
        EXPECT(gbc.pc(), 0xc6bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6b9), 0xcb);
        EXPECT(gbc.readMem(0xc6ba), 0x12);
        // CB 12 0340
        gbc.setState(0x7d5e, 0x953f, 0xaed0, 0x909a, 0xefde, 0xa6fd, 0x1, 0x1);
        gbc.writeMem(0x7d5e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x953f);
        EXPECT(gbc.pc(), 0x7d60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0341
        gbc.setState(0xd20, 0x7eb4, 0x2440, 0x95bf, 0xa7d0, 0x1194, 0x0, 0x1);
        gbc.writeMem(0xd20, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x7eb4);
        EXPECT(gbc.pc(), 0xd22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0342
        gbc.setState(0xc747, 0x86d0, 0x8060, 0x2d75, 0x4779, 0xd9c5, 0x1, 0x0);
        gbc.writeMem(0xc747, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x86d0);
        EXPECT(gbc.pc(), 0xc749);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc747), 0xcb);
        EXPECT(gbc.readMem(0xc748), 0x12);
        // CB 12 0343
        gbc.setState(0x4cb0, 0x8a8b, 0x4fc0, 0xcf05, 0x4a46, 0x96e2, 0x1, 0x1);
        gbc.writeMem(0x4cb0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x8a8b);
        EXPECT(gbc.pc(), 0x4cb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0344
        gbc.setState(0x58bd, 0xd930, 0x6eb0, 0xea3f, 0xbbf3, 0x13cf, 0x0, 0x0);
        gbc.writeMem(0x58bd, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xd930);
        EXPECT(gbc.pc(), 0x58bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0345
        gbc.setState(0x2b8f, 0x87d5, 0x82f0, 0x76db, 0xe5d9, 0x224b, 0x0, 0x0);
        gbc.writeMem(0x2b8f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x87d5);
        EXPECT(gbc.pc(), 0x2b91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0346
        gbc.setState(0xbb93, 0x58c9, 0xdce0, 0x436d, 0x8d6e, 0x751a, 0x1, 0x1);
        gbc.writeMem(0xbb93, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x58c9);
        EXPECT(gbc.pc(), 0xbb95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb93), 0xcb);
        EXPECT(gbc.readMem(0xbb94), 0x12);
        // CB 12 0347
        gbc.setState(0xdc6b, 0x901d, 0xddb0, 0x54c7, 0xb235, 0xe48c, 0x0, 0x1);
        gbc.writeMem(0xdc6b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x901d);
        EXPECT(gbc.pc(), 0xdc6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc6b), 0xcb);
        EXPECT(gbc.readMem(0xdc6c), 0x12);
        // CB 12 0348
        gbc.setState(0x4b26, 0x6238, 0x7900, 0xd8b7, 0x81b3, 0xaf82, 0x1, 0x1);
        gbc.writeMem(0x4b26, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x6238);
        EXPECT(gbc.pc(), 0x4b28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0349
        gbc.setState(0xe634, 0x69b8, 0x2e00, 0xaaf6, 0x296d, 0xda74, 0x1, 0x1);
        gbc.writeMem(0xe634, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x69b8);
        EXPECT(gbc.pc(), 0xe636);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe634), 0xcb);
        EXPECT(gbc.readMem(0xe635), 0x12);
        // CB 12 034A
        gbc.setState(0xd8a7, 0x1bd7, 0xc2a0, 0x1124, 0x8b9a, 0x72c4, 0x1, 0x0);
        gbc.writeMem(0xd8a7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x1bd7);
        EXPECT(gbc.pc(), 0xd8a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8a7), 0xcb);
        EXPECT(gbc.readMem(0xd8a8), 0x12);
        // CB 12 034B
        gbc.setState(0xaad1, 0x29bc, 0x2c80, 0x7f32, 0xeb09, 0xcaca, 0x0, 0x0);
        gbc.writeMem(0xaad1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x29bc);
        EXPECT(gbc.pc(), 0xaad3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaad1), 0xcb);
        EXPECT(gbc.readMem(0xaad2), 0x12);
        // CB 12 034C
        gbc.setState(0x39bc, 0xd53a, 0x5c00, 0x9935, 0x2836, 0xd559, 0x1, 0x1);
        gbc.writeMem(0x39bc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xd53a);
        EXPECT(gbc.pc(), 0x39be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 034D
        gbc.setState(0x2e62, 0xf9a4, 0xeef0, 0x8ea5, 0xfb7f, 0xef37, 0x0, 0x0);
        gbc.writeMem(0x2e62, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf9a4);
        EXPECT(gbc.pc(), 0x2e64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 034E
        gbc.setState(0xe5ac, 0x2acf, 0x2ae0, 0xc999, 0x28e3, 0x366d, 0x0, 0x0);
        gbc.writeMem(0xe5ac, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x2acf);
        EXPECT(gbc.pc(), 0xe5ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5ac), 0xcb);
        EXPECT(gbc.readMem(0xe5ad), 0x12);
        // CB 12 034F
        gbc.setState(0x901c, 0xe61f, 0xd280, 0x7d54, 0x579a, 0xccb4, 0x0, 0x0);
        gbc.writeMem(0x901c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xe61f);
        EXPECT(gbc.pc(), 0x901e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x901c), 0xcb);
        EXPECT(gbc.readMem(0x901d), 0x12);
        // CB 12 0350
        gbc.setState(0x5b7c, 0x3f6e, 0x6f0, 0xd7dc, 0x2529, 0x7a8f, 0x0, 0x1);
        gbc.writeMem(0x5b7c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x3f6e);
        EXPECT(gbc.pc(), 0x5b7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0351
        gbc.setState(0xbda6, 0x15cc, 0xd60, 0xf2af, 0xc064, 0xabe9, 0x0, 0x1);
        gbc.writeMem(0xbda6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x15cc);
        EXPECT(gbc.pc(), 0xbda8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbda6), 0xcb);
        EXPECT(gbc.readMem(0xbda7), 0x12);
        // CB 12 0352
        gbc.setState(0x6459, 0xa936, 0x5b70, 0x12dc, 0xc790, 0x2315, 0x1, 0x1);
        gbc.writeMem(0x6459, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xa936);
        EXPECT(gbc.pc(), 0x645b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0354
        gbc.setState(0xdaac, 0x6637, 0xac70, 0x9223, 0xd70f, 0xcf1a, 0x1, 0x0);
        gbc.writeMem(0xdaac, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x6637);
        EXPECT(gbc.pc(), 0xdaae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaac), 0xcb);
        EXPECT(gbc.readMem(0xdaad), 0x12);
        // CB 12 0355
        gbc.setState(0xa57a, 0xa38f, 0xa5e0, 0x8288, 0xaf36, 0xe79e, 0x0, 0x0);
        gbc.writeMem(0xa57a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa38f);
        EXPECT(gbc.pc(), 0xa57c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa57a), 0xcb);
        EXPECT(gbc.readMem(0xa57b), 0x12);
        // CB 12 0356
        gbc.setState(0xe3e6, 0xb4da, 0x47d0, 0xad79, 0x85ae, 0x3f59, 0x0, 0x0);
        gbc.writeMem(0xe3e6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xb4da);
        EXPECT(gbc.pc(), 0xe3e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3e6), 0xcb);
        EXPECT(gbc.readMem(0xe3e7), 0x12);
        // CB 12 0357
        gbc.setState(0xd682, 0xd432, 0x4ec0, 0xc8b9, 0xb60, 0x52e9, 0x0, 0x1);
        gbc.writeMem(0xd682, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xd432);
        EXPECT(gbc.pc(), 0xd684);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd682), 0xcb);
        EXPECT(gbc.readMem(0xd683), 0x12);
        // CB 12 0358
        gbc.setState(0x281d, 0x5a56, 0x8a90, 0xc0f1, 0x784f, 0x6507, 0x1, 0x1);
        gbc.writeMem(0x281d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x5a56);
        EXPECT(gbc.pc(), 0x281f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0359
        gbc.setState(0xbf5d, 0x53d5, 0x3b50, 0xe2ed, 0xc91c, 0xd42b, 0x1, 0x0);
        gbc.writeMem(0xbf5d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x53d5);
        EXPECT(gbc.pc(), 0xbf5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf5d), 0xcb);
        EXPECT(gbc.readMem(0xbf5e), 0x12);
        // CB 12 035A
        gbc.setState(0xdbe8, 0x330f, 0x1040, 0xb2bb, 0xa8ed, 0x9232, 0x1, 0x1);
        gbc.writeMem(0xdbe8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x330f);
        EXPECT(gbc.pc(), 0xdbea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbe8), 0xcb);
        EXPECT(gbc.readMem(0xdbe9), 0x12);
        // CB 12 035B
        gbc.setState(0x21cc, 0x9b8, 0x19a0, 0xbfe1, 0xd036, 0x2b59, 0x0, 0x0);
        gbc.writeMem(0x21cc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9b8);
        EXPECT(gbc.pc(), 0x21ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 035C
        gbc.setState(0x54e, 0x2eb1, 0xb380, 0x214e, 0x5b62, 0xfec3, 0x1, 0x0);
        gbc.writeMem(0x54e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2eb1);
        EXPECT(gbc.pc(), 0x550);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 035D
        gbc.setState(0x597, 0xf866, 0x8370, 0xd36b, 0x5834, 0xc8c0, 0x0, 0x1);
        gbc.writeMem(0x597, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xf866);
        EXPECT(gbc.pc(), 0x599);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 035E
        gbc.setState(0x4a00, 0x3299, 0xa2a0, 0x4b25, 0xecd1, 0xf387, 0x0, 0x1);
        gbc.writeMem(0x4a00, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x3299);
        EXPECT(gbc.pc(), 0x4a02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 035F
        gbc.setState(0xb65e, 0xf0bf, 0xa880, 0x7af0, 0x8aaa, 0xc39a, 0x1, 0x0);
        gbc.writeMem(0xb65e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xf0bf);
        EXPECT(gbc.pc(), 0xb660);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb65e), 0xcb);
        EXPECT(gbc.readMem(0xb65f), 0x12);
        // CB 12 0360
        gbc.setState(0xce41, 0x9706, 0xac20, 0xa3e2, 0x5554, 0x9d37, 0x0, 0x1);
        gbc.writeMem(0xce41, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x9706);
        EXPECT(gbc.pc(), 0xce43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce41), 0xcb);
        EXPECT(gbc.readMem(0xce42), 0x12);
        // CB 12 0361
        gbc.setState(0xb08c, 0x3063, 0x7a00, 0x1d8e, 0x9de5, 0xda2e, 0x0, 0x1);
        gbc.writeMem(0xb08c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3063);
        EXPECT(gbc.pc(), 0xb08e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb08c), 0xcb);
        EXPECT(gbc.readMem(0xb08d), 0x12);
        // CB 12 0362
        gbc.setState(0x4d4f, 0xd12d, 0x7c0, 0x142b, 0x1799, 0xc21f, 0x1, 0x0);
        gbc.writeMem(0x4d4f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xd12d);
        EXPECT(gbc.pc(), 0x4d51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0363
        gbc.setState(0xddc9, 0xf029, 0xca40, 0xc390, 0x80a6, 0x87e5, 0x0, 0x1);
        gbc.writeMem(0xddc9, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf029);
        EXPECT(gbc.pc(), 0xddcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddc9), 0xcb);
        EXPECT(gbc.readMem(0xddca), 0x12);
        // CB 12 0364
        gbc.setState(0xfbd, 0x15d5, 0x9490, 0x6a86, 0xced1, 0x871d, 0x1, 0x0);
        gbc.writeMem(0xfbd, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x15d5);
        EXPECT(gbc.pc(), 0xfbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0365
        gbc.setState(0x1d67, 0x875d, 0x560, 0x63f3, 0xce42, 0xfdc9, 0x1, 0x1);
        gbc.writeMem(0x1d67, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x875d);
        EXPECT(gbc.pc(), 0x1d69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0366
        gbc.setState(0xe62b, 0xec5a, 0x99c0, 0x52bb, 0xa16b, 0xe1f, 0x1, 0x1);
        gbc.writeMem(0xe62b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xec5a);
        EXPECT(gbc.pc(), 0xe62d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe62b), 0xcb);
        EXPECT(gbc.readMem(0xe62c), 0x12);
        // CB 12 0367
        gbc.setState(0xea57, 0x2d32, 0x2ca0, 0xba38, 0x34d, 0x693c, 0x1, 0x0);
        gbc.writeMem(0xea57, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2d32);
        EXPECT(gbc.pc(), 0xea59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea57), 0xcb);
        EXPECT(gbc.readMem(0xea58), 0x12);
        // CB 12 0368
        gbc.setState(0x2e12, 0x7533, 0x90, 0xacbe, 0x6bea, 0xa917, 0x0, 0x0);
        gbc.writeMem(0x2e12, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7533);
        EXPECT(gbc.pc(), 0x2e14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0369
        gbc.setState(0xb832, 0x9df9, 0x37d0, 0x17d4, 0xa944, 0x77fc, 0x1, 0x1);
        gbc.writeMem(0xb832, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x9df9);
        EXPECT(gbc.pc(), 0xb834);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb832), 0xcb);
        EXPECT(gbc.readMem(0xb833), 0x12);
        // CB 12 036A
        gbc.setState(0x9527, 0x7610, 0xe810, 0xae7c, 0x5769, 0x9973, 0x0, 0x0);
        gbc.writeMem(0x9527, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x7610);
        EXPECT(gbc.pc(), 0x9529);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9527), 0xcb);
        EXPECT(gbc.readMem(0x9528), 0x12);
        // CB 12 036B
        gbc.setState(0x356a, 0x865a, 0xfba0, 0xcd8c, 0xb149, 0x71c5, 0x1, 0x1);
        gbc.writeMem(0x356a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x865a);
        EXPECT(gbc.pc(), 0x356c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 036C
        gbc.setState(0x9445, 0xa9c2, 0x7e00, 0x9062, 0x5a84, 0x9ce7, 0x0, 0x0);
        gbc.writeMem(0x9445, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa9c2);
        EXPECT(gbc.pc(), 0x9447);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9445), 0xcb);
        EXPECT(gbc.readMem(0x9446), 0x12);
        // CB 12 036D
        gbc.setState(0x366c, 0xc3a2, 0xc90, 0x2c3a, 0x4d5d, 0x61c6, 0x0, 0x1);
        gbc.writeMem(0x366c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xc3a2);
        EXPECT(gbc.pc(), 0x366e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 036E
        gbc.setState(0x427c, 0xe6a2, 0xea50, 0xba4b, 0xdc7d, 0x602d, 0x1, 0x1);
        gbc.writeMem(0x427c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe6a2);
        EXPECT(gbc.pc(), 0x427e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 036F
        gbc.setState(0x54db, 0xb4bd, 0x1d20, 0xabb4, 0xd987, 0x618d, 0x0, 0x0);
        gbc.writeMem(0x54db, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xb4bd);
        EXPECT(gbc.pc(), 0x54dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0370
        gbc.setState(0xa6b5, 0x37e1, 0xff80, 0xa5af, 0x5e5b, 0x7797, 0x0, 0x1);
        gbc.writeMem(0xa6b5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x37e1);
        EXPECT(gbc.pc(), 0xa6b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6b5), 0xcb);
        EXPECT(gbc.readMem(0xa6b6), 0x12);
        // CB 12 0372
        gbc.setState(0x152, 0x7315, 0xe660, 0xb859, 0x997d, 0xea28, 0x0, 0x0);
        gbc.writeMem(0x152, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x7315);
        EXPECT(gbc.pc(), 0x154);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0373
        gbc.setState(0xcb92, 0x699b, 0x4120, 0xf370, 0x8528, 0x54d7, 0x0, 0x0);
        gbc.writeMem(0xcb92, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x699b);
        EXPECT(gbc.pc(), 0xcb94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb92), 0xcb);
        EXPECT(gbc.readMem(0xcb93), 0x12);
        // CB 12 0374
        gbc.setState(0xadbe, 0xa759, 0x61a0, 0xe7f8, 0x69c, 0x671, 0x1, 0x1);
        gbc.writeMem(0xadbe, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xa759);
        EXPECT(gbc.pc(), 0xadc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadbe), 0xcb);
        EXPECT(gbc.readMem(0xadbf), 0x12);
        // CB 12 0375
        gbc.setState(0x6514, 0xb5fe, 0xa060, 0x43d5, 0x107e, 0x65b9, 0x1, 0x1);
        gbc.writeMem(0x6514, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xb5fe);
        EXPECT(gbc.pc(), 0x6516);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0376
        gbc.setState(0x86bc, 0xfef8, 0x4f90, 0x324c, 0x7d12, 0x5cd5, 0x0, 0x1);
        gbc.writeMem(0x86bc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xfef8);
        EXPECT(gbc.pc(), 0x86be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86bc), 0xcb);
        EXPECT(gbc.readMem(0x86bd), 0x12);
        // CB 12 0377
        gbc.setState(0x9851, 0x16f4, 0x7f90, 0x589f, 0x23cf, 0xa108, 0x1, 0x0);
        gbc.writeMem(0x9851, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x16f4);
        EXPECT(gbc.pc(), 0x9853);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9851), 0xcb);
        EXPECT(gbc.readMem(0x9852), 0x12);
        // CB 12 0379
        gbc.setState(0x51fc, 0x2753, 0x41d0, 0xef4a, 0x96fb, 0x6752, 0x1, 0x0);
        gbc.writeMem(0x51fc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x2753);
        EXPECT(gbc.pc(), 0x51fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 037A
        gbc.setState(0x40fd, 0x9357, 0xc8e0, 0x6ffe, 0x5dec, 0x5d0f, 0x1, 0x0);
        gbc.writeMem(0x40fd, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x9357);
        EXPECT(gbc.pc(), 0x40ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 037B
        gbc.setState(0x4112, 0x7a68, 0x4a10, 0x450a, 0x8a55, 0x7dd0, 0x1, 0x0);
        gbc.writeMem(0x4112, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x7a68);
        EXPECT(gbc.pc(), 0x4114);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 037C
        gbc.setState(0x5890, 0x95bf, 0x7190, 0x6525, 0x92aa, 0x3ef5, 0x1, 0x1);
        gbc.writeMem(0x5890, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x95bf);
        EXPECT(gbc.pc(), 0x5892);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 037D
        gbc.setState(0xa158, 0x16a1, 0x99c0, 0x8769, 0x1ff9, 0x931, 0x1, 0x0);
        gbc.writeMem(0xa158, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x16a1);
        EXPECT(gbc.pc(), 0xa15a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa158), 0xcb);
        EXPECT(gbc.readMem(0xa159), 0x12);
        // CB 12 037E
        gbc.setState(0x7f70, 0x1eac, 0x1c90, 0x9e19, 0x3bd1, 0x278d, 0x1, 0x0);
        gbc.writeMem(0x7f70, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x1eac);
        EXPECT(gbc.pc(), 0x7f72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 037F
        gbc.setState(0xd2d0, 0xdaff, 0x3e00, 0x6895, 0x3ed1, 0x2ecd, 0x1, 0x0);
        gbc.writeMem(0xd2d0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xdaff);
        EXPECT(gbc.pc(), 0xd2d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2d0), 0xcb);
        EXPECT(gbc.readMem(0xd2d1), 0x12);
        // CB 12 0380
        gbc.setState(0xc389, 0x1b00, 0x79d0, 0xc680, 0x78c, 0x4d1e, 0x0, 0x1);
        gbc.writeMem(0xc389, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1b00);
        EXPECT(gbc.pc(), 0xc38b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc389), 0xcb);
        EXPECT(gbc.readMem(0xc38a), 0x12);
        // CB 12 0381
        gbc.setState(0x554a, 0x8b50, 0x150, 0xe3f6, 0x812a, 0xb7cf, 0x1, 0x1);
        gbc.writeMem(0x554a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x8b50);
        EXPECT(gbc.pc(), 0x554c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0382
        gbc.setState(0xafe3, 0xf30f, 0x1ac0, 0x78ef, 0x529d, 0x8193, 0x1, 0x0);
        gbc.writeMem(0xafe3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xf30f);
        EXPECT(gbc.pc(), 0xafe5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafe3), 0xcb);
        EXPECT(gbc.readMem(0xafe4), 0x12);
        // CB 12 0383
        gbc.setState(0x9416, 0x27ab, 0xcf90, 0xcb0a, 0x14d5, 0xbe0a, 0x0, 0x0);
        gbc.writeMem(0x9416, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x27ab);
        EXPECT(gbc.pc(), 0x9418);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9416), 0xcb);
        EXPECT(gbc.readMem(0x9417), 0x12);
        // CB 12 0384
        gbc.setState(0x39ad, 0xe6ba, 0x49b0, 0xec75, 0x9cdb, 0xb8e, 0x0, 0x1);
        gbc.writeMem(0x39ad, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xe6ba);
        EXPECT(gbc.pc(), 0x39af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0385
        gbc.setState(0x5cd, 0xf24f, 0x10d0, 0x9df2, 0x79f6, 0xc688, 0x1, 0x1);
        gbc.writeMem(0x5cd, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xf24f);
        EXPECT(gbc.pc(), 0x5cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0386
        gbc.setState(0x6153, 0x612d, 0x78b0, 0x7936, 0x819f, 0xf49e, 0x1, 0x1);
        gbc.writeMem(0x6153, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x612d);
        EXPECT(gbc.pc(), 0x6155);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0387
        gbc.setState(0xec4e, 0x1e2f, 0x34e0, 0x6ec6, 0x4a1c, 0x990e, 0x0, 0x0);
        gbc.writeMem(0xec4e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x1e2f);
        EXPECT(gbc.pc(), 0xec50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec4e), 0xcb);
        EXPECT(gbc.readMem(0xec4f), 0x12);
        // CB 12 0388
        gbc.setState(0xbba5, 0xd5f1, 0x1f20, 0xf9f, 0xad70, 0x6144, 0x0, 0x0);
        gbc.writeMem(0xbba5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd5f1);
        EXPECT(gbc.pc(), 0xbba7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbba5), 0xcb);
        EXPECT(gbc.readMem(0xbba6), 0x12);
        // CB 12 0389
        gbc.setState(0x71be, 0x3b91, 0x7ca0, 0xbcb6, 0x9d27, 0xba1f, 0x0, 0x1);
        gbc.writeMem(0x71be, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x3b91);
        EXPECT(gbc.pc(), 0x71c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 038A
        gbc.setState(0x74bf, 0x41b8, 0x19f0, 0xdb66, 0x6618, 0x52b5, 0x1, 0x1);
        gbc.writeMem(0x74bf, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x41b8);
        EXPECT(gbc.pc(), 0x74c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 038B
        gbc.setState(0x26de, 0x2256, 0xdb40, 0x2618, 0x1a6b, 0x3f6e, 0x1, 0x0);
        gbc.writeMem(0x26de, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x2256);
        EXPECT(gbc.pc(), 0x26e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 038C
        gbc.setState(0xaa4f, 0x9a35, 0x4cc0, 0xc251, 0xda9e, 0xabf, 0x0, 0x1);
        gbc.writeMem(0xaa4f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x9a35);
        EXPECT(gbc.pc(), 0xaa51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa4f), 0xcb);
        EXPECT(gbc.readMem(0xaa50), 0x12);
        // CB 12 038D
        gbc.setState(0x9995, 0x9d7f, 0x4540, 0x6828, 0xe592, 0x266b, 0x0, 0x1);
        gbc.writeMem(0x9995, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x9d7f);
        EXPECT(gbc.pc(), 0x9997);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9995), 0xcb);
        EXPECT(gbc.readMem(0x9996), 0x12);
        // CB 12 038E
        gbc.setState(0x9622, 0xcba, 0x9c60, 0x2d0, 0x3f98, 0x9252, 0x0, 0x1);
        gbc.writeMem(0x9622, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xcba);
        EXPECT(gbc.pc(), 0x9624);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9622), 0xcb);
        EXPECT(gbc.readMem(0x9623), 0x12);
        // CB 12 038F
        gbc.setState(0x1a6b, 0x4e03, 0x81a0, 0xd274, 0x9271, 0xd2f4, 0x0, 0x1);
        gbc.writeMem(0x1a6b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x4e03);
        EXPECT(gbc.pc(), 0x1a6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0390
        gbc.setState(0xd228, 0x91b2, 0x6050, 0x240a, 0xfc4, 0x5a1d, 0x0, 0x0);
        gbc.writeMem(0xd228, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x91b2);
        EXPECT(gbc.pc(), 0xd22a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd228), 0xcb);
        EXPECT(gbc.readMem(0xd229), 0x12);
        // CB 12 0391
        gbc.setState(0xcfc4, 0xaaf7, 0xb330, 0x484e, 0x4548, 0xdfe5, 0x1, 0x0);
        gbc.writeMem(0xcfc4, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xaaf7);
        EXPECT(gbc.pc(), 0xcfc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfc4), 0xcb);
        EXPECT(gbc.readMem(0xcfc5), 0x12);
        // CB 12 0392
        gbc.setState(0x5727, 0x342f, 0x8170, 0xe126, 0xa4b7, 0xda43, 0x0, 0x0);
        gbc.writeMem(0x5727, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x342f);
        EXPECT(gbc.pc(), 0x5729);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 0393
        gbc.setState(0x963b, 0xb890, 0x1f80, 0xab77, 0xb375, 0xcea8, 0x1, 0x1);
        gbc.writeMem(0x963b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb890);
        EXPECT(gbc.pc(), 0x963d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x963b), 0xcb);
        EXPECT(gbc.readMem(0x963c), 0x12);
        // CB 12 0394
        gbc.setState(0xb033, 0x79e2, 0x1610, 0x88d3, 0x7f5d, 0xe13b, 0x0, 0x1);
        gbc.writeMem(0xb033, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x79e2);
        EXPECT(gbc.pc(), 0xb035);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb033), 0xcb);
        EXPECT(gbc.readMem(0xb034), 0x12);
        // CB 12 0395
        gbc.setState(0x46b6, 0x6143, 0x1420, 0x697c, 0x5f41, 0x7a58, 0x1, 0x0);
        gbc.writeMem(0x46b6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6143);
        EXPECT(gbc.pc(), 0x46b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0396
        gbc.setState(0xde30, 0x745e, 0xf900, 0x7dcd, 0x4cd1, 0xfd4e, 0x0, 0x0);
        gbc.writeMem(0xde30, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x745e);
        EXPECT(gbc.pc(), 0xde32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde30), 0xcb);
        EXPECT(gbc.readMem(0xde31), 0x12);
        // CB 12 0397
        gbc.setState(0x3939, 0x3d3f, 0x5060, 0x9c89, 0x33ea, 0xb24a, 0x1, 0x0);
        gbc.writeMem(0x3939, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x3d3f);
        EXPECT(gbc.pc(), 0x393b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 0398
        gbc.setState(0xc20c, 0xc0bd, 0x6e60, 0x31ee, 0x3dd1, 0xd008, 0x0, 0x0);
        gbc.writeMem(0xc20c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc0bd);
        EXPECT(gbc.pc(), 0xc20e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc20c), 0xcb);
        EXPECT(gbc.readMem(0xc20d), 0x12);
        // CB 12 0399
        gbc.setState(0x103d, 0x94b2, 0x9290, 0x9846, 0x1787, 0x2ed3, 0x1, 0x1);
        gbc.writeMem(0x103d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x94b2);
        EXPECT(gbc.pc(), 0x103f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 039A
        gbc.setState(0x344d, 0xea95, 0x95d0, 0x8b54, 0xdc69, 0xc6, 0x0, 0x0);
        gbc.writeMem(0x344d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xea95);
        EXPECT(gbc.pc(), 0x344f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 039B
        gbc.setState(0x58cd, 0xa196, 0x2640, 0x61, 0xdbab, 0xd6f3, 0x0, 0x1);
        gbc.writeMem(0x58cd, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xa196);
        EXPECT(gbc.pc(), 0x58cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 039C
        gbc.setState(0xc04d, 0xa81c, 0x6fd0, 0x3ebf, 0x9b03, 0xaa1, 0x0, 0x1);
        gbc.writeMem(0xc04d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa81c);
        EXPECT(gbc.pc(), 0xc04f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc04d), 0xcb);
        EXPECT(gbc.readMem(0xc04e), 0x12);
        // CB 12 039D
        gbc.setState(0x6d78, 0xf4ab, 0x9be0, 0x51d2, 0xcfd7, 0x11ae, 0x1, 0x0);
        gbc.writeMem(0x6d78, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xf4ab);
        EXPECT(gbc.pc(), 0x6d7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 039E
        gbc.setState(0xb089, 0x83ae, 0x5ea0, 0x24eb, 0xa3dc, 0x792c, 0x1, 0x1);
        gbc.writeMem(0xb089, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x83ae);
        EXPECT(gbc.pc(), 0xb08b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb089), 0xcb);
        EXPECT(gbc.readMem(0xb08a), 0x12);
        // CB 12 039F
        gbc.setState(0x8988, 0x6e31, 0xb210, 0x85e9, 0x7766, 0x7770, 0x0, 0x0);
        gbc.writeMem(0x8988, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6e31);
        EXPECT(gbc.pc(), 0x898a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8988), 0xcb);
        EXPECT(gbc.readMem(0x8989), 0x12);
        // CB 12 03A0
        gbc.setState(0xdf6a, 0x4e8a, 0x1d20, 0xba49, 0x5da3, 0x5679, 0x0, 0x1);
        gbc.writeMem(0xdf6a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x4e8a);
        EXPECT(gbc.pc(), 0xdf6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf6a), 0xcb);
        EXPECT(gbc.readMem(0xdf6b), 0x12);
        // CB 12 03A1
        gbc.setState(0xceea, 0xf1a1, 0xa8c0, 0x6c55, 0xb411, 0x399c, 0x1, 0x1);
        gbc.writeMem(0xceea, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xf1a1);
        EXPECT(gbc.pc(), 0xceec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceea), 0xcb);
        EXPECT(gbc.readMem(0xceeb), 0x12);
        // CB 12 03A2
        gbc.setState(0xcfad, 0x4e80, 0xf2b0, 0x90fc, 0x184e, 0xbf1a, 0x0, 0x0);
        gbc.writeMem(0xcfad, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x4e80);
        EXPECT(gbc.pc(), 0xcfaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfad), 0xcb);
        EXPECT(gbc.readMem(0xcfae), 0x12);
        // CB 12 03A3
        gbc.setState(0xa7a5, 0x6ba7, 0xaf30, 0x850d, 0x1361, 0xcc15, 0x0, 0x0);
        gbc.writeMem(0xa7a5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x6ba7);
        EXPECT(gbc.pc(), 0xa7a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7a5), 0xcb);
        EXPECT(gbc.readMem(0xa7a6), 0x12);
        // CB 12 03A4
        gbc.setState(0xe088, 0xf50d, 0xa6d0, 0x2596, 0xf51d, 0x2cf2, 0x0, 0x1);
        gbc.writeMem(0xe088, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xf50d);
        EXPECT(gbc.pc(), 0xe08a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe088), 0xcb);
        EXPECT(gbc.readMem(0xe089), 0x12);
        // CB 12 03A5
        gbc.setState(0x81ed, 0xb3a8, 0x2800, 0x962c, 0x151e, 0xa729, 0x0, 0x1);
        gbc.writeMem(0x81ed, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xb3a8);
        EXPECT(gbc.pc(), 0x81ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81ed), 0xcb);
        EXPECT(gbc.readMem(0x81ee), 0x12);
        // CB 12 03A6
        gbc.setState(0x9cb5, 0x352b, 0xa810, 0x123d, 0x5a4a, 0x9db3, 0x1, 0x1);
        gbc.writeMem(0x9cb5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x352b);
        EXPECT(gbc.pc(), 0x9cb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cb5), 0xcb);
        EXPECT(gbc.readMem(0x9cb6), 0x12);
        // CB 12 03A7
        gbc.setState(0x9fcd, 0xb625, 0x1ae0, 0x47e7, 0xb6c0, 0xbe18, 0x1, 0x1);
        gbc.writeMem(0x9fcd, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xb625);
        EXPECT(gbc.pc(), 0x9fcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fcd), 0xcb);
        EXPECT(gbc.readMem(0x9fce), 0x12);
        // CB 12 03A8
        gbc.setState(0x1956, 0x3f71, 0x7c20, 0xefd, 0x2fa0, 0x46b9, 0x1, 0x1);
        gbc.writeMem(0x1956, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x3f71);
        EXPECT(gbc.pc(), 0x1958);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 03A9
        gbc.setState(0x10c1, 0xdaba, 0x9aa0, 0x21b3, 0xd5c2, 0xf1cb, 0x1, 0x1);
        gbc.writeMem(0x10c1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xdaba);
        EXPECT(gbc.pc(), 0x10c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 03AA
        gbc.setState(0x6b22, 0x4b8d, 0xe1b0, 0xf498, 0xd413, 0x4933, 0x0, 0x1);
        gbc.writeMem(0x6b22, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4b8d);
        EXPECT(gbc.pc(), 0x6b24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 03AC
        gbc.setState(0x3fc2, 0x1c3c, 0x18b0, 0x29b, 0xe239, 0x91f, 0x1, 0x1);
        gbc.writeMem(0x3fc2, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x1c3c);
        EXPECT(gbc.pc(), 0x3fc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 03AD
        gbc.setState(0x50e9, 0x1252, 0xd500, 0x2487, 0x24cd, 0x546a, 0x0, 0x1);
        gbc.writeMem(0x50e9, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1252);
        EXPECT(gbc.pc(), 0x50eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 03AE
        gbc.setState(0xae09, 0xda20, 0xa80, 0xaa9d, 0x9f99, 0xf519, 0x0, 0x1);
        gbc.writeMem(0xae09, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xda20);
        EXPECT(gbc.pc(), 0xae0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae09), 0xcb);
        EXPECT(gbc.readMem(0xae0a), 0x12);
        // CB 12 03AF
        gbc.setState(0x12e, 0x82a0, 0xc250, 0x37, 0x2a3, 0x580b, 0x0, 0x1);
        gbc.writeMem(0x12e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x82a0);
        EXPECT(gbc.pc(), 0x130);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 03B0
        gbc.setState(0xee97, 0xcc10, 0xd3d0, 0xabef, 0x8d5e, 0x189, 0x1, 0x0);
        gbc.writeMem(0xee97, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xcc10);
        EXPECT(gbc.pc(), 0xee99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee97), 0xcb);
        EXPECT(gbc.readMem(0xee98), 0x12);
        // CB 12 03B1
        gbc.setState(0x91e7, 0x724c, 0x3010, 0xf214, 0x413c, 0x732, 0x0, 0x1);
        gbc.writeMem(0x91e7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x724c);
        EXPECT(gbc.pc(), 0x91e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91e7), 0xcb);
        EXPECT(gbc.readMem(0x91e8), 0x12);
        // CB 12 03B2
        gbc.setState(0xb085, 0x779a, 0xb8d0, 0xaa29, 0x4520, 0x3243, 0x1, 0x0);
        gbc.writeMem(0xb085, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x779a);
        EXPECT(gbc.pc(), 0xb087);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb085), 0xcb);
        EXPECT(gbc.readMem(0xb086), 0x12);
        // CB 12 03B3
        gbc.setState(0x66f8, 0x3db1, 0x9340, 0xcf58, 0x96a7, 0x92f0, 0x0, 0x1);
        gbc.writeMem(0x66f8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x3db1);
        EXPECT(gbc.pc(), 0x66fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 03B4
        gbc.setState(0x42db, 0x45f2, 0x7ad0, 0x2e12, 0xa5a5, 0x7102, 0x0, 0x0);
        gbc.writeMem(0x42db, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x45f2);
        EXPECT(gbc.pc(), 0x42dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 03B5
        gbc.setState(0xd60, 0x187e, 0x1a00, 0xaa51, 0x81f4, 0x4057, 0x0, 0x1);
        gbc.writeMem(0xd60, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x187e);
        EXPECT(gbc.pc(), 0xd62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 03B6
        gbc.setState(0xa18f, 0x307e, 0x1630, 0x231a, 0xb272, 0xff29, 0x1, 0x0);
        gbc.writeMem(0xa18f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x307e);
        EXPECT(gbc.pc(), 0xa191);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa18f), 0xcb);
        EXPECT(gbc.readMem(0xa190), 0x12);
        // CB 12 03B7
        gbc.setState(0x5b61, 0x19c3, 0x7a0, 0x2f50, 0xf184, 0x19ca, 0x1, 0x1);
        gbc.writeMem(0x5b61, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x19c3);
        EXPECT(gbc.pc(), 0x5b63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 03B8
        gbc.setState(0x74d, 0x3dfc, 0x8590, 0x983a, 0x6295, 0xff61, 0x0, 0x0);
        gbc.writeMem(0x74d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3dfc);
        EXPECT(gbc.pc(), 0x74f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 03B9
        gbc.setState(0x9043, 0x945a, 0xcef0, 0x3603, 0xf715, 0xd854, 0x0, 0x1);
        gbc.writeMem(0x9043, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x945a);
        EXPECT(gbc.pc(), 0x9045);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9043), 0xcb);
        EXPECT(gbc.readMem(0x9044), 0x12);
        // CB 12 03BA
        gbc.setState(0x4d06, 0x22e4, 0xc8f0, 0x6226, 0x1837, 0x672a, 0x1, 0x1);
        gbc.writeMem(0x4d06, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x22e4);
        EXPECT(gbc.pc(), 0x4d08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 03BB
        gbc.setState(0x3168, 0xd39c, 0xe000, 0x13db, 0x54b, 0x24fc, 0x1, 0x1);
        gbc.writeMem(0x3168, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xd39c);
        EXPECT(gbc.pc(), 0x316a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 03BC
        gbc.setState(0x53d6, 0xd223, 0x9000, 0x3d5f, 0xc457, 0x7553, 0x0, 0x1);
        gbc.writeMem(0x53d6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xd223);
        EXPECT(gbc.pc(), 0x53d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 03BD
        gbc.setState(0x470c, 0x8388, 0x5f0, 0xfcc9, 0xef56, 0x4a0d, 0x1, 0x1);
        gbc.writeMem(0x470c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8388);
        EXPECT(gbc.pc(), 0x470e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 03BE
        gbc.setState(0x1a2b, 0x609d, 0xfca0, 0x6f4f, 0x8c07, 0xafad, 0x0, 0x1);
        gbc.writeMem(0x1a2b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x609d);
        EXPECT(gbc.pc(), 0x1a2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 03BF
        gbc.setState(0x1af7, 0x3065, 0xe960, 0x2236, 0xc72e, 0x3105, 0x0, 0x1);
        gbc.writeMem(0x1af7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x3065);
        EXPECT(gbc.pc(), 0x1af9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 03C0
        gbc.setState(0x9035, 0x6823, 0x4480, 0x87cd, 0x9a23, 0x9668, 0x1, 0x0);
        gbc.writeMem(0x9035, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x6823);
        EXPECT(gbc.pc(), 0x9037);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9035), 0xcb);
        EXPECT(gbc.readMem(0x9036), 0x12);
        // CB 12 03C1
        gbc.setState(0x46e6, 0x7f38, 0xb3e0, 0x1b7c, 0x7586, 0x8abb, 0x0, 0x0);
        gbc.writeMem(0x46e6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x7f38);
        EXPECT(gbc.pc(), 0x46e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 03C4
        gbc.setState(0x761, 0xfec8, 0x8dd0, 0xc526, 0xb7b0, 0xb3e0, 0x1, 0x1);
        gbc.writeMem(0x761, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xfec8);
        EXPECT(gbc.pc(), 0x763);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 03C5
        gbc.setState(0x9df6, 0xc92e, 0x8b20, 0x7831, 0x445b, 0x86eb, 0x1, 0x0);
        gbc.writeMem(0x9df6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xc92e);
        EXPECT(gbc.pc(), 0x9df8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9df6), 0xcb);
        EXPECT(gbc.readMem(0x9df7), 0x12);
        // CB 12 03C6
        gbc.setState(0x4a6d, 0x406d, 0x8080, 0x6be2, 0x8983, 0x7e47, 0x0, 0x1);
        gbc.writeMem(0x4a6d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x406d);
        EXPECT(gbc.pc(), 0x4a6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 03C7
        gbc.setState(0xb094, 0xb9df, 0x7700, 0x4fcf, 0x353f, 0x7b0c, 0x0, 0x1);
        gbc.writeMem(0xb094, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb9df);
        EXPECT(gbc.pc(), 0xb096);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb094), 0xcb);
        EXPECT(gbc.readMem(0xb095), 0x12);
        // CB 12 03C8
        gbc.setState(0x32c2, 0x9368, 0x1860, 0x7709, 0x9f8d, 0x3932, 0x0, 0x1);
        gbc.writeMem(0x32c2, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x9368);
        EXPECT(gbc.pc(), 0x32c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 03C9
        gbc.setState(0xc25d, 0x67d, 0x1cb0, 0xcad, 0xa977, 0xf624, 0x1, 0x0);
        gbc.writeMem(0xc25d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x67d);
        EXPECT(gbc.pc(), 0xc25f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc25d), 0xcb);
        EXPECT(gbc.readMem(0xc25e), 0x12);
        // CB 12 03CA
        gbc.setState(0x4263, 0xf1bf, 0x5f90, 0x16a3, 0xed81, 0x73b5, 0x1, 0x0);
        gbc.writeMem(0x4263, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xf1bf);
        EXPECT(gbc.pc(), 0x4265);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 03CB
        gbc.setState(0x3ef1, 0x3cb1, 0xaf10, 0x44e5, 0x3c42, 0x43cd, 0x0, 0x0);
        gbc.writeMem(0x3ef1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x3cb1);
        EXPECT(gbc.pc(), 0x3ef3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 03CC
        gbc.setState(0xda0d, 0x32a7, 0x6a80, 0xff47, 0xe7b8, 0x954c, 0x0, 0x0);
        gbc.writeMem(0xda0d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x32a7);
        EXPECT(gbc.pc(), 0xda0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda0d), 0xcb);
        EXPECT(gbc.readMem(0xda0e), 0x12);
        // CB 12 03CD
        gbc.setState(0x3ede, 0x5073, 0xd480, 0x4db, 0x44e8, 0xce05, 0x1, 0x1);
        gbc.writeMem(0x3ede, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x5073);
        EXPECT(gbc.pc(), 0x3ee0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 03CE
        gbc.setState(0x5bd9, 0x7bb5, 0x1cf0, 0xab7c, 0xce07, 0xa867, 0x0, 0x0);
        gbc.writeMem(0x5bd9, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x7bb5);
        EXPECT(gbc.pc(), 0x5bdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 03CF
        gbc.setState(0x61c0, 0x5baf, 0x9b60, 0xb24, 0xb53a, 0xb149, 0x0, 0x1);
        gbc.writeMem(0x61c0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x5baf);
        EXPECT(gbc.pc(), 0x61c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 03D0
        gbc.setState(0xe1ec, 0x8671, 0x8440, 0x2aab, 0x51ba, 0xd307, 0x1, 0x1);
        gbc.writeMem(0xe1ec, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x8671);
        EXPECT(gbc.pc(), 0xe1ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1ec), 0xcb);
        EXPECT(gbc.readMem(0xe1ed), 0x12);
        // CB 12 03D1
        gbc.setState(0x5741, 0x28a1, 0x58a0, 0x9301, 0x1d18, 0x76bf, 0x0, 0x0);
        gbc.writeMem(0x5741, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x28a1);
        EXPECT(gbc.pc(), 0x5743);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 03D2
        gbc.setState(0xa15f, 0x6584, 0x3e20, 0x5769, 0xe87d, 0x953a, 0x1, 0x0);
        gbc.writeMem(0xa15f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x6584);
        EXPECT(gbc.pc(), 0xa161);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa15f), 0xcb);
        EXPECT(gbc.readMem(0xa160), 0x12);
        // CB 12 03D3
        gbc.setState(0x3d11, 0x761b, 0x1940, 0x5339, 0xaa09, 0x8078, 0x0, 0x0);
        gbc.writeMem(0x3d11, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x761b);
        EXPECT(gbc.pc(), 0x3d13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 12 03D4
        gbc.setState(0x59d3, 0xd20b, 0x8620, 0xa2fe, 0x8f7, 0x28ed, 0x1, 0x1);
        gbc.writeMem(0x59d3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd20b);
        EXPECT(gbc.pc(), 0x59d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 03D5
        gbc.setState(0x6cf4, 0xbeec, 0xf3b0, 0xa049, 0x1e30, 0x9d91, 0x1, 0x0);
        gbc.writeMem(0x6cf4, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xbeec);
        EXPECT(gbc.pc(), 0x6cf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 03D6
        gbc.setState(0x4658, 0xd955, 0x4a50, 0xe6d4, 0x2dda, 0x79b7, 0x1, 0x1);
        gbc.writeMem(0x4658, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xd955);
        EXPECT(gbc.pc(), 0x465a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 03D8
        gbc.setState(0x8c0b, 0x5c40, 0x95d0, 0x8fc7, 0x746a, 0xd553, 0x1, 0x1);
        gbc.writeMem(0x8c0b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5c40);
        EXPECT(gbc.pc(), 0x8c0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c0b), 0xcb);
        EXPECT(gbc.readMem(0x8c0c), 0x12);
        // CB 12 03D9
        gbc.setState(0x120a, 0x465a, 0xeb90, 0x3a67, 0x4c4e, 0xff15, 0x0, 0x1);
        gbc.writeMem(0x120a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x465a);
        EXPECT(gbc.pc(), 0x120c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 03DB
        gbc.setState(0xcc02, 0x67c9, 0x3ee0, 0x1c30, 0xf6f5, 0x51bf, 0x1, 0x0);
        gbc.writeMem(0xcc02, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x67c9);
        EXPECT(gbc.pc(), 0xcc04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc02), 0xcb);
        EXPECT(gbc.readMem(0xcc03), 0x12);
        // CB 12 03DC
        gbc.setState(0x8b93, 0x2368, 0x7c50, 0xaf6d, 0xc82, 0x8253, 0x0, 0x1);
        gbc.writeMem(0x8b93, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x2368);
        EXPECT(gbc.pc(), 0x8b95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b93), 0xcb);
        EXPECT(gbc.readMem(0x8b94), 0x12);
        // CB 12 03DD
        gbc.setState(0x5500, 0xc7c7, 0x3360, 0x92f5, 0x5762, 0xeaa2, 0x0, 0x1);
        gbc.writeMem(0x5500, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xc7c7);
        EXPECT(gbc.pc(), 0x5502);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 03DE
        gbc.setState(0x97c1, 0x2758, 0x60f0, 0x4a1a, 0xa338, 0xca70, 0x1, 0x1);
        gbc.writeMem(0x97c1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x2758);
        EXPECT(gbc.pc(), 0x97c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97c1), 0xcb);
        EXPECT(gbc.readMem(0x97c2), 0x12);
        // CB 12 03DF
        gbc.setState(0x8e97, 0xee0c, 0xa7b0, 0x91b5, 0xd014, 0x4b36, 0x0, 0x1);
        gbc.writeMem(0x8e97, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xee0c);
        EXPECT(gbc.pc(), 0x8e99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e97), 0xcb);
        EXPECT(gbc.readMem(0x8e98), 0x12);
        // CB 12 03E0
        gbc.setState(0xd7c1, 0xbc17, 0x25f0, 0xf571, 0xbf97, 0xb1b6, 0x1, 0x0);
        gbc.writeMem(0xd7c1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xbc17);
        EXPECT(gbc.pc(), 0xd7c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7c1), 0xcb);
        EXPECT(gbc.readMem(0xd7c2), 0x12);
        // CB 12 03E2
        gbc.setState(0xa815, 0xa1a6, 0xef40, 0x56f0, 0xbbf4, 0x89e3, 0x0, 0x1);
        gbc.writeMem(0xa815, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa1a6);
        EXPECT(gbc.pc(), 0xa817);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa815), 0xcb);
        EXPECT(gbc.readMem(0xa816), 0x12);
        // CB 12 03E3
        gbc.setState(0x7dc2, 0xf9a8, 0x9d40, 0xd94a, 0x1e4e, 0x6172, 0x0, 0x0);
        gbc.writeMem(0x7dc2, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xf9a8);
        EXPECT(gbc.pc(), 0x7dc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 03E4
        gbc.setState(0x698e, 0xbc28, 0x3de0, 0x4e3c, 0x696, 0x50dc, 0x0, 0x0);
        gbc.writeMem(0x698e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xbc28);
        EXPECT(gbc.pc(), 0x6990);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 03E5
        gbc.setState(0x507e, 0xed84, 0x2510, 0xa4da, 0x3333, 0xc803, 0x0, 0x1);
        gbc.writeMem(0x507e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xed84);
        EXPECT(gbc.pc(), 0x5080);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 12 03E6
        gbc.setState(0xb347, 0xdc51, 0x93c0, 0x7843, 0x36ad, 0xa552, 0x1, 0x1);
        gbc.writeMem(0xb347, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xdc51);
        EXPECT(gbc.pc(), 0xb349);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb347), 0xcb);
        EXPECT(gbc.readMem(0xb348), 0x12);
        // CB 12 03E7
        gbc.setState(0xb6d1, 0x9419, 0x7f00, 0x5aed, 0xb9f4, 0x181c, 0x0, 0x1);
        gbc.writeMem(0xb6d1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x9419);
        EXPECT(gbc.pc(), 0xb6d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6d1), 0xcb);
        EXPECT(gbc.readMem(0xb6d2), 0x12);
    }
}
#endif
