    TEST(gbcemu, opcode_cb_6e) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 6E 0000
        gbc.setState(0x9735, 0xd874, 0xbea0, 0x69af, 0x8762, 0x5796, 0x0, 0x0);
        gbc.writeMem(0x5796, { 0xcf });
        gbc.writeMem(0x9735, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd874, gbc.sp());
        EXPECT(0x9737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9735));
        EXPECT(0x6e, gbc.readMem(0x9736));
        // CB 6E 0001
        gbc.setState(0xa1d2, 0xc5d6, 0x2f30, 0xf361, 0x1887, 0x6e22, 0x0, 0x0);
        gbc.writeMem(0x6e22, { 0x11 });
        gbc.writeMem(0xa1d2, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc5d6, gbc.sp());
        EXPECT(0xa1d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1d2));
        EXPECT(0x6e, gbc.readMem(0xa1d3));
        // CB 6E 0002
        gbc.setState(0x9745, 0xcc61, 0xf7f0, 0x1ffe, 0x7f76, 0xad40, 0x1, 0x1);
        gbc.writeMem(0x9745, { 0xcb, 0x6e });
        gbc.writeMem(0xad40, { 0x93 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xcc61, gbc.sp());
        EXPECT(0x9747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9745));
        EXPECT(0x6e, gbc.readMem(0x9746));
        EXPECT(0x93, gbc.readMem(0xad40));
        // CB 6E 0003
        gbc.setState(0xe930, 0x274c, 0x88e0, 0xdbba, 0x6ba, 0xe255, 0x0, 0x0);
        gbc.writeMem(0xe255, { 0x6e });
        gbc.writeMem(0xe930, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x274c, gbc.sp());
        EXPECT(0xe932, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xe255));
        EXPECT(0xcb, gbc.readMem(0xe930));
        EXPECT(0x6e, gbc.readMem(0xe931));
        // CB 6E 0004
        gbc.setState(0xbada, 0xeac7, 0xa70, 0xf015, 0xd255, 0x68a, 0x0, 0x1);
        gbc.writeMem(0x68a, { 0x64 });
        gbc.writeMem(0xbada, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xeac7, gbc.sp());
        EXPECT(0xbadc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbada));
        EXPECT(0x6e, gbc.readMem(0xbadb));
        // CB 6E 0005
        gbc.setState(0xe213, 0x6af8, 0xd500, 0x11fb, 0x98d9, 0xbabf, 0x0, 0x0);
        gbc.writeMem(0xbabf, { 0xe2 });
        gbc.writeMem(0xe213, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6af8, gbc.sp());
        EXPECT(0xe215, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xbabf));
        EXPECT(0xcb, gbc.readMem(0xe213));
        EXPECT(0x6e, gbc.readMem(0xe214));
        // CB 6E 0006
        gbc.setState(0x8939, 0xb4fd, 0x4f0, 0x5a, 0xb448, 0xce11, 0x1, 0x1);
        gbc.writeMem(0x8939, { 0xcb, 0x6e });
        gbc.writeMem(0xce11, { 0xe });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb4fd, gbc.sp());
        EXPECT(0x893b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8939));
        EXPECT(0x6e, gbc.readMem(0x893a));
        EXPECT(0xe, gbc.readMem(0xce11));
        // CB 6E 0007
        gbc.setState(0xe6, 0x9495, 0xabd0, 0x5378, 0x6ffe, 0xb17e, 0x1, 0x1);
        gbc.writeMem(0xe6, { 0xcb, 0x6e });
        gbc.writeMem(0xb17e, { 0xd5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9495, gbc.sp());
        EXPECT(0xe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xb17e));
        // CB 6E 0008
        gbc.setState(0xacfb, 0xd2c3, 0xc0a0, 0xaeda, 0x5ca0, 0x8dea, 0x0, 0x1);
        gbc.writeMem(0x8dea, { 0x22 });
        gbc.writeMem(0xacfb, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd2c3, gbc.sp());
        EXPECT(0xacfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x8dea));
        EXPECT(0xcb, gbc.readMem(0xacfb));
        EXPECT(0x6e, gbc.readMem(0xacfc));
        // CB 6E 0009
        gbc.setState(0xbb0e, 0x1a24, 0xf6e0, 0x3d21, 0x9ecb, 0x378, 0x0, 0x0);
        gbc.writeMem(0x378, { 0x7b });
        gbc.writeMem(0xbb0e, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1a24, gbc.sp());
        EXPECT(0xbb10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb0e));
        EXPECT(0x6e, gbc.readMem(0xbb0f));
        // CB 6E 000A
        gbc.setState(0x1de, 0xebc1, 0x9aa0, 0xe969, 0xa4a0, 0xb7d4, 0x0, 0x1);
        gbc.writeMem(0x1de, { 0xcb, 0x6e });
        gbc.writeMem(0xb7d4, { 0xb2 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xebc1, gbc.sp());
        EXPECT(0x1e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb7d4));
        // CB 6E 000B
        gbc.setState(0xb9f2, 0x5a99, 0x9740, 0x7445, 0xd66e, 0xffd5, 0x0, 0x0);
        gbc.writeMem(0xb9f2, { 0xcb, 0x6e });
        gbc.writeMem(0xffd5, { 0xc });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5a99, gbc.sp());
        EXPECT(0xb9f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9f2));
        EXPECT(0x6e, gbc.readMem(0xb9f3));
        EXPECT(0xc, gbc.readMem(0xffd5));
        // CB 6E 000C
        gbc.setState(0x4104, 0x258d, 0xd330, 0x6e5b, 0xec8a, 0x5c9c, 0x0, 0x0);
        gbc.writeMem(0x4104, { 0xcb, 0x6e });
        gbc.writeMem(0x5c9c, { 0xb });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x258d, gbc.sp());
        EXPECT(0x4106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 000D
        gbc.setState(0xb888, 0xd033, 0x26f0, 0x8a49, 0xed95, 0x6427, 0x1, 0x0);
        gbc.writeMem(0x6427, { 0x19 });
        gbc.writeMem(0xb888, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd033, gbc.sp());
        EXPECT(0xb88a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb888));
        EXPECT(0x6e, gbc.readMem(0xb889));
        // CB 6E 000F
        gbc.setState(0xd24, 0x51a0, 0xc9d0, 0x3b47, 0xb3d7, 0x3c1b, 0x0, 0x1);
        gbc.writeMem(0xd24, { 0xcb, 0x6e });
        gbc.writeMem(0x3c1b, { 0x73 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x51a0, gbc.sp());
        EXPECT(0xd26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0010
        gbc.setState(0xee89, 0xda75, 0x5360, 0x51fa, 0x8fff, 0xa068, 0x1, 0x0);
        gbc.writeMem(0xa068, { 0x44 });
        gbc.writeMem(0xee89, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xda75, gbc.sp());
        EXPECT(0xee8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa068));
        EXPECT(0xcb, gbc.readMem(0xee89));
        EXPECT(0x6e, gbc.readMem(0xee8a));
        // CB 6E 0011
        gbc.setState(0x170f, 0x8891, 0x8b20, 0x383d, 0xaadf, 0xa611, 0x0, 0x0);
        gbc.writeMem(0x170f, { 0xcb, 0x6e });
        gbc.writeMem(0xa611, { 0xd });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8891, gbc.sp());
        EXPECT(0x1711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xa611));
        // CB 6E 0012
        gbc.setState(0xa3cf, 0x7853, 0xb0b0, 0x631, 0xdc9d, 0x1a5b, 0x0, 0x0);
        gbc.writeMem(0x1a5b, { 0x3b });
        gbc.writeMem(0xa3cf, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7853, gbc.sp());
        EXPECT(0xa3d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3cf));
        EXPECT(0x6e, gbc.readMem(0xa3d0));
        // CB 6E 0013
        gbc.setState(0xc983, 0xbb07, 0x67b0, 0x3b8c, 0x64fe, 0x39d3, 0x0, 0x1);
        gbc.writeMem(0x39d3, { 0x6f });
        gbc.writeMem(0xc983, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xbb07, gbc.sp());
        EXPECT(0xc985, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc983));
        EXPECT(0x6e, gbc.readMem(0xc984));
        // CB 6E 0014
        gbc.setState(0x11ed, 0x884d, 0xd0a0, 0x4cc8, 0x59a6, 0xfe0b, 0x0, 0x1);
        gbc.writeMem(0x11ed, { 0xcb, 0x6e });
        gbc.writeMem(0xfe0b, { 0xcf });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x884d, gbc.sp());
        EXPECT(0x11ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xfe0b));
        // CB 6E 0015
        gbc.setState(0xe0a8, 0xdc19, 0x4f40, 0x87d6, 0x994, 0xa734, 0x1, 0x1);
        gbc.writeMem(0xa734, { 0x38 });
        gbc.writeMem(0xe0a8, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xdc19, gbc.sp());
        EXPECT(0xe0aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa734));
        EXPECT(0xcb, gbc.readMem(0xe0a8));
        EXPECT(0x6e, gbc.readMem(0xe0a9));
        // CB 6E 0016
        gbc.setState(0x67b5, 0x46b4, 0xacd0, 0xb11f, 0x180d, 0x3f97, 0x0, 0x1);
        gbc.writeMem(0x3f97, { 0x73 });
        gbc.writeMem(0x67b5, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x46b4, gbc.sp());
        EXPECT(0x67b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0017
        gbc.setState(0x3f88, 0x6384, 0x50b0, 0x95c8, 0x98d4, 0xf036, 0x0, 0x0);
        gbc.writeMem(0x3f88, { 0xcb, 0x6e });
        gbc.writeMem(0xf036, { 0xb });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6384, gbc.sp());
        EXPECT(0x3f8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xf036));
        // CB 6E 0018
        gbc.setState(0x6880, 0x28c3, 0xbd10, 0xea41, 0xf54b, 0x18b7, 0x1, 0x1);
        gbc.writeMem(0x18b7, { 0x60 });
        gbc.writeMem(0x6880, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x28c3, gbc.sp());
        EXPECT(0x6882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0019
        gbc.setState(0xee2, 0xe7b9, 0xe8f0, 0xf6f7, 0x1dcc, 0xaaf2, 0x0, 0x0);
        gbc.writeMem(0xee2, { 0xcb, 0x6e });
        gbc.writeMem(0xaaf2, { 0x31 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe7b9, gbc.sp());
        EXPECT(0xee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xaaf2));
        // CB 6E 001A
        gbc.setState(0x714f, 0x808b, 0xd0a0, 0x7ba2, 0x421e, 0x5f7f, 0x0, 0x0);
        gbc.writeMem(0x5f7f, { 0x59 });
        gbc.writeMem(0x714f, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x808b, gbc.sp());
        EXPECT(0x7151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 001B
        gbc.setState(0xbd64, 0x60b1, 0x8b20, 0x148, 0x4d61, 0x4b3b, 0x1, 0x1);
        gbc.writeMem(0x4b3b, { 0x35 });
        gbc.writeMem(0xbd64, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x60b1, gbc.sp());
        EXPECT(0xbd66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd64));
        EXPECT(0x6e, gbc.readMem(0xbd65));
        // CB 6E 001C
        gbc.setState(0x7037, 0x29d6, 0x7c90, 0xfc00, 0x29ec, 0x54, 0x0, 0x1);
        gbc.writeMem(0x54, { 0xf1 });
        gbc.writeMem(0x7037, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x29d6, gbc.sp());
        EXPECT(0x7039, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 001D
        gbc.setState(0x3b91, 0xacc6, 0x21b0, 0x96, 0xbe57, 0x823b, 0x1, 0x0);
        gbc.writeMem(0x3b91, { 0xcb, 0x6e });
        gbc.writeMem(0x823b, { 0xd9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xacc6, gbc.sp());
        EXPECT(0x3b93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x823b));
        // CB 6E 001E
        gbc.setState(0x851, 0xa464, 0x6ee0, 0x8c5d, 0x8f43, 0x255d, 0x0, 0x0);
        gbc.writeMem(0x851, { 0xcb, 0x6e });
        gbc.writeMem(0x255d, { 0xd8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa464, gbc.sp());
        EXPECT(0x853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 001F
        gbc.setState(0x8067, 0xd7b5, 0x9e0, 0xf73d, 0x38a8, 0x6a21, 0x1, 0x1);
        gbc.writeMem(0x6a21, { 0x14 });
        gbc.writeMem(0x8067, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd7b5, gbc.sp());
        EXPECT(0x8069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8067));
        EXPECT(0x6e, gbc.readMem(0x8068));
        // CB 6E 0020
        gbc.setState(0xc3c, 0x8e2b, 0x3150, 0xb5e8, 0x819f, 0xe7da, 0x1, 0x1);
        gbc.writeMem(0xc3c, { 0xcb, 0x6e });
        gbc.writeMem(0xe7da, { 0xa9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8e2b, gbc.sp());
        EXPECT(0xc3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xe7da));
        // CB 6E 0021
        gbc.setState(0x4411, 0x8997, 0x14b0, 0x654, 0x2751, 0xb923, 0x1, 0x0);
        gbc.writeMem(0x4411, { 0xcb, 0x6e });
        gbc.writeMem(0xb923, { 0xb });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8997, gbc.sp());
        EXPECT(0x4413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb923));
        // CB 6E 0022
        gbc.setState(0x5878, 0x457c, 0x6e40, 0xb9b3, 0x3717, 0xbeaa, 0x0, 0x1);
        gbc.writeMem(0x5878, { 0xcb, 0x6e });
        gbc.writeMem(0xbeaa, { 0x1e });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x457c, gbc.sp());
        EXPECT(0x587a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xbeaa));
        // CB 6E 0023
        gbc.setState(0x5f9f, 0x2690, 0x26a0, 0x5243, 0x4c09, 0x702d, 0x0, 0x0);
        gbc.writeMem(0x5f9f, { 0xcb, 0x6e });
        gbc.writeMem(0x702d, { 0xe1 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2690, gbc.sp());
        EXPECT(0x5fa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0024
        gbc.setState(0xe32a, 0xc970, 0x4090, 0x1467, 0x74f7, 0x8590, 0x0, 0x0);
        gbc.writeMem(0x8590, { 0x36 });
        gbc.writeMem(0xe32a, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc970, gbc.sp());
        EXPECT(0xe32c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8590));
        EXPECT(0xcb, gbc.readMem(0xe32a));
        EXPECT(0x6e, gbc.readMem(0xe32b));
        // CB 6E 0025
        gbc.setState(0xbe86, 0x52f9, 0x5ac0, 0xd1aa, 0xdda6, 0xc7de, 0x0, 0x0);
        gbc.writeMem(0xbe86, { 0xcb, 0x6e });
        gbc.writeMem(0xc7de, { 0xf7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x52f9, gbc.sp());
        EXPECT(0xbe88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe86));
        EXPECT(0x6e, gbc.readMem(0xbe87));
        EXPECT(0xf7, gbc.readMem(0xc7de));
        // CB 6E 0026
        gbc.setState(0x31f0, 0x97ec, 0x8b0, 0x1d2, 0x82e5, 0xb8b, 0x1, 0x0);
        gbc.writeMem(0xb8b, { 0xd8 });
        gbc.writeMem(0x31f0, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x97ec, gbc.sp());
        EXPECT(0x31f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0027
        gbc.setState(0xbbd5, 0xadd0, 0xa760, 0x4514, 0xd908, 0x292b, 0x0, 0x0);
        gbc.writeMem(0x292b, { 0x38 });
        gbc.writeMem(0xbbd5, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xadd0, gbc.sp());
        EXPECT(0xbbd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbd5));
        EXPECT(0x6e, gbc.readMem(0xbbd6));
        // CB 6E 0028
        gbc.setState(0x5a5, 0x76f1, 0xd7a0, 0x7818, 0xb0a1, 0x25b6, 0x0, 0x0);
        gbc.writeMem(0x5a5, { 0xcb, 0x6e });
        gbc.writeMem(0x25b6, { 0xdd });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x76f1, gbc.sp());
        EXPECT(0x5a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0029
        gbc.setState(0x347c, 0xaebb, 0x17e0, 0xa6d6, 0x9b7a, 0x4ab8, 0x0, 0x0);
        gbc.writeMem(0x347c, { 0xcb, 0x6e });
        gbc.writeMem(0x4ab8, { 0x18 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xaebb, gbc.sp());
        EXPECT(0x347e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 002A
        gbc.setState(0xa7b5, 0x6e78, 0xaf60, 0x7629, 0x439c, 0xd068, 0x1, 0x1);
        gbc.writeMem(0xa7b5, { 0xcb, 0x6e });
        gbc.writeMem(0xd068, { 0xdc });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6e78, gbc.sp());
        EXPECT(0xa7b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7b5));
        EXPECT(0x6e, gbc.readMem(0xa7b6));
        EXPECT(0xdc, gbc.readMem(0xd068));
        // CB 6E 002B
        gbc.setState(0x481e, 0xfd33, 0x49b0, 0xe067, 0xe07a, 0x5841, 0x0, 0x1);
        gbc.writeMem(0x481e, { 0xcb, 0x6e });
        gbc.writeMem(0x5841, { 0xc5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xfd33, gbc.sp());
        EXPECT(0x4820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 002C
        gbc.setState(0xda7a, 0x7a4d, 0xece0, 0x6dd6, 0x9ddb, 0x713, 0x1, 0x1);
        gbc.writeMem(0x713, { 0x98 });
        gbc.writeMem(0xda7a, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7a4d, gbc.sp());
        EXPECT(0xda7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda7a));
        EXPECT(0x6e, gbc.readMem(0xda7b));
        // CB 6E 002D
        gbc.setState(0xcb0d, 0x98c, 0x7e70, 0xddf5, 0x4ee8, 0x8e92, 0x0, 0x0);
        gbc.writeMem(0x8e92, { 0x1d });
        gbc.writeMem(0xcb0d, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x98c, gbc.sp());
        EXPECT(0xcb0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8e92));
        EXPECT(0xcb, gbc.readMem(0xcb0d));
        EXPECT(0x6e, gbc.readMem(0xcb0e));
        // CB 6E 002F
        gbc.setState(0x719f, 0x5855, 0xf150, 0xf448, 0xbc0c, 0xc7f6, 0x0, 0x1);
        gbc.writeMem(0x719f, { 0xcb, 0x6e });
        gbc.writeMem(0xc7f6, { 0x70 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5855, gbc.sp());
        EXPECT(0x71a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xc7f6));
        // CB 6E 0030
        gbc.setState(0x653a, 0xb3f1, 0x2fd0, 0x5b1, 0x16d0, 0x6f8d, 0x0, 0x0);
        gbc.writeMem(0x653a, { 0xcb, 0x6e });
        gbc.writeMem(0x6f8d, { 0x88 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb3f1, gbc.sp());
        EXPECT(0x653c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0031
        gbc.setState(0x42dc, 0x89f5, 0x7860, 0xff74, 0x5e2f, 0x7bba, 0x0, 0x1);
        gbc.writeMem(0x42dc, { 0xcb, 0x6e });
        gbc.writeMem(0x7bba, { 0x7e });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x89f5, gbc.sp());
        EXPECT(0x42de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0032
        gbc.setState(0x26, 0xfe4, 0x7e80, 0x6ee4, 0x986b, 0x6f34, 0x0, 0x1);
        gbc.writeMem(0x26, { 0xcb, 0x6e });
        gbc.writeMem(0x6f34, { 0x15 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xfe4, gbc.sp());
        EXPECT(0x28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0033
        gbc.setState(0x7131, 0xebf1, 0xb6e0, 0x671f, 0x3b4e, 0x843a, 0x1, 0x1);
        gbc.writeMem(0x7131, { 0xcb, 0x6e });
        gbc.writeMem(0x843a, { 0xbe });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xebf1, gbc.sp());
        EXPECT(0x7133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0x843a));
        // CB 6E 0034
        gbc.setState(0x78d7, 0x4e19, 0x8650, 0x32e8, 0x9f67, 0xb515, 0x1, 0x0);
        gbc.writeMem(0x78d7, { 0xcb, 0x6e });
        gbc.writeMem(0xb515, { 0xdd });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4e19, gbc.sp());
        EXPECT(0x78d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xb515));
        // CB 6E 0037
        gbc.setState(0xbf7e, 0x2d5, 0xa880, 0x7fc1, 0x3ca, 0xb8e, 0x1, 0x1);
        gbc.writeMem(0xb8e, { 0x55 });
        gbc.writeMem(0xbf7e, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2d5, gbc.sp());
        EXPECT(0xbf80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf7e));
        EXPECT(0x6e, gbc.readMem(0xbf7f));
        // CB 6E 0038
        gbc.setState(0xc868, 0x24c8, 0x7d0, 0xce34, 0x2e31, 0xe52c, 0x0, 0x0);
        gbc.writeMem(0xc868, { 0xcb, 0x6e });
        gbc.writeMem(0xe52c, { 0x2b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x24c8, gbc.sp());
        EXPECT(0xc86a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc868));
        EXPECT(0x6e, gbc.readMem(0xc869));
        EXPECT(0x2b, gbc.readMem(0xe52c));
        // CB 6E 0039
        gbc.setState(0x620, 0xa093, 0x2190, 0xffce, 0x4dca, 0xc3e3, 0x1, 0x1);
        gbc.writeMem(0x620, { 0xcb, 0x6e });
        gbc.writeMem(0xc3e3, { 0x3d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa093, gbc.sp());
        EXPECT(0x622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xc3e3));
        // CB 6E 003A
        gbc.setState(0x4fa8, 0xbe46, 0x5b30, 0x8aa6, 0x2456, 0xf40c, 0x0, 0x1);
        gbc.writeMem(0x4fa8, { 0xcb, 0x6e });
        gbc.writeMem(0xf40c, { 0xd5 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xbe46, gbc.sp());
        EXPECT(0x4faa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xf40c));
        // CB 6E 003B
        gbc.setState(0x3878, 0x23b3, 0x1020, 0xcb72, 0xa53a, 0xa6fb, 0x0, 0x0);
        gbc.writeMem(0x3878, { 0xcb, 0x6e });
        gbc.writeMem(0xa6fb, { 0x51 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x23b3, gbc.sp());
        EXPECT(0x387a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa6fb));
        // CB 6E 003C
        gbc.setState(0x45c6, 0xfa6, 0xeb20, 0x6157, 0xd800, 0xa245, 0x1, 0x1);
        gbc.writeMem(0x45c6, { 0xcb, 0x6e });
        gbc.writeMem(0xa245, { 0x7c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xfa6, gbc.sp());
        EXPECT(0x45c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xa245));
        // CB 6E 003E
        gbc.setState(0x75f5, 0xef7, 0x5800, 0xaaa, 0x881e, 0xb185, 0x0, 0x1);
        gbc.writeMem(0x75f5, { 0xcb, 0x6e });
        gbc.writeMem(0xb185, { 0x2b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xef7, gbc.sp());
        EXPECT(0x75f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb185));
        // CB 6E 003F
        gbc.setState(0xae10, 0x910c, 0xf310, 0xeff4, 0xa690, 0x33ba, 0x0, 0x1);
        gbc.writeMem(0x33ba, { 0xf8 });
        gbc.writeMem(0xae10, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x910c, gbc.sp());
        EXPECT(0xae12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae10));
        EXPECT(0x6e, gbc.readMem(0xae11));
        // CB 6E 0040
        gbc.setState(0x2724, 0xa99d, 0x8760, 0xe742, 0x5e64, 0x93f1, 0x0, 0x1);
        gbc.writeMem(0x2724, { 0xcb, 0x6e });
        gbc.writeMem(0x93f1, { 0x3c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa99d, gbc.sp());
        EXPECT(0x2726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x93f1));
        // CB 6E 0041
        gbc.setState(0x9ef3, 0x57d, 0x9180, 0x8126, 0x56c9, 0x1734, 0x0, 0x1);
        gbc.writeMem(0x1734, { 0xd1 });
        gbc.writeMem(0x9ef3, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x57d, gbc.sp());
        EXPECT(0x9ef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ef3));
        EXPECT(0x6e, gbc.readMem(0x9ef4));
        // CB 6E 0042
        gbc.setState(0xc8c8, 0xa552, 0x4bd0, 0x9cf0, 0x7147, 0xc053, 0x0, 0x0);
        gbc.writeMem(0xc053, { 0x28 });
        gbc.writeMem(0xc8c8, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa552, gbc.sp());
        EXPECT(0xc8ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xc053));
        EXPECT(0xcb, gbc.readMem(0xc8c8));
        EXPECT(0x6e, gbc.readMem(0xc8c9));
        // CB 6E 0043
        gbc.setState(0x5e2, 0x3985, 0xa340, 0xd5cf, 0x8aa8, 0x8ceb, 0x0, 0x1);
        gbc.writeMem(0x5e2, { 0xcb, 0x6e });
        gbc.writeMem(0x8ceb, { 0xc9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3985, gbc.sp());
        EXPECT(0x5e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8ceb));
        // CB 6E 0044
        gbc.setState(0x2007, 0x9073, 0x4d20, 0x734a, 0x3db, 0x670a, 0x0, 0x1);
        gbc.writeMem(0x2007, { 0xcb, 0x6e });
        gbc.writeMem(0x670a, { 0xfa });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9073, gbc.sp());
        EXPECT(0x2009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0045
        gbc.setState(0x3555, 0x5306, 0x2000, 0xda8, 0xa691, 0xe9e5, 0x1, 0x1);
        gbc.writeMem(0x3555, { 0xcb, 0x6e });
        gbc.writeMem(0xe9e5, { 0x73 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5306, gbc.sp());
        EXPECT(0x3557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xe9e5));
        // CB 6E 0046
        gbc.setState(0x7aa5, 0x85fc, 0xdaf0, 0xe3c1, 0x59ed, 0xefeb, 0x0, 0x1);
        gbc.writeMem(0x7aa5, { 0xcb, 0x6e });
        gbc.writeMem(0xefeb, { 0x39 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x85fc, gbc.sp());
        EXPECT(0x7aa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xefeb));
        // CB 6E 0047
        gbc.setState(0x9135, 0x6d7c, 0xdf10, 0x32aa, 0x960f, 0x69a1, 0x1, 0x0);
        gbc.writeMem(0x69a1, { 0x45 });
        gbc.writeMem(0x9135, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6d7c, gbc.sp());
        EXPECT(0x9137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9135));
        EXPECT(0x6e, gbc.readMem(0x9136));
        // CB 6E 0048
        gbc.setState(0x7c8b, 0xc758, 0x55d0, 0xb6bd, 0xb0a, 0xb4e, 0x0, 0x1);
        gbc.writeMem(0xb4e, { 0x89 });
        gbc.writeMem(0x7c8b, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc758, gbc.sp());
        EXPECT(0x7c8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0049
        gbc.setState(0x71c9, 0xbd5a, 0x64c0, 0xa09, 0xf027, 0x8c9f, 0x0, 0x1);
        gbc.writeMem(0x71c9, { 0xcb, 0x6e });
        gbc.writeMem(0x8c9f, { 0xed });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xbd5a, gbc.sp());
        EXPECT(0x71cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x8c9f));
        // CB 6E 004A
        gbc.setState(0x6312, 0x7a54, 0x2df0, 0x9ecc, 0xd585, 0xb6c8, 0x1, 0x1);
        gbc.writeMem(0x6312, { 0xcb, 0x6e });
        gbc.writeMem(0xb6c8, { 0x2e });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7a54, gbc.sp());
        EXPECT(0x6314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb6c8));
        // CB 6E 004B
        gbc.setState(0x5d71, 0xaf3c, 0xfc30, 0x1495, 0xc2b5, 0x3547, 0x0, 0x1);
        gbc.writeMem(0x3547, { 0x27 });
        gbc.writeMem(0x5d71, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xaf3c, gbc.sp());
        EXPECT(0x5d73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 004C
        gbc.setState(0xe2a9, 0xa0b6, 0xab40, 0x54c5, 0x17e5, 0x653a, 0x0, 0x1);
        gbc.writeMem(0x653a, { 0x98 });
        gbc.writeMem(0xe2a9, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa0b6, gbc.sp());
        EXPECT(0xe2ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2a9));
        EXPECT(0x6e, gbc.readMem(0xe2aa));
        // CB 6E 004D
        gbc.setState(0xd142, 0xa38d, 0x9c00, 0x47c7, 0x5bca, 0x211, 0x0, 0x1);
        gbc.writeMem(0x211, { 0xe4 });
        gbc.writeMem(0xd142, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa38d, gbc.sp());
        EXPECT(0xd144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd142));
        EXPECT(0x6e, gbc.readMem(0xd143));
        // CB 6E 004E
        gbc.setState(0x654b, 0x277c, 0x66e0, 0xc53d, 0xda27, 0x3960, 0x1, 0x0);
        gbc.writeMem(0x3960, { 0xbe });
        gbc.writeMem(0x654b, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x277c, gbc.sp());
        EXPECT(0x654d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 004F
        gbc.setState(0x1d4c, 0x278d, 0xc480, 0x45b5, 0x1874, 0x497e, 0x0, 0x1);
        gbc.writeMem(0x1d4c, { 0xcb, 0x6e });
        gbc.writeMem(0x497e, { 0x47 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x278d, gbc.sp());
        EXPECT(0x1d4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0050
        gbc.setState(0x65e5, 0x6337, 0x5fa0, 0xdca0, 0xa277, 0x3a5a, 0x1, 0x1);
        gbc.writeMem(0x3a5a, { 0x4d });
        gbc.writeMem(0x65e5, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6337, gbc.sp());
        EXPECT(0x65e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0051
        gbc.setState(0x3f20, 0x99f3, 0x25c0, 0x6ac9, 0x7b79, 0x4ce9, 0x1, 0x0);
        gbc.writeMem(0x3f20, { 0xcb, 0x6e });
        gbc.writeMem(0x4ce9, { 0x3f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x99f3, gbc.sp());
        EXPECT(0x3f22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0052
        gbc.setState(0xbeb2, 0x3ff9, 0x4ef0, 0xf774, 0xe469, 0xd8ee, 0x0, 0x1);
        gbc.writeMem(0xbeb2, { 0xcb, 0x6e });
        gbc.writeMem(0xd8ee, { 0x41 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3ff9, gbc.sp());
        EXPECT(0xbeb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeb2));
        EXPECT(0x6e, gbc.readMem(0xbeb3));
        EXPECT(0x41, gbc.readMem(0xd8ee));
        // CB 6E 0053
        gbc.setState(0xb544, 0x8638, 0x1190, 0xdfd1, 0x6edd, 0xe19b, 0x0, 0x0);
        gbc.writeMem(0xb544, { 0xcb, 0x6e });
        gbc.writeMem(0xe19b, { 0xe0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8638, gbc.sp());
        EXPECT(0xb546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb544));
        EXPECT(0x6e, gbc.readMem(0xb545));
        EXPECT(0xe0, gbc.readMem(0xe19b));
        // CB 6E 0054
        gbc.setState(0x6d5, 0x430, 0x7020, 0xea4f, 0x54fc, 0x17a0, 0x1, 0x1);
        gbc.writeMem(0x6d5, { 0xcb, 0x6e });
        gbc.writeMem(0x17a0, { 0x3a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x430, gbc.sp());
        EXPECT(0x6d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0055
        gbc.setState(0x94d4, 0xbd8d, 0xf270, 0xb358, 0xc859, 0xd1fc, 0x0, 0x0);
        gbc.writeMem(0x94d4, { 0xcb, 0x6e });
        gbc.writeMem(0xd1fc, { 0xec });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbd8d, gbc.sp());
        EXPECT(0x94d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94d4));
        EXPECT(0x6e, gbc.readMem(0x94d5));
        EXPECT(0xec, gbc.readMem(0xd1fc));
        // CB 6E 0056
        gbc.setState(0x5cf6, 0xc2ce, 0xb260, 0x2f1d, 0x1ead, 0xb8cc, 0x1, 0x1);
        gbc.writeMem(0x5cf6, { 0xcb, 0x6e });
        gbc.writeMem(0xb8cc, { 0x63 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc2ce, gbc.sp());
        EXPECT(0x5cf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xb8cc));
        // CB 6E 0058
        gbc.setState(0x484c, 0x79b4, 0x4690, 0xbfe8, 0x8b07, 0xb032, 0x1, 0x0);
        gbc.writeMem(0x484c, { 0xcb, 0x6e });
        gbc.writeMem(0xb032, { 0x7f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x79b4, gbc.sp());
        EXPECT(0x484e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xb032));
        // CB 6E 0059
        gbc.setState(0x93b2, 0xf7fd, 0x4be0, 0x8a2a, 0xcbee, 0x3a55, 0x0, 0x1);
        gbc.writeMem(0x3a55, { 0x46 });
        gbc.writeMem(0x93b2, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf7fd, gbc.sp());
        EXPECT(0x93b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93b2));
        EXPECT(0x6e, gbc.readMem(0x93b3));
        // CB 6E 005A
        gbc.setState(0x1110, 0x6fde, 0xad10, 0xeeec, 0x271d, 0x4d22, 0x1, 0x1);
        gbc.writeMem(0x1110, { 0xcb, 0x6e });
        gbc.writeMem(0x4d22, { 0x76 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6fde, gbc.sp());
        EXPECT(0x1112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 005B
        gbc.setState(0xe31d, 0xaaa3, 0x5910, 0x21b6, 0xe519, 0x7e44, 0x0, 0x0);
        gbc.writeMem(0x7e44, { 0xb5 });
        gbc.writeMem(0xe31d, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xaaa3, gbc.sp());
        EXPECT(0xe31f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe31d));
        EXPECT(0x6e, gbc.readMem(0xe31e));
        // CB 6E 005C
        gbc.setState(0x5446, 0x8660, 0x2f50, 0xc259, 0x3518, 0x8dc3, 0x1, 0x0);
        gbc.writeMem(0x5446, { 0xcb, 0x6e });
        gbc.writeMem(0x8dc3, { 0xfe });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8660, gbc.sp());
        EXPECT(0x5448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8dc3));
        // CB 6E 005D
        gbc.setState(0x44c3, 0x2162, 0x3340, 0xfcb8, 0xedae, 0xdcbd, 0x0, 0x0);
        gbc.writeMem(0x44c3, { 0xcb, 0x6e });
        gbc.writeMem(0xdcbd, { 0x3f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2162, gbc.sp());
        EXPECT(0x44c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xdcbd));
        // CB 6E 005E
        gbc.setState(0xd05b, 0x4db7, 0x4460, 0xc7a2, 0x5b59, 0xb92c, 0x1, 0x1);
        gbc.writeMem(0xb92c, { 0xec });
        gbc.writeMem(0xd05b, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4db7, gbc.sp());
        EXPECT(0xd05d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xb92c));
        EXPECT(0xcb, gbc.readMem(0xd05b));
        EXPECT(0x6e, gbc.readMem(0xd05c));
        // CB 6E 005F
        gbc.setState(0xc1ea, 0xe111, 0xbc30, 0x8bc7, 0xce57, 0xf303, 0x1, 0x0);
        gbc.writeMem(0xc1ea, { 0xcb, 0x6e });
        gbc.writeMem(0xf303, { 0xe });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe111, gbc.sp());
        EXPECT(0xc1ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ea));
        EXPECT(0x6e, gbc.readMem(0xc1eb));
        EXPECT(0xe, gbc.readMem(0xf303));
        // CB 6E 0060
        gbc.setState(0xc6e8, 0xda28, 0x11f0, 0x8271, 0xe132, 0x388f, 0x0, 0x0);
        gbc.writeMem(0x388f, { 0x1f });
        gbc.writeMem(0xc6e8, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xda28, gbc.sp());
        EXPECT(0xc6ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e8));
        EXPECT(0x6e, gbc.readMem(0xc6e9));
        // CB 6E 0061
        gbc.setState(0xa553, 0xfb83, 0xc160, 0xa732, 0xc685, 0x76d3, 0x1, 0x1);
        gbc.writeMem(0x76d3, { 0x23 });
        gbc.writeMem(0xa553, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xfb83, gbc.sp());
        EXPECT(0xa555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa553));
        EXPECT(0x6e, gbc.readMem(0xa554));
        // CB 6E 0062
        gbc.setState(0x861, 0x1439, 0x4a0, 0x1493, 0xc636, 0xdd9f, 0x1, 0x1);
        gbc.writeMem(0x861, { 0xcb, 0x6e });
        gbc.writeMem(0xdd9f, { 0x5f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1439, gbc.sp());
        EXPECT(0x863, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xdd9f));
        // CB 6E 0063
        gbc.setState(0xbb3e, 0x3d86, 0xcb90, 0xc5b8, 0xbdf, 0x4d9d, 0x1, 0x1);
        gbc.writeMem(0x4d9d, { 0x39 });
        gbc.writeMem(0xbb3e, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3d86, gbc.sp());
        EXPECT(0xbb40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb3e));
        EXPECT(0x6e, gbc.readMem(0xbb3f));
        // CB 6E 0064
        gbc.setState(0xdfd8, 0x35cd, 0xb2d0, 0xb413, 0x98c8, 0x5b4, 0x0, 0x1);
        gbc.writeMem(0x5b4, { 0x95 });
        gbc.writeMem(0xdfd8, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x35cd, gbc.sp());
        EXPECT(0xdfda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfd8));
        EXPECT(0x6e, gbc.readMem(0xdfd9));
        // CB 6E 0065
        gbc.setState(0x6d8, 0xa58, 0xbb10, 0x5bbc, 0xf301, 0x9b7f, 0x0, 0x0);
        gbc.writeMem(0x6d8, { 0xcb, 0x6e });
        gbc.writeMem(0x9b7f, { 0xec });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa58, gbc.sp());
        EXPECT(0x6da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x9b7f));
        // CB 6E 0066
        gbc.setState(0xe878, 0x3d7a, 0x100, 0x5d0, 0x4805, 0xbba9, 0x0, 0x1);
        gbc.writeMem(0xbba9, { 0x25 });
        gbc.writeMem(0xe878, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3d7a, gbc.sp());
        EXPECT(0xe87a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xbba9));
        EXPECT(0xcb, gbc.readMem(0xe878));
        EXPECT(0x6e, gbc.readMem(0xe879));
        // CB 6E 0068
        gbc.setState(0x2727, 0x9bc0, 0x1cb0, 0x6a79, 0x76b3, 0xabf9, 0x0, 0x1);
        gbc.writeMem(0x2727, { 0xcb, 0x6e });
        gbc.writeMem(0xabf9, { 0xaf });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9bc0, gbc.sp());
        EXPECT(0x2729, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xabf9));
        // CB 6E 0069
        gbc.setState(0x72d5, 0xf363, 0x6520, 0xe4c, 0xa92, 0xb7b1, 0x0, 0x0);
        gbc.writeMem(0x72d5, { 0xcb, 0x6e });
        gbc.writeMem(0xb7b1, { 0xde });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf363, gbc.sp());
        EXPECT(0x72d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xb7b1));
        // CB 6E 006A
        gbc.setState(0x8642, 0xfde5, 0x5d30, 0xa99f, 0xb3ea, 0xc867, 0x1, 0x0);
        gbc.writeMem(0x8642, { 0xcb, 0x6e });
        gbc.writeMem(0xc867, { 0x37 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xfde5, gbc.sp());
        EXPECT(0x8644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8642));
        EXPECT(0x6e, gbc.readMem(0x8643));
        EXPECT(0x37, gbc.readMem(0xc867));
        // CB 6E 006B
        gbc.setState(0x42c5, 0x2ab2, 0xc830, 0xf8d6, 0x5124, 0x3986, 0x1, 0x0);
        gbc.writeMem(0x3986, { 0x27 });
        gbc.writeMem(0x42c5, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2ab2, gbc.sp());
        EXPECT(0x42c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 006C
        gbc.setState(0xdb71, 0x751, 0x5aa0, 0x189a, 0x25e7, 0x6254, 0x0, 0x1);
        gbc.writeMem(0x6254, { 0xca });
        gbc.writeMem(0xdb71, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x751, gbc.sp());
        EXPECT(0xdb73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb71));
        EXPECT(0x6e, gbc.readMem(0xdb72));
        // CB 6E 006D
        gbc.setState(0x423c, 0x5a69, 0xa4f0, 0xdcaf, 0xdabd, 0x28d5, 0x1, 0x0);
        gbc.writeMem(0x28d5, { 0xc3 });
        gbc.writeMem(0x423c, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5a69, gbc.sp());
        EXPECT(0x423e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 006E
        gbc.setState(0x3c7, 0x2f9b, 0x1880, 0xb35c, 0xbaf3, 0x7a94, 0x1, 0x1);
        gbc.writeMem(0x3c7, { 0xcb, 0x6e });
        gbc.writeMem(0x7a94, { 0xc2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2f9b, gbc.sp());
        EXPECT(0x3c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 006F
        gbc.setState(0x4b61, 0xfffc, 0x6f50, 0x5205, 0xe27c, 0x514c, 0x1, 0x0);
        gbc.writeMem(0x4b61, { 0xcb, 0x6e });
        gbc.writeMem(0x514c, { 0x2c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xfffc, gbc.sp());
        EXPECT(0x4b63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0070
        gbc.setState(0xe8e6, 0x3917, 0x5530, 0xbbcf, 0x74d, 0x3d61, 0x1, 0x0);
        gbc.writeMem(0x3d61, { 0x77 });
        gbc.writeMem(0xe8e6, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3917, gbc.sp());
        EXPECT(0xe8e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8e6));
        EXPECT(0x6e, gbc.readMem(0xe8e7));
        // CB 6E 0071
        gbc.setState(0xc573, 0x8533, 0x9a60, 0xfef8, 0x6040, 0xef85, 0x1, 0x0);
        gbc.writeMem(0xc573, { 0xcb, 0x6e });
        gbc.writeMem(0xef85, { 0x4 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8533, gbc.sp());
        EXPECT(0xc575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc573));
        EXPECT(0x6e, gbc.readMem(0xc574));
        EXPECT(0x4, gbc.readMem(0xef85));
        // CB 6E 0072
        gbc.setState(0xd909, 0x17c1, 0x5e60, 0x1250, 0xa680, 0x135d, 0x1, 0x0);
        gbc.writeMem(0x135d, { 0xde });
        gbc.writeMem(0xd909, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x17c1, gbc.sp());
        EXPECT(0xd90b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd909));
        EXPECT(0x6e, gbc.readMem(0xd90a));
        // CB 6E 0073
        gbc.setState(0x7278, 0x41cc, 0x3880, 0x5a59, 0xde9e, 0x753a, 0x1, 0x1);
        gbc.writeMem(0x7278, { 0xcb, 0x6e });
        gbc.writeMem(0x753a, { 0xdc });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x41cc, gbc.sp());
        EXPECT(0x727a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0074
        gbc.setState(0xd6bc, 0x789d, 0xbd50, 0x2071, 0x302a, 0x1e50, 0x1, 0x1);
        gbc.writeMem(0x1e50, { 0x24 });
        gbc.writeMem(0xd6bc, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x789d, gbc.sp());
        EXPECT(0xd6be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6bc));
        EXPECT(0x6e, gbc.readMem(0xd6bd));
        // CB 6E 0075
        gbc.setState(0x8492, 0x7c4e, 0xdaa0, 0xef05, 0xefd3, 0xe665, 0x1, 0x1);
        gbc.writeMem(0x8492, { 0xcb, 0x6e });
        gbc.writeMem(0xe665, { 0x74 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7c4e, gbc.sp());
        EXPECT(0x8494, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8492));
        EXPECT(0x6e, gbc.readMem(0x8493));
        EXPECT(0x74, gbc.readMem(0xe665));
        // CB 6E 0076
        gbc.setState(0xa59e, 0x3eb4, 0xcd20, 0xd219, 0xfe08, 0xd07e, 0x0, 0x1);
        gbc.writeMem(0xa59e, { 0xcb, 0x6e });
        gbc.writeMem(0xd07e, { 0x52 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3eb4, gbc.sp());
        EXPECT(0xa5a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa59e));
        EXPECT(0x6e, gbc.readMem(0xa59f));
        EXPECT(0x52, gbc.readMem(0xd07e));
        // CB 6E 0077
        gbc.setState(0x7266, 0x2b0b, 0xd600, 0x6480, 0x5785, 0x4f6, 0x0, 0x0);
        gbc.writeMem(0x4f6, { 0x31 });
        gbc.writeMem(0x7266, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2b0b, gbc.sp());
        EXPECT(0x7268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0078
        gbc.setState(0x51d3, 0x437d, 0x3ac0, 0x5f7b, 0x66e9, 0x9f6, 0x0, 0x1);
        gbc.writeMem(0x9f6, { 0xc9 });
        gbc.writeMem(0x51d3, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x437d, gbc.sp());
        EXPECT(0x51d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0079
        gbc.setState(0x399c, 0x29d7, 0xf1a0, 0x28ae, 0x704d, 0x9b71, 0x1, 0x1);
        gbc.writeMem(0x399c, { 0xcb, 0x6e });
        gbc.writeMem(0x9b71, { 0x30 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x29d7, gbc.sp());
        EXPECT(0x399e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x9b71));
        // CB 6E 007A
        gbc.setState(0xf8, 0x8e39, 0xe520, 0xa945, 0xab98, 0x1f56, 0x1, 0x0);
        gbc.writeMem(0xf8, { 0xcb, 0x6e });
        gbc.writeMem(0x1f56, { 0xd8 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8e39, gbc.sp());
        EXPECT(0xfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 007B
        gbc.setState(0x305a, 0x3604, 0x32b0, 0x754d, 0xd8ac, 0x492b, 0x1, 0x0);
        gbc.writeMem(0x305a, { 0xcb, 0x6e });
        gbc.writeMem(0x492b, { 0x4e });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3604, gbc.sp());
        EXPECT(0x305c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 007C
        gbc.setState(0x2f5, 0x484f, 0xb5f0, 0xd13, 0x680d, 0xd32b, 0x0, 0x0);
        gbc.writeMem(0x2f5, { 0xcb, 0x6e });
        gbc.writeMem(0xd32b, { 0x71 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x484f, gbc.sp());
        EXPECT(0x2f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xd32b));
        // CB 6E 007D
        gbc.setState(0x7269, 0x75c4, 0x72a0, 0x636f, 0x22a6, 0x175a, 0x0, 0x0);
        gbc.writeMem(0x175a, { 0x35 });
        gbc.writeMem(0x7269, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x75c4, gbc.sp());
        EXPECT(0x726b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 007E
        gbc.setState(0x7b7b, 0x7ccc, 0x3f30, 0xa9ae, 0x671c, 0x7977, 0x0, 0x1);
        gbc.writeMem(0x7977, { 0xcc });
        gbc.writeMem(0x7b7b, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7ccc, gbc.sp());
        EXPECT(0x7b7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 007F
        gbc.setState(0xbc9f, 0x7712, 0x5980, 0xc27b, 0xa35d, 0x3f53, 0x1, 0x0);
        gbc.writeMem(0x3f53, { 0xc0 });
        gbc.writeMem(0xbc9f, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7712, gbc.sp());
        EXPECT(0xbca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc9f));
        EXPECT(0x6e, gbc.readMem(0xbca0));
        // CB 6E 0080
        gbc.setState(0x670d, 0x452e, 0x28d0, 0x4ab6, 0x23ef, 0x5f16, 0x1, 0x0);
        gbc.writeMem(0x5f16, { 0x5 });
        gbc.writeMem(0x670d, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x452e, gbc.sp());
        EXPECT(0x670f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0081
        gbc.setState(0x6314, 0xbe08, 0x47b0, 0x46ad, 0xd17b, 0xa54d, 0x1, 0x0);
        gbc.writeMem(0x6314, { 0xcb, 0x6e });
        gbc.writeMem(0xa54d, { 0xd3 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xbe08, gbc.sp());
        EXPECT(0x6316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xa54d));
        // CB 6E 0082
        gbc.setState(0x2e67, 0x4a8d, 0xf0d0, 0x2d13, 0x5f80, 0xc459, 0x1, 0x1);
        gbc.writeMem(0x2e67, { 0xcb, 0x6e });
        gbc.writeMem(0xc459, { 0xd6 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4a8d, gbc.sp());
        EXPECT(0x2e69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc459));
        // CB 6E 0083
        gbc.setState(0xc67, 0xceb, 0xf490, 0x1c65, 0xbc9c, 0xb04f, 0x1, 0x0);
        gbc.writeMem(0xc67, { 0xcb, 0x6e });
        gbc.writeMem(0xb04f, { 0x57 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xceb, gbc.sp());
        EXPECT(0xc69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb04f));
        // CB 6E 0084
        gbc.setState(0x6da8, 0x7463, 0xf6e0, 0x702d, 0x55f0, 0x3f00, 0x1, 0x1);
        gbc.writeMem(0x3f00, { 0x5 });
        gbc.writeMem(0x6da8, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7463, gbc.sp());
        EXPECT(0x6daa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0085
        gbc.setState(0x58c6, 0xa78a, 0x7700, 0x99eb, 0xd8df, 0xad3, 0x0, 0x0);
        gbc.writeMem(0xad3, { 0xe5 });
        gbc.writeMem(0x58c6, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa78a, gbc.sp());
        EXPECT(0x58c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0086
        gbc.setState(0xae23, 0x2f6a, 0xcfb0, 0x13e1, 0x336e, 0x4d70, 0x0, 0x1);
        gbc.writeMem(0x4d70, { 0x24 });
        gbc.writeMem(0xae23, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2f6a, gbc.sp());
        EXPECT(0xae25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae23));
        EXPECT(0x6e, gbc.readMem(0xae24));
        // CB 6E 0087
        gbc.setState(0xc8e6, 0xef97, 0x61d0, 0xd77e, 0x706b, 0x7a55, 0x1, 0x0);
        gbc.writeMem(0x7a55, { 0xef });
        gbc.writeMem(0xc8e6, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xef97, gbc.sp());
        EXPECT(0xc8e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8e6));
        EXPECT(0x6e, gbc.readMem(0xc8e7));
        // CB 6E 0088
        gbc.setState(0xe800, 0x8b5f, 0x96a0, 0xfa6d, 0xbff1, 0x665a, 0x0, 0x1);
        gbc.writeMem(0x665a, { 0x7c });
        gbc.writeMem(0xe800, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8b5f, gbc.sp());
        EXPECT(0xe802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe800));
        EXPECT(0x6e, gbc.readMem(0xe801));
        // CB 6E 0089
        gbc.setState(0xaae7, 0x52d0, 0x61a0, 0x5091, 0x33a0, 0xe7ce, 0x0, 0x0);
        gbc.writeMem(0xaae7, { 0xcb, 0x6e });
        gbc.writeMem(0xe7ce, { 0xd7 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x52d0, gbc.sp());
        EXPECT(0xaae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaae7));
        EXPECT(0x6e, gbc.readMem(0xaae8));
        EXPECT(0xd7, gbc.readMem(0xe7ce));
        // CB 6E 008A
        gbc.setState(0x1a96, 0x4275, 0x6d00, 0x7a29, 0x4a0e, 0x1a2, 0x1, 0x0);
        gbc.writeMem(0x1a2, { 0xc3 });
        gbc.writeMem(0x1a96, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4275, gbc.sp());
        EXPECT(0x1a98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 008B
        gbc.setState(0xd5ba, 0xecf, 0xb0c0, 0xa94d, 0xb05d, 0xa486, 0x1, 0x1);
        gbc.writeMem(0xa486, { 0x65 });
        gbc.writeMem(0xd5ba, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xecf, gbc.sp());
        EXPECT(0xd5bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa486));
        EXPECT(0xcb, gbc.readMem(0xd5ba));
        EXPECT(0x6e, gbc.readMem(0xd5bb));
        // CB 6E 008C
        gbc.setState(0x87e6, 0xba45, 0x690, 0xd212, 0x7ed7, 0x40b5, 0x1, 0x0);
        gbc.writeMem(0x40b5, { 0x90 });
        gbc.writeMem(0x87e6, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xba45, gbc.sp());
        EXPECT(0x87e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87e6));
        EXPECT(0x6e, gbc.readMem(0x87e7));
        // CB 6E 008D
        gbc.setState(0x18fb, 0xb1f3, 0xbaf0, 0xb31a, 0xcdf8, 0xf430, 0x0, 0x0);
        gbc.writeMem(0x18fb, { 0xcb, 0x6e });
        gbc.writeMem(0xf430, { 0x67 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb1f3, gbc.sp());
        EXPECT(0x18fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xf430));
        // CB 6E 008E
        gbc.setState(0x8f5b, 0x61a7, 0x49e0, 0xc155, 0xfed1, 0xe77b, 0x1, 0x1);
        gbc.writeMem(0x8f5b, { 0xcb, 0x6e });
        gbc.writeMem(0xe77b, { 0x9c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x61a7, gbc.sp());
        EXPECT(0x8f5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f5b));
        EXPECT(0x6e, gbc.readMem(0x8f5c));
        EXPECT(0x9c, gbc.readMem(0xe77b));
        // CB 6E 008F
        gbc.setState(0x1d75, 0xef98, 0xb000, 0xadbd, 0x492a, 0x79ce, 0x1, 0x0);
        gbc.writeMem(0x1d75, { 0xcb, 0x6e });
        gbc.writeMem(0x79ce, { 0x81 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xef98, gbc.sp());
        EXPECT(0x1d77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0090
        gbc.setState(0x25c5, 0xa13a, 0x1310, 0x2205, 0x4d5c, 0x4214, 0x0, 0x1);
        gbc.writeMem(0x25c5, { 0xcb, 0x6e });
        gbc.writeMem(0x4214, { 0x42 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa13a, gbc.sp());
        EXPECT(0x25c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0091
        gbc.setState(0x4206, 0x1baf, 0xa2d0, 0x4fc9, 0x4ba2, 0xbcc6, 0x1, 0x1);
        gbc.writeMem(0x4206, { 0xcb, 0x6e });
        gbc.writeMem(0xbcc6, { 0xfa });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1baf, gbc.sp());
        EXPECT(0x4208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xbcc6));
        // CB 6E 0092
        gbc.setState(0x5680, 0x57e, 0x7d20, 0x5e37, 0xb2f9, 0x5be8, 0x1, 0x1);
        gbc.writeMem(0x5680, { 0xcb, 0x6e });
        gbc.writeMem(0x5be8, { 0x15 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x57e, gbc.sp());
        EXPECT(0x5682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0093
        gbc.setState(0xdb0e, 0xb00e, 0x98b0, 0x6346, 0x25a8, 0x5728, 0x1, 0x1);
        gbc.writeMem(0x5728, { 0xd8 });
        gbc.writeMem(0xdb0e, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb00e, gbc.sp());
        EXPECT(0xdb10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb0e));
        EXPECT(0x6e, gbc.readMem(0xdb0f));
        // CB 6E 0094
        gbc.setState(0x3ece, 0x4d47, 0x86b0, 0xcc0c, 0xef3d, 0x1210, 0x0, 0x1);
        gbc.writeMem(0x1210, { 0xf1 });
        gbc.writeMem(0x3ece, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4d47, gbc.sp());
        EXPECT(0x3ed0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0095
        gbc.setState(0x4179, 0x68f0, 0xc920, 0x69c4, 0xd0ca, 0x61f9, 0x0, 0x1);
        gbc.writeMem(0x4179, { 0xcb, 0x6e });
        gbc.writeMem(0x61f9, { 0x6d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x68f0, gbc.sp());
        EXPECT(0x417b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0096
        gbc.setState(0xabe, 0xb7a4, 0xabe0, 0xad2d, 0x1e0e, 0xf198, 0x1, 0x1);
        gbc.writeMem(0xabe, { 0xcb, 0x6e });
        gbc.writeMem(0xf198, { 0xb9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb7a4, gbc.sp());
        EXPECT(0xac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xf198));
        // CB 6E 0097
        gbc.setState(0xe783, 0x9974, 0x46e0, 0xa0c1, 0x52f4, 0x1ff0, 0x0, 0x1);
        gbc.writeMem(0x1ff0, { 0x87 });
        gbc.writeMem(0xe783, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9974, gbc.sp());
        EXPECT(0xe785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe783));
        EXPECT(0x6e, gbc.readMem(0xe784));
        // CB 6E 0098
        gbc.setState(0x8ec2, 0x4528, 0xaf40, 0xafb9, 0xed00, 0x6fd1, 0x1, 0x1);
        gbc.writeMem(0x6fd1, { 0x7 });
        gbc.writeMem(0x8ec2, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4528, gbc.sp());
        EXPECT(0x8ec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ec2));
        EXPECT(0x6e, gbc.readMem(0x8ec3));
        // CB 6E 0099
        gbc.setState(0x4a3c, 0x6731, 0xb300, 0x7b2b, 0x6e9b, 0xa45d, 0x0, 0x0);
        gbc.writeMem(0x4a3c, { 0xcb, 0x6e });
        gbc.writeMem(0xa45d, { 0x58 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6731, gbc.sp());
        EXPECT(0x4a3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa45d));
        // CB 6E 009A
        gbc.setState(0x2003, 0xd0a6, 0x3630, 0xff6, 0x3b6d, 0x7760, 0x0, 0x1);
        gbc.writeMem(0x2003, { 0xcb, 0x6e });
        gbc.writeMem(0x7760, { 0xa7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd0a6, gbc.sp());
        EXPECT(0x2005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 009B
        gbc.setState(0xebff, 0x1910, 0x7e30, 0xe84d, 0xafd6, 0xb1ef, 0x0, 0x0);
        gbc.writeMem(0xb1ef, { 0x6e });
        gbc.writeMem(0xebff, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1910, gbc.sp());
        EXPECT(0xec01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb1ef));
        EXPECT(0xcb, gbc.readMem(0xebff));
        EXPECT(0x6e, gbc.readMem(0xec00));
        // CB 6E 009C
        gbc.setState(0xb785, 0x7a26, 0xc6d0, 0x980f, 0x7641, 0xb0c, 0x0, 0x1);
        gbc.writeMem(0xb0c, { 0x3a });
        gbc.writeMem(0xb785, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7a26, gbc.sp());
        EXPECT(0xb787, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb785));
        EXPECT(0x6e, gbc.readMem(0xb786));
        // CB 6E 009E
        gbc.setState(0x448d, 0x61a1, 0x38d0, 0xba91, 0x8551, 0x6e7d, 0x1, 0x1);
        gbc.writeMem(0x448d, { 0xcb, 0x6e });
        gbc.writeMem(0x6e7d, { 0xcd });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x61a1, gbc.sp());
        EXPECT(0x448f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 009F
        gbc.setState(0x90b6, 0x5cd7, 0x27b0, 0x12c3, 0xb423, 0x6220, 0x0, 0x1);
        gbc.writeMem(0x6220, { 0x95 });
        gbc.writeMem(0x90b6, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5cd7, gbc.sp());
        EXPECT(0x90b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90b6));
        EXPECT(0x6e, gbc.readMem(0x90b7));
        // CB 6E 00A0
        gbc.setState(0x94bc, 0x3bc2, 0x12e0, 0x4e5f, 0x84d6, 0xbdda, 0x1, 0x0);
        gbc.writeMem(0x94bc, { 0xcb, 0x6e });
        gbc.writeMem(0xbdda, { 0xa6 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3bc2, gbc.sp());
        EXPECT(0x94be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94bc));
        EXPECT(0x6e, gbc.readMem(0x94bd));
        EXPECT(0xa6, gbc.readMem(0xbdda));
        // CB 6E 00A1
        gbc.setState(0x5d29, 0x1208, 0xf230, 0xe666, 0xfd5e, 0xe7f6, 0x1, 0x0);
        gbc.writeMem(0x5d29, { 0xcb, 0x6e });
        gbc.writeMem(0xe7f6, { 0x9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1208, gbc.sp());
        EXPECT(0x5d2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe7f6));
        // CB 6E 00A2
        gbc.setState(0xa1d9, 0x899b, 0xa820, 0x2e44, 0x8f35, 0x5dce, 0x0, 0x0);
        gbc.writeMem(0x5dce, { 0xc4 });
        gbc.writeMem(0xa1d9, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x899b, gbc.sp());
        EXPECT(0xa1db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1d9));
        EXPECT(0x6e, gbc.readMem(0xa1da));
        // CB 6E 00A3
        gbc.setState(0xd5cf, 0x4ec4, 0x4bc0, 0x2511, 0x168a, 0x42f3, 0x1, 0x0);
        gbc.writeMem(0x42f3, { 0x96 });
        gbc.writeMem(0xd5cf, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4ec4, gbc.sp());
        EXPECT(0xd5d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5cf));
        EXPECT(0x6e, gbc.readMem(0xd5d0));
        // CB 6E 00A4
        gbc.setState(0xe8da, 0x2489, 0x7ac0, 0x6fa2, 0xa3b5, 0xfc0, 0x1, 0x1);
        gbc.writeMem(0xfc0, { 0x60 });
        gbc.writeMem(0xe8da, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2489, gbc.sp());
        EXPECT(0xe8dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8da));
        EXPECT(0x6e, gbc.readMem(0xe8db));
        // CB 6E 00A5
        gbc.setState(0xdea9, 0xf467, 0x6340, 0x5dad, 0x49f5, 0x33a8, 0x0, 0x0);
        gbc.writeMem(0x33a8, { 0xef });
        gbc.writeMem(0xdea9, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf467, gbc.sp());
        EXPECT(0xdeab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdea9));
        EXPECT(0x6e, gbc.readMem(0xdeaa));
        // CB 6E 00A6
        gbc.setState(0xd015, 0xece9, 0xe420, 0xcc1f, 0x6576, 0x572, 0x1, 0x1);
        gbc.writeMem(0x572, { 0xf6 });
        gbc.writeMem(0xd015, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xece9, gbc.sp());
        EXPECT(0xd017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd015));
        EXPECT(0x6e, gbc.readMem(0xd016));
        // CB 6E 00A7
        gbc.setState(0x7c39, 0x8718, 0xd1d0, 0xe541, 0xb485, 0x4f5d, 0x0, 0x1);
        gbc.writeMem(0x4f5d, { 0x4b });
        gbc.writeMem(0x7c39, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8718, gbc.sp());
        EXPECT(0x7c3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 00A8
        gbc.setState(0x499c, 0x14c4, 0x5c30, 0x1bc0, 0x7f68, 0x31fb, 0x1, 0x0);
        gbc.writeMem(0x31fb, { 0xe0 });
        gbc.writeMem(0x499c, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x14c4, gbc.sp());
        EXPECT(0x499e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 00A9
        gbc.setState(0x8e07, 0x52c1, 0xbdc0, 0xeb6a, 0x9f88, 0xa392, 0x1, 0x1);
        gbc.writeMem(0x8e07, { 0xcb, 0x6e });
        gbc.writeMem(0xa392, { 0xea });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x52c1, gbc.sp());
        EXPECT(0x8e09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e07));
        EXPECT(0x6e, gbc.readMem(0x8e08));
        EXPECT(0xea, gbc.readMem(0xa392));
        // CB 6E 00AA
        gbc.setState(0x320d, 0xeabe, 0x7b80, 0xf93, 0x4bb5, 0x1b5e, 0x1, 0x0);
        gbc.writeMem(0x1b5e, { 0x5a });
        gbc.writeMem(0x320d, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xeabe, gbc.sp());
        EXPECT(0x320f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 00AB
        gbc.setState(0xdb4d, 0xff61, 0x6c80, 0xbbcb, 0x5195, 0xe3ad, 0x0, 0x1);
        gbc.writeMem(0xdb4d, { 0xcb, 0x6e });
        gbc.writeMem(0xe3ad, { 0xbb });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xff61, gbc.sp());
        EXPECT(0xdb4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb4d));
        EXPECT(0x6e, gbc.readMem(0xdb4e));
        EXPECT(0xbb, gbc.readMem(0xe3ad));
        // CB 6E 00AC
        gbc.setState(0x8e8e, 0x4139, 0x3ac0, 0xcd9a, 0xcb19, 0x4713, 0x1, 0x1);
        gbc.writeMem(0x4713, { 0x14 });
        gbc.writeMem(0x8e8e, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4139, gbc.sp());
        EXPECT(0x8e90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e8e));
        EXPECT(0x6e, gbc.readMem(0x8e8f));
        // CB 6E 00AD
        gbc.setState(0xdb5f, 0xc2d0, 0x44c0, 0xb49a, 0x380c, 0x3b23, 0x0, 0x1);
        gbc.writeMem(0x3b23, { 0xe9 });
        gbc.writeMem(0xdb5f, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc2d0, gbc.sp());
        EXPECT(0xdb61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb5f));
        EXPECT(0x6e, gbc.readMem(0xdb60));
        // CB 6E 00AE
        gbc.setState(0xc4a, 0xf47e, 0x2a80, 0x86c9, 0x2700, 0x4eab, 0x1, 0x0);
        gbc.writeMem(0xc4a, { 0xcb, 0x6e });
        gbc.writeMem(0x4eab, { 0xc0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf47e, gbc.sp());
        EXPECT(0xc4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 00AF
        gbc.setState(0xec, 0xedfc, 0x410, 0xf8e9, 0x723f, 0x7c60, 0x0, 0x1);
        gbc.writeMem(0xec, { 0xcb, 0x6e });
        gbc.writeMem(0x7c60, { 0x11 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xedfc, gbc.sp());
        EXPECT(0xee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 00B0
        gbc.setState(0x8f52, 0x6e18, 0x84c0, 0x6bc4, 0xba38, 0x4eaf, 0x1, 0x0);
        gbc.writeMem(0x4eaf, { 0xf1 });
        gbc.writeMem(0x8f52, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6e18, gbc.sp());
        EXPECT(0x8f54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f52));
        EXPECT(0x6e, gbc.readMem(0x8f53));
        // CB 6E 00B1
        gbc.setState(0xd458, 0x994f, 0xcbf0, 0x76, 0x7f55, 0x6e32, 0x0, 0x0);
        gbc.writeMem(0x6e32, { 0x5b });
        gbc.writeMem(0xd458, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x994f, gbc.sp());
        EXPECT(0xd45a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd458));
        EXPECT(0x6e, gbc.readMem(0xd459));
        // CB 6E 00B2
        gbc.setState(0x7481, 0xefcd, 0x6bf0, 0x982e, 0xe0a, 0xa0b4, 0x0, 0x0);
        gbc.writeMem(0x7481, { 0xcb, 0x6e });
        gbc.writeMem(0xa0b4, { 0xdd });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xefcd, gbc.sp());
        EXPECT(0x7483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xa0b4));
        // CB 6E 00B3
        gbc.setState(0x82a6, 0x2140, 0x1aa0, 0xc333, 0xa165, 0xa0ae, 0x0, 0x0);
        gbc.writeMem(0x82a6, { 0xcb, 0x6e });
        gbc.writeMem(0xa0ae, { 0x3c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2140, gbc.sp());
        EXPECT(0x82a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82a6));
        EXPECT(0x6e, gbc.readMem(0x82a7));
        EXPECT(0x3c, gbc.readMem(0xa0ae));
        // CB 6E 00B4
        gbc.setState(0xe974, 0x4f6f, 0x17e0, 0x8105, 0x3ae0, 0x47ac, 0x0, 0x0);
        gbc.writeMem(0x47ac, { 0x77 });
        gbc.writeMem(0xe974, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4f6f, gbc.sp());
        EXPECT(0xe976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe974));
        EXPECT(0x6e, gbc.readMem(0xe975));
        // CB 6E 00B5
        gbc.setState(0x4190, 0xf62d, 0xd140, 0xbece, 0x2283, 0xa809, 0x1, 0x0);
        gbc.writeMem(0x4190, { 0xcb, 0x6e });
        gbc.writeMem(0xa809, { 0xe8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf62d, gbc.sp());
        EXPECT(0x4192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xa809));
        // CB 6E 00B6
        gbc.setState(0xe5b, 0xe8a7, 0x23f0, 0x1fb0, 0x5513, 0x9e24, 0x0, 0x0);
        gbc.writeMem(0xe5b, { 0xcb, 0x6e });
        gbc.writeMem(0x9e24, { 0xf3 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe8a7, gbc.sp());
        EXPECT(0xe5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0x9e24));
        // CB 6E 00B7
        gbc.setState(0x84c8, 0xe344, 0x100, 0xb278, 0xa2af, 0xeb4a, 0x0, 0x0);
        gbc.writeMem(0x84c8, { 0xcb, 0x6e });
        gbc.writeMem(0xeb4a, { 0xf5 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe344, gbc.sp());
        EXPECT(0x84ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c8));
        EXPECT(0x6e, gbc.readMem(0x84c9));
        EXPECT(0xf5, gbc.readMem(0xeb4a));
        // CB 6E 00B8
        gbc.setState(0xe9cf, 0xee58, 0xa240, 0xc71d, 0x6459, 0x9198, 0x1, 0x0);
        gbc.writeMem(0x9198, { 0xa4 });
        gbc.writeMem(0xe9cf, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xee58, gbc.sp());
        EXPECT(0xe9d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9198));
        EXPECT(0xcb, gbc.readMem(0xe9cf));
        EXPECT(0x6e, gbc.readMem(0xe9d0));
        // CB 6E 00B9
        gbc.setState(0xe73d, 0x6e8c, 0x6b60, 0x318e, 0x5c89, 0x41e5, 0x0, 0x0);
        gbc.writeMem(0x41e5, { 0x2d });
        gbc.writeMem(0xe73d, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6e8c, gbc.sp());
        EXPECT(0xe73f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe73d));
        EXPECT(0x6e, gbc.readMem(0xe73e));
        // CB 6E 00BA
        gbc.setState(0xd2d6, 0x353a, 0x3690, 0xc77, 0xc06a, 0x6cf0, 0x0, 0x0);
        gbc.writeMem(0x6cf0, { 0x9b });
        gbc.writeMem(0xd2d6, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x353a, gbc.sp());
        EXPECT(0xd2d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2d6));
        EXPECT(0x6e, gbc.readMem(0xd2d7));
        // CB 6E 00BB
        gbc.setState(0xb091, 0xf365, 0x600, 0x5013, 0x3750, 0xc8ce, 0x1, 0x1);
        gbc.writeMem(0xb091, { 0xcb, 0x6e });
        gbc.writeMem(0xc8ce, { 0x41 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf365, gbc.sp());
        EXPECT(0xb093, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb091));
        EXPECT(0x6e, gbc.readMem(0xb092));
        EXPECT(0x41, gbc.readMem(0xc8ce));
        // CB 6E 00BC
        gbc.setState(0x66d8, 0xf955, 0x4500, 0x3660, 0x887, 0xae63, 0x0, 0x0);
        gbc.writeMem(0x66d8, { 0xcb, 0x6e });
        gbc.writeMem(0xae63, { 0x96 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf955, gbc.sp());
        EXPECT(0x66da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xae63));
        // CB 6E 00BD
        gbc.setState(0x8124, 0x52e6, 0x4120, 0x984b, 0x619, 0x93de, 0x0, 0x0);
        gbc.writeMem(0x8124, { 0xcb, 0x6e });
        gbc.writeMem(0x93de, { 0x80 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x52e6, gbc.sp());
        EXPECT(0x8126, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8124));
        EXPECT(0x6e, gbc.readMem(0x8125));
        EXPECT(0x80, gbc.readMem(0x93de));
        // CB 6E 00BE
        gbc.setState(0x1185, 0x6f94, 0xd3b0, 0xef46, 0xed9f, 0xccbe, 0x0, 0x1);
        gbc.writeMem(0x1185, { 0xcb, 0x6e });
        gbc.writeMem(0xccbe, { 0xe8 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x6f94, gbc.sp());
        EXPECT(0x1187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xccbe));
        // CB 6E 00BF
        gbc.setState(0x5fc8, 0x1594, 0xe4a0, 0xe96b, 0x3812, 0x5e56, 0x1, 0x1);
        gbc.writeMem(0x5e56, { 0x32 });
        gbc.writeMem(0x5fc8, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1594, gbc.sp());
        EXPECT(0x5fca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 00C0
        gbc.setState(0x67bc, 0x9879, 0x7e20, 0x279e, 0x70a3, 0xc60f, 0x0, 0x1);
        gbc.writeMem(0x67bc, { 0xcb, 0x6e });
        gbc.writeMem(0xc60f, { 0x28 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9879, gbc.sp());
        EXPECT(0x67be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xc60f));
        // CB 6E 00C1
        gbc.setState(0x475f, 0x25a3, 0x58c0, 0xd7ac, 0x8456, 0xf743, 0x0, 0x1);
        gbc.writeMem(0x475f, { 0xcb, 0x6e });
        gbc.writeMem(0xf743, { 0xb8 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x25a3, gbc.sp());
        EXPECT(0x4761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xf743));
        // CB 6E 00C2
        gbc.setState(0xced, 0xadf4, 0xcd40, 0x9090, 0xace2, 0x8b47, 0x0, 0x0);
        gbc.writeMem(0xced, { 0xcb, 0x6e });
        gbc.writeMem(0x8b47, { 0x3 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xadf4, gbc.sp());
        EXPECT(0xcef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8b47));
        // CB 6E 00C3
        gbc.setState(0xd0fb, 0xf89f, 0x6d00, 0x59b, 0x3556, 0xecfc, 0x1, 0x0);
        gbc.writeMem(0xd0fb, { 0xcb, 0x6e });
        gbc.writeMem(0xecfc, { 0xea });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf89f, gbc.sp());
        EXPECT(0xd0fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0fb));
        EXPECT(0x6e, gbc.readMem(0xd0fc));
        EXPECT(0xea, gbc.readMem(0xecfc));
        // CB 6E 00C4
        gbc.setState(0x4ace, 0x8852, 0x88d0, 0x369e, 0x873c, 0x2002, 0x0, 0x1);
        gbc.writeMem(0x2002, { 0x5e });
        gbc.writeMem(0x4ace, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8852, gbc.sp());
        EXPECT(0x4ad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 00C5
        gbc.setState(0xb98e, 0xc676, 0x4f90, 0xa430, 0xc6df, 0xf602, 0x0, 0x1);
        gbc.writeMem(0xb98e, { 0xcb, 0x6e });
        gbc.writeMem(0xf602, { 0x5f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc676, gbc.sp());
        EXPECT(0xb990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb98e));
        EXPECT(0x6e, gbc.readMem(0xb98f));
        EXPECT(0x5f, gbc.readMem(0xf602));
        // CB 6E 00C6
        gbc.setState(0xec2f, 0x70f3, 0xb5f0, 0x2099, 0xb94b, 0xb151, 0x1, 0x0);
        gbc.writeMem(0xb151, { 0x34 });
        gbc.writeMem(0xec2f, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x70f3, gbc.sp());
        EXPECT(0xec31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xb151));
        EXPECT(0xcb, gbc.readMem(0xec2f));
        EXPECT(0x6e, gbc.readMem(0xec30));
        // CB 6E 00C7
        gbc.setState(0x964b, 0x3d7b, 0xe4b0, 0xd98f, 0x21a, 0xa258, 0x1, 0x0);
        gbc.writeMem(0x964b, { 0xcb, 0x6e });
        gbc.writeMem(0xa258, { 0xf9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3d7b, gbc.sp());
        EXPECT(0x964d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x964b));
        EXPECT(0x6e, gbc.readMem(0x964c));
        EXPECT(0xf9, gbc.readMem(0xa258));
        // CB 6E 00C8
        gbc.setState(0xc773, 0x5caa, 0x4360, 0x5efd, 0xf073, 0xf60e, 0x0, 0x1);
        gbc.writeMem(0xc773, { 0xcb, 0x6e });
        gbc.writeMem(0xf60e, { 0xd1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5caa, gbc.sp());
        EXPECT(0xc775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc773));
        EXPECT(0x6e, gbc.readMem(0xc774));
        EXPECT(0xd1, gbc.readMem(0xf60e));
        // CB 6E 00C9
        gbc.setState(0x7aad, 0x20e5, 0x8100, 0x3366, 0xeff6, 0x4b0c, 0x0, 0x0);
        gbc.writeMem(0x4b0c, { 0x57 });
        gbc.writeMem(0x7aad, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x20e5, gbc.sp());
        EXPECT(0x7aaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 00CA
        gbc.setState(0xde3c, 0xcaf1, 0xb280, 0x74e1, 0xc04c, 0xac4c, 0x0, 0x0);
        gbc.writeMem(0xac4c, { 0x7b });
        gbc.writeMem(0xde3c, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xcaf1, gbc.sp());
        EXPECT(0xde3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xac4c));
        EXPECT(0xcb, gbc.readMem(0xde3c));
        EXPECT(0x6e, gbc.readMem(0xde3d));
        // CB 6E 00CB
        gbc.setState(0x7522, 0xc162, 0x8c60, 0x7caa, 0xbf4a, 0x396c, 0x1, 0x1);
        gbc.writeMem(0x396c, { 0x39 });
        gbc.writeMem(0x7522, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc162, gbc.sp());
        EXPECT(0x7524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 00CC
        gbc.setState(0x67ce, 0xc801, 0x2e20, 0xc0ef, 0x3612, 0xb31, 0x0, 0x0);
        gbc.writeMem(0xb31, { 0xa6 });
        gbc.writeMem(0x67ce, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc801, gbc.sp());
        EXPECT(0x67d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 00CD
        gbc.setState(0xee3, 0x7d4e, 0xa690, 0xc41f, 0x38f5, 0xa19d, 0x0, 0x1);
        gbc.writeMem(0xee3, { 0xcb, 0x6e });
        gbc.writeMem(0xa19d, { 0xc3 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7d4e, gbc.sp());
        EXPECT(0xee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa19d));
        // CB 6E 00CE
        gbc.setState(0x6197, 0x1121, 0x2330, 0x3c1e, 0xa313, 0x805, 0x1, 0x0);
        gbc.writeMem(0x805, { 0xf5 });
        gbc.writeMem(0x6197, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1121, gbc.sp());
        EXPECT(0x6199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 00CF
        gbc.setState(0xbafd, 0x1b03, 0x6740, 0x4f0c, 0xa8c2, 0x6204, 0x0, 0x0);
        gbc.writeMem(0x6204, { 0x49 });
        gbc.writeMem(0xbafd, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1b03, gbc.sp());
        EXPECT(0xbaff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbafd));
        EXPECT(0x6e, gbc.readMem(0xbafe));
        // CB 6E 00D0
        gbc.setState(0x3725, 0xf0e, 0x32a0, 0x4c0d, 0x6a1, 0x645d, 0x1, 0x1);
        gbc.writeMem(0x3725, { 0xcb, 0x6e });
        gbc.writeMem(0x645d, { 0x5a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf0e, gbc.sp());
        EXPECT(0x3727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 00D1
        gbc.setState(0x2b45, 0xa630, 0x53a0, 0xe979, 0x6df9, 0xcb5c, 0x0, 0x1);
        gbc.writeMem(0x2b45, { 0xcb, 0x6e });
        gbc.writeMem(0xcb5c, { 0x5d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa630, gbc.sp());
        EXPECT(0x2b47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xcb5c));
        // CB 6E 00D2
        gbc.setState(0x403e, 0xd70b, 0xa4d0, 0x1549, 0x951f, 0x417b, 0x1, 0x1);
        gbc.writeMem(0x403e, { 0xcb, 0x6e });
        gbc.writeMem(0x417b, { 0xe9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd70b, gbc.sp());
        EXPECT(0x4040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 00D3
        gbc.setState(0xef1a, 0x841d, 0x4050, 0xa4a7, 0x3115, 0x8ef1, 0x1, 0x1);
        gbc.writeMem(0x8ef1, { 0x2c });
        gbc.writeMem(0xef1a, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x841d, gbc.sp());
        EXPECT(0xef1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8ef1));
        EXPECT(0xcb, gbc.readMem(0xef1a));
        EXPECT(0x6e, gbc.readMem(0xef1b));
        // CB 6E 00D4
        gbc.setState(0x5a55, 0x724f, 0x3650, 0x5fb5, 0x8db7, 0xe4e8, 0x1, 0x0);
        gbc.writeMem(0x5a55, { 0xcb, 0x6e });
        gbc.writeMem(0xe4e8, { 0xbe });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x724f, gbc.sp());
        EXPECT(0x5a57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xe4e8));
        // CB 6E 00D5
        gbc.setState(0xddfa, 0xa32e, 0x4a00, 0x1ac3, 0x39f4, 0xd47a, 0x1, 0x0);
        gbc.writeMem(0xd47a, { 0xf1 });
        gbc.writeMem(0xddfa, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa32e, gbc.sp());
        EXPECT(0xddfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd47a));
        EXPECT(0xcb, gbc.readMem(0xddfa));
        EXPECT(0x6e, gbc.readMem(0xddfb));
        // CB 6E 00D6
        gbc.setState(0xe791, 0x43a6, 0xa8b0, 0x7fe0, 0x1be8, 0x9390, 0x1, 0x1);
        gbc.writeMem(0x9390, { 0xc7 });
        gbc.writeMem(0xe791, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x43a6, gbc.sp());
        EXPECT(0xe793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x9390));
        EXPECT(0xcb, gbc.readMem(0xe791));
        EXPECT(0x6e, gbc.readMem(0xe792));
        // CB 6E 00D7
        gbc.setState(0x17c, 0xe6e1, 0x5bb0, 0x36b6, 0xda51, 0x90c4, 0x1, 0x0);
        gbc.writeMem(0x17c, { 0xcb, 0x6e });
        gbc.writeMem(0x90c4, { 0x3a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe6e1, gbc.sp());
        EXPECT(0x17e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0x90c4));
        // CB 6E 00D8
        gbc.setState(0x1d1f, 0x5e71, 0x6590, 0x14f1, 0x6d82, 0x4ab, 0x1, 0x0);
        gbc.writeMem(0x4ab, { 0x69 });
        gbc.writeMem(0x1d1f, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5e71, gbc.sp());
        EXPECT(0x1d21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 00D9
        gbc.setState(0x324b, 0x2a1c, 0xf2c0, 0xb710, 0x86d6, 0x8ba4, 0x1, 0x0);
        gbc.writeMem(0x324b, { 0xcb, 0x6e });
        gbc.writeMem(0x8ba4, { 0x33 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2a1c, gbc.sp());
        EXPECT(0x324d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8ba4));
        // CB 6E 00DA
        gbc.setState(0xa6fd, 0xc94a, 0x9960, 0xe643, 0x94b3, 0xa28a, 0x0, 0x0);
        gbc.writeMem(0xa28a, { 0x1b });
        gbc.writeMem(0xa6fd, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc94a, gbc.sp());
        EXPECT(0xa6ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xa28a));
        EXPECT(0xcb, gbc.readMem(0xa6fd));
        EXPECT(0x6e, gbc.readMem(0xa6fe));
        // CB 6E 00DB
        gbc.setState(0xbe35, 0xc7e5, 0x89a0, 0xccd9, 0xaf5b, 0x3fe4, 0x1, 0x1);
        gbc.writeMem(0x3fe4, { 0xfd });
        gbc.writeMem(0xbe35, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc7e5, gbc.sp());
        EXPECT(0xbe37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe35));
        EXPECT(0x6e, gbc.readMem(0xbe36));
        // CB 6E 00DC
        gbc.setState(0xb04d, 0xf35f, 0xe1c0, 0x6ce0, 0xbb72, 0xdaba, 0x1, 0x0);
        gbc.writeMem(0xb04d, { 0xcb, 0x6e });
        gbc.writeMem(0xdaba, { 0x60 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf35f, gbc.sp());
        EXPECT(0xb04f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb04d));
        EXPECT(0x6e, gbc.readMem(0xb04e));
        EXPECT(0x60, gbc.readMem(0xdaba));
        // CB 6E 00DD
        gbc.setState(0xbee4, 0xe97, 0x7e50, 0x9213, 0x8396, 0x9eb8, 0x1, 0x1);
        gbc.writeMem(0x9eb8, { 0x79 });
        gbc.writeMem(0xbee4, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe97, gbc.sp());
        EXPECT(0xbee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9eb8));
        EXPECT(0xcb, gbc.readMem(0xbee4));
        EXPECT(0x6e, gbc.readMem(0xbee5));
        // CB 6E 00DE
        gbc.setState(0xbac5, 0x796d, 0x9020, 0xbe14, 0x3c00, 0xe46d, 0x0, 0x1);
        gbc.writeMem(0xbac5, { 0xcb, 0x6e });
        gbc.writeMem(0xe46d, { 0xeb });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x796d, gbc.sp());
        EXPECT(0xbac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbac5));
        EXPECT(0x6e, gbc.readMem(0xbac6));
        EXPECT(0xeb, gbc.readMem(0xe46d));
        // CB 6E 00DF
        gbc.setState(0x186, 0x2378, 0x57b0, 0x86d6, 0xb19b, 0x99f, 0x0, 0x0);
        gbc.writeMem(0x186, { 0xcb, 0x6e });
        gbc.writeMem(0x99f, { 0xd7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2378, gbc.sp());
        EXPECT(0x188, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 00E0
        gbc.setState(0x941b, 0x6c01, 0x890, 0x8ae, 0x9b5f, 0x3c4b, 0x1, 0x1);
        gbc.writeMem(0x3c4b, { 0xaf });
        gbc.writeMem(0x941b, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6c01, gbc.sp());
        EXPECT(0x941d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x941b));
        EXPECT(0x6e, gbc.readMem(0x941c));
        // CB 6E 00E1
        gbc.setState(0xd34f, 0x8c94, 0xb190, 0xacb0, 0x382b, 0x8f02, 0x0, 0x1);
        gbc.writeMem(0x8f02, { 0xa0 });
        gbc.writeMem(0xd34f, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8c94, gbc.sp());
        EXPECT(0xd351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8f02));
        EXPECT(0xcb, gbc.readMem(0xd34f));
        EXPECT(0x6e, gbc.readMem(0xd350));
        // CB 6E 00E2
        gbc.setState(0xcda4, 0xf3d, 0x4a0, 0xb1d1, 0x4828, 0xd461, 0x0, 0x0);
        gbc.writeMem(0xcda4, { 0xcb, 0x6e });
        gbc.writeMem(0xd461, { 0x47 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf3d, gbc.sp());
        EXPECT(0xcda6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcda4));
        EXPECT(0x6e, gbc.readMem(0xcda5));
        EXPECT(0x47, gbc.readMem(0xd461));
        // CB 6E 00E3
        gbc.setState(0xe963, 0xa533, 0x25a0, 0xd022, 0x75e3, 0x5262, 0x0, 0x1);
        gbc.writeMem(0x5262, { 0xd4 });
        gbc.writeMem(0xe963, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa533, gbc.sp());
        EXPECT(0xe965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe963));
        EXPECT(0x6e, gbc.readMem(0xe964));
        // CB 6E 00E4
        gbc.setState(0x2eab, 0x781f, 0x2820, 0x1ee4, 0x7d2d, 0x9ff2, 0x0, 0x0);
        gbc.writeMem(0x2eab, { 0xcb, 0x6e });
        gbc.writeMem(0x9ff2, { 0x65 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x781f, gbc.sp());
        EXPECT(0x2ead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9ff2));
        // CB 6E 00E5
        gbc.setState(0xe78, 0x1f0, 0xfea0, 0x86cf, 0xc6ef, 0xb7f6, 0x0, 0x1);
        gbc.writeMem(0xe78, { 0xcb, 0x6e });
        gbc.writeMem(0xb7f6, { 0xed });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1f0, gbc.sp());
        EXPECT(0xe7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xb7f6));
        // CB 6E 00E6
        gbc.setState(0x868e, 0xf359, 0x4b00, 0x5cfd, 0xbed1, 0xaa3f, 0x1, 0x0);
        gbc.writeMem(0x868e, { 0xcb, 0x6e });
        gbc.writeMem(0xaa3f, { 0x76 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf359, gbc.sp());
        EXPECT(0x8690, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x868e));
        EXPECT(0x6e, gbc.readMem(0x868f));
        EXPECT(0x76, gbc.readMem(0xaa3f));
        // CB 6E 00E7
        gbc.setState(0x91e2, 0xbe09, 0xf970, 0xb3f, 0x8bf7, 0x83ab, 0x1, 0x0);
        gbc.writeMem(0x83ab, { 0x14 });
        gbc.writeMem(0x91e2, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbe09, gbc.sp());
        EXPECT(0x91e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x83ab));
        EXPECT(0xcb, gbc.readMem(0x91e2));
        EXPECT(0x6e, gbc.readMem(0x91e3));
        // CB 6E 00E8
        gbc.setState(0xcda, 0xb5e5, 0x81b0, 0x53d7, 0xd8a2, 0x143, 0x0, 0x0);
        gbc.writeMem(0x143, { 0xf2 });
        gbc.writeMem(0xcda, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb5e5, gbc.sp());
        EXPECT(0xcdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 00E9
        gbc.setState(0xecb9, 0xe21, 0xd6e0, 0x861f, 0x3522, 0x8c15, 0x0, 0x0);
        gbc.writeMem(0x8c15, { 0x14 });
        gbc.writeMem(0xecb9, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe21, gbc.sp());
        EXPECT(0xecbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8c15));
        EXPECT(0xcb, gbc.readMem(0xecb9));
        EXPECT(0x6e, gbc.readMem(0xecba));
        // CB 6E 00EA
        gbc.setState(0x737, 0x7ec1, 0x1410, 0x7c9a, 0x84d6, 0x7c35, 0x0, 0x1);
        gbc.writeMem(0x737, { 0xcb, 0x6e });
        gbc.writeMem(0x7c35, { 0x10 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7ec1, gbc.sp());
        EXPECT(0x739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 00EB
        gbc.setState(0x2a93, 0x636f, 0x48e0, 0x2053, 0xc934, 0xa2b8, 0x0, 0x0);
        gbc.writeMem(0x2a93, { 0xcb, 0x6e });
        gbc.writeMem(0xa2b8, { 0xc4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x636f, gbc.sp());
        EXPECT(0x2a95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xa2b8));
        // CB 6E 00EC
        gbc.setState(0x6ff6, 0x57d7, 0xac60, 0x3796, 0x9b55, 0x785c, 0x0, 0x0);
        gbc.writeMem(0x6ff6, { 0xcb, 0x6e });
        gbc.writeMem(0x785c, { 0x82 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x57d7, gbc.sp());
        EXPECT(0x6ff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 00ED
        gbc.setState(0xe75c, 0x278b, 0x9b20, 0x9cea, 0x57fb, 0x254b, 0x0, 0x0);
        gbc.writeMem(0x254b, { 0xdf });
        gbc.writeMem(0xe75c, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x278b, gbc.sp());
        EXPECT(0xe75e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe75c));
        EXPECT(0x6e, gbc.readMem(0xe75d));
        // CB 6E 00EE
        gbc.setState(0xcc96, 0xdf, 0xd220, 0xf779, 0xbe20, 0xdc14, 0x1, 0x0);
        gbc.writeMem(0xcc96, { 0xcb, 0x6e });
        gbc.writeMem(0xdc14, { 0x65 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xdf, gbc.sp());
        EXPECT(0xcc98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc96));
        EXPECT(0x6e, gbc.readMem(0xcc97));
        EXPECT(0x65, gbc.readMem(0xdc14));
        // CB 6E 00EF
        gbc.setState(0xa837, 0x6f4d, 0x6180, 0x8dde, 0x227e, 0xe9ca, 0x0, 0x1);
        gbc.writeMem(0xa837, { 0xcb, 0x6e });
        gbc.writeMem(0xe9ca, { 0xa6 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6f4d, gbc.sp());
        EXPECT(0xa839, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa837));
        EXPECT(0x6e, gbc.readMem(0xa838));
        EXPECT(0xa6, gbc.readMem(0xe9ca));
        // CB 6E 00F0
        gbc.setState(0xb855, 0x44b9, 0x8d20, 0xa5b1, 0x295f, 0xb730, 0x1, 0x0);
        gbc.writeMem(0xb730, { 0xf8 });
        gbc.writeMem(0xb855, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x44b9, gbc.sp());
        EXPECT(0xb857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb730));
        EXPECT(0xcb, gbc.readMem(0xb855));
        EXPECT(0x6e, gbc.readMem(0xb856));
        // CB 6E 00F1
        gbc.setState(0xe0e7, 0x1d81, 0x510, 0x1045, 0xb0cc, 0xb5c7, 0x1, 0x0);
        gbc.writeMem(0xb5c7, { 0xd1 });
        gbc.writeMem(0xe0e7, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1d81, gbc.sp());
        EXPECT(0xe0e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xb5c7));
        EXPECT(0xcb, gbc.readMem(0xe0e7));
        EXPECT(0x6e, gbc.readMem(0xe0e8));
        // CB 6E 00F2
        gbc.setState(0x9208, 0xcee5, 0x9960, 0x2ea8, 0x710e, 0x4eeb, 0x1, 0x0);
        gbc.writeMem(0x4eeb, { 0x3 });
        gbc.writeMem(0x9208, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xcee5, gbc.sp());
        EXPECT(0x920a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9208));
        EXPECT(0x6e, gbc.readMem(0x9209));
        // CB 6E 00F3
        gbc.setState(0x6d11, 0x517f, 0x1940, 0x1e18, 0xff56, 0x2b10, 0x0, 0x0);
        gbc.writeMem(0x2b10, { 0x9a });
        gbc.writeMem(0x6d11, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x517f, gbc.sp());
        EXPECT(0x6d13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 00F4
        gbc.setState(0x86a9, 0x31a6, 0x2760, 0x8493, 0x8ffd, 0xe88c, 0x1, 0x0);
        gbc.writeMem(0x86a9, { 0xcb, 0x6e });
        gbc.writeMem(0xe88c, { 0xa4 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x31a6, gbc.sp());
        EXPECT(0x86ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86a9));
        EXPECT(0x6e, gbc.readMem(0x86aa));
        EXPECT(0xa4, gbc.readMem(0xe88c));
        // CB 6E 00F5
        gbc.setState(0x2046, 0x6264, 0x9180, 0xb822, 0x10e0, 0xcc86, 0x0, 0x0);
        gbc.writeMem(0x2046, { 0xcb, 0x6e });
        gbc.writeMem(0xcc86, { 0x74 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6264, gbc.sp());
        EXPECT(0x2048, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xcc86));
        // CB 6E 00F6
        gbc.setState(0x98b, 0xd1fa, 0xfdb0, 0xcca8, 0xb174, 0x96cb, 0x0, 0x0);
        gbc.writeMem(0x98b, { 0xcb, 0x6e });
        gbc.writeMem(0x96cb, { 0x5b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd1fa, gbc.sp());
        EXPECT(0x98d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x96cb));
        // CB 6E 00F7
        gbc.setState(0xac5d, 0x8d69, 0xfff0, 0xf077, 0x1407, 0x1f48, 0x1, 0x0);
        gbc.writeMem(0x1f48, { 0xc5 });
        gbc.writeMem(0xac5d, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8d69, gbc.sp());
        EXPECT(0xac5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac5d));
        EXPECT(0x6e, gbc.readMem(0xac5e));
        // CB 6E 00F8
        gbc.setState(0x763c, 0x7538, 0xe2b0, 0xdb00, 0x41c7, 0x2323, 0x0, 0x1);
        gbc.writeMem(0x2323, { 0xf0 });
        gbc.writeMem(0x763c, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7538, gbc.sp());
        EXPECT(0x763e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 00F9
        gbc.setState(0x8e28, 0xa673, 0x6e30, 0x4dc3, 0x88cd, 0x286d, 0x0, 0x1);
        gbc.writeMem(0x286d, { 0xbc });
        gbc.writeMem(0x8e28, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa673, gbc.sp());
        EXPECT(0x8e2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e28));
        EXPECT(0x6e, gbc.readMem(0x8e29));
        // CB 6E 00FA
        gbc.setState(0x9e0c, 0xf8b0, 0xa1e0, 0x476e, 0xd75, 0x1bcf, 0x0, 0x1);
        gbc.writeMem(0x1bcf, { 0x22 });
        gbc.writeMem(0x9e0c, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf8b0, gbc.sp());
        EXPECT(0x9e0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e0c));
        EXPECT(0x6e, gbc.readMem(0x9e0d));
        // CB 6E 00FB
        gbc.setState(0x2caa, 0xf3b5, 0xc190, 0xce1, 0x4b5, 0xff52, 0x0, 0x1);
        gbc.writeMem(0x2caa, { 0xcb, 0x6e });
        gbc.writeMem(0xff52, { 0xa });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf3b5, gbc.sp());
        EXPECT(0x2cac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xff52));
        // CB 6E 00FC
        gbc.setState(0x142b, 0xf27b, 0x9000, 0xc200, 0x6456, 0xd359, 0x0, 0x1);
        gbc.writeMem(0x142b, { 0xcb, 0x6e });
        gbc.writeMem(0xd359, { 0xbe });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf27b, gbc.sp());
        EXPECT(0x142d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xd359));
        // CB 6E 00FD
        gbc.setState(0x1d19, 0xa912, 0x2360, 0x8731, 0xda1b, 0x77e, 0x0, 0x1);
        gbc.writeMem(0x77e, { 0x21 });
        gbc.writeMem(0x1d19, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa912, gbc.sp());
        EXPECT(0x1d1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 00FE
        gbc.setState(0xe8de, 0x600f, 0x94e0, 0x2d56, 0xc1e9, 0x83e1, 0x1, 0x1);
        gbc.writeMem(0x83e1, { 0x7 });
        gbc.writeMem(0xe8de, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x600f, gbc.sp());
        EXPECT(0xe8e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x83e1));
        EXPECT(0xcb, gbc.readMem(0xe8de));
        EXPECT(0x6e, gbc.readMem(0xe8df));
        // CB 6E 00FF
        gbc.setState(0xdbc3, 0xc845, 0xf1e0, 0x4168, 0x9b27, 0x24ac, 0x1, 0x1);
        gbc.writeMem(0x24ac, { 0x40 });
        gbc.writeMem(0xdbc3, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc845, gbc.sp());
        EXPECT(0xdbc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbc3));
        EXPECT(0x6e, gbc.readMem(0xdbc4));
        // CB 6E 0100
        gbc.setState(0xe2ae, 0xba11, 0x5eb0, 0xda4f, 0x7d5b, 0xfd81, 0x1, 0x0);
        gbc.writeMem(0xe2ae, { 0xcb, 0x6e });
        gbc.writeMem(0xfd81, { 0xdf });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xba11, gbc.sp());
        EXPECT(0xe2b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2ae));
        EXPECT(0x6e, gbc.readMem(0xe2af));
        EXPECT(0xdf, gbc.readMem(0xfd81));
        // CB 6E 0101
        gbc.setState(0x7f1f, 0xb402, 0xe270, 0x1826, 0x2894, 0xe659, 0x1, 0x1);
        gbc.writeMem(0x7f1f, { 0xcb, 0x6e });
        gbc.writeMem(0xe659, { 0xda });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb402, gbc.sp());
        EXPECT(0x7f21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe659));
        // CB 6E 0102
        gbc.setState(0xd331, 0x453c, 0x2230, 0xe509, 0x1311, 0x665b, 0x0, 0x0);
        gbc.writeMem(0x665b, { 0x92 });
        gbc.writeMem(0xd331, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x453c, gbc.sp());
        EXPECT(0xd333, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd331));
        EXPECT(0x6e, gbc.readMem(0xd332));
        // CB 6E 0103
        gbc.setState(0x587, 0xdc03, 0xaf20, 0x168b, 0x11b5, 0xe7d2, 0x0, 0x0);
        gbc.writeMem(0x587, { 0xcb, 0x6e });
        gbc.writeMem(0xe7d2, { 0xc4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xdc03, gbc.sp());
        EXPECT(0x589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xe7d2));
        // CB 6E 0105
        gbc.setState(0x44ed, 0xd69b, 0xb150, 0x3112, 0x4116, 0x8c6f, 0x1, 0x1);
        gbc.writeMem(0x44ed, { 0xcb, 0x6e });
        gbc.writeMem(0x8c6f, { 0x12 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd69b, gbc.sp());
        EXPECT(0x44ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x8c6f));
        // CB 6E 0106
        gbc.setState(0x366, 0x2ecd, 0xfe70, 0x3c15, 0x5835, 0x6081, 0x1, 0x1);
        gbc.writeMem(0x366, { 0xcb, 0x6e });
        gbc.writeMem(0x6081, { 0xb0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2ecd, gbc.sp());
        EXPECT(0x368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0107
        gbc.setState(0xa788, 0x8f2b, 0xe370, 0x4ad3, 0xd9ab, 0xe695, 0x0, 0x1);
        gbc.writeMem(0xa788, { 0xcb, 0x6e });
        gbc.writeMem(0xe695, { 0xb8 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8f2b, gbc.sp());
        EXPECT(0xa78a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa788));
        EXPECT(0x6e, gbc.readMem(0xa789));
        EXPECT(0xb8, gbc.readMem(0xe695));
        // CB 6E 0108
        gbc.setState(0x87ca, 0x9290, 0xa3c0, 0x6d97, 0x667f, 0xe679, 0x1, 0x0);
        gbc.writeMem(0x87ca, { 0xcb, 0x6e });
        gbc.writeMem(0xe679, { 0xb2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9290, gbc.sp());
        EXPECT(0x87cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87ca));
        EXPECT(0x6e, gbc.readMem(0x87cb));
        EXPECT(0xb2, gbc.readMem(0xe679));
        // CB 6E 0109
        gbc.setState(0xd135, 0x31c3, 0xb620, 0xb9d3, 0x5ca1, 0x879c, 0x1, 0x1);
        gbc.writeMem(0x879c, { 0x5c });
        gbc.writeMem(0xd135, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x31c3, gbc.sp());
        EXPECT(0xd137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x879c));
        EXPECT(0xcb, gbc.readMem(0xd135));
        EXPECT(0x6e, gbc.readMem(0xd136));
        // CB 6E 010A
        gbc.setState(0x44fb, 0x9966, 0x4c00, 0x2d6c, 0x4bbc, 0x140, 0x1, 0x0);
        gbc.writeMem(0x140, { 0x17 });
        gbc.writeMem(0x44fb, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9966, gbc.sp());
        EXPECT(0x44fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 010B
        gbc.setState(0xe27d, 0x62ff, 0x6aa0, 0xcdb6, 0x3ff4, 0x5bdb, 0x1, 0x1);
        gbc.writeMem(0x5bdb, { 0xad });
        gbc.writeMem(0xe27d, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x62ff, gbc.sp());
        EXPECT(0xe27f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe27d));
        EXPECT(0x6e, gbc.readMem(0xe27e));
        // CB 6E 010C
        gbc.setState(0x5b11, 0x2c88, 0x3990, 0xca95, 0xc165, 0x295a, 0x1, 0x0);
        gbc.writeMem(0x295a, { 0x3b });
        gbc.writeMem(0x5b11, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2c88, gbc.sp());
        EXPECT(0x5b13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 010D
        gbc.setState(0x60aa, 0x7efa, 0x32b0, 0xb0fc, 0x3b99, 0x4103, 0x0, 0x0);
        gbc.writeMem(0x4103, { 0xb8 });
        gbc.writeMem(0x60aa, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x7efa, gbc.sp());
        EXPECT(0x60ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 010E
        gbc.setState(0x8987, 0x250, 0x1b20, 0xf2bd, 0x250a, 0xc66d, 0x1, 0x1);
        gbc.writeMem(0x8987, { 0xcb, 0x6e });
        gbc.writeMem(0xc66d, { 0xc8 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x250, gbc.sp());
        EXPECT(0x8989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8987));
        EXPECT(0x6e, gbc.readMem(0x8988));
        EXPECT(0xc8, gbc.readMem(0xc66d));
        // CB 6E 010F
        gbc.setState(0x2573, 0x9929, 0x2c20, 0x7b63, 0x14ba, 0x8a9c, 0x0, 0x0);
        gbc.writeMem(0x2573, { 0xcb, 0x6e });
        gbc.writeMem(0x8a9c, { 0x99 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9929, gbc.sp());
        EXPECT(0x2575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8a9c));
        // CB 6E 0111
        gbc.setState(0xd152, 0xfa75, 0xf6b0, 0xea4, 0x42a8, 0xac82, 0x0, 0x0);
        gbc.writeMem(0xac82, { 0x6a });
        gbc.writeMem(0xd152, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xfa75, gbc.sp());
        EXPECT(0xd154, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xac82));
        EXPECT(0xcb, gbc.readMem(0xd152));
        EXPECT(0x6e, gbc.readMem(0xd153));
        // CB 6E 0112
        gbc.setState(0x903f, 0x2cc8, 0x5130, 0x663e, 0xb008, 0xef2e, 0x1, 0x0);
        gbc.writeMem(0x903f, { 0xcb, 0x6e });
        gbc.writeMem(0xef2e, { 0xb2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2cc8, gbc.sp());
        EXPECT(0x9041, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x903f));
        EXPECT(0x6e, gbc.readMem(0x9040));
        EXPECT(0xb2, gbc.readMem(0xef2e));
        // CB 6E 0113
        gbc.setState(0x84a1, 0x112b, 0xa850, 0x609, 0x542d, 0xb2d, 0x1, 0x0);
        gbc.writeMem(0xb2d, { 0x5e });
        gbc.writeMem(0x84a1, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x112b, gbc.sp());
        EXPECT(0x84a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84a1));
        EXPECT(0x6e, gbc.readMem(0x84a2));
        // CB 6E 0114
        gbc.setState(0x6d97, 0xa7c6, 0xe140, 0x73a7, 0x19c, 0xc97c, 0x1, 0x1);
        gbc.writeMem(0x6d97, { 0xcb, 0x6e });
        gbc.writeMem(0xc97c, { 0x6e });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa7c6, gbc.sp());
        EXPECT(0x6d99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xc97c));
        // CB 6E 0115
        gbc.setState(0xeb97, 0xb9b6, 0x93d0, 0x4704, 0xf3d5, 0xa2f2, 0x0, 0x0);
        gbc.writeMem(0xa2f2, { 0x42 });
        gbc.writeMem(0xeb97, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb9b6, gbc.sp());
        EXPECT(0xeb99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa2f2));
        EXPECT(0xcb, gbc.readMem(0xeb97));
        EXPECT(0x6e, gbc.readMem(0xeb98));
        // CB 6E 0116
        gbc.setState(0x49ca, 0xfbae, 0x2850, 0x5dda, 0x618c, 0x4832, 0x0, 0x1);
        gbc.writeMem(0x4832, { 0x35 });
        gbc.writeMem(0x49ca, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xfbae, gbc.sp());
        EXPECT(0x49cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0117
        gbc.setState(0x68fc, 0x9089, 0xe490, 0xd15c, 0xcae1, 0xebde, 0x0, 0x0);
        gbc.writeMem(0x68fc, { 0xcb, 0x6e });
        gbc.writeMem(0xebde, { 0x6e });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9089, gbc.sp());
        EXPECT(0x68fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xebde));
        // CB 6E 0118
        gbc.setState(0x267, 0xa35f, 0x4010, 0x9cce, 0x5087, 0xf74e, 0x0, 0x1);
        gbc.writeMem(0x267, { 0xcb, 0x6e });
        gbc.writeMem(0xf74e, { 0x18 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa35f, gbc.sp());
        EXPECT(0x269, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xf74e));
        // CB 6E 0119
        gbc.setState(0x8833, 0xb7ca, 0x65c0, 0x421a, 0x1a0a, 0xf063, 0x0, 0x0);
        gbc.writeMem(0x8833, { 0xcb, 0x6e });
        gbc.writeMem(0xf063, { 0x1e });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb7ca, gbc.sp());
        EXPECT(0x8835, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8833));
        EXPECT(0x6e, gbc.readMem(0x8834));
        EXPECT(0x1e, gbc.readMem(0xf063));
        // CB 6E 011A
        gbc.setState(0x29f1, 0xa83d, 0x6550, 0x28fe, 0x8db2, 0x150f, 0x0, 0x1);
        gbc.writeMem(0x150f, { 0x59 });
        gbc.writeMem(0x29f1, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa83d, gbc.sp());
        EXPECT(0x29f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 011C
        gbc.setState(0xac06, 0x99cb, 0x9bc0, 0xf098, 0xf6c3, 0x7946, 0x1, 0x1);
        gbc.writeMem(0x7946, { 0xfb });
        gbc.writeMem(0xac06, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x99cb, gbc.sp());
        EXPECT(0xac08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac06));
        EXPECT(0x6e, gbc.readMem(0xac07));
        // CB 6E 011D
        gbc.setState(0x187c, 0xc181, 0xfc00, 0x978e, 0x891d, 0x337c, 0x0, 0x0);
        gbc.writeMem(0x187c, { 0xcb, 0x6e });
        gbc.writeMem(0x337c, { 0x1f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc181, gbc.sp());
        EXPECT(0x187e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 011E
        gbc.setState(0x5f5b, 0xb232, 0x5d50, 0x1d80, 0x795d, 0xd1b6, 0x1, 0x1);
        gbc.writeMem(0x5f5b, { 0xcb, 0x6e });
        gbc.writeMem(0xd1b6, { 0x64 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb232, gbc.sp());
        EXPECT(0x5f5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd1b6));
        // CB 6E 011F
        gbc.setState(0x456f, 0xfbe7, 0x6d30, 0x8d1, 0x8456, 0x2d7b, 0x1, 0x0);
        gbc.writeMem(0x2d7b, { 0xdc });
        gbc.writeMem(0x456f, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xfbe7, gbc.sp());
        EXPECT(0x4571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0121
        gbc.setState(0x2997, 0x4c41, 0x2000, 0x4e4e, 0x935, 0xd86, 0x0, 0x1);
        gbc.writeMem(0xd86, { 0xd0 });
        gbc.writeMem(0x2997, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4c41, gbc.sp());
        EXPECT(0x2999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0122
        gbc.setState(0xce9f, 0xdb2f, 0x20a0, 0xe730, 0x9bc1, 0xafc8, 0x1, 0x1);
        gbc.writeMem(0xafc8, { 0x73 });
        gbc.writeMem(0xce9f, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xdb2f, gbc.sp());
        EXPECT(0xcea1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xafc8));
        EXPECT(0xcb, gbc.readMem(0xce9f));
        EXPECT(0x6e, gbc.readMem(0xcea0));
        // CB 6E 0123
        gbc.setState(0x1ae9, 0x3e86, 0xcd20, 0x3ecd, 0x14de, 0x7bc7, 0x0, 0x0);
        gbc.writeMem(0x1ae9, { 0xcb, 0x6e });
        gbc.writeMem(0x7bc7, { 0x86 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3e86, gbc.sp());
        EXPECT(0x1aeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0124
        gbc.setState(0xb016, 0xa2f, 0xf3e0, 0x76b2, 0x8ccf, 0x24d8, 0x1, 0x1);
        gbc.writeMem(0x24d8, { 0xf3 });
        gbc.writeMem(0xb016, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa2f, gbc.sp());
        EXPECT(0xb018, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb016));
        EXPECT(0x6e, gbc.readMem(0xb017));
        // CB 6E 0125
        gbc.setState(0x2d30, 0x5ce7, 0x1cf0, 0x5541, 0x9d09, 0x8cab, 0x1, 0x1);
        gbc.writeMem(0x2d30, { 0xcb, 0x6e });
        gbc.writeMem(0x8cab, { 0xc5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5ce7, gbc.sp());
        EXPECT(0x2d32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x8cab));
        // CB 6E 0126
        gbc.setState(0x46eb, 0x7127, 0x91c0, 0x2605, 0xe126, 0xba52, 0x0, 0x1);
        gbc.writeMem(0x46eb, { 0xcb, 0x6e });
        gbc.writeMem(0xba52, { 0x75 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7127, gbc.sp());
        EXPECT(0x46ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xba52));
        // CB 6E 0127
        gbc.setState(0xa510, 0xeb3a, 0x1130, 0x5fb0, 0xdeab, 0x3dd7, 0x0, 0x1);
        gbc.writeMem(0x3dd7, { 0xd5 });
        gbc.writeMem(0xa510, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xeb3a, gbc.sp());
        EXPECT(0xa512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa510));
        EXPECT(0x6e, gbc.readMem(0xa511));
        // CB 6E 0128
        gbc.setState(0xec5a, 0xbec, 0xa8b0, 0x8578, 0xd853, 0x1fff, 0x1, 0x0);
        gbc.writeMem(0x1fff, { 0xf0 });
        gbc.writeMem(0xec5a, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xbec, gbc.sp());
        EXPECT(0xec5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec5a));
        EXPECT(0x6e, gbc.readMem(0xec5b));
        // CB 6E 012A
        gbc.setState(0x994e, 0x42dc, 0x3c20, 0x31d6, 0x61bb, 0xa816, 0x0, 0x0);
        gbc.writeMem(0x994e, { 0xcb, 0x6e });
        gbc.writeMem(0xa816, { 0x5e });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x42dc, gbc.sp());
        EXPECT(0x9950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x994e));
        EXPECT(0x6e, gbc.readMem(0x994f));
        EXPECT(0x5e, gbc.readMem(0xa816));
        // CB 6E 012B
        gbc.setState(0x4c32, 0x25e1, 0x65d0, 0xb102, 0xdae7, 0xb00e, 0x0, 0x1);
        gbc.writeMem(0x4c32, { 0xcb, 0x6e });
        gbc.writeMem(0xb00e, { 0x4 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x25e1, gbc.sp());
        EXPECT(0x4c34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb00e));
        // CB 6E 012C
        gbc.setState(0xbeb1, 0xf89a, 0xd4e0, 0x4dc8, 0x1bbd, 0x4a61, 0x1, 0x0);
        gbc.writeMem(0x4a61, { 0x9 });
        gbc.writeMem(0xbeb1, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf89a, gbc.sp());
        EXPECT(0xbeb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeb1));
        EXPECT(0x6e, gbc.readMem(0xbeb2));
        // CB 6E 012D
        gbc.setState(0xb635, 0x1cda, 0xe630, 0x619c, 0x9417, 0x30ca, 0x1, 0x0);
        gbc.writeMem(0x30ca, { 0xf2 });
        gbc.writeMem(0xb635, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1cda, gbc.sp());
        EXPECT(0xb637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb635));
        EXPECT(0x6e, gbc.readMem(0xb636));
        // CB 6E 012E
        gbc.setState(0x8e73, 0xf101, 0xf290, 0x9aca, 0x1092, 0x97fd, 0x1, 0x1);
        gbc.writeMem(0x8e73, { 0xcb, 0x6e });
        gbc.writeMem(0x97fd, { 0xc2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf101, gbc.sp());
        EXPECT(0x8e75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e73));
        EXPECT(0x6e, gbc.readMem(0x8e74));
        EXPECT(0xc2, gbc.readMem(0x97fd));
        // CB 6E 012F
        gbc.setState(0x9064, 0xf55b, 0xf0f0, 0x1147, 0xfb88, 0x9296, 0x0, 0x1);
        gbc.writeMem(0x9064, { 0xcb, 0x6e });
        gbc.writeMem(0x9296, { 0xf });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf55b, gbc.sp());
        EXPECT(0x9066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9064));
        EXPECT(0x6e, gbc.readMem(0x9065));
        EXPECT(0xf, gbc.readMem(0x9296));
        // CB 6E 0130
        gbc.setState(0x79b2, 0xe48d, 0x2210, 0x763b, 0xe8e3, 0xc3e3, 0x1, 0x0);
        gbc.writeMem(0x79b2, { 0xcb, 0x6e });
        gbc.writeMem(0xc3e3, { 0x3d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe48d, gbc.sp());
        EXPECT(0x79b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xc3e3));
        // CB 6E 0131
        gbc.setState(0xce17, 0x43d4, 0x7fd0, 0x9577, 0x65c5, 0x8b46, 0x1, 0x1);
        gbc.writeMem(0x8b46, { 0x45 });
        gbc.writeMem(0xce17, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x43d4, gbc.sp());
        EXPECT(0xce19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x8b46));
        EXPECT(0xcb, gbc.readMem(0xce17));
        EXPECT(0x6e, gbc.readMem(0xce18));
        // CB 6E 0132
        gbc.setState(0x8d48, 0x21a7, 0x7310, 0xd75a, 0x77cd, 0x80a5, 0x0, 0x0);
        gbc.writeMem(0x80a5, { 0x28 });
        gbc.writeMem(0x8d48, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x21a7, gbc.sp());
        EXPECT(0x8d4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0x80a5));
        EXPECT(0xcb, gbc.readMem(0x8d48));
        EXPECT(0x6e, gbc.readMem(0x8d49));
        // CB 6E 0133
        gbc.setState(0x5e88, 0xc8eb, 0xaf30, 0xb93e, 0x135b, 0xb1be, 0x0, 0x1);
        gbc.writeMem(0x5e88, { 0xcb, 0x6e });
        gbc.writeMem(0xb1be, { 0xf3 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc8eb, gbc.sp());
        EXPECT(0x5e8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xb1be));
        // CB 6E 0134
        gbc.setState(0x3758, 0x87fe, 0x5620, 0xa488, 0x2dc7, 0x5e62, 0x0, 0x1);
        gbc.writeMem(0x3758, { 0xcb, 0x6e });
        gbc.writeMem(0x5e62, { 0x30 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x87fe, gbc.sp());
        EXPECT(0x375a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0135
        gbc.setState(0x3468, 0x5c02, 0x1a60, 0x8e77, 0xa473, 0xd131, 0x0, 0x1);
        gbc.writeMem(0x3468, { 0xcb, 0x6e });
        gbc.writeMem(0xd131, { 0xa });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5c02, gbc.sp());
        EXPECT(0x346a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xd131));
        // CB 6E 0136
        gbc.setState(0x45bc, 0xd2d4, 0x7ea0, 0xefa7, 0x24e2, 0x2b0, 0x1, 0x0);
        gbc.writeMem(0x2b0, { 0x60 });
        gbc.writeMem(0x45bc, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd2d4, gbc.sp());
        EXPECT(0x45be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0137
        gbc.setState(0xe8dd, 0x6e74, 0x2dd0, 0xa5f2, 0x18ad, 0x45d7, 0x0, 0x1);
        gbc.writeMem(0x45d7, { 0x23 });
        gbc.writeMem(0xe8dd, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6e74, gbc.sp());
        EXPECT(0xe8df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8dd));
        EXPECT(0x6e, gbc.readMem(0xe8de));
        // CB 6E 0139
        gbc.setState(0x33d7, 0xf9be, 0x31a0, 0x2b4b, 0x1d42, 0xf96f, 0x1, 0x0);
        gbc.writeMem(0x33d7, { 0xcb, 0x6e });
        gbc.writeMem(0xf96f, { 0x9f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf9be, gbc.sp());
        EXPECT(0x33d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xf96f));
        // CB 6E 013A
        gbc.setState(0x1605, 0xbdff, 0xc340, 0x892b, 0x4509, 0x2c7b, 0x0, 0x1);
        gbc.writeMem(0x1605, { 0xcb, 0x6e });
        gbc.writeMem(0x2c7b, { 0x8 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbdff, gbc.sp());
        EXPECT(0x1607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 013B
        gbc.setState(0x8f29, 0xf53a, 0x65a0, 0x88b, 0x607b, 0x9e42, 0x1, 0x1);
        gbc.writeMem(0x8f29, { 0xcb, 0x6e });
        gbc.writeMem(0x9e42, { 0xb });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf53a, gbc.sp());
        EXPECT(0x8f2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f29));
        EXPECT(0x6e, gbc.readMem(0x8f2a));
        EXPECT(0xb, gbc.readMem(0x9e42));
        // CB 6E 013C
        gbc.setState(0x6975, 0xb5e, 0x4a20, 0xaad0, 0xecbc, 0x472c, 0x0, 0x0);
        gbc.writeMem(0x472c, { 0xed });
        gbc.writeMem(0x6975, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb5e, gbc.sp());
        EXPECT(0x6977, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 013D
        gbc.setState(0x39f0, 0xd405, 0xf8f0, 0x6bec, 0xb7ff, 0x1e45, 0x1, 0x0);
        gbc.writeMem(0x1e45, { 0xf });
        gbc.writeMem(0x39f0, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd405, gbc.sp());
        EXPECT(0x39f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 013E
        gbc.setState(0x1ad6, 0xee68, 0xb640, 0x6bc5, 0x6362, 0x7a75, 0x1, 0x0);
        gbc.writeMem(0x1ad6, { 0xcb, 0x6e });
        gbc.writeMem(0x7a75, { 0x20 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xee68, gbc.sp());
        EXPECT(0x1ad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 013F
        gbc.setState(0xeb3d, 0x36de, 0xe610, 0xe63d, 0x6d95, 0x44dd, 0x1, 0x0);
        gbc.writeMem(0x44dd, { 0x11 });
        gbc.writeMem(0xeb3d, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x36de, gbc.sp());
        EXPECT(0xeb3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb3d));
        EXPECT(0x6e, gbc.readMem(0xeb3e));
        // CB 6E 0140
        gbc.setState(0xe4e6, 0xa7b7, 0xf630, 0xe638, 0x4eb3, 0x55d2, 0x0, 0x0);
        gbc.writeMem(0x55d2, { 0xb9 });
        gbc.writeMem(0xe4e6, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa7b7, gbc.sp());
        EXPECT(0xe4e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4e6));
        EXPECT(0x6e, gbc.readMem(0xe4e7));
        // CB 6E 0141
        gbc.setState(0x368a, 0x837, 0x3a40, 0xf72c, 0xdb2f, 0x50a8, 0x0, 0x0);
        gbc.writeMem(0x368a, { 0xcb, 0x6e });
        gbc.writeMem(0x50a8, { 0xe9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x837, gbc.sp());
        EXPECT(0x368c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0142
        gbc.setState(0x5a9f, 0x1de9, 0x49e0, 0xf39d, 0xcbe7, 0x964b, 0x0, 0x0);
        gbc.writeMem(0x5a9f, { 0xcb, 0x6e });
        gbc.writeMem(0x964b, { 0x7a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1de9, gbc.sp());
        EXPECT(0x5aa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x964b));
        // CB 6E 0143
        gbc.setState(0x571b, 0x6e3a, 0x1b40, 0xaeb1, 0xe3cb, 0x42cb, 0x0, 0x1);
        gbc.writeMem(0x42cb, { 0xa4 });
        gbc.writeMem(0x571b, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6e3a, gbc.sp());
        EXPECT(0x571d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0144
        gbc.setState(0x5e1e, 0x9dd4, 0xf0f0, 0x76e7, 0xb081, 0x4058, 0x1, 0x1);
        gbc.writeMem(0x4058, { 0x6c });
        gbc.writeMem(0x5e1e, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9dd4, gbc.sp());
        EXPECT(0x5e20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0145
        gbc.setState(0x9b21, 0x7b53, 0x2b20, 0xfc27, 0xe4a3, 0x1a80, 0x1, 0x1);
        gbc.writeMem(0x1a80, { 0xd });
        gbc.writeMem(0x9b21, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7b53, gbc.sp());
        EXPECT(0x9b23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b21));
        EXPECT(0x6e, gbc.readMem(0x9b22));
        // CB 6E 0146
        gbc.setState(0x401e, 0xc478, 0x9a40, 0x4f7e, 0x2cb7, 0xa836, 0x0, 0x1);
        gbc.writeMem(0x401e, { 0xcb, 0x6e });
        gbc.writeMem(0xa836, { 0xc3 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc478, gbc.sp());
        EXPECT(0x4020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa836));
        // CB 6E 0147
        gbc.setState(0xd751, 0xd5e6, 0x8d50, 0x398a, 0x338, 0x387d, 0x1, 0x0);
        gbc.writeMem(0x387d, { 0x96 });
        gbc.writeMem(0xd751, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd5e6, gbc.sp());
        EXPECT(0xd753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd751));
        EXPECT(0x6e, gbc.readMem(0xd752));
        // CB 6E 0148
        gbc.setState(0xeac8, 0xb7c2, 0x1d10, 0xf5d0, 0xdc13, 0xecb8, 0x0, 0x1);
        gbc.writeMem(0xeac8, { 0xcb, 0x6e });
        gbc.writeMem(0xecb8, { 0xbd });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb7c2, gbc.sp());
        EXPECT(0xeaca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeac8));
        EXPECT(0x6e, gbc.readMem(0xeac9));
        EXPECT(0xbd, gbc.readMem(0xecb8));
        // CB 6E 0149
        gbc.setState(0xea0c, 0xd77a, 0xa5d0, 0xc27, 0x1f9c, 0xf144, 0x0, 0x0);
        gbc.writeMem(0xea0c, { 0xcb, 0x6e });
        gbc.writeMem(0xf144, { 0x38 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd77a, gbc.sp());
        EXPECT(0xea0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea0c));
        EXPECT(0x6e, gbc.readMem(0xea0d));
        EXPECT(0x38, gbc.readMem(0xf144));
        // CB 6E 014A
        gbc.setState(0x1440, 0x493d, 0x6e40, 0x7b85, 0xd104, 0x9794, 0x1, 0x0);
        gbc.writeMem(0x1440, { 0xcb, 0x6e });
        gbc.writeMem(0x9794, { 0xdb });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x493d, gbc.sp());
        EXPECT(0x1442, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0x9794));
        // CB 6E 014B
        gbc.setState(0xb71b, 0xd35, 0xe3e0, 0x86d6, 0xc462, 0xa49b, 0x1, 0x0);
        gbc.writeMem(0xa49b, { 0x88 });
        gbc.writeMem(0xb71b, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd35, gbc.sp());
        EXPECT(0xb71d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa49b));
        EXPECT(0xcb, gbc.readMem(0xb71b));
        EXPECT(0x6e, gbc.readMem(0xb71c));
        // CB 6E 014C
        gbc.setState(0x75bc, 0xeece, 0xf590, 0xdab1, 0x8148, 0x8e18, 0x0, 0x0);
        gbc.writeMem(0x75bc, { 0xcb, 0x6e });
        gbc.writeMem(0x8e18, { 0x6b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xeece, gbc.sp());
        EXPECT(0x75be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0x8e18));
        // CB 6E 014D
        gbc.setState(0xc041, 0xd40c, 0x9620, 0x3672, 0xaeba, 0x8c92, 0x1, 0x0);
        gbc.writeMem(0x8c92, { 0x78 });
        gbc.writeMem(0xc041, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd40c, gbc.sp());
        EXPECT(0xc043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8c92));
        EXPECT(0xcb, gbc.readMem(0xc041));
        EXPECT(0x6e, gbc.readMem(0xc042));
        // CB 6E 014E
        gbc.setState(0x7a4, 0xff67, 0x1cb0, 0x2587, 0xcbb1, 0x961f, 0x1, 0x0);
        gbc.writeMem(0x7a4, { 0xcb, 0x6e });
        gbc.writeMem(0x961f, { 0x78 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xff67, gbc.sp());
        EXPECT(0x7a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x961f));
        // CB 6E 014F
        gbc.setState(0x9344, 0x4f60, 0xff50, 0x31ab, 0x3a06, 0x3436, 0x0, 0x1);
        gbc.writeMem(0x3436, { 0xcd });
        gbc.writeMem(0x9344, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4f60, gbc.sp());
        EXPECT(0x9346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9344));
        EXPECT(0x6e, gbc.readMem(0x9345));
        // CB 6E 0150
        gbc.setState(0xc074, 0xa1c7, 0x2370, 0x41e8, 0x4b15, 0x19cb, 0x0, 0x1);
        gbc.writeMem(0x19cb, { 0xbb });
        gbc.writeMem(0xc074, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa1c7, gbc.sp());
        EXPECT(0xc076, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc074));
        EXPECT(0x6e, gbc.readMem(0xc075));
        // CB 6E 0151
        gbc.setState(0x7741, 0x5463, 0x5fc0, 0x25a5, 0x538b, 0xe318, 0x0, 0x1);
        gbc.writeMem(0x7741, { 0xcb, 0x6e });
        gbc.writeMem(0xe318, { 0x22 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5463, gbc.sp());
        EXPECT(0x7743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xe318));
        // CB 6E 0152
        gbc.setState(0xc8e, 0xe960, 0x3480, 0xbee6, 0x7a20, 0xd56, 0x0, 0x0);
        gbc.writeMem(0xc8e, { 0xcb, 0x6e });
        gbc.writeMem(0xd56, { 0xe1 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe960, gbc.sp());
        EXPECT(0xc90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0153
        gbc.setState(0x6b0a, 0x8ef1, 0x7150, 0x297, 0xda5e, 0x3778, 0x0, 0x0);
        gbc.writeMem(0x3778, { 0x33 });
        gbc.writeMem(0x6b0a, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8ef1, gbc.sp());
        EXPECT(0x6b0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0154
        gbc.setState(0x33c7, 0xef07, 0xf560, 0x1258, 0xc618, 0x58c1, 0x0, 0x1);
        gbc.writeMem(0x33c7, { 0xcb, 0x6e });
        gbc.writeMem(0x58c1, { 0x3b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xef07, gbc.sp());
        EXPECT(0x33c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0156
        gbc.setState(0xac59, 0x784, 0x5f20, 0x2c60, 0xfecb, 0x19f1, 0x0, 0x1);
        gbc.writeMem(0x19f1, { 0x65 });
        gbc.writeMem(0xac59, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x784, gbc.sp());
        EXPECT(0xac5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac59));
        EXPECT(0x6e, gbc.readMem(0xac5a));
        // CB 6E 0157
        gbc.setState(0x311a, 0x7824, 0xd760, 0x229d, 0x44d, 0x85fd, 0x0, 0x0);
        gbc.writeMem(0x311a, { 0xcb, 0x6e });
        gbc.writeMem(0x85fd, { 0x90 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7824, gbc.sp());
        EXPECT(0x311c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x85fd));
        // CB 6E 0158
        gbc.setState(0x558f, 0x3d41, 0xdae0, 0xb9ac, 0x5afc, 0x1f5e, 0x1, 0x0);
        gbc.writeMem(0x1f5e, { 0x1 });
        gbc.writeMem(0x558f, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3d41, gbc.sp());
        EXPECT(0x5591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0159
        gbc.setState(0x285c, 0x82dc, 0xfe00, 0x36c5, 0xca1, 0xa524, 0x0, 0x0);
        gbc.writeMem(0x285c, { 0xcb, 0x6e });
        gbc.writeMem(0xa524, { 0xd2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x82dc, gbc.sp());
        EXPECT(0x285e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xa524));
        // CB 6E 015A
        gbc.setState(0x85f4, 0x65ca, 0x2dd0, 0x4184, 0xf916, 0xac68, 0x0, 0x0);
        gbc.writeMem(0x85f4, { 0xcb, 0x6e });
        gbc.writeMem(0xac68, { 0x63 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x65ca, gbc.sp());
        EXPECT(0x85f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85f4));
        EXPECT(0x6e, gbc.readMem(0x85f5));
        EXPECT(0x63, gbc.readMem(0xac68));
        // CB 6E 015B
        gbc.setState(0x44e, 0x26d8, 0xd400, 0xde0c, 0x4dcc, 0x50f9, 0x0, 0x1);
        gbc.writeMem(0x44e, { 0xcb, 0x6e });
        gbc.writeMem(0x50f9, { 0x24 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x26d8, gbc.sp());
        EXPECT(0x450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 015C
        gbc.setState(0x2534, 0xcfd8, 0xc6b0, 0x50b, 0xa824, 0x8206, 0x0, 0x1);
        gbc.writeMem(0x2534, { 0xcb, 0x6e });
        gbc.writeMem(0x8206, { 0x1e });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xcfd8, gbc.sp());
        EXPECT(0x2536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0x8206));
        // CB 6E 015E
        gbc.setState(0x24c0, 0x6869, 0xdd60, 0x94b8, 0xde43, 0xad16, 0x1, 0x1);
        gbc.writeMem(0x24c0, { 0xcb, 0x6e });
        gbc.writeMem(0xad16, { 0x3f });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6869, gbc.sp());
        EXPECT(0x24c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xad16));
        // CB 6E 015F
        gbc.setState(0xa3e8, 0x2578, 0xd00, 0x5b9e, 0x5c1e, 0xdecd, 0x1, 0x1);
        gbc.writeMem(0xa3e8, { 0xcb, 0x6e });
        gbc.writeMem(0xdecd, { 0xf8 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2578, gbc.sp());
        EXPECT(0xa3ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3e8));
        EXPECT(0x6e, gbc.readMem(0xa3e9));
        EXPECT(0xf8, gbc.readMem(0xdecd));
        // CB 6E 0160
        gbc.setState(0xa44d, 0x8854, 0x6e40, 0x1bd5, 0x6c94, 0xc648, 0x0, 0x0);
        gbc.writeMem(0xa44d, { 0xcb, 0x6e });
        gbc.writeMem(0xc648, { 0x88 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8854, gbc.sp());
        EXPECT(0xa44f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa44d));
        EXPECT(0x6e, gbc.readMem(0xa44e));
        EXPECT(0x88, gbc.readMem(0xc648));
        // CB 6E 0161
        gbc.setState(0x926b, 0x97aa, 0xe380, 0x3c2d, 0x368, 0x7022, 0x0, 0x0);
        gbc.writeMem(0x7022, { 0xf8 });
        gbc.writeMem(0x926b, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x97aa, gbc.sp());
        EXPECT(0x926d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x926b));
        EXPECT(0x6e, gbc.readMem(0x926c));
        // CB 6E 0162
        gbc.setState(0x5cfb, 0x6ba6, 0x8cf0, 0xe53f, 0x15c8, 0x598e, 0x1, 0x1);
        gbc.writeMem(0x598e, { 0x6c });
        gbc.writeMem(0x5cfb, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6ba6, gbc.sp());
        EXPECT(0x5cfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0163
        gbc.setState(0x41e, 0x3e11, 0x7460, 0x2008, 0x1c4f, 0x697d, 0x1, 0x0);
        gbc.writeMem(0x41e, { 0xcb, 0x6e });
        gbc.writeMem(0x697d, { 0x94 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3e11, gbc.sp());
        EXPECT(0x420, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0164
        gbc.setState(0x79b7, 0xb23c, 0x1ad0, 0xbf6f, 0x77e8, 0xdc4a, 0x0, 0x1);
        gbc.writeMem(0x79b7, { 0xcb, 0x6e });
        gbc.writeMem(0xdc4a, { 0x35 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb23c, gbc.sp());
        EXPECT(0x79b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xdc4a));
        // CB 6E 0165
        gbc.setState(0x8ffa, 0x6901, 0x4560, 0xc67e, 0x44d9, 0x2e07, 0x0, 0x1);
        gbc.writeMem(0x2e07, { 0x59 });
        gbc.writeMem(0x8ffa, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6901, gbc.sp());
        EXPECT(0x8ffc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ffa));
        EXPECT(0x6e, gbc.readMem(0x8ffb));
        // CB 6E 0166
        gbc.setState(0x9b91, 0xf9e8, 0xb5c0, 0xcba4, 0x335d, 0x5abb, 0x0, 0x0);
        gbc.writeMem(0x5abb, { 0x25 });
        gbc.writeMem(0x9b91, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf9e8, gbc.sp());
        EXPECT(0x9b93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b91));
        EXPECT(0x6e, gbc.readMem(0x9b92));
        // CB 6E 0167
        gbc.setState(0x53c8, 0xd3fc, 0x3da0, 0xe4e4, 0xf8e9, 0x80d, 0x0, 0x1);
        gbc.writeMem(0x80d, { 0xf6 });
        gbc.writeMem(0x53c8, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd3fc, gbc.sp());
        EXPECT(0x53ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0168
        gbc.setState(0x9ff6, 0x9785, 0xad80, 0x27a1, 0x8184, 0x54bf, 0x0, 0x1);
        gbc.writeMem(0x54bf, { 0xc1 });
        gbc.writeMem(0x9ff6, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9785, gbc.sp());
        EXPECT(0x9ff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ff6));
        EXPECT(0x6e, gbc.readMem(0x9ff7));
        // CB 6E 016A
        gbc.setState(0xe128, 0x987f, 0x7910, 0x1fab, 0x93d2, 0x72e0, 0x0, 0x1);
        gbc.writeMem(0x72e0, { 0xf5 });
        gbc.writeMem(0xe128, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x987f, gbc.sp());
        EXPECT(0xe12a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe128));
        EXPECT(0x6e, gbc.readMem(0xe129));
        // CB 6E 016B
        gbc.setState(0xdb7d, 0x5414, 0x1190, 0xe2c2, 0x39f9, 0x132a, 0x0, 0x1);
        gbc.writeMem(0x132a, { 0x54 });
        gbc.writeMem(0xdb7d, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5414, gbc.sp());
        EXPECT(0xdb7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb7d));
        EXPECT(0x6e, gbc.readMem(0xdb7e));
        // CB 6E 016C
        gbc.setState(0xe714, 0xeaf1, 0x7670, 0x97d0, 0x4ef5, 0x3ed7, 0x0, 0x0);
        gbc.writeMem(0x3ed7, { 0x5e });
        gbc.writeMem(0xe714, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xeaf1, gbc.sp());
        EXPECT(0xe716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe714));
        EXPECT(0x6e, gbc.readMem(0xe715));
        // CB 6E 016D
        gbc.setState(0xe5e2, 0xb9fb, 0x63f0, 0x8ae4, 0x4cae, 0xfdac, 0x0, 0x1);
        gbc.writeMem(0xe5e2, { 0xcb, 0x6e });
        gbc.writeMem(0xfdac, { 0x33 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb9fb, gbc.sp());
        EXPECT(0xe5e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5e2));
        EXPECT(0x6e, gbc.readMem(0xe5e3));
        EXPECT(0x33, gbc.readMem(0xfdac));
        // CB 6E 016E
        gbc.setState(0x2a7b, 0x9386, 0x51d0, 0x56d5, 0xbfca, 0x756a, 0x0, 0x1);
        gbc.writeMem(0x2a7b, { 0xcb, 0x6e });
        gbc.writeMem(0x756a, { 0x56 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9386, gbc.sp());
        EXPECT(0x2a7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 016F
        gbc.setState(0x78d6, 0x8f6e, 0xda80, 0x530f, 0x558b, 0x8d6a, 0x0, 0x1);
        gbc.writeMem(0x78d6, { 0xcb, 0x6e });
        gbc.writeMem(0x8d6a, { 0x81 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8f6e, gbc.sp());
        EXPECT(0x78d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8d6a));
        // CB 6E 0170
        gbc.setState(0x6d09, 0x8e46, 0x6870, 0xa177, 0x24d3, 0x320f, 0x1, 0x1);
        gbc.writeMem(0x320f, { 0xc6 });
        gbc.writeMem(0x6d09, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8e46, gbc.sp());
        EXPECT(0x6d0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0171
        gbc.setState(0xb632, 0xf416, 0x6dd0, 0xf47, 0xd3a4, 0x7794, 0x1, 0x0);
        gbc.writeMem(0x7794, { 0xbd });
        gbc.writeMem(0xb632, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf416, gbc.sp());
        EXPECT(0xb634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb632));
        EXPECT(0x6e, gbc.readMem(0xb633));
        // CB 6E 0172
        gbc.setState(0x608e, 0xbe3d, 0xce20, 0x83da, 0xba2b, 0x44e1, 0x0, 0x0);
        gbc.writeMem(0x44e1, { 0xe4 });
        gbc.writeMem(0x608e, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xbe3d, gbc.sp());
        EXPECT(0x6090, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0173
        gbc.setState(0x6650, 0xa30d, 0x3c60, 0x31e1, 0x788b, 0x1966, 0x0, 0x1);
        gbc.writeMem(0x1966, { 0xb6 });
        gbc.writeMem(0x6650, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa30d, gbc.sp());
        EXPECT(0x6652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0174
        gbc.setState(0xc59f, 0xd74b, 0x4590, 0x6d31, 0x5b87, 0x273, 0x1, 0x0);
        gbc.writeMem(0x273, { 0xf9 });
        gbc.writeMem(0xc59f, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd74b, gbc.sp());
        EXPECT(0xc5a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc59f));
        EXPECT(0x6e, gbc.readMem(0xc5a0));
        // CB 6E 0175
        gbc.setState(0x8d75, 0xad68, 0x7190, 0xc654, 0x29c2, 0xe8da, 0x1, 0x1);
        gbc.writeMem(0x8d75, { 0xcb, 0x6e });
        gbc.writeMem(0xe8da, { 0xd8 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xad68, gbc.sp());
        EXPECT(0x8d77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d75));
        EXPECT(0x6e, gbc.readMem(0x8d76));
        EXPECT(0xd8, gbc.readMem(0xe8da));
        // CB 6E 0176
        gbc.setState(0xee9a, 0x989f, 0x7710, 0x29f, 0x1c12, 0x69ba, 0x0, 0x0);
        gbc.writeMem(0x69ba, { 0xd8 });
        gbc.writeMem(0xee9a, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x989f, gbc.sp());
        EXPECT(0xee9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee9a));
        EXPECT(0x6e, gbc.readMem(0xee9b));
        // CB 6E 0177
        gbc.setState(0xf8, 0x7fd1, 0xf590, 0x3ee7, 0x8e1a, 0x5446, 0x1, 0x0);
        gbc.writeMem(0xf8, { 0xcb, 0x6e });
        gbc.writeMem(0x5446, { 0x57 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7fd1, gbc.sp());
        EXPECT(0xfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0178
        gbc.setState(0x181f, 0x44d7, 0xa110, 0x6ed, 0x4a48, 0x3835, 0x0, 0x0);
        gbc.writeMem(0x181f, { 0xcb, 0x6e });
        gbc.writeMem(0x3835, { 0x23 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x44d7, gbc.sp());
        EXPECT(0x1821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0179
        gbc.setState(0x6265, 0xf769, 0xb070, 0xa3e, 0x2146, 0x868e, 0x1, 0x1);
        gbc.writeMem(0x6265, { 0xcb, 0x6e });
        gbc.writeMem(0x868e, { 0x27 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf769, gbc.sp());
        EXPECT(0x6267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x868e));
        // CB 6E 017A
        gbc.setState(0x3fc3, 0xdb26, 0xfdf0, 0xb42e, 0x24af, 0x83ee, 0x0, 0x0);
        gbc.writeMem(0x3fc3, { 0xcb, 0x6e });
        gbc.writeMem(0x83ee, { 0xe7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdb26, gbc.sp());
        EXPECT(0x3fc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x83ee));
        // CB 6E 017B
        gbc.setState(0x968f, 0xba56, 0x17e0, 0x88bd, 0xb3cc, 0xb964, 0x0, 0x1);
        gbc.writeMem(0x968f, { 0xcb, 0x6e });
        gbc.writeMem(0xb964, { 0x1f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xba56, gbc.sp());
        EXPECT(0x9691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x968f));
        EXPECT(0x6e, gbc.readMem(0x9690));
        EXPECT(0x1f, gbc.readMem(0xb964));
        // CB 6E 017C
        gbc.setState(0xaabe, 0x920b, 0xc3f0, 0x980b, 0xf6a9, 0x2fc9, 0x0, 0x1);
        gbc.writeMem(0x2fc9, { 0x78 });
        gbc.writeMem(0xaabe, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x920b, gbc.sp());
        EXPECT(0xaac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaabe));
        EXPECT(0x6e, gbc.readMem(0xaabf));
        // CB 6E 017E
        gbc.setState(0x1a6a, 0xadf7, 0x39b0, 0x492, 0x8a9f, 0x7620, 0x1, 0x1);
        gbc.writeMem(0x1a6a, { 0xcb, 0x6e });
        gbc.writeMem(0x7620, { 0x8b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xadf7, gbc.sp());
        EXPECT(0x1a6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 017F
        gbc.setState(0x83e4, 0x42da, 0xeaa0, 0xb4d3, 0x4977, 0x3e9b, 0x1, 0x0);
        gbc.writeMem(0x3e9b, { 0xc9 });
        gbc.writeMem(0x83e4, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x42da, gbc.sp());
        EXPECT(0x83e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83e4));
        EXPECT(0x6e, gbc.readMem(0x83e5));
        // CB 6E 0181
        gbc.setState(0x5dc5, 0x5989, 0xe3b0, 0xc05c, 0x5378, 0xbdc3, 0x1, 0x0);
        gbc.writeMem(0x5dc5, { 0xcb, 0x6e });
        gbc.writeMem(0xbdc3, { 0xac });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5989, gbc.sp());
        EXPECT(0x5dc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xbdc3));
        // CB 6E 0182
        gbc.setState(0x7e24, 0x8abb, 0x60e0, 0x2d6d, 0x3581, 0xfec5, 0x0, 0x0);
        gbc.writeMem(0x7e24, { 0xcb, 0x6e });
        gbc.writeMem(0xfec5, { 0x64 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8abb, gbc.sp());
        EXPECT(0x7e26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xfec5));
        // CB 6E 0184
        gbc.setState(0x6213, 0xe6c2, 0x7ca0, 0x8234, 0x2b5f, 0x5b1b, 0x1, 0x1);
        gbc.writeMem(0x5b1b, { 0xe3 });
        gbc.writeMem(0x6213, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe6c2, gbc.sp());
        EXPECT(0x6215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0185
        gbc.setState(0x3080, 0xbfcd, 0x4740, 0xc886, 0xdb25, 0xdcaf, 0x0, 0x0);
        gbc.writeMem(0x3080, { 0xcb, 0x6e });
        gbc.writeMem(0xdcaf, { 0x97 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbfcd, gbc.sp());
        EXPECT(0x3082, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xdcaf));
        // CB 6E 0186
        gbc.setState(0x2df9, 0xfbe0, 0x6120, 0xfd00, 0x5fd8, 0xf4c7, 0x0, 0x1);
        gbc.writeMem(0x2df9, { 0xcb, 0x6e });
        gbc.writeMem(0xf4c7, { 0x25 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xfbe0, gbc.sp());
        EXPECT(0x2dfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xf4c7));
        // CB 6E 0187
        gbc.setState(0x5948, 0x2780, 0xbf0, 0x67bc, 0x4df1, 0x9ef3, 0x0, 0x1);
        gbc.writeMem(0x5948, { 0xcb, 0x6e });
        gbc.writeMem(0x9ef3, { 0xfe });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2780, gbc.sp());
        EXPECT(0x594a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9ef3));
        // CB 6E 0188
        gbc.setState(0x9ced, 0x4270, 0x90, 0x31b2, 0x6f2e, 0x42e1, 0x0, 0x0);
        gbc.writeMem(0x42e1, { 0x5b });
        gbc.writeMem(0x9ced, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4270, gbc.sp());
        EXPECT(0x9cef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ced));
        EXPECT(0x6e, gbc.readMem(0x9cee));
        // CB 6E 0189
        gbc.setState(0xa4bf, 0x19c9, 0x79f0, 0xc246, 0x95fa, 0x5124, 0x1, 0x0);
        gbc.writeMem(0x5124, { 0xcf });
        gbc.writeMem(0xa4bf, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x19c9, gbc.sp());
        EXPECT(0xa4c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4bf));
        EXPECT(0x6e, gbc.readMem(0xa4c0));
        // CB 6E 018A
        gbc.setState(0x28a0, 0x346b, 0x5a0, 0xc63c, 0xead, 0x8146, 0x0, 0x1);
        gbc.writeMem(0x28a0, { 0xcb, 0x6e });
        gbc.writeMem(0x8146, { 0x6b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x346b, gbc.sp());
        EXPECT(0x28a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0x8146));
        // CB 6E 018B
        gbc.setState(0x46db, 0x701f, 0x8020, 0xd268, 0x9013, 0xdbef, 0x1, 0x1);
        gbc.writeMem(0x46db, { 0xcb, 0x6e });
        gbc.writeMem(0xdbef, { 0x97 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x701f, gbc.sp());
        EXPECT(0x46dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xdbef));
        // CB 6E 018C
        gbc.setState(0x42ab, 0x314f, 0x2be0, 0x9825, 0xef12, 0x35eb, 0x0, 0x0);
        gbc.writeMem(0x35eb, { 0xda });
        gbc.writeMem(0x42ab, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x314f, gbc.sp());
        EXPECT(0x42ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 018D
        gbc.setState(0x2114, 0x57bb, 0x4400, 0xeae1, 0xdbbf, 0x3da4, 0x1, 0x0);
        gbc.writeMem(0x2114, { 0xcb, 0x6e });
        gbc.writeMem(0x3da4, { 0xe0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x57bb, gbc.sp());
        EXPECT(0x2116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 018E
        gbc.setState(0xa2df, 0xaacb, 0xdcf0, 0x43fa, 0xb37e, 0x2fc8, 0x0, 0x0);
        gbc.writeMem(0x2fc8, { 0xd5 });
        gbc.writeMem(0xa2df, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xaacb, gbc.sp());
        EXPECT(0xa2e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2df));
        EXPECT(0x6e, gbc.readMem(0xa2e0));
        // CB 6E 018F
        gbc.setState(0x78a5, 0xbe09, 0xadb0, 0x63ac, 0x6795, 0x9c41, 0x0, 0x1);
        gbc.writeMem(0x78a5, { 0xcb, 0x6e });
        gbc.writeMem(0x9c41, { 0xd8 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbe09, gbc.sp());
        EXPECT(0x78a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0x9c41));
        // CB 6E 0190
        gbc.setState(0x8cc, 0xf0c, 0xa6d0, 0x76a5, 0x9385, 0x1cbe, 0x0, 0x1);
        gbc.writeMem(0x8cc, { 0xcb, 0x6e });
        gbc.writeMem(0x1cbe, { 0xd3 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf0c, gbc.sp());
        EXPECT(0x8ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0191
        gbc.setState(0x1ed6, 0xf8ae, 0x53a0, 0x839c, 0x9f7d, 0xa7e2, 0x0, 0x1);
        gbc.writeMem(0x1ed6, { 0xcb, 0x6e });
        gbc.writeMem(0xa7e2, { 0xed });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf8ae, gbc.sp());
        EXPECT(0x1ed8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xa7e2));
        // CB 6E 0192
        gbc.setState(0x52a8, 0xa722, 0x3b00, 0x6527, 0xf0ba, 0xc575, 0x1, 0x1);
        gbc.writeMem(0x52a8, { 0xcb, 0x6e });
        gbc.writeMem(0xc575, { 0x28 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa722, gbc.sp());
        EXPECT(0x52aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xc575));
        // CB 6E 0193
        gbc.setState(0xee2c, 0xae84, 0x30b0, 0x5ec5, 0x4bb5, 0x933a, 0x1, 0x0);
        gbc.writeMem(0x933a, { 0x3d });
        gbc.writeMem(0xee2c, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xae84, gbc.sp());
        EXPECT(0xee2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0x933a));
        EXPECT(0xcb, gbc.readMem(0xee2c));
        EXPECT(0x6e, gbc.readMem(0xee2d));
        // CB 6E 0194
        gbc.setState(0xe613, 0xd7fc, 0x1490, 0x9aab, 0x9d2e, 0x246f, 0x1, 0x1);
        gbc.writeMem(0x246f, { 0xa2 });
        gbc.writeMem(0xe613, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd7fc, gbc.sp());
        EXPECT(0xe615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe613));
        EXPECT(0x6e, gbc.readMem(0xe614));
        // CB 6E 0195
        gbc.setState(0xc29e, 0xd84b, 0x5990, 0xa654, 0xfe0d, 0xf44e, 0x1, 0x0);
        gbc.writeMem(0xc29e, { 0xcb, 0x6e });
        gbc.writeMem(0xf44e, { 0x37 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd84b, gbc.sp());
        EXPECT(0xc2a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc29e));
        EXPECT(0x6e, gbc.readMem(0xc29f));
        EXPECT(0x37, gbc.readMem(0xf44e));
        // CB 6E 0196
        gbc.setState(0xdb8a, 0xeb96, 0xa1e0, 0x5c04, 0x4ad2, 0xaebe, 0x1, 0x1);
        gbc.writeMem(0xaebe, { 0x63 });
        gbc.writeMem(0xdb8a, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xeb96, gbc.sp());
        EXPECT(0xdb8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xaebe));
        EXPECT(0xcb, gbc.readMem(0xdb8a));
        EXPECT(0x6e, gbc.readMem(0xdb8b));
        // CB 6E 0197
        gbc.setState(0xe008, 0x1f0c, 0x6840, 0x5221, 0xdcad, 0xeb5f, 0x0, 0x0);
        gbc.writeMem(0xe008, { 0xcb, 0x6e });
        gbc.writeMem(0xeb5f, { 0xa8 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1f0c, gbc.sp());
        EXPECT(0xe00a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe008));
        EXPECT(0x6e, gbc.readMem(0xe009));
        EXPECT(0xa8, gbc.readMem(0xeb5f));
        // CB 6E 0198
        gbc.setState(0x22c, 0x9646, 0x2c0, 0x5d70, 0x6dcd, 0xddc8, 0x1, 0x1);
        gbc.writeMem(0x22c, { 0xcb, 0x6e });
        gbc.writeMem(0xddc8, { 0x77 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9646, gbc.sp());
        EXPECT(0x22e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xddc8));
        // CB 6E 0199
        gbc.setState(0xd4af, 0xead5, 0x6580, 0x3f7a, 0xbb24, 0x5545, 0x0, 0x1);
        gbc.writeMem(0x5545, { 0x99 });
        gbc.writeMem(0xd4af, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xead5, gbc.sp());
        EXPECT(0xd4b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4af));
        EXPECT(0x6e, gbc.readMem(0xd4b0));
        // CB 6E 019A
        gbc.setState(0xef3, 0xe250, 0x4640, 0x64cf, 0x30d2, 0x4815, 0x1, 0x0);
        gbc.writeMem(0xef3, { 0xcb, 0x6e });
        gbc.writeMem(0x4815, { 0x9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe250, gbc.sp());
        EXPECT(0xef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 019B
        gbc.setState(0xe313, 0x5d86, 0xd3b0, 0xe483, 0xcb8e, 0x43fa, 0x1, 0x0);
        gbc.writeMem(0x43fa, { 0x32 });
        gbc.writeMem(0xe313, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5d86, gbc.sp());
        EXPECT(0xe315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe313));
        EXPECT(0x6e, gbc.readMem(0xe314));
        // CB 6E 019C
        gbc.setState(0xea58, 0xd516, 0x3da0, 0x84, 0x5ddc, 0xbda3, 0x1, 0x1);
        gbc.writeMem(0xbda3, { 0xa9 });
        gbc.writeMem(0xea58, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd516, gbc.sp());
        EXPECT(0xea5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xbda3));
        EXPECT(0xcb, gbc.readMem(0xea58));
        EXPECT(0x6e, gbc.readMem(0xea59));
        // CB 6E 019D
        gbc.setState(0x623f, 0xf56d, 0x18e0, 0x3880, 0x55f9, 0xdc87, 0x1, 0x1);
        gbc.writeMem(0x623f, { 0xcb, 0x6e });
        gbc.writeMem(0xdc87, { 0xed });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf56d, gbc.sp());
        EXPECT(0x6241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xdc87));
        // CB 6E 019E
        gbc.setState(0x105d, 0x2d65, 0x6930, 0xc945, 0xb4c, 0x4d62, 0x1, 0x1);
        gbc.writeMem(0x105d, { 0xcb, 0x6e });
        gbc.writeMem(0x4d62, { 0x38 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2d65, gbc.sp());
        EXPECT(0x105f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 019F
        gbc.setState(0xbf5, 0x152e, 0xcb60, 0x7b76, 0xc839, 0x660, 0x1, 0x0);
        gbc.writeMem(0x660, { 0x89 });
        gbc.writeMem(0xbf5, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x152e, gbc.sp());
        EXPECT(0xbf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 01A0
        gbc.setState(0xafdc, 0x9004, 0xed10, 0xd288, 0x34c3, 0x97a5, 0x0, 0x0);
        gbc.writeMem(0x97a5, { 0x81 });
        gbc.writeMem(0xafdc, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9004, gbc.sp());
        EXPECT(0xafde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x97a5));
        EXPECT(0xcb, gbc.readMem(0xafdc));
        EXPECT(0x6e, gbc.readMem(0xafdd));
        // CB 6E 01A1
        gbc.setState(0x99ed, 0x46cb, 0xbf00, 0x56d6, 0xaa12, 0x2286, 0x0, 0x0);
        gbc.writeMem(0x2286, { 0xdd });
        gbc.writeMem(0x99ed, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x46cb, gbc.sp());
        EXPECT(0x99ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99ed));
        EXPECT(0x6e, gbc.readMem(0x99ee));
        // CB 6E 01A2
        gbc.setState(0x7187, 0xcd24, 0xb9d0, 0xde87, 0xf661, 0x26c2, 0x1, 0x0);
        gbc.writeMem(0x26c2, { 0x3 });
        gbc.writeMem(0x7187, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xcd24, gbc.sp());
        EXPECT(0x7189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 01A3
        gbc.setState(0x3ae0, 0xdcb, 0xc4a0, 0xc6c8, 0x2656, 0x2935, 0x0, 0x0);
        gbc.writeMem(0x2935, { 0xcc });
        gbc.writeMem(0x3ae0, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xdcb, gbc.sp());
        EXPECT(0x3ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 01A4
        gbc.setState(0xc32d, 0xbc4d, 0xca90, 0x17cc, 0x5144, 0x4b17, 0x1, 0x0);
        gbc.writeMem(0x4b17, { 0xa8 });
        gbc.writeMem(0xc32d, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xbc4d, gbc.sp());
        EXPECT(0xc32f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc32d));
        EXPECT(0x6e, gbc.readMem(0xc32e));
        // CB 6E 01A5
        gbc.setState(0xbbee, 0xffdf, 0x56c0, 0x966e, 0xe070, 0x915c, 0x1, 0x1);
        gbc.writeMem(0x915c, { 0x84 });
        gbc.writeMem(0xbbee, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xffdf, gbc.sp());
        EXPECT(0xbbf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0x915c));
        EXPECT(0xcb, gbc.readMem(0xbbee));
        EXPECT(0x6e, gbc.readMem(0xbbef));
        // CB 6E 01A6
        gbc.setState(0xc9f4, 0x3b99, 0x6e30, 0x2799, 0x8026, 0x6841, 0x0, 0x0);
        gbc.writeMem(0x6841, { 0xc6 });
        gbc.writeMem(0xc9f4, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3b99, gbc.sp());
        EXPECT(0xc9f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9f4));
        EXPECT(0x6e, gbc.readMem(0xc9f5));
        // CB 6E 01A7
        gbc.setState(0xc9af, 0x9b78, 0xafe0, 0x48a9, 0xb2a0, 0xc84b, 0x0, 0x0);
        gbc.writeMem(0xc84b, { 0xba });
        gbc.writeMem(0xc9af, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9b78, gbc.sp());
        EXPECT(0xc9b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xc84b));
        EXPECT(0xcb, gbc.readMem(0xc9af));
        EXPECT(0x6e, gbc.readMem(0xc9b0));
        // CB 6E 01A8
        gbc.setState(0xc1a0, 0x689d, 0xcf70, 0x7a11, 0xd51, 0xc935, 0x1, 0x0);
        gbc.writeMem(0xc1a0, { 0xcb, 0x6e });
        gbc.writeMem(0xc935, { 0x5e });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x689d, gbc.sp());
        EXPECT(0xc1a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1a0));
        EXPECT(0x6e, gbc.readMem(0xc1a1));
        EXPECT(0x5e, gbc.readMem(0xc935));
        // CB 6E 01A9
        gbc.setState(0x6317, 0x8ef5, 0xa140, 0xd185, 0x1544, 0xcce7, 0x0, 0x1);
        gbc.writeMem(0x6317, { 0xcb, 0x6e });
        gbc.writeMem(0xcce7, { 0x6c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8ef5, gbc.sp());
        EXPECT(0x6319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xcce7));
        // CB 6E 01AA
        gbc.setState(0xbf0c, 0xe318, 0xd580, 0x748b, 0xa718, 0x39ad, 0x0, 0x0);
        gbc.writeMem(0x39ad, { 0x96 });
        gbc.writeMem(0xbf0c, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe318, gbc.sp());
        EXPECT(0xbf0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf0c));
        EXPECT(0x6e, gbc.readMem(0xbf0d));
        // CB 6E 01AB
        gbc.setState(0xe2b7, 0xc368, 0x68c0, 0x7b8d, 0x3ec6, 0x400c, 0x0, 0x1);
        gbc.writeMem(0x400c, { 0xd6 });
        gbc.writeMem(0xe2b7, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc368, gbc.sp());
        EXPECT(0xe2b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2b7));
        EXPECT(0x6e, gbc.readMem(0xe2b8));
        // CB 6E 01AC
        gbc.setState(0x78b5, 0x860d, 0xae00, 0x1155, 0xaf8c, 0x88d4, 0x1, 0x1);
        gbc.writeMem(0x78b5, { 0xcb, 0x6e });
        gbc.writeMem(0x88d4, { 0x21 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x860d, gbc.sp());
        EXPECT(0x78b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x88d4));
        // CB 6E 01AD
        gbc.setState(0xb21b, 0xbd9a, 0x11b0, 0xbcfb, 0x418f, 0x95e1, 0x1, 0x0);
        gbc.writeMem(0x95e1, { 0x87 });
        gbc.writeMem(0xb21b, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xbd9a, gbc.sp());
        EXPECT(0xb21d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x95e1));
        EXPECT(0xcb, gbc.readMem(0xb21b));
        EXPECT(0x6e, gbc.readMem(0xb21c));
        // CB 6E 01AE
        gbc.setState(0xd781, 0xb901, 0xfd60, 0xe254, 0x403a, 0xda08, 0x0, 0x1);
        gbc.writeMem(0xd781, { 0xcb, 0x6e });
        gbc.writeMem(0xda08, { 0xcb });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb901, gbc.sp());
        EXPECT(0xd783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd781));
        EXPECT(0x6e, gbc.readMem(0xd782));
        EXPECT(0xcb, gbc.readMem(0xda08));
        // CB 6E 01AF
        gbc.setState(0xb4a6, 0xa01a, 0x9fc0, 0x2f2d, 0xaf39, 0x839d, 0x0, 0x0);
        gbc.writeMem(0x839d, { 0xfa });
        gbc.writeMem(0xb4a6, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa01a, gbc.sp());
        EXPECT(0xb4a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x839d));
        EXPECT(0xcb, gbc.readMem(0xb4a6));
        EXPECT(0x6e, gbc.readMem(0xb4a7));
        // CB 6E 01B0
        gbc.setState(0x854f, 0x4ca5, 0xcab0, 0x49f2, 0x904f, 0xd912, 0x0, 0x1);
        gbc.writeMem(0x854f, { 0xcb, 0x6e });
        gbc.writeMem(0xd912, { 0x91 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4ca5, gbc.sp());
        EXPECT(0x8551, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x854f));
        EXPECT(0x6e, gbc.readMem(0x8550));
        EXPECT(0x91, gbc.readMem(0xd912));
        // CB 6E 01B1
        gbc.setState(0xb75d, 0xdfbd, 0xcac0, 0x7c3, 0x401c, 0xc27, 0x1, 0x1);
        gbc.writeMem(0xc27, { 0x97 });
        gbc.writeMem(0xb75d, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xdfbd, gbc.sp());
        EXPECT(0xb75f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb75d));
        EXPECT(0x6e, gbc.readMem(0xb75e));
        // CB 6E 01B2
        gbc.setState(0x5439, 0x83f2, 0x1880, 0xc43c, 0x2d8f, 0xe24e, 0x1, 0x0);
        gbc.writeMem(0x5439, { 0xcb, 0x6e });
        gbc.writeMem(0xe24e, { 0xc8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x83f2, gbc.sp());
        EXPECT(0x543b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe24e));
        // CB 6E 01B3
        gbc.setState(0x9c19, 0x9286, 0x3560, 0x2c91, 0x3b9e, 0xa60a, 0x0, 0x0);
        gbc.writeMem(0x9c19, { 0xcb, 0x6e });
        gbc.writeMem(0xa60a, { 0xc2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9286, gbc.sp());
        EXPECT(0x9c1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c19));
        EXPECT(0x6e, gbc.readMem(0x9c1a));
        EXPECT(0xc2, gbc.readMem(0xa60a));
        // CB 6E 01B4
        gbc.setState(0x566f, 0x50e1, 0x6e20, 0x4f00, 0xbd7e, 0x60d8, 0x1, 0x0);
        gbc.writeMem(0x566f, { 0xcb, 0x6e });
        gbc.writeMem(0x60d8, { 0x93 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x50e1, gbc.sp());
        EXPECT(0x5671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 01B5
        gbc.setState(0xd8c8, 0xca20, 0xcf50, 0x5e29, 0x2ba4, 0x80d9, 0x1, 0x0);
        gbc.writeMem(0x80d9, { 0x38 });
        gbc.writeMem(0xd8c8, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xca20, gbc.sp());
        EXPECT(0xd8ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x80d9));
        EXPECT(0xcb, gbc.readMem(0xd8c8));
        EXPECT(0x6e, gbc.readMem(0xd8c9));
        // CB 6E 01B7
        gbc.setState(0x2535, 0x8999, 0x5090, 0xf578, 0xd337, 0x2617, 0x0, 0x1);
        gbc.writeMem(0x2535, { 0xcb, 0x6e });
        gbc.writeMem(0x2617, { 0x47 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8999, gbc.sp());
        EXPECT(0x2537, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 01B8
        gbc.setState(0x31db, 0x3300, 0x98d0, 0x1e2f, 0x34c3, 0xd124, 0x0, 0x0);
        gbc.writeMem(0x31db, { 0xcb, 0x6e });
        gbc.writeMem(0xd124, { 0x46 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3300, gbc.sp());
        EXPECT(0x31dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xd124));
        // CB 6E 01B9
        gbc.setState(0x9ac6, 0xdd91, 0x5160, 0xac0f, 0xe7bf, 0x8000, 0x0, 0x1);
        gbc.writeMem(0x8000, { 0x84 });
        gbc.writeMem(0x9ac6, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xdd91, gbc.sp());
        EXPECT(0x9ac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0x8000));
        EXPECT(0xcb, gbc.readMem(0x9ac6));
        EXPECT(0x6e, gbc.readMem(0x9ac7));
        // CB 6E 01BA
        gbc.setState(0x226b, 0xb44f, 0xbc60, 0x8ada, 0x3e5f, 0x3a3, 0x0, 0x0);
        gbc.writeMem(0x3a3, { 0x4b });
        gbc.writeMem(0x226b, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb44f, gbc.sp());
        EXPECT(0x226d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 01BB
        gbc.setState(0x718b, 0xe9cc, 0x4050, 0x39ee, 0xea97, 0x55ff, 0x1, 0x1);
        gbc.writeMem(0x55ff, { 0xad });
        gbc.writeMem(0x718b, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe9cc, gbc.sp());
        EXPECT(0x718d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 01BC
        gbc.setState(0xa70b, 0x4fa8, 0xcbc0, 0x4e87, 0x839f, 0xbe23, 0x0, 0x1);
        gbc.writeMem(0xa70b, { 0xcb, 0x6e });
        gbc.writeMem(0xbe23, { 0x2d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4fa8, gbc.sp());
        EXPECT(0xa70d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa70b));
        EXPECT(0x6e, gbc.readMem(0xa70c));
        EXPECT(0x2d, gbc.readMem(0xbe23));
        // CB 6E 01BD
        gbc.setState(0x5129, 0x4c20, 0x2d70, 0xf1fb, 0x32ad, 0xa57f, 0x1, 0x0);
        gbc.writeMem(0x5129, { 0xcb, 0x6e });
        gbc.writeMem(0xa57f, { 0x9d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4c20, gbc.sp());
        EXPECT(0x512b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa57f));
        // CB 6E 01BE
        gbc.setState(0xcf5f, 0x8c48, 0xfea0, 0x596a, 0x8a5c, 0x1dd5, 0x1, 0x0);
        gbc.writeMem(0x1dd5, { 0xe3 });
        gbc.writeMem(0xcf5f, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8c48, gbc.sp());
        EXPECT(0xcf61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf5f));
        EXPECT(0x6e, gbc.readMem(0xcf60));
        // CB 6E 01BF
        gbc.setState(0x99c0, 0x452a, 0x1d10, 0xdf93, 0xffd1, 0x5033, 0x1, 0x0);
        gbc.writeMem(0x5033, { 0xd6 });
        gbc.writeMem(0x99c0, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x452a, gbc.sp());
        EXPECT(0x99c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99c0));
        EXPECT(0x6e, gbc.readMem(0x99c1));
        // CB 6E 01C0
        gbc.setState(0x17e0, 0x7141, 0xad50, 0x1f5d, 0xb460, 0x91dd, 0x1, 0x1);
        gbc.writeMem(0x17e0, { 0xcb, 0x6e });
        gbc.writeMem(0x91dd, { 0x54 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7141, gbc.sp());
        EXPECT(0x17e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0x91dd));
        // CB 6E 01C1
        gbc.setState(0x4423, 0x58fe, 0xd300, 0x70e1, 0xd9ad, 0x9c1c, 0x0, 0x1);
        gbc.writeMem(0x4423, { 0xcb, 0x6e });
        gbc.writeMem(0x9c1c, { 0x38 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x58fe, gbc.sp());
        EXPECT(0x4425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9c1c));
        // CB 6E 01C2
        gbc.setState(0x77e8, 0x57d8, 0x5040, 0x99e9, 0xeb6b, 0xec73, 0x0, 0x0);
        gbc.writeMem(0x77e8, { 0xcb, 0x6e });
        gbc.writeMem(0xec73, { 0x5d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x57d8, gbc.sp());
        EXPECT(0x77ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xec73));
        // CB 6E 01C3
        gbc.setState(0x1a3f, 0x56be, 0xcb00, 0x91ac, 0x2ce9, 0x9d4f, 0x1, 0x0);
        gbc.writeMem(0x1a3f, { 0xcb, 0x6e });
        gbc.writeMem(0x9d4f, { 0x5e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x56be, gbc.sp());
        EXPECT(0x1a41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x9d4f));
        // CB 6E 01C4
        gbc.setState(0xe873, 0x8346, 0x35e0, 0xa6fb, 0x7b2, 0xf148, 0x1, 0x0);
        gbc.writeMem(0xe873, { 0xcb, 0x6e });
        gbc.writeMem(0xf148, { 0x81 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8346, gbc.sp());
        EXPECT(0xe875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe873));
        EXPECT(0x6e, gbc.readMem(0xe874));
        EXPECT(0x81, gbc.readMem(0xf148));
        // CB 6E 01C5
        gbc.setState(0x2fb, 0xa65c, 0x2d10, 0xd183, 0xe4dc, 0x64b3, 0x0, 0x1);
        gbc.writeMem(0x2fb, { 0xcb, 0x6e });
        gbc.writeMem(0x64b3, { 0x83 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa65c, gbc.sp());
        EXPECT(0x2fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 01C6
        gbc.setState(0xc87d, 0xb1e3, 0xb220, 0x3c09, 0x9856, 0x7a0c, 0x0, 0x1);
        gbc.writeMem(0x7a0c, { 0x5c });
        gbc.writeMem(0xc87d, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb1e3, gbc.sp());
        EXPECT(0xc87f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc87d));
        EXPECT(0x6e, gbc.readMem(0xc87e));
        // CB 6E 01C8
        gbc.setState(0xc25a, 0x8f0f, 0xd8a0, 0xd251, 0x2ea0, 0xbb8b, 0x1, 0x1);
        gbc.writeMem(0xbb8b, { 0x41 });
        gbc.writeMem(0xc25a, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8f0f, gbc.sp());
        EXPECT(0xc25c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xbb8b));
        EXPECT(0xcb, gbc.readMem(0xc25a));
        EXPECT(0x6e, gbc.readMem(0xc25b));
        // CB 6E 01C9
        gbc.setState(0xd2e7, 0xc1d1, 0xa610, 0x8eb1, 0x173c, 0x6935, 0x0, 0x0);
        gbc.writeMem(0x6935, { 0xfd });
        gbc.writeMem(0xd2e7, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc1d1, gbc.sp());
        EXPECT(0xd2e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2e7));
        EXPECT(0x6e, gbc.readMem(0xd2e8));
        // CB 6E 01CA
        gbc.setState(0x90f0, 0x23b0, 0xb090, 0x73ed, 0x781a, 0xbd05, 0x0, 0x0);
        gbc.writeMem(0x90f0, { 0xcb, 0x6e });
        gbc.writeMem(0xbd05, { 0xf1 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x23b0, gbc.sp());
        EXPECT(0x90f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90f0));
        EXPECT(0x6e, gbc.readMem(0x90f1));
        EXPECT(0xf1, gbc.readMem(0xbd05));
        // CB 6E 01CB
        gbc.setState(0x3eef, 0xff2b, 0xef80, 0x21d1, 0xe83c, 0x8579, 0x0, 0x0);
        gbc.writeMem(0x3eef, { 0xcb, 0x6e });
        gbc.writeMem(0x8579, { 0xd4 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xff2b, gbc.sp());
        EXPECT(0x3ef1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x8579));
        // CB 6E 01CC
        gbc.setState(0x498d, 0x867c, 0x2040, 0xfb66, 0x7aec, 0x2586, 0x0, 0x0);
        gbc.writeMem(0x2586, { 0x53 });
        gbc.writeMem(0x498d, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x867c, gbc.sp());
        EXPECT(0x498f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 01CD
        gbc.setState(0x3dc0, 0x579f, 0x8ae0, 0x2f08, 0xe527, 0x1cba, 0x0, 0x1);
        gbc.writeMem(0x1cba, { 0x23 });
        gbc.writeMem(0x3dc0, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x579f, gbc.sp());
        EXPECT(0x3dc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 01CE
        gbc.setState(0xde72, 0x7b84, 0x8ad0, 0x66c, 0xf1ac, 0x7f2d, 0x1, 0x0);
        gbc.writeMem(0x7f2d, { 0x36 });
        gbc.writeMem(0xde72, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7b84, gbc.sp());
        EXPECT(0xde74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde72));
        EXPECT(0x6e, gbc.readMem(0xde73));
        // CB 6E 01CF
        gbc.setState(0xc8f4, 0x3b90, 0x70a0, 0x9f8c, 0xf76e, 0x75eb, 0x0, 0x0);
        gbc.writeMem(0x75eb, { 0xc8 });
        gbc.writeMem(0xc8f4, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3b90, gbc.sp());
        EXPECT(0xc8f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8f4));
        EXPECT(0x6e, gbc.readMem(0xc8f5));
        // CB 6E 01D0
        gbc.setState(0x71c6, 0xc5fa, 0x7320, 0x634c, 0x4d03, 0xcfff, 0x0, 0x0);
        gbc.writeMem(0x71c6, { 0xcb, 0x6e });
        gbc.writeMem(0xcfff, { 0xc });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc5fa, gbc.sp());
        EXPECT(0x71c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xcfff));
        // CB 6E 01D1
        gbc.setState(0x191, 0x708a, 0x560, 0x9da6, 0x517f, 0x61fb, 0x1, 0x1);
        gbc.writeMem(0x191, { 0xcb, 0x6e });
        gbc.writeMem(0x61fb, { 0xe7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x708a, gbc.sp());
        EXPECT(0x193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 01D2
        gbc.setState(0x8a80, 0xd506, 0x8090, 0xda10, 0xc7b0, 0xb410, 0x1, 0x0);
        gbc.writeMem(0x8a80, { 0xcb, 0x6e });
        gbc.writeMem(0xb410, { 0xb3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd506, gbc.sp());
        EXPECT(0x8a82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a80));
        EXPECT(0x6e, gbc.readMem(0x8a81));
        EXPECT(0xb3, gbc.readMem(0xb410));
        // CB 6E 01D3
        gbc.setState(0x403d, 0xe12a, 0xf3e0, 0xb2df, 0x3b39, 0xe762, 0x1, 0x1);
        gbc.writeMem(0x403d, { 0xcb, 0x6e });
        gbc.writeMem(0xe762, { 0x89 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe12a, gbc.sp());
        EXPECT(0x403f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe762));
        // CB 6E 01D5
        gbc.setState(0x3f66, 0xf9a8, 0x6e80, 0x3d1c, 0x4fb4, 0x96ec, 0x1, 0x1);
        gbc.writeMem(0x3f66, { 0xcb, 0x6e });
        gbc.writeMem(0x96ec, { 0xa2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf9a8, gbc.sp());
        EXPECT(0x3f68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x96ec));
        // CB 6E 01D6
        gbc.setState(0x9ba3, 0xd348, 0x83f0, 0x80fb, 0x9375, 0x8744, 0x1, 0x1);
        gbc.writeMem(0x8744, { 0xdd });
        gbc.writeMem(0x9ba3, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd348, gbc.sp());
        EXPECT(0x9ba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x8744));
        EXPECT(0xcb, gbc.readMem(0x9ba3));
        EXPECT(0x6e, gbc.readMem(0x9ba4));
        // CB 6E 01D7
        gbc.setState(0xbb18, 0xbf7e, 0x2d70, 0xfc54, 0xafc8, 0x8c5a, 0x1, 0x0);
        gbc.writeMem(0x8c5a, { 0xd0 });
        gbc.writeMem(0xbb18, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbf7e, gbc.sp());
        EXPECT(0xbb1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8c5a));
        EXPECT(0xcb, gbc.readMem(0xbb18));
        EXPECT(0x6e, gbc.readMem(0xbb19));
        // CB 6E 01DB
        gbc.setState(0x2467, 0x6234, 0x6af0, 0xcd45, 0x1086, 0xcca6, 0x1, 0x1);
        gbc.writeMem(0x2467, { 0xcb, 0x6e });
        gbc.writeMem(0xcca6, { 0x9f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6234, gbc.sp());
        EXPECT(0x2469, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xcca6));
        // CB 6E 01DC
        gbc.setState(0x1945, 0x7fbc, 0x4b00, 0xaa65, 0x26a, 0xe2f, 0x1, 0x0);
        gbc.writeMem(0xe2f, { 0xfd });
        gbc.writeMem(0x1945, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7fbc, gbc.sp());
        EXPECT(0x1947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 01DD
        gbc.setState(0x8055, 0x66be, 0x6060, 0xeb3a, 0x5b18, 0x8d33, 0x0, 0x1);
        gbc.writeMem(0x8055, { 0xcb, 0x6e });
        gbc.writeMem(0x8d33, { 0xa8 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x66be, gbc.sp());
        EXPECT(0x8057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8055));
        EXPECT(0x6e, gbc.readMem(0x8056));
        EXPECT(0xa8, gbc.readMem(0x8d33));
        // CB 6E 01DE
        gbc.setState(0x8b62, 0xf4fa, 0x2480, 0x9d12, 0x78a9, 0x3a90, 0x1, 0x0);
        gbc.writeMem(0x3a90, { 0xab });
        gbc.writeMem(0x8b62, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf4fa, gbc.sp());
        EXPECT(0x8b64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b62));
        EXPECT(0x6e, gbc.readMem(0x8b63));
        // CB 6E 01DF
        gbc.setState(0xdfca, 0xea1a, 0xf860, 0x9145, 0x5965, 0x197d, 0x1, 0x0);
        gbc.writeMem(0x197d, { 0x30 });
        gbc.writeMem(0xdfca, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xea1a, gbc.sp());
        EXPECT(0xdfcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfca));
        EXPECT(0x6e, gbc.readMem(0xdfcb));
        // CB 6E 01E0
        gbc.setState(0x551b, 0x8165, 0x11d0, 0x54dd, 0x4de8, 0x4f02, 0x1, 0x0);
        gbc.writeMem(0x4f02, { 0xb0 });
        gbc.writeMem(0x551b, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8165, gbc.sp());
        EXPECT(0x551d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 01E1
        gbc.setState(0x5559, 0xe3a9, 0x7060, 0xb113, 0xd03a, 0x8112, 0x1, 0x0);
        gbc.writeMem(0x5559, { 0xcb, 0x6e });
        gbc.writeMem(0x8112, { 0x1f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe3a9, gbc.sp());
        EXPECT(0x555b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0x8112));
        // CB 6E 01E2
        gbc.setState(0x4dae, 0x57b9, 0xa720, 0xcd47, 0x6519, 0x8f04, 0x0, 0x0);
        gbc.writeMem(0x4dae, { 0xcb, 0x6e });
        gbc.writeMem(0x8f04, { 0xeb });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x57b9, gbc.sp());
        EXPECT(0x4db0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0x8f04));
        // CB 6E 01E3
        gbc.setState(0x7743, 0xce3, 0x9470, 0xb499, 0x8760, 0xa0aa, 0x0, 0x0);
        gbc.writeMem(0x7743, { 0xcb, 0x6e });
        gbc.writeMem(0xa0aa, { 0xc0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xce3, gbc.sp());
        EXPECT(0x7745, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xa0aa));
        // CB 6E 01E5
        gbc.setState(0x33c4, 0x18b5, 0x3f20, 0xefa6, 0xe32c, 0x2378, 0x1, 0x1);
        gbc.writeMem(0x2378, { 0xb0 });
        gbc.writeMem(0x33c4, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x18b5, gbc.sp());
        EXPECT(0x33c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 01E6
        gbc.setState(0xa67f, 0x6620, 0x80a0, 0x8b8c, 0x5b30, 0xe3aa, 0x1, 0x0);
        gbc.writeMem(0xa67f, { 0xcb, 0x6e });
        gbc.writeMem(0xe3aa, { 0x38 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6620, gbc.sp());
        EXPECT(0xa681, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa67f));
        EXPECT(0x6e, gbc.readMem(0xa680));
        EXPECT(0x38, gbc.readMem(0xe3aa));
        // CB 6E 01E7
        gbc.setState(0x1660, 0xde73, 0x8090, 0x41eb, 0x38c1, 0xaf71, 0x0, 0x1);
        gbc.writeMem(0x1660, { 0xcb, 0x6e });
        gbc.writeMem(0xaf71, { 0x4e });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xde73, gbc.sp());
        EXPECT(0x1662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xaf71));
        // CB 6E 01E8
        gbc.setState(0xd0a0, 0xe157, 0xf6e0, 0x1a75, 0x77d4, 0x576e, 0x0, 0x0);
        gbc.writeMem(0x576e, { 0xd9 });
        gbc.writeMem(0xd0a0, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe157, gbc.sp());
        EXPECT(0xd0a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0a0));
        EXPECT(0x6e, gbc.readMem(0xd0a1));
        // CB 6E 01E9
        gbc.setState(0xc165, 0xbfca, 0x2910, 0xf2d, 0x8a02, 0x5e27, 0x1, 0x1);
        gbc.writeMem(0x5e27, { 0xa3 });
        gbc.writeMem(0xc165, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xbfca, gbc.sp());
        EXPECT(0xc167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc165));
        EXPECT(0x6e, gbc.readMem(0xc166));
        // CB 6E 01EA
        gbc.setState(0xdc1a, 0x225, 0xe800, 0x47f5, 0x9a09, 0x6cab, 0x0, 0x0);
        gbc.writeMem(0x6cab, { 0xc0 });
        gbc.writeMem(0xdc1a, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x225, gbc.sp());
        EXPECT(0xdc1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc1a));
        EXPECT(0x6e, gbc.readMem(0xdc1b));
        // CB 6E 01EB
        gbc.setState(0x356b, 0x8d8c, 0x80, 0x7f8f, 0xd3de, 0xd7fd, 0x1, 0x0);
        gbc.writeMem(0x356b, { 0xcb, 0x6e });
        gbc.writeMem(0xd7fd, { 0xfc });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8d8c, gbc.sp());
        EXPECT(0x356d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xd7fd));
        // CB 6E 01EC
        gbc.setState(0xf4d, 0x95bb, 0x340, 0xb1b1, 0x4bb9, 0x2b64, 0x0, 0x1);
        gbc.writeMem(0xf4d, { 0xcb, 0x6e });
        gbc.writeMem(0x2b64, { 0x21 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x95bb, gbc.sp());
        EXPECT(0xf4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 01ED
        gbc.setState(0x34a7, 0x5763, 0x54f0, 0x31a7, 0xe0b2, 0x19aa, 0x0, 0x0);
        gbc.writeMem(0x19aa, { 0x73 });
        gbc.writeMem(0x34a7, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5763, gbc.sp());
        EXPECT(0x34a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 01EE
        gbc.setState(0xeac3, 0x6263, 0xa6a0, 0x1b18, 0x6661, 0x4f22, 0x1, 0x1);
        gbc.writeMem(0x4f22, { 0x25 });
        gbc.writeMem(0xeac3, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6263, gbc.sp());
        EXPECT(0xeac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeac3));
        EXPECT(0x6e, gbc.readMem(0xeac4));
        // CB 6E 01EF
        gbc.setState(0xc9ca, 0x50d2, 0x5f10, 0x8a42, 0x233c, 0x2edb, 0x1, 0x1);
        gbc.writeMem(0x2edb, { 0xc2 });
        gbc.writeMem(0xc9ca, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x50d2, gbc.sp());
        EXPECT(0xc9cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ca));
        EXPECT(0x6e, gbc.readMem(0xc9cb));
        // CB 6E 01F0
        gbc.setState(0x3d70, 0x8bf6, 0x6bc0, 0xbe5e, 0x44f6, 0x2bcd, 0x1, 0x1);
        gbc.writeMem(0x2bcd, { 0x55 });
        gbc.writeMem(0x3d70, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8bf6, gbc.sp());
        EXPECT(0x3d72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 01F1
        gbc.setState(0x2fa6, 0x12bc, 0x2200, 0xa95c, 0x1e7a, 0x6e1, 0x0, 0x1);
        gbc.writeMem(0x6e1, { 0xd1 });
        gbc.writeMem(0x2fa6, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x12bc, gbc.sp());
        EXPECT(0x2fa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 01F2
        gbc.setState(0xeeae, 0xe824, 0x4f80, 0xce1e, 0x7e1b, 0xa44a, 0x1, 0x0);
        gbc.writeMem(0xa44a, { 0x6e });
        gbc.writeMem(0xeeae, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe824, gbc.sp());
        EXPECT(0xeeb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa44a));
        EXPECT(0xcb, gbc.readMem(0xeeae));
        EXPECT(0x6e, gbc.readMem(0xeeaf));
        // CB 6E 01F3
        gbc.setState(0x656, 0x9ceb, 0x1f90, 0x6e86, 0xc31c, 0x14c5, 0x0, 0x1);
        gbc.writeMem(0x656, { 0xcb, 0x6e });
        gbc.writeMem(0x14c5, { 0x59 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9ceb, gbc.sp());
        EXPECT(0x658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 01F4
        gbc.setState(0x64ad, 0xeabf, 0xbd40, 0x55a6, 0x526c, 0x813c, 0x0, 0x1);
        gbc.writeMem(0x64ad, { 0xcb, 0x6e });
        gbc.writeMem(0x813c, { 0xc4 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xeabf, gbc.sp());
        EXPECT(0x64af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0x813c));
        // CB 6E 01F6
        gbc.setState(0x51ef, 0xd8a5, 0x6db0, 0x942b, 0x3db8, 0x8ee3, 0x0, 0x0);
        gbc.writeMem(0x51ef, { 0xcb, 0x6e });
        gbc.writeMem(0x8ee3, { 0x2f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd8a5, gbc.sp());
        EXPECT(0x51f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8ee3));
        // CB 6E 01F7
        gbc.setState(0x6be2, 0x6522, 0xf7d0, 0x7627, 0x284b, 0x8ec5, 0x0, 0x1);
        gbc.writeMem(0x6be2, { 0xcb, 0x6e });
        gbc.writeMem(0x8ec5, { 0x17 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x6522, gbc.sp());
        EXPECT(0x6be4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0x8ec5));
        // CB 6E 01F8
        gbc.setState(0x1a32, 0x6815, 0xb270, 0x9716, 0xece2, 0x71b0, 0x0, 0x0);
        gbc.writeMem(0x1a32, { 0xcb, 0x6e });
        gbc.writeMem(0x71b0, { 0x1b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6815, gbc.sp());
        EXPECT(0x1a34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 01F9
        gbc.setState(0xd65f, 0xb72a, 0x8a10, 0xcb5f, 0x7672, 0x6f0, 0x0, 0x0);
        gbc.writeMem(0x6f0, { 0xdc });
        gbc.writeMem(0xd65f, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb72a, gbc.sp());
        EXPECT(0xd661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd65f));
        EXPECT(0x6e, gbc.readMem(0xd660));
        // CB 6E 01FA
        gbc.setState(0x8284, 0x9a82, 0x5af0, 0xe972, 0x6e07, 0x65c5, 0x0, 0x1);
        gbc.writeMem(0x65c5, { 0x4e });
        gbc.writeMem(0x8284, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9a82, gbc.sp());
        EXPECT(0x8286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8284));
        EXPECT(0x6e, gbc.readMem(0x8285));
        // CB 6E 01FB
        gbc.setState(0x57a0, 0x2d4, 0x9f60, 0xf419, 0x8dba, 0x569d, 0x0, 0x0);
        gbc.writeMem(0x569d, { 0xe7 });
        gbc.writeMem(0x57a0, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2d4, gbc.sp());
        EXPECT(0x57a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 01FC
        gbc.setState(0x4b05, 0x87c5, 0xe940, 0x4d82, 0x500c, 0xdee5, 0x1, 0x1);
        gbc.writeMem(0x4b05, { 0xcb, 0x6e });
        gbc.writeMem(0xdee5, { 0xb7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x87c5, gbc.sp());
        EXPECT(0x4b07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xdee5));
        // CB 6E 01FD
        gbc.setState(0xe8f, 0x5808, 0xa1f0, 0x9233, 0x6677, 0xf75, 0x1, 0x1);
        gbc.writeMem(0xe8f, { 0xcb, 0x6e });
        gbc.writeMem(0xf75, { 0x88 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5808, gbc.sp());
        EXPECT(0xe91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 01FE
        gbc.setState(0xc13b, 0xe3fc, 0x9260, 0x3d6b, 0x2ff9, 0xd2f9, 0x1, 0x0);
        gbc.writeMem(0xc13b, { 0xcb, 0x6e });
        gbc.writeMem(0xd2f9, { 0x82 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe3fc, gbc.sp());
        EXPECT(0xc13d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc13b));
        EXPECT(0x6e, gbc.readMem(0xc13c));
        EXPECT(0x82, gbc.readMem(0xd2f9));
        // CB 6E 01FF
        gbc.setState(0x921a, 0x58b4, 0x3680, 0x89f1, 0xeecd, 0xbde6, 0x0, 0x1);
        gbc.writeMem(0x921a, { 0xcb, 0x6e });
        gbc.writeMem(0xbde6, { 0xa4 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x58b4, gbc.sp());
        EXPECT(0x921c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x921a));
        EXPECT(0x6e, gbc.readMem(0x921b));
        EXPECT(0xa4, gbc.readMem(0xbde6));
        // CB 6E 0200
        gbc.setState(0x269c, 0xf7f5, 0x3250, 0xe224, 0x1022, 0x54b3, 0x0, 0x0);
        gbc.writeMem(0x269c, { 0xcb, 0x6e });
        gbc.writeMem(0x54b3, { 0x4a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf7f5, gbc.sp());
        EXPECT(0x269e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0201
        gbc.setState(0x9b2, 0x2aee, 0xc1d0, 0x9746, 0x1136, 0xcc88, 0x1, 0x1);
        gbc.writeMem(0x9b2, { 0xcb, 0x6e });
        gbc.writeMem(0xcc88, { 0x1a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2aee, gbc.sp());
        EXPECT(0x9b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xcc88));
        // CB 6E 0202
        gbc.setState(0xe7f1, 0x8f51, 0xa3c0, 0xf663, 0x6817, 0x2bf9, 0x1, 0x1);
        gbc.writeMem(0x2bf9, { 0xa });
        gbc.writeMem(0xe7f1, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8f51, gbc.sp());
        EXPECT(0xe7f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7f1));
        EXPECT(0x6e, gbc.readMem(0xe7f2));
        // CB 6E 0203
        gbc.setState(0x852e, 0x91fd, 0x2bb0, 0xaca3, 0xb0cd, 0xd5ff, 0x1, 0x0);
        gbc.writeMem(0x852e, { 0xcb, 0x6e });
        gbc.writeMem(0xd5ff, { 0xb4 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x91fd, gbc.sp());
        EXPECT(0x8530, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x852e));
        EXPECT(0x6e, gbc.readMem(0x852f));
        EXPECT(0xb4, gbc.readMem(0xd5ff));
        // CB 6E 0204
        gbc.setState(0x6d88, 0x1934, 0xe750, 0x644d, 0x9970, 0xf6f1, 0x1, 0x1);
        gbc.writeMem(0x6d88, { 0xcb, 0x6e });
        gbc.writeMem(0xf6f1, { 0x9b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1934, gbc.sp());
        EXPECT(0x6d8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xf6f1));
        // CB 6E 0205
        gbc.setState(0xda1, 0x6719, 0x5670, 0xc77, 0xd5a3, 0x485b, 0x0, 0x1);
        gbc.writeMem(0xda1, { 0xcb, 0x6e });
        gbc.writeMem(0x485b, { 0xe });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6719, gbc.sp());
        EXPECT(0xda3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0206
        gbc.setState(0xc035, 0xc207, 0x2110, 0x4982, 0x1874, 0x17cf, 0x1, 0x1);
        gbc.writeMem(0x17cf, { 0xfb });
        gbc.writeMem(0xc035, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc207, gbc.sp());
        EXPECT(0xc037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc035));
        EXPECT(0x6e, gbc.readMem(0xc036));
        // CB 6E 0207
        gbc.setState(0xc608, 0x1063, 0x2f80, 0x5a9d, 0xfbd2, 0xbf14, 0x1, 0x0);
        gbc.writeMem(0xbf14, { 0xaa });
        gbc.writeMem(0xc608, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1063, gbc.sp());
        EXPECT(0xc60a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xbf14));
        EXPECT(0xcb, gbc.readMem(0xc608));
        EXPECT(0x6e, gbc.readMem(0xc609));
        // CB 6E 0208
        gbc.setState(0xd65b, 0x7b03, 0xe2f0, 0x5b05, 0x7bbf, 0x3934, 0x1, 0x1);
        gbc.writeMem(0x3934, { 0xed });
        gbc.writeMem(0xd65b, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7b03, gbc.sp());
        EXPECT(0xd65d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd65b));
        EXPECT(0x6e, gbc.readMem(0xd65c));
        // CB 6E 020C
        gbc.setState(0xe821, 0xc23f, 0x7260, 0x4c63, 0xe904, 0x252a, 0x1, 0x1);
        gbc.writeMem(0x252a, { 0x7f });
        gbc.writeMem(0xe821, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc23f, gbc.sp());
        EXPECT(0xe823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe821));
        EXPECT(0x6e, gbc.readMem(0xe822));
        // CB 6E 020D
        gbc.setState(0xb94d, 0xb293, 0xd780, 0x7a1c, 0xc766, 0x63cb, 0x0, 0x0);
        gbc.writeMem(0x63cb, { 0xdc });
        gbc.writeMem(0xb94d, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb293, gbc.sp());
        EXPECT(0xb94f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb94d));
        EXPECT(0x6e, gbc.readMem(0xb94e));
        // CB 6E 020E
        gbc.setState(0x23c7, 0x8abd, 0xe8d0, 0x1d03, 0x83ca, 0x982d, 0x1, 0x0);
        gbc.writeMem(0x23c7, { 0xcb, 0x6e });
        gbc.writeMem(0x982d, { 0x42 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8abd, gbc.sp());
        EXPECT(0x23c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x982d));
        // CB 6E 020F
        gbc.setState(0xa1b3, 0x75c4, 0x29b0, 0x8b0, 0xd87e, 0x5422, 0x0, 0x0);
        gbc.writeMem(0x5422, { 0x36 });
        gbc.writeMem(0xa1b3, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x75c4, gbc.sp());
        EXPECT(0xa1b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1b3));
        EXPECT(0x6e, gbc.readMem(0xa1b4));
        // CB 6E 0210
        gbc.setState(0x259b, 0x2419, 0x4480, 0xb7f3, 0xb2a0, 0x1616, 0x0, 0x0);
        gbc.writeMem(0x1616, { 0x26 });
        gbc.writeMem(0x259b, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2419, gbc.sp());
        EXPECT(0x259d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0211
        gbc.setState(0x37f5, 0x2abb, 0x1130, 0x33c8, 0x9ed0, 0xa6a9, 0x1, 0x1);
        gbc.writeMem(0x37f5, { 0xcb, 0x6e });
        gbc.writeMem(0xa6a9, { 0xcc });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2abb, gbc.sp());
        EXPECT(0x37f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xa6a9));
        // CB 6E 0212
        gbc.setState(0xcf61, 0xc1a9, 0x8e90, 0x618c, 0xfe99, 0x5923, 0x0, 0x1);
        gbc.writeMem(0x5923, { 0xc });
        gbc.writeMem(0xcf61, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc1a9, gbc.sp());
        EXPECT(0xcf63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf61));
        EXPECT(0x6e, gbc.readMem(0xcf62));
        // CB 6E 0213
        gbc.setState(0xd61b, 0xc2ac, 0x2d20, 0xe9be, 0x6418, 0xaf01, 0x1, 0x0);
        gbc.writeMem(0xaf01, { 0x41 });
        gbc.writeMem(0xd61b, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc2ac, gbc.sp());
        EXPECT(0xd61d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xaf01));
        EXPECT(0xcb, gbc.readMem(0xd61b));
        EXPECT(0x6e, gbc.readMem(0xd61c));
        // CB 6E 0214
        gbc.setState(0xa09a, 0xa250, 0xf30, 0x981d, 0x8a14, 0xe07e, 0x1, 0x0);
        gbc.writeMem(0xa09a, { 0xcb, 0x6e });
        gbc.writeMem(0xe07e, { 0xb2 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa250, gbc.sp());
        EXPECT(0xa09c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa09a));
        EXPECT(0x6e, gbc.readMem(0xa09b));
        EXPECT(0xb2, gbc.readMem(0xe07e));
        // CB 6E 0215
        gbc.setState(0x1ccf, 0xe176, 0x180, 0x86bd, 0x95e8, 0xbbba, 0x1, 0x1);
        gbc.writeMem(0x1ccf, { 0xcb, 0x6e });
        gbc.writeMem(0xbbba, { 0xaf });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe176, gbc.sp());
        EXPECT(0x1cd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xbbba));
        // CB 6E 0216
        gbc.setState(0xcf9f, 0x3f6a, 0xcd80, 0x2d80, 0xe749, 0xdf33, 0x0, 0x0);
        gbc.writeMem(0xcf9f, { 0xcb, 0x6e });
        gbc.writeMem(0xdf33, { 0x86 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3f6a, gbc.sp());
        EXPECT(0xcfa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf9f));
        EXPECT(0x6e, gbc.readMem(0xcfa0));
        EXPECT(0x86, gbc.readMem(0xdf33));
        // CB 6E 0217
        gbc.setState(0x8422, 0x4a37, 0x57c0, 0x6003, 0x8163, 0xb1f4, 0x1, 0x0);
        gbc.writeMem(0x8422, { 0xcb, 0x6e });
        gbc.writeMem(0xb1f4, { 0x8c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4a37, gbc.sp());
        EXPECT(0x8424, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8422));
        EXPECT(0x6e, gbc.readMem(0x8423));
        EXPECT(0x8c, gbc.readMem(0xb1f4));
        // CB 6E 0219
        gbc.setState(0x514d, 0x2de, 0x3a10, 0x6083, 0xf319, 0x9bd6, 0x0, 0x0);
        gbc.writeMem(0x514d, { 0xcb, 0x6e });
        gbc.writeMem(0x9bd6, { 0xac });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2de, gbc.sp());
        EXPECT(0x514f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9bd6));
        // CB 6E 021A
        gbc.setState(0xa0aa, 0x7a7d, 0x4690, 0xd255, 0x1729, 0xa202, 0x1, 0x0);
        gbc.writeMem(0xa0aa, { 0xcb, 0x6e });
        gbc.writeMem(0xa202, { 0xc });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7a7d, gbc.sp());
        EXPECT(0xa0ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0aa));
        EXPECT(0x6e, gbc.readMem(0xa0ab));
        EXPECT(0xc, gbc.readMem(0xa202));
        // CB 6E 021B
        gbc.setState(0xc77a, 0xdaf7, 0x60d0, 0x3ae7, 0x3472, 0xc170, 0x0, 0x1);
        gbc.writeMem(0xc170, { 0xdf });
        gbc.writeMem(0xc77a, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xdaf7, gbc.sp());
        EXPECT(0xc77c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xc170));
        EXPECT(0xcb, gbc.readMem(0xc77a));
        EXPECT(0x6e, gbc.readMem(0xc77b));
        // CB 6E 021C
        gbc.setState(0x1820, 0x190a, 0x5c20, 0xbadb, 0x74d, 0x5898, 0x0, 0x0);
        gbc.writeMem(0x1820, { 0xcb, 0x6e });
        gbc.writeMem(0x5898, { 0xe5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x190a, gbc.sp());
        EXPECT(0x1822, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 021D
        gbc.setState(0xcb18, 0x7b3f, 0xf8a0, 0xcb7c, 0x2bd6, 0xd691, 0x1, 0x0);
        gbc.writeMem(0xcb18, { 0xcb, 0x6e });
        gbc.writeMem(0xd691, { 0xf });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7b3f, gbc.sp());
        EXPECT(0xcb1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb18));
        EXPECT(0x6e, gbc.readMem(0xcb19));
        EXPECT(0xf, gbc.readMem(0xd691));
        // CB 6E 021E
        gbc.setState(0xe713, 0x31b2, 0xd960, 0xcf60, 0x889c, 0xeee0, 0x0, 0x0);
        gbc.writeMem(0xe713, { 0xcb, 0x6e });
        gbc.writeMem(0xeee0, { 0x69 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x31b2, gbc.sp());
        EXPECT(0xe715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe713));
        EXPECT(0x6e, gbc.readMem(0xe714));
        EXPECT(0x69, gbc.readMem(0xeee0));
        // CB 6E 021F
        gbc.setState(0x691e, 0xb97a, 0x8860, 0x2c30, 0x3f17, 0x5b26, 0x1, 0x0);
        gbc.writeMem(0x5b26, { 0x47 });
        gbc.writeMem(0x691e, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb97a, gbc.sp());
        EXPECT(0x6920, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0220
        gbc.setState(0x35e1, 0x4b08, 0x19f0, 0x1b8a, 0x5641, 0x4606, 0x0, 0x0);
        gbc.writeMem(0x35e1, { 0xcb, 0x6e });
        gbc.writeMem(0x4606, { 0xef });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4b08, gbc.sp());
        EXPECT(0x35e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0221
        gbc.setState(0x7567, 0x997, 0x3e50, 0x3693, 0xecf8, 0x5de, 0x0, 0x1);
        gbc.writeMem(0x5de, { 0xde });
        gbc.writeMem(0x7567, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x997, gbc.sp());
        EXPECT(0x7569, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0222
        gbc.setState(0x7e9a, 0x92bb, 0xbb90, 0x14df, 0x7380, 0xf43, 0x0, 0x0);
        gbc.writeMem(0xf43, { 0x6d });
        gbc.writeMem(0x7e9a, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x92bb, gbc.sp());
        EXPECT(0x7e9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0223
        gbc.setState(0x2ff1, 0xfae, 0xce00, 0x1d19, 0xade3, 0x7913, 0x0, 0x1);
        gbc.writeMem(0x2ff1, { 0xcb, 0x6e });
        gbc.writeMem(0x7913, { 0x15 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xfae, gbc.sp());
        EXPECT(0x2ff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0224
        gbc.setState(0x5402, 0xc6e2, 0xbf00, 0x118a, 0xc697, 0x485c, 0x1, 0x1);
        gbc.writeMem(0x485c, { 0xc5 });
        gbc.writeMem(0x5402, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc6e2, gbc.sp());
        EXPECT(0x5404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0225
        gbc.setState(0x9d5c, 0xd031, 0xbbd0, 0xafcd, 0x32b5, 0x88b4, 0x0, 0x0);
        gbc.writeMem(0x88b4, { 0x74 });
        gbc.writeMem(0x9d5c, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd031, gbc.sp());
        EXPECT(0x9d5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x88b4));
        EXPECT(0xcb, gbc.readMem(0x9d5c));
        EXPECT(0x6e, gbc.readMem(0x9d5d));
        // CB 6E 0227
        gbc.setState(0xa35a, 0xd668, 0x69e0, 0x8ad3, 0xc9ad, 0xb888, 0x1, 0x1);
        gbc.writeMem(0xa35a, { 0xcb, 0x6e });
        gbc.writeMem(0xb888, { 0x60 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd668, gbc.sp());
        EXPECT(0xa35c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa35a));
        EXPECT(0x6e, gbc.readMem(0xa35b));
        EXPECT(0x60, gbc.readMem(0xb888));
        // CB 6E 0228
        gbc.setState(0x5e93, 0x8458, 0x11d0, 0xa0ac, 0x34f5, 0x576c, 0x1, 0x0);
        gbc.writeMem(0x576c, { 0xc0 });
        gbc.writeMem(0x5e93, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8458, gbc.sp());
        EXPECT(0x5e95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0229
        gbc.setState(0xdd42, 0xf1ad, 0xaa20, 0x5c5f, 0x3a12, 0x8586, 0x1, 0x1);
        gbc.writeMem(0x8586, { 0x43 });
        gbc.writeMem(0xdd42, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf1ad, gbc.sp());
        EXPECT(0xdd44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8586));
        EXPECT(0xcb, gbc.readMem(0xdd42));
        EXPECT(0x6e, gbc.readMem(0xdd43));
        // CB 6E 022A
        gbc.setState(0xc01e, 0xe68f, 0x2cc0, 0xad77, 0x3d49, 0x56fb, 0x1, 0x1);
        gbc.writeMem(0x56fb, { 0x52 });
        gbc.writeMem(0xc01e, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe68f, gbc.sp());
        EXPECT(0xc020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc01e));
        EXPECT(0x6e, gbc.readMem(0xc01f));
        // CB 6E 022B
        gbc.setState(0x3e94, 0x9c4c, 0x1b30, 0x499a, 0x6276, 0xd01b, 0x1, 0x0);
        gbc.writeMem(0x3e94, { 0xcb, 0x6e });
        gbc.writeMem(0xd01b, { 0x9c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9c4c, gbc.sp());
        EXPECT(0x3e96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd01b));
        // CB 6E 022C
        gbc.setState(0x31b0, 0x9388, 0x6d30, 0xcd3f, 0x7b73, 0x148f, 0x1, 0x0);
        gbc.writeMem(0x148f, { 0xbf });
        gbc.writeMem(0x31b0, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9388, gbc.sp());
        EXPECT(0x31b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 022D
        gbc.setState(0x311c, 0xe4dc, 0x8b0, 0xef28, 0xeee6, 0x1cfd, 0x1, 0x0);
        gbc.writeMem(0x1cfd, { 0x33 });
        gbc.writeMem(0x311c, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe4dc, gbc.sp());
        EXPECT(0x311e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 022E
        gbc.setState(0x60b4, 0x9db6, 0xd920, 0x843d, 0x4e9, 0x3709, 0x0, 0x0);
        gbc.writeMem(0x3709, { 0x68 });
        gbc.writeMem(0x60b4, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9db6, gbc.sp());
        EXPECT(0x60b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 022F
        gbc.setState(0x58e2, 0x6b47, 0x4120, 0xc178, 0x8758, 0x6e8d, 0x0, 0x0);
        gbc.writeMem(0x58e2, { 0xcb, 0x6e });
        gbc.writeMem(0x6e8d, { 0x3f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6b47, gbc.sp());
        EXPECT(0x58e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0230
        gbc.setState(0xb497, 0x230a, 0x7000, 0x67f7, 0x6a8b, 0x7b04, 0x0, 0x0);
        gbc.writeMem(0x7b04, { 0x88 });
        gbc.writeMem(0xb497, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x230a, gbc.sp());
        EXPECT(0xb499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb497));
        EXPECT(0x6e, gbc.readMem(0xb498));
        // CB 6E 0231
        gbc.setState(0x5407, 0xedbf, 0xac10, 0xbaf5, 0xb494, 0x3749, 0x1, 0x1);
        gbc.writeMem(0x3749, { 0x64 });
        gbc.writeMem(0x5407, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xedbf, gbc.sp());
        EXPECT(0x5409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0233
        gbc.setState(0x1969, 0x7e65, 0x4df0, 0x9efc, 0xd7cd, 0xc7fa, 0x1, 0x0);
        gbc.writeMem(0x1969, { 0xcb, 0x6e });
        gbc.writeMem(0xc7fa, { 0x2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7e65, gbc.sp());
        EXPECT(0x196b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xc7fa));
        // CB 6E 0234
        gbc.setState(0x3dfc, 0xc567, 0x43a0, 0x8d37, 0xa89e, 0x50fd, 0x1, 0x0);
        gbc.writeMem(0x3dfc, { 0xcb, 0x6e });
        gbc.writeMem(0x50fd, { 0xba });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc567, gbc.sp());
        EXPECT(0x3dfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0235
        gbc.setState(0xc963, 0xa015, 0xbb90, 0x4bd6, 0x3870, 0xcde5, 0x0, 0x0);
        gbc.writeMem(0xc963, { 0xcb, 0x6e });
        gbc.writeMem(0xcde5, { 0xe6 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa015, gbc.sp());
        EXPECT(0xc965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc963));
        EXPECT(0x6e, gbc.readMem(0xc964));
        EXPECT(0xe6, gbc.readMem(0xcde5));
        // CB 6E 0236
        gbc.setState(0x90d2, 0x9a73, 0x21b0, 0x3857, 0xa118, 0x4bab, 0x0, 0x1);
        gbc.writeMem(0x4bab, { 0x40 });
        gbc.writeMem(0x90d2, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9a73, gbc.sp());
        EXPECT(0x90d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90d2));
        EXPECT(0x6e, gbc.readMem(0x90d3));
        // CB 6E 0237
        gbc.setState(0xde9e, 0x5318, 0xca90, 0x5998, 0x1e04, 0xa432, 0x1, 0x1);
        gbc.writeMem(0xa432, { 0xf4 });
        gbc.writeMem(0xde9e, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5318, gbc.sp());
        EXPECT(0xdea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xa432));
        EXPECT(0xcb, gbc.readMem(0xde9e));
        EXPECT(0x6e, gbc.readMem(0xde9f));
        // CB 6E 0238
        gbc.setState(0xc102, 0xe097, 0xf030, 0x16c6, 0x5210, 0x1512, 0x1, 0x0);
        gbc.writeMem(0x1512, { 0xb1 });
        gbc.writeMem(0xc102, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe097, gbc.sp());
        EXPECT(0xc104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc102));
        EXPECT(0x6e, gbc.readMem(0xc103));
        // CB 6E 0239
        gbc.setState(0xe8ed, 0x42bf, 0xfe00, 0xf0b8, 0xa02e, 0x7b6, 0x0, 0x1);
        gbc.writeMem(0x7b6, { 0xec });
        gbc.writeMem(0xe8ed, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x42bf, gbc.sp());
        EXPECT(0xe8ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8ed));
        EXPECT(0x6e, gbc.readMem(0xe8ee));
        // CB 6E 023A
        gbc.setState(0xdb53, 0x49f4, 0x10, 0x5dae, 0x5a5e, 0xeceb, 0x1, 0x0);
        gbc.writeMem(0xdb53, { 0xcb, 0x6e });
        gbc.writeMem(0xeceb, { 0xa1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x49f4, gbc.sp());
        EXPECT(0xdb55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb53));
        EXPECT(0x6e, gbc.readMem(0xdb54));
        EXPECT(0xa1, gbc.readMem(0xeceb));
        // CB 6E 023B
        gbc.setState(0x4c0, 0x20a3, 0x7a00, 0x499a, 0xf5bb, 0x4f94, 0x0, 0x0);
        gbc.writeMem(0x4c0, { 0xcb, 0x6e });
        gbc.writeMem(0x4f94, { 0xc3 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x20a3, gbc.sp());
        EXPECT(0x4c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 023C
        gbc.setState(0xc457, 0x40d2, 0x7910, 0x2086, 0x8ca4, 0xa70f, 0x0, 0x1);
        gbc.writeMem(0xa70f, { 0xb8 });
        gbc.writeMem(0xc457, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x40d2, gbc.sp());
        EXPECT(0xc459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xa70f));
        EXPECT(0xcb, gbc.readMem(0xc457));
        EXPECT(0x6e, gbc.readMem(0xc458));
        // CB 6E 023D
        gbc.setState(0x929c, 0x19d5, 0x9a30, 0x7206, 0xcce6, 0xcb86, 0x1, 0x1);
        gbc.writeMem(0x929c, { 0xcb, 0x6e });
        gbc.writeMem(0xcb86, { 0x59 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x19d5, gbc.sp());
        EXPECT(0x929e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x929c));
        EXPECT(0x6e, gbc.readMem(0x929d));
        EXPECT(0x59, gbc.readMem(0xcb86));
        // CB 6E 023F
        gbc.setState(0xc36d, 0x8b03, 0x4320, 0x54f5, 0x3a86, 0x4514, 0x0, 0x1);
        gbc.writeMem(0x4514, { 0xe3 });
        gbc.writeMem(0xc36d, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8b03, gbc.sp());
        EXPECT(0xc36f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc36d));
        EXPECT(0x6e, gbc.readMem(0xc36e));
        // CB 6E 0240
        gbc.setState(0xc9ca, 0xdd25, 0xa6e0, 0x72d, 0x9854, 0x8711, 0x1, 0x0);
        gbc.writeMem(0x8711, { 0x3f });
        gbc.writeMem(0xc9ca, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xdd25, gbc.sp());
        EXPECT(0xc9cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8711));
        EXPECT(0xcb, gbc.readMem(0xc9ca));
        EXPECT(0x6e, gbc.readMem(0xc9cb));
        // CB 6E 0241
        gbc.setState(0x85ee, 0x6a9d, 0x7d40, 0x84f7, 0x3632, 0xcc61, 0x0, 0x1);
        gbc.writeMem(0x85ee, { 0xcb, 0x6e });
        gbc.writeMem(0xcc61, { 0xb5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6a9d, gbc.sp());
        EXPECT(0x85f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85ee));
        EXPECT(0x6e, gbc.readMem(0x85ef));
        EXPECT(0xb5, gbc.readMem(0xcc61));
        // CB 6E 0242
        gbc.setState(0xa62, 0xd273, 0xc0d0, 0x7c93, 0x9b67, 0xfb8b, 0x1, 0x1);
        gbc.writeMem(0xa62, { 0xcb, 0x6e });
        gbc.writeMem(0xfb8b, { 0x72 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd273, gbc.sp());
        EXPECT(0xa64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xfb8b));
        // CB 6E 0243
        gbc.setState(0x2b5c, 0xb27f, 0x1c40, 0xf506, 0xc32, 0xb5b9, 0x0, 0x0);
        gbc.writeMem(0x2b5c, { 0xcb, 0x6e });
        gbc.writeMem(0xb5b9, { 0x5c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb27f, gbc.sp());
        EXPECT(0x2b5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xb5b9));
        // CB 6E 0244
        gbc.setState(0x42a4, 0xeab1, 0x3f80, 0x333d, 0x7cec, 0x88f1, 0x0, 0x1);
        gbc.writeMem(0x42a4, { 0xcb, 0x6e });
        gbc.writeMem(0x88f1, { 0x73 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xeab1, gbc.sp());
        EXPECT(0x42a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x88f1));
        // CB 6E 0246
        gbc.setState(0x569a, 0x7b1b, 0x1d30, 0xdd5d, 0xc652, 0xe78, 0x1, 0x0);
        gbc.writeMem(0xe78, { 0x3f });
        gbc.writeMem(0x569a, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7b1b, gbc.sp());
        EXPECT(0x569c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0247
        gbc.setState(0xe2f8, 0xc1e3, 0x4270, 0x546c, 0x989e, 0x3d1, 0x1, 0x1);
        gbc.writeMem(0x3d1, { 0xf9 });
        gbc.writeMem(0xe2f8, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc1e3, gbc.sp());
        EXPECT(0xe2fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2f8));
        EXPECT(0x6e, gbc.readMem(0xe2f9));
        // CB 6E 0248
        gbc.setState(0x7d2, 0xa9b5, 0x13e0, 0xfef4, 0x3711, 0x222f, 0x1, 0x0);
        gbc.writeMem(0x7d2, { 0xcb, 0x6e });
        gbc.writeMem(0x222f, { 0x39 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa9b5, gbc.sp());
        EXPECT(0x7d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0249
        gbc.setState(0xc5c7, 0xc72f, 0xe310, 0x5f96, 0x1826, 0x13f3, 0x0, 0x1);
        gbc.writeMem(0x13f3, { 0x6a });
        gbc.writeMem(0xc5c7, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc72f, gbc.sp());
        EXPECT(0xc5c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5c7));
        EXPECT(0x6e, gbc.readMem(0xc5c8));
        // CB 6E 024A
        gbc.setState(0x257c, 0x90fe, 0xc810, 0x142b, 0x9c8, 0x79f6, 0x0, 0x1);
        gbc.writeMem(0x257c, { 0xcb, 0x6e });
        gbc.writeMem(0x79f6, { 0x5c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x90fe, gbc.sp());
        EXPECT(0x257e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 024B
        gbc.setState(0xca08, 0xc1d, 0x5cd0, 0x45fc, 0x54e4, 0x3cb, 0x0, 0x0);
        gbc.writeMem(0x3cb, { 0xf6 });
        gbc.writeMem(0xca08, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc1d, gbc.sp());
        EXPECT(0xca0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca08));
        EXPECT(0x6e, gbc.readMem(0xca09));
        // CB 6E 024C
        gbc.setState(0xea30, 0x700a, 0xf3c0, 0x4caa, 0x4901, 0x4877, 0x1, 0x0);
        gbc.writeMem(0x4877, { 0x98 });
        gbc.writeMem(0xea30, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x700a, gbc.sp());
        EXPECT(0xea32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea30));
        EXPECT(0x6e, gbc.readMem(0xea31));
        // CB 6E 024D
        gbc.setState(0x92ce, 0xf857, 0x4c70, 0x2d34, 0xea94, 0x236a, 0x1, 0x0);
        gbc.writeMem(0x236a, { 0x87 });
        gbc.writeMem(0x92ce, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf857, gbc.sp());
        EXPECT(0x92d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ce));
        EXPECT(0x6e, gbc.readMem(0x92cf));
        // CB 6E 024F
        gbc.setState(0x300c, 0xaf9c, 0x1330, 0x320b, 0x7503, 0x1d41, 0x1, 0x1);
        gbc.writeMem(0x1d41, { 0x84 });
        gbc.writeMem(0x300c, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xaf9c, gbc.sp());
        EXPECT(0x300e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0250
        gbc.setState(0x504b, 0xceea, 0x9c60, 0x6871, 0x4efa, 0x82c9, 0x0, 0x1);
        gbc.writeMem(0x504b, { 0xcb, 0x6e });
        gbc.writeMem(0x82c9, { 0xd4 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xceea, gbc.sp());
        EXPECT(0x504d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x82c9));
        // CB 6E 0251
        gbc.setState(0xc8f0, 0xf121, 0xf9f0, 0x1d77, 0xa87f, 0x5031, 0x1, 0x1);
        gbc.writeMem(0x5031, { 0x3e });
        gbc.writeMem(0xc8f0, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf121, gbc.sp());
        EXPECT(0xc8f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8f0));
        EXPECT(0x6e, gbc.readMem(0xc8f1));
        // CB 6E 0252
        gbc.setState(0xca69, 0xfac9, 0xd6e0, 0x8b8e, 0x41b4, 0x5a30, 0x1, 0x0);
        gbc.writeMem(0x5a30, { 0x3c });
        gbc.writeMem(0xca69, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xfac9, gbc.sp());
        EXPECT(0xca6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca69));
        EXPECT(0x6e, gbc.readMem(0xca6a));
        // CB 6E 0253
        gbc.setState(0x4fe, 0x786, 0xcd80, 0x6e6f, 0x18e8, 0xcfcd, 0x1, 0x0);
        gbc.writeMem(0x4fe, { 0xcb, 0x6e });
        gbc.writeMem(0xcfcd, { 0xe8 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x786, gbc.sp());
        EXPECT(0x500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xcfcd));
        // CB 6E 0254
        gbc.setState(0x16f, 0x47c3, 0xdf0, 0x4937, 0x463b, 0x28ea, 0x1, 0x1);
        gbc.writeMem(0x16f, { 0xcb, 0x6e });
        gbc.writeMem(0x28ea, { 0x3a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x47c3, gbc.sp());
        EXPECT(0x171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0255
        gbc.setState(0x5a88, 0x24, 0x6470, 0x6fb4, 0x2a68, 0xd491, 0x1, 0x1);
        gbc.writeMem(0x5a88, { 0xcb, 0x6e });
        gbc.writeMem(0xd491, { 0xc7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x24, gbc.sp());
        EXPECT(0x5a8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xd491));
        // CB 6E 0256
        gbc.setState(0xedf0, 0xca1d, 0x2210, 0x3c57, 0xe96b, 0x3a21, 0x0, 0x0);
        gbc.writeMem(0x3a21, { 0xc8 });
        gbc.writeMem(0xedf0, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xca1d, gbc.sp());
        EXPECT(0xedf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedf0));
        EXPECT(0x6e, gbc.readMem(0xedf1));
        // CB 6E 0257
        gbc.setState(0xb33c, 0x942a, 0xfee0, 0x5254, 0x8ecd, 0x1e19, 0x0, 0x1);
        gbc.writeMem(0x1e19, { 0xef });
        gbc.writeMem(0xb33c, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x942a, gbc.sp());
        EXPECT(0xb33e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb33c));
        EXPECT(0x6e, gbc.readMem(0xb33d));
        // CB 6E 0258
        gbc.setState(0x9cfb, 0x32cd, 0x8b40, 0x395c, 0x7b1c, 0xb3f8, 0x0, 0x0);
        gbc.writeMem(0x9cfb, { 0xcb, 0x6e });
        gbc.writeMem(0xb3f8, { 0x6b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x32cd, gbc.sp());
        EXPECT(0x9cfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cfb));
        EXPECT(0x6e, gbc.readMem(0x9cfc));
        EXPECT(0x6b, gbc.readMem(0xb3f8));
        // CB 6E 0259
        gbc.setState(0x3bec, 0x68f7, 0xea50, 0xbe1c, 0x3d91, 0xac0, 0x0, 0x1);
        gbc.writeMem(0xac0, { 0x78 });
        gbc.writeMem(0x3bec, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x68f7, gbc.sp());
        EXPECT(0x3bee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 025A
        gbc.setState(0x7411, 0x892e, 0x9240, 0x8ad7, 0x9ffe, 0x711e, 0x1, 0x1);
        gbc.writeMem(0x711e, { 0xe2 });
        gbc.writeMem(0x7411, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x892e, gbc.sp());
        EXPECT(0x7413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 025B
        gbc.setState(0x7baf, 0x74a, 0xb800, 0x3cdb, 0x4470, 0x2c30, 0x0, 0x0);
        gbc.writeMem(0x2c30, { 0x49 });
        gbc.writeMem(0x7baf, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x74a, gbc.sp());
        EXPECT(0x7bb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 025C
        gbc.setState(0x654e, 0x7d08, 0xf5c0, 0x6129, 0x4ab3, 0x78c5, 0x1, 0x1);
        gbc.writeMem(0x654e, { 0xcb, 0x6e });
        gbc.writeMem(0x78c5, { 0xb2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7d08, gbc.sp());
        EXPECT(0x6550, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 025D
        gbc.setState(0x58e3, 0xdc75, 0xc690, 0xe129, 0x1312, 0x55a7, 0x1, 0x0);
        gbc.writeMem(0x55a7, { 0x42 });
        gbc.writeMem(0x58e3, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xdc75, gbc.sp());
        EXPECT(0x58e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 025F
        gbc.setState(0xb72e, 0xc399, 0xb1c0, 0xf2ac, 0x9bcd, 0xe593, 0x0, 0x1);
        gbc.writeMem(0xb72e, { 0xcb, 0x6e });
        gbc.writeMem(0xe593, { 0x2d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc399, gbc.sp());
        EXPECT(0xb730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb72e));
        EXPECT(0x6e, gbc.readMem(0xb72f));
        EXPECT(0x2d, gbc.readMem(0xe593));
        // CB 6E 0261
        gbc.setState(0x9539, 0x3e11, 0x1f0, 0x31eb, 0x357a, 0x1b21, 0x1, 0x1);
        gbc.writeMem(0x1b21, { 0x1b });
        gbc.writeMem(0x9539, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3e11, gbc.sp());
        EXPECT(0x953b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9539));
        EXPECT(0x6e, gbc.readMem(0x953a));
        // CB 6E 0262
        gbc.setState(0x537e, 0xc416, 0x9200, 0xe679, 0x9df7, 0x7857, 0x0, 0x0);
        gbc.writeMem(0x537e, { 0xcb, 0x6e });
        gbc.writeMem(0x7857, { 0x39 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc416, gbc.sp());
        EXPECT(0x5380, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0263
        gbc.setState(0x8dd, 0x9cfd, 0x8c20, 0xc732, 0x91df, 0x29, 0x0, 0x1);
        gbc.writeMem(0x29, { 0xf0 });
        gbc.writeMem(0x8dd, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9cfd, gbc.sp());
        EXPECT(0x8df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0264
        gbc.setState(0x929b, 0xeb5a, 0x6780, 0xf667, 0x8b69, 0x5128, 0x1, 0x0);
        gbc.writeMem(0x5128, { 0xee });
        gbc.writeMem(0x929b, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xeb5a, gbc.sp());
        EXPECT(0x929d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x929b));
        EXPECT(0x6e, gbc.readMem(0x929c));
        // CB 6E 0265
        gbc.setState(0x6e00, 0x6ac, 0x5390, 0xdc7e, 0xf3d9, 0x9c43, 0x1, 0x0);
        gbc.writeMem(0x6e00, { 0xcb, 0x6e });
        gbc.writeMem(0x9c43, { 0xf8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6ac, gbc.sp());
        EXPECT(0x6e02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9c43));
        // CB 6E 0266
        gbc.setState(0x7a2d, 0x6256, 0xabd0, 0x6cd7, 0x3c0c, 0xc701, 0x0, 0x1);
        gbc.writeMem(0x7a2d, { 0xcb, 0x6e });
        gbc.writeMem(0xc701, { 0x6f });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6256, gbc.sp());
        EXPECT(0x7a2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xc701));
        // CB 6E 0268
        gbc.setState(0x80c7, 0x6252, 0x15e0, 0x502, 0x4b, 0x94b1, 0x0, 0x0);
        gbc.writeMem(0x80c7, { 0xcb, 0x6e });
        gbc.writeMem(0x94b1, { 0xad });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6252, gbc.sp());
        EXPECT(0x80c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80c7));
        EXPECT(0x6e, gbc.readMem(0x80c8));
        EXPECT(0xad, gbc.readMem(0x94b1));
        // CB 6E 0269
        gbc.setState(0x738a, 0xa129, 0x31a0, 0x3e73, 0x96c5, 0x570e, 0x1, 0x0);
        gbc.writeMem(0x570e, { 0xe8 });
        gbc.writeMem(0x738a, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa129, gbc.sp());
        EXPECT(0x738c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 026A
        gbc.setState(0xbe34, 0x7a5e, 0x4590, 0x4e3c, 0x9e7, 0xe2e7, 0x1, 0x0);
        gbc.writeMem(0xbe34, { 0xcb, 0x6e });
        gbc.writeMem(0xe2e7, { 0xbb });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7a5e, gbc.sp());
        EXPECT(0xbe36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe34));
        EXPECT(0x6e, gbc.readMem(0xbe35));
        EXPECT(0xbb, gbc.readMem(0xe2e7));
        // CB 6E 026B
        gbc.setState(0x7265, 0x5550, 0x1a30, 0x8fd8, 0x40c4, 0x64d8, 0x1, 0x1);
        gbc.writeMem(0x64d8, { 0xff });
        gbc.writeMem(0x7265, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5550, gbc.sp());
        EXPECT(0x7267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 026C
        gbc.setState(0x1027, 0xbd73, 0x23a0, 0x7ce8, 0xc49c, 0x82d0, 0x1, 0x1);
        gbc.writeMem(0x1027, { 0xcb, 0x6e });
        gbc.writeMem(0x82d0, { 0x33 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbd73, gbc.sp());
        EXPECT(0x1029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x82d0));
        // CB 6E 026D
        gbc.setState(0x91cf, 0x8134, 0xf90, 0x6c24, 0x3248, 0x5f1c, 0x1, 0x1);
        gbc.writeMem(0x5f1c, { 0xb });
        gbc.writeMem(0x91cf, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8134, gbc.sp());
        EXPECT(0x91d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91cf));
        EXPECT(0x6e, gbc.readMem(0x91d0));
        // CB 6E 026E
        gbc.setState(0xa762, 0xbaf9, 0x4cf0, 0x32cd, 0x8b94, 0x7892, 0x1, 0x0);
        gbc.writeMem(0x7892, { 0x93 });
        gbc.writeMem(0xa762, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xbaf9, gbc.sp());
        EXPECT(0xa764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa762));
        EXPECT(0x6e, gbc.readMem(0xa763));
        // CB 6E 026F
        gbc.setState(0x8927, 0xb736, 0x69b0, 0x3d9c, 0xfda5, 0x1bf7, 0x0, 0x1);
        gbc.writeMem(0x1bf7, { 0x90 });
        gbc.writeMem(0x8927, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb736, gbc.sp());
        EXPECT(0x8929, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8927));
        EXPECT(0x6e, gbc.readMem(0x8928));
        // CB 6E 0270
        gbc.setState(0xca37, 0x3cef, 0x24c0, 0x36ed, 0xfa96, 0x2e56, 0x0, 0x1);
        gbc.writeMem(0x2e56, { 0x59 });
        gbc.writeMem(0xca37, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3cef, gbc.sp());
        EXPECT(0xca39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca37));
        EXPECT(0x6e, gbc.readMem(0xca38));
        // CB 6E 0271
        gbc.setState(0xc85d, 0x218a, 0xb530, 0x4fe6, 0xe4e5, 0xc5ba, 0x0, 0x1);
        gbc.writeMem(0xc5ba, { 0x78 });
        gbc.writeMem(0xc85d, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x218a, gbc.sp());
        EXPECT(0xc85f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc5ba));
        EXPECT(0xcb, gbc.readMem(0xc85d));
        EXPECT(0x6e, gbc.readMem(0xc85e));
        // CB 6E 0272
        gbc.setState(0xade, 0x2c03, 0x9e20, 0x8a, 0xb6c1, 0xa6d7, 0x1, 0x0);
        gbc.writeMem(0xade, { 0xcb, 0x6e });
        gbc.writeMem(0xa6d7, { 0x58 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2c03, gbc.sp());
        EXPECT(0xae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa6d7));
        // CB 6E 0273
        gbc.setState(0xb3a3, 0xa2a2, 0x670, 0x8a55, 0x6ae2, 0x4173, 0x0, 0x0);
        gbc.writeMem(0x4173, { 0x7f });
        gbc.writeMem(0xb3a3, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa2a2, gbc.sp());
        EXPECT(0xb3a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3a3));
        EXPECT(0x6e, gbc.readMem(0xb3a4));
        // CB 6E 0274
        gbc.setState(0xeab, 0xe670, 0x8720, 0xe5b3, 0x388f, 0x4950, 0x0, 0x0);
        gbc.writeMem(0xeab, { 0xcb, 0x6e });
        gbc.writeMem(0x4950, { 0x57 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe670, gbc.sp());
        EXPECT(0xead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0275
        gbc.setState(0x621e, 0xe7f1, 0x1180, 0xed4c, 0xf182, 0x99ae, 0x0, 0x1);
        gbc.writeMem(0x621e, { 0xcb, 0x6e });
        gbc.writeMem(0x99ae, { 0xbb });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe7f1, gbc.sp());
        EXPECT(0x6220, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x99ae));
        // CB 6E 0277
        gbc.setState(0xb6da, 0x87a6, 0x4220, 0xa00e, 0xb731, 0x1ee5, 0x1, 0x0);
        gbc.writeMem(0x1ee5, { 0xd });
        gbc.writeMem(0xb6da, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x87a6, gbc.sp());
        EXPECT(0xb6dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6da));
        EXPECT(0x6e, gbc.readMem(0xb6db));
        // CB 6E 0278
        gbc.setState(0xe423, 0x2246, 0x4320, 0xe463, 0xe3d8, 0xcb57, 0x0, 0x0);
        gbc.writeMem(0xcb57, { 0x36 });
        gbc.writeMem(0xe423, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2246, gbc.sp());
        EXPECT(0xe425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xcb57));
        EXPECT(0xcb, gbc.readMem(0xe423));
        EXPECT(0x6e, gbc.readMem(0xe424));
        // CB 6E 0279
        gbc.setState(0xa64a, 0x1b02, 0xe710, 0xdd43, 0x3611, 0xcebb, 0x0, 0x1);
        gbc.writeMem(0xa64a, { 0xcb, 0x6e });
        gbc.writeMem(0xcebb, { 0x7f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1b02, gbc.sp());
        EXPECT(0xa64c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa64a));
        EXPECT(0x6e, gbc.readMem(0xa64b));
        EXPECT(0x7f, gbc.readMem(0xcebb));
        // CB 6E 027A
        gbc.setState(0xc160, 0xcb0a, 0x47f0, 0xa73b, 0x721f, 0xb0ad, 0x0, 0x1);
        gbc.writeMem(0xb0ad, { 0xf2 });
        gbc.writeMem(0xc160, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xcb0a, gbc.sp());
        EXPECT(0xc162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xb0ad));
        EXPECT(0xcb, gbc.readMem(0xc160));
        EXPECT(0x6e, gbc.readMem(0xc161));
        // CB 6E 027B
        gbc.setState(0x5814, 0x5dd7, 0xdfd0, 0xd277, 0xfc7c, 0x531d, 0x1, 0x1);
        gbc.writeMem(0x531d, { 0x70 });
        gbc.writeMem(0x5814, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5dd7, gbc.sp());
        EXPECT(0x5816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 027C
        gbc.setState(0x4ef, 0xf0f8, 0xc590, 0xefc7, 0xe591, 0x716d, 0x1, 0x1);
        gbc.writeMem(0x4ef, { 0xcb, 0x6e });
        gbc.writeMem(0x716d, { 0x40 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf0f8, gbc.sp());
        EXPECT(0x4f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 027E
        gbc.setState(0x7055, 0xc80e, 0x2bf0, 0xd874, 0xdbff, 0xb7bc, 0x0, 0x1);
        gbc.writeMem(0x7055, { 0xcb, 0x6e });
        gbc.writeMem(0xb7bc, { 0xb9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc80e, gbc.sp());
        EXPECT(0x7057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb7bc));
        // CB 6E 027F
        gbc.setState(0x74e4, 0xe443, 0xcbb0, 0x372b, 0x9d0e, 0x5099, 0x1, 0x1);
        gbc.writeMem(0x5099, { 0x0 });
        gbc.writeMem(0x74e4, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe443, gbc.sp());
        EXPECT(0x74e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0280
        gbc.setState(0x6750, 0x16c4, 0xb740, 0x38fc, 0xb6f7, 0x63e4, 0x1, 0x0);
        gbc.writeMem(0x63e4, { 0xf4 });
        gbc.writeMem(0x6750, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x16c4, gbc.sp());
        EXPECT(0x6752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0281
        gbc.setState(0xd357, 0xf238, 0x1890, 0xae0d, 0x428b, 0x91a1, 0x0, 0x1);
        gbc.writeMem(0x91a1, { 0xe8 });
        gbc.writeMem(0xd357, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf238, gbc.sp());
        EXPECT(0xd359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0x91a1));
        EXPECT(0xcb, gbc.readMem(0xd357));
        EXPECT(0x6e, gbc.readMem(0xd358));
        // CB 6E 0282
        gbc.setState(0x9571, 0x5d97, 0x8bd0, 0x9f5d, 0xdb32, 0x2a74, 0x1, 0x0);
        gbc.writeMem(0x2a74, { 0x52 });
        gbc.writeMem(0x9571, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5d97, gbc.sp());
        EXPECT(0x9573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9571));
        EXPECT(0x6e, gbc.readMem(0x9572));
        // CB 6E 0283
        gbc.setState(0xbf0f, 0x5006, 0xc520, 0xe194, 0x255b, 0xca0a, 0x0, 0x0);
        gbc.writeMem(0xbf0f, { 0xcb, 0x6e });
        gbc.writeMem(0xca0a, { 0x38 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5006, gbc.sp());
        EXPECT(0xbf11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf0f));
        EXPECT(0x6e, gbc.readMem(0xbf10));
        EXPECT(0x38, gbc.readMem(0xca0a));
        // CB 6E 0284
        gbc.setState(0xd47a, 0x6927, 0x7f30, 0x77e5, 0x308f, 0x2e0f, 0x1, 0x1);
        gbc.writeMem(0x2e0f, { 0xbd });
        gbc.writeMem(0xd47a, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6927, gbc.sp());
        EXPECT(0xd47c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd47a));
        EXPECT(0x6e, gbc.readMem(0xd47b));
        // CB 6E 0285
        gbc.setState(0x6ba6, 0x5e37, 0x1e00, 0x2fe3, 0xe0e6, 0x8d9c, 0x0, 0x1);
        gbc.writeMem(0x6ba6, { 0xcb, 0x6e });
        gbc.writeMem(0x8d9c, { 0xab });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5e37, gbc.sp());
        EXPECT(0x6ba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0x8d9c));
        // CB 6E 0286
        gbc.setState(0x9d8, 0x5baf, 0xeb90, 0x4858, 0xf8b1, 0x7a9d, 0x1, 0x0);
        gbc.writeMem(0x9d8, { 0xcb, 0x6e });
        gbc.writeMem(0x7a9d, { 0x2e });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5baf, gbc.sp());
        EXPECT(0x9da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0287
        gbc.setState(0x40e3, 0x12c3, 0x9d30, 0x55a4, 0xf8ea, 0x371c, 0x0, 0x0);
        gbc.writeMem(0x371c, { 0xf5 });
        gbc.writeMem(0x40e3, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x12c3, gbc.sp());
        EXPECT(0x40e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0288
        gbc.setState(0xb660, 0xe090, 0x3c0, 0x5086, 0xe36f, 0xe6af, 0x1, 0x1);
        gbc.writeMem(0xb660, { 0xcb, 0x6e });
        gbc.writeMem(0xe6af, { 0xd });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe090, gbc.sp());
        EXPECT(0xb662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb660));
        EXPECT(0x6e, gbc.readMem(0xb661));
        EXPECT(0xd, gbc.readMem(0xe6af));
        // CB 6E 0289
        gbc.setState(0xd81a, 0xd621, 0x6a80, 0xbb08, 0x103, 0xce0, 0x0, 0x1);
        gbc.writeMem(0xce0, { 0x42 });
        gbc.writeMem(0xd81a, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd621, gbc.sp());
        EXPECT(0xd81c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd81a));
        EXPECT(0x6e, gbc.readMem(0xd81b));
        // CB 6E 028A
        gbc.setState(0x21eb, 0x28c6, 0x4d80, 0xe337, 0xef21, 0x67de, 0x1, 0x0);
        gbc.writeMem(0x21eb, { 0xcb, 0x6e });
        gbc.writeMem(0x67de, { 0x81 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x28c6, gbc.sp());
        EXPECT(0x21ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 028B
        gbc.setState(0xeae5, 0x3e3b, 0xdeb0, 0xc528, 0x6144, 0x6468, 0x0, 0x1);
        gbc.writeMem(0x6468, { 0xc6 });
        gbc.writeMem(0xeae5, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3e3b, gbc.sp());
        EXPECT(0xeae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeae5));
        EXPECT(0x6e, gbc.readMem(0xeae6));
        // CB 6E 028C
        gbc.setState(0x2334, 0x91e3, 0xff60, 0xcdf9, 0xc185, 0x40fe, 0x0, 0x1);
        gbc.writeMem(0x2334, { 0xcb, 0x6e });
        gbc.writeMem(0x40fe, { 0xa0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x91e3, gbc.sp());
        EXPECT(0x2336, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 028D
        gbc.setState(0xb364, 0x23c1, 0xdc70, 0xf1b3, 0xd043, 0x6adb, 0x1, 0x0);
        gbc.writeMem(0x6adb, { 0x67 });
        gbc.writeMem(0xb364, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x23c1, gbc.sp());
        EXPECT(0xb366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb364));
        EXPECT(0x6e, gbc.readMem(0xb365));
        // CB 6E 028E
        gbc.setState(0x613d, 0x7976, 0x72e0, 0x1a9a, 0xe956, 0xeba1, 0x0, 0x1);
        gbc.writeMem(0x613d, { 0xcb, 0x6e });
        gbc.writeMem(0xeba1, { 0x8a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7976, gbc.sp());
        EXPECT(0x613f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xeba1));
        // CB 6E 028F
        gbc.setState(0x211b, 0x299, 0xedd0, 0x6b8d, 0xf17c, 0x8e96, 0x0, 0x0);
        gbc.writeMem(0x211b, { 0xcb, 0x6e });
        gbc.writeMem(0x8e96, { 0x31 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x299, gbc.sp());
        EXPECT(0x211d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8e96));
        // CB 6E 0290
        gbc.setState(0xce28, 0x3c42, 0xfea0, 0x5594, 0xdf0, 0xd3e, 0x0, 0x0);
        gbc.writeMem(0xd3e, { 0x59 });
        gbc.writeMem(0xce28, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3c42, gbc.sp());
        EXPECT(0xce2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce28));
        EXPECT(0x6e, gbc.readMem(0xce29));
        // CB 6E 0291
        gbc.setState(0xd7d8, 0x505, 0x2b50, 0x4dcd, 0x16ed, 0x2f53, 0x0, 0x1);
        gbc.writeMem(0x2f53, { 0xb1 });
        gbc.writeMem(0xd7d8, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x505, gbc.sp());
        EXPECT(0xd7da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7d8));
        EXPECT(0x6e, gbc.readMem(0xd7d9));
        // CB 6E 0292
        gbc.setState(0x23dc, 0xe5d8, 0xea10, 0xe909, 0x974a, 0x3115, 0x1, 0x1);
        gbc.writeMem(0x23dc, { 0xcb, 0x6e });
        gbc.writeMem(0x3115, { 0xb7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe5d8, gbc.sp());
        EXPECT(0x23de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0293
        gbc.setState(0x22ba, 0xbe30, 0xe5c0, 0x6140, 0x4fcf, 0xe0e7, 0x0, 0x0);
        gbc.writeMem(0x22ba, { 0xcb, 0x6e });
        gbc.writeMem(0xe0e7, { 0xc8 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xbe30, gbc.sp());
        EXPECT(0x22bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe0e7));
        // CB 6E 0294
        gbc.setState(0x27c6, 0x64ab, 0x55b0, 0xd37, 0x1457, 0xf87a, 0x1, 0x1);
        gbc.writeMem(0x27c6, { 0xcb, 0x6e });
        gbc.writeMem(0xf87a, { 0x5c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x64ab, gbc.sp());
        EXPECT(0x27c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xf87a));
        // CB 6E 0295
        gbc.setState(0x847, 0xb72f, 0xa370, 0xfaaa, 0x8729, 0xac41, 0x1, 0x1);
        gbc.writeMem(0x847, { 0xcb, 0x6e });
        gbc.writeMem(0xac41, { 0xfe });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xb72f, gbc.sp());
        EXPECT(0x849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xac41));
        // CB 6E 0296
        gbc.setState(0x3aba, 0xabab, 0xb410, 0x5ec5, 0x3a20, 0x2a57, 0x0, 0x0);
        gbc.writeMem(0x2a57, { 0xc0 });
        gbc.writeMem(0x3aba, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xabab, gbc.sp());
        EXPECT(0x3abc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0297
        gbc.setState(0x75af, 0x7b5d, 0xe670, 0xbfa0, 0x6283, 0x188a, 0x0, 0x0);
        gbc.writeMem(0x188a, { 0x64 });
        gbc.writeMem(0x75af, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7b5d, gbc.sp());
        EXPECT(0x75b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0298
        gbc.setState(0x23e9, 0x43a8, 0x2290, 0xb012, 0x4f03, 0xfaf9, 0x0, 0x0);
        gbc.writeMem(0x23e9, { 0xcb, 0x6e });
        gbc.writeMem(0xfaf9, { 0x64 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x43a8, gbc.sp());
        EXPECT(0x23eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xfaf9));
        // CB 6E 0299
        gbc.setState(0xa68d, 0x3b73, 0x7920, 0xd2e1, 0x472e, 0x8f67, 0x0, 0x0);
        gbc.writeMem(0x8f67, { 0x30 });
        gbc.writeMem(0xa68d, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3b73, gbc.sp());
        EXPECT(0xa68f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x8f67));
        EXPECT(0xcb, gbc.readMem(0xa68d));
        EXPECT(0x6e, gbc.readMem(0xa68e));
        // CB 6E 029A
        gbc.setState(0x24a4, 0x3404, 0x9140, 0x90fc, 0xe070, 0xdfd3, 0x1, 0x0);
        gbc.writeMem(0x24a4, { 0xcb, 0x6e });
        gbc.writeMem(0xdfd3, { 0xbe });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3404, gbc.sp());
        EXPECT(0x24a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xdfd3));
        // CB 6E 029B
        gbc.setState(0x1e57, 0x9fdf, 0x3c80, 0xe345, 0xf50, 0x9784, 0x0, 0x1);
        gbc.writeMem(0x1e57, { 0xcb, 0x6e });
        gbc.writeMem(0x9784, { 0xfd });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9fdf, gbc.sp());
        EXPECT(0x1e59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0x9784));
        // CB 6E 029C
        gbc.setState(0x71f9, 0x3885, 0x710, 0xbbde, 0x8dd, 0x2fbb, 0x0, 0x1);
        gbc.writeMem(0x2fbb, { 0x52 });
        gbc.writeMem(0x71f9, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3885, gbc.sp());
        EXPECT(0x71fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 029D
        gbc.setState(0x7e01, 0x60ba, 0x9370, 0x6253, 0x765f, 0x8f7e, 0x1, 0x1);
        gbc.writeMem(0x7e01, { 0xcb, 0x6e });
        gbc.writeMem(0x8f7e, { 0xe6 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x60ba, gbc.sp());
        EXPECT(0x7e03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8f7e));
        // CB 6E 029E
        gbc.setState(0x707e, 0xc3ca, 0x6180, 0xb85, 0xe2c0, 0xd0d0, 0x0, 0x1);
        gbc.writeMem(0x707e, { 0xcb, 0x6e });
        gbc.writeMem(0xd0d0, { 0xae });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc3ca, gbc.sp());
        EXPECT(0x7080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xd0d0));
        // CB 6E 029F
        gbc.setState(0xe293, 0x4c9d, 0x4dc0, 0x297f, 0x58d7, 0xf04c, 0x1, 0x1);
        gbc.writeMem(0xe293, { 0xcb, 0x6e });
        gbc.writeMem(0xf04c, { 0x4a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4c9d, gbc.sp());
        EXPECT(0xe295, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe293));
        EXPECT(0x6e, gbc.readMem(0xe294));
        EXPECT(0x4a, gbc.readMem(0xf04c));
        // CB 6E 02A0
        gbc.setState(0x55f5, 0xdd56, 0xb7f0, 0xb5ba, 0xa28d, 0xb77e, 0x1, 0x0);
        gbc.writeMem(0x55f5, { 0xcb, 0x6e });
        gbc.writeMem(0xb77e, { 0x24 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xdd56, gbc.sp());
        EXPECT(0x55f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xb77e));
        // CB 6E 02A1
        gbc.setState(0xd264, 0xe20a, 0xe70, 0x85c, 0xdb8b, 0xa2dc, 0x0, 0x1);
        gbc.writeMem(0xa2dc, { 0x37 });
        gbc.writeMem(0xd264, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe20a, gbc.sp());
        EXPECT(0xd266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa2dc));
        EXPECT(0xcb, gbc.readMem(0xd264));
        EXPECT(0x6e, gbc.readMem(0xd265));
        // CB 6E 02A2
        gbc.setState(0xc39e, 0xa1d6, 0x7810, 0xecee, 0x7092, 0x7718, 0x0, 0x1);
        gbc.writeMem(0x7718, { 0x2b });
        gbc.writeMem(0xc39e, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa1d6, gbc.sp());
        EXPECT(0xc3a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc39e));
        EXPECT(0x6e, gbc.readMem(0xc39f));
        // CB 6E 02A3
        gbc.setState(0xe2ec, 0xdadc, 0x8d30, 0x6b37, 0xadb3, 0x5693, 0x1, 0x0);
        gbc.writeMem(0x5693, { 0x58 });
        gbc.writeMem(0xe2ec, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xdadc, gbc.sp());
        EXPECT(0xe2ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2ec));
        EXPECT(0x6e, gbc.readMem(0xe2ed));
        // CB 6E 02A4
        gbc.setState(0x7cf8, 0x85eb, 0xecc0, 0xe62f, 0xdcb8, 0xb4bd, 0x0, 0x0);
        gbc.writeMem(0x7cf8, { 0xcb, 0x6e });
        gbc.writeMem(0xb4bd, { 0xc2 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x85eb, gbc.sp());
        EXPECT(0x7cfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb4bd));
        // CB 6E 02A5
        gbc.setState(0xd29a, 0x61fd, 0x1ec0, 0xcd64, 0x7a, 0x7f80, 0x1, 0x1);
        gbc.writeMem(0x7f80, { 0xc1 });
        gbc.writeMem(0xd29a, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x61fd, gbc.sp());
        EXPECT(0xd29c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd29a));
        EXPECT(0x6e, gbc.readMem(0xd29b));
        // CB 6E 02A7
        gbc.setState(0xea80, 0xf6f4, 0xeb30, 0xd450, 0x4ba2, 0x967, 0x0, 0x1);
        gbc.writeMem(0x967, { 0xef });
        gbc.writeMem(0xea80, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf6f4, gbc.sp());
        EXPECT(0xea82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea80));
        EXPECT(0x6e, gbc.readMem(0xea81));
        // CB 6E 02A8
        gbc.setState(0x2574, 0xfa30, 0x1130, 0xa268, 0xa831, 0x5039, 0x0, 0x1);
        gbc.writeMem(0x2574, { 0xcb, 0x6e });
        gbc.writeMem(0x5039, { 0xcc });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xfa30, gbc.sp());
        EXPECT(0x2576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 02A9
        gbc.setState(0x8dff, 0x4e9f, 0x4240, 0x8bd3, 0xc220, 0xa423, 0x1, 0x1);
        gbc.writeMem(0x8dff, { 0xcb, 0x6e });
        gbc.writeMem(0xa423, { 0x3b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4e9f, gbc.sp());
        EXPECT(0x8e01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dff));
        EXPECT(0x6e, gbc.readMem(0x8e00));
        EXPECT(0x3b, gbc.readMem(0xa423));
        // CB 6E 02AA
        gbc.setState(0xbd57, 0xfd44, 0xb6f0, 0xecf9, 0x3c6c, 0xb6ac, 0x1, 0x1);
        gbc.writeMem(0xb6ac, { 0x3f });
        gbc.writeMem(0xbd57, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xfd44, gbc.sp());
        EXPECT(0xbd59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb6ac));
        EXPECT(0xcb, gbc.readMem(0xbd57));
        EXPECT(0x6e, gbc.readMem(0xbd58));
        // CB 6E 02AB
        gbc.setState(0x9a5d, 0x6535, 0x6070, 0x9e02, 0xe941, 0xf1c1, 0x1, 0x1);
        gbc.writeMem(0x9a5d, { 0xcb, 0x6e });
        gbc.writeMem(0xf1c1, { 0x1d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6535, gbc.sp());
        EXPECT(0x9a5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a5d));
        EXPECT(0x6e, gbc.readMem(0x9a5e));
        EXPECT(0x1d, gbc.readMem(0xf1c1));
        // CB 6E 02AC
        gbc.setState(0x2d57, 0xc956, 0xcc60, 0x3738, 0x3045, 0x4b00, 0x0, 0x0);
        gbc.writeMem(0x2d57, { 0xcb, 0x6e });
        gbc.writeMem(0x4b00, { 0x4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc956, gbc.sp());
        EXPECT(0x2d59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 02AD
        gbc.setState(0xcaad, 0xca30, 0xbef0, 0x6586, 0xbb82, 0xa32b, 0x1, 0x1);
        gbc.writeMem(0xa32b, { 0x23 });
        gbc.writeMem(0xcaad, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xca30, gbc.sp());
        EXPECT(0xcaaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xa32b));
        EXPECT(0xcb, gbc.readMem(0xcaad));
        EXPECT(0x6e, gbc.readMem(0xcaae));
        // CB 6E 02AE
        gbc.setState(0x79f9, 0xa74c, 0x17c0, 0xaa5a, 0x3546, 0xb911, 0x1, 0x0);
        gbc.writeMem(0x79f9, { 0xcb, 0x6e });
        gbc.writeMem(0xb911, { 0x39 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa74c, gbc.sp());
        EXPECT(0x79fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xb911));
        // CB 6E 02AF
        gbc.setState(0xa424, 0xdf26, 0xf7d0, 0x6467, 0x93ce, 0x606c, 0x1, 0x1);
        gbc.writeMem(0x606c, { 0x1e });
        gbc.writeMem(0xa424, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xdf26, gbc.sp());
        EXPECT(0xa426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa424));
        EXPECT(0x6e, gbc.readMem(0xa425));
        // CB 6E 02B0
        gbc.setState(0x3faf, 0xec5a, 0xeeb0, 0x9a44, 0x8760, 0x8673, 0x1, 0x0);
        gbc.writeMem(0x3faf, { 0xcb, 0x6e });
        gbc.writeMem(0x8673, { 0xa5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xec5a, gbc.sp());
        EXPECT(0x3fb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0x8673));
        // CB 6E 02B1
        gbc.setState(0xabb4, 0xb0f1, 0x9410, 0x6f7c, 0xda25, 0xb8c2, 0x0, 0x0);
        gbc.writeMem(0xabb4, { 0xcb, 0x6e });
        gbc.writeMem(0xb8c2, { 0x65 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb0f1, gbc.sp());
        EXPECT(0xabb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabb4));
        EXPECT(0x6e, gbc.readMem(0xabb5));
        EXPECT(0x65, gbc.readMem(0xb8c2));
        // CB 6E 02B2
        gbc.setState(0xa698, 0x7907, 0x8ef0, 0x76e7, 0x8d54, 0x458d, 0x0, 0x0);
        gbc.writeMem(0x458d, { 0xad });
        gbc.writeMem(0xa698, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7907, gbc.sp());
        EXPECT(0xa69a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa698));
        EXPECT(0x6e, gbc.readMem(0xa699));
        // CB 6E 02B3
        gbc.setState(0xd394, 0x3ef8, 0x5a10, 0xc54, 0x7301, 0x2cc2, 0x0, 0x1);
        gbc.writeMem(0x2cc2, { 0x28 });
        gbc.writeMem(0xd394, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3ef8, gbc.sp());
        EXPECT(0xd396, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd394));
        EXPECT(0x6e, gbc.readMem(0xd395));
        // CB 6E 02B4
        gbc.setState(0xcab9, 0xe5d2, 0xb00, 0xd972, 0x2c23, 0x195b, 0x0, 0x0);
        gbc.writeMem(0x195b, { 0x28 });
        gbc.writeMem(0xcab9, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe5d2, gbc.sp());
        EXPECT(0xcabb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcab9));
        EXPECT(0x6e, gbc.readMem(0xcaba));
        // CB 6E 02B5
        gbc.setState(0x5ea6, 0x82b6, 0xefd0, 0x8b6d, 0xc7ed, 0xe71a, 0x0, 0x1);
        gbc.writeMem(0x5ea6, { 0xcb, 0x6e });
        gbc.writeMem(0xe71a, { 0xbb });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x82b6, gbc.sp());
        EXPECT(0x5ea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe71a));
        // CB 6E 02B6
        gbc.setState(0xdd7d, 0x52b8, 0xd3c0, 0xa186, 0x910c, 0xac44, 0x0, 0x0);
        gbc.writeMem(0xac44, { 0x62 });
        gbc.writeMem(0xdd7d, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x52b8, gbc.sp());
        EXPECT(0xdd7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xac44));
        EXPECT(0xcb, gbc.readMem(0xdd7d));
        EXPECT(0x6e, gbc.readMem(0xdd7e));
        // CB 6E 02B7
        gbc.setState(0x3c00, 0xd157, 0xce30, 0xbe23, 0xa14d, 0x61f9, 0x0, 0x0);
        gbc.writeMem(0x3c00, { 0xcb, 0x6e });
        gbc.writeMem(0x61f9, { 0x6d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd157, gbc.sp());
        EXPECT(0x3c02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 02B8
        gbc.setState(0x98e7, 0x8334, 0x3480, 0xbaa8, 0xe013, 0x194e, 0x1, 0x1);
        gbc.writeMem(0x194e, { 0x19 });
        gbc.writeMem(0x98e7, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8334, gbc.sp());
        EXPECT(0x98e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98e7));
        EXPECT(0x6e, gbc.readMem(0x98e8));
        // CB 6E 02B9
        gbc.setState(0x21e0, 0xfe06, 0x2f80, 0xad3, 0xd5e, 0x8bf0, 0x1, 0x0);
        gbc.writeMem(0x21e0, { 0xcb, 0x6e });
        gbc.writeMem(0x8bf0, { 0xa3 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xfe06, gbc.sp());
        EXPECT(0x21e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8bf0));
        // CB 6E 02BB
        gbc.setState(0x2cb3, 0x4d07, 0x1a70, 0xc9f1, 0x393c, 0x3075, 0x0, 0x0);
        gbc.writeMem(0x2cb3, { 0xcb, 0x6e });
        gbc.writeMem(0x3075, { 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4d07, gbc.sp());
        EXPECT(0x2cb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 02BC
        gbc.setState(0xbc29, 0x2e1e, 0x75b0, 0x7bc5, 0xddba, 0x2f2e, 0x0, 0x0);
        gbc.writeMem(0x2f2e, { 0x5b });
        gbc.writeMem(0xbc29, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2e1e, gbc.sp());
        EXPECT(0xbc2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc29));
        EXPECT(0x6e, gbc.readMem(0xbc2a));
        // CB 6E 02BD
        gbc.setState(0x15dd, 0x1617, 0x1380, 0x165d, 0x4542, 0xba36, 0x1, 0x0);
        gbc.writeMem(0x15dd, { 0xcb, 0x6e });
        gbc.writeMem(0xba36, { 0xb6 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1617, gbc.sp());
        EXPECT(0x15df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xba36));
        // CB 6E 02BE
        gbc.setState(0x101a, 0xacde, 0x54c0, 0x3db1, 0xde2b, 0x4ea0, 0x1, 0x0);
        gbc.writeMem(0x101a, { 0xcb, 0x6e });
        gbc.writeMem(0x4ea0, { 0x40 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xacde, gbc.sp());
        EXPECT(0x101c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 02BF
        gbc.setState(0x9ca7, 0x6bb2, 0xfa40, 0xf55c, 0x4091, 0xa532, 0x0, 0x0);
        gbc.writeMem(0x9ca7, { 0xcb, 0x6e });
        gbc.writeMem(0xa532, { 0x65 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6bb2, gbc.sp());
        EXPECT(0x9ca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ca7));
        EXPECT(0x6e, gbc.readMem(0x9ca8));
        EXPECT(0x65, gbc.readMem(0xa532));
        // CB 6E 02C1
        gbc.setState(0x1297, 0xa03, 0xda50, 0x8c69, 0x1567, 0x53b7, 0x0, 0x0);
        gbc.writeMem(0x1297, { 0xcb, 0x6e });
        gbc.writeMem(0x53b7, { 0x36 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa03, gbc.sp());
        EXPECT(0x1299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 02C2
        gbc.setState(0x1bcc, 0x45b6, 0xff70, 0x1683, 0x2485, 0x5140, 0x1, 0x1);
        gbc.writeMem(0x1bcc, { 0xcb, 0x6e });
        gbc.writeMem(0x5140, { 0xc6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x45b6, gbc.sp());
        EXPECT(0x1bce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 02C3
        gbc.setState(0x50be, 0xce11, 0xca10, 0xe855, 0xc4c8, 0xcf02, 0x0, 0x1);
        gbc.writeMem(0x50be, { 0xcb, 0x6e });
        gbc.writeMem(0xcf02, { 0xd3 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xce11, gbc.sp());
        EXPECT(0x50c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xcf02));
        // CB 6E 02C4
        gbc.setState(0x2e04, 0x2fd5, 0xf510, 0xb59f, 0x5c08, 0x9f6c, 0x1, 0x0);
        gbc.writeMem(0x2e04, { 0xcb, 0x6e });
        gbc.writeMem(0x9f6c, { 0xb4 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2fd5, gbc.sp());
        EXPECT(0x2e06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0x9f6c));
        // CB 6E 02C5
        gbc.setState(0x8cc0, 0x98fa, 0x51c0, 0xb693, 0xbf8a, 0xfec6, 0x0, 0x0);
        gbc.writeMem(0x8cc0, { 0xcb, 0x6e });
        gbc.writeMem(0xfec6, { 0x9e });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x98fa, gbc.sp());
        EXPECT(0x8cc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cc0));
        EXPECT(0x6e, gbc.readMem(0x8cc1));
        EXPECT(0x9e, gbc.readMem(0xfec6));
        // CB 6E 02C7
        gbc.setState(0xd001, 0x2c2c, 0x50f0, 0x2b8d, 0x25a0, 0x24c6, 0x0, 0x0);
        gbc.writeMem(0x24c6, { 0xe });
        gbc.writeMem(0xd001, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2c2c, gbc.sp());
        EXPECT(0xd003, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd001));
        EXPECT(0x6e, gbc.readMem(0xd002));
        // CB 6E 02C8
        gbc.setState(0x1f3a, 0xf7e0, 0xd990, 0x17ee, 0xfbfc, 0xec29, 0x0, 0x0);
        gbc.writeMem(0x1f3a, { 0xcb, 0x6e });
        gbc.writeMem(0xec29, { 0x66 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf7e0, gbc.sp());
        EXPECT(0x1f3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xec29));
        // CB 6E 02C9
        gbc.setState(0x8fa7, 0xb50c, 0x85a0, 0x82f7, 0x8d4d, 0xcdd, 0x0, 0x0);
        gbc.writeMem(0xcdd, { 0xf9 });
        gbc.writeMem(0x8fa7, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb50c, gbc.sp());
        EXPECT(0x8fa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fa7));
        EXPECT(0x6e, gbc.readMem(0x8fa8));
        // CB 6E 02CA
        gbc.setState(0x471c, 0x76c6, 0x2f00, 0xc4b, 0x866f, 0x96e0, 0x0, 0x1);
        gbc.writeMem(0x471c, { 0xcb, 0x6e });
        gbc.writeMem(0x96e0, { 0x9f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x76c6, gbc.sp());
        EXPECT(0x471e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x96e0));
        // CB 6E 02CB
        gbc.setState(0xeadd, 0xad27, 0xb920, 0x3205, 0x809f, 0x7ea7, 0x0, 0x1);
        gbc.writeMem(0x7ea7, { 0x65 });
        gbc.writeMem(0xeadd, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xad27, gbc.sp());
        EXPECT(0xeadf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeadd));
        EXPECT(0x6e, gbc.readMem(0xeade));
        // CB 6E 02CC
        gbc.setState(0x67e4, 0x823d, 0xf3d0, 0xe8d0, 0xe761, 0xb779, 0x1, 0x1);
        gbc.writeMem(0x67e4, { 0xcb, 0x6e });
        gbc.writeMem(0xb779, { 0x9c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x823d, gbc.sp());
        EXPECT(0x67e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb779));
        // CB 6E 02CD
        gbc.setState(0x9f8c, 0xdd15, 0x9180, 0x58fd, 0xb4a7, 0x8d99, 0x1, 0x0);
        gbc.writeMem(0x8d99, { 0x59 });
        gbc.writeMem(0x9f8c, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xdd15, gbc.sp());
        EXPECT(0x9f8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0x8d99));
        EXPECT(0xcb, gbc.readMem(0x9f8c));
        EXPECT(0x6e, gbc.readMem(0x9f8d));
        // CB 6E 02CE
        gbc.setState(0xdc63, 0xf8a3, 0x18d0, 0xfff9, 0x4b55, 0xe351, 0x1, 0x1);
        gbc.writeMem(0xdc63, { 0xcb, 0x6e });
        gbc.writeMem(0xe351, { 0xdc });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf8a3, gbc.sp());
        EXPECT(0xdc65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc63));
        EXPECT(0x6e, gbc.readMem(0xdc64));
        EXPECT(0xdc, gbc.readMem(0xe351));
        // CB 6E 02CF
        gbc.setState(0x95e9, 0x6546, 0xf1f0, 0x689d, 0xa36c, 0x23c1, 0x0, 0x1);
        gbc.writeMem(0x23c1, { 0x1c });
        gbc.writeMem(0x95e9, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6546, gbc.sp());
        EXPECT(0x95eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95e9));
        EXPECT(0x6e, gbc.readMem(0x95ea));
        // CB 6E 02D0
        gbc.setState(0xbab2, 0x3855, 0x1c40, 0xab90, 0xde71, 0x66, 0x1, 0x1);
        gbc.writeMem(0x66, { 0xfc });
        gbc.writeMem(0xbab2, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3855, gbc.sp());
        EXPECT(0xbab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbab2));
        EXPECT(0x6e, gbc.readMem(0xbab3));
        // CB 6E 02D1
        gbc.setState(0x4fdd, 0x25d5, 0x4870, 0xc82c, 0x3ac9, 0x3423, 0x1, 0x0);
        gbc.writeMem(0x3423, { 0xd4 });
        gbc.writeMem(0x4fdd, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x25d5, gbc.sp());
        EXPECT(0x4fdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 02D2
        gbc.setState(0xd8ba, 0xea4f, 0x8cf0, 0xc7a6, 0x333d, 0x77a1, 0x0, 0x1);
        gbc.writeMem(0x77a1, { 0xd3 });
        gbc.writeMem(0xd8ba, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xea4f, gbc.sp());
        EXPECT(0xd8bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8ba));
        EXPECT(0x6e, gbc.readMem(0xd8bb));
        // CB 6E 02D3
        gbc.setState(0xb3f4, 0x9a0f, 0x8940, 0xc9d6, 0x1675, 0xd020, 0x0, 0x0);
        gbc.writeMem(0xb3f4, { 0xcb, 0x6e });
        gbc.writeMem(0xd020, { 0x5c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9a0f, gbc.sp());
        EXPECT(0xb3f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3f4));
        EXPECT(0x6e, gbc.readMem(0xb3f5));
        EXPECT(0x5c, gbc.readMem(0xd020));
        // CB 6E 02D4
        gbc.setState(0x1779, 0xac45, 0xcc40, 0x56b, 0x7504, 0x17ee, 0x1, 0x1);
        gbc.writeMem(0x1779, { 0xcb, 0x6e });
        gbc.writeMem(0x17ee, { 0xad });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xac45, gbc.sp());
        EXPECT(0x177b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 02D5
        gbc.setState(0x5885, 0x2f4a, 0x6d00, 0x7c93, 0xa3fe, 0x80b9, 0x0, 0x1);
        gbc.writeMem(0x5885, { 0xcb, 0x6e });
        gbc.writeMem(0x80b9, { 0xc2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2f4a, gbc.sp());
        EXPECT(0x5887, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x80b9));
        // CB 6E 02D6
        gbc.setState(0x2a4f, 0x3e86, 0xf210, 0x8bdd, 0x4e4b, 0xccd1, 0x1, 0x1);
        gbc.writeMem(0x2a4f, { 0xcb, 0x6e });
        gbc.writeMem(0xccd1, { 0x1c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3e86, gbc.sp());
        EXPECT(0x2a51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xccd1));
        // CB 6E 02D7
        gbc.setState(0xc04b, 0xd6b9, 0xc460, 0x7cfa, 0x300, 0xec0a, 0x0, 0x1);
        gbc.writeMem(0xc04b, { 0xcb, 0x6e });
        gbc.writeMem(0xec0a, { 0x10 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd6b9, gbc.sp());
        EXPECT(0xc04d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc04b));
        EXPECT(0x6e, gbc.readMem(0xc04c));
        EXPECT(0x10, gbc.readMem(0xec0a));
        // CB 6E 02D8
        gbc.setState(0xd71d, 0x10ee, 0xa530, 0x7cb8, 0x9a88, 0x878e, 0x0, 0x0);
        gbc.writeMem(0x878e, { 0x66 });
        gbc.writeMem(0xd71d, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x10ee, gbc.sp());
        EXPECT(0xd71f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x878e));
        EXPECT(0xcb, gbc.readMem(0xd71d));
        EXPECT(0x6e, gbc.readMem(0xd71e));
        // CB 6E 02D9
        gbc.setState(0x2c5f, 0xd5b4, 0x32a0, 0x6ab3, 0xa982, 0xa6de, 0x1, 0x0);
        gbc.writeMem(0x2c5f, { 0xcb, 0x6e });
        gbc.writeMem(0xa6de, { 0xe9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd5b4, gbc.sp());
        EXPECT(0x2c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa6de));
        // CB 6E 02DA
        gbc.setState(0xd078, 0xdd00, 0x5b10, 0xe798, 0x4e1a, 0x40e1, 0x1, 0x0);
        gbc.writeMem(0x40e1, { 0x3e });
        gbc.writeMem(0xd078, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xdd00, gbc.sp());
        EXPECT(0xd07a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd078));
        EXPECT(0x6e, gbc.readMem(0xd079));
        // CB 6E 02DB
        gbc.setState(0x127f, 0xa2ea, 0xa280, 0x67f4, 0xe87, 0xd672, 0x1, 0x0);
        gbc.writeMem(0x127f, { 0xcb, 0x6e });
        gbc.writeMem(0xd672, { 0xb9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa2ea, gbc.sp());
        EXPECT(0x1281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd672));
        // CB 6E 02DC
        gbc.setState(0xc2dd, 0x2221, 0x90f0, 0x73f5, 0x5c9b, 0x4cfb, 0x0, 0x1);
        gbc.writeMem(0x4cfb, { 0xa4 });
        gbc.writeMem(0xc2dd, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2221, gbc.sp());
        EXPECT(0xc2df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2dd));
        EXPECT(0x6e, gbc.readMem(0xc2de));
        // CB 6E 02DD
        gbc.setState(0x900c, 0xfa6d, 0x3fc0, 0x568a, 0x5509, 0xd40c, 0x0, 0x1);
        gbc.writeMem(0x900c, { 0xcb, 0x6e });
        gbc.writeMem(0xd40c, { 0x28 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xfa6d, gbc.sp());
        EXPECT(0x900e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x900c));
        EXPECT(0x6e, gbc.readMem(0x900d));
        EXPECT(0x28, gbc.readMem(0xd40c));
        // CB 6E 02DE
        gbc.setState(0xd784, 0xa34e, 0x74f0, 0x7626, 0x791a, 0xc7c3, 0x1, 0x1);
        gbc.writeMem(0xc7c3, { 0xf9 });
        gbc.writeMem(0xd784, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa34e, gbc.sp());
        EXPECT(0xd786, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xc7c3));
        EXPECT(0xcb, gbc.readMem(0xd784));
        EXPECT(0x6e, gbc.readMem(0xd785));
        // CB 6E 02DF
        gbc.setState(0x8cb7, 0x917e, 0x8790, 0x90dc, 0x3406, 0x945b, 0x0, 0x1);
        gbc.writeMem(0x8cb7, { 0xcb, 0x6e });
        gbc.writeMem(0x945b, { 0xad });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x917e, gbc.sp());
        EXPECT(0x8cb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cb7));
        EXPECT(0x6e, gbc.readMem(0x8cb8));
        EXPECT(0xad, gbc.readMem(0x945b));
        // CB 6E 02E0
        gbc.setState(0x1d9e, 0xd806, 0xf3c0, 0x3bee, 0x9ca1, 0xc14d, 0x0, 0x1);
        gbc.writeMem(0x1d9e, { 0xcb, 0x6e });
        gbc.writeMem(0xc14d, { 0x9f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd806, gbc.sp());
        EXPECT(0x1da0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc14d));
        // CB 6E 02E1
        gbc.setState(0xca58, 0x4b97, 0x9eb0, 0x3a90, 0x7e87, 0xaccf, 0x1, 0x0);
        gbc.writeMem(0xaccf, { 0x6c });
        gbc.writeMem(0xca58, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4b97, gbc.sp());
        EXPECT(0xca5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xaccf));
        EXPECT(0xcb, gbc.readMem(0xca58));
        EXPECT(0x6e, gbc.readMem(0xca59));
        // CB 6E 02E2
        gbc.setState(0x6c99, 0x60f3, 0xe800, 0x98be, 0x3c4c, 0x1f4f, 0x0, 0x1);
        gbc.writeMem(0x1f4f, { 0xbd });
        gbc.writeMem(0x6c99, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x60f3, gbc.sp());
        EXPECT(0x6c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 02E3
        gbc.setState(0x538f, 0xa9f0, 0xf300, 0x3b6d, 0x692b, 0x2809, 0x0, 0x0);
        gbc.writeMem(0x2809, { 0xb });
        gbc.writeMem(0x538f, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa9f0, gbc.sp());
        EXPECT(0x5391, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 02E4
        gbc.setState(0xeaa3, 0x4a97, 0x5950, 0xc853, 0x7748, 0x583b, 0x0, 0x1);
        gbc.writeMem(0x583b, { 0x84 });
        gbc.writeMem(0xeaa3, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4a97, gbc.sp());
        EXPECT(0xeaa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaa3));
        EXPECT(0x6e, gbc.readMem(0xeaa4));
        // CB 6E 02E5
        gbc.setState(0x2a28, 0x1dd4, 0x3a70, 0xc8a4, 0xcf16, 0x329f, 0x0, 0x0);
        gbc.writeMem(0x2a28, { 0xcb, 0x6e });
        gbc.writeMem(0x329f, { 0xdc });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1dd4, gbc.sp());
        EXPECT(0x2a2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 02E6
        gbc.setState(0x71f7, 0x3687, 0x2190, 0xf082, 0xca39, 0xba6, 0x0, 0x0);
        gbc.writeMem(0xba6, { 0x42 });
        gbc.writeMem(0x71f7, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3687, gbc.sp());
        EXPECT(0x71f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 02E7
        gbc.setState(0x4dd8, 0x6698, 0x7450, 0x465e, 0x1148, 0x6d55, 0x0, 0x1);
        gbc.writeMem(0x4dd8, { 0xcb, 0x6e });
        gbc.writeMem(0x6d55, { 0xfb });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6698, gbc.sp());
        EXPECT(0x4dda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 02E8
        gbc.setState(0xa515, 0xc903, 0x55f0, 0x2c19, 0x3a8d, 0x5211, 0x0, 0x1);
        gbc.writeMem(0x5211, { 0x4e });
        gbc.writeMem(0xa515, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc903, gbc.sp());
        EXPECT(0xa517, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa515));
        EXPECT(0x6e, gbc.readMem(0xa516));
        // CB 6E 02E9
        gbc.setState(0x46ce, 0x7ec4, 0xf720, 0x6492, 0x7ecd, 0xb747, 0x0, 0x0);
        gbc.writeMem(0x46ce, { 0xcb, 0x6e });
        gbc.writeMem(0xb747, { 0x5c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7ec4, gbc.sp());
        EXPECT(0x46d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xb747));
        // CB 6E 02EA
        gbc.setState(0x6f6a, 0xc6d, 0x5df0, 0xb535, 0x5c9b, 0xfcc9, 0x0, 0x1);
        gbc.writeMem(0x6f6a, { 0xcb, 0x6e });
        gbc.writeMem(0xfcc9, { 0xcb });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc6d, gbc.sp());
        EXPECT(0x6f6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xfcc9));
        // CB 6E 02EB
        gbc.setState(0x619, 0x410e, 0x23c0, 0x1abd, 0x8225, 0x20a0, 0x1, 0x1);
        gbc.writeMem(0x619, { 0xcb, 0x6e });
        gbc.writeMem(0x20a0, { 0xd7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x410e, gbc.sp());
        EXPECT(0x61b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 02EC
        gbc.setState(0x290c, 0xcae9, 0x8180, 0xc84f, 0xd293, 0x5baa, 0x0, 0x1);
        gbc.writeMem(0x290c, { 0xcb, 0x6e });
        gbc.writeMem(0x5baa, { 0xd });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xcae9, gbc.sp());
        EXPECT(0x290e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 02ED
        gbc.setState(0xde90, 0xbee5, 0x91e0, 0x7c6, 0xd50d, 0xe41d, 0x1, 0x0);
        gbc.writeMem(0xde90, { 0xcb, 0x6e });
        gbc.writeMem(0xe41d, { 0xb7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xbee5, gbc.sp());
        EXPECT(0xde92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde90));
        EXPECT(0x6e, gbc.readMem(0xde91));
        EXPECT(0xb7, gbc.readMem(0xe41d));
        // CB 6E 02EE
        gbc.setState(0xd844, 0x430c, 0xade0, 0x2038, 0x8767, 0x152c, 0x0, 0x1);
        gbc.writeMem(0x152c, { 0x36 });
        gbc.writeMem(0xd844, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x430c, gbc.sp());
        EXPECT(0xd846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd844));
        EXPECT(0x6e, gbc.readMem(0xd845));
        // CB 6E 02EF
        gbc.setState(0x33e5, 0xc697, 0x26f0, 0xddbe, 0x99af, 0xe3e7, 0x1, 0x0);
        gbc.writeMem(0x33e5, { 0xcb, 0x6e });
        gbc.writeMem(0xe3e7, { 0xf0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc697, gbc.sp());
        EXPECT(0x33e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe3e7));
        // CB 6E 02F0
        gbc.setState(0x4f03, 0xe4fa, 0xf5b0, 0xc202, 0x4ec4, 0x558f, 0x1, 0x0);
        gbc.writeMem(0x4f03, { 0xcb, 0x6e });
        gbc.writeMem(0x558f, { 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe4fa, gbc.sp());
        EXPECT(0x4f05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 02F1
        gbc.setState(0x1ca8, 0x9e0, 0x19d0, 0x9014, 0x3b84, 0xec72, 0x0, 0x1);
        gbc.writeMem(0x1ca8, { 0xcb, 0x6e });
        gbc.writeMem(0xec72, { 0xe5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9e0, gbc.sp());
        EXPECT(0x1caa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xec72));
        // CB 6E 02F2
        gbc.setState(0x15de, 0xe2b4, 0x2c80, 0x6949, 0x6d00, 0x3cac, 0x0, 0x1);
        gbc.writeMem(0x15de, { 0xcb, 0x6e });
        gbc.writeMem(0x3cac, { 0x26 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe2b4, gbc.sp());
        EXPECT(0x15e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 02F3
        gbc.setState(0x280d, 0x94ed, 0xd1c0, 0x5bbf, 0x6165, 0x5a47, 0x0, 0x0);
        gbc.writeMem(0x280d, { 0xcb, 0x6e });
        gbc.writeMem(0x5a47, { 0x6d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x94ed, gbc.sp());
        EXPECT(0x280f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 02F4
        gbc.setState(0x4737, 0x3ea5, 0x6e50, 0x8aa, 0x60a3, 0xec96, 0x1, 0x1);
        gbc.writeMem(0x4737, { 0xcb, 0x6e });
        gbc.writeMem(0xec96, { 0x70 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3ea5, gbc.sp());
        EXPECT(0x4739, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xec96));
        // CB 6E 02F5
        gbc.setState(0xe54a, 0xa1e6, 0x8aa0, 0x4683, 0xdced, 0x9ad5, 0x1, 0x0);
        gbc.writeMem(0x9ad5, { 0x85 });
        gbc.writeMem(0xe54a, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa1e6, gbc.sp());
        EXPECT(0xe54c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9ad5));
        EXPECT(0xcb, gbc.readMem(0xe54a));
        EXPECT(0x6e, gbc.readMem(0xe54b));
        // CB 6E 02F6
        gbc.setState(0x2692, 0x9906, 0xdf10, 0xeee9, 0xc417, 0xf720, 0x0, 0x1);
        gbc.writeMem(0x2692, { 0xcb, 0x6e });
        gbc.writeMem(0xf720, { 0x9a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9906, gbc.sp());
        EXPECT(0x2694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xf720));
        // CB 6E 02F7
        gbc.setState(0xd668, 0x1ee8, 0xf4b0, 0x7835, 0x64ec, 0xce67, 0x0, 0x0);
        gbc.writeMem(0xce67, { 0xad });
        gbc.writeMem(0xd668, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1ee8, gbc.sp());
        EXPECT(0xd66a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xce67));
        EXPECT(0xcb, gbc.readMem(0xd668));
        EXPECT(0x6e, gbc.readMem(0xd669));
        // CB 6E 02F8
        gbc.setState(0x53de, 0xe1ad, 0x1b80, 0x2148, 0x2d8f, 0xc35a, 0x0, 0x0);
        gbc.writeMem(0x53de, { 0xcb, 0x6e });
        gbc.writeMem(0xc35a, { 0x4f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe1ad, gbc.sp());
        EXPECT(0x53e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xc35a));
        // CB 6E 02F9
        gbc.setState(0x9aa8, 0x221e, 0x7b0, 0xa534, 0xcb1c, 0xe031, 0x0, 0x1);
        gbc.writeMem(0x9aa8, { 0xcb, 0x6e });
        gbc.writeMem(0xe031, { 0x3 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x221e, gbc.sp());
        EXPECT(0x9aaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aa8));
        EXPECT(0x6e, gbc.readMem(0x9aa9));
        EXPECT(0x3, gbc.readMem(0xe031));
        // CB 6E 02FA
        gbc.setState(0x13f3, 0x1ac1, 0xb250, 0xecf8, 0xf829, 0xb345, 0x1, 0x0);
        gbc.writeMem(0x13f3, { 0xcb, 0x6e });
        gbc.writeMem(0xb345, { 0x20 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1ac1, gbc.sp());
        EXPECT(0x13f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb345));
        // CB 6E 02FB
        gbc.setState(0xe409, 0x778c, 0xf650, 0x3b65, 0x123e, 0xc51f, 0x1, 0x1);
        gbc.writeMem(0xc51f, { 0x47 });
        gbc.writeMem(0xe409, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x778c, gbc.sp());
        EXPECT(0xe40b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc51f));
        EXPECT(0xcb, gbc.readMem(0xe409));
        EXPECT(0x6e, gbc.readMem(0xe40a));
        // CB 6E 02FC
        gbc.setState(0xe9ed, 0xfd88, 0x8310, 0x8773, 0xb970, 0xad9a, 0x1, 0x0);
        gbc.writeMem(0xad9a, { 0x70 });
        gbc.writeMem(0xe9ed, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xfd88, gbc.sp());
        EXPECT(0xe9ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xad9a));
        EXPECT(0xcb, gbc.readMem(0xe9ed));
        EXPECT(0x6e, gbc.readMem(0xe9ee));
        // CB 6E 02FE
        gbc.setState(0xc554, 0x9215, 0xdde0, 0x929c, 0x40f9, 0x2047, 0x1, 0x1);
        gbc.writeMem(0x2047, { 0x71 });
        gbc.writeMem(0xc554, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9215, gbc.sp());
        EXPECT(0xc556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc554));
        EXPECT(0x6e, gbc.readMem(0xc555));
        // CB 6E 02FF
        gbc.setState(0x5e6b, 0x9879, 0xf080, 0xfaa5, 0x83cb, 0x54a4, 0x0, 0x0);
        gbc.writeMem(0x54a4, { 0x52 });
        gbc.writeMem(0x5e6b, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9879, gbc.sp());
        EXPECT(0x5e6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0300
        gbc.setState(0xe24, 0x15fb, 0x78d0, 0xb62, 0x9349, 0x1cc3, 0x0, 0x0);
        gbc.writeMem(0xe24, { 0xcb, 0x6e });
        gbc.writeMem(0x1cc3, { 0xe3 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x15fb, gbc.sp());
        EXPECT(0xe26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0301
        gbc.setState(0x4ff2, 0x1615, 0x2490, 0x3845, 0x2e78, 0xa990, 0x0, 0x1);
        gbc.writeMem(0x4ff2, { 0xcb, 0x6e });
        gbc.writeMem(0xa990, { 0xb1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1615, gbc.sp());
        EXPECT(0x4ff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xa990));
        // CB 6E 0302
        gbc.setState(0x5fed, 0x52a3, 0x4a30, 0x7e69, 0xace4, 0x6ca6, 0x1, 0x1);
        gbc.writeMem(0x5fed, { 0xcb, 0x6e });
        gbc.writeMem(0x6ca6, { 0xf5 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x52a3, gbc.sp());
        EXPECT(0x5fef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0303
        gbc.setState(0x9a12, 0xbf2d, 0x2e0, 0xd4a7, 0x7c5c, 0xf88c, 0x0, 0x0);
        gbc.writeMem(0x9a12, { 0xcb, 0x6e });
        gbc.writeMem(0xf88c, { 0x84 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xbf2d, gbc.sp());
        EXPECT(0x9a14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a12));
        EXPECT(0x6e, gbc.readMem(0x9a13));
        EXPECT(0x84, gbc.readMem(0xf88c));
        // CB 6E 0304
        gbc.setState(0xbae3, 0x5e9, 0x9010, 0xa1dd, 0xb840, 0x8685, 0x0, 0x0);
        gbc.writeMem(0x8685, { 0xb6 });
        gbc.writeMem(0xbae3, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5e9, gbc.sp());
        EXPECT(0xbae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8685));
        EXPECT(0xcb, gbc.readMem(0xbae3));
        EXPECT(0x6e, gbc.readMem(0xbae4));
        // CB 6E 0305
        gbc.setState(0x6664, 0x3451, 0xcd0, 0xe239, 0x805b, 0xd654, 0x1, 0x0);
        gbc.writeMem(0x6664, { 0xcb, 0x6e });
        gbc.writeMem(0xd654, { 0x66 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3451, gbc.sp());
        EXPECT(0x6666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xd654));
        // CB 6E 0306
        gbc.setState(0xd2c1, 0x4897, 0x6b0, 0xe2a, 0x5bd, 0x4c83, 0x0, 0x1);
        gbc.writeMem(0x4c83, { 0xc });
        gbc.writeMem(0xd2c1, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4897, gbc.sp());
        EXPECT(0xd2c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2c1));
        EXPECT(0x6e, gbc.readMem(0xd2c2));
        // CB 6E 0307
        gbc.setState(0x4a58, 0xa2e7, 0x4540, 0x5f6, 0x61b7, 0x59bb, 0x1, 0x1);
        gbc.writeMem(0x4a58, { 0xcb, 0x6e });
        gbc.writeMem(0x59bb, { 0xa1 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa2e7, gbc.sp());
        EXPECT(0x4a5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0308
        gbc.setState(0x7fa5, 0xeca3, 0xb380, 0xf621, 0xe1a2, 0x2b9b, 0x1, 0x0);
        gbc.writeMem(0x2b9b, { 0x6c });
        gbc.writeMem(0x7fa5, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xeca3, gbc.sp());
        EXPECT(0x7fa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0309
        gbc.setState(0x678d, 0x16b5, 0x4ba0, 0xb546, 0xa469, 0x1cf9, 0x0, 0x1);
        gbc.writeMem(0x1cf9, { 0xf });
        gbc.writeMem(0x678d, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x16b5, gbc.sp());
        EXPECT(0x678f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 030A
        gbc.setState(0x288d, 0x99ef, 0xfd10, 0x180a, 0x471e, 0x5b68, 0x0, 0x1);
        gbc.writeMem(0x288d, { 0xcb, 0x6e });
        gbc.writeMem(0x5b68, { 0x8f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x99ef, gbc.sp());
        EXPECT(0x288f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 030B
        gbc.setState(0x787f, 0xf4d0, 0xf00, 0x33e2, 0xb0c2, 0xe1f9, 0x0, 0x1);
        gbc.writeMem(0x787f, { 0xcb, 0x6e });
        gbc.writeMem(0xe1f9, { 0x1a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf4d0, gbc.sp());
        EXPECT(0x7881, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe1f9));
        // CB 6E 030C
        gbc.setState(0x2817, 0xec2a, 0x6c90, 0xdc19, 0x223f, 0x1ed2, 0x1, 0x0);
        gbc.writeMem(0x1ed2, { 0xbf });
        gbc.writeMem(0x2817, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xec2a, gbc.sp());
        EXPECT(0x2819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 030D
        gbc.setState(0x9f48, 0xfa7c, 0xb1a0, 0xf30a, 0x8de3, 0x10f1, 0x0, 0x0);
        gbc.writeMem(0x10f1, { 0x1e });
        gbc.writeMem(0x9f48, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xfa7c, gbc.sp());
        EXPECT(0x9f4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f48));
        EXPECT(0x6e, gbc.readMem(0x9f49));
        // CB 6E 030E
        gbc.setState(0xb3e7, 0xd1d0, 0x1b10, 0xf9d0, 0x2c5c, 0xe053, 0x0, 0x1);
        gbc.writeMem(0xb3e7, { 0xcb, 0x6e });
        gbc.writeMem(0xe053, { 0x33 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd1d0, gbc.sp());
        EXPECT(0xb3e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3e7));
        EXPECT(0x6e, gbc.readMem(0xb3e8));
        EXPECT(0x33, gbc.readMem(0xe053));
        // CB 6E 030F
        gbc.setState(0xb4ba, 0x842b, 0x8170, 0x6a26, 0xdfc1, 0xcccc, 0x0, 0x0);
        gbc.writeMem(0xb4ba, { 0xcb, 0x6e });
        gbc.writeMem(0xcccc, { 0x94 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x842b, gbc.sp());
        EXPECT(0xb4bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ba));
        EXPECT(0x6e, gbc.readMem(0xb4bb));
        EXPECT(0x94, gbc.readMem(0xcccc));
        // CB 6E 0310
        gbc.setState(0x477c, 0x5899, 0x6340, 0x9816, 0x7166, 0xdd45, 0x1, 0x0);
        gbc.writeMem(0x477c, { 0xcb, 0x6e });
        gbc.writeMem(0xdd45, { 0x6e });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5899, gbc.sp());
        EXPECT(0x477e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xdd45));
        // CB 6E 0311
        gbc.setState(0x151e, 0x55ff, 0xaa70, 0x8589, 0x89c7, 0x5add, 0x0, 0x1);
        gbc.writeMem(0x151e, { 0xcb, 0x6e });
        gbc.writeMem(0x5add, { 0xd1 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x55ff, gbc.sp());
        EXPECT(0x1520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0312
        gbc.setState(0x26b1, 0xf840, 0x8540, 0x3105, 0x6253, 0x3efd, 0x0, 0x0);
        gbc.writeMem(0x26b1, { 0xcb, 0x6e });
        gbc.writeMem(0x3efd, { 0xf1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf840, gbc.sp());
        EXPECT(0x26b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0313
        gbc.setState(0x4b9d, 0xb8f3, 0xb4e0, 0xc886, 0x2801, 0x9d27, 0x1, 0x1);
        gbc.writeMem(0x4b9d, { 0xcb, 0x6e });
        gbc.writeMem(0x9d27, { 0x72 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb8f3, gbc.sp());
        EXPECT(0x4b9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9d27));
        // CB 6E 0314
        gbc.setState(0xebc7, 0x3de6, 0x6840, 0x3f15, 0xff1f, 0x66f, 0x1, 0x1);
        gbc.writeMem(0x66f, { 0xa9 });
        gbc.writeMem(0xebc7, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3de6, gbc.sp());
        EXPECT(0xebc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebc7));
        EXPECT(0x6e, gbc.readMem(0xebc8));
        // CB 6E 0315
        gbc.setState(0x5e67, 0x992b, 0x5450, 0x34f2, 0xae35, 0xa0c1, 0x0, 0x1);
        gbc.writeMem(0x5e67, { 0xcb, 0x6e });
        gbc.writeMem(0xa0c1, { 0xe6 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x992b, gbc.sp());
        EXPECT(0x5e69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa0c1));
        // CB 6E 0316
        gbc.setState(0xb9dc, 0xf117, 0xf10, 0xabf9, 0x1ca6, 0x8931, 0x0, 0x0);
        gbc.writeMem(0x8931, { 0x47 });
        gbc.writeMem(0xb9dc, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf117, gbc.sp());
        EXPECT(0xb9de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8931));
        EXPECT(0xcb, gbc.readMem(0xb9dc));
        EXPECT(0x6e, gbc.readMem(0xb9dd));
        // CB 6E 0317
        gbc.setState(0x1e82, 0x348b, 0x97e0, 0xf9a0, 0x58c6, 0x57e1, 0x0, 0x0);
        gbc.writeMem(0x1e82, { 0xcb, 0x6e });
        gbc.writeMem(0x57e1, { 0x41 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x348b, gbc.sp());
        EXPECT(0x1e84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0318
        gbc.setState(0x9ba, 0xdf58, 0x9d40, 0x51f0, 0xece7, 0x2e3f, 0x1, 0x0);
        gbc.writeMem(0x9ba, { 0xcb, 0x6e });
        gbc.writeMem(0x2e3f, { 0xc });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xdf58, gbc.sp());
        EXPECT(0x9bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0319
        gbc.setState(0x9117, 0xe90d, 0xf60, 0xda1c, 0xeec3, 0x4e83, 0x0, 0x0);
        gbc.writeMem(0x4e83, { 0x6d });
        gbc.writeMem(0x9117, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe90d, gbc.sp());
        EXPECT(0x9119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9117));
        EXPECT(0x6e, gbc.readMem(0x9118));
        // CB 6E 031A
        gbc.setState(0x7d0c, 0x686c, 0x4160, 0x4b61, 0x3ba6, 0x4c2f, 0x1, 0x0);
        gbc.writeMem(0x4c2f, { 0xa1 });
        gbc.writeMem(0x7d0c, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x686c, gbc.sp());
        EXPECT(0x7d0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 031B
        gbc.setState(0x3fd7, 0x25bf, 0xa0d0, 0x12d9, 0x6841, 0x70a1, 0x1, 0x0);
        gbc.writeMem(0x3fd7, { 0xcb, 0x6e });
        gbc.writeMem(0x70a1, { 0x2a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x25bf, gbc.sp());
        EXPECT(0x3fd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 031C
        gbc.setState(0x3ece, 0x984d, 0x700, 0xd7af, 0x674d, 0xc2e2, 0x1, 0x0);
        gbc.writeMem(0x3ece, { 0xcb, 0x6e });
        gbc.writeMem(0xc2e2, { 0xa5 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x984d, gbc.sp());
        EXPECT(0x3ed0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xc2e2));
        // CB 6E 031D
        gbc.setState(0x32d8, 0x6d5f, 0xff0, 0x2d9a, 0x16a0, 0x9791, 0x0, 0x0);
        gbc.writeMem(0x32d8, { 0xcb, 0x6e });
        gbc.writeMem(0x9791, { 0xc6 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6d5f, gbc.sp());
        EXPECT(0x32da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9791));
        // CB 6E 031E
        gbc.setState(0x59db, 0x9fc2, 0xf2f0, 0x8335, 0x3e1e, 0x47ea, 0x0, 0x0);
        gbc.writeMem(0x47ea, { 0xf0 });
        gbc.writeMem(0x59db, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9fc2, gbc.sp());
        EXPECT(0x59dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 031F
        gbc.setState(0xee15, 0xba6c, 0x97d0, 0x7884, 0x77b6, 0x5608, 0x0, 0x0);
        gbc.writeMem(0x5608, { 0xc8 });
        gbc.writeMem(0xee15, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xba6c, gbc.sp());
        EXPECT(0xee17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee15));
        EXPECT(0x6e, gbc.readMem(0xee16));
        // CB 6E 0320
        gbc.setState(0xbac1, 0xfb02, 0x9fe0, 0x3189, 0xc67e, 0x9ae1, 0x1, 0x0);
        gbc.writeMem(0x9ae1, { 0x64 });
        gbc.writeMem(0xbac1, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xfb02, gbc.sp());
        EXPECT(0xbac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x9ae1));
        EXPECT(0xcb, gbc.readMem(0xbac1));
        EXPECT(0x6e, gbc.readMem(0xbac2));
        // CB 6E 0321
        gbc.setState(0xdb89, 0x4a1f, 0x7840, 0x4974, 0x4efb, 0x3819, 0x0, 0x0);
        gbc.writeMem(0x3819, { 0x1b });
        gbc.writeMem(0xdb89, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4a1f, gbc.sp());
        EXPECT(0xdb8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb89));
        EXPECT(0x6e, gbc.readMem(0xdb8a));
        // CB 6E 0322
        gbc.setState(0x39de, 0x311c, 0x27c0, 0x67aa, 0xc2e0, 0x4d2f, 0x1, 0x1);
        gbc.writeMem(0x39de, { 0xcb, 0x6e });
        gbc.writeMem(0x4d2f, { 0x5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x311c, gbc.sp());
        EXPECT(0x39e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0323
        gbc.setState(0x4a4c, 0xa1c4, 0x6f0, 0xec3c, 0x8391, 0x8c69, 0x1, 0x1);
        gbc.writeMem(0x4a4c, { 0xcb, 0x6e });
        gbc.writeMem(0x8c69, { 0x3b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa1c4, gbc.sp());
        EXPECT(0x4a4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8c69));
        // CB 6E 0324
        gbc.setState(0x721c, 0x71a, 0x9c0, 0x2df7, 0xdb02, 0x664f, 0x0, 0x1);
        gbc.writeMem(0x664f, { 0xb9 });
        gbc.writeMem(0x721c, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x71a, gbc.sp());
        EXPECT(0x721e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0325
        gbc.setState(0xdf2b, 0xa79b, 0xb8f0, 0x8c36, 0xc32c, 0xc6ab, 0x0, 0x0);
        gbc.writeMem(0xc6ab, { 0xd2 });
        gbc.writeMem(0xdf2b, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa79b, gbc.sp());
        EXPECT(0xdf2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xc6ab));
        EXPECT(0xcb, gbc.readMem(0xdf2b));
        EXPECT(0x6e, gbc.readMem(0xdf2c));
        // CB 6E 0326
        gbc.setState(0x3b5d, 0x7910, 0x9ed0, 0x5603, 0xede1, 0xe4bb, 0x0, 0x1);
        gbc.writeMem(0x3b5d, { 0xcb, 0x6e });
        gbc.writeMem(0xe4bb, { 0x3b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7910, gbc.sp());
        EXPECT(0x3b5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe4bb));
        // CB 6E 0327
        gbc.setState(0x2442, 0x1ee, 0xc390, 0x53f7, 0x245c, 0xbcbc, 0x1, 0x0);
        gbc.writeMem(0x2442, { 0xcb, 0x6e });
        gbc.writeMem(0xbcbc, { 0xa2 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1ee, gbc.sp());
        EXPECT(0x2444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xbcbc));
        // CB 6E 0328
        gbc.setState(0x7954, 0xf9b, 0x9a40, 0xc3bb, 0x6901, 0x226d, 0x1, 0x1);
        gbc.writeMem(0x226d, { 0x44 });
        gbc.writeMem(0x7954, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf9b, gbc.sp());
        EXPECT(0x7956, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0329
        gbc.setState(0x6d0e, 0xe20d, 0xc560, 0x6d35, 0xdb67, 0xa964, 0x0, 0x1);
        gbc.writeMem(0x6d0e, { 0xcb, 0x6e });
        gbc.writeMem(0xa964, { 0xff });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe20d, gbc.sp());
        EXPECT(0x6d10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xa964));
        // CB 6E 032A
        gbc.setState(0x6e52, 0xf773, 0x8800, 0x3a94, 0x6fae, 0x67a, 0x1, 0x1);
        gbc.writeMem(0x67a, { 0x7 });
        gbc.writeMem(0x6e52, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf773, gbc.sp());
        EXPECT(0x6e54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 032C
        gbc.setState(0x39f3, 0xd11c, 0x5160, 0xd235, 0x5494, 0xc2fb, 0x0, 0x0);
        gbc.writeMem(0x39f3, { 0xcb, 0x6e });
        gbc.writeMem(0xc2fb, { 0x9e });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd11c, gbc.sp());
        EXPECT(0x39f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc2fb));
        // CB 6E 032D
        gbc.setState(0xb33, 0xe2be, 0xfcd0, 0x2ce7, 0x5b58, 0x35e7, 0x1, 0x0);
        gbc.writeMem(0xb33, { 0xcb, 0x6e });
        gbc.writeMem(0x35e7, { 0x29 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe2be, gbc.sp());
        EXPECT(0xb35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 032E
        gbc.setState(0x1036, 0xe124, 0x57f0, 0x7057, 0x16e5, 0x4485, 0x0, 0x1);
        gbc.writeMem(0x1036, { 0xcb, 0x6e });
        gbc.writeMem(0x4485, { 0x85 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe124, gbc.sp());
        EXPECT(0x1038, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 032F
        gbc.setState(0xa14e, 0xe436, 0xe710, 0x4ff0, 0xcbc5, 0xe73d, 0x1, 0x1);
        gbc.writeMem(0xa14e, { 0xcb, 0x6e });
        gbc.writeMem(0xe73d, { 0x36 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe436, gbc.sp());
        EXPECT(0xa150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa14e));
        EXPECT(0x6e, gbc.readMem(0xa14f));
        EXPECT(0x36, gbc.readMem(0xe73d));
        // CB 6E 0330
        gbc.setState(0x47fb, 0xd333, 0x9f00, 0xdffb, 0x4f73, 0x9fd1, 0x1, 0x0);
        gbc.writeMem(0x47fb, { 0xcb, 0x6e });
        gbc.writeMem(0x9fd1, { 0x22 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd333, gbc.sp());
        EXPECT(0x47fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x9fd1));
        // CB 6E 0331
        gbc.setState(0xd2c1, 0x1a89, 0x1730, 0xb122, 0xe05c, 0xb917, 0x1, 0x0);
        gbc.writeMem(0xb917, { 0xf9 });
        gbc.writeMem(0xd2c1, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1a89, gbc.sp());
        EXPECT(0xd2c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xb917));
        EXPECT(0xcb, gbc.readMem(0xd2c1));
        EXPECT(0x6e, gbc.readMem(0xd2c2));
        // CB 6E 0332
        gbc.setState(0xe676, 0x1967, 0x1fa0, 0x5018, 0xfaac, 0x9dde, 0x0, 0x0);
        gbc.writeMem(0x9dde, { 0xa0 });
        gbc.writeMem(0xe676, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1967, gbc.sp());
        EXPECT(0xe678, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9dde));
        EXPECT(0xcb, gbc.readMem(0xe676));
        EXPECT(0x6e, gbc.readMem(0xe677));
        // CB 6E 0333
        gbc.setState(0xcc6f, 0x27f5, 0xc9d0, 0xc40, 0x9039, 0xb908, 0x1, 0x0);
        gbc.writeMem(0xb908, { 0x4b });
        gbc.writeMem(0xcc6f, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x27f5, gbc.sp());
        EXPECT(0xcc71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb908));
        EXPECT(0xcb, gbc.readMem(0xcc6f));
        EXPECT(0x6e, gbc.readMem(0xcc70));
        // CB 6E 0334
        gbc.setState(0x1b54, 0xbc8d, 0x1820, 0x8f5c, 0xe76b, 0x97aa, 0x0, 0x0);
        gbc.writeMem(0x1b54, { 0xcb, 0x6e });
        gbc.writeMem(0x97aa, { 0x39 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xbc8d, gbc.sp());
        EXPECT(0x1b56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x97aa));
        // CB 6E 0335
        gbc.setState(0x4cb8, 0x83b6, 0x4a50, 0x197c, 0x30c4, 0xc3ee, 0x0, 0x0);
        gbc.writeMem(0x4cb8, { 0xcb, 0x6e });
        gbc.writeMem(0xc3ee, { 0x32 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x83b6, gbc.sp());
        EXPECT(0x4cba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xc3ee));
        // CB 6E 0336
        gbc.setState(0xe7b3, 0x68f8, 0x9b20, 0x14d5, 0x73, 0x71db, 0x1, 0x1);
        gbc.writeMem(0x71db, { 0xbb });
        gbc.writeMem(0xe7b3, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x68f8, gbc.sp());
        EXPECT(0xe7b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7b3));
        EXPECT(0x6e, gbc.readMem(0xe7b4));
        // CB 6E 0337
        gbc.setState(0x18f0, 0xa9a1, 0xb860, 0x8293, 0x7a72, 0x6e67, 0x1, 0x0);
        gbc.writeMem(0x18f0, { 0xcb, 0x6e });
        gbc.writeMem(0x6e67, { 0x60 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa9a1, gbc.sp());
        EXPECT(0x18f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0338
        gbc.setState(0x4ac5, 0x63b2, 0xa6d0, 0x3190, 0xfde8, 0xa6df, 0x1, 0x0);
        gbc.writeMem(0x4ac5, { 0xcb, 0x6e });
        gbc.writeMem(0xa6df, { 0xc7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x63b2, gbc.sp());
        EXPECT(0x4ac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xa6df));
        // CB 6E 0339
        gbc.setState(0x6633, 0x3f81, 0x7c00, 0xb8cd, 0x534, 0xac84, 0x0, 0x1);
        gbc.writeMem(0x6633, { 0xcb, 0x6e });
        gbc.writeMem(0xac84, { 0x9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3f81, gbc.sp());
        EXPECT(0x6635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xac84));
        // CB 6E 033A
        gbc.setState(0x8715, 0xb379, 0x8140, 0x3fb3, 0xbd21, 0xa33, 0x1, 0x1);
        gbc.writeMem(0xa33, { 0x80 });
        gbc.writeMem(0x8715, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb379, gbc.sp());
        EXPECT(0x8717, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8715));
        EXPECT(0x6e, gbc.readMem(0x8716));
        // CB 6E 033B
        gbc.setState(0x2207, 0x1632, 0x4090, 0x5635, 0x31d9, 0x130d, 0x1, 0x1);
        gbc.writeMem(0x130d, { 0x65 });
        gbc.writeMem(0x2207, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1632, gbc.sp());
        EXPECT(0x2209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 033C
        gbc.setState(0xcf44, 0xab8, 0xe2a0, 0x798, 0x88f8, 0xc57c, 0x1, 0x0);
        gbc.writeMem(0xc57c, { 0x47 });
        gbc.writeMem(0xcf44, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xab8, gbc.sp());
        EXPECT(0xcf46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc57c));
        EXPECT(0xcb, gbc.readMem(0xcf44));
        EXPECT(0x6e, gbc.readMem(0xcf45));
        // CB 6E 033D
        gbc.setState(0xf45, 0xaeec, 0xbb00, 0x746d, 0xe0a1, 0x213f, 0x1, 0x0);
        gbc.writeMem(0xf45, { 0xcb, 0x6e });
        gbc.writeMem(0x213f, { 0xad });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xaeec, gbc.sp());
        EXPECT(0xf47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 033E
        gbc.setState(0xc42b, 0x133a, 0x2e60, 0xee45, 0xde3f, 0xbede, 0x0, 0x0);
        gbc.writeMem(0xbede, { 0x5f });
        gbc.writeMem(0xc42b, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x133a, gbc.sp());
        EXPECT(0xc42d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xbede));
        EXPECT(0xcb, gbc.readMem(0xc42b));
        EXPECT(0x6e, gbc.readMem(0xc42c));
        // CB 6E 033F
        gbc.setState(0x9c72, 0xc4c3, 0xe540, 0x62a3, 0xf65a, 0x4aab, 0x1, 0x1);
        gbc.writeMem(0x4aab, { 0x93 });
        gbc.writeMem(0x9c72, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc4c3, gbc.sp());
        EXPECT(0x9c74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c72));
        EXPECT(0x6e, gbc.readMem(0x9c73));
        // CB 6E 0340
        gbc.setState(0xd0c3, 0xb1e3, 0x1410, 0x8fbf, 0x6675, 0x51d4, 0x1, 0x1);
        gbc.writeMem(0x51d4, { 0x95 });
        gbc.writeMem(0xd0c3, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb1e3, gbc.sp());
        EXPECT(0xd0c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0c3));
        EXPECT(0x6e, gbc.readMem(0xd0c4));
        // CB 6E 0341
        gbc.setState(0xcca2, 0xd868, 0xf9c0, 0x18a1, 0xbabd, 0x4471, 0x0, 0x1);
        gbc.writeMem(0x4471, { 0xa0 });
        gbc.writeMem(0xcca2, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd868, gbc.sp());
        EXPECT(0xcca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcca2));
        EXPECT(0x6e, gbc.readMem(0xcca3));
        // CB 6E 0342
        gbc.setState(0x1e18, 0xea8d, 0x2a30, 0xc529, 0x92e3, 0xc2c0, 0x1, 0x1);
        gbc.writeMem(0x1e18, { 0xcb, 0x6e });
        gbc.writeMem(0xc2c0, { 0x23 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xea8d, gbc.sp());
        EXPECT(0x1e1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xc2c0));
        // CB 6E 0343
        gbc.setState(0x3bbe, 0x4411, 0xc320, 0xa5cf, 0x496c, 0x285e, 0x0, 0x0);
        gbc.writeMem(0x285e, { 0x29 });
        gbc.writeMem(0x3bbe, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4411, gbc.sp());
        EXPECT(0x3bc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0344
        gbc.setState(0xaf27, 0x7164, 0x5c40, 0x1239, 0xebe, 0x3227, 0x1, 0x1);
        gbc.writeMem(0x3227, { 0x5c });
        gbc.writeMem(0xaf27, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7164, gbc.sp());
        EXPECT(0xaf29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf27));
        EXPECT(0x6e, gbc.readMem(0xaf28));
        // CB 6E 0345
        gbc.setState(0x662a, 0x3eda, 0xecf0, 0x3837, 0x5629, 0xc0a1, 0x0, 0x1);
        gbc.writeMem(0x662a, { 0xcb, 0x6e });
        gbc.writeMem(0xc0a1, { 0xbf });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3eda, gbc.sp());
        EXPECT(0x662c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc0a1));
        // CB 6E 0346
        gbc.setState(0x56a6, 0xedf7, 0x8220, 0x48f, 0xc0c3, 0x6cbe, 0x1, 0x0);
        gbc.writeMem(0x56a6, { 0xcb, 0x6e });
        gbc.writeMem(0x6cbe, { 0x6a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xedf7, gbc.sp());
        EXPECT(0x56a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0347
        gbc.setState(0x556d, 0xaca9, 0x2c0, 0xc0c, 0x75ee, 0x4cc7, 0x1, 0x0);
        gbc.writeMem(0x4cc7, { 0xd8 });
        gbc.writeMem(0x556d, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xaca9, gbc.sp());
        EXPECT(0x556f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0348
        gbc.setState(0xfdd, 0x8c9, 0x8030, 0xb1d7, 0x46e5, 0xa81d, 0x0, 0x1);
        gbc.writeMem(0xfdd, { 0xcb, 0x6e });
        gbc.writeMem(0xa81d, { 0x6a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8c9, gbc.sp());
        EXPECT(0xfdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa81d));
        // CB 6E 0349
        gbc.setState(0xb123, 0x9404, 0x7000, 0xc93b, 0x5c72, 0xd41b, 0x1, 0x1);
        gbc.writeMem(0xb123, { 0xcb, 0x6e });
        gbc.writeMem(0xd41b, { 0x95 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9404, gbc.sp());
        EXPECT(0xb125, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb123));
        EXPECT(0x6e, gbc.readMem(0xb124));
        EXPECT(0x95, gbc.readMem(0xd41b));
        // CB 6E 034A
        gbc.setState(0x1437, 0xd4b5, 0xbe0, 0xc038, 0x450, 0xe302, 0x1, 0x0);
        gbc.writeMem(0x1437, { 0xcb, 0x6e });
        gbc.writeMem(0xe302, { 0xbf });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd4b5, gbc.sp());
        EXPECT(0x1439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe302));
        // CB 6E 034B
        gbc.setState(0x4476, 0x1e67, 0x3a60, 0x49f7, 0xcedf, 0xecc4, 0x1, 0x0);
        gbc.writeMem(0x4476, { 0xcb, 0x6e });
        gbc.writeMem(0xecc4, { 0x42 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1e67, gbc.sp());
        EXPECT(0x4478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xecc4));
        // CB 6E 034C
        gbc.setState(0xe609, 0x989, 0x9530, 0xeb2b, 0x98af, 0x2366, 0x0, 0x0);
        gbc.writeMem(0x2366, { 0xae });
        gbc.writeMem(0xe609, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x989, gbc.sp());
        EXPECT(0xe60b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe609));
        EXPECT(0x6e, gbc.readMem(0xe60a));
        // CB 6E 034D
        gbc.setState(0xe411, 0xa19d, 0x71a0, 0x9c7d, 0x30d0, 0xfd83, 0x1, 0x1);
        gbc.writeMem(0xe411, { 0xcb, 0x6e });
        gbc.writeMem(0xfd83, { 0x10 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa19d, gbc.sp());
        EXPECT(0xe413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe411));
        EXPECT(0x6e, gbc.readMem(0xe412));
        EXPECT(0x10, gbc.readMem(0xfd83));
        // CB 6E 034E
        gbc.setState(0x72cf, 0x4399, 0x6930, 0x5e44, 0x88f5, 0xd575, 0x0, 0x1);
        gbc.writeMem(0x72cf, { 0xcb, 0x6e });
        gbc.writeMem(0xd575, { 0x49 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4399, gbc.sp());
        EXPECT(0x72d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd575));
        // CB 6E 034F
        gbc.setState(0xb6ff, 0x98ed, 0x9a10, 0xf206, 0xabdb, 0x8bd0, 0x1, 0x1);
        gbc.writeMem(0x8bd0, { 0xf9 });
        gbc.writeMem(0xb6ff, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x98ed, gbc.sp());
        EXPECT(0xb701, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0x8bd0));
        EXPECT(0xcb, gbc.readMem(0xb6ff));
        EXPECT(0x6e, gbc.readMem(0xb700));
        // CB 6E 0350
        gbc.setState(0x1117, 0xeb0, 0xd3f0, 0xcabb, 0xfa85, 0x6729, 0x0, 0x1);
        gbc.writeMem(0x1117, { 0xcb, 0x6e });
        gbc.writeMem(0x6729, { 0xd4 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xeb0, gbc.sp());
        EXPECT(0x1119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0351
        gbc.setState(0x5200, 0xbe94, 0xb620, 0x8905, 0x35ed, 0xc4aa, 0x1, 0x0);
        gbc.writeMem(0x5200, { 0xcb, 0x6e });
        gbc.writeMem(0xc4aa, { 0x95 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xbe94, gbc.sp());
        EXPECT(0x5202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc4aa));
        // CB 6E 0352
        gbc.setState(0x838a, 0x717, 0x7060, 0x2e3a, 0x2ab7, 0x128, 0x0, 0x1);
        gbc.writeMem(0x128, { 0xa8 });
        gbc.writeMem(0x838a, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x717, gbc.sp());
        EXPECT(0x838c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x838a));
        EXPECT(0x6e, gbc.readMem(0x838b));
        // CB 6E 0353
        gbc.setState(0x3f10, 0x2ded, 0x6380, 0x9644, 0x761d, 0xe0bc, 0x0, 0x0);
        gbc.writeMem(0x3f10, { 0xcb, 0x6e });
        gbc.writeMem(0xe0bc, { 0x8f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2ded, gbc.sp());
        EXPECT(0x3f12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe0bc));
        // CB 6E 0354
        gbc.setState(0x2650, 0xcc4d, 0xa8b0, 0x131a, 0x6989, 0x297f, 0x0, 0x1);
        gbc.writeMem(0x2650, { 0xcb, 0x6e });
        gbc.writeMem(0x297f, { 0x72 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xcc4d, gbc.sp());
        EXPECT(0x2652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0355
        gbc.setState(0x9bcd, 0xc41, 0x2890, 0xd51e, 0xdbc8, 0x5d5, 0x1, 0x1);
        gbc.writeMem(0x5d5, { 0x4f });
        gbc.writeMem(0x9bcd, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc41, gbc.sp());
        EXPECT(0x9bcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bcd));
        EXPECT(0x6e, gbc.readMem(0x9bce));
        // CB 6E 0356
        gbc.setState(0x9f43, 0xefa1, 0x7a50, 0x1368, 0x5f4f, 0x55f8, 0x1, 0x0);
        gbc.writeMem(0x55f8, { 0x9a });
        gbc.writeMem(0x9f43, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xefa1, gbc.sp());
        EXPECT(0x9f45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f43));
        EXPECT(0x6e, gbc.readMem(0x9f44));
        // CB 6E 0357
        gbc.setState(0x296e, 0x8c4d, 0xb9e0, 0x1224, 0xb825, 0xe9e, 0x1, 0x0);
        gbc.writeMem(0xe9e, { 0x5b });
        gbc.writeMem(0x296e, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8c4d, gbc.sp());
        EXPECT(0x2970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0359
        gbc.setState(0x502a, 0xaafc, 0x5670, 0x67a9, 0xa3bf, 0xa199, 0x0, 0x0);
        gbc.writeMem(0x502a, { 0xcb, 0x6e });
        gbc.writeMem(0xa199, { 0x7f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xaafc, gbc.sp());
        EXPECT(0x502c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xa199));
        // CB 6E 035A
        gbc.setState(0x594b, 0xb366, 0xe3b0, 0x55ee, 0x75ad, 0x4664, 0x0, 0x1);
        gbc.writeMem(0x4664, { 0x85 });
        gbc.writeMem(0x594b, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb366, gbc.sp());
        EXPECT(0x594d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 035B
        gbc.setState(0x9a, 0x98f9, 0x9260, 0xe14e, 0xbcd3, 0xba52, 0x0, 0x1);
        gbc.writeMem(0x9a, { 0xcb, 0x6e });
        gbc.writeMem(0xba52, { 0x75 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x98f9, gbc.sp());
        EXPECT(0x9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xba52));
        // CB 6E 035C
        gbc.setState(0x8114, 0x1252, 0x5a50, 0xaea9, 0xeb3a, 0xdd72, 0x1, 0x1);
        gbc.writeMem(0x8114, { 0xcb, 0x6e });
        gbc.writeMem(0xdd72, { 0x57 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1252, gbc.sp());
        EXPECT(0x8116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8114));
        EXPECT(0x6e, gbc.readMem(0x8115));
        EXPECT(0x57, gbc.readMem(0xdd72));
        // CB 6E 035D
        gbc.setState(0x7ff2, 0x61cc, 0xebc0, 0x43e8, 0x6bd, 0xca3e, 0x1, 0x0);
        gbc.writeMem(0x7ff2, { 0xcb, 0x6e });
        gbc.writeMem(0xca3e, { 0xb4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x61cc, gbc.sp());
        EXPECT(0x7ff4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xca3e));
        // CB 6E 035E
        gbc.setState(0xc6, 0x6251, 0xcfc0, 0xcb48, 0x1bd9, 0x100f, 0x1, 0x1);
        gbc.writeMem(0xc6, { 0xcb, 0x6e });
        gbc.writeMem(0x100f, { 0x1d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6251, gbc.sp());
        EXPECT(0xc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 035F
        gbc.setState(0x4aec, 0x2a55, 0x4990, 0x6f06, 0xf9a7, 0x2236, 0x0, 0x0);
        gbc.writeMem(0x2236, { 0x5 });
        gbc.writeMem(0x4aec, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2a55, gbc.sp());
        EXPECT(0x4aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0360
        gbc.setState(0x47fa, 0xc7bc, 0xc360, 0x7e60, 0x4d1f, 0xfbdd, 0x0, 0x0);
        gbc.writeMem(0x47fa, { 0xcb, 0x6e });
        gbc.writeMem(0xfbdd, { 0x9c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc7bc, gbc.sp());
        EXPECT(0x47fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xfbdd));
        // CB 6E 0361
        gbc.setState(0xce47, 0xcb5, 0x5630, 0xf7b7, 0xac00, 0x341a, 0x1, 0x1);
        gbc.writeMem(0x341a, { 0x3e });
        gbc.writeMem(0xce47, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xcb5, gbc.sp());
        EXPECT(0xce49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce47));
        EXPECT(0x6e, gbc.readMem(0xce48));
        // CB 6E 0362
        gbc.setState(0xb79a, 0xb4cd, 0x99c0, 0x7acc, 0x9106, 0x655a, 0x1, 0x0);
        gbc.writeMem(0x655a, { 0xf5 });
        gbc.writeMem(0xb79a, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb4cd, gbc.sp());
        EXPECT(0xb79c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb79a));
        EXPECT(0x6e, gbc.readMem(0xb79b));
        // CB 6E 0363
        gbc.setState(0xb0b9, 0xf897, 0x3170, 0x9a0c, 0x31ee, 0x5110, 0x0, 0x0);
        gbc.writeMem(0x5110, { 0x6d });
        gbc.writeMem(0xb0b9, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf897, gbc.sp());
        EXPECT(0xb0bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0b9));
        EXPECT(0x6e, gbc.readMem(0xb0ba));
        // CB 6E 0364
        gbc.setState(0x55e7, 0x847b, 0xc480, 0x121d, 0xa6be, 0x82e6, 0x1, 0x0);
        gbc.writeMem(0x55e7, { 0xcb, 0x6e });
        gbc.writeMem(0x82e6, { 0xdd });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x847b, gbc.sp());
        EXPECT(0x55e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x82e6));
        // CB 6E 0365
        gbc.setState(0x26fa, 0xad70, 0x7880, 0x2c58, 0xdf18, 0xdc8e, 0x0, 0x0);
        gbc.writeMem(0x26fa, { 0xcb, 0x6e });
        gbc.writeMem(0xdc8e, { 0x29 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xad70, gbc.sp());
        EXPECT(0x26fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xdc8e));
        // CB 6E 0366
        gbc.setState(0xd50a, 0x1d63, 0x5070, 0xc112, 0x5aef, 0x1512, 0x1, 0x0);
        gbc.writeMem(0x1512, { 0xb1 });
        gbc.writeMem(0xd50a, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1d63, gbc.sp());
        EXPECT(0xd50c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd50a));
        EXPECT(0x6e, gbc.readMem(0xd50b));
        // CB 6E 0367
        gbc.setState(0xebc9, 0x6c83, 0x4990, 0x9854, 0x5aad, 0x84c9, 0x0, 0x0);
        gbc.writeMem(0x84c9, { 0x42 });
        gbc.writeMem(0xebc9, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6c83, gbc.sp());
        EXPECT(0xebcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x84c9));
        EXPECT(0xcb, gbc.readMem(0xebc9));
        EXPECT(0x6e, gbc.readMem(0xebca));
        // CB 6E 0368
        gbc.setState(0x409d, 0x253f, 0x68c0, 0x9aff, 0x9131, 0xe14c, 0x1, 0x1);
        gbc.writeMem(0x409d, { 0xcb, 0x6e });
        gbc.writeMem(0xe14c, { 0x9b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x253f, gbc.sp());
        EXPECT(0x409f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe14c));
        // CB 6E 0369
        gbc.setState(0xe11a, 0xfce3, 0x2e70, 0x617, 0x693, 0x2e0c, 0x1, 0x1);
        gbc.writeMem(0x2e0c, { 0xfd });
        gbc.writeMem(0xe11a, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xfce3, gbc.sp());
        EXPECT(0xe11c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe11a));
        EXPECT(0x6e, gbc.readMem(0xe11b));
        // CB 6E 036A
        gbc.setState(0xef8, 0x8977, 0x64e0, 0xf72, 0x37d8, 0x5efc, 0x1, 0x0);
        gbc.writeMem(0xef8, { 0xcb, 0x6e });
        gbc.writeMem(0x5efc, { 0x81 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8977, gbc.sp());
        EXPECT(0xefa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 036B
        gbc.setState(0xe7e4, 0x672c, 0xf7a0, 0x2a8d, 0xc626, 0xfa52, 0x1, 0x1);
        gbc.writeMem(0xe7e4, { 0xcb, 0x6e });
        gbc.writeMem(0xfa52, { 0x3e });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x672c, gbc.sp());
        EXPECT(0xe7e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7e4));
        EXPECT(0x6e, gbc.readMem(0xe7e5));
        EXPECT(0x3e, gbc.readMem(0xfa52));
        // CB 6E 036C
        gbc.setState(0xe573, 0x28f9, 0xfab0, 0x43a8, 0x120d, 0x957a, 0x1, 0x0);
        gbc.writeMem(0x957a, { 0xd });
        gbc.writeMem(0xe573, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x28f9, gbc.sp());
        EXPECT(0xe575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x957a));
        EXPECT(0xcb, gbc.readMem(0xe573));
        EXPECT(0x6e, gbc.readMem(0xe574));
        // CB 6E 036D
        gbc.setState(0xebfd, 0x2ecb, 0x5a40, 0x238a, 0xd330, 0xc597, 0x0, 0x1);
        gbc.writeMem(0xc597, { 0x47 });
        gbc.writeMem(0xebfd, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2ecb, gbc.sp());
        EXPECT(0xebff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc597));
        EXPECT(0xcb, gbc.readMem(0xebfd));
        EXPECT(0x6e, gbc.readMem(0xebfe));
        // CB 6E 036E
        gbc.setState(0xc200, 0x194e, 0x5e0, 0xd8d8, 0xd2a1, 0x9c2, 0x0, 0x0);
        gbc.writeMem(0x9c2, { 0x13 });
        gbc.writeMem(0xc200, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x194e, gbc.sp());
        EXPECT(0xc202, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc200));
        EXPECT(0x6e, gbc.readMem(0xc201));
        // CB 6E 036F
        gbc.setState(0xd332, 0x5ec7, 0x20c0, 0x6ea3, 0x2bb8, 0xf5b5, 0x0, 0x1);
        gbc.writeMem(0xd332, { 0xcb, 0x6e });
        gbc.writeMem(0xf5b5, { 0x88 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5ec7, gbc.sp());
        EXPECT(0xd334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd332));
        EXPECT(0x6e, gbc.readMem(0xd333));
        EXPECT(0x88, gbc.readMem(0xf5b5));
        // CB 6E 0370
        gbc.setState(0x9496, 0x6e9f, 0x1340, 0x13e4, 0xe413, 0xa30e, 0x0, 0x0);
        gbc.writeMem(0x9496, { 0xcb, 0x6e });
        gbc.writeMem(0xa30e, { 0xe });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6e9f, gbc.sp());
        EXPECT(0x9498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9496));
        EXPECT(0x6e, gbc.readMem(0x9497));
        EXPECT(0xe, gbc.readMem(0xa30e));
        // CB 6E 0371
        gbc.setState(0x8c9c, 0xe51e, 0x74c0, 0xb1af, 0xbf4b, 0xc56a, 0x1, 0x1);
        gbc.writeMem(0x8c9c, { 0xcb, 0x6e });
        gbc.writeMem(0xc56a, { 0x30 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe51e, gbc.sp());
        EXPECT(0x8c9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c9c));
        EXPECT(0x6e, gbc.readMem(0x8c9d));
        EXPECT(0x30, gbc.readMem(0xc56a));
        // CB 6E 0373
        gbc.setState(0xff2, 0xe578, 0x1140, 0xe719, 0x8fe, 0xc79b, 0x1, 0x1);
        gbc.writeMem(0xff2, { 0xcb, 0x6e });
        gbc.writeMem(0xc79b, { 0x8c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe578, gbc.sp());
        EXPECT(0xff4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc79b));
        // CB 6E 0374
        gbc.setState(0x9051, 0x37fe, 0x9850, 0xb375, 0xf7f6, 0x5b3, 0x1, 0x1);
        gbc.writeMem(0x5b3, { 0xa8 });
        gbc.writeMem(0x9051, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x37fe, gbc.sp());
        EXPECT(0x9053, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9051));
        EXPECT(0x6e, gbc.readMem(0x9052));
        // CB 6E 0375
        gbc.setState(0x8517, 0x1a06, 0x4b50, 0x6cb2, 0xa875, 0xb99a, 0x0, 0x1);
        gbc.writeMem(0x8517, { 0xcb, 0x6e });
        gbc.writeMem(0xb99a, { 0xa4 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1a06, gbc.sp());
        EXPECT(0x8519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8517));
        EXPECT(0x6e, gbc.readMem(0x8518));
        EXPECT(0xa4, gbc.readMem(0xb99a));
        // CB 6E 0376
        gbc.setState(0xe70e, 0xc415, 0x22d0, 0x378e, 0x5686, 0x89c7, 0x0, 0x0);
        gbc.writeMem(0x89c7, { 0x4a });
        gbc.writeMem(0xe70e, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc415, gbc.sp());
        EXPECT(0xe710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x89c7));
        EXPECT(0xcb, gbc.readMem(0xe70e));
        EXPECT(0x6e, gbc.readMem(0xe70f));
        // CB 6E 0377
        gbc.setState(0x973a, 0xbbab, 0x8570, 0xad5f, 0x2d55, 0x66e8, 0x1, 0x0);
        gbc.writeMem(0x66e8, { 0xa0 });
        gbc.writeMem(0x973a, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xbbab, gbc.sp());
        EXPECT(0x973c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x973a));
        EXPECT(0x6e, gbc.readMem(0x973b));
        // CB 6E 0378
        gbc.setState(0x13d7, 0xc7ab, 0x51b0, 0xd7d3, 0x6298, 0x49b8, 0x1, 0x1);
        gbc.writeMem(0x13d7, { 0xcb, 0x6e });
        gbc.writeMem(0x49b8, { 0xfd });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc7ab, gbc.sp());
        EXPECT(0x13d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0379
        gbc.setState(0xc62a, 0x3934, 0x88c0, 0x249b, 0x9cc5, 0x72ff, 0x1, 0x1);
        gbc.writeMem(0x72ff, { 0xb });
        gbc.writeMem(0xc62a, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3934, gbc.sp());
        EXPECT(0xc62c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc62a));
        EXPECT(0x6e, gbc.readMem(0xc62b));
        // CB 6E 037A
        gbc.setState(0xd0be, 0xabde, 0xf10, 0xd777, 0x7013, 0x6ded, 0x0, 0x0);
        gbc.writeMem(0x6ded, { 0x66 });
        gbc.writeMem(0xd0be, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xabde, gbc.sp());
        EXPECT(0xd0c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0be));
        EXPECT(0x6e, gbc.readMem(0xd0bf));
        // CB 6E 037B
        gbc.setState(0xe02d, 0x9372, 0xa720, 0x1081, 0x16ae, 0x4d5b, 0x0, 0x0);
        gbc.writeMem(0x4d5b, { 0x6a });
        gbc.writeMem(0xe02d, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9372, gbc.sp());
        EXPECT(0xe02f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe02d));
        EXPECT(0x6e, gbc.readMem(0xe02e));
        // CB 6E 037C
        gbc.setState(0xe07d, 0x1d9a, 0x40d0, 0x5b1, 0xd0ee, 0xc9d5, 0x1, 0x0);
        gbc.writeMem(0xc9d5, { 0x54 });
        gbc.writeMem(0xe07d, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1d9a, gbc.sp());
        EXPECT(0xe07f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xc9d5));
        EXPECT(0xcb, gbc.readMem(0xe07d));
        EXPECT(0x6e, gbc.readMem(0xe07e));
        // CB 6E 037D
        gbc.setState(0xd5e8, 0xdfae, 0xa9e0, 0xcd97, 0xc845, 0x1ce6, 0x0, 0x0);
        gbc.writeMem(0x1ce6, { 0x43 });
        gbc.writeMem(0xd5e8, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xdfae, gbc.sp());
        EXPECT(0xd5ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5e8));
        EXPECT(0x6e, gbc.readMem(0xd5e9));
        // CB 6E 037E
        gbc.setState(0x4ef3, 0x6e0c, 0x3920, 0xade3, 0xbeca, 0x757, 0x0, 0x0);
        gbc.writeMem(0x757, { 0x71 });
        gbc.writeMem(0x4ef3, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6e0c, gbc.sp());
        EXPECT(0x4ef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0380
        gbc.setState(0x1573, 0x487d, 0x7c00, 0x2036, 0x94a9, 0x339d, 0x0, 0x1);
        gbc.writeMem(0x1573, { 0xcb, 0x6e });
        gbc.writeMem(0x339d, { 0xa4 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x487d, gbc.sp());
        EXPECT(0x1575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0382
        gbc.setState(0xe133, 0x3100, 0x4850, 0x472a, 0xc27f, 0x38e9, 0x1, 0x0);
        gbc.writeMem(0x38e9, { 0x47 });
        gbc.writeMem(0xe133, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3100, gbc.sp());
        EXPECT(0xe135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe133));
        EXPECT(0x6e, gbc.readMem(0xe134));
        // CB 6E 0383
        gbc.setState(0x9f65, 0x102e, 0x4e20, 0xe109, 0x5e6b, 0xe354, 0x1, 0x1);
        gbc.writeMem(0x9f65, { 0xcb, 0x6e });
        gbc.writeMem(0xe354, { 0x64 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x102e, gbc.sp());
        EXPECT(0x9f67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f65));
        EXPECT(0x6e, gbc.readMem(0x9f66));
        EXPECT(0x64, gbc.readMem(0xe354));
        // CB 6E 0384
        gbc.setState(0x73d, 0xeb13, 0xb200, 0x2da4, 0x13d6, 0x86ed, 0x1, 0x0);
        gbc.writeMem(0x73d, { 0xcb, 0x6e });
        gbc.writeMem(0x86ed, { 0x3e });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xeb13, gbc.sp());
        EXPECT(0x73f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x86ed));
        // CB 6E 0385
        gbc.setState(0x634, 0x4d0b, 0xa670, 0x1082, 0x5849, 0x9e63, 0x1, 0x0);
        gbc.writeMem(0x634, { 0xcb, 0x6e });
        gbc.writeMem(0x9e63, { 0xd });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4d0b, gbc.sp());
        EXPECT(0x636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x9e63));
        // CB 6E 0386
        gbc.setState(0x301c, 0x8096, 0xf280, 0x39c2, 0xc89f, 0xd079, 0x1, 0x1);
        gbc.writeMem(0x301c, { 0xcb, 0x6e });
        gbc.writeMem(0xd079, { 0x3b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8096, gbc.sp());
        EXPECT(0x301e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd079));
        // CB 6E 0387
        gbc.setState(0x4b6d, 0x87ed, 0x65e0, 0x157b, 0x4663, 0x2d05, 0x0, 0x0);
        gbc.writeMem(0x2d05, { 0x10 });
        gbc.writeMem(0x4b6d, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x87ed, gbc.sp());
        EXPECT(0x4b6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 0388
        gbc.setState(0xfd5, 0xccfb, 0x25c0, 0xa3e8, 0x4fc8, 0x9b10, 0x0, 0x0);
        gbc.writeMem(0xfd5, { 0xcb, 0x6e });
        gbc.writeMem(0x9b10, { 0x38 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xccfb, gbc.sp());
        EXPECT(0xfd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9b10));
        // CB 6E 0389
        gbc.setState(0xba2a, 0x514d, 0x5d10, 0x967a, 0x4774, 0x2d10, 0x0, 0x1);
        gbc.writeMem(0x2d10, { 0xf0 });
        gbc.writeMem(0xba2a, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x514d, gbc.sp());
        EXPECT(0xba2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba2a));
        EXPECT(0x6e, gbc.readMem(0xba2b));
        // CB 6E 038A
        gbc.setState(0x576e, 0x162e, 0x9930, 0xd6f6, 0xa9ab, 0x929d, 0x0, 0x0);
        gbc.writeMem(0x576e, { 0xcb, 0x6e });
        gbc.writeMem(0x929d, { 0x64 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x162e, gbc.sp());
        EXPECT(0x5770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x929d));
        // CB 6E 038B
        gbc.setState(0x44c8, 0x8596, 0x3c30, 0xe1b3, 0x69a7, 0x7762, 0x1, 0x1);
        gbc.writeMem(0x44c8, { 0xcb, 0x6e });
        gbc.writeMem(0x7762, { 0x60 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8596, gbc.sp());
        EXPECT(0x44ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 038C
        gbc.setState(0x6c6f, 0x1aa, 0x28b0, 0x1d6d, 0xfe89, 0xbbb5, 0x0, 0x0);
        gbc.writeMem(0x6c6f, { 0xcb, 0x6e });
        gbc.writeMem(0xbbb5, { 0x57 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1aa, gbc.sp());
        EXPECT(0x6c71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xbbb5));
        // CB 6E 038D
        gbc.setState(0x3f49, 0x9bea, 0x3cf0, 0x7dc6, 0x4f93, 0xc8a2, 0x0, 0x0);
        gbc.writeMem(0x3f49, { 0xcb, 0x6e });
        gbc.writeMem(0xc8a2, { 0xb6 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9bea, gbc.sp());
        EXPECT(0x3f4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc8a2));
        // CB 6E 038E
        gbc.setState(0xdd0b, 0x676a, 0xafb0, 0xad35, 0xdcf7, 0x77ff, 0x0, 0x1);
        gbc.writeMem(0x77ff, { 0x45 });
        gbc.writeMem(0xdd0b, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x676a, gbc.sp());
        EXPECT(0xdd0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd0b));
        EXPECT(0x6e, gbc.readMem(0xdd0c));
        // CB 6E 038F
        gbc.setState(0x6176, 0x1d0d, 0xfc70, 0x4527, 0xaa69, 0xaa3, 0x0, 0x0);
        gbc.writeMem(0xaa3, { 0x5e });
        gbc.writeMem(0x6176, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1d0d, gbc.sp());
        EXPECT(0x6178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 0390
        gbc.setState(0x7e82, 0x50ef, 0x85f0, 0x18b6, 0x698b, 0xe577, 0x0, 0x0);
        gbc.writeMem(0x7e82, { 0xcb, 0x6e });
        gbc.writeMem(0xe577, { 0x2a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x50ef, gbc.sp());
        EXPECT(0x7e84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xe577));
        // CB 6E 0391
        gbc.setState(0xbae8, 0x5d6a, 0x610, 0xd4fc, 0x24bf, 0x6286, 0x1, 0x1);
        gbc.writeMem(0x6286, { 0xa7 });
        gbc.writeMem(0xbae8, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5d6a, gbc.sp());
        EXPECT(0xbaea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbae8));
        EXPECT(0x6e, gbc.readMem(0xbae9));
        // CB 6E 0392
        gbc.setState(0xe67a, 0x60dd, 0xf3d0, 0x945e, 0x7b22, 0x81f3, 0x0, 0x0);
        gbc.writeMem(0x81f3, { 0x1e });
        gbc.writeMem(0xe67a, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x60dd, gbc.sp());
        EXPECT(0xe67c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0x81f3));
        EXPECT(0xcb, gbc.readMem(0xe67a));
        EXPECT(0x6e, gbc.readMem(0xe67b));
        // CB 6E 0393
        gbc.setState(0xa7ad, 0x754a, 0xb280, 0x39a4, 0x2c66, 0x7d54, 0x0, 0x1);
        gbc.writeMem(0x7d54, { 0x3c });
        gbc.writeMem(0xa7ad, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x754a, gbc.sp());
        EXPECT(0xa7af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7ad));
        EXPECT(0x6e, gbc.readMem(0xa7ae));
        // CB 6E 0395
        gbc.setState(0x9091, 0xf7a1, 0x9960, 0xe036, 0xc710, 0xa2e4, 0x1, 0x0);
        gbc.writeMem(0x9091, { 0xcb, 0x6e });
        gbc.writeMem(0xa2e4, { 0xf });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf7a1, gbc.sp());
        EXPECT(0x9093, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9091));
        EXPECT(0x6e, gbc.readMem(0x9092));
        EXPECT(0xf, gbc.readMem(0xa2e4));
        // CB 6E 0396
        gbc.setState(0xda02, 0x3c5, 0xe9c0, 0x2384, 0xd52e, 0xca51, 0x0, 0x1);
        gbc.writeMem(0xca51, { 0x93 });
        gbc.writeMem(0xda02, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3c5, gbc.sp());
        EXPECT(0xda04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xca51));
        EXPECT(0xcb, gbc.readMem(0xda02));
        EXPECT(0x6e, gbc.readMem(0xda03));
        // CB 6E 0397
        gbc.setState(0x6ac2, 0xcb34, 0x1ad0, 0x6f16, 0x1675, 0xfc47, 0x1, 0x0);
        gbc.writeMem(0x6ac2, { 0xcb, 0x6e });
        gbc.writeMem(0xfc47, { 0x37 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xcb34, gbc.sp());
        EXPECT(0x6ac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xfc47));
        // CB 6E 0398
        gbc.setState(0xcd80, 0xf68, 0xc770, 0xa02d, 0xfc8b, 0x6642, 0x0, 0x1);
        gbc.writeMem(0x6642, { 0xe0 });
        gbc.writeMem(0xcd80, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf68, gbc.sp());
        EXPECT(0xcd82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd80));
        EXPECT(0x6e, gbc.readMem(0xcd81));
        // CB 6E 039A
        gbc.setState(0x473d, 0x2a9d, 0xc400, 0x67f, 0x75a5, 0xbf63, 0x0, 0x0);
        gbc.writeMem(0x473d, { 0xcb, 0x6e });
        gbc.writeMem(0xbf63, { 0x13 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2a9d, gbc.sp());
        EXPECT(0x473f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xbf63));
        // CB 6E 039B
        gbc.setState(0x1735, 0x32fd, 0x9c70, 0x5733, 0x24bb, 0xbbfc, 0x1, 0x0);
        gbc.writeMem(0x1735, { 0xcb, 0x6e });
        gbc.writeMem(0xbbfc, { 0x86 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x32fd, gbc.sp());
        EXPECT(0x1737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xbbfc));
        // CB 6E 039C
        gbc.setState(0x659d, 0x641c, 0x4d70, 0x5ba9, 0x543b, 0xd6b, 0x1, 0x0);
        gbc.writeMem(0xd6b, { 0x9a });
        gbc.writeMem(0x659d, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x641c, gbc.sp());
        EXPECT(0x659f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 039D
        gbc.setState(0x782e, 0x6dd7, 0x9580, 0x568, 0x69f1, 0x67f7, 0x0, 0x0);
        gbc.writeMem(0x67f7, { 0xb4 });
        gbc.writeMem(0x782e, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6dd7, gbc.sp());
        EXPECT(0x7830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 039E
        gbc.setState(0xc3b5, 0xf29a, 0x6e40, 0xc0f4, 0x3e2d, 0x3079, 0x1, 0x0);
        gbc.writeMem(0x3079, { 0xc3 });
        gbc.writeMem(0xc3b5, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf29a, gbc.sp());
        EXPECT(0xc3b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3b5));
        EXPECT(0x6e, gbc.readMem(0xc3b6));
        // CB 6E 039F
        gbc.setState(0x5aed, 0x736e, 0x47e0, 0xe56a, 0xec2, 0x2921, 0x0, 0x1);
        gbc.writeMem(0x2921, { 0xde });
        gbc.writeMem(0x5aed, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x736e, gbc.sp());
        EXPECT(0x5aef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 03A0
        gbc.setState(0xcefe, 0x4e25, 0x4880, 0xa2d3, 0xcb6b, 0xa0d1, 0x1, 0x0);
        gbc.writeMem(0xa0d1, { 0x57 });
        gbc.writeMem(0xcefe, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4e25, gbc.sp());
        EXPECT(0xcf00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xa0d1));
        EXPECT(0xcb, gbc.readMem(0xcefe));
        EXPECT(0x6e, gbc.readMem(0xceff));
        // CB 6E 03A1
        gbc.setState(0xda5, 0xecc4, 0x6280, 0xf74a, 0xc200, 0x54d9, 0x1, 0x1);
        gbc.writeMem(0xda5, { 0xcb, 0x6e });
        gbc.writeMem(0x54d9, { 0xb4 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xecc4, gbc.sp());
        EXPECT(0xda7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 03A3
        gbc.setState(0x8c1e, 0x505f, 0x1d0, 0xea9c, 0xbcca, 0x8e54, 0x0, 0x1);
        gbc.writeMem(0x8c1e, { 0xcb, 0x6e });
        gbc.writeMem(0x8e54, { 0x4a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x505f, gbc.sp());
        EXPECT(0x8c20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c1e));
        EXPECT(0x6e, gbc.readMem(0x8c1f));
        EXPECT(0x4a, gbc.readMem(0x8e54));
        // CB 6E 03A4
        gbc.setState(0xc1c5, 0xa1d8, 0x6fd0, 0xc462, 0x8ba9, 0xbd91, 0x1, 0x0);
        gbc.writeMem(0xbd91, { 0xb1 });
        gbc.writeMem(0xc1c5, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa1d8, gbc.sp());
        EXPECT(0xc1c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xbd91));
        EXPECT(0xcb, gbc.readMem(0xc1c5));
        EXPECT(0x6e, gbc.readMem(0xc1c6));
        // CB 6E 03A5
        gbc.setState(0xa1bb, 0x323d, 0x3710, 0x6dc4, 0x4266, 0x7d10, 0x0, 0x1);
        gbc.writeMem(0x7d10, { 0xc3 });
        gbc.writeMem(0xa1bb, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x323d, gbc.sp());
        EXPECT(0xa1bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1bb));
        EXPECT(0x6e, gbc.readMem(0xa1bc));
        // CB 6E 03A6
        gbc.setState(0x2f25, 0xe53e, 0x3dc0, 0x31ac, 0xe172, 0x98ca, 0x0, 0x1);
        gbc.writeMem(0x2f25, { 0xcb, 0x6e });
        gbc.writeMem(0x98ca, { 0x45 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe53e, gbc.sp());
        EXPECT(0x2f27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x98ca));
        // CB 6E 03A7
        gbc.setState(0x997f, 0xd543, 0x19c0, 0x445b, 0x1d3d, 0x3cef, 0x0, 0x0);
        gbc.writeMem(0x3cef, { 0xd2 });
        gbc.writeMem(0x997f, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd543, gbc.sp());
        EXPECT(0x9981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x997f));
        EXPECT(0x6e, gbc.readMem(0x9980));
        // CB 6E 03A8
        gbc.setState(0x2bff, 0xa046, 0x9d40, 0x9da6, 0xc726, 0x5de1, 0x1, 0x0);
        gbc.writeMem(0x2bff, { 0xcb, 0x6e });
        gbc.writeMem(0x5de1, { 0x7b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa046, gbc.sp());
        EXPECT(0x2c01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 03A9
        gbc.setState(0xd5b, 0xf7eb, 0xfd50, 0xbbbd, 0xf5a4, 0xb8d1, 0x1, 0x1);
        gbc.writeMem(0xd5b, { 0xcb, 0x6e });
        gbc.writeMem(0xb8d1, { 0x1c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf7eb, gbc.sp());
        EXPECT(0xd5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xb8d1));
        // CB 6E 03AA
        gbc.setState(0x863a, 0x478c, 0xa3d0, 0xd04d, 0x222c, 0x69d1, 0x1, 0x0);
        gbc.writeMem(0x69d1, { 0xcd });
        gbc.writeMem(0x863a, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x478c, gbc.sp());
        EXPECT(0x863c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x863a));
        EXPECT(0x6e, gbc.readMem(0x863b));
        // CB 6E 03AB
        gbc.setState(0x3cce, 0x9640, 0xbe0, 0x598d, 0xc0fe, 0xc091, 0x1, 0x1);
        gbc.writeMem(0x3cce, { 0xcb, 0x6e });
        gbc.writeMem(0xc091, { 0x4f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9640, gbc.sp());
        EXPECT(0x3cd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xc091));
        // CB 6E 03AC
        gbc.setState(0xbe70, 0xa582, 0x5de0, 0x745b, 0xc167, 0xb6e5, 0x1, 0x0);
        gbc.writeMem(0xb6e5, { 0xd6 });
        gbc.writeMem(0xbe70, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa582, gbc.sp());
        EXPECT(0xbe72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb6e5));
        EXPECT(0xcb, gbc.readMem(0xbe70));
        EXPECT(0x6e, gbc.readMem(0xbe71));
        // CB 6E 03AD
        gbc.setState(0x11de, 0x9e05, 0xa5c0, 0xebe, 0x37e9, 0x32d4, 0x0, 0x1);
        gbc.writeMem(0x11de, { 0xcb, 0x6e });
        gbc.writeMem(0x32d4, { 0x55 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9e05, gbc.sp());
        EXPECT(0x11e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 03AE
        gbc.setState(0x87c, 0xd733, 0x7700, 0x2a26, 0x5340, 0xc72a, 0x0, 0x1);
        gbc.writeMem(0x87c, { 0xcb, 0x6e });
        gbc.writeMem(0xc72a, { 0x86 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd733, gbc.sp());
        EXPECT(0x87e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc72a));
        // CB 6E 03AF
        gbc.setState(0xe4e6, 0x1fbb, 0xa080, 0x56a6, 0x3b61, 0xdc77, 0x0, 0x1);
        gbc.writeMem(0xdc77, { 0x30 });
        gbc.writeMem(0xe4e6, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1fbb, gbc.sp());
        EXPECT(0xe4e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xdc77));
        EXPECT(0xcb, gbc.readMem(0xe4e6));
        EXPECT(0x6e, gbc.readMem(0xe4e7));
        // CB 6E 03B0
        gbc.setState(0x190, 0xb55b, 0xb100, 0xb32a, 0x16cd, 0x2536, 0x1, 0x1);
        gbc.writeMem(0x190, { 0xcb, 0x6e });
        gbc.writeMem(0x2536, { 0xfc });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb55b, gbc.sp());
        EXPECT(0x192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 03B1
        gbc.setState(0x6df2, 0x7d28, 0xa4c0, 0x8e62, 0xb97d, 0x4ea0, 0x1, 0x1);
        gbc.writeMem(0x4ea0, { 0x40 });
        gbc.writeMem(0x6df2, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7d28, gbc.sp());
        EXPECT(0x6df4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 03B2
        gbc.setState(0x57e7, 0x5f29, 0xaa70, 0xef3a, 0x461b, 0x5584, 0x1, 0x1);
        gbc.writeMem(0x5584, { 0x47 });
        gbc.writeMem(0x57e7, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5f29, gbc.sp());
        EXPECT(0x57e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 03B3
        gbc.setState(0xae41, 0xcf0e, 0x5e40, 0x6a49, 0x5043, 0x115c, 0x0, 0x0);
        gbc.writeMem(0x115c, { 0x2f });
        gbc.writeMem(0xae41, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xcf0e, gbc.sp());
        EXPECT(0xae43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae41));
        EXPECT(0x6e, gbc.readMem(0xae42));
        // CB 6E 03B4
        gbc.setState(0x6096, 0xbc94, 0x36f0, 0x9c71, 0xf9be, 0xdb62, 0x1, 0x0);
        gbc.writeMem(0x6096, { 0xcb, 0x6e });
        gbc.writeMem(0xdb62, { 0x16 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xbc94, gbc.sp());
        EXPECT(0x6098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xdb62));
        // CB 6E 03B5
        gbc.setState(0x6a56, 0x8727, 0xe0d0, 0x427f, 0xbce8, 0xefbd, 0x0, 0x1);
        gbc.writeMem(0x6a56, { 0xcb, 0x6e });
        gbc.writeMem(0xefbd, { 0xae });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8727, gbc.sp());
        EXPECT(0x6a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xefbd));
        // CB 6E 03B6
        gbc.setState(0xef64, 0x7d7c, 0x4490, 0x253d, 0xd300, 0x317d, 0x0, 0x0);
        gbc.writeMem(0x317d, { 0x48 });
        gbc.writeMem(0xef64, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7d7c, gbc.sp());
        EXPECT(0xef66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef64));
        EXPECT(0x6e, gbc.readMem(0xef65));
        // CB 6E 03B7
        gbc.setState(0x853, 0x4b7d, 0x36f0, 0x2596, 0x649b, 0xac1c, 0x0, 0x0);
        gbc.writeMem(0x853, { 0xcb, 0x6e });
        gbc.writeMem(0xac1c, { 0x90 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4b7d, gbc.sp());
        EXPECT(0x855, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xac1c));
        // CB 6E 03B8
        gbc.setState(0x9271, 0x7fd0, 0x1ed0, 0x79c, 0x6b6d, 0x4451, 0x0, 0x1);
        gbc.writeMem(0x4451, { 0xfe });
        gbc.writeMem(0x9271, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7fd0, gbc.sp());
        EXPECT(0x9273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9271));
        EXPECT(0x6e, gbc.readMem(0x9272));
        // CB 6E 03B9
        gbc.setState(0x8f4e, 0xac1e, 0x8d20, 0x9332, 0x9aba, 0xa22e, 0x1, 0x1);
        gbc.writeMem(0x8f4e, { 0xcb, 0x6e });
        gbc.writeMem(0xa22e, { 0xc9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xac1e, gbc.sp());
        EXPECT(0x8f50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f4e));
        EXPECT(0x6e, gbc.readMem(0x8f4f));
        EXPECT(0xc9, gbc.readMem(0xa22e));
        // CB 6E 03BA
        gbc.setState(0x1e72, 0x818a, 0x37d0, 0x6f0c, 0x503d, 0xf189, 0x1, 0x0);
        gbc.writeMem(0x1e72, { 0xcb, 0x6e });
        gbc.writeMem(0xf189, { 0xf0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x818a, gbc.sp());
        EXPECT(0x1e74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xf189));
        // CB 6E 03BB
        gbc.setState(0x4c1e, 0x993c, 0xd8b0, 0x2db6, 0xe5ff, 0xfbc, 0x1, 0x0);
        gbc.writeMem(0xfbc, { 0xdf });
        gbc.writeMem(0x4c1e, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x993c, gbc.sp());
        EXPECT(0x4c20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 03BC
        gbc.setState(0x1e6e, 0x2feb, 0xb1f0, 0xd8b8, 0x4429, 0x8572, 0x1, 0x0);
        gbc.writeMem(0x1e6e, { 0xcb, 0x6e });
        gbc.writeMem(0x8572, { 0xc4 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2feb, gbc.sp());
        EXPECT(0x1e70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0x8572));
        // CB 6E 03BD
        gbc.setState(0x8677, 0x25e2, 0xac50, 0x54a8, 0xbede, 0xeaa, 0x1, 0x1);
        gbc.writeMem(0xeaa, { 0xc7 });
        gbc.writeMem(0x8677, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x25e2, gbc.sp());
        EXPECT(0x8679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8677));
        EXPECT(0x6e, gbc.readMem(0x8678));
        // CB 6E 03BE
        gbc.setState(0xbffd, 0xb720, 0x4200, 0x2cf0, 0xfa6a, 0x4d2c, 0x0, 0x1);
        gbc.writeMem(0x4d2c, { 0x32 });
        gbc.writeMem(0xbffd, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb720, gbc.sp());
        EXPECT(0xbfff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbffd));
        EXPECT(0x6e, gbc.readMem(0xbffe));
        // CB 6E 03BF
        gbc.setState(0x17ea, 0x40be, 0xae90, 0xea6d, 0xf30b, 0x14ee, 0x1, 0x0);
        gbc.writeMem(0x14ee, { 0x32 });
        gbc.writeMem(0x17ea, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x40be, gbc.sp());
        EXPECT(0x17ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 03C1
        gbc.setState(0xd317, 0x74f7, 0x78a0, 0xcd52, 0xb65, 0xf23, 0x0, 0x0);
        gbc.writeMem(0xf23, { 0xab });
        gbc.writeMem(0xd317, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x74f7, gbc.sp());
        EXPECT(0xd319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd317));
        EXPECT(0x6e, gbc.readMem(0xd318));
        // CB 6E 03C2
        gbc.setState(0x7b26, 0xb1ab, 0x1340, 0xf626, 0x25d2, 0x3032, 0x0, 0x0);
        gbc.writeMem(0x3032, { 0x9e });
        gbc.writeMem(0x7b26, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb1ab, gbc.sp());
        EXPECT(0x7b28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 03C3
        gbc.setState(0x9ac6, 0xd503, 0xcbb0, 0x33d1, 0x2851, 0xc9c5, 0x1, 0x1);
        gbc.writeMem(0x9ac6, { 0xcb, 0x6e });
        gbc.writeMem(0xc9c5, { 0xc3 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd503, gbc.sp());
        EXPECT(0x9ac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ac6));
        EXPECT(0x6e, gbc.readMem(0x9ac7));
        EXPECT(0xc3, gbc.readMem(0xc9c5));
        // CB 6E 03C5
        gbc.setState(0xc0f3, 0x6f1, 0x1f50, 0x45bb, 0x4d00, 0x2ca7, 0x0, 0x0);
        gbc.writeMem(0x2ca7, { 0x8b });
        gbc.writeMem(0xc0f3, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6f1, gbc.sp());
        EXPECT(0xc0f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0f3));
        EXPECT(0x6e, gbc.readMem(0xc0f4));
        // CB 6E 03C6
        gbc.setState(0x4e2b, 0x7ffa, 0x780, 0xf5d9, 0x9c4, 0xa5ed, 0x1, 0x0);
        gbc.writeMem(0x4e2b, { 0xcb, 0x6e });
        gbc.writeMem(0xa5ed, { 0xce });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7ffa, gbc.sp());
        EXPECT(0x4e2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xa5ed));
        // CB 6E 03C7
        gbc.setState(0xd1c1, 0x4d2d, 0x6dc0, 0x8821, 0xa592, 0xe458, 0x1, 0x1);
        gbc.writeMem(0xd1c1, { 0xcb, 0x6e });
        gbc.writeMem(0xe458, { 0x67 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4d2d, gbc.sp());
        EXPECT(0xd1c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1c1));
        EXPECT(0x6e, gbc.readMem(0xd1c2));
        EXPECT(0x67, gbc.readMem(0xe458));
        // CB 6E 03C8
        gbc.setState(0xc314, 0x4b3, 0xad70, 0xfda5, 0xecf3, 0xd5a3, 0x0, 0x0);
        gbc.writeMem(0xc314, { 0xcb, 0x6e });
        gbc.writeMem(0xd5a3, { 0x3b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x4b3, gbc.sp());
        EXPECT(0xc316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc314));
        EXPECT(0x6e, gbc.readMem(0xc315));
        EXPECT(0x3b, gbc.readMem(0xd5a3));
        // CB 6E 03C9
        gbc.setState(0x4646, 0xa80b, 0x5570, 0x51b, 0x68bb, 0xf9fe, 0x1, 0x1);
        gbc.writeMem(0x4646, { 0xcb, 0x6e });
        gbc.writeMem(0xf9fe, { 0xcd });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa80b, gbc.sp());
        EXPECT(0x4648, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xf9fe));
        // CB 6E 03CA
        gbc.setState(0xdfba, 0x4141, 0xfa00, 0xe024, 0xbc03, 0x2cb9, 0x1, 0x0);
        gbc.writeMem(0x2cb9, { 0xdb });
        gbc.writeMem(0xdfba, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4141, gbc.sp());
        EXPECT(0xdfbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfba));
        EXPECT(0x6e, gbc.readMem(0xdfbb));
        // CB 6E 03CB
        gbc.setState(0x75e4, 0xfa08, 0x1830, 0xd123, 0x47c7, 0x4dab, 0x1, 0x1);
        gbc.writeMem(0x4dab, { 0xc9 });
        gbc.writeMem(0x75e4, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xfa08, gbc.sp());
        EXPECT(0x75e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 03CC
        gbc.setState(0xb8ff, 0xe5f8, 0xae30, 0x3ec1, 0xcc06, 0x2d2e, 0x1, 0x0);
        gbc.writeMem(0x2d2e, { 0x39 });
        gbc.writeMem(0xb8ff, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe5f8, gbc.sp());
        EXPECT(0xb901, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8ff));
        EXPECT(0x6e, gbc.readMem(0xb900));
        // CB 6E 03CD
        gbc.setState(0x1316, 0x7048, 0xf5c0, 0xe4a7, 0x2a2d, 0x8f0b, 0x1, 0x0);
        gbc.writeMem(0x1316, { 0xcb, 0x6e });
        gbc.writeMem(0x8f0b, { 0xa8 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7048, gbc.sp());
        EXPECT(0x1318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0x8f0b));
        // CB 6E 03CE
        gbc.setState(0xb673, 0xe347, 0x77d0, 0x887e, 0xb6b4, 0x1e83, 0x0, 0x0);
        gbc.writeMem(0x1e83, { 0x8f });
        gbc.writeMem(0xb673, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe347, gbc.sp());
        EXPECT(0xb675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb673));
        EXPECT(0x6e, gbc.readMem(0xb674));
        // CB 6E 03CF
        gbc.setState(0xa280, 0x5833, 0x8c40, 0xbb3f, 0xf44e, 0x5a18, 0x0, 0x1);
        gbc.writeMem(0x5a18, { 0xbb });
        gbc.writeMem(0xa280, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5833, gbc.sp());
        EXPECT(0xa282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa280));
        EXPECT(0x6e, gbc.readMem(0xa281));
        // CB 6E 03D0
        gbc.setState(0x5b9b, 0x831b, 0x1f30, 0xdcaa, 0x6b1e, 0x1a2f, 0x0, 0x0);
        gbc.writeMem(0x1a2f, { 0x8c });
        gbc.writeMem(0x5b9b, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x831b, gbc.sp());
        EXPECT(0x5b9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 03D1
        gbc.setState(0xdcb2, 0xadfd, 0x4c40, 0x713b, 0x6702, 0x6314, 0x0, 0x0);
        gbc.writeMem(0x6314, { 0xb8 });
        gbc.writeMem(0xdcb2, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xadfd, gbc.sp());
        EXPECT(0xdcb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcb2));
        EXPECT(0x6e, gbc.readMem(0xdcb3));
        // CB 6E 03D2
        gbc.setState(0x473a, 0xf6fd, 0x9430, 0x547e, 0x6dc6, 0x3766, 0x0, 0x0);
        gbc.writeMem(0x3766, { 0xb7 });
        gbc.writeMem(0x473a, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf6fd, gbc.sp());
        EXPECT(0x473c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 03D3
        gbc.setState(0xcdaf, 0xd872, 0xbfa0, 0xbb5b, 0xa5f9, 0x339e, 0x1, 0x0);
        gbc.writeMem(0x339e, { 0x2a });
        gbc.writeMem(0xcdaf, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd872, gbc.sp());
        EXPECT(0xcdb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdaf));
        EXPECT(0x6e, gbc.readMem(0xcdb0));
        // CB 6E 03D4
        gbc.setState(0xaff2, 0x1267, 0x3ba0, 0x36cb, 0xdb7a, 0xa2ae, 0x1, 0x0);
        gbc.writeMem(0xa2ae, { 0xe4 });
        gbc.writeMem(0xaff2, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1267, gbc.sp());
        EXPECT(0xaff4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xa2ae));
        EXPECT(0xcb, gbc.readMem(0xaff2));
        EXPECT(0x6e, gbc.readMem(0xaff3));
        // CB 6E 03D5
        gbc.setState(0x69c8, 0x73b9, 0x5580, 0xfac9, 0x4309, 0xa7f6, 0x0, 0x1);
        gbc.writeMem(0x69c8, { 0xcb, 0x6e });
        gbc.writeMem(0xa7f6, { 0xa0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x73b9, gbc.sp());
        EXPECT(0x69ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa7f6));
        // CB 6E 03D6
        gbc.setState(0x2083, 0xfe1c, 0x9ab0, 0xdeb4, 0xbed6, 0x4f46, 0x1, 0x0);
        gbc.writeMem(0x2083, { 0xcb, 0x6e });
        gbc.writeMem(0x4f46, { 0x44 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xfe1c, gbc.sp());
        EXPECT(0x2085, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 03D7
        gbc.setState(0x279b, 0xeb9d, 0x4730, 0x4767, 0xb5b8, 0x6dc9, 0x0, 0x0);
        gbc.writeMem(0x279b, { 0xcb, 0x6e });
        gbc.writeMem(0x6dc9, { 0x1d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xeb9d, gbc.sp());
        EXPECT(0x279d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 03D8
        gbc.setState(0x7083, 0x8ca9, 0xb0f0, 0x523b, 0xa89a, 0xcd7a, 0x0, 0x0);
        gbc.writeMem(0x7083, { 0xcb, 0x6e });
        gbc.writeMem(0xcd7a, { 0xa5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8ca9, gbc.sp());
        EXPECT(0x7085, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xcd7a));
        // CB 6E 03D9
        gbc.setState(0xae14, 0x3a6a, 0xe7c0, 0xd1f3, 0x10a6, 0xa92c, 0x0, 0x0);
        gbc.writeMem(0xa92c, { 0xc5 });
        gbc.writeMem(0xae14, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3a6a, gbc.sp());
        EXPECT(0xae16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xa92c));
        EXPECT(0xcb, gbc.readMem(0xae14));
        EXPECT(0x6e, gbc.readMem(0xae15));
        // CB 6E 03DA
        gbc.setState(0x1c92, 0x625, 0x77a0, 0x9524, 0x203, 0xe139, 0x1, 0x1);
        gbc.writeMem(0x1c92, { 0xcb, 0x6e });
        gbc.writeMem(0xe139, { 0x1b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x625, gbc.sp());
        EXPECT(0x1c94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xe139));
        // CB 6E 03DC
        gbc.setState(0xb816, 0x178a, 0x890, 0xd063, 0x7521, 0x27c2, 0x0, 0x0);
        gbc.writeMem(0x27c2, { 0x4b });
        gbc.writeMem(0xb816, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x178a, gbc.sp());
        EXPECT(0xb818, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb816));
        EXPECT(0x6e, gbc.readMem(0xb817));
        // CB 6E 03DD
        gbc.setState(0xebd2, 0x4ef2, 0x7a90, 0x7020, 0x1afe, 0x3a08, 0x0, 0x0);
        gbc.writeMem(0x3a08, { 0x8a });
        gbc.writeMem(0xebd2, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4ef2, gbc.sp());
        EXPECT(0xebd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebd2));
        EXPECT(0x6e, gbc.readMem(0xebd3));
        // CB 6E 03DE
        gbc.setState(0x2e53, 0x282e, 0xe680, 0x3f49, 0x4bc7, 0x4022, 0x1, 0x0);
        gbc.writeMem(0x2e53, { 0xcb, 0x6e });
        gbc.writeMem(0x4022, { 0x8e });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x282e, gbc.sp());
        EXPECT(0x2e55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 03DF
        gbc.setState(0x5953, 0xfc71, 0x5bd0, 0xa5db, 0xbe1e, 0x4419, 0x0, 0x1);
        gbc.writeMem(0x4419, { 0xc6 });
        gbc.writeMem(0x5953, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xfc71, gbc.sp());
        EXPECT(0x5955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 6E 03E0
        gbc.setState(0xe476, 0x8dbf, 0x9790, 0x4e9e, 0x9478, 0x8a9c, 0x0, 0x1);
        gbc.writeMem(0x8a9c, { 0x99 });
        gbc.writeMem(0xe476, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8dbf, gbc.sp());
        EXPECT(0xe478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8a9c));
        EXPECT(0xcb, gbc.readMem(0xe476));
        EXPECT(0x6e, gbc.readMem(0xe477));
        // CB 6E 03E1
        gbc.setState(0xb149, 0xf4f9, 0xc5a0, 0x4f56, 0xbd57, 0x8519, 0x1, 0x1);
        gbc.writeMem(0x8519, { 0xed });
        gbc.writeMem(0xb149, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf4f9, gbc.sp());
        EXPECT(0xb14b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x8519));
        EXPECT(0xcb, gbc.readMem(0xb149));
        EXPECT(0x6e, gbc.readMem(0xb14a));
        // CB 6E 03E2
        gbc.setState(0x4759, 0xf5e2, 0x11f0, 0x8b5d, 0x81e8, 0x9df9, 0x1, 0x1);
        gbc.writeMem(0x4759, { 0xcb, 0x6e });
        gbc.writeMem(0x9df9, { 0x1c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf5e2, gbc.sp());
        EXPECT(0x475b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x9df9));
        // CB 6E 03E3
        gbc.setState(0xcd, 0x2264, 0xbcf0, 0x4a86, 0x92d8, 0x8818, 0x1, 0x1);
        gbc.writeMem(0xcd, { 0xcb, 0x6e });
        gbc.writeMem(0x8818, { 0x6f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2264, gbc.sp());
        EXPECT(0xcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0x8818));
        // CB 6E 03E4
        gbc.setState(0x64da, 0xadf1, 0xfec0, 0xd999, 0x5e62, 0x1493, 0x0, 0x1);
        gbc.writeMem(0x1493, { 0x45 });
        gbc.writeMem(0x64da, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xadf1, gbc.sp());
        EXPECT(0x64dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 6E 03E5
        gbc.setState(0xe21a, 0x8a84, 0xd490, 0x7606, 0xff3e, 0x9444, 0x0, 0x1);
        gbc.writeMem(0x9444, { 0x1d });
        gbc.writeMem(0xe21a, { 0xcb, 0x6e });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8a84, gbc.sp());
        EXPECT(0xe21c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9444));
        EXPECT(0xcb, gbc.readMem(0xe21a));
        EXPECT(0x6e, gbc.readMem(0xe21b));
        // CB 6E 03E6
        gbc.setState(0xef2, 0x5b00, 0x3160, 0x7034, 0xbbc5, 0xe333, 0x1, 0x1);
        gbc.writeMem(0xef2, { 0xcb, 0x6e });
        gbc.writeMem(0xe333, { 0xc7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5b00, gbc.sp());
        EXPECT(0xef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xe333));
        // CB 6E 03E7
        gbc.setState(0x20b1, 0x3dc8, 0xc3b0, 0x7bfb, 0xb06b, 0xe129, 0x1, 0x0);
        gbc.writeMem(0x20b1, { 0xcb, 0x6e });
        gbc.writeMem(0xe129, { 0x5e });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3dc8, gbc.sp());
        EXPECT(0x20b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe129));
    }
