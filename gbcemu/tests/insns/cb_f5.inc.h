    TEST(gbcemu, opcode_cb_f5) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB F5 0000
        gbc.setState(0xa3ca, 0xb6b2, 0x3280, 0xcf1f, 0x1807, 0x5cf, 0x0, 0x1);
        gbc.writeMem(0xa3ca, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb6b2, gbc.sp());
        EXPECT(0xa3cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ca));
        EXPECT(0xf5, gbc.readMem(0xa3cb));
        // CB F5 0001
        gbc.setState(0x9b3c, 0x931c, 0xff20, 0xcc22, 0xc930, 0x4530, 0x0, 0x1);
        gbc.writeMem(0x9b3c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x931c, gbc.sp());
        EXPECT(0x9b3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b3c));
        EXPECT(0xf5, gbc.readMem(0x9b3d));
        // CB F5 0002
        gbc.setState(0xc374, 0xe279, 0xa470, 0xa552, 0x3527, 0x1263, 0x0, 0x0);
        gbc.writeMem(0xc374, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe279, gbc.sp());
        EXPECT(0xc376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc374));
        EXPECT(0xf5, gbc.readMem(0xc375));
        // CB F5 0003
        gbc.setState(0x2544, 0x9cb0, 0x4bd0, 0xa19, 0x931e, 0xd9b3, 0x0, 0x0);
        gbc.writeMem(0x2544, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9cb0, gbc.sp());
        EXPECT(0x2546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0004
        gbc.setState(0x44ee, 0x7367, 0x8620, 0x6eb, 0xbfd5, 0x8109, 0x1, 0x1);
        gbc.writeMem(0x44ee, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7367, gbc.sp());
        EXPECT(0x44f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0005
        gbc.setState(0x3056, 0x5f25, 0xeb90, 0x2fd9, 0xcd3, 0xf8a5, 0x0, 0x1);
        gbc.writeMem(0x3056, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5f25, gbc.sp());
        EXPECT(0x3058, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0006
        gbc.setState(0x8cbd, 0xc400, 0xf150, 0x2e7f, 0xdaf4, 0x3e8b, 0x0, 0x0);
        gbc.writeMem(0x8cbd, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc400, gbc.sp());
        EXPECT(0x8cbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cbd));
        EXPECT(0xf5, gbc.readMem(0x8cbe));
        // CB F5 0007
        gbc.setState(0x7bb2, 0x85d0, 0x1620, 0x9a8c, 0x36df, 0x3da3, 0x1, 0x0);
        gbc.writeMem(0x7bb2, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x85d0, gbc.sp());
        EXPECT(0x7bb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0009
        gbc.setState(0xe1e6, 0x70c7, 0xf000, 0x6783, 0x98f1, 0xd068, 0x0, 0x0);
        gbc.writeMem(0xe1e6, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x70c7, gbc.sp());
        EXPECT(0xe1e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1e6));
        EXPECT(0xf5, gbc.readMem(0xe1e7));
        // CB F5 000A
        gbc.setState(0x4249, 0x6ba8, 0xd7d0, 0xcac, 0x2a99, 0x1405, 0x1, 0x1);
        gbc.writeMem(0x4249, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6ba8, gbc.sp());
        EXPECT(0x424b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 000B
        gbc.setState(0x75f0, 0xd39a, 0x24e0, 0xe9b6, 0xae6d, 0x8b63, 0x0, 0x1);
        gbc.writeMem(0x75f0, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd39a, gbc.sp());
        EXPECT(0x75f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 000C
        gbc.setState(0x4c65, 0xfe70, 0x19c0, 0xa138, 0x9ded, 0x517e, 0x0, 0x0);
        gbc.writeMem(0x4c65, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xfe70, gbc.sp());
        EXPECT(0x4c67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 000D
        gbc.setState(0x871, 0x5b8a, 0xa9d0, 0x6ab, 0xf594, 0xf283, 0x0, 0x1);
        gbc.writeMem(0x871, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5b8a, gbc.sp());
        EXPECT(0x873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 000E
        gbc.setState(0xbf68, 0xb5b3, 0x52b0, 0x7224, 0xb2a9, 0xd20b, 0x1, 0x1);
        gbc.writeMem(0xbf68, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb5b3, gbc.sp());
        EXPECT(0xbf6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf68));
        EXPECT(0xf5, gbc.readMem(0xbf69));
        // CB F5 000F
        gbc.setState(0x7dd6, 0xc36, 0x3ae0, 0x6770, 0x4134, 0x972a, 0x0, 0x1);
        gbc.writeMem(0x7dd6, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc36, gbc.sp());
        EXPECT(0x7dd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0010
        gbc.setState(0x3fa3, 0xbe72, 0x94c0, 0x911b, 0x5891, 0xbc56, 0x1, 0x0);
        gbc.writeMem(0x3fa3, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xbe72, gbc.sp());
        EXPECT(0x3fa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0011
        gbc.setState(0x9f8d, 0xf820, 0xff70, 0x4f3a, 0x951d, 0x2e46, 0x0, 0x0);
        gbc.writeMem(0x9f8d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf820, gbc.sp());
        EXPECT(0x9f8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f8d));
        EXPECT(0xf5, gbc.readMem(0x9f8e));
        // CB F5 0012
        gbc.setState(0xd276, 0x45c2, 0xa840, 0x9eb1, 0xfdd2, 0xc25d, 0x1, 0x1);
        gbc.writeMem(0xd276, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x45c2, gbc.sp());
        EXPECT(0xd278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd276));
        EXPECT(0xf5, gbc.readMem(0xd277));
        // CB F5 0013
        gbc.setState(0x7403, 0x8066, 0xfc00, 0xaa03, 0x6c92, 0x5350, 0x0, 0x1);
        gbc.writeMem(0x7403, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8066, gbc.sp());
        EXPECT(0x7405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0014
        gbc.setState(0xb86e, 0x15e5, 0x51d0, 0x1a2, 0x9e1c, 0x5e1d, 0x1, 0x1);
        gbc.writeMem(0xb86e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x15e5, gbc.sp());
        EXPECT(0xb870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb86e));
        EXPECT(0xf5, gbc.readMem(0xb86f));
        // CB F5 0015
        gbc.setState(0xa387, 0xf226, 0xee70, 0x21e3, 0xe809, 0xcf45, 0x1, 0x0);
        gbc.writeMem(0xa387, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf226, gbc.sp());
        EXPECT(0xa389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa387));
        EXPECT(0xf5, gbc.readMem(0xa388));
        // CB F5 0016
        gbc.setState(0xc0bf, 0x3a6a, 0x490, 0x1d32, 0xe576, 0xe9b4, 0x0, 0x0);
        gbc.writeMem(0xc0bf, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3a6a, gbc.sp());
        EXPECT(0xc0c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0bf));
        EXPECT(0xf5, gbc.readMem(0xc0c0));
        // CB F5 0018
        gbc.setState(0x72bb, 0xc789, 0x6a80, 0x630a, 0xe9a1, 0x303b, 0x1, 0x0);
        gbc.writeMem(0x72bb, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc789, gbc.sp());
        EXPECT(0x72bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0019
        gbc.setState(0x505f, 0x485f, 0x6c00, 0x770e, 0xea3f, 0xdeb1, 0x0, 0x1);
        gbc.writeMem(0x505f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x485f, gbc.sp());
        EXPECT(0x5061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 001A
        gbc.setState(0xe850, 0x31e8, 0x940, 0x776f, 0x5648, 0x269d, 0x1, 0x1);
        gbc.writeMem(0xe850, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x31e8, gbc.sp());
        EXPECT(0xe852, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe850));
        EXPECT(0xf5, gbc.readMem(0xe851));
        // CB F5 001B
        gbc.setState(0xa857, 0xb838, 0x6c80, 0xb6f4, 0xd362, 0x7975, 0x0, 0x0);
        gbc.writeMem(0xa857, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb838, gbc.sp());
        EXPECT(0xa859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa857));
        EXPECT(0xf5, gbc.readMem(0xa858));
        // CB F5 001C
        gbc.setState(0x8a9b, 0x9b27, 0xf430, 0x5e40, 0x1d12, 0x4281, 0x0, 0x0);
        gbc.writeMem(0x8a9b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9b27, gbc.sp());
        EXPECT(0x8a9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a9b));
        EXPECT(0xf5, gbc.readMem(0x8a9c));
        // CB F5 001D
        gbc.setState(0x1ed2, 0xf469, 0xc7a0, 0xb55c, 0x7293, 0xa825, 0x0, 0x1);
        gbc.writeMem(0x1ed2, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf469, gbc.sp());
        EXPECT(0x1ed4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 001E
        gbc.setState(0x3d30, 0x7954, 0x330, 0x8651, 0x86fa, 0x1bd0, 0x1, 0x0);
        gbc.writeMem(0x3d30, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7954, gbc.sp());
        EXPECT(0x3d32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 001F
        gbc.setState(0x8cbf, 0xa352, 0xc350, 0x2c7b, 0xb9e4, 0x5d4e, 0x1, 0x1);
        gbc.writeMem(0x8cbf, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa352, gbc.sp());
        EXPECT(0x8cc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cbf));
        EXPECT(0xf5, gbc.readMem(0x8cc0));
        // CB F5 0020
        gbc.setState(0x77e0, 0x5204, 0xdf10, 0xa71c, 0xfd51, 0x7f89, 0x1, 0x1);
        gbc.writeMem(0x77e0, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5204, gbc.sp());
        EXPECT(0x77e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0021
        gbc.setState(0x891c, 0x54c4, 0xd4d0, 0x129a, 0x4e43, 0xf06e, 0x1, 0x1);
        gbc.writeMem(0x891c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x54c4, gbc.sp());
        EXPECT(0x891e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x891c));
        EXPECT(0xf5, gbc.readMem(0x891d));
        // CB F5 0022
        gbc.setState(0x209d, 0x6ca1, 0x9e60, 0xae01, 0x5901, 0xfdd6, 0x0, 0x0);
        gbc.writeMem(0x209d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6ca1, gbc.sp());
        EXPECT(0x209f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0023
        gbc.setState(0x419, 0xde8, 0xcb70, 0x4740, 0x877c, 0x6e04, 0x1, 0x1);
        gbc.writeMem(0x419, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xde8, gbc.sp());
        EXPECT(0x41b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0024
        gbc.setState(0x5140, 0x582, 0x1b10, 0xfb69, 0x4bc7, 0x1a1b, 0x1, 0x1);
        gbc.writeMem(0x5140, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x582, gbc.sp());
        EXPECT(0x5142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0025
        gbc.setState(0xc5ad, 0x4ada, 0x7260, 0x6ab0, 0xafc3, 0x1b5f, 0x0, 0x1);
        gbc.writeMem(0xc5ad, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4ada, gbc.sp());
        EXPECT(0xc5af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5ad));
        EXPECT(0xf5, gbc.readMem(0xc5ae));
        // CB F5 0026
        gbc.setState(0xc361, 0xb6b1, 0x11b0, 0x3d80, 0xf664, 0xa9fb, 0x1, 0x0);
        gbc.writeMem(0xc361, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb6b1, gbc.sp());
        EXPECT(0xc363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc361));
        EXPECT(0xf5, gbc.readMem(0xc362));
        // CB F5 0027
        gbc.setState(0x778c, 0xf99b, 0xeb80, 0xd71f, 0x9d5, 0x55c, 0x1, 0x1);
        gbc.writeMem(0x778c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf99b, gbc.sp());
        EXPECT(0x778e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0029
        gbc.setState(0x7683, 0xe303, 0x9100, 0x71e0, 0x95a8, 0xa384, 0x1, 0x0);
        gbc.writeMem(0x7683, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe303, gbc.sp());
        EXPECT(0x7685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 002A
        gbc.setState(0x8bee, 0x73e0, 0x2ba0, 0x126f, 0x5b6d, 0x5aaf, 0x0, 0x0);
        gbc.writeMem(0x8bee, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x73e0, gbc.sp());
        EXPECT(0x8bf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bee));
        EXPECT(0xf5, gbc.readMem(0x8bef));
        // CB F5 002B
        gbc.setState(0xf4, 0x67d2, 0xab00, 0xd37, 0xb805, 0x4fde, 0x0, 0x0);
        gbc.writeMem(0xf4, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x67d2, gbc.sp());
        EXPECT(0xf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 002C
        gbc.setState(0xd540, 0x1747, 0x43f0, 0xbb34, 0xeef1, 0xec92, 0x1, 0x1);
        gbc.writeMem(0xd540, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1747, gbc.sp());
        EXPECT(0xd542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd540));
        EXPECT(0xf5, gbc.readMem(0xd541));
        // CB F5 002D
        gbc.setState(0x72c9, 0xc112, 0xc300, 0xdad, 0xe04b, 0x2a76, 0x0, 0x0);
        gbc.writeMem(0x72c9, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc112, gbc.sp());
        EXPECT(0x72cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 002E
        gbc.setState(0x373e, 0x46d9, 0x5270, 0x2406, 0x1d0f, 0xf378, 0x1, 0x0);
        gbc.writeMem(0x373e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x46d9, gbc.sp());
        EXPECT(0x3740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 002F
        gbc.setState(0xa62a, 0x1ed7, 0xb6c0, 0x8026, 0xeb09, 0x45b8, 0x1, 0x0);
        gbc.writeMem(0xa62a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x1ed7, gbc.sp());
        EXPECT(0xa62c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa62a));
        EXPECT(0xf5, gbc.readMem(0xa62b));
        // CB F5 0030
        gbc.setState(0x7208, 0x78ac, 0x6240, 0xa541, 0x3e40, 0xb166, 0x0, 0x1);
        gbc.writeMem(0x7208, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x78ac, gbc.sp());
        EXPECT(0x720a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0032
        gbc.setState(0x9cbe, 0x2449, 0xca20, 0xd691, 0xbbd9, 0x84d4, 0x1, 0x0);
        gbc.writeMem(0x9cbe, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2449, gbc.sp());
        EXPECT(0x9cc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cbe));
        EXPECT(0xf5, gbc.readMem(0x9cbf));
        // CB F5 0033
        gbc.setState(0xb22b, 0xe60e, 0x1420, 0xc6a7, 0xa3c2, 0x16e5, 0x1, 0x1);
        gbc.writeMem(0xb22b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe60e, gbc.sp());
        EXPECT(0xb22d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb22b));
        EXPECT(0xf5, gbc.readMem(0xb22c));
        // CB F5 0034
        gbc.setState(0x828c, 0x2c7b, 0x5b70, 0x491d, 0x950b, 0x7c7d, 0x1, 0x0);
        gbc.writeMem(0x828c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2c7b, gbc.sp());
        EXPECT(0x828e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x828c));
        EXPECT(0xf5, gbc.readMem(0x828d));
        // CB F5 0035
        gbc.setState(0x7375, 0x2963, 0xc1e0, 0xfad5, 0xe612, 0xabbf, 0x1, 0x0);
        gbc.writeMem(0x7375, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2963, gbc.sp());
        EXPECT(0x7377, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0036
        gbc.setState(0x35a7, 0xe7c4, 0x4170, 0xf795, 0xb5b4, 0x41, 0x1, 0x0);
        gbc.writeMem(0x35a7, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe7c4, gbc.sp());
        EXPECT(0x35a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0037
        gbc.setState(0xb74f, 0x3395, 0xd320, 0xad91, 0x7538, 0xe9fa, 0x1, 0x0);
        gbc.writeMem(0xb74f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3395, gbc.sp());
        EXPECT(0xb751, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb74f));
        EXPECT(0xf5, gbc.readMem(0xb750));
        // CB F5 0038
        gbc.setState(0x4702, 0x2f29, 0x69b0, 0x2d0, 0x287e, 0x403e, 0x0, 0x1);
        gbc.writeMem(0x4702, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2f29, gbc.sp());
        EXPECT(0x4704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0039
        gbc.setState(0x6a46, 0x5722, 0x2710, 0x25c, 0x5c05, 0x9f72, 0x0, 0x0);
        gbc.writeMem(0x6a46, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5722, gbc.sp());
        EXPECT(0x6a48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 003B
        gbc.setState(0x989a, 0x3307, 0x5b10, 0xad1e, 0xb7da, 0xa0cf, 0x0, 0x1);
        gbc.writeMem(0x989a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3307, gbc.sp());
        EXPECT(0x989c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x989a));
        EXPECT(0xf5, gbc.readMem(0x989b));
        // CB F5 003C
        gbc.setState(0x99c6, 0xbd05, 0x2960, 0x89a9, 0xf0b, 0xae72, 0x1, 0x0);
        gbc.writeMem(0x99c6, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xbd05, gbc.sp());
        EXPECT(0x99c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99c6));
        EXPECT(0xf5, gbc.readMem(0x99c7));
        // CB F5 003D
        gbc.setState(0x4e7b, 0x6c76, 0xb060, 0xe202, 0xf08f, 0x8334, 0x0, 0x1);
        gbc.writeMem(0x4e7b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6c76, gbc.sp());
        EXPECT(0x4e7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 003F
        gbc.setState(0x5827, 0xc5af, 0xf0b0, 0xcbde, 0xe077, 0x8383, 0x0, 0x1);
        gbc.writeMem(0x5827, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc5af, gbc.sp());
        EXPECT(0x5829, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0040
        gbc.setState(0xe53f, 0x1ffb, 0x30b0, 0xded2, 0xc631, 0x4de2, 0x0, 0x1);
        gbc.writeMem(0xe53f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1ffb, gbc.sp());
        EXPECT(0xe541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe53f));
        EXPECT(0xf5, gbc.readMem(0xe540));
        // CB F5 0041
        gbc.setState(0xd1e7, 0x7fae, 0x9db0, 0x73ed, 0x36d3, 0x4e4a, 0x1, 0x1);
        gbc.writeMem(0xd1e7, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7fae, gbc.sp());
        EXPECT(0xd1e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1e7));
        EXPECT(0xf5, gbc.readMem(0xd1e8));
        // CB F5 0042
        gbc.setState(0x69b0, 0x8e77, 0x8c0, 0x690, 0xd4b1, 0xac57, 0x1, 0x0);
        gbc.writeMem(0x69b0, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8e77, gbc.sp());
        EXPECT(0x69b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0043
        gbc.setState(0x6202, 0xeb17, 0x53c0, 0xe543, 0x3425, 0x32c7, 0x1, 0x0);
        gbc.writeMem(0x6202, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xeb17, gbc.sp());
        EXPECT(0x6204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0044
        gbc.setState(0xac3c, 0xbefd, 0xe170, 0x4346, 0x441f, 0xafaa, 0x1, 0x1);
        gbc.writeMem(0xac3c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xbefd, gbc.sp());
        EXPECT(0xac3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac3c));
        EXPECT(0xf5, gbc.readMem(0xac3d));
        // CB F5 0045
        gbc.setState(0xd54, 0xd647, 0x1dd0, 0x416e, 0x80f9, 0x7d12, 0x1, 0x0);
        gbc.writeMem(0xd54, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd647, gbc.sp());
        EXPECT(0xd56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0046
        gbc.setState(0x104a, 0x9b1f, 0xdce0, 0xf666, 0x9d9c, 0x651c, 0x0, 0x0);
        gbc.writeMem(0x104a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9b1f, gbc.sp());
        EXPECT(0x104c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0047
        gbc.setState(0x94d7, 0x8c40, 0xfef0, 0x584, 0xc4f9, 0x1379, 0x0, 0x1);
        gbc.writeMem(0x94d7, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8c40, gbc.sp());
        EXPECT(0x94d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94d7));
        EXPECT(0xf5, gbc.readMem(0x94d8));
        // CB F5 0048
        gbc.setState(0xcc7e, 0xbbcd, 0x590, 0x28cf, 0xd269, 0xe865, 0x0, 0x0);
        gbc.writeMem(0xcc7e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xbbcd, gbc.sp());
        EXPECT(0xcc80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc7e));
        EXPECT(0xf5, gbc.readMem(0xcc7f));
        // CB F5 0049
        gbc.setState(0x6145, 0xaca5, 0xed30, 0xf119, 0x4584, 0x296e, 0x1, 0x0);
        gbc.writeMem(0x6145, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xaca5, gbc.sp());
        EXPECT(0x6147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 004A
        gbc.setState(0x3b8d, 0x5cbe, 0xef80, 0x1e0a, 0xa0e3, 0xe22e, 0x1, 0x0);
        gbc.writeMem(0x3b8d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5cbe, gbc.sp());
        EXPECT(0x3b8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 004B
        gbc.setState(0x2ba0, 0xedec, 0xaad0, 0xec1f, 0x202b, 0x9b6d, 0x1, 0x1);
        gbc.writeMem(0x2ba0, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xedec, gbc.sp());
        EXPECT(0x2ba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 004C
        gbc.setState(0x5716, 0xe8a7, 0xcfb0, 0xa5fe, 0x8cc1, 0x1b63, 0x1, 0x0);
        gbc.writeMem(0x5716, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe8a7, gbc.sp());
        EXPECT(0x5718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 004D
        gbc.setState(0xa3f2, 0xf872, 0x2f40, 0xdc5c, 0x5c34, 0x79c9, 0x1, 0x1);
        gbc.writeMem(0xa3f2, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf872, gbc.sp());
        EXPECT(0xa3f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3f2));
        EXPECT(0xf5, gbc.readMem(0xa3f3));
        // CB F5 004E
        gbc.setState(0x9af3, 0x9340, 0xab50, 0x7ade, 0xde4b, 0x95b9, 0x0, 0x0);
        gbc.writeMem(0x9af3, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9340, gbc.sp());
        EXPECT(0x9af5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9af3));
        EXPECT(0xf5, gbc.readMem(0x9af4));
        // CB F5 0050
        gbc.setState(0x827a, 0x306, 0xab30, 0x531, 0xc907, 0x984d, 0x1, 0x0);
        gbc.writeMem(0x827a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x306, gbc.sp());
        EXPECT(0x827c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x827a));
        EXPECT(0xf5, gbc.readMem(0x827b));
        // CB F5 0051
        gbc.setState(0x1aae, 0x321f, 0xeb60, 0xa111, 0x138a, 0xc241, 0x0, 0x0);
        gbc.writeMem(0x1aae, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x321f, gbc.sp());
        EXPECT(0x1ab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0052
        gbc.setState(0x6f49, 0xb358, 0xc000, 0x4b81, 0x52f4, 0x7495, 0x1, 0x0);
        gbc.writeMem(0x6f49, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb358, gbc.sp());
        EXPECT(0x6f4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0053
        gbc.setState(0x6ca7, 0x7114, 0xd960, 0x4dd7, 0x43fd, 0xc26c, 0x0, 0x0);
        gbc.writeMem(0x6ca7, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7114, gbc.sp());
        EXPECT(0x6ca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0054
        gbc.setState(0x7d79, 0x1250, 0xa620, 0xde2a, 0xc5c9, 0x9259, 0x1, 0x1);
        gbc.writeMem(0x7d79, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1250, gbc.sp());
        EXPECT(0x7d7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0055
        gbc.setState(0x7a4d, 0xaab1, 0x1fe0, 0x5d44, 0xad71, 0x356b, 0x1, 0x0);
        gbc.writeMem(0x7a4d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xaab1, gbc.sp());
        EXPECT(0x7a4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0056
        gbc.setState(0xd907, 0xb7ce, 0xf000, 0x7fd4, 0xd461, 0xb2f5, 0x0, 0x1);
        gbc.writeMem(0xd907, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb7ce, gbc.sp());
        EXPECT(0xd909, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd907));
        EXPECT(0xf5, gbc.readMem(0xd908));
        // CB F5 0057
        gbc.setState(0x15bb, 0x36ad, 0x5cc0, 0x46be, 0xd5b0, 0x33bd, 0x0, 0x0);
        gbc.writeMem(0x15bb, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x36ad, gbc.sp());
        EXPECT(0x15bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0058
        gbc.setState(0x2da1, 0xfde2, 0x8700, 0xc7d3, 0x9f08, 0xaf8c, 0x1, 0x0);
        gbc.writeMem(0x2da1, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xfde2, gbc.sp());
        EXPECT(0x2da3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0059
        gbc.setState(0x2d6f, 0xf5fe, 0xd150, 0xa76a, 0x6066, 0xeae, 0x0, 0x0);
        gbc.writeMem(0x2d6f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf5fe, gbc.sp());
        EXPECT(0x2d71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 005A
        gbc.setState(0x6ced, 0xc649, 0x3630, 0x2d6f, 0x854e, 0x5c16, 0x0, 0x0);
        gbc.writeMem(0x6ced, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc649, gbc.sp());
        EXPECT(0x6cef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 005B
        gbc.setState(0xca98, 0xa54d, 0x9cc0, 0x42ee, 0x944d, 0x6050, 0x1, 0x1);
        gbc.writeMem(0xca98, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa54d, gbc.sp());
        EXPECT(0xca9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca98));
        EXPECT(0xf5, gbc.readMem(0xca99));
        // CB F5 005C
        gbc.setState(0x6296, 0x99b3, 0xfe80, 0xa561, 0x304c, 0x393c, 0x0, 0x0);
        gbc.writeMem(0x6296, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x99b3, gbc.sp());
        EXPECT(0x6298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 005D
        gbc.setState(0xde11, 0xe631, 0x4d50, 0x528a, 0x5ff1, 0x93c1, 0x0, 0x0);
        gbc.writeMem(0xde11, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe631, gbc.sp());
        EXPECT(0xde13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde11));
        EXPECT(0xf5, gbc.readMem(0xde12));
        // CB F5 005E
        gbc.setState(0xb76a, 0x3465, 0x23f0, 0xcc45, 0xfb5b, 0x7dc6, 0x1, 0x1);
        gbc.writeMem(0xb76a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3465, gbc.sp());
        EXPECT(0xb76c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb76a));
        EXPECT(0xf5, gbc.readMem(0xb76b));
        // CB F5 005F
        gbc.setState(0x881c, 0xfa8e, 0xf390, 0x4bbb, 0x5260, 0x2b21, 0x1, 0x1);
        gbc.writeMem(0x881c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xfa8e, gbc.sp());
        EXPECT(0x881e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x881c));
        EXPECT(0xf5, gbc.readMem(0x881d));
        // CB F5 0060
        gbc.setState(0xe420, 0x9b0d, 0x9e00, 0x141e, 0xdc1c, 0x87da, 0x1, 0x1);
        gbc.writeMem(0xe420, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9b0d, gbc.sp());
        EXPECT(0xe422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe420));
        EXPECT(0xf5, gbc.readMem(0xe421));
        // CB F5 0061
        gbc.setState(0xe824, 0xa47a, 0x8ad0, 0xbdfe, 0xbcdc, 0x8c82, 0x0, 0x1);
        gbc.writeMem(0xe824, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa47a, gbc.sp());
        EXPECT(0xe826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe824));
        EXPECT(0xf5, gbc.readMem(0xe825));
        // CB F5 0062
        gbc.setState(0x69eb, 0xc685, 0x6de0, 0xc212, 0x31d0, 0xb699, 0x0, 0x0);
        gbc.writeMem(0x69eb, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc685, gbc.sp());
        EXPECT(0x69ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0063
        gbc.setState(0x6f4c, 0x5858, 0x2100, 0xd089, 0x1fb2, 0xe46, 0x1, 0x0);
        gbc.writeMem(0x6f4c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5858, gbc.sp());
        EXPECT(0x6f4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0064
        gbc.setState(0x6f3f, 0x4731, 0xfd20, 0x148e, 0xce8f, 0x5095, 0x1, 0x1);
        gbc.writeMem(0x6f3f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4731, gbc.sp());
        EXPECT(0x6f41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0065
        gbc.setState(0xe9ea, 0x3e1a, 0xb20, 0x133a, 0x277, 0xa429, 0x0, 0x0);
        gbc.writeMem(0xe9ea, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3e1a, gbc.sp());
        EXPECT(0xe9ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ea));
        EXPECT(0xf5, gbc.readMem(0xe9eb));
        // CB F5 0066
        gbc.setState(0xea0c, 0x5d5b, 0x2150, 0xb408, 0x3367, 0x326c, 0x1, 0x0);
        gbc.writeMem(0xea0c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5d5b, gbc.sp());
        EXPECT(0xea0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea0c));
        EXPECT(0xf5, gbc.readMem(0xea0d));
        // CB F5 0068
        gbc.setState(0x48c2, 0x9642, 0xaaa0, 0xc92d, 0xc353, 0x56e7, 0x0, 0x0);
        gbc.writeMem(0x48c2, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9642, gbc.sp());
        EXPECT(0x48c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0069
        gbc.setState(0x460c, 0x6e7, 0xd460, 0x868a, 0x1b7e, 0x91ad, 0x0, 0x0);
        gbc.writeMem(0x460c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6e7, gbc.sp());
        EXPECT(0x460e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 006A
        gbc.setState(0x955, 0xaa31, 0xe390, 0xdfa, 0x27b0, 0x3bc5, 0x1, 0x0);
        gbc.writeMem(0x955, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xaa31, gbc.sp());
        EXPECT(0x957, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 006B
        gbc.setState(0x7011, 0xd872, 0x7f0, 0x9cbc, 0xc2e9, 0x9215, 0x0, 0x1);
        gbc.writeMem(0x7011, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd872, gbc.sp());
        EXPECT(0x7013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 006C
        gbc.setState(0x9fc8, 0x8230, 0x8420, 0x1c2c, 0x16b2, 0xd4f8, 0x0, 0x0);
        gbc.writeMem(0x9fc8, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8230, gbc.sp());
        EXPECT(0x9fca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fc8));
        EXPECT(0xf5, gbc.readMem(0x9fc9));
        // CB F5 006E
        gbc.setState(0x1acf, 0xc357, 0x7d30, 0xe208, 0x59, 0x5a57, 0x1, 0x0);
        gbc.writeMem(0x1acf, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc357, gbc.sp());
        EXPECT(0x1ad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 006F
        gbc.setState(0x4e64, 0xfbef, 0xe90, 0xb68a, 0x5f6c, 0x4abe, 0x0, 0x0);
        gbc.writeMem(0x4e64, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xfbef, gbc.sp());
        EXPECT(0x4e66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0070
        gbc.setState(0x4138, 0xcbd2, 0x46c0, 0x2c72, 0x72f0, 0x18db, 0x0, 0x0);
        gbc.writeMem(0x4138, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xcbd2, gbc.sp());
        EXPECT(0x413a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0071
        gbc.setState(0x9061, 0x3129, 0x27f0, 0xcfcd, 0xa950, 0xd77a, 0x1, 0x0);
        gbc.writeMem(0x9061, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3129, gbc.sp());
        EXPECT(0x9063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9061));
        EXPECT(0xf5, gbc.readMem(0x9062));
        // CB F5 0073
        gbc.setState(0x79bc, 0x2238, 0xcf20, 0x5cea, 0x4cb3, 0x715c, 0x0, 0x1);
        gbc.writeMem(0x79bc, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2238, gbc.sp());
        EXPECT(0x79be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0074
        gbc.setState(0x811, 0x950a, 0x6090, 0x2b0e, 0xff8c, 0xce8d, 0x0, 0x0);
        gbc.writeMem(0x811, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x950a, gbc.sp());
        EXPECT(0x813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0075
        gbc.setState(0xb05f, 0x9344, 0x97d0, 0x37d4, 0x24de, 0x3413, 0x1, 0x0);
        gbc.writeMem(0xb05f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9344, gbc.sp());
        EXPECT(0xb061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb05f));
        EXPECT(0xf5, gbc.readMem(0xb060));
        // CB F5 0076
        gbc.setState(0x7544, 0x24a7, 0xdab0, 0x676d, 0x542d, 0x2e0b, 0x1, 0x1);
        gbc.writeMem(0x7544, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x24a7, gbc.sp());
        EXPECT(0x7546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0077
        gbc.setState(0x1ab2, 0x21ba, 0x5470, 0x2319, 0x4a5e, 0xc546, 0x1, 0x0);
        gbc.writeMem(0x1ab2, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x21ba, gbc.sp());
        EXPECT(0x1ab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0078
        gbc.setState(0x5dbc, 0x512b, 0xc310, 0xb905, 0xd8d9, 0xe70b, 0x0, 0x0);
        gbc.writeMem(0x5dbc, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x512b, gbc.sp());
        EXPECT(0x5dbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0079
        gbc.setState(0x72a1, 0x8ba0, 0x95d0, 0xde30, 0x6d33, 0x1fd8, 0x1, 0x0);
        gbc.writeMem(0x72a1, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8ba0, gbc.sp());
        EXPECT(0x72a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 007A
        gbc.setState(0x67, 0x4815, 0xed10, 0x8e8e, 0x722d, 0x3b02, 0x1, 0x0);
        gbc.writeMem(0x67, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4815, gbc.sp());
        EXPECT(0x69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 007B
        gbc.setState(0x7a6a, 0x2e12, 0xfa20, 0xfa4e, 0x1138, 0xdcbe, 0x1, 0x1);
        gbc.writeMem(0x7a6a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2e12, gbc.sp());
        EXPECT(0x7a6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 007C
        gbc.setState(0x2637, 0x2dff, 0x8e40, 0x30b2, 0x926a, 0x2579, 0x0, 0x1);
        gbc.writeMem(0x2637, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2dff, gbc.sp());
        EXPECT(0x2639, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 007D
        gbc.setState(0x2d21, 0x250d, 0x3e60, 0x338c, 0x841c, 0x87f6, 0x1, 0x0);
        gbc.writeMem(0x2d21, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x250d, gbc.sp());
        EXPECT(0x2d23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 007E
        gbc.setState(0x3d50, 0xb45c, 0xb030, 0xef9, 0xc670, 0x92f5, 0x0, 0x0);
        gbc.writeMem(0x3d50, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb45c, gbc.sp());
        EXPECT(0x3d52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 007F
        gbc.setState(0xe1b5, 0x59f6, 0xfff0, 0xeae7, 0x585d, 0x3d43, 0x0, 0x0);
        gbc.writeMem(0xe1b5, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x59f6, gbc.sp());
        EXPECT(0xe1b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1b5));
        EXPECT(0xf5, gbc.readMem(0xe1b6));
        // CB F5 0080
        gbc.setState(0x611e, 0x34cd, 0x24f0, 0xc84, 0xd2d6, 0x59cf, 0x1, 0x0);
        gbc.writeMem(0x611e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x34cd, gbc.sp());
        EXPECT(0x6120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0081
        gbc.setState(0x9b93, 0x64e8, 0x35a0, 0x54ed, 0x23af, 0x58c, 0x1, 0x1);
        gbc.writeMem(0x9b93, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x64e8, gbc.sp());
        EXPECT(0x9b95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b93));
        EXPECT(0xf5, gbc.readMem(0x9b94));
        // CB F5 0082
        gbc.setState(0x67b7, 0x20d7, 0xba90, 0x408c, 0x6a3b, 0x6320, 0x1, 0x0);
        gbc.writeMem(0x67b7, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x20d7, gbc.sp());
        EXPECT(0x67b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0084
        gbc.setState(0x5533, 0xe2e7, 0x3bf0, 0x8856, 0x4e88, 0xe9c9, 0x1, 0x0);
        gbc.writeMem(0x5533, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe2e7, gbc.sp());
        EXPECT(0x5535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0085
        gbc.setState(0xb8d1, 0xf2fc, 0xdc80, 0x3d1, 0x8ceb, 0xd24, 0x1, 0x1);
        gbc.writeMem(0xb8d1, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf2fc, gbc.sp());
        EXPECT(0xb8d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8d1));
        EXPECT(0xf5, gbc.readMem(0xb8d2));
        // CB F5 0086
        gbc.setState(0x8b86, 0x505f, 0xba80, 0xd5e6, 0xee40, 0x8568, 0x1, 0x0);
        gbc.writeMem(0x8b86, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x505f, gbc.sp());
        EXPECT(0x8b88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b86));
        EXPECT(0xf5, gbc.readMem(0x8b87));
        // CB F5 0087
        gbc.setState(0x5214, 0xdf1d, 0xb6b0, 0x4a66, 0xd075, 0x4c3d, 0x0, 0x1);
        gbc.writeMem(0x5214, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xdf1d, gbc.sp());
        EXPECT(0x5216, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0088
        gbc.setState(0x4790, 0x1a10, 0x62a0, 0x73b1, 0x7ac1, 0xcd64, 0x1, 0x1);
        gbc.writeMem(0x4790, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1a10, gbc.sp());
        EXPECT(0x4792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0089
        gbc.setState(0x381b, 0x9292, 0x87a0, 0x44cd, 0x7aeb, 0xa86, 0x1, 0x0);
        gbc.writeMem(0x381b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9292, gbc.sp());
        EXPECT(0x381d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 008A
        gbc.setState(0x91a7, 0x684e, 0x5d60, 0xb254, 0x1eb6, 0x59a6, 0x0, 0x1);
        gbc.writeMem(0x91a7, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x684e, gbc.sp());
        EXPECT(0x91a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91a7));
        EXPECT(0xf5, gbc.readMem(0x91a8));
        // CB F5 008B
        gbc.setState(0xe543, 0xc531, 0x9ac0, 0x188b, 0x3ef9, 0xcd9, 0x0, 0x1);
        gbc.writeMem(0xe543, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc531, gbc.sp());
        EXPECT(0xe545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe543));
        EXPECT(0xf5, gbc.readMem(0xe544));
        // CB F5 008C
        gbc.setState(0xeb87, 0x6a3f, 0xb690, 0x83e1, 0xdae8, 0xe55e, 0x0, 0x0);
        gbc.writeMem(0xeb87, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6a3f, gbc.sp());
        EXPECT(0xeb89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb87));
        EXPECT(0xf5, gbc.readMem(0xeb88));
        // CB F5 008D
        gbc.setState(0xafcf, 0x78a9, 0xe6d0, 0x2dc2, 0xce33, 0x5726, 0x0, 0x0);
        gbc.writeMem(0xafcf, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x78a9, gbc.sp());
        EXPECT(0xafd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafcf));
        EXPECT(0xf5, gbc.readMem(0xafd0));
        // CB F5 008E
        gbc.setState(0xa953, 0xe14c, 0x32d0, 0xc927, 0x45b8, 0x92a1, 0x0, 0x1);
        gbc.writeMem(0xa953, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe14c, gbc.sp());
        EXPECT(0xa955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa953));
        EXPECT(0xf5, gbc.readMem(0xa954));
        // CB F5 008F
        gbc.setState(0x1738, 0x2222, 0x4200, 0x49be, 0x886f, 0xbab5, 0x1, 0x0);
        gbc.writeMem(0x1738, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2222, gbc.sp());
        EXPECT(0x173a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0090
        gbc.setState(0x62b4, 0xfe89, 0x590, 0x36e1, 0xdf3e, 0x28e2, 0x1, 0x0);
        gbc.writeMem(0x62b4, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xfe89, gbc.sp());
        EXPECT(0x62b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0091
        gbc.setState(0xa349, 0x3efe, 0xb3d0, 0xd274, 0x792c, 0xe76a, 0x1, 0x0);
        gbc.writeMem(0xa349, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3efe, gbc.sp());
        EXPECT(0xa34b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa349));
        EXPECT(0xf5, gbc.readMem(0xa34a));
        // CB F5 0092
        gbc.setState(0x6d61, 0x9709, 0x3e90, 0x65ba, 0x5124, 0x3c1, 0x1, 0x1);
        gbc.writeMem(0x6d61, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9709, gbc.sp());
        EXPECT(0x6d63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0093
        gbc.setState(0x6170, 0x4268, 0xf030, 0x856c, 0xfa56, 0x38fd, 0x1, 0x1);
        gbc.writeMem(0x6170, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4268, gbc.sp());
        EXPECT(0x6172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0094
        gbc.setState(0x85c9, 0x925f, 0x410, 0xfa5b, 0x14b9, 0x7bf7, 0x0, 0x0);
        gbc.writeMem(0x85c9, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x925f, gbc.sp());
        EXPECT(0x85cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85c9));
        EXPECT(0xf5, gbc.readMem(0x85ca));
        // CB F5 0095
        gbc.setState(0x7fa2, 0x99ff, 0xcd60, 0x7284, 0x6135, 0xcbb1, 0x0, 0x0);
        gbc.writeMem(0x7fa2, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x99ff, gbc.sp());
        EXPECT(0x7fa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0096
        gbc.setState(0x61f5, 0x4f71, 0xa450, 0x6e0a, 0x4b2, 0x8649, 0x0, 0x1);
        gbc.writeMem(0x61f5, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4f71, gbc.sp());
        EXPECT(0x61f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0097
        gbc.setState(0x3fc6, 0xa75a, 0x7ce0, 0x7455, 0xed98, 0x4809, 0x1, 0x0);
        gbc.writeMem(0x3fc6, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa75a, gbc.sp());
        EXPECT(0x3fc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0098
        gbc.setState(0x5ef0, 0x95e2, 0xe420, 0x3d2c, 0x1424, 0x95c7, 0x0, 0x0);
        gbc.writeMem(0x5ef0, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x95e2, gbc.sp());
        EXPECT(0x5ef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0099
        gbc.setState(0xdaaf, 0xa999, 0x3240, 0x9263, 0xf20c, 0x953b, 0x0, 0x0);
        gbc.writeMem(0xdaaf, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa999, gbc.sp());
        EXPECT(0xdab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaaf));
        EXPECT(0xf5, gbc.readMem(0xdab0));
        // CB F5 009A
        gbc.setState(0x6ea4, 0x7ca6, 0xff30, 0xa929, 0xede8, 0xa796, 0x0, 0x1);
        gbc.writeMem(0x6ea4, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7ca6, gbc.sp());
        EXPECT(0x6ea6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 009C
        gbc.setState(0x381f, 0x9336, 0x6cf0, 0xd566, 0x212b, 0xa3d3, 0x1, 0x0);
        gbc.writeMem(0x381f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9336, gbc.sp());
        EXPECT(0x3821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 009D
        gbc.setState(0x47cc, 0xdff8, 0x12e0, 0xb67b, 0xdd89, 0xd0e8, 0x1, 0x1);
        gbc.writeMem(0x47cc, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xdff8, gbc.sp());
        EXPECT(0x47ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 009E
        gbc.setState(0xab0b, 0x9c7a, 0x7680, 0x7461, 0x4031, 0x7540, 0x1, 0x1);
        gbc.writeMem(0xab0b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9c7a, gbc.sp());
        EXPECT(0xab0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab0b));
        EXPECT(0xf5, gbc.readMem(0xab0c));
        // CB F5 009F
        gbc.setState(0x1c7e, 0x3765, 0x9d90, 0xd4, 0x1f39, 0xf82b, 0x0, 0x1);
        gbc.writeMem(0x1c7e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3765, gbc.sp());
        EXPECT(0x1c80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 00A0
        gbc.setState(0x178f, 0xa099, 0x1f60, 0x3a83, 0x88db, 0x6733, 0x0, 0x1);
        gbc.writeMem(0x178f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa099, gbc.sp());
        EXPECT(0x1791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 00A1
        gbc.setState(0x2423, 0xef08, 0xb7f0, 0x3d7f, 0x45da, 0x9b11, 0x0, 0x0);
        gbc.writeMem(0x2423, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xef08, gbc.sp());
        EXPECT(0x2425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 00A2
        gbc.setState(0x99b8, 0xeacb, 0x78b0, 0xf557, 0xc467, 0xa944, 0x1, 0x0);
        gbc.writeMem(0x99b8, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xeacb, gbc.sp());
        EXPECT(0x99ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99b8));
        EXPECT(0xf5, gbc.readMem(0x99b9));
        // CB F5 00A3
        gbc.setState(0xe31f, 0xc619, 0x13c0, 0x41bc, 0x1489, 0xebff, 0x1, 0x0);
        gbc.writeMem(0xe31f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc619, gbc.sp());
        EXPECT(0xe321, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe31f));
        EXPECT(0xf5, gbc.readMem(0xe320));
        // CB F5 00A4
        gbc.setState(0x1b00, 0x985b, 0xbe40, 0xbf32, 0xfae6, 0xf730, 0x1, 0x0);
        gbc.writeMem(0x1b00, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x985b, gbc.sp());
        EXPECT(0x1b02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 00A5
        gbc.setState(0x7c8a, 0x5eb1, 0xb0, 0x7105, 0x8d4d, 0x8d42, 0x1, 0x1);
        gbc.writeMem(0x7c8a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5eb1, gbc.sp());
        EXPECT(0x7c8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 00A6
        gbc.setState(0x2a4f, 0x15c6, 0xb180, 0xcd43, 0x2a10, 0xdd1a, 0x0, 0x1);
        gbc.writeMem(0x2a4f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x15c6, gbc.sp());
        EXPECT(0x2a51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 00A7
        gbc.setState(0x6cb0, 0x588e, 0x7140, 0xe785, 0x7511, 0x11e9, 0x0, 0x1);
        gbc.writeMem(0x6cb0, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x588e, gbc.sp());
        EXPECT(0x6cb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 00A8
        gbc.setState(0xbb18, 0xe5e1, 0x1230, 0xe84f, 0xecf7, 0x39d6, 0x1, 0x1);
        gbc.writeMem(0xbb18, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe5e1, gbc.sp());
        EXPECT(0xbb1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb18));
        EXPECT(0xf5, gbc.readMem(0xbb19));
        // CB F5 00A9
        gbc.setState(0xdbd5, 0xdbc, 0xf320, 0x4bc0, 0x8e9, 0xe532, 0x1, 0x0);
        gbc.writeMem(0xdbd5, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xdbc, gbc.sp());
        EXPECT(0xdbd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbd5));
        EXPECT(0xf5, gbc.readMem(0xdbd6));
        // CB F5 00AA
        gbc.setState(0xb683, 0xfcd8, 0xe230, 0x6ee9, 0xf53e, 0xdcb4, 0x1, 0x1);
        gbc.writeMem(0xb683, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xfcd8, gbc.sp());
        EXPECT(0xb685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb683));
        EXPECT(0xf5, gbc.readMem(0xb684));
        // CB F5 00AB
        gbc.setState(0x62b0, 0x46ca, 0x5b50, 0x1961, 0x78be, 0x2297, 0x0, 0x0);
        gbc.writeMem(0x62b0, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x46ca, gbc.sp());
        EXPECT(0x62b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 00AC
        gbc.setState(0xe336, 0xcac9, 0x9d40, 0x9114, 0xa76c, 0x1456, 0x0, 0x0);
        gbc.writeMem(0xe336, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xcac9, gbc.sp());
        EXPECT(0xe338, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe336));
        EXPECT(0xf5, gbc.readMem(0xe337));
        // CB F5 00AD
        gbc.setState(0x45b4, 0x204d, 0x980, 0x6569, 0xcac, 0x257b, 0x1, 0x0);
        gbc.writeMem(0x45b4, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x204d, gbc.sp());
        EXPECT(0x45b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 00AE
        gbc.setState(0xe843, 0xb6ea, 0xb760, 0x680, 0xa728, 0x4224, 0x0, 0x1);
        gbc.writeMem(0xe843, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb6ea, gbc.sp());
        EXPECT(0xe845, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe843));
        EXPECT(0xf5, gbc.readMem(0xe844));
        // CB F5 00AF
        gbc.setState(0x3d16, 0x5e4c, 0x6300, 0xdc1f, 0xc4b, 0x5bf0, 0x1, 0x0);
        gbc.writeMem(0x3d16, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5e4c, gbc.sp());
        EXPECT(0x3d18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 00B0
        gbc.setState(0x39d7, 0x8982, 0x7350, 0xc64, 0xafbd, 0xae60, 0x1, 0x1);
        gbc.writeMem(0x39d7, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8982, gbc.sp());
        EXPECT(0x39d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 00B1
        gbc.setState(0xcc0, 0x676, 0xee70, 0x8de7, 0x3df3, 0x5def, 0x1, 0x1);
        gbc.writeMem(0xcc0, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x676, gbc.sp());
        EXPECT(0xcc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 00B2
        gbc.setState(0x336b, 0x8aa0, 0xe660, 0x8b62, 0x427f, 0xc773, 0x1, 0x0);
        gbc.writeMem(0x336b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8aa0, gbc.sp());
        EXPECT(0x336d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 00B3
        gbc.setState(0x583a, 0x4519, 0x8730, 0x604c, 0xda41, 0xfb57, 0x0, 0x0);
        gbc.writeMem(0x583a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4519, gbc.sp());
        EXPECT(0x583c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 00B4
        gbc.setState(0xcf, 0x5845, 0x8ae0, 0x4753, 0xcd88, 0xb8a2, 0x1, 0x1);
        gbc.writeMem(0xcf, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5845, gbc.sp());
        EXPECT(0xd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 00B5
        gbc.setState(0x4fdf, 0x40bb, 0x12c0, 0xdde7, 0xd1f, 0xe29f, 0x0, 0x0);
        gbc.writeMem(0x4fdf, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x40bb, gbc.sp());
        EXPECT(0x4fe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 00B6
        gbc.setState(0x7448, 0xc712, 0x2c90, 0xe46c, 0xc67b, 0x898e, 0x0, 0x1);
        gbc.writeMem(0x7448, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc712, gbc.sp());
        EXPECT(0x744a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 00B7
        gbc.setState(0x8d83, 0x80fc, 0x5f60, 0x29b1, 0xcdb5, 0x4239, 0x1, 0x1);
        gbc.writeMem(0x8d83, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x80fc, gbc.sp());
        EXPECT(0x8d85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d83));
        EXPECT(0xf5, gbc.readMem(0x8d84));
        // CB F5 00B8
        gbc.setState(0x10be, 0x870b, 0x39b0, 0x577d, 0xd17d, 0x9cd3, 0x1, 0x0);
        gbc.writeMem(0x10be, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x870b, gbc.sp());
        EXPECT(0x10c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 00B9
        gbc.setState(0xdff, 0x955f, 0xbdc0, 0xcb47, 0x39c1, 0x2ce5, 0x0, 0x0);
        gbc.writeMem(0xdff, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x955f, gbc.sp());
        EXPECT(0xe01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 00BA
        gbc.setState(0xc1b2, 0x2e6d, 0xfc60, 0xdf9d, 0xbee0, 0x3983, 0x0, 0x0);
        gbc.writeMem(0xc1b2, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2e6d, gbc.sp());
        EXPECT(0xc1b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1b2));
        EXPECT(0xf5, gbc.readMem(0xc1b3));
        // CB F5 00BB
        gbc.setState(0x2be6, 0x4a37, 0xf5a0, 0x76c6, 0x3978, 0xf1d, 0x0, 0x0);
        gbc.writeMem(0x2be6, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4a37, gbc.sp());
        EXPECT(0x2be8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 00BC
        gbc.setState(0x9ccb, 0x9433, 0xabc0, 0xa04a, 0xdac5, 0xea6, 0x0, 0x1);
        gbc.writeMem(0x9ccb, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9433, gbc.sp());
        EXPECT(0x9ccd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ccb));
        EXPECT(0xf5, gbc.readMem(0x9ccc));
        // CB F5 00BD
        gbc.setState(0x42eb, 0x8dd9, 0xcf10, 0x3454, 0xd17, 0x7322, 0x0, 0x0);
        gbc.writeMem(0x42eb, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8dd9, gbc.sp());
        EXPECT(0x42ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 00BE
        gbc.setState(0x8317, 0x28e6, 0xf30, 0x21ac, 0x2983, 0xb260, 0x0, 0x0);
        gbc.writeMem(0x8317, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x28e6, gbc.sp());
        EXPECT(0x8319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8317));
        EXPECT(0xf5, gbc.readMem(0x8318));
        // CB F5 00BF
        gbc.setState(0x31a5, 0xa500, 0x3dc0, 0xa614, 0x48a6, 0x7a06, 0x1, 0x1);
        gbc.writeMem(0x31a5, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa500, gbc.sp());
        EXPECT(0x31a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 00C0
        gbc.setState(0x1fd1, 0x14c4, 0x7ee0, 0xe1d8, 0x5ea, 0x8493, 0x0, 0x1);
        gbc.writeMem(0x1fd1, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x14c4, gbc.sp());
        EXPECT(0x1fd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 00C1
        gbc.setState(0x3b2b, 0x345, 0x2c50, 0x6592, 0x769f, 0xcbd8, 0x0, 0x0);
        gbc.writeMem(0x3b2b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x345, gbc.sp());
        EXPECT(0x3b2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 00C2
        gbc.setState(0xea28, 0x2f71, 0xb030, 0xd36c, 0x9d05, 0x6f8, 0x0, 0x1);
        gbc.writeMem(0xea28, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2f71, gbc.sp());
        EXPECT(0xea2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea28));
        EXPECT(0xf5, gbc.readMem(0xea29));
        // CB F5 00C3
        gbc.setState(0xe432, 0xfb27, 0xf270, 0x975, 0x975d, 0xfa00, 0x1, 0x0);
        gbc.writeMem(0xe432, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xfb27, gbc.sp());
        EXPECT(0xe434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe432));
        EXPECT(0xf5, gbc.readMem(0xe433));
        // CB F5 00C4
        gbc.setState(0x641c, 0x3eb3, 0xadd0, 0x10dc, 0xfd7c, 0x42c3, 0x1, 0x0);
        gbc.writeMem(0x641c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3eb3, gbc.sp());
        EXPECT(0x641e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 00C5
        gbc.setState(0x2c29, 0x25b3, 0x3b0, 0x5534, 0x43d1, 0x6cc2, 0x1, 0x1);
        gbc.writeMem(0x2c29, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x25b3, gbc.sp());
        EXPECT(0x2c2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 00C6
        gbc.setState(0x6354, 0x5067, 0xbb60, 0x9eac, 0xdedf, 0x442, 0x1, 0x1);
        gbc.writeMem(0x6354, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5067, gbc.sp());
        EXPECT(0x6356, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 00C7
        gbc.setState(0xa214, 0xb654, 0x190, 0x6e4b, 0x3ad3, 0xdfa2, 0x1, 0x1);
        gbc.writeMem(0xa214, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb654, gbc.sp());
        EXPECT(0xa216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa214));
        EXPECT(0xf5, gbc.readMem(0xa215));
        // CB F5 00C8
        gbc.setState(0xe09b, 0x6d84, 0x3f0, 0xf28f, 0x3c24, 0xec39, 0x0, 0x0);
        gbc.writeMem(0xe09b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6d84, gbc.sp());
        EXPECT(0xe09d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe09b));
        EXPECT(0xf5, gbc.readMem(0xe09c));
        // CB F5 00C9
        gbc.setState(0xd72c, 0x52eb, 0x85b0, 0x62e, 0x8dce, 0xc131, 0x1, 0x0);
        gbc.writeMem(0xd72c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x52eb, gbc.sp());
        EXPECT(0xd72e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd72c));
        EXPECT(0xf5, gbc.readMem(0xd72d));
        // CB F5 00CA
        gbc.setState(0x32b9, 0xf02a, 0x1ad0, 0x9cef, 0xbed9, 0x9364, 0x1, 0x1);
        gbc.writeMem(0x32b9, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf02a, gbc.sp());
        EXPECT(0x32bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 00CB
        gbc.setState(0x4294, 0x147b, 0xcfb0, 0x8b7f, 0x3b8b, 0xd5d5, 0x1, 0x1);
        gbc.writeMem(0x4294, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x147b, gbc.sp());
        EXPECT(0x4296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 00CC
        gbc.setState(0x33fc, 0x4111, 0xf800, 0x9001, 0x2511, 0x1c2, 0x0, 0x0);
        gbc.writeMem(0x33fc, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4111, gbc.sp());
        EXPECT(0x33fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 00CD
        gbc.setState(0xdd37, 0x773, 0xbff0, 0xf57f, 0x49fb, 0x67cf, 0x0, 0x1);
        gbc.writeMem(0xdd37, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x773, gbc.sp());
        EXPECT(0xdd39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd37));
        EXPECT(0xf5, gbc.readMem(0xdd38));
        // CB F5 00CE
        gbc.setState(0xcb60, 0x45dc, 0x75f0, 0x8b0f, 0x162a, 0x5c7, 0x1, 0x1);
        gbc.writeMem(0xcb60, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x45dc, gbc.sp());
        EXPECT(0xcb62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb60));
        EXPECT(0xf5, gbc.readMem(0xcb61));
        // CB F5 00CF
        gbc.setState(0x8f8, 0xbfb0, 0x18e0, 0xfa01, 0x44be, 0xa093, 0x1, 0x0);
        gbc.writeMem(0x8f8, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xbfb0, gbc.sp());
        EXPECT(0x8fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 00D0
        gbc.setState(0xd94f, 0x5047, 0x4980, 0x13e, 0xa68e, 0xf08c, 0x0, 0x0);
        gbc.writeMem(0xd94f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5047, gbc.sp());
        EXPECT(0xd951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd94f));
        EXPECT(0xf5, gbc.readMem(0xd950));
        // CB F5 00D1
        gbc.setState(0x2c3e, 0xdb7c, 0x1d10, 0x31ab, 0x38e7, 0x53ff, 0x1, 0x0);
        gbc.writeMem(0x2c3e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xdb7c, gbc.sp());
        EXPECT(0x2c40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 00D2
        gbc.setState(0xeb0, 0x437c, 0xa330, 0x2562, 0xd106, 0x6d75, 0x0, 0x1);
        gbc.writeMem(0xeb0, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x437c, gbc.sp());
        EXPECT(0xeb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 00D3
        gbc.setState(0xd94c, 0xfefa, 0x7750, 0xc301, 0x3b2e, 0xc5d2, 0x1, 0x1);
        gbc.writeMem(0xd94c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xfefa, gbc.sp());
        EXPECT(0xd94e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd94c));
        EXPECT(0xf5, gbc.readMem(0xd94d));
        // CB F5 00D5
        gbc.setState(0x261a, 0xe1b0, 0x4800, 0x1086, 0xeb3f, 0xa32a, 0x0, 0x1);
        gbc.writeMem(0x261a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe1b0, gbc.sp());
        EXPECT(0x261c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 00D6
        gbc.setState(0xb8b7, 0xaaed, 0x4080, 0xf03c, 0xceeb, 0x4a27, 0x1, 0x1);
        gbc.writeMem(0xb8b7, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xaaed, gbc.sp());
        EXPECT(0xb8b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8b7));
        EXPECT(0xf5, gbc.readMem(0xb8b8));
        // CB F5 00D7
        gbc.setState(0x7e7b, 0x2ed3, 0xba40, 0xe5e8, 0xc47, 0xfc01, 0x1, 0x0);
        gbc.writeMem(0x7e7b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2ed3, gbc.sp());
        EXPECT(0x7e7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 00D8
        gbc.setState(0x2135, 0xaf04, 0xb520, 0x51de, 0x9bb, 0x5b6a, 0x1, 0x0);
        gbc.writeMem(0x2135, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xaf04, gbc.sp());
        EXPECT(0x2137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 00D9
        gbc.setState(0xbea9, 0x1c78, 0x130, 0x8399, 0x1dc1, 0xfc43, 0x1, 0x1);
        gbc.writeMem(0xbea9, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1c78, gbc.sp());
        EXPECT(0xbeab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbea9));
        EXPECT(0xf5, gbc.readMem(0xbeaa));
        // CB F5 00DA
        gbc.setState(0x3a72, 0xcd2e, 0xe5f0, 0x9966, 0xd56b, 0xa2bb, 0x0, 0x0);
        gbc.writeMem(0x3a72, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xcd2e, gbc.sp());
        EXPECT(0x3a74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 00DB
        gbc.setState(0x8d0f, 0x7ed6, 0x88a0, 0x54f4, 0xaf92, 0x8b67, 0x1, 0x0);
        gbc.writeMem(0x8d0f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7ed6, gbc.sp());
        EXPECT(0x8d11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d0f));
        EXPECT(0xf5, gbc.readMem(0x8d10));
        // CB F5 00DC
        gbc.setState(0x55ff, 0xc8ee, 0x72e0, 0xb18b, 0x54b5, 0xc5f3, 0x1, 0x1);
        gbc.writeMem(0x55ff, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc8ee, gbc.sp());
        EXPECT(0x5601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 00DD
        gbc.setState(0x6f48, 0xa904, 0xb30, 0x1afb, 0x4ffc, 0x82c8, 0x1, 0x1);
        gbc.writeMem(0x6f48, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa904, gbc.sp());
        EXPECT(0x6f4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 00DE
        gbc.setState(0x4f6d, 0xfabd, 0x8270, 0x966, 0x3836, 0x9823, 0x0, 0x1);
        gbc.writeMem(0x4f6d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xfabd, gbc.sp());
        EXPECT(0x4f6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 00DF
        gbc.setState(0x5fb8, 0xa61e, 0xb050, 0x24c4, 0x6df1, 0xd717, 0x0, 0x0);
        gbc.writeMem(0x5fb8, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa61e, gbc.sp());
        EXPECT(0x5fba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 00E0
        gbc.setState(0x86b9, 0x2e65, 0xa700, 0x1fe1, 0xa59b, 0xe84a, 0x1, 0x0);
        gbc.writeMem(0x86b9, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2e65, gbc.sp());
        EXPECT(0x86bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86b9));
        EXPECT(0xf5, gbc.readMem(0x86ba));
        // CB F5 00E1
        gbc.setState(0x4b8e, 0x79c5, 0xbff0, 0xce8c, 0x769, 0xf774, 0x0, 0x0);
        gbc.writeMem(0x4b8e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x79c5, gbc.sp());
        EXPECT(0x4b90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 00E2
        gbc.setState(0x4b34, 0x9482, 0x8f10, 0xb162, 0x85d4, 0xdfe9, 0x0, 0x0);
        gbc.writeMem(0x4b34, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9482, gbc.sp());
        EXPECT(0x4b36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 00E3
        gbc.setState(0xec35, 0x8f67, 0xd5d0, 0x520e, 0x26a1, 0x72a4, 0x1, 0x0);
        gbc.writeMem(0xec35, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8f67, gbc.sp());
        EXPECT(0xec37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec35));
        EXPECT(0xf5, gbc.readMem(0xec36));
        // CB F5 00E4
        gbc.setState(0xac3e, 0x97dd, 0xe810, 0x121b, 0xdfb, 0xb4e5, 0x0, 0x1);
        gbc.writeMem(0xac3e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x97dd, gbc.sp());
        EXPECT(0xac40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac3e));
        EXPECT(0xf5, gbc.readMem(0xac3f));
        // CB F5 00E5
        gbc.setState(0x3552, 0xda34, 0x7cb0, 0xa33, 0xca7c, 0x6fc7, 0x1, 0x1);
        gbc.writeMem(0x3552, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xda34, gbc.sp());
        EXPECT(0x3554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 00E6
        gbc.setState(0xd1bb, 0x1c72, 0xff50, 0x5867, 0x3377, 0xa03d, 0x0, 0x1);
        gbc.writeMem(0xd1bb, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1c72, gbc.sp());
        EXPECT(0xd1bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1bb));
        EXPECT(0xf5, gbc.readMem(0xd1bc));
        // CB F5 00E7
        gbc.setState(0x9db8, 0x5e89, 0xcda0, 0x708c, 0x3340, 0x58a3, 0x1, 0x1);
        gbc.writeMem(0x9db8, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5e89, gbc.sp());
        EXPECT(0x9dba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9db8));
        EXPECT(0xf5, gbc.readMem(0x9db9));
        // CB F5 00E8
        gbc.setState(0x5150, 0xa07f, 0x5160, 0x66f1, 0x47c6, 0xcb24, 0x1, 0x0);
        gbc.writeMem(0x5150, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa07f, gbc.sp());
        EXPECT(0x5152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 00E9
        gbc.setState(0xcba7, 0xda27, 0x7da0, 0x3ecb, 0xad63, 0x46f4, 0x1, 0x1);
        gbc.writeMem(0xcba7, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xda27, gbc.sp());
        EXPECT(0xcba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcba7));
        EXPECT(0xf5, gbc.readMem(0xcba8));
        // CB F5 00EA
        gbc.setState(0xd465, 0x4355, 0x4ce0, 0x945b, 0xeb5d, 0xa50, 0x1, 0x1);
        gbc.writeMem(0xd465, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4355, gbc.sp());
        EXPECT(0xd467, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd465));
        EXPECT(0xf5, gbc.readMem(0xd466));
        // CB F5 00EB
        gbc.setState(0x2db0, 0xfd77, 0xaf40, 0x3726, 0xc758, 0x8e7b, 0x1, 0x0);
        gbc.writeMem(0x2db0, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xfd77, gbc.sp());
        EXPECT(0x2db2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 00EC
        gbc.setState(0x2ec2, 0xf626, 0xa310, 0xf69f, 0x288a, 0xffc0, 0x1, 0x0);
        gbc.writeMem(0x2ec2, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf626, gbc.sp());
        EXPECT(0x2ec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 00ED
        gbc.setState(0x30da, 0xa8a4, 0xc5e0, 0x9029, 0x825c, 0x2990, 0x1, 0x0);
        gbc.writeMem(0x30da, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa8a4, gbc.sp());
        EXPECT(0x30dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 00EF
        gbc.setState(0x9627, 0xccd4, 0x23f0, 0xa09a, 0xcc89, 0x7b98, 0x1, 0x0);
        gbc.writeMem(0x9627, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xccd4, gbc.sp());
        EXPECT(0x9629, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9627));
        EXPECT(0xf5, gbc.readMem(0x9628));
        // CB F5 00F0
        gbc.setState(0x408a, 0xa3de, 0xce40, 0x5289, 0xd109, 0x5463, 0x1, 0x1);
        gbc.writeMem(0x408a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa3de, gbc.sp());
        EXPECT(0x408c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 00F1
        gbc.setState(0xcfa, 0xb9fa, 0x4c70, 0xfda5, 0x57e6, 0x6bd2, 0x0, 0x1);
        gbc.writeMem(0xcfa, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb9fa, gbc.sp());
        EXPECT(0xcfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 00F2
        gbc.setState(0x4f1c, 0xb58a, 0x6340, 0x6487, 0x87aa, 0x17d7, 0x1, 0x1);
        gbc.writeMem(0x4f1c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb58a, gbc.sp());
        EXPECT(0x4f1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 00F3
        gbc.setState(0x55e5, 0x5bf3, 0x8d20, 0x7f8d, 0xd149, 0xc85a, 0x1, 0x0);
        gbc.writeMem(0x55e5, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5bf3, gbc.sp());
        EXPECT(0x55e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 00F4
        gbc.setState(0xeb8b, 0x2b27, 0x1fe0, 0xf007, 0xa6fc, 0x2c05, 0x1, 0x1);
        gbc.writeMem(0xeb8b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2b27, gbc.sp());
        EXPECT(0xeb8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb8b));
        EXPECT(0xf5, gbc.readMem(0xeb8c));
        // CB F5 00F5
        gbc.setState(0x48ea, 0x2251, 0x4770, 0xd318, 0xfebb, 0x2941, 0x0, 0x1);
        gbc.writeMem(0x48ea, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2251, gbc.sp());
        EXPECT(0x48ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 00F6
        gbc.setState(0xa8d3, 0x8579, 0xb6d0, 0x9020, 0xff75, 0x76c2, 0x1, 0x0);
        gbc.writeMem(0xa8d3, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8579, gbc.sp());
        EXPECT(0xa8d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8d3));
        EXPECT(0xf5, gbc.readMem(0xa8d4));
        // CB F5 00F7
        gbc.setState(0x78d, 0xf66c, 0x8e80, 0x9466, 0x3d6b, 0xd4fe, 0x0, 0x1);
        gbc.writeMem(0x78d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf66c, gbc.sp());
        EXPECT(0x78f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 00F8
        gbc.setState(0xa4b, 0x8707, 0xc2a0, 0xade9, 0x9ac1, 0xf295, 0x1, 0x0);
        gbc.writeMem(0xa4b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8707, gbc.sp());
        EXPECT(0xa4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 00F9
        gbc.setState(0x1927, 0xca95, 0x4a20, 0x9f74, 0x7ee2, 0x58bd, 0x0, 0x0);
        gbc.writeMem(0x1927, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xca95, gbc.sp());
        EXPECT(0x1929, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 00FA
        gbc.setState(0x4a0, 0xbfae, 0xa760, 0x37b5, 0x7215, 0xaf53, 0x0, 0x1);
        gbc.writeMem(0x4a0, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xbfae, gbc.sp());
        EXPECT(0x4a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 00FC
        gbc.setState(0xd366, 0x330, 0xdea0, 0x5a1e, 0xd97a, 0x77e6, 0x1, 0x1);
        gbc.writeMem(0xd366, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x330, gbc.sp());
        EXPECT(0xd368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd366));
        EXPECT(0xf5, gbc.readMem(0xd367));
        // CB F5 00FD
        gbc.setState(0x15f3, 0xafc, 0xe790, 0xd3e0, 0x997b, 0x2b05, 0x1, 0x0);
        gbc.writeMem(0x15f3, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xafc, gbc.sp());
        EXPECT(0x15f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 00FE
        gbc.setState(0x314d, 0x7f96, 0xdab0, 0x231e, 0x849f, 0x3f45, 0x0, 0x1);
        gbc.writeMem(0x314d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7f96, gbc.sp());
        EXPECT(0x314f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 00FF
        gbc.setState(0x36fe, 0xea6, 0x1b40, 0xf21f, 0x9585, 0x899, 0x0, 0x1);
        gbc.writeMem(0x36fe, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xea6, gbc.sp());
        EXPECT(0x3700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0100
        gbc.setState(0x1e1b, 0x49b, 0x9f00, 0xbe3d, 0x3a61, 0x8fe2, 0x0, 0x0);
        gbc.writeMem(0x1e1b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x49b, gbc.sp());
        EXPECT(0x1e1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0101
        gbc.setState(0xb653, 0xe7e6, 0x8f30, 0xc9c8, 0xac1f, 0x47b5, 0x1, 0x1);
        gbc.writeMem(0xb653, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe7e6, gbc.sp());
        EXPECT(0xb655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb653));
        EXPECT(0xf5, gbc.readMem(0xb654));
        // CB F5 0103
        gbc.setState(0xd2b7, 0x1ce4, 0xbaa0, 0x1be1, 0xc0b2, 0x20ad, 0x0, 0x0);
        gbc.writeMem(0xd2b7, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1ce4, gbc.sp());
        EXPECT(0xd2b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2b7));
        EXPECT(0xf5, gbc.readMem(0xd2b8));
        // CB F5 0104
        gbc.setState(0x5e9e, 0x7b4e, 0xa040, 0xcf2b, 0x81e8, 0x2dae, 0x1, 0x0);
        gbc.writeMem(0x5e9e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7b4e, gbc.sp());
        EXPECT(0x5ea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0105
        gbc.setState(0x96e2, 0x79bd, 0xcf20, 0xb790, 0x7d3c, 0x306d, 0x1, 0x1);
        gbc.writeMem(0x96e2, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x79bd, gbc.sp());
        EXPECT(0x96e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96e2));
        EXPECT(0xf5, gbc.readMem(0x96e3));
        // CB F5 0106
        gbc.setState(0x35dd, 0xfb4d, 0x300, 0x15b, 0xb288, 0x469, 0x0, 0x0);
        gbc.writeMem(0x35dd, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xfb4d, gbc.sp());
        EXPECT(0x35df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0107
        gbc.setState(0x4e46, 0xc660, 0xf6c0, 0xd8fb, 0x562b, 0x6091, 0x1, 0x0);
        gbc.writeMem(0x4e46, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc660, gbc.sp());
        EXPECT(0x4e48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0108
        gbc.setState(0x1043, 0x4526, 0x8a50, 0x7045, 0xfce2, 0x15b8, 0x0, 0x0);
        gbc.writeMem(0x1043, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4526, gbc.sp());
        EXPECT(0x1045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0109
        gbc.setState(0xc42c, 0xbc56, 0xe740, 0x767b, 0xc113, 0x3dda, 0x0, 0x0);
        gbc.writeMem(0xc42c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xbc56, gbc.sp());
        EXPECT(0xc42e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc42c));
        EXPECT(0xf5, gbc.readMem(0xc42d));
        // CB F5 010A
        gbc.setState(0xd1ce, 0x69b0, 0x270, 0x248c, 0x534, 0x654e, 0x1, 0x0);
        gbc.writeMem(0xd1ce, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x69b0, gbc.sp());
        EXPECT(0xd1d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ce));
        EXPECT(0xf5, gbc.readMem(0xd1cf));
        // CB F5 010B
        gbc.setState(0xfce, 0xa29c, 0x4b60, 0xfb94, 0xd3, 0x1ecd, 0x0, 0x0);
        gbc.writeMem(0xfce, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa29c, gbc.sp());
        EXPECT(0xfd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 010D
        gbc.setState(0x206b, 0x5521, 0x2720, 0x62c0, 0x9e45, 0x7966, 0x0, 0x1);
        gbc.writeMem(0x206b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5521, gbc.sp());
        EXPECT(0x206d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 010E
        gbc.setState(0xb34f, 0x865e, 0xf440, 0xfece, 0x79a, 0xaf24, 0x0, 0x1);
        gbc.writeMem(0xb34f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x865e, gbc.sp());
        EXPECT(0xb351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb34f));
        EXPECT(0xf5, gbc.readMem(0xb350));
        // CB F5 0110
        gbc.setState(0xd9d, 0xc00a, 0xed80, 0x9b91, 0x1e48, 0xeb3f, 0x1, 0x1);
        gbc.writeMem(0xd9d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc00a, gbc.sp());
        EXPECT(0xd9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0111
        gbc.setState(0x801e, 0xc537, 0xcf10, 0x85f7, 0x3c72, 0xcd7c, 0x0, 0x0);
        gbc.writeMem(0x801e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc537, gbc.sp());
        EXPECT(0x8020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x801e));
        EXPECT(0xf5, gbc.readMem(0x801f));
        // CB F5 0112
        gbc.setState(0x52c4, 0x2158, 0xee90, 0x5ea1, 0x4e39, 0x6332, 0x1, 0x1);
        gbc.writeMem(0x52c4, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2158, gbc.sp());
        EXPECT(0x52c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0113
        gbc.setState(0x5155, 0xcc04, 0x1a90, 0x8618, 0x7517, 0x308c, 0x0, 0x0);
        gbc.writeMem(0x5155, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xcc04, gbc.sp());
        EXPECT(0x5157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0114
        gbc.setState(0xf4e, 0x5e45, 0x2720, 0xeace, 0xe81b, 0xea9e, 0x0, 0x0);
        gbc.writeMem(0xf4e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5e45, gbc.sp());
        EXPECT(0xf50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0115
        gbc.setState(0x85c7, 0x8f62, 0xf90, 0x12c, 0xc220, 0xd6f6, 0x1, 0x0);
        gbc.writeMem(0x85c7, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8f62, gbc.sp());
        EXPECT(0x85c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85c7));
        EXPECT(0xf5, gbc.readMem(0x85c8));
        // CB F5 0116
        gbc.setState(0x8c7b, 0x5ae1, 0xd600, 0xb413, 0x842c, 0x1f5c, 0x1, 0x1);
        gbc.writeMem(0x8c7b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5ae1, gbc.sp());
        EXPECT(0x8c7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c7b));
        EXPECT(0xf5, gbc.readMem(0x8c7c));
        // CB F5 0117
        gbc.setState(0x301d, 0x3aeb, 0x7610, 0x9c48, 0xf0ce, 0x37ff, 0x0, 0x0);
        gbc.writeMem(0x301d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3aeb, gbc.sp());
        EXPECT(0x301f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0118
        gbc.setState(0x7f6c, 0xc958, 0xc920, 0xd96d, 0x915d, 0xfda9, 0x1, 0x0);
        gbc.writeMem(0x7f6c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc958, gbc.sp());
        EXPECT(0x7f6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0119
        gbc.setState(0x26b3, 0x60c2, 0xd100, 0x53e4, 0x2720, 0xa9c5, 0x0, 0x1);
        gbc.writeMem(0x26b3, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x60c2, gbc.sp());
        EXPECT(0x26b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 011A
        gbc.setState(0xccd1, 0xcaf2, 0x9f20, 0x974c, 0x9622, 0x1681, 0x1, 0x0);
        gbc.writeMem(0xccd1, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xcaf2, gbc.sp());
        EXPECT(0xccd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccd1));
        EXPECT(0xf5, gbc.readMem(0xccd2));
        // CB F5 011B
        gbc.setState(0xbc16, 0xf51f, 0x5810, 0x270f, 0x2982, 0x7ed7, 0x1, 0x1);
        gbc.writeMem(0xbc16, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf51f, gbc.sp());
        EXPECT(0xbc18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc16));
        EXPECT(0xf5, gbc.readMem(0xbc17));
        // CB F5 011C
        gbc.setState(0x7a93, 0xad67, 0x2290, 0x9145, 0xed8b, 0x4d1, 0x1, 0x1);
        gbc.writeMem(0x7a93, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xad67, gbc.sp());
        EXPECT(0x7a95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 011D
        gbc.setState(0x4c, 0x4174, 0xdd00, 0xf67, 0x86a5, 0xa152, 0x0, 0x0);
        gbc.writeMem(0x4c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4174, gbc.sp());
        EXPECT(0x4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 011E
        gbc.setState(0xaee7, 0x19b2, 0x6920, 0x1dcd, 0xf523, 0xece9, 0x0, 0x0);
        gbc.writeMem(0xaee7, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x19b2, gbc.sp());
        EXPECT(0xaee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaee7));
        EXPECT(0xf5, gbc.readMem(0xaee8));
        // CB F5 011F
        gbc.setState(0xad80, 0x162a, 0x9660, 0xa1a9, 0xdb59, 0x3865, 0x0, 0x0);
        gbc.writeMem(0xad80, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x162a, gbc.sp());
        EXPECT(0xad82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad80));
        EXPECT(0xf5, gbc.readMem(0xad81));
        // CB F5 0120
        gbc.setState(0xcaeb, 0xf368, 0x6500, 0xfb3d, 0x2c00, 0x9ee6, 0x0, 0x1);
        gbc.writeMem(0xcaeb, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf368, gbc.sp());
        EXPECT(0xcaed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaeb));
        EXPECT(0xf5, gbc.readMem(0xcaec));
        // CB F5 0121
        gbc.setState(0x5c2, 0x30c, 0xd780, 0x5063, 0x6c5c, 0x6565, 0x1, 0x0);
        gbc.writeMem(0x5c2, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x30c, gbc.sp());
        EXPECT(0x5c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0122
        gbc.setState(0x9bfe, 0xc1b3, 0xc430, 0x63cc, 0xf45f, 0x4ea4, 0x1, 0x1);
        gbc.writeMem(0x9bfe, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc1b3, gbc.sp());
        EXPECT(0x9c00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bfe));
        EXPECT(0xf5, gbc.readMem(0x9bff));
        // CB F5 0123
        gbc.setState(0x8fad, 0x936a, 0xe5f0, 0xe0c6, 0x3e8a, 0x47bf, 0x0, 0x0);
        gbc.writeMem(0x8fad, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x936a, gbc.sp());
        EXPECT(0x8faf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fad));
        EXPECT(0xf5, gbc.readMem(0x8fae));
        // CB F5 0124
        gbc.setState(0x1bfb, 0x908f, 0x80b0, 0xab41, 0x7460, 0xb2c4, 0x0, 0x1);
        gbc.writeMem(0x1bfb, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x908f, gbc.sp());
        EXPECT(0x1bfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0125
        gbc.setState(0x6ca6, 0x96f2, 0xd870, 0x6409, 0x34ac, 0x3766, 0x0, 0x1);
        gbc.writeMem(0x6ca6, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x96f2, gbc.sp());
        EXPECT(0x6ca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0126
        gbc.setState(0x8f5c, 0x4b47, 0xf370, 0xbe55, 0x3501, 0x3782, 0x0, 0x1);
        gbc.writeMem(0x8f5c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4b47, gbc.sp());
        EXPECT(0x8f5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f5c));
        EXPECT(0xf5, gbc.readMem(0x8f5d));
        // CB F5 0127
        gbc.setState(0x49ca, 0x7eaa, 0x4de0, 0x3e1d, 0x484d, 0x37f3, 0x0, 0x1);
        gbc.writeMem(0x49ca, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7eaa, gbc.sp());
        EXPECT(0x49cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0128
        gbc.setState(0xbe73, 0x2ef2, 0xdc20, 0x1eac, 0xf91d, 0x4fbe, 0x0, 0x0);
        gbc.writeMem(0xbe73, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2ef2, gbc.sp());
        EXPECT(0xbe75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe73));
        EXPECT(0xf5, gbc.readMem(0xbe74));
        // CB F5 0129
        gbc.setState(0x74c0, 0x54b1, 0x75d0, 0x484c, 0x9c34, 0xa9d0, 0x1, 0x0);
        gbc.writeMem(0x74c0, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x54b1, gbc.sp());
        EXPECT(0x74c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 012A
        gbc.setState(0x31d4, 0xfcf5, 0xfc80, 0xf4ab, 0xa1a7, 0xd09c, 0x1, 0x0);
        gbc.writeMem(0x31d4, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xfcf5, gbc.sp());
        EXPECT(0x31d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 012B
        gbc.setState(0xd5c4, 0x778b, 0xc80, 0x4c05, 0xa411, 0xd318, 0x1, 0x1);
        gbc.writeMem(0xd5c4, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x778b, gbc.sp());
        EXPECT(0xd5c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5c4));
        EXPECT(0xf5, gbc.readMem(0xd5c5));
        // CB F5 012C
        gbc.setState(0x328, 0xa8f2, 0xbaa0, 0x9cb, 0x4830, 0xb4b7, 0x0, 0x1);
        gbc.writeMem(0x328, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa8f2, gbc.sp());
        EXPECT(0x32a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 012D
        gbc.setState(0x1df1, 0x78a3, 0xf210, 0xb57, 0x39b8, 0xf200, 0x1, 0x1);
        gbc.writeMem(0x1df1, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x78a3, gbc.sp());
        EXPECT(0x1df3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 012E
        gbc.setState(0x851b, 0x1946, 0x15b0, 0x4330, 0x584, 0x4e4f, 0x1, 0x0);
        gbc.writeMem(0x851b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1946, gbc.sp());
        EXPECT(0x851d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x851b));
        EXPECT(0xf5, gbc.readMem(0x851c));
        // CB F5 012F
        gbc.setState(0xdaca, 0xc5aa, 0x54b0, 0xce2e, 0x11c5, 0xb4b4, 0x1, 0x1);
        gbc.writeMem(0xdaca, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc5aa, gbc.sp());
        EXPECT(0xdacc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaca));
        EXPECT(0xf5, gbc.readMem(0xdacb));
        // CB F5 0130
        gbc.setState(0x52dd, 0x1ac5, 0xab0, 0x8cd, 0x1892, 0x4c3a, 0x0, 0x1);
        gbc.writeMem(0x52dd, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1ac5, gbc.sp());
        EXPECT(0x52df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0131
        gbc.setState(0xb113, 0x71d1, 0x3ce0, 0xf6ee, 0xa15c, 0x92e3, 0x1, 0x1);
        gbc.writeMem(0xb113, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x71d1, gbc.sp());
        EXPECT(0xb115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb113));
        EXPECT(0xf5, gbc.readMem(0xb114));
        // CB F5 0132
        gbc.setState(0xa98e, 0xbeb6, 0x5dc0, 0xb289, 0xe481, 0x7bea, 0x0, 0x1);
        gbc.writeMem(0xa98e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xbeb6, gbc.sp());
        EXPECT(0xa990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa98e));
        EXPECT(0xf5, gbc.readMem(0xa98f));
        // CB F5 0133
        gbc.setState(0x756a, 0x158, 0xc220, 0x29d2, 0xd8fe, 0x8e45, 0x1, 0x1);
        gbc.writeMem(0x756a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x158, gbc.sp());
        EXPECT(0x756c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0135
        gbc.setState(0xdc7a, 0xbbb1, 0x48a0, 0xb713, 0x1a8c, 0x3638, 0x0, 0x0);
        gbc.writeMem(0xdc7a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xbbb1, gbc.sp());
        EXPECT(0xdc7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc7a));
        EXPECT(0xf5, gbc.readMem(0xdc7b));
        // CB F5 0136
        gbc.setState(0x2317, 0x87de, 0x6c40, 0x6ed9, 0x1b39, 0x3ddb, 0x0, 0x1);
        gbc.writeMem(0x2317, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x87de, gbc.sp());
        EXPECT(0x2319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0137
        gbc.setState(0x67, 0x6491, 0xf770, 0x1877, 0x85a6, 0x9e77, 0x0, 0x1);
        gbc.writeMem(0x67, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6491, gbc.sp());
        EXPECT(0x69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0138
        gbc.setState(0x1a66, 0xd847, 0xb850, 0x9fe0, 0xeee9, 0x1b3f, 0x0, 0x0);
        gbc.writeMem(0x1a66, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd847, gbc.sp());
        EXPECT(0x1a68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0139
        gbc.setState(0x4baa, 0x38c8, 0x7260, 0x971c, 0x463e, 0xebff, 0x0, 0x1);
        gbc.writeMem(0x4baa, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x38c8, gbc.sp());
        EXPECT(0x4bac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 013A
        gbc.setState(0x3e85, 0x2891, 0x4ae0, 0xdd08, 0x6a15, 0xb240, 0x1, 0x1);
        gbc.writeMem(0x3e85, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2891, gbc.sp());
        EXPECT(0x3e87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 013B
        gbc.setState(0x663d, 0x2331, 0xdff0, 0x6e71, 0xd2d5, 0x8e8e, 0x0, 0x1);
        gbc.writeMem(0x663d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2331, gbc.sp());
        EXPECT(0x663f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 013C
        gbc.setState(0x6351, 0x15c8, 0xfdf0, 0x8809, 0x845, 0x7f11, 0x0, 0x1);
        gbc.writeMem(0x6351, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x15c8, gbc.sp());
        EXPECT(0x6353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 013D
        gbc.setState(0xab9d, 0x6a0c, 0xf300, 0x9b27, 0x3b1c, 0x7f28, 0x1, 0x0);
        gbc.writeMem(0xab9d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6a0c, gbc.sp());
        EXPECT(0xab9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab9d));
        EXPECT(0xf5, gbc.readMem(0xab9e));
        // CB F5 013E
        gbc.setState(0xdb95, 0x2e3, 0x63f0, 0x7ce9, 0x8137, 0xc29e, 0x1, 0x1);
        gbc.writeMem(0xdb95, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2e3, gbc.sp());
        EXPECT(0xdb97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb95));
        EXPECT(0xf5, gbc.readMem(0xdb96));
        // CB F5 013F
        gbc.setState(0xd347, 0x5c1e, 0xa150, 0xf6ab, 0x64e5, 0x88bf, 0x1, 0x0);
        gbc.writeMem(0xd347, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5c1e, gbc.sp());
        EXPECT(0xd349, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd347));
        EXPECT(0xf5, gbc.readMem(0xd348));
        // CB F5 0140
        gbc.setState(0x2920, 0xa39e, 0x2480, 0x61e4, 0x2133, 0xb503, 0x0, 0x1);
        gbc.writeMem(0x2920, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa39e, gbc.sp());
        EXPECT(0x2922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0141
        gbc.setState(0x824a, 0xa006, 0x47d0, 0x2f21, 0x2aab, 0xba42, 0x1, 0x0);
        gbc.writeMem(0x824a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa006, gbc.sp());
        EXPECT(0x824c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x824a));
        EXPECT(0xf5, gbc.readMem(0x824b));
        // CB F5 0142
        gbc.setState(0xe7a5, 0x64b9, 0xebc0, 0x2750, 0xdb98, 0x7cde, 0x0, 0x0);
        gbc.writeMem(0xe7a5, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x64b9, gbc.sp());
        EXPECT(0xe7a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7a5));
        EXPECT(0xf5, gbc.readMem(0xe7a6));
        // CB F5 0143
        gbc.setState(0x7849, 0x8c97, 0xf1e0, 0xe76c, 0xa721, 0xb594, 0x0, 0x0);
        gbc.writeMem(0x7849, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8c97, gbc.sp());
        EXPECT(0x784b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0145
        gbc.setState(0xeea5, 0x50f0, 0xcfd0, 0x91af, 0x35f9, 0x6e66, 0x0, 0x1);
        gbc.writeMem(0xeea5, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x50f0, gbc.sp());
        EXPECT(0xeea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeea5));
        EXPECT(0xf5, gbc.readMem(0xeea6));
        // CB F5 0146
        gbc.setState(0x32b8, 0xe118, 0xe920, 0xf39c, 0x79af, 0xd00f, 0x1, 0x0);
        gbc.writeMem(0x32b8, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe118, gbc.sp());
        EXPECT(0x32ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0147
        gbc.setState(0xbd76, 0xd718, 0x3320, 0xe2f4, 0xa262, 0x9901, 0x1, 0x0);
        gbc.writeMem(0xbd76, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd718, gbc.sp());
        EXPECT(0xbd78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd76));
        EXPECT(0xf5, gbc.readMem(0xbd77));
        // CB F5 0148
        gbc.setState(0xbb7, 0xe92d, 0x3030, 0x33e4, 0x7fac, 0x6ef3, 0x0, 0x1);
        gbc.writeMem(0xbb7, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe92d, gbc.sp());
        EXPECT(0xbb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0149
        gbc.setState(0x6373, 0xd9f8, 0x9d80, 0x77b2, 0xd64c, 0xa3c7, 0x0, 0x1);
        gbc.writeMem(0x6373, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd9f8, gbc.sp());
        EXPECT(0x6375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 014A
        gbc.setState(0x203b, 0x99ab, 0x2f20, 0x7542, 0xbebb, 0x5488, 0x0, 0x0);
        gbc.writeMem(0x203b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x99ab, gbc.sp());
        EXPECT(0x203d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 014B
        gbc.setState(0xee66, 0x2474, 0x4400, 0xbb40, 0xc3ff, 0x4d99, 0x0, 0x1);
        gbc.writeMem(0xee66, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2474, gbc.sp());
        EXPECT(0xee68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee66));
        EXPECT(0xf5, gbc.readMem(0xee67));
        // CB F5 014D
        gbc.setState(0x458e, 0x622c, 0x45a0, 0xd62d, 0x9a8c, 0xf214, 0x1, 0x1);
        gbc.writeMem(0x458e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x622c, gbc.sp());
        EXPECT(0x4590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 014E
        gbc.setState(0x373a, 0xa164, 0x1ab0, 0xe78a, 0xdfea, 0x129c, 0x0, 0x0);
        gbc.writeMem(0x373a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa164, gbc.sp());
        EXPECT(0x373c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 014F
        gbc.setState(0x2d87, 0x90d9, 0x4d20, 0xe972, 0x4f01, 0x4d01, 0x1, 0x0);
        gbc.writeMem(0x2d87, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x90d9, gbc.sp());
        EXPECT(0x2d89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0150
        gbc.setState(0x6f66, 0x825a, 0xc50, 0x4024, 0x1ffd, 0xd9f6, 0x1, 0x1);
        gbc.writeMem(0x6f66, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x825a, gbc.sp());
        EXPECT(0x6f68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0151
        gbc.setState(0x9a31, 0xa22d, 0xa7b0, 0x5645, 0xae19, 0xe7b4, 0x0, 0x1);
        gbc.writeMem(0x9a31, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa22d, gbc.sp());
        EXPECT(0x9a33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a31));
        EXPECT(0xf5, gbc.readMem(0x9a32));
        // CB F5 0152
        gbc.setState(0x162f, 0x40a9, 0x8810, 0x2f9, 0x8e2c, 0x9355, 0x0, 0x1);
        gbc.writeMem(0x162f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x40a9, gbc.sp());
        EXPECT(0x1631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0153
        gbc.setState(0x2994, 0x2df1, 0x5d90, 0x7315, 0x9cff, 0x373e, 0x0, 0x1);
        gbc.writeMem(0x2994, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2df1, gbc.sp());
        EXPECT(0x2996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0154
        gbc.setState(0x8af3, 0x6f77, 0xf60, 0xfbc3, 0x69a9, 0x7799, 0x1, 0x0);
        gbc.writeMem(0x8af3, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6f77, gbc.sp());
        EXPECT(0x8af5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8af3));
        EXPECT(0xf5, gbc.readMem(0x8af4));
        // CB F5 0155
        gbc.setState(0x37ed, 0x91a1, 0x7d80, 0xedf2, 0x3730, 0x49af, 0x1, 0x0);
        gbc.writeMem(0x37ed, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x91a1, gbc.sp());
        EXPECT(0x37ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0156
        gbc.setState(0x32b1, 0xdcd1, 0x3fe0, 0x37a7, 0x201f, 0x2508, 0x1, 0x0);
        gbc.writeMem(0x32b1, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xdcd1, gbc.sp());
        EXPECT(0x32b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0157
        gbc.setState(0xddd9, 0x5650, 0x4460, 0xaf8c, 0xdda8, 0x2bc7, 0x0, 0x0);
        gbc.writeMem(0xddd9, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5650, gbc.sp());
        EXPECT(0xdddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddd9));
        EXPECT(0xf5, gbc.readMem(0xddda));
        // CB F5 0158
        gbc.setState(0xd77d, 0xac3e, 0xcc80, 0x4446, 0xaa92, 0xbf6c, 0x0, 0x0);
        gbc.writeMem(0xd77d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xac3e, gbc.sp());
        EXPECT(0xd77f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd77d));
        EXPECT(0xf5, gbc.readMem(0xd77e));
        // CB F5 0159
        gbc.setState(0x9d27, 0x352, 0x4e90, 0xdc3, 0x4652, 0x613d, 0x0, 0x1);
        gbc.writeMem(0x9d27, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x352, gbc.sp());
        EXPECT(0x9d29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d27));
        EXPECT(0xf5, gbc.readMem(0x9d28));
        // CB F5 015A
        gbc.setState(0x3351, 0x38c6, 0x8da0, 0x8bd, 0x3da6, 0x22c1, 0x0, 0x1);
        gbc.writeMem(0x3351, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x38c6, gbc.sp());
        EXPECT(0x3353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 015B
        gbc.setState(0xdd14, 0x54db, 0xd630, 0xe6de, 0x2087, 0xc810, 0x1, 0x1);
        gbc.writeMem(0xdd14, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x54db, gbc.sp());
        EXPECT(0xdd16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd14));
        EXPECT(0xf5, gbc.readMem(0xdd15));
        // CB F5 015C
        gbc.setState(0x7a11, 0xbdeb, 0xdfb0, 0x733b, 0xca05, 0xa4f7, 0x0, 0x0);
        gbc.writeMem(0x7a11, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbdeb, gbc.sp());
        EXPECT(0x7a13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 015D
        gbc.setState(0x2084, 0x5f43, 0xe460, 0x2cca, 0x5167, 0xe6f6, 0x0, 0x0);
        gbc.writeMem(0x2084, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5f43, gbc.sp());
        EXPECT(0x2086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 015E
        gbc.setState(0xe0aa, 0x30cb, 0x4c90, 0x5e2d, 0x8eb7, 0xa3ce, 0x1, 0x0);
        gbc.writeMem(0xe0aa, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x30cb, gbc.sp());
        EXPECT(0xe0ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0aa));
        EXPECT(0xf5, gbc.readMem(0xe0ab));
        // CB F5 0160
        gbc.setState(0x51ae, 0xde81, 0xeec0, 0x4547, 0x6ee4, 0xa99a, 0x1, 0x1);
        gbc.writeMem(0x51ae, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xde81, gbc.sp());
        EXPECT(0x51b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0161
        gbc.setState(0xd88f, 0x3242, 0x56e0, 0x2a85, 0xbb75, 0x6142, 0x0, 0x0);
        gbc.writeMem(0xd88f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3242, gbc.sp());
        EXPECT(0xd891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd88f));
        EXPECT(0xf5, gbc.readMem(0xd890));
        // CB F5 0162
        gbc.setState(0x6290, 0x74a9, 0xbfa0, 0x671b, 0x429c, 0xc008, 0x1, 0x1);
        gbc.writeMem(0x6290, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x74a9, gbc.sp());
        EXPECT(0x6292, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0163
        gbc.setState(0xdbec, 0x12f3, 0x2070, 0x434a, 0x6279, 0x5745, 0x0, 0x0);
        gbc.writeMem(0xdbec, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x12f3, gbc.sp());
        EXPECT(0xdbee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbec));
        EXPECT(0xf5, gbc.readMem(0xdbed));
        // CB F5 0165
        gbc.setState(0xb880, 0x18a7, 0xafd0, 0x84fe, 0xec02, 0xa626, 0x1, 0x0);
        gbc.writeMem(0xb880, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x18a7, gbc.sp());
        EXPECT(0xb882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb880));
        EXPECT(0xf5, gbc.readMem(0xb881));
        // CB F5 0166
        gbc.setState(0xaa8e, 0xd344, 0x3f0, 0xfbad, 0xf312, 0x4d6, 0x0, 0x1);
        gbc.writeMem(0xaa8e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd344, gbc.sp());
        EXPECT(0xaa90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa8e));
        EXPECT(0xf5, gbc.readMem(0xaa8f));
        // CB F5 0167
        gbc.setState(0xb8e1, 0x3c65, 0x7870, 0x4235, 0xe0d9, 0xc62, 0x0, 0x0);
        gbc.writeMem(0xb8e1, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3c65, gbc.sp());
        EXPECT(0xb8e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8e1));
        EXPECT(0xf5, gbc.readMem(0xb8e2));
        // CB F5 0168
        gbc.setState(0x5158, 0xcda9, 0xfe10, 0xcf6a, 0x93a3, 0xb3b7, 0x1, 0x1);
        gbc.writeMem(0x5158, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xcda9, gbc.sp());
        EXPECT(0x515a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0169
        gbc.setState(0xbea8, 0x4ff4, 0xae70, 0x1ba7, 0xc31b, 0x2d32, 0x1, 0x1);
        gbc.writeMem(0xbea8, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4ff4, gbc.sp());
        EXPECT(0xbeaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbea8));
        EXPECT(0xf5, gbc.readMem(0xbea9));
        // CB F5 016A
        gbc.setState(0x1a75, 0x767f, 0xab20, 0x7532, 0x7977, 0x16b8, 0x1, 0x1);
        gbc.writeMem(0x1a75, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x767f, gbc.sp());
        EXPECT(0x1a77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 016B
        gbc.setState(0xd67a, 0xbffc, 0xf590, 0x1cbb, 0x282b, 0x9021, 0x1, 0x0);
        gbc.writeMem(0xd67a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xbffc, gbc.sp());
        EXPECT(0xd67c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd67a));
        EXPECT(0xf5, gbc.readMem(0xd67b));
        // CB F5 016D
        gbc.setState(0x7e2a, 0x722f, 0x6030, 0x764a, 0xb193, 0x9fa9, 0x0, 0x0);
        gbc.writeMem(0x7e2a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x722f, gbc.sp());
        EXPECT(0x7e2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 016E
        gbc.setState(0xb71, 0x42ea, 0x4a40, 0x3ca2, 0x858a, 0x9aeb, 0x1, 0x1);
        gbc.writeMem(0xb71, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x42ea, gbc.sp());
        EXPECT(0xb73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 016F
        gbc.setState(0xcdde, 0xcf64, 0x5a00, 0xad6c, 0xf3ec, 0x2db2, 0x1, 0x0);
        gbc.writeMem(0xcdde, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xcf64, gbc.sp());
        EXPECT(0xcde0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdde));
        EXPECT(0xf5, gbc.readMem(0xcddf));
        // CB F5 0170
        gbc.setState(0x9d0d, 0x3537, 0x22c0, 0xa422, 0x3656, 0x49c3, 0x0, 0x1);
        gbc.writeMem(0x9d0d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3537, gbc.sp());
        EXPECT(0x9d0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d0d));
        EXPECT(0xf5, gbc.readMem(0x9d0e));
        // CB F5 0171
        gbc.setState(0xd7eb, 0x73a2, 0x9560, 0xdbc3, 0x9bf1, 0x3c1f, 0x1, 0x0);
        gbc.writeMem(0xd7eb, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x73a2, gbc.sp());
        EXPECT(0xd7ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7eb));
        EXPECT(0xf5, gbc.readMem(0xd7ec));
        // CB F5 0172
        gbc.setState(0xad4d, 0x2f81, 0x6470, 0xe92e, 0x773c, 0x1f44, 0x0, 0x0);
        gbc.writeMem(0xad4d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2f81, gbc.sp());
        EXPECT(0xad4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad4d));
        EXPECT(0xf5, gbc.readMem(0xad4e));
        // CB F5 0173
        gbc.setState(0xe5e5, 0xedf, 0xcc20, 0x81ed, 0x589a, 0xd3f9, 0x0, 0x1);
        gbc.writeMem(0xe5e5, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xedf, gbc.sp());
        EXPECT(0xe5e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5e5));
        EXPECT(0xf5, gbc.readMem(0xe5e6));
        // CB F5 0174
        gbc.setState(0x1bcd, 0x2b8f, 0x5bf0, 0xc6a1, 0xf0b0, 0xaa61, 0x0, 0x0);
        gbc.writeMem(0x1bcd, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2b8f, gbc.sp());
        EXPECT(0x1bcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0175
        gbc.setState(0xb778, 0x20d7, 0xfdf0, 0x5ab9, 0xdae7, 0x708d, 0x1, 0x0);
        gbc.writeMem(0xb778, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x20d7, gbc.sp());
        EXPECT(0xb77a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb778));
        EXPECT(0xf5, gbc.readMem(0xb779));
        // CB F5 0176
        gbc.setState(0x228, 0x8a66, 0x680, 0xb8a9, 0xa78f, 0x4852, 0x0, 0x0);
        gbc.writeMem(0x228, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8a66, gbc.sp());
        EXPECT(0x22a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0178
        gbc.setState(0x83c, 0x2cc3, 0x5f10, 0x89a0, 0xe159, 0x7f31, 0x0, 0x0);
        gbc.writeMem(0x83c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2cc3, gbc.sp());
        EXPECT(0x83e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0179
        gbc.setState(0xc6d0, 0x1181, 0xb300, 0x41bd, 0xad5a, 0x352f, 0x0, 0x1);
        gbc.writeMem(0xc6d0, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1181, gbc.sp());
        EXPECT(0xc6d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6d0));
        EXPECT(0xf5, gbc.readMem(0xc6d1));
        // CB F5 017A
        gbc.setState(0x3f15, 0xbc1f, 0x7630, 0x7474, 0x5da6, 0x1717, 0x0, 0x0);
        gbc.writeMem(0x3f15, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xbc1f, gbc.sp());
        EXPECT(0x3f17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 017B
        gbc.setState(0xe09d, 0x3014, 0x2980, 0xd420, 0xe6f6, 0xf657, 0x1, 0x0);
        gbc.writeMem(0xe09d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3014, gbc.sp());
        EXPECT(0xe09f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe09d));
        EXPECT(0xf5, gbc.readMem(0xe09e));
        // CB F5 017C
        gbc.setState(0xab21, 0xb615, 0x6da0, 0x21f2, 0x5c97, 0x712f, 0x1, 0x1);
        gbc.writeMem(0xab21, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb615, gbc.sp());
        EXPECT(0xab23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab21));
        EXPECT(0xf5, gbc.readMem(0xab22));
        // CB F5 017D
        gbc.setState(0xc665, 0xe2e5, 0x14c0, 0xa956, 0x73e0, 0xbacb, 0x0, 0x1);
        gbc.writeMem(0xc665, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe2e5, gbc.sp());
        EXPECT(0xc667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc665));
        EXPECT(0xf5, gbc.readMem(0xc666));
        // CB F5 017E
        gbc.setState(0xde10, 0x8a3a, 0x11a0, 0x256a, 0x1a1b, 0xdfc6, 0x1, 0x1);
        gbc.writeMem(0xde10, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8a3a, gbc.sp());
        EXPECT(0xde12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde10));
        EXPECT(0xf5, gbc.readMem(0xde11));
        // CB F5 017F
        gbc.setState(0xcfe, 0x5d8c, 0x47f0, 0xe418, 0xe44f, 0x689b, 0x1, 0x0);
        gbc.writeMem(0xcfe, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5d8c, gbc.sp());
        EXPECT(0xd00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0180
        gbc.setState(0x48fc, 0x5347, 0x6670, 0x305f, 0x5d2, 0x483, 0x1, 0x1);
        gbc.writeMem(0x48fc, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5347, gbc.sp());
        EXPECT(0x48fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0182
        gbc.setState(0x6476, 0xeda9, 0x92e0, 0xb36, 0xa50c, 0x3737, 0x0, 0x1);
        gbc.writeMem(0x6476, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xeda9, gbc.sp());
        EXPECT(0x6478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0183
        gbc.setState(0xdb86, 0x3fa3, 0x5f30, 0xff04, 0x4bce, 0x6684, 0x0, 0x1);
        gbc.writeMem(0xdb86, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3fa3, gbc.sp());
        EXPECT(0xdb88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb86));
        EXPECT(0xf5, gbc.readMem(0xdb87));
        // CB F5 0184
        gbc.setState(0xdc36, 0x8900, 0x8de0, 0x1cf6, 0xc7b6, 0x57b9, 0x1, 0x1);
        gbc.writeMem(0xdc36, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8900, gbc.sp());
        EXPECT(0xdc38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc36));
        EXPECT(0xf5, gbc.readMem(0xdc37));
        // CB F5 0185
        gbc.setState(0x368, 0xc422, 0x8290, 0x6f1c, 0x8e28, 0x10cf, 0x1, 0x0);
        gbc.writeMem(0x368, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc422, gbc.sp());
        EXPECT(0x36a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0187
        gbc.setState(0xb884, 0xaca, 0x19c0, 0xcb, 0x803b, 0x6260, 0x1, 0x0);
        gbc.writeMem(0xb884, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xaca, gbc.sp());
        EXPECT(0xb886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb884));
        EXPECT(0xf5, gbc.readMem(0xb885));
        // CB F5 0188
        gbc.setState(0xa5ea, 0xc581, 0x3360, 0x57c8, 0x5b18, 0x9116, 0x1, 0x0);
        gbc.writeMem(0xa5ea, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc581, gbc.sp());
        EXPECT(0xa5ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ea));
        EXPECT(0xf5, gbc.readMem(0xa5eb));
        // CB F5 0189
        gbc.setState(0xc573, 0xdf9e, 0x9800, 0x408a, 0x648b, 0x4aeb, 0x1, 0x0);
        gbc.writeMem(0xc573, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xdf9e, gbc.sp());
        EXPECT(0xc575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc573));
        EXPECT(0xf5, gbc.readMem(0xc574));
        // CB F5 018B
        gbc.setState(0xd95b, 0x1067, 0xd90, 0xf53d, 0x5691, 0x63ad, 0x1, 0x0);
        gbc.writeMem(0xd95b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1067, gbc.sp());
        EXPECT(0xd95d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd95b));
        EXPECT(0xf5, gbc.readMem(0xd95c));
        // CB F5 018C
        gbc.setState(0x267e, 0x9128, 0xa70, 0x476a, 0x7e9d, 0x8964, 0x1, 0x0);
        gbc.writeMem(0x267e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9128, gbc.sp());
        EXPECT(0x2680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 018D
        gbc.setState(0xebf7, 0x4dc9, 0x1330, 0x1643, 0x7557, 0x7b7, 0x1, 0x0);
        gbc.writeMem(0xebf7, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4dc9, gbc.sp());
        EXPECT(0xebf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebf7));
        EXPECT(0xf5, gbc.readMem(0xebf8));
        // CB F5 018E
        gbc.setState(0x9dee, 0x34fc, 0x8d60, 0x9380, 0x7c97, 0x131d, 0x0, 0x0);
        gbc.writeMem(0x9dee, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x34fc, gbc.sp());
        EXPECT(0x9df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dee));
        EXPECT(0xf5, gbc.readMem(0x9def));
        // CB F5 018F
        gbc.setState(0x2378, 0x9340, 0xec90, 0x6f8a, 0x5b5e, 0xebb8, 0x0, 0x0);
        gbc.writeMem(0x2378, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9340, gbc.sp());
        EXPECT(0x237a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0190
        gbc.setState(0xc48e, 0x3276, 0x8b40, 0x955d, 0xb8cf, 0x669, 0x0, 0x0);
        gbc.writeMem(0xc48e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3276, gbc.sp());
        EXPECT(0xc490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc48e));
        EXPECT(0xf5, gbc.readMem(0xc48f));
        // CB F5 0191
        gbc.setState(0x4197, 0x486f, 0x31e0, 0xb8ba, 0x708d, 0x4e00, 0x1, 0x1);
        gbc.writeMem(0x4197, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x486f, gbc.sp());
        EXPECT(0x4199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0193
        gbc.setState(0xd229, 0x449, 0x9f10, 0x86db, 0x74f5, 0xb682, 0x0, 0x0);
        gbc.writeMem(0xd229, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x449, gbc.sp());
        EXPECT(0xd22b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd229));
        EXPECT(0xf5, gbc.readMem(0xd22a));
        // CB F5 0194
        gbc.setState(0x97cf, 0xa177, 0x70, 0xf780, 0x5bf5, 0xa56d, 0x1, 0x1);
        gbc.writeMem(0x97cf, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa177, gbc.sp());
        EXPECT(0x97d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97cf));
        EXPECT(0xf5, gbc.readMem(0x97d0));
        // CB F5 0195
        gbc.setState(0xa9b0, 0x647c, 0x2b90, 0x3a4c, 0xe03b, 0x1e50, 0x0, 0x0);
        gbc.writeMem(0xa9b0, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x647c, gbc.sp());
        EXPECT(0xa9b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9b0));
        EXPECT(0xf5, gbc.readMem(0xa9b1));
        // CB F5 0196
        gbc.setState(0xca37, 0xf8f7, 0x61f0, 0xd410, 0x2d7b, 0xb831, 0x1, 0x0);
        gbc.writeMem(0xca37, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf8f7, gbc.sp());
        EXPECT(0xca39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca37));
        EXPECT(0xf5, gbc.readMem(0xca38));
        // CB F5 0198
        gbc.setState(0x1cfc, 0x60ba, 0x1d80, 0x3edc, 0xe647, 0xdb21, 0x0, 0x1);
        gbc.writeMem(0x1cfc, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x60ba, gbc.sp());
        EXPECT(0x1cfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0199
        gbc.setState(0x5ff5, 0x179c, 0xa160, 0x3782, 0x6b19, 0x9545, 0x1, 0x0);
        gbc.writeMem(0x5ff5, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x179c, gbc.sp());
        EXPECT(0x5ff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 019A
        gbc.setState(0xd1cd, 0x32a8, 0xec70, 0x2204, 0xc226, 0x3be4, 0x0, 0x0);
        gbc.writeMem(0xd1cd, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x32a8, gbc.sp());
        EXPECT(0xd1cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1cd));
        EXPECT(0xf5, gbc.readMem(0xd1ce));
        // CB F5 019B
        gbc.setState(0x44dd, 0xf6de, 0x9ac0, 0x7eda, 0x5a9c, 0xb844, 0x1, 0x0);
        gbc.writeMem(0x44dd, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf6de, gbc.sp());
        EXPECT(0x44df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 019C
        gbc.setState(0xe021, 0xcf72, 0x5e40, 0xdc65, 0x6def, 0xdb2a, 0x0, 0x0);
        gbc.writeMem(0xe021, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xcf72, gbc.sp());
        EXPECT(0xe023, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe021));
        EXPECT(0xf5, gbc.readMem(0xe022));
        // CB F5 019D
        gbc.setState(0x6ccd, 0x1223, 0xa450, 0xff64, 0xaf2c, 0xd24b, 0x1, 0x1);
        gbc.writeMem(0x6ccd, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1223, gbc.sp());
        EXPECT(0x6ccf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 019E
        gbc.setState(0x6bad, 0xfd1b, 0x82a0, 0x3753, 0x4e0c, 0x2e9c, 0x0, 0x0);
        gbc.writeMem(0x6bad, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xfd1b, gbc.sp());
        EXPECT(0x6baf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 019F
        gbc.setState(0xd8b9, 0xa6f7, 0x80c0, 0x4f26, 0xb0f4, 0xc35c, 0x1, 0x1);
        gbc.writeMem(0xd8b9, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa6f7, gbc.sp());
        EXPECT(0xd8bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8b9));
        EXPECT(0xf5, gbc.readMem(0xd8ba));
        // CB F5 01A0
        gbc.setState(0x65de, 0x5ea, 0x7c40, 0x9aa, 0x8563, 0xa095, 0x0, 0x1);
        gbc.writeMem(0x65de, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5ea, gbc.sp());
        EXPECT(0x65e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 01A1
        gbc.setState(0x35f, 0xa548, 0xeb90, 0xe967, 0xb297, 0xf9c2, 0x1, 0x0);
        gbc.writeMem(0x35f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa548, gbc.sp());
        EXPECT(0x361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 01A2
        gbc.setState(0x2191, 0x4f6f, 0x810, 0x23ef, 0x2cf5, 0xe158, 0x0, 0x1);
        gbc.writeMem(0x2191, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4f6f, gbc.sp());
        EXPECT(0x2193, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 01A3
        gbc.setState(0xa83f, 0xf295, 0x84d0, 0x8174, 0xda98, 0xff4d, 0x1, 0x0);
        gbc.writeMem(0xa83f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf295, gbc.sp());
        EXPECT(0xa841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa83f));
        EXPECT(0xf5, gbc.readMem(0xa840));
        // CB F5 01A4
        gbc.setState(0x975e, 0x6dc3, 0xfc80, 0x35f9, 0xd24a, 0xd4d4, 0x1, 0x1);
        gbc.writeMem(0x975e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6dc3, gbc.sp());
        EXPECT(0x9760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x975e));
        EXPECT(0xf5, gbc.readMem(0x975f));
        // CB F5 01A5
        gbc.setState(0xea93, 0x1ad9, 0x5900, 0xb945, 0xfdbc, 0x57e2, 0x1, 0x0);
        gbc.writeMem(0xea93, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1ad9, gbc.sp());
        EXPECT(0xea95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea93));
        EXPECT(0xf5, gbc.readMem(0xea94));
        // CB F5 01A6
        gbc.setState(0x7d80, 0xd3aa, 0x5e10, 0x6ce8, 0x5aa3, 0x8828, 0x0, 0x1);
        gbc.writeMem(0x7d80, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd3aa, gbc.sp());
        EXPECT(0x7d82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 01A7
        gbc.setState(0x721, 0xed15, 0x44e0, 0x91c2, 0x6b27, 0xe0c0, 0x0, 0x0);
        gbc.writeMem(0x721, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xed15, gbc.sp());
        EXPECT(0x723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 01A8
        gbc.setState(0xa99b, 0xf579, 0x3a30, 0x32a8, 0x8bcd, 0x787, 0x0, 0x1);
        gbc.writeMem(0xa99b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf579, gbc.sp());
        EXPECT(0xa99d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa99b));
        EXPECT(0xf5, gbc.readMem(0xa99c));
        // CB F5 01A9
        gbc.setState(0xd870, 0xbd69, 0xd880, 0x7e2f, 0x8dc5, 0xa1dc, 0x0, 0x1);
        gbc.writeMem(0xd870, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xbd69, gbc.sp());
        EXPECT(0xd872, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd870));
        EXPECT(0xf5, gbc.readMem(0xd871));
        // CB F5 01AA
        gbc.setState(0x274e, 0x9b19, 0xad00, 0x1514, 0xed23, 0xcd3c, 0x0, 0x1);
        gbc.writeMem(0x274e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9b19, gbc.sp());
        EXPECT(0x2750, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 01AB
        gbc.setState(0x8b4, 0x92df, 0xca0, 0xd292, 0x128b, 0x19, 0x1, 0x1);
        gbc.writeMem(0x8b4, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x92df, gbc.sp());
        EXPECT(0x8b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 01AC
        gbc.setState(0xe438, 0xf234, 0xc960, 0x2ab7, 0xf561, 0x31a8, 0x0, 0x1);
        gbc.writeMem(0xe438, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf234, gbc.sp());
        EXPECT(0xe43a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe438));
        EXPECT(0xf5, gbc.readMem(0xe439));
        // CB F5 01AE
        gbc.setState(0x19d5, 0xf06a, 0xdf80, 0x949b, 0x4b59, 0xfe74, 0x1, 0x1);
        gbc.writeMem(0x19d5, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf06a, gbc.sp());
        EXPECT(0x19d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 01AF
        gbc.setState(0x20bc, 0x799, 0x3950, 0x250d, 0x1c7f, 0xea43, 0x0, 0x0);
        gbc.writeMem(0x20bc, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x799, gbc.sp());
        EXPECT(0x20be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 01B0
        gbc.setState(0xbe4d, 0x6adb, 0x9ae0, 0x608a, 0x253b, 0xcfdb, 0x1, 0x1);
        gbc.writeMem(0xbe4d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6adb, gbc.sp());
        EXPECT(0xbe4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe4d));
        EXPECT(0xf5, gbc.readMem(0xbe4e));
        // CB F5 01B1
        gbc.setState(0xcaf2, 0x2cff, 0x5220, 0xccde, 0x82cc, 0xb4a2, 0x1, 0x0);
        gbc.writeMem(0xcaf2, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2cff, gbc.sp());
        EXPECT(0xcaf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaf2));
        EXPECT(0xf5, gbc.readMem(0xcaf3));
        // CB F5 01B2
        gbc.setState(0x7f73, 0x191c, 0x9710, 0x8653, 0xb258, 0xc389, 0x1, 0x1);
        gbc.writeMem(0x7f73, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x191c, gbc.sp());
        EXPECT(0x7f75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 01B3
        gbc.setState(0x71b5, 0xa85c, 0xf050, 0x406d, 0x3517, 0x5fed, 0x1, 0x0);
        gbc.writeMem(0x71b5, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa85c, gbc.sp());
        EXPECT(0x71b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 01B4
        gbc.setState(0xb8a0, 0x6c71, 0x9ab0, 0x52e, 0x8766, 0xf93e, 0x1, 0x1);
        gbc.writeMem(0xb8a0, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6c71, gbc.sp());
        EXPECT(0xb8a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8a0));
        EXPECT(0xf5, gbc.readMem(0xb8a1));
        // CB F5 01B5
        gbc.setState(0xbe0b, 0x6f08, 0x7540, 0x6426, 0x1f70, 0x33a4, 0x1, 0x0);
        gbc.writeMem(0xbe0b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6f08, gbc.sp());
        EXPECT(0xbe0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe0b));
        EXPECT(0xf5, gbc.readMem(0xbe0c));
        // CB F5 01B6
        gbc.setState(0x130e, 0x2212, 0x77f0, 0x7d44, 0x8647, 0x8b9, 0x0, 0x1);
        gbc.writeMem(0x130e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2212, gbc.sp());
        EXPECT(0x1310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 01B7
        gbc.setState(0xdd2c, 0xc955, 0xfb10, 0xd333, 0x9c8c, 0xe8c1, 0x1, 0x0);
        gbc.writeMem(0xdd2c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc955, gbc.sp());
        EXPECT(0xdd2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd2c));
        EXPECT(0xf5, gbc.readMem(0xdd2d));
        // CB F5 01B8
        gbc.setState(0x3060, 0xfd07, 0x4970, 0x257d, 0x4fbf, 0x7095, 0x0, 0x0);
        gbc.writeMem(0x3060, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfd07, gbc.sp());
        EXPECT(0x3062, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 01B9
        gbc.setState(0x67de, 0xadb0, 0x6d60, 0xea94, 0x5cab, 0x3551, 0x0, 0x0);
        gbc.writeMem(0x67de, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xadb0, gbc.sp());
        EXPECT(0x67e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 01BA
        gbc.setState(0xdeb9, 0xf96c, 0x4540, 0xb2db, 0x9f46, 0xde44, 0x1, 0x0);
        gbc.writeMem(0xdeb9, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf96c, gbc.sp());
        EXPECT(0xdebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeb9));
        EXPECT(0xf5, gbc.readMem(0xdeba));
        // CB F5 01BC
        gbc.setState(0xdb91, 0xabcb, 0x17d0, 0xf41, 0xd043, 0xc16d, 0x0, 0x0);
        gbc.writeMem(0xdb91, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xabcb, gbc.sp());
        EXPECT(0xdb93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb91));
        EXPECT(0xf5, gbc.readMem(0xdb92));
        // CB F5 01BD
        gbc.setState(0xb471, 0x5ae0, 0x8270, 0xcfea, 0xba3d, 0x4695, 0x0, 0x1);
        gbc.writeMem(0xb471, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5ae0, gbc.sp());
        EXPECT(0xb473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb471));
        EXPECT(0xf5, gbc.readMem(0xb472));
        // CB F5 01BE
        gbc.setState(0x5b8, 0x716e, 0x550, 0xa640, 0x4d34, 0x987b, 0x0, 0x0);
        gbc.writeMem(0x5b8, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x716e, gbc.sp());
        EXPECT(0x5ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 01BF
        gbc.setState(0xe1e2, 0xf08d, 0x1ab0, 0x93c4, 0xe130, 0x2f1c, 0x1, 0x0);
        gbc.writeMem(0xe1e2, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf08d, gbc.sp());
        EXPECT(0xe1e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1e2));
        EXPECT(0xf5, gbc.readMem(0xe1e3));
        // CB F5 01C0
        gbc.setState(0x6671, 0x75a4, 0x6d90, 0xd6e8, 0xe031, 0x7c35, 0x0, 0x1);
        gbc.writeMem(0x6671, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x75a4, gbc.sp());
        EXPECT(0x6673, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 01C1
        gbc.setState(0xfea, 0xa2a6, 0x2620, 0xcc6a, 0x4ffc, 0x56d5, 0x1, 0x1);
        gbc.writeMem(0xfea, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa2a6, gbc.sp());
        EXPECT(0xfec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 01C2
        gbc.setState(0xd7a, 0xa865, 0x35d0, 0x67d8, 0x8679, 0x7404, 0x0, 0x0);
        gbc.writeMem(0xd7a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa865, gbc.sp());
        EXPECT(0xd7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 01C3
        gbc.setState(0xcd75, 0xef1, 0x3130, 0x1e89, 0x16f0, 0xf5a6, 0x1, 0x0);
        gbc.writeMem(0xcd75, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xef1, gbc.sp());
        EXPECT(0xcd77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd75));
        EXPECT(0xf5, gbc.readMem(0xcd76));
        // CB F5 01C4
        gbc.setState(0x6531, 0xb8a3, 0x5fe0, 0x3e07, 0xbbd7, 0xad6d, 0x1, 0x1);
        gbc.writeMem(0x6531, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb8a3, gbc.sp());
        EXPECT(0x6533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 01C5
        gbc.setState(0x7eea, 0x59d8, 0x56d0, 0xa011, 0x301a, 0x50bc, 0x1, 0x1);
        gbc.writeMem(0x7eea, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x59d8, gbc.sp());
        EXPECT(0x7eec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 01C6
        gbc.setState(0xb905, 0xfefd, 0x75d0, 0xfdd2, 0x6036, 0x8b5c, 0x1, 0x1);
        gbc.writeMem(0xb905, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xfefd, gbc.sp());
        EXPECT(0xb907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb905));
        EXPECT(0xf5, gbc.readMem(0xb906));
        // CB F5 01C7
        gbc.setState(0x1848, 0xf13d, 0x95d0, 0xb54d, 0x988f, 0xddf9, 0x1, 0x1);
        gbc.writeMem(0x1848, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf13d, gbc.sp());
        EXPECT(0x184a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 01C8
        gbc.setState(0x340b, 0x9dcd, 0x4310, 0x2e04, 0x24c1, 0xb3de, 0x1, 0x0);
        gbc.writeMem(0x340b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9dcd, gbc.sp());
        EXPECT(0x340d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 01C9
        gbc.setState(0x46bd, 0xfbb9, 0xd9d0, 0xe776, 0x310a, 0xb3bd, 0x1, 0x1);
        gbc.writeMem(0x46bd, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xfbb9, gbc.sp());
        EXPECT(0x46bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 01CA
        gbc.setState(0xb4ce, 0xc2d7, 0xd940, 0x3e69, 0xba06, 0x902a, 0x1, 0x0);
        gbc.writeMem(0xb4ce, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc2d7, gbc.sp());
        EXPECT(0xb4d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ce));
        EXPECT(0xf5, gbc.readMem(0xb4cf));
        // CB F5 01CB
        gbc.setState(0x783d, 0xc6e2, 0x1450, 0x4acc, 0x311d, 0x3f80, 0x0, 0x0);
        gbc.writeMem(0x783d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc6e2, gbc.sp());
        EXPECT(0x783f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 01CC
        gbc.setState(0x9b5f, 0xa90, 0x3890, 0xaab5, 0x3862, 0xf7c3, 0x1, 0x0);
        gbc.writeMem(0x9b5f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa90, gbc.sp());
        EXPECT(0x9b61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b5f));
        EXPECT(0xf5, gbc.readMem(0x9b60));
        // CB F5 01CD
        gbc.setState(0x5337, 0xa660, 0x9b50, 0xbdb9, 0xa865, 0xdfcd, 0x1, 0x0);
        gbc.writeMem(0x5337, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa660, gbc.sp());
        EXPECT(0x5339, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 01CE
        gbc.setState(0xaf99, 0x1b33, 0x9bb0, 0x1575, 0xf75f, 0x5b20, 0x0, 0x1);
        gbc.writeMem(0xaf99, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1b33, gbc.sp());
        EXPECT(0xaf9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf99));
        EXPECT(0xf5, gbc.readMem(0xaf9a));
        // CB F5 01CF
        gbc.setState(0x8bd9, 0x3721, 0x84e0, 0x3464, 0x795a, 0xc64, 0x0, 0x0);
        gbc.writeMem(0x8bd9, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3721, gbc.sp());
        EXPECT(0x8bdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bd9));
        EXPECT(0xf5, gbc.readMem(0x8bda));
        // CB F5 01D0
        gbc.setState(0x286e, 0xaefb, 0xc2d0, 0xc343, 0x7eb1, 0xb7d9, 0x1, 0x0);
        gbc.writeMem(0x286e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xaefb, gbc.sp());
        EXPECT(0x2870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 01D1
        gbc.setState(0x19e1, 0x1bc3, 0x8950, 0x621, 0x4732, 0x125, 0x0, 0x0);
        gbc.writeMem(0x19e1, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1bc3, gbc.sp());
        EXPECT(0x19e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 01D2
        gbc.setState(0xb08e, 0xb74e, 0xee00, 0xb875, 0x87d7, 0xefb6, 0x0, 0x0);
        gbc.writeMem(0xb08e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb74e, gbc.sp());
        EXPECT(0xb090, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb08e));
        EXPECT(0xf5, gbc.readMem(0xb08f));
        // CB F5 01D3
        gbc.setState(0x8497, 0x6b49, 0x3c90, 0x3920, 0xda17, 0x1975, 0x1, 0x1);
        gbc.writeMem(0x8497, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6b49, gbc.sp());
        EXPECT(0x8499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8497));
        EXPECT(0xf5, gbc.readMem(0x8498));
        // CB F5 01D5
        gbc.setState(0x3ea1, 0x68a6, 0x57c0, 0x5424, 0xe1d6, 0x9db0, 0x1, 0x0);
        gbc.writeMem(0x3ea1, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x68a6, gbc.sp());
        EXPECT(0x3ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 01D6
        gbc.setState(0x1c91, 0x118c, 0xa9a0, 0xac3c, 0xf1f4, 0x97f1, 0x0, 0x1);
        gbc.writeMem(0x1c91, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x118c, gbc.sp());
        EXPECT(0x1c93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 01D7
        gbc.setState(0xc501, 0x2e1f, 0xf2d0, 0x5405, 0x8a19, 0xf79e, 0x0, 0x0);
        gbc.writeMem(0xc501, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2e1f, gbc.sp());
        EXPECT(0xc503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc501));
        EXPECT(0xf5, gbc.readMem(0xc502));
        // CB F5 01D8
        gbc.setState(0xddad, 0x2165, 0xad0, 0xdb9c, 0xabfc, 0xcca5, 0x0, 0x1);
        gbc.writeMem(0xddad, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2165, gbc.sp());
        EXPECT(0xddaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddad));
        EXPECT(0xf5, gbc.readMem(0xddae));
        // CB F5 01D9
        gbc.setState(0x9f4b, 0x5917, 0x28b0, 0x982f, 0x18a, 0x2cc3, 0x0, 0x0);
        gbc.writeMem(0x9f4b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5917, gbc.sp());
        EXPECT(0x9f4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f4b));
        EXPECT(0xf5, gbc.readMem(0x9f4c));
        // CB F5 01DA
        gbc.setState(0xdd76, 0x250d, 0xbad0, 0xcb65, 0xb840, 0xb88e, 0x0, 0x0);
        gbc.writeMem(0xdd76, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x250d, gbc.sp());
        EXPECT(0xdd78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd76));
        EXPECT(0xf5, gbc.readMem(0xdd77));
        // CB F5 01DB
        gbc.setState(0x65c, 0x6f1d, 0x2340, 0xa1ee, 0xc770, 0xb1e4, 0x0, 0x1);
        gbc.writeMem(0x65c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6f1d, gbc.sp());
        EXPECT(0x65e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 01DC
        gbc.setState(0x6124, 0xf2c5, 0x49d0, 0x1672, 0x6cf4, 0x95ef, 0x1, 0x0);
        gbc.writeMem(0x6124, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf2c5, gbc.sp());
        EXPECT(0x6126, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 01DD
        gbc.setState(0x99d6, 0x5b3f, 0xfb30, 0x6cdf, 0x79b2, 0xc70b, 0x0, 0x1);
        gbc.writeMem(0x99d6, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5b3f, gbc.sp());
        EXPECT(0x99d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99d6));
        EXPECT(0xf5, gbc.readMem(0x99d7));
        // CB F5 01DE
        gbc.setState(0x7ad1, 0x870b, 0x5bc0, 0x711, 0xd2c7, 0xc9e1, 0x0, 0x0);
        gbc.writeMem(0x7ad1, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x870b, gbc.sp());
        EXPECT(0x7ad3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 01DF
        gbc.setState(0xe5bf, 0x7974, 0xa990, 0x458e, 0xf6f9, 0x3d6f, 0x1, 0x0);
        gbc.writeMem(0xe5bf, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7974, gbc.sp());
        EXPECT(0xe5c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5bf));
        EXPECT(0xf5, gbc.readMem(0xe5c0));
        // CB F5 01E0
        gbc.setState(0xb0bd, 0x5d9, 0x4db0, 0x58ff, 0x30fb, 0x5380, 0x0, 0x0);
        gbc.writeMem(0xb0bd, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5d9, gbc.sp());
        EXPECT(0xb0bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0bd));
        EXPECT(0xf5, gbc.readMem(0xb0be));
        // CB F5 01E1
        gbc.setState(0x4aa9, 0x9ebd, 0x2710, 0x91be, 0x9c6c, 0x8cde, 0x0, 0x1);
        gbc.writeMem(0x4aa9, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9ebd, gbc.sp());
        EXPECT(0x4aab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 01E2
        gbc.setState(0x2881, 0x107c, 0xb8d0, 0xb059, 0xf13d, 0xa99f, 0x0, 0x0);
        gbc.writeMem(0x2881, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x107c, gbc.sp());
        EXPECT(0x2883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 01E3
        gbc.setState(0xe110, 0xdf6c, 0xd5e0, 0x661c, 0xdd30, 0xa748, 0x1, 0x0);
        gbc.writeMem(0xe110, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xdf6c, gbc.sp());
        EXPECT(0xe112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe110));
        EXPECT(0xf5, gbc.readMem(0xe111));
        // CB F5 01E4
        gbc.setState(0x12c4, 0x121f, 0xa6b0, 0x1ed7, 0xbfda, 0xd42f, 0x0, 0x1);
        gbc.writeMem(0x12c4, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x121f, gbc.sp());
        EXPECT(0x12c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 01E5
        gbc.setState(0x1fa4, 0xebce, 0x7b70, 0xa061, 0xae2a, 0xd89c, 0x0, 0x0);
        gbc.writeMem(0x1fa4, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xebce, gbc.sp());
        EXPECT(0x1fa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 01E6
        gbc.setState(0x80, 0xc6aa, 0x5d10, 0x9f6f, 0xe50c, 0x1b45, 0x0, 0x1);
        gbc.writeMem(0x80, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc6aa, gbc.sp());
        EXPECT(0x82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 01E8
        gbc.setState(0x1d85, 0xfc39, 0x9340, 0x67d3, 0xcdb8, 0x14d, 0x0, 0x1);
        gbc.writeMem(0x1d85, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xfc39, gbc.sp());
        EXPECT(0x1d87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 01E9
        gbc.setState(0x2802, 0xed4a, 0xf040, 0x2d1a, 0xa3e0, 0xa5ba, 0x1, 0x1);
        gbc.writeMem(0x2802, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xed4a, gbc.sp());
        EXPECT(0x2804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 01EA
        gbc.setState(0xedfe, 0x8fc7, 0xb450, 0x8939, 0xa35, 0x2730, 0x0, 0x1);
        gbc.writeMem(0xedfe, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8fc7, gbc.sp());
        EXPECT(0xee00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedfe));
        EXPECT(0xf5, gbc.readMem(0xedff));
        // CB F5 01EB
        gbc.setState(0x8cad, 0xf871, 0x2d20, 0x7c01, 0x8baf, 0xa883, 0x0, 0x0);
        gbc.writeMem(0x8cad, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf871, gbc.sp());
        EXPECT(0x8caf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cad));
        EXPECT(0xf5, gbc.readMem(0x8cae));
        // CB F5 01EC
        gbc.setState(0x385, 0x3ec8, 0x8960, 0xd44c, 0x56b6, 0xea9a, 0x0, 0x1);
        gbc.writeMem(0x385, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3ec8, gbc.sp());
        EXPECT(0x387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 01ED
        gbc.setState(0x7a56, 0xbab3, 0x5ae0, 0x2a69, 0x5427, 0xc019, 0x0, 0x1);
        gbc.writeMem(0x7a56, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xbab3, gbc.sp());
        EXPECT(0x7a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 01EE
        gbc.setState(0x6ea, 0x6ade, 0xa600, 0x3fb0, 0x2ddc, 0xfb52, 0x0, 0x0);
        gbc.writeMem(0x6ea, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6ade, gbc.sp());
        EXPECT(0x6ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 01EF
        gbc.setState(0x8224, 0x3b94, 0xae90, 0xf8c1, 0x49e0, 0xb9c8, 0x0, 0x0);
        gbc.writeMem(0x8224, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3b94, gbc.sp());
        EXPECT(0x8226, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8224));
        EXPECT(0xf5, gbc.readMem(0x8225));
        // CB F5 01F0
        gbc.setState(0x5fa3, 0xbb91, 0xe0c0, 0xd391, 0x5b08, 0x1936, 0x1, 0x1);
        gbc.writeMem(0x5fa3, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xbb91, gbc.sp());
        EXPECT(0x5fa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 01F1
        gbc.setState(0x1b60, 0xa880, 0x2a50, 0x94d1, 0xbfd2, 0x4db9, 0x1, 0x0);
        gbc.writeMem(0x1b60, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa880, gbc.sp());
        EXPECT(0x1b62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 01F2
        gbc.setState(0xad6b, 0xda66, 0xce40, 0xe315, 0xaff4, 0x217f, 0x0, 0x1);
        gbc.writeMem(0xad6b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xda66, gbc.sp());
        EXPECT(0xad6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad6b));
        EXPECT(0xf5, gbc.readMem(0xad6c));
        // CB F5 01F3
        gbc.setState(0x28d6, 0x3039, 0x52d0, 0x7cb9, 0x1b36, 0x8744, 0x1, 0x0);
        gbc.writeMem(0x28d6, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3039, gbc.sp());
        EXPECT(0x28d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 01F4
        gbc.setState(0xc200, 0xd9d9, 0x69d0, 0x4fa3, 0x979b, 0x3c44, 0x0, 0x0);
        gbc.writeMem(0xc200, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd9d9, gbc.sp());
        EXPECT(0xc202, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc200));
        EXPECT(0xf5, gbc.readMem(0xc201));
        // CB F5 01F5
        gbc.setState(0xaf73, 0x7e3f, 0x8a70, 0xebc8, 0x3814, 0x59b6, 0x1, 0x0);
        gbc.writeMem(0xaf73, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7e3f, gbc.sp());
        EXPECT(0xaf75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf73));
        EXPECT(0xf5, gbc.readMem(0xaf74));
        // CB F5 01F6
        gbc.setState(0xf52, 0x47c7, 0xb990, 0xda02, 0x6f28, 0xc7f5, 0x0, 0x0);
        gbc.writeMem(0xf52, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x47c7, gbc.sp());
        EXPECT(0xf54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 01F7
        gbc.setState(0xc7ed, 0xc28d, 0x9c60, 0x4177, 0xbff8, 0x1139, 0x1, 0x1);
        gbc.writeMem(0xc7ed, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc28d, gbc.sp());
        EXPECT(0xc7ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7ed));
        EXPECT(0xf5, gbc.readMem(0xc7ee));
        // CB F5 01F8
        gbc.setState(0xa2e8, 0xeecf, 0x7ca0, 0x8f55, 0x242a, 0x477, 0x0, 0x1);
        gbc.writeMem(0xa2e8, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xeecf, gbc.sp());
        EXPECT(0xa2ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2e8));
        EXPECT(0xf5, gbc.readMem(0xa2e9));
        // CB F5 01F9
        gbc.setState(0x8e74, 0xb96b, 0xc650, 0x387, 0xf87d, 0x7648, 0x1, 0x1);
        gbc.writeMem(0x8e74, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb96b, gbc.sp());
        EXPECT(0x8e76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e74));
        EXPECT(0xf5, gbc.readMem(0x8e75));
        // CB F5 01FA
        gbc.setState(0x5be4, 0x6b12, 0x270, 0x8676, 0x64d4, 0x658a, 0x0, 0x0);
        gbc.writeMem(0x5be4, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6b12, gbc.sp());
        EXPECT(0x5be6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 01FB
        gbc.setState(0xce62, 0xfab, 0x9ce0, 0x6e10, 0xe067, 0x90df, 0x0, 0x0);
        gbc.writeMem(0xce62, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xfab, gbc.sp());
        EXPECT(0xce64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce62));
        EXPECT(0xf5, gbc.readMem(0xce63));
        // CB F5 01FC
        gbc.setState(0x655a, 0x4a7, 0x8290, 0x45a6, 0x45ea, 0xad94, 0x1, 0x0);
        gbc.writeMem(0x655a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4a7, gbc.sp());
        EXPECT(0x655c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 01FD
        gbc.setState(0x5b6f, 0xb15f, 0x8ab0, 0xce15, 0x3841, 0x3328, 0x1, 0x1);
        gbc.writeMem(0x5b6f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb15f, gbc.sp());
        EXPECT(0x5b71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 01FE
        gbc.setState(0x2733, 0xe26d, 0xedc0, 0x71ee, 0xfc58, 0x2eff, 0x0, 0x1);
        gbc.writeMem(0x2733, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe26d, gbc.sp());
        EXPECT(0x2735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0200
        gbc.setState(0xe79c, 0x7482, 0x2160, 0x800a, 0x4eb, 0x71e0, 0x0, 0x0);
        gbc.writeMem(0xe79c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7482, gbc.sp());
        EXPECT(0xe79e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe79c));
        EXPECT(0xf5, gbc.readMem(0xe79d));
        // CB F5 0201
        gbc.setState(0xef53, 0x9fb1, 0xc300, 0xf441, 0x348f, 0x85c, 0x0, 0x0);
        gbc.writeMem(0xef53, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9fb1, gbc.sp());
        EXPECT(0xef55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef53));
        EXPECT(0xf5, gbc.readMem(0xef54));
        // CB F5 0202
        gbc.setState(0xaf9d, 0x2340, 0xe200, 0x7363, 0xc20c, 0xb453, 0x1, 0x0);
        gbc.writeMem(0xaf9d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2340, gbc.sp());
        EXPECT(0xaf9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf9d));
        EXPECT(0xf5, gbc.readMem(0xaf9e));
        // CB F5 0203
        gbc.setState(0xbbd5, 0x2b9e, 0xa100, 0xe1f1, 0xa7b0, 0xec32, 0x1, 0x0);
        gbc.writeMem(0xbbd5, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2b9e, gbc.sp());
        EXPECT(0xbbd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbd5));
        EXPECT(0xf5, gbc.readMem(0xbbd6));
        // CB F5 0204
        gbc.setState(0x852b, 0xeac3, 0x3430, 0x396e, 0x7276, 0x7084, 0x0, 0x1);
        gbc.writeMem(0x852b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xeac3, gbc.sp());
        EXPECT(0x852d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x852b));
        EXPECT(0xf5, gbc.readMem(0x852c));
        // CB F5 0205
        gbc.setState(0x7af0, 0x5154, 0xf2b0, 0xf800, 0x771d, 0x2c16, 0x1, 0x0);
        gbc.writeMem(0x7af0, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5154, gbc.sp());
        EXPECT(0x7af2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0206
        gbc.setState(0x3f88, 0xc996, 0x8770, 0x2116, 0xf81b, 0x75fd, 0x1, 0x1);
        gbc.writeMem(0x3f88, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc996, gbc.sp());
        EXPECT(0x3f8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0207
        gbc.setState(0x11fb, 0xcefb, 0x5b90, 0xb544, 0x857a, 0x1837, 0x0, 0x0);
        gbc.writeMem(0x11fb, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xcefb, gbc.sp());
        EXPECT(0x11fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0208
        gbc.setState(0x203, 0x1dfd, 0x9730, 0x7c13, 0x11d, 0x6fb4, 0x1, 0x0);
        gbc.writeMem(0x203, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1dfd, gbc.sp());
        EXPECT(0x205, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0209
        gbc.setState(0xe668, 0xa60d, 0x4500, 0xe66e, 0x64e, 0x136f, 0x1, 0x1);
        gbc.writeMem(0xe668, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa60d, gbc.sp());
        EXPECT(0xe66a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe668));
        EXPECT(0xf5, gbc.readMem(0xe669));
        // CB F5 020A
        gbc.setState(0xe444, 0x6511, 0xba20, 0x7f66, 0x7e99, 0xb004, 0x1, 0x1);
        gbc.writeMem(0xe444, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6511, gbc.sp());
        EXPECT(0xe446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe444));
        EXPECT(0xf5, gbc.readMem(0xe445));
        // CB F5 020B
        gbc.setState(0x99fd, 0x8c65, 0xf330, 0x11f3, 0xe0d4, 0xf8c5, 0x0, 0x0);
        gbc.writeMem(0x99fd, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8c65, gbc.sp());
        EXPECT(0x99ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99fd));
        EXPECT(0xf5, gbc.readMem(0x99fe));
        // CB F5 020C
        gbc.setState(0x83fd, 0x85cc, 0x1680, 0x7fa6, 0x60b5, 0x1d6, 0x1, 0x1);
        gbc.writeMem(0x83fd, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x85cc, gbc.sp());
        EXPECT(0x83ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83fd));
        EXPECT(0xf5, gbc.readMem(0x83fe));
        // CB F5 020D
        gbc.setState(0x199a, 0xebf4, 0x4cc0, 0x20a5, 0x372d, 0xc7f2, 0x1, 0x1);
        gbc.writeMem(0x199a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xebf4, gbc.sp());
        EXPECT(0x199c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 020E
        gbc.setState(0x6ef8, 0xb5d9, 0x6320, 0x4373, 0x868e, 0xf975, 0x1, 0x1);
        gbc.writeMem(0x6ef8, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb5d9, gbc.sp());
        EXPECT(0x6efa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 020F
        gbc.setState(0x2f3a, 0x66cb, 0x3b50, 0x4dbc, 0xe7b, 0x7062, 0x1, 0x0);
        gbc.writeMem(0x2f3a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x66cb, gbc.sp());
        EXPECT(0x2f3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0210
        gbc.setState(0xda81, 0xd0ee, 0x1360, 0x42bd, 0x131a, 0x118f, 0x0, 0x1);
        gbc.writeMem(0xda81, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd0ee, gbc.sp());
        EXPECT(0xda83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda81));
        EXPECT(0xf5, gbc.readMem(0xda82));
        // CB F5 0211
        gbc.setState(0xeb36, 0xfbb4, 0x61b0, 0x7350, 0xe4ec, 0x5788, 0x1, 0x1);
        gbc.writeMem(0xeb36, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xfbb4, gbc.sp());
        EXPECT(0xeb38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb36));
        EXPECT(0xf5, gbc.readMem(0xeb37));
        // CB F5 0212
        gbc.setState(0x67fd, 0xb822, 0x4bc0, 0x59d4, 0xc7e0, 0x94ff, 0x1, 0x1);
        gbc.writeMem(0x67fd, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb822, gbc.sp());
        EXPECT(0x67ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0213
        gbc.setState(0x6384, 0x9bf3, 0x12a0, 0x605f, 0x44d7, 0xbb09, 0x1, 0x0);
        gbc.writeMem(0x6384, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9bf3, gbc.sp());
        EXPECT(0x6386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0215
        gbc.setState(0xd32b, 0x3f03, 0xaca0, 0xcc9d, 0x435b, 0x1784, 0x0, 0x0);
        gbc.writeMem(0xd32b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3f03, gbc.sp());
        EXPECT(0xd32d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd32b));
        EXPECT(0xf5, gbc.readMem(0xd32c));
        // CB F5 0216
        gbc.setState(0x147e, 0x6a3f, 0x4760, 0xa64, 0x7c94, 0xe7dc, 0x0, 0x0);
        gbc.writeMem(0x147e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6a3f, gbc.sp());
        EXPECT(0x1480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0217
        gbc.setState(0xd2a7, 0xc71f, 0xa9a0, 0xa607, 0x3b35, 0x471b, 0x0, 0x1);
        gbc.writeMem(0xd2a7, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc71f, gbc.sp());
        EXPECT(0xd2a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2a7));
        EXPECT(0xf5, gbc.readMem(0xd2a8));
        // CB F5 0218
        gbc.setState(0xeda3, 0x917b, 0x1f60, 0x78f6, 0x3fd0, 0xa80f, 0x1, 0x1);
        gbc.writeMem(0xeda3, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x917b, gbc.sp());
        EXPECT(0xeda5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeda3));
        EXPECT(0xf5, gbc.readMem(0xeda4));
        // CB F5 0219
        gbc.setState(0x8ac2, 0x9606, 0x3820, 0xb451, 0xf98d, 0xbce4, 0x0, 0x1);
        gbc.writeMem(0x8ac2, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9606, gbc.sp());
        EXPECT(0x8ac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac2));
        EXPECT(0xf5, gbc.readMem(0x8ac3));
        // CB F5 021A
        gbc.setState(0xc33d, 0x318c, 0x8130, 0xbb0, 0x32b0, 0xd7e9, 0x0, 0x0);
        gbc.writeMem(0xc33d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x318c, gbc.sp());
        EXPECT(0xc33f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc33d));
        EXPECT(0xf5, gbc.readMem(0xc33e));
        // CB F5 021B
        gbc.setState(0xe47a, 0x3fe6, 0x1210, 0x6870, 0x5324, 0xeee4, 0x0, 0x1);
        gbc.writeMem(0xe47a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3fe6, gbc.sp());
        EXPECT(0xe47c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe47a));
        EXPECT(0xf5, gbc.readMem(0xe47b));
        // CB F5 021C
        gbc.setState(0x1753, 0x2db6, 0x5800, 0x6fca, 0x4c4b, 0xbb97, 0x1, 0x1);
        gbc.writeMem(0x1753, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2db6, gbc.sp());
        EXPECT(0x1755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 021D
        gbc.setState(0xeb6, 0xf282, 0xf30, 0xa8c3, 0x2ff4, 0x4568, 0x1, 0x1);
        gbc.writeMem(0xeb6, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf282, gbc.sp());
        EXPECT(0xeb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0220
        gbc.setState(0x37ae, 0x6a74, 0x9a80, 0xe990, 0xfcf6, 0x96a0, 0x0, 0x0);
        gbc.writeMem(0x37ae, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6a74, gbc.sp());
        EXPECT(0x37b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0221
        gbc.setState(0xb0ac, 0x9eb4, 0x3dd0, 0x5866, 0xcc63, 0x8dfc, 0x1, 0x1);
        gbc.writeMem(0xb0ac, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9eb4, gbc.sp());
        EXPECT(0xb0ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0ac));
        EXPECT(0xf5, gbc.readMem(0xb0ad));
        // CB F5 0223
        gbc.setState(0xd8ef, 0x9b5d, 0xe150, 0xf09b, 0x8b2f, 0xe783, 0x1, 0x0);
        gbc.writeMem(0xd8ef, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9b5d, gbc.sp());
        EXPECT(0xd8f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8ef));
        EXPECT(0xf5, gbc.readMem(0xd8f0));
        // CB F5 0224
        gbc.setState(0x8a2c, 0x66a5, 0x6320, 0xe9cc, 0x1897, 0x2db9, 0x1, 0x0);
        gbc.writeMem(0x8a2c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x66a5, gbc.sp());
        EXPECT(0x8a2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a2c));
        EXPECT(0xf5, gbc.readMem(0x8a2d));
        // CB F5 0225
        gbc.setState(0xc0de, 0x417d, 0x5c10, 0xebeb, 0xa792, 0x381a, 0x0, 0x1);
        gbc.writeMem(0xc0de, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x417d, gbc.sp());
        EXPECT(0xc0e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0de));
        EXPECT(0xf5, gbc.readMem(0xc0df));
        // CB F5 0226
        gbc.setState(0x138c, 0xf836, 0xdd0, 0xc1af, 0xc73, 0xec41, 0x1, 0x0);
        gbc.writeMem(0x138c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf836, gbc.sp());
        EXPECT(0x138e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0227
        gbc.setState(0x4b88, 0x1b9c, 0x85b0, 0xf643, 0x2c50, 0x8eac, 0x1, 0x1);
        gbc.writeMem(0x4b88, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1b9c, gbc.sp());
        EXPECT(0x4b8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0228
        gbc.setState(0xee91, 0xbecf, 0x2d90, 0x37e1, 0x691f, 0xccb, 0x1, 0x1);
        gbc.writeMem(0xee91, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xbecf, gbc.sp());
        EXPECT(0xee93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee91));
        EXPECT(0xf5, gbc.readMem(0xee92));
        // CB F5 0229
        gbc.setState(0x5b49, 0x84c9, 0x70f0, 0x86b7, 0xb65f, 0xb86f, 0x0, 0x1);
        gbc.writeMem(0x5b49, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x84c9, gbc.sp());
        EXPECT(0x5b4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 022A
        gbc.setState(0x4674, 0xbd84, 0x9180, 0x5771, 0x79bb, 0xfb2d, 0x0, 0x0);
        gbc.writeMem(0x4674, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xbd84, gbc.sp());
        EXPECT(0x4676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 022B
        gbc.setState(0x25f0, 0xef8f, 0x2ee0, 0xd7b6, 0xf249, 0xd40b, 0x1, 0x1);
        gbc.writeMem(0x25f0, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xef8f, gbc.sp());
        EXPECT(0x25f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 022C
        gbc.setState(0x7877, 0xb2b, 0x4840, 0x790, 0x4386, 0x8763, 0x1, 0x0);
        gbc.writeMem(0x7877, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb2b, gbc.sp());
        EXPECT(0x7879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 022D
        gbc.setState(0x7c9, 0x3c51, 0x5b90, 0xa9e4, 0x2ab3, 0xea2c, 0x0, 0x0);
        gbc.writeMem(0x7c9, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3c51, gbc.sp());
        EXPECT(0x7cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 022E
        gbc.setState(0xd379, 0x5737, 0xd120, 0xf586, 0x5858, 0x1c90, 0x0, 0x1);
        gbc.writeMem(0xd379, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5737, gbc.sp());
        EXPECT(0xd37b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd379));
        EXPECT(0xf5, gbc.readMem(0xd37a));
        // CB F5 022F
        gbc.setState(0x558e, 0x5a7b, 0xa950, 0x584d, 0x4ef1, 0xf948, 0x1, 0x1);
        gbc.writeMem(0x558e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5a7b, gbc.sp());
        EXPECT(0x5590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0230
        gbc.setState(0x607d, 0x5d81, 0xf150, 0x4963, 0xcd9a, 0xf759, 0x1, 0x0);
        gbc.writeMem(0x607d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5d81, gbc.sp());
        EXPECT(0x607f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0231
        gbc.setState(0xcae8, 0x10c5, 0xed30, 0x3df4, 0xfb3f, 0x37f0, 0x1, 0x1);
        gbc.writeMem(0xcae8, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x10c5, gbc.sp());
        EXPECT(0xcaea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcae8));
        EXPECT(0xf5, gbc.readMem(0xcae9));
        // CB F5 0232
        gbc.setState(0xd4a4, 0x777f, 0xf2c0, 0x3c23, 0x6b5, 0x7289, 0x0, 0x1);
        gbc.writeMem(0xd4a4, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x777f, gbc.sp());
        EXPECT(0xd4a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4a4));
        EXPECT(0xf5, gbc.readMem(0xd4a5));
        // CB F5 0233
        gbc.setState(0x784c, 0xf5ae, 0xe270, 0x4469, 0xd0fe, 0x4dd3, 0x1, 0x0);
        gbc.writeMem(0x784c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf5ae, gbc.sp());
        EXPECT(0x784e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0234
        gbc.setState(0x19fe, 0x8e5e, 0x5340, 0x8ed2, 0x9984, 0xc06, 0x0, 0x0);
        gbc.writeMem(0x19fe, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8e5e, gbc.sp());
        EXPECT(0x1a00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0235
        gbc.setState(0x707f, 0xb6b9, 0xa940, 0xda9f, 0xa3de, 0x7a5f, 0x1, 0x1);
        gbc.writeMem(0x707f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb6b9, gbc.sp());
        EXPECT(0x7081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0236
        gbc.setState(0x7806, 0x6e3d, 0x50d0, 0xb434, 0x3500, 0x7638, 0x0, 0x0);
        gbc.writeMem(0x7806, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6e3d, gbc.sp());
        EXPECT(0x7808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0237
        gbc.setState(0xad4, 0x73e7, 0x88f0, 0xdac3, 0xab10, 0x3b8b, 0x0, 0x1);
        gbc.writeMem(0xad4, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x73e7, gbc.sp());
        EXPECT(0xad6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0238
        gbc.setState(0xedf4, 0xd6a2, 0x66a0, 0x54b9, 0x5b1b, 0xd1fb, 0x1, 0x1);
        gbc.writeMem(0xedf4, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd6a2, gbc.sp());
        EXPECT(0xedf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedf4));
        EXPECT(0xf5, gbc.readMem(0xedf5));
        // CB F5 0239
        gbc.setState(0xb7c9, 0x6827, 0x9890, 0x8f50, 0xdd05, 0x58de, 0x0, 0x0);
        gbc.writeMem(0xb7c9, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6827, gbc.sp());
        EXPECT(0xb7cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7c9));
        EXPECT(0xf5, gbc.readMem(0xb7ca));
        // CB F5 023A
        gbc.setState(0xa953, 0xd649, 0x5080, 0x876d, 0x2f91, 0x495e, 0x0, 0x1);
        gbc.writeMem(0xa953, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd649, gbc.sp());
        EXPECT(0xa955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa953));
        EXPECT(0xf5, gbc.readMem(0xa954));
        // CB F5 023B
        gbc.setState(0xa7f1, 0x585, 0x9010, 0xbbeb, 0x6bcf, 0x64ba, 0x1, 0x0);
        gbc.writeMem(0xa7f1, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x585, gbc.sp());
        EXPECT(0xa7f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f1));
        EXPECT(0xf5, gbc.readMem(0xa7f2));
        // CB F5 023C
        gbc.setState(0xd822, 0x1691, 0x6dc0, 0x1570, 0x3c50, 0xb70c, 0x1, 0x1);
        gbc.writeMem(0xd822, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1691, gbc.sp());
        EXPECT(0xd824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd822));
        EXPECT(0xf5, gbc.readMem(0xd823));
        // CB F5 023D
        gbc.setState(0x28b0, 0xeabf, 0x1c0, 0xeb32, 0xa814, 0x5005, 0x1, 0x0);
        gbc.writeMem(0x28b0, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xeabf, gbc.sp());
        EXPECT(0x28b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 023F
        gbc.setState(0x1bcb, 0x164f, 0x6840, 0xf5cf, 0xe3e6, 0x56d, 0x0, 0x0);
        gbc.writeMem(0x1bcb, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x164f, gbc.sp());
        EXPECT(0x1bcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0240
        gbc.setState(0xde0, 0x78c4, 0x4220, 0xf9bc, 0x37f, 0x33da, 0x0, 0x1);
        gbc.writeMem(0xde0, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x78c4, gbc.sp());
        EXPECT(0xde2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0241
        gbc.setState(0xaaa7, 0xb90d, 0x8b20, 0x27e1, 0xbeaa, 0x8b42, 0x1, 0x1);
        gbc.writeMem(0xaaa7, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb90d, gbc.sp());
        EXPECT(0xaaa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaa7));
        EXPECT(0xf5, gbc.readMem(0xaaa8));
        // CB F5 0242
        gbc.setState(0x8bd6, 0x5df1, 0x12a0, 0x43bc, 0xc3bf, 0xc9f3, 0x1, 0x0);
        gbc.writeMem(0x8bd6, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5df1, gbc.sp());
        EXPECT(0x8bd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bd6));
        EXPECT(0xf5, gbc.readMem(0x8bd7));
        // CB F5 0243
        gbc.setState(0x2e06, 0x48e8, 0x4060, 0x1983, 0x380c, 0xdeb9, 0x1, 0x0);
        gbc.writeMem(0x2e06, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x48e8, gbc.sp());
        EXPECT(0x2e08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0244
        gbc.setState(0x5bd5, 0xda84, 0x4730, 0xbb3a, 0x3da2, 0xf5d5, 0x0, 0x0);
        gbc.writeMem(0x5bd5, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xda84, gbc.sp());
        EXPECT(0x5bd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0245
        gbc.setState(0xd593, 0x3c56, 0xf1e0, 0x18d5, 0x32da, 0xeac8, 0x0, 0x0);
        gbc.writeMem(0xd593, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3c56, gbc.sp());
        EXPECT(0xd595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd593));
        EXPECT(0xf5, gbc.readMem(0xd594));
        // CB F5 0246
        gbc.setState(0xd00c, 0xa0c8, 0x7860, 0xa0b8, 0xdea8, 0xea74, 0x0, 0x1);
        gbc.writeMem(0xd00c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa0c8, gbc.sp());
        EXPECT(0xd00e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd00c));
        EXPECT(0xf5, gbc.readMem(0xd00d));
        // CB F5 0248
        gbc.setState(0x6744, 0x450d, 0x6c30, 0x657e, 0x6c5f, 0x945b, 0x0, 0x1);
        gbc.writeMem(0x6744, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x450d, gbc.sp());
        EXPECT(0x6746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0249
        gbc.setState(0x6d9b, 0x6526, 0x2a70, 0x8964, 0xed8f, 0xfc06, 0x1, 0x1);
        gbc.writeMem(0x6d9b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6526, gbc.sp());
        EXPECT(0x6d9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 024A
        gbc.setState(0x939f, 0x66fe, 0xe810, 0x908f, 0xbfd6, 0x54f8, 0x1, 0x0);
        gbc.writeMem(0x939f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x66fe, gbc.sp());
        EXPECT(0x93a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x939f));
        EXPECT(0xf5, gbc.readMem(0x93a0));
        // CB F5 024B
        gbc.setState(0xebdc, 0xfb34, 0xe7b0, 0x2520, 0x314, 0x6c4e, 0x1, 0x0);
        gbc.writeMem(0xebdc, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xfb34, gbc.sp());
        EXPECT(0xebde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebdc));
        EXPECT(0xf5, gbc.readMem(0xebdd));
        // CB F5 024C
        gbc.setState(0x32f9, 0x9155, 0x8d50, 0x98ea, 0x41ea, 0x5504, 0x0, 0x0);
        gbc.writeMem(0x32f9, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9155, gbc.sp());
        EXPECT(0x32fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 024D
        gbc.setState(0x4344, 0xed95, 0x4ff0, 0xb663, 0x528, 0x15e0, 0x0, 0x1);
        gbc.writeMem(0x4344, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xed95, gbc.sp());
        EXPECT(0x4346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 024E
        gbc.setState(0x715d, 0x8998, 0xc8a0, 0x6c34, 0x8a39, 0xab7f, 0x0, 0x0);
        gbc.writeMem(0x715d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8998, gbc.sp());
        EXPECT(0x715f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 024F
        gbc.setState(0x3b03, 0x4659, 0x1db0, 0xf644, 0xb0fa, 0x7fc5, 0x1, 0x0);
        gbc.writeMem(0x3b03, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4659, gbc.sp());
        EXPECT(0x3b05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0250
        gbc.setState(0x9193, 0x3ed2, 0x36f0, 0xa260, 0x15b1, 0x2e9c, 0x1, 0x1);
        gbc.writeMem(0x9193, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3ed2, gbc.sp());
        EXPECT(0x9195, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9193));
        EXPECT(0xf5, gbc.readMem(0x9194));
        // CB F5 0251
        gbc.setState(0xc916, 0x83fc, 0xcbe0, 0x116e, 0x3058, 0x887f, 0x1, 0x1);
        gbc.writeMem(0xc916, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x83fc, gbc.sp());
        EXPECT(0xc918, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc916));
        EXPECT(0xf5, gbc.readMem(0xc917));
        // CB F5 0252
        gbc.setState(0x220, 0x8bb2, 0x6ed0, 0xc42, 0x61e3, 0xa19c, 0x0, 0x0);
        gbc.writeMem(0x220, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8bb2, gbc.sp());
        EXPECT(0x222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0253
        gbc.setState(0xb8d2, 0x650b, 0xa490, 0xe9cd, 0x2534, 0x2fb2, 0x1, 0x0);
        gbc.writeMem(0xb8d2, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x650b, gbc.sp());
        EXPECT(0xb8d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8d2));
        EXPECT(0xf5, gbc.readMem(0xb8d3));
        // CB F5 0254
        gbc.setState(0xd5ca, 0xbcc, 0xfab0, 0x25b1, 0x5b58, 0xedc9, 0x0, 0x0);
        gbc.writeMem(0xd5ca, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xbcc, gbc.sp());
        EXPECT(0xd5cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ca));
        EXPECT(0xf5, gbc.readMem(0xd5cb));
        // CB F5 0255
        gbc.setState(0xd7da, 0x9012, 0x60a0, 0x3c53, 0x7ca3, 0xb5a2, 0x0, 0x1);
        gbc.writeMem(0xd7da, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9012, gbc.sp());
        EXPECT(0xd7dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7da));
        EXPECT(0xf5, gbc.readMem(0xd7db));
        // CB F5 0256
        gbc.setState(0xc6bd, 0x97f6, 0xa4f0, 0xed52, 0x1eb4, 0x2610, 0x1, 0x0);
        gbc.writeMem(0xc6bd, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x97f6, gbc.sp());
        EXPECT(0xc6bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6bd));
        EXPECT(0xf5, gbc.readMem(0xc6be));
        // CB F5 0257
        gbc.setState(0x360b, 0x2bd1, 0x7350, 0x5df, 0x6e76, 0x3b5c, 0x0, 0x1);
        gbc.writeMem(0x360b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2bd1, gbc.sp());
        EXPECT(0x360d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0258
        gbc.setState(0x434d, 0xdbe5, 0x2840, 0xf9a7, 0xc67c, 0xa447, 0x1, 0x1);
        gbc.writeMem(0x434d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xdbe5, gbc.sp());
        EXPECT(0x434f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0259
        gbc.setState(0x328b, 0x32ca, 0x5af0, 0x9dbb, 0x2193, 0xcfca, 0x0, 0x0);
        gbc.writeMem(0x328b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x32ca, gbc.sp());
        EXPECT(0x328d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 025A
        gbc.setState(0x11a4, 0x13ee, 0x6ab0, 0x33b0, 0x397c, 0xd905, 0x0, 0x0);
        gbc.writeMem(0x11a4, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x13ee, gbc.sp());
        EXPECT(0x11a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 025B
        gbc.setState(0xd5a8, 0x68da, 0x79d0, 0x359e, 0x67af, 0x32b6, 0x0, 0x1);
        gbc.writeMem(0xd5a8, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x68da, gbc.sp());
        EXPECT(0xd5aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5a8));
        EXPECT(0xf5, gbc.readMem(0xd5a9));
        // CB F5 025C
        gbc.setState(0x4c19, 0xe0ad, 0x4060, 0x9529, 0x5edd, 0x67d0, 0x1, 0x0);
        gbc.writeMem(0x4c19, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe0ad, gbc.sp());
        EXPECT(0x4c1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 025D
        gbc.setState(0xd5c1, 0xc8eb, 0xf320, 0x89f1, 0x13c4, 0x9c92, 0x0, 0x1);
        gbc.writeMem(0xd5c1, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc8eb, gbc.sp());
        EXPECT(0xd5c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5c1));
        EXPECT(0xf5, gbc.readMem(0xd5c2));
        // CB F5 025E
        gbc.setState(0x8f2, 0xf9b, 0xda10, 0xe390, 0x948a, 0xc44f, 0x0, 0x0);
        gbc.writeMem(0x8f2, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf9b, gbc.sp());
        EXPECT(0x8f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 025F
        gbc.setState(0x9fc1, 0xfed9, 0x24d0, 0x89a8, 0x8d9d, 0xacc9, 0x1, 0x0);
        gbc.writeMem(0x9fc1, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xfed9, gbc.sp());
        EXPECT(0x9fc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fc1));
        EXPECT(0xf5, gbc.readMem(0x9fc2));
        // CB F5 0260
        gbc.setState(0x204c, 0xa0b8, 0xdfb0, 0xdeee, 0x4c05, 0x479d, 0x0, 0x0);
        gbc.writeMem(0x204c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa0b8, gbc.sp());
        EXPECT(0x204e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0261
        gbc.setState(0xd66b, 0x7507, 0x56b0, 0x1d9b, 0x5122, 0x26aa, 0x1, 0x1);
        gbc.writeMem(0xd66b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7507, gbc.sp());
        EXPECT(0xd66d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd66b));
        EXPECT(0xf5, gbc.readMem(0xd66c));
        // CB F5 0262
        gbc.setState(0xb167, 0xd261, 0x94d0, 0xc44d, 0x4819, 0x8957, 0x0, 0x0);
        gbc.writeMem(0xb167, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd261, gbc.sp());
        EXPECT(0xb169, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb167));
        EXPECT(0xf5, gbc.readMem(0xb168));
        // CB F5 0263
        gbc.setState(0x4f5a, 0xc966, 0x9410, 0xdd37, 0x34d5, 0x7fc1, 0x0, 0x0);
        gbc.writeMem(0x4f5a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc966, gbc.sp());
        EXPECT(0x4f5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0264
        gbc.setState(0x827f, 0x90c0, 0x97b0, 0x8fc1, 0x5cd7, 0xed2e, 0x0, 0x1);
        gbc.writeMem(0x827f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x90c0, gbc.sp());
        EXPECT(0x8281, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x827f));
        EXPECT(0xf5, gbc.readMem(0x8280));
        // CB F5 0265
        gbc.setState(0xb3ba, 0xa118, 0x1290, 0x71e, 0x76bb, 0x1098, 0x0, 0x1);
        gbc.writeMem(0xb3ba, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa118, gbc.sp());
        EXPECT(0xb3bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3ba));
        EXPECT(0xf5, gbc.readMem(0xb3bb));
        // CB F5 0266
        gbc.setState(0x1032, 0xb351, 0x6dc0, 0x6cf6, 0xe49a, 0xbc6d, 0x0, 0x0);
        gbc.writeMem(0x1032, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb351, gbc.sp());
        EXPECT(0x1034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0267
        gbc.setState(0x746f, 0x8704, 0xd600, 0x2941, 0xae0f, 0x18d9, 0x1, 0x0);
        gbc.writeMem(0x746f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8704, gbc.sp());
        EXPECT(0x7471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0268
        gbc.setState(0x2ba5, 0xc218, 0x8020, 0x8ebe, 0x7703, 0xcdfc, 0x0, 0x1);
        gbc.writeMem(0x2ba5, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc218, gbc.sp());
        EXPECT(0x2ba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0269
        gbc.setState(0x4f49, 0xde38, 0x8470, 0x5f66, 0x4f4e, 0x8511, 0x0, 0x1);
        gbc.writeMem(0x4f49, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xde38, gbc.sp());
        EXPECT(0x4f4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 026A
        gbc.setState(0xeba, 0x78d2, 0x9ca0, 0xe724, 0xb5a9, 0x525c, 0x1, 0x0);
        gbc.writeMem(0xeba, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x78d2, gbc.sp());
        EXPECT(0xebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 026B
        gbc.setState(0x2632, 0xd60, 0x3fe0, 0x4066, 0x7720, 0xce82, 0x1, 0x1);
        gbc.writeMem(0x2632, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd60, gbc.sp());
        EXPECT(0x2634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 026C
        gbc.setState(0x3055, 0x47de, 0x2a30, 0x5403, 0x9632, 0x7a91, 0x0, 0x1);
        gbc.writeMem(0x3055, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x47de, gbc.sp());
        EXPECT(0x3057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 026D
        gbc.setState(0x7a16, 0x26c6, 0x3200, 0x4586, 0x8b59, 0xf33f, 0x0, 0x0);
        gbc.writeMem(0x7a16, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x26c6, gbc.sp());
        EXPECT(0x7a18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 026E
        gbc.setState(0x13f8, 0xfe09, 0xa590, 0xb1ef, 0x39df, 0xfc7a, 0x1, 0x0);
        gbc.writeMem(0x13f8, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xfe09, gbc.sp());
        EXPECT(0x13fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 026F
        gbc.setState(0x7591, 0x369b, 0xfd00, 0x4667, 0x6697, 0xfca3, 0x1, 0x0);
        gbc.writeMem(0x7591, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x369b, gbc.sp());
        EXPECT(0x7593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0270
        gbc.setState(0x5c79, 0x4507, 0x440, 0x2d92, 0x4aa, 0x499e, 0x0, 0x0);
        gbc.writeMem(0x5c79, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4507, gbc.sp());
        EXPECT(0x5c7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0271
        gbc.setState(0xa1, 0x9772, 0xaa50, 0x6ad5, 0x84d7, 0xa703, 0x0, 0x1);
        gbc.writeMem(0xa1, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9772, gbc.sp());
        EXPECT(0xa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0272
        gbc.setState(0xd05a, 0x74e4, 0xfa50, 0x5a52, 0x1bb4, 0x9b1e, 0x1, 0x1);
        gbc.writeMem(0xd05a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x74e4, gbc.sp());
        EXPECT(0xd05c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd05a));
        EXPECT(0xf5, gbc.readMem(0xd05b));
        // CB F5 0273
        gbc.setState(0xc58c, 0xf3c6, 0xe110, 0x7086, 0xfe63, 0x9e22, 0x1, 0x0);
        gbc.writeMem(0xc58c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf3c6, gbc.sp());
        EXPECT(0xc58e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc58c));
        EXPECT(0xf5, gbc.readMem(0xc58d));
        // CB F5 0274
        gbc.setState(0xeb4d, 0x58de, 0xea20, 0x83c4, 0xc1a3, 0xfd75, 0x0, 0x0);
        gbc.writeMem(0xeb4d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x58de, gbc.sp());
        EXPECT(0xeb4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb4d));
        EXPECT(0xf5, gbc.readMem(0xeb4e));
        // CB F5 0275
        gbc.setState(0xa357, 0x9d06, 0x18a0, 0xca84, 0xf899, 0x20e5, 0x0, 0x1);
        gbc.writeMem(0xa357, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9d06, gbc.sp());
        EXPECT(0xa359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa357));
        EXPECT(0xf5, gbc.readMem(0xa358));
        // CB F5 0276
        gbc.setState(0xd813, 0xece2, 0xbb90, 0xeb55, 0x5dbb, 0xa7b1, 0x1, 0x1);
        gbc.writeMem(0xd813, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xece2, gbc.sp());
        EXPECT(0xd815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd813));
        EXPECT(0xf5, gbc.readMem(0xd814));
        // CB F5 0277
        gbc.setState(0xcd9d, 0x7eb5, 0xbad0, 0xf3c7, 0x54ce, 0xcb2a, 0x1, 0x1);
        gbc.writeMem(0xcd9d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7eb5, gbc.sp());
        EXPECT(0xcd9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd9d));
        EXPECT(0xf5, gbc.readMem(0xcd9e));
        // CB F5 0278
        gbc.setState(0x8bd4, 0xe84d, 0x8bb0, 0xd401, 0xcb60, 0x1733, 0x0, 0x1);
        gbc.writeMem(0x8bd4, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe84d, gbc.sp());
        EXPECT(0x8bd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bd4));
        EXPECT(0xf5, gbc.readMem(0x8bd5));
        // CB F5 0279
        gbc.setState(0x2716, 0xed12, 0x6510, 0x518f, 0x696f, 0xc8cf, 0x0, 0x1);
        gbc.writeMem(0x2716, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xed12, gbc.sp());
        EXPECT(0x2718, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 027A
        gbc.setState(0x9623, 0xa114, 0x9bb0, 0x2637, 0x4f12, 0xa1eb, 0x1, 0x1);
        gbc.writeMem(0x9623, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa114, gbc.sp());
        EXPECT(0x9625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9623));
        EXPECT(0xf5, gbc.readMem(0x9624));
        // CB F5 027B
        gbc.setState(0xadec, 0x8833, 0xff80, 0x2484, 0x680, 0x920c, 0x0, 0x0);
        gbc.writeMem(0xadec, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8833, gbc.sp());
        EXPECT(0xadee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadec));
        EXPECT(0xf5, gbc.readMem(0xaded));
        // CB F5 027C
        gbc.setState(0x8c4b, 0x4360, 0x48e0, 0x15, 0x577b, 0xaeb5, 0x0, 0x0);
        gbc.writeMem(0x8c4b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4360, gbc.sp());
        EXPECT(0x8c4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c4b));
        EXPECT(0xf5, gbc.readMem(0x8c4c));
        // CB F5 027D
        gbc.setState(0x3d62, 0xff9, 0x82e0, 0xd299, 0x69df, 0xcc42, 0x1, 0x1);
        gbc.writeMem(0x3d62, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xff9, gbc.sp());
        EXPECT(0x3d64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 027E
        gbc.setState(0x953e, 0xaba4, 0xebf0, 0xef3d, 0x505a, 0xff2e, 0x1, 0x0);
        gbc.writeMem(0x953e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xaba4, gbc.sp());
        EXPECT(0x9540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x953e));
        EXPECT(0xf5, gbc.readMem(0x953f));
        // CB F5 027F
        gbc.setState(0x1b48, 0xd6b8, 0xb610, 0xdc6, 0x3a0d, 0x350f, 0x0, 0x0);
        gbc.writeMem(0x1b48, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd6b8, gbc.sp());
        EXPECT(0x1b4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0280
        gbc.setState(0x689b, 0xbf00, 0x9ae0, 0xe915, 0x60be, 0xb84, 0x1, 0x1);
        gbc.writeMem(0x689b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xbf00, gbc.sp());
        EXPECT(0x689d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0281
        gbc.setState(0x1be9, 0xdd77, 0x3730, 0xf324, 0xa6de, 0xc7df, 0x0, 0x1);
        gbc.writeMem(0x1be9, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xdd77, gbc.sp());
        EXPECT(0x1beb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0282
        gbc.setState(0x6bb4, 0x94e7, 0xa6c0, 0x1eda, 0x8b8e, 0xf0c, 0x1, 0x0);
        gbc.writeMem(0x6bb4, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x94e7, gbc.sp());
        EXPECT(0x6bb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0283
        gbc.setState(0xdbc0, 0xa1c6, 0xb820, 0xc1ef, 0xd5c1, 0x1fbf, 0x0, 0x1);
        gbc.writeMem(0xdbc0, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa1c6, gbc.sp());
        EXPECT(0xdbc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbc0));
        EXPECT(0xf5, gbc.readMem(0xdbc1));
        // CB F5 0284
        gbc.setState(0x17b3, 0x520b, 0xbed0, 0xadaf, 0x21f8, 0x4384, 0x0, 0x1);
        gbc.writeMem(0x17b3, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x520b, gbc.sp());
        EXPECT(0x17b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0285
        gbc.setState(0x3bf1, 0x4336, 0x4dc0, 0xb185, 0xd616, 0x3895, 0x1, 0x0);
        gbc.writeMem(0x3bf1, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4336, gbc.sp());
        EXPECT(0x3bf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0286
        gbc.setState(0x599e, 0x693f, 0xbe50, 0x232b, 0x5deb, 0x6a34, 0x0, 0x0);
        gbc.writeMem(0x599e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x693f, gbc.sp());
        EXPECT(0x59a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0287
        gbc.setState(0xbdd4, 0x1bb9, 0x4360, 0xb4da, 0xec93, 0xa37d, 0x1, 0x1);
        gbc.writeMem(0xbdd4, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1bb9, gbc.sp());
        EXPECT(0xbdd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdd4));
        EXPECT(0xf5, gbc.readMem(0xbdd5));
        // CB F5 0288
        gbc.setState(0x32d5, 0x2b94, 0x7070, 0xc56d, 0x8bf5, 0xb2, 0x0, 0x0);
        gbc.writeMem(0x32d5, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2b94, gbc.sp());
        EXPECT(0x32d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0289
        gbc.setState(0x25d6, 0x2d20, 0x8000, 0x21b4, 0xe29e, 0xed99, 0x0, 0x1);
        gbc.writeMem(0x25d6, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2d20, gbc.sp());
        EXPECT(0x25d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 028A
        gbc.setState(0x1740, 0x8320, 0x6c60, 0xc1d2, 0x19d2, 0xb9c4, 0x0, 0x0);
        gbc.writeMem(0x1740, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8320, gbc.sp());
        EXPECT(0x1742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 028C
        gbc.setState(0x878d, 0x13c4, 0x6e30, 0x444e, 0x59ef, 0xdcd9, 0x1, 0x0);
        gbc.writeMem(0x878d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x13c4, gbc.sp());
        EXPECT(0x878f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x878d));
        EXPECT(0xf5, gbc.readMem(0x878e));
        // CB F5 028D
        gbc.setState(0xd0b5, 0x68e, 0x4fd0, 0xc1d0, 0xe2bf, 0x79d1, 0x0, 0x1);
        gbc.writeMem(0xd0b5, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x68e, gbc.sp());
        EXPECT(0xd0b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0b5));
        EXPECT(0xf5, gbc.readMem(0xd0b6));
        // CB F5 028E
        gbc.setState(0x408c, 0x47e, 0x6d10, 0x4881, 0x2742, 0x5d5a, 0x1, 0x1);
        gbc.writeMem(0x408c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x47e, gbc.sp());
        EXPECT(0x408e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 028F
        gbc.setState(0x15cf, 0x41c7, 0xac0, 0xb439, 0xff4, 0x5398, 0x1, 0x0);
        gbc.writeMem(0x15cf, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x41c7, gbc.sp());
        EXPECT(0x15d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0290
        gbc.setState(0x5961, 0xfecd, 0xbf0, 0x323c, 0x2f63, 0xe1a6, 0x0, 0x1);
        gbc.writeMem(0x5961, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xfecd, gbc.sp());
        EXPECT(0x5963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0291
        gbc.setState(0x87ae, 0x5ecb, 0x2cc0, 0xa172, 0x8eef, 0x6867, 0x1, 0x1);
        gbc.writeMem(0x87ae, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5ecb, gbc.sp());
        EXPECT(0x87b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87ae));
        EXPECT(0xf5, gbc.readMem(0x87af));
        // CB F5 0292
        gbc.setState(0x39be, 0x4e38, 0x58d0, 0x9aab, 0xa101, 0xf030, 0x1, 0x1);
        gbc.writeMem(0x39be, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4e38, gbc.sp());
        EXPECT(0x39c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0293
        gbc.setState(0x8c9, 0x63b7, 0x37f0, 0x16d1, 0x52d6, 0x7bb6, 0x0, 0x1);
        gbc.writeMem(0x8c9, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x63b7, gbc.sp());
        EXPECT(0x8cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0294
        gbc.setState(0xae2c, 0x3c81, 0x62f0, 0xa5bc, 0x5f5f, 0xc646, 0x1, 0x1);
        gbc.writeMem(0xae2c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3c81, gbc.sp());
        EXPECT(0xae2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae2c));
        EXPECT(0xf5, gbc.readMem(0xae2d));
        // CB F5 0295
        gbc.setState(0x3591, 0xb923, 0xfd40, 0xdf88, 0x4e2e, 0x40d6, 0x0, 0x1);
        gbc.writeMem(0x3591, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb923, gbc.sp());
        EXPECT(0x3593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0296
        gbc.setState(0x7e39, 0x4093, 0x9de0, 0x5487, 0xe9bb, 0x614b, 0x1, 0x0);
        gbc.writeMem(0x7e39, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4093, gbc.sp());
        EXPECT(0x7e3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0297
        gbc.setState(0xe516, 0x5709, 0x35b0, 0xceed, 0xafea, 0xa076, 0x0, 0x0);
        gbc.writeMem(0xe516, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5709, gbc.sp());
        EXPECT(0xe518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe516));
        EXPECT(0xf5, gbc.readMem(0xe517));
        // CB F5 0298
        gbc.setState(0x7a00, 0x5e35, 0x6c80, 0x7156, 0xd9b4, 0xe51f, 0x0, 0x1);
        gbc.writeMem(0x7a00, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5e35, gbc.sp());
        EXPECT(0x7a02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0299
        gbc.setState(0x35df, 0x835f, 0xaaf0, 0x2ab5, 0x9c8a, 0x539a, 0x0, 0x1);
        gbc.writeMem(0x35df, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x835f, gbc.sp());
        EXPECT(0x35e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 029A
        gbc.setState(0x103c, 0xb56e, 0x3420, 0xc279, 0x48b0, 0x4d84, 0x0, 0x0);
        gbc.writeMem(0x103c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb56e, gbc.sp());
        EXPECT(0x103e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 029B
        gbc.setState(0x5c5, 0x1bee, 0x6ff0, 0x240c, 0x69e9, 0x4a50, 0x1, 0x0);
        gbc.writeMem(0x5c5, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1bee, gbc.sp());
        EXPECT(0x5c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 029C
        gbc.setState(0xe5a0, 0xf763, 0x2560, 0xacee, 0xbfc2, 0x69be, 0x0, 0x1);
        gbc.writeMem(0xe5a0, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf763, gbc.sp());
        EXPECT(0xe5a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5a0));
        EXPECT(0xf5, gbc.readMem(0xe5a1));
        // CB F5 029D
        gbc.setState(0xbc28, 0xc1a7, 0x5aa0, 0xd996, 0xac70, 0xabaa, 0x0, 0x0);
        gbc.writeMem(0xbc28, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc1a7, gbc.sp());
        EXPECT(0xbc2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc28));
        EXPECT(0xf5, gbc.readMem(0xbc29));
        // CB F5 029E
        gbc.setState(0xdc2a, 0xfc89, 0x3490, 0x7579, 0xe980, 0x955a, 0x0, 0x1);
        gbc.writeMem(0xdc2a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfc89, gbc.sp());
        EXPECT(0xdc2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc2a));
        EXPECT(0xf5, gbc.readMem(0xdc2b));
        // CB F5 029F
        gbc.setState(0x4a08, 0x82cf, 0x8130, 0x6140, 0xa4ba, 0xde7a, 0x1, 0x1);
        gbc.writeMem(0x4a08, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x82cf, gbc.sp());
        EXPECT(0x4a0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02A0
        gbc.setState(0x19be, 0x8e10, 0x4870, 0xf03f, 0xe05c, 0x98e2, 0x0, 0x1);
        gbc.writeMem(0x19be, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8e10, gbc.sp());
        EXPECT(0x19c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02A1
        gbc.setState(0x4c89, 0xbda2, 0x45b0, 0x6614, 0xfad3, 0x10b3, 0x1, 0x1);
        gbc.writeMem(0x4c89, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xbda2, gbc.sp());
        EXPECT(0x4c8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02A2
        gbc.setState(0x6275, 0x60a6, 0x2140, 0x4623, 0xbb4f, 0xcb77, 0x1, 0x0);
        gbc.writeMem(0x6275, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x60a6, gbc.sp());
        EXPECT(0x6277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 02A3
        gbc.setState(0x80e, 0xa95f, 0xc060, 0x6dc0, 0xa8ab, 0xad79, 0x0, 0x0);
        gbc.writeMem(0x80e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa95f, gbc.sp());
        EXPECT(0x810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 02A4
        gbc.setState(0xcb19, 0xb92a, 0x5c50, 0xfff5, 0x85fc, 0xa72e, 0x1, 0x1);
        gbc.writeMem(0xcb19, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb92a, gbc.sp());
        EXPECT(0xcb1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb19));
        EXPECT(0xf5, gbc.readMem(0xcb1a));
        // CB F5 02A5
        gbc.setState(0x398b, 0xed26, 0x4830, 0x4dbe, 0x73d7, 0xcde1, 0x0, 0x1);
        gbc.writeMem(0x398b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xed26, gbc.sp());
        EXPECT(0x398d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02A6
        gbc.setState(0xa1e5, 0x4c78, 0x1f20, 0x3620, 0x30ae, 0xd002, 0x0, 0x0);
        gbc.writeMem(0xa1e5, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4c78, gbc.sp());
        EXPECT(0xa1e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1e5));
        EXPECT(0xf5, gbc.readMem(0xa1e6));
        // CB F5 02A7
        gbc.setState(0x72d6, 0x638, 0xcc30, 0x749d, 0x3514, 0xd0af, 0x0, 0x0);
        gbc.writeMem(0x72d6, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x638, gbc.sp());
        EXPECT(0x72d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02A8
        gbc.setState(0x84c6, 0x4b59, 0xdbf0, 0xcbdb, 0x694a, 0x44e4, 0x0, 0x0);
        gbc.writeMem(0x84c6, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4b59, gbc.sp());
        EXPECT(0x84c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c6));
        EXPECT(0xf5, gbc.readMem(0x84c7));
        // CB F5 02A9
        gbc.setState(0x2a92, 0x4bd5, 0x4520, 0xa03b, 0x95b2, 0x6415, 0x0, 0x1);
        gbc.writeMem(0x2a92, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4bd5, gbc.sp());
        EXPECT(0x2a94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 02AA
        gbc.setState(0x553f, 0xf74e, 0xcdb0, 0xa309, 0xb0db, 0x6f1e, 0x1, 0x1);
        gbc.writeMem(0x553f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf74e, gbc.sp());
        EXPECT(0x5541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02AB
        gbc.setState(0x1cce, 0xba47, 0x8860, 0xc424, 0x5800, 0xe932, 0x0, 0x1);
        gbc.writeMem(0x1cce, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xba47, gbc.sp());
        EXPECT(0x1cd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 02AC
        gbc.setState(0xebf, 0xb207, 0x8ff0, 0xc9eb, 0xbbf1, 0x43e5, 0x0, 0x0);
        gbc.writeMem(0xebf, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb207, gbc.sp());
        EXPECT(0xec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02AD
        gbc.setState(0x5bfa, 0x6f48, 0x65a0, 0xa6dd, 0xe070, 0xd23b, 0x1, 0x0);
        gbc.writeMem(0x5bfa, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6f48, gbc.sp());
        EXPECT(0x5bfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 02AE
        gbc.setState(0x630a, 0x90a6, 0xc7f0, 0x5ab8, 0x9542, 0xab69, 0x0, 0x1);
        gbc.writeMem(0x630a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x90a6, gbc.sp());
        EXPECT(0x630c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02AF
        gbc.setState(0x6d3a, 0xad6c, 0x5b50, 0xebc6, 0x5f8e, 0x2b65, 0x0, 0x1);
        gbc.writeMem(0x6d3a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xad6c, gbc.sp());
        EXPECT(0x6d3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02B0
        gbc.setState(0xa6e6, 0x7975, 0x85c0, 0x605f, 0xeb41, 0x43f7, 0x0, 0x0);
        gbc.writeMem(0xa6e6, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7975, gbc.sp());
        EXPECT(0xa6e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6e6));
        EXPECT(0xf5, gbc.readMem(0xa6e7));
        // CB F5 02B1
        gbc.setState(0xc975, 0x5884, 0xec0, 0x2a52, 0xc0e3, 0xa375, 0x1, 0x0);
        gbc.writeMem(0xc975, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5884, gbc.sp());
        EXPECT(0xc977, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc975));
        EXPECT(0xf5, gbc.readMem(0xc976));
        // CB F5 02B2
        gbc.setState(0x8a45, 0xcc0, 0x3210, 0x94c6, 0x5ffe, 0x4a91, 0x0, 0x0);
        gbc.writeMem(0x8a45, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xcc0, gbc.sp());
        EXPECT(0x8a47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a45));
        EXPECT(0xf5, gbc.readMem(0x8a46));
        // CB F5 02B3
        gbc.setState(0x9c17, 0x9169, 0x1740, 0x309d, 0x7775, 0x56cc, 0x1, 0x1);
        gbc.writeMem(0x9c17, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9169, gbc.sp());
        EXPECT(0x9c19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c17));
        EXPECT(0xf5, gbc.readMem(0x9c18));
        // CB F5 02B4
        gbc.setState(0xdc52, 0x6a84, 0x85c0, 0x2bb3, 0xb49e, 0xc034, 0x0, 0x0);
        gbc.writeMem(0xdc52, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6a84, gbc.sp());
        EXPECT(0xdc54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc52));
        EXPECT(0xf5, gbc.readMem(0xdc53));
        // CB F5 02B5
        gbc.setState(0x19bc, 0x5cd2, 0xb8c0, 0x355f, 0x3a25, 0x75f, 0x0, 0x0);
        gbc.writeMem(0x19bc, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5cd2, gbc.sp());
        EXPECT(0x19be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 02B6
        gbc.setState(0xe86b, 0xe8ff, 0x4c70, 0x823b, 0x3ca0, 0x63c1, 0x0, 0x1);
        gbc.writeMem(0xe86b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe8ff, gbc.sp());
        EXPECT(0xe86d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe86b));
        EXPECT(0xf5, gbc.readMem(0xe86c));
        // CB F5 02B7
        gbc.setState(0x73bd, 0xdcdb, 0xe20, 0x5eff, 0x8813, 0x7f2e, 0x0, 0x1);
        gbc.writeMem(0x73bd, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xdcdb, gbc.sp());
        EXPECT(0x73bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 02B8
        gbc.setState(0x3735, 0xf2cd, 0xf730, 0x7654, 0xba44, 0x6d2c, 0x1, 0x0);
        gbc.writeMem(0x3735, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf2cd, gbc.sp());
        EXPECT(0x3737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02B9
        gbc.setState(0x4209, 0x2a89, 0x2ad0, 0x3257, 0xdd83, 0xb305, 0x0, 0x0);
        gbc.writeMem(0x4209, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2a89, gbc.sp());
        EXPECT(0x420b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02BA
        gbc.setState(0x9542, 0x1fce, 0x9740, 0xc598, 0x4982, 0x9bf, 0x0, 0x1);
        gbc.writeMem(0x9542, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1fce, gbc.sp());
        EXPECT(0x9544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9542));
        EXPECT(0xf5, gbc.readMem(0x9543));
        // CB F5 02BB
        gbc.setState(0xb3db, 0xf7e9, 0xb180, 0x19e1, 0x3d32, 0x8383, 0x0, 0x0);
        gbc.writeMem(0xb3db, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf7e9, gbc.sp());
        EXPECT(0xb3dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3db));
        EXPECT(0xf5, gbc.readMem(0xb3dc));
        // CB F5 02BC
        gbc.setState(0x731b, 0xfb9e, 0x1720, 0x57bf, 0x2df5, 0xe0e4, 0x1, 0x0);
        gbc.writeMem(0x731b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xfb9e, gbc.sp());
        EXPECT(0x731d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 02BD
        gbc.setState(0xb2ce, 0xa902, 0x9ac0, 0xb0b9, 0x5aa, 0x3a6, 0x0, 0x0);
        gbc.writeMem(0xb2ce, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa902, gbc.sp());
        EXPECT(0xb2d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2ce));
        EXPECT(0xf5, gbc.readMem(0xb2cf));
        // CB F5 02BE
        gbc.setState(0x7f97, 0x75bd, 0x69b0, 0xe545, 0x1f14, 0x8af7, 0x1, 0x0);
        gbc.writeMem(0x7f97, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x75bd, gbc.sp());
        EXPECT(0x7f99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02BF
        gbc.setState(0x3cdd, 0xd267, 0xa8b0, 0x943e, 0x23b9, 0xc329, 0x0, 0x1);
        gbc.writeMem(0x3cdd, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd267, gbc.sp());
        EXPECT(0x3cdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02C0
        gbc.setState(0x8c37, 0x8f00, 0xbb70, 0xbe48, 0x1c7b, 0x52e9, 0x1, 0x0);
        gbc.writeMem(0x8c37, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8f00, gbc.sp());
        EXPECT(0x8c39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c37));
        EXPECT(0xf5, gbc.readMem(0x8c38));
        // CB F5 02C1
        gbc.setState(0x13f3, 0x6cfc, 0xe2d0, 0x6deb, 0x9a15, 0x5ca5, 0x1, 0x0);
        gbc.writeMem(0x13f3, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6cfc, gbc.sp());
        EXPECT(0x13f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02C2
        gbc.setState(0xa29, 0xcbd7, 0x9a60, 0x8a29, 0x5b49, 0x32fb, 0x0, 0x0);
        gbc.writeMem(0xa29, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xcbd7, gbc.sp());
        EXPECT(0xa2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 02C3
        gbc.setState(0x3ad2, 0xba8b, 0xf150, 0x8dcd, 0xa62f, 0x2f00, 0x0, 0x1);
        gbc.writeMem(0x3ad2, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xba8b, gbc.sp());
        EXPECT(0x3ad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02C4
        gbc.setState(0x7824, 0x111, 0x6460, 0x7f51, 0xb169, 0x7c55, 0x1, 0x1);
        gbc.writeMem(0x7824, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x111, gbc.sp());
        EXPECT(0x7826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 02C5
        gbc.setState(0x2ba5, 0xc84f, 0xac90, 0x8eb4, 0x3a7d, 0x84b0, 0x1, 0x0);
        gbc.writeMem(0x2ba5, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc84f, gbc.sp());
        EXPECT(0x2ba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02C6
        gbc.setState(0xd84d, 0xb110, 0x250, 0xe57b, 0x92cf, 0x656b, 0x0, 0x0);
        gbc.writeMem(0xd84d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb110, gbc.sp());
        EXPECT(0xd84f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd84d));
        EXPECT(0xf5, gbc.readMem(0xd84e));
        // CB F5 02C7
        gbc.setState(0x16e1, 0xc431, 0xe0b0, 0xde76, 0x95e7, 0x3916, 0x0, 0x1);
        gbc.writeMem(0x16e1, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc431, gbc.sp());
        EXPECT(0x16e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02C8
        gbc.setState(0x5f02, 0x350d, 0x3bc0, 0xd65, 0xb3a5, 0x41a3, 0x0, 0x0);
        gbc.writeMem(0x5f02, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x350d, gbc.sp());
        EXPECT(0x5f04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 02C9
        gbc.setState(0xefbf, 0x9a9e, 0x97a0, 0x2342, 0x8887, 0x1930, 0x0, 0x1);
        gbc.writeMem(0xefbf, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9a9e, gbc.sp());
        EXPECT(0xefc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefbf));
        EXPECT(0xf5, gbc.readMem(0xefc0));
        // CB F5 02CB
        gbc.setState(0xa367, 0x1942, 0x8290, 0x2878, 0x7723, 0x8f5c, 0x1, 0x0);
        gbc.writeMem(0xa367, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1942, gbc.sp());
        EXPECT(0xa369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa367));
        EXPECT(0xf5, gbc.readMem(0xa368));
        // CB F5 02CC
        gbc.setState(0xc9ac, 0xbd36, 0x7250, 0x28f3, 0x2510, 0x4254, 0x1, 0x1);
        gbc.writeMem(0xc9ac, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xbd36, gbc.sp());
        EXPECT(0xc9ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ac));
        EXPECT(0xf5, gbc.readMem(0xc9ad));
        // CB F5 02CD
        gbc.setState(0x12d2, 0xf9ac, 0xe80, 0x7dec, 0x5b19, 0xdab5, 0x0, 0x1);
        gbc.writeMem(0x12d2, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf9ac, gbc.sp());
        EXPECT(0x12d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 02CE
        gbc.setState(0x64f7, 0xc5ee, 0x2830, 0xd007, 0x9b16, 0x4dd8, 0x1, 0x1);
        gbc.writeMem(0x64f7, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc5ee, gbc.sp());
        EXPECT(0x64f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02CF
        gbc.setState(0x3b58, 0x27e2, 0xd050, 0xcbf, 0x4c60, 0xcae7, 0x0, 0x1);
        gbc.writeMem(0x3b58, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x27e2, gbc.sp());
        EXPECT(0x3b5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02D0
        gbc.setState(0x3981, 0xbcd2, 0x1440, 0xbf8f, 0xd518, 0x3547, 0x1, 0x0);
        gbc.writeMem(0x3981, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xbcd2, gbc.sp());
        EXPECT(0x3983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 02D1
        gbc.setState(0xba5c, 0x245d, 0x5a60, 0x85df, 0xfa91, 0x8e57, 0x1, 0x0);
        gbc.writeMem(0xba5c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x245d, gbc.sp());
        EXPECT(0xba5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba5c));
        EXPECT(0xf5, gbc.readMem(0xba5d));
        // CB F5 02D2
        gbc.setState(0x8765, 0xf97c, 0x9b80, 0x634d, 0xd482, 0xee8a, 0x0, 0x0);
        gbc.writeMem(0x8765, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf97c, gbc.sp());
        EXPECT(0x8767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8765));
        EXPECT(0xf5, gbc.readMem(0x8766));
        // CB F5 02D3
        gbc.setState(0xce16, 0x6109, 0xbca0, 0xb57c, 0x9b9b, 0x4b96, 0x1, 0x0);
        gbc.writeMem(0xce16, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6109, gbc.sp());
        EXPECT(0xce18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce16));
        EXPECT(0xf5, gbc.readMem(0xce17));
        // CB F5 02D4
        gbc.setState(0xb61, 0x3d41, 0xfc60, 0xa33c, 0x46b4, 0xe003, 0x1, 0x1);
        gbc.writeMem(0xb61, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3d41, gbc.sp());
        EXPECT(0xb63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 02D5
        gbc.setState(0x68e1, 0x5a45, 0x5cd0, 0xb213, 0x46aa, 0x775, 0x0, 0x0);
        gbc.writeMem(0x68e1, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5a45, gbc.sp());
        EXPECT(0x68e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02D6
        gbc.setState(0x7387, 0x9fec, 0x3890, 0xdb62, 0x63e, 0x8e2b, 0x1, 0x1);
        gbc.writeMem(0x7387, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9fec, gbc.sp());
        EXPECT(0x7389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02D7
        gbc.setState(0x9025, 0xed1b, 0x2820, 0x7a54, 0xd314, 0xdce0, 0x1, 0x0);
        gbc.writeMem(0x9025, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xed1b, gbc.sp());
        EXPECT(0x9027, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9025));
        EXPECT(0xf5, gbc.readMem(0x9026));
        // CB F5 02D8
        gbc.setState(0xc1cd, 0x8a38, 0xcbc0, 0xdc16, 0x6dec, 0xcef7, 0x1, 0x0);
        gbc.writeMem(0xc1cd, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8a38, gbc.sp());
        EXPECT(0xc1cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1cd));
        EXPECT(0xf5, gbc.readMem(0xc1ce));
        // CB F5 02D9
        gbc.setState(0x6bc7, 0x2588, 0x6330, 0x2da2, 0xa0b5, 0x1b2f, 0x1, 0x1);
        gbc.writeMem(0x6bc7, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2588, gbc.sp());
        EXPECT(0x6bc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02DA
        gbc.setState(0x9b8c, 0x3b9, 0x4cd0, 0xc1f5, 0x416c, 0xc916, 0x1, 0x1);
        gbc.writeMem(0x9b8c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3b9, gbc.sp());
        EXPECT(0x9b8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b8c));
        EXPECT(0xf5, gbc.readMem(0x9b8d));
        // CB F5 02DB
        gbc.setState(0x167a, 0xa141, 0x33b0, 0xd052, 0x228b, 0x70e, 0x0, 0x0);
        gbc.writeMem(0x167a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa141, gbc.sp());
        EXPECT(0x167c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02DC
        gbc.setState(0x7a25, 0xbc28, 0xef80, 0x518e, 0x5a1d, 0xdff9, 0x0, 0x1);
        gbc.writeMem(0x7a25, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbc28, gbc.sp());
        EXPECT(0x7a27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 02DD
        gbc.setState(0x46c7, 0x723, 0xaad0, 0x93dc, 0x2d42, 0x77b4, 0x1, 0x1);
        gbc.writeMem(0x46c7, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x723, gbc.sp());
        EXPECT(0x46c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02DE
        gbc.setState(0x719e, 0x8e90, 0x7cb0, 0xd616, 0x8bdf, 0x9b51, 0x0, 0x1);
        gbc.writeMem(0x719e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8e90, gbc.sp());
        EXPECT(0x71a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02DF
        gbc.setState(0xb238, 0x58ec, 0xd140, 0x7b36, 0xfc54, 0xf1ef, 0x1, 0x0);
        gbc.writeMem(0xb238, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x58ec, gbc.sp());
        EXPECT(0xb23a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb238));
        EXPECT(0xf5, gbc.readMem(0xb239));
        // CB F5 02E0
        gbc.setState(0xdde6, 0x964a, 0xe0a0, 0xbece, 0xca02, 0xf3a5, 0x0, 0x1);
        gbc.writeMem(0xdde6, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x964a, gbc.sp());
        EXPECT(0xdde8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde6));
        EXPECT(0xf5, gbc.readMem(0xdde7));
        // CB F5 02E1
        gbc.setState(0x1029, 0x146f, 0x99b0, 0xe4d9, 0x7bef, 0xc72f, 0x1, 0x0);
        gbc.writeMem(0x1029, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x146f, gbc.sp());
        EXPECT(0x102b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02E2
        gbc.setState(0xcab3, 0x8c8e, 0x2930, 0x9889, 0x1f9e, 0x70fa, 0x0, 0x0);
        gbc.writeMem(0xcab3, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8c8e, gbc.sp());
        EXPECT(0xcab5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcab3));
        EXPECT(0xf5, gbc.readMem(0xcab4));
        // CB F5 02E3
        gbc.setState(0x2339, 0x974a, 0xc740, 0x15be, 0x7b83, 0xf76a, 0x1, 0x0);
        gbc.writeMem(0x2339, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x974a, gbc.sp());
        EXPECT(0x233b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 02E4
        gbc.setState(0xa4c0, 0xb901, 0x2c0, 0x7507, 0x5b35, 0x7c4b, 0x1, 0x0);
        gbc.writeMem(0xa4c0, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb901, gbc.sp());
        EXPECT(0xa4c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4c0));
        EXPECT(0xf5, gbc.readMem(0xa4c1));
        // CB F5 02E5
        gbc.setState(0x74c8, 0xa35c, 0x9bd0, 0x2ee6, 0x7bda, 0xf4ec, 0x0, 0x0);
        gbc.writeMem(0x74c8, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa35c, gbc.sp());
        EXPECT(0x74ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02E6
        gbc.setState(0xcd09, 0xa681, 0x7920, 0x56fd, 0x222d, 0x1e55, 0x0, 0x1);
        gbc.writeMem(0xcd09, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa681, gbc.sp());
        EXPECT(0xcd0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd09));
        EXPECT(0xf5, gbc.readMem(0xcd0a));
        // CB F5 02E7
        gbc.setState(0x6df0, 0xe71f, 0xc0f0, 0x51e3, 0xce80, 0x534, 0x1, 0x1);
        gbc.writeMem(0x6df0, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe71f, gbc.sp());
        EXPECT(0x6df2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02E8
        gbc.setState(0xbcb, 0xacdb, 0x6380, 0x858c, 0x18bb, 0x707c, 0x0, 0x1);
        gbc.writeMem(0xbcb, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xacdb, gbc.sp());
        EXPECT(0xbcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 02E9
        gbc.setState(0x3e47, 0xa1c8, 0xb210, 0xf7ff, 0x3c12, 0xc0b2, 0x1, 0x1);
        gbc.writeMem(0x3e47, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa1c8, gbc.sp());
        EXPECT(0x3e49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02EA
        gbc.setState(0x4b7, 0x71e5, 0x51b0, 0x493, 0xc9ea, 0x82ad, 0x1, 0x1);
        gbc.writeMem(0x4b7, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x71e5, gbc.sp());
        EXPECT(0x4b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02EB
        gbc.setState(0xa3a9, 0x74c3, 0xe020, 0x4c12, 0xb7e6, 0xf8bf, 0x0, 0x0);
        gbc.writeMem(0xa3a9, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x74c3, gbc.sp());
        EXPECT(0xa3ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3a9));
        EXPECT(0xf5, gbc.readMem(0xa3aa));
        // CB F5 02EC
        gbc.setState(0x854d, 0xf6bf, 0x50c0, 0x39fc, 0x797b, 0x45d4, 0x1, 0x1);
        gbc.writeMem(0x854d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf6bf, gbc.sp());
        EXPECT(0x854f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x854d));
        EXPECT(0xf5, gbc.readMem(0x854e));
        // CB F5 02ED
        gbc.setState(0xb40c, 0x441b, 0x5ad0, 0x705, 0x9c93, 0xc5f7, 0x0, 0x0);
        gbc.writeMem(0xb40c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x441b, gbc.sp());
        EXPECT(0xb40e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb40c));
        EXPECT(0xf5, gbc.readMem(0xb40d));
        // CB F5 02EE
        gbc.setState(0x2c10, 0x4dfd, 0xe590, 0x169a, 0x290c, 0xfb2, 0x0, 0x1);
        gbc.writeMem(0x2c10, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4dfd, gbc.sp());
        EXPECT(0x2c12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02EF
        gbc.setState(0x1b4b, 0x3aa4, 0x92f0, 0xe66, 0xc2b8, 0x9c11, 0x0, 0x1);
        gbc.writeMem(0x1b4b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3aa4, gbc.sp());
        EXPECT(0x1b4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02F0
        gbc.setState(0xa1e, 0x77ba, 0x3590, 0xd4cb, 0x9a08, 0x2de3, 0x0, 0x0);
        gbc.writeMem(0xa1e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x77ba, gbc.sp());
        EXPECT(0xa20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02F1
        gbc.setState(0xe7f8, 0xc10, 0x5ce0, 0x99a1, 0x111b, 0x6ff4, 0x1, 0x1);
        gbc.writeMem(0xe7f8, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc10, gbc.sp());
        EXPECT(0xe7fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7f8));
        EXPECT(0xf5, gbc.readMem(0xe7f9));
        // CB F5 02F3
        gbc.setState(0x4ebe, 0xf906, 0x3940, 0x3628, 0x8a4f, 0xc26c, 0x0, 0x0);
        gbc.writeMem(0x4ebe, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf906, gbc.sp());
        EXPECT(0x4ec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 02F4
        gbc.setState(0xbfbd, 0x68ed, 0xc6a0, 0x12db, 0xcaf3, 0xea6e, 0x0, 0x1);
        gbc.writeMem(0xbfbd, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x68ed, gbc.sp());
        EXPECT(0xbfbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfbd));
        EXPECT(0xf5, gbc.readMem(0xbfbe));
        // CB F5 02F5
        gbc.setState(0x1f0b, 0xcc52, 0x40c0, 0xcfde, 0x582, 0x5588, 0x1, 0x0);
        gbc.writeMem(0x1f0b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xcc52, gbc.sp());
        EXPECT(0x1f0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 02F6
        gbc.setState(0x2ad6, 0xbca9, 0x4370, 0xb5, 0xe57d, 0x2ac8, 0x1, 0x1);
        gbc.writeMem(0x2ad6, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xbca9, gbc.sp());
        EXPECT(0x2ad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02F7
        gbc.setState(0x105e, 0xcc89, 0x54e0, 0x55fe, 0xc284, 0x42f8, 0x1, 0x0);
        gbc.writeMem(0x105e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xcc89, gbc.sp());
        EXPECT(0x1060, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 02F8
        gbc.setState(0x194f, 0xd1d3, 0xcc80, 0xc00e, 0x50df, 0xc183, 0x0, 0x0);
        gbc.writeMem(0x194f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd1d3, gbc.sp());
        EXPECT(0x1951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 02F9
        gbc.setState(0x95d6, 0xcf59, 0x4680, 0xa35a, 0xda9e, 0x29fd, 0x1, 0x1);
        gbc.writeMem(0x95d6, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xcf59, gbc.sp());
        EXPECT(0x95d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95d6));
        EXPECT(0xf5, gbc.readMem(0x95d7));
        // CB F5 02FA
        gbc.setState(0xcd8d, 0x3d72, 0x6f60, 0xd5ac, 0x72b9, 0x6778, 0x1, 0x0);
        gbc.writeMem(0xcd8d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3d72, gbc.sp());
        EXPECT(0xcd8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd8d));
        EXPECT(0xf5, gbc.readMem(0xcd8e));
        // CB F5 02FB
        gbc.setState(0x273f, 0x32c, 0x6210, 0xaca, 0xf4a6, 0x15ec, 0x1, 0x1);
        gbc.writeMem(0x273f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x32c, gbc.sp());
        EXPECT(0x2741, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02FC
        gbc.setState(0x44f9, 0x2d13, 0x39a0, 0xf688, 0xe0f7, 0xd222, 0x0, 0x1);
        gbc.writeMem(0x44f9, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2d13, gbc.sp());
        EXPECT(0x44fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 02FD
        gbc.setState(0xd5c0, 0x8689, 0xe520, 0xfa3c, 0x76c3, 0x21c4, 0x0, 0x1);
        gbc.writeMem(0xd5c0, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8689, gbc.sp());
        EXPECT(0xd5c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5c0));
        EXPECT(0xf5, gbc.readMem(0xd5c1));
        // CB F5 02FE
        gbc.setState(0x36e5, 0x7ab0, 0xf670, 0x6073, 0x3de, 0xcb5a, 0x1, 0x0);
        gbc.writeMem(0x36e5, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7ab0, gbc.sp());
        EXPECT(0x36e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 02FF
        gbc.setState(0xaf53, 0xc183, 0x65a0, 0xf0bf, 0x1142, 0x29ea, 0x1, 0x0);
        gbc.writeMem(0xaf53, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc183, gbc.sp());
        EXPECT(0xaf55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf53));
        EXPECT(0xf5, gbc.readMem(0xaf54));
        // CB F5 0300
        gbc.setState(0x1070, 0x43a9, 0xbca0, 0x36c3, 0x7e5f, 0x7e76, 0x0, 0x1);
        gbc.writeMem(0x1070, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x43a9, gbc.sp());
        EXPECT(0x1072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0301
        gbc.setState(0xdbe8, 0x4f0d, 0x7ca0, 0x22ee, 0x1152, 0xbbcd, 0x1, 0x0);
        gbc.writeMem(0xdbe8, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4f0d, gbc.sp());
        EXPECT(0xdbea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbe8));
        EXPECT(0xf5, gbc.readMem(0xdbe9));
        // CB F5 0302
        gbc.setState(0x70b2, 0x3884, 0x8a10, 0x2a7f, 0x3870, 0xe97b, 0x0, 0x1);
        gbc.writeMem(0x70b2, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3884, gbc.sp());
        EXPECT(0x70b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0303
        gbc.setState(0xda98, 0xdf17, 0xa830, 0x2ba4, 0x7a9e, 0x7505, 0x0, 0x1);
        gbc.writeMem(0xda98, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xdf17, gbc.sp());
        EXPECT(0xda9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda98));
        EXPECT(0xf5, gbc.readMem(0xda99));
        // CB F5 0304
        gbc.setState(0xe7ae, 0xdd67, 0xa4c0, 0xe62a, 0xde60, 0xf344, 0x0, 0x0);
        gbc.writeMem(0xe7ae, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xdd67, gbc.sp());
        EXPECT(0xe7b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7ae));
        EXPECT(0xf5, gbc.readMem(0xe7af));
        // CB F5 0305
        gbc.setState(0x5d00, 0x8291, 0x3a80, 0xf038, 0x7bc1, 0x90fc, 0x0, 0x0);
        gbc.writeMem(0x5d00, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8291, gbc.sp());
        EXPECT(0x5d02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0306
        gbc.setState(0x5b9e, 0x7fd8, 0x72d0, 0x34bc, 0x2078, 0x5cd3, 0x1, 0x0);
        gbc.writeMem(0x5b9e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7fd8, gbc.sp());
        EXPECT(0x5ba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0307
        gbc.setState(0xbda5, 0x6424, 0x31f0, 0x9896, 0x7b1, 0xdb8d, 0x1, 0x0);
        gbc.writeMem(0xbda5, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6424, gbc.sp());
        EXPECT(0xbda7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbda5));
        EXPECT(0xf5, gbc.readMem(0xbda6));
        // CB F5 0308
        gbc.setState(0x3afc, 0x1d9, 0x7fc0, 0xed71, 0x5bff, 0x9325, 0x0, 0x0);
        gbc.writeMem(0x3afc, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1d9, gbc.sp());
        EXPECT(0x3afe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0309
        gbc.setState(0x4474, 0x69ab, 0xae0, 0x6670, 0x8dda, 0x462f, 0x1, 0x1);
        gbc.writeMem(0x4474, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x69ab, gbc.sp());
        EXPECT(0x4476, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 030A
        gbc.setState(0x3e4e, 0x83ff, 0x3180, 0x2e72, 0xd06, 0xd64a, 0x1, 0x0);
        gbc.writeMem(0x3e4e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x83ff, gbc.sp());
        EXPECT(0x3e50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 030B
        gbc.setState(0x58d4, 0x565, 0x7c00, 0x7b34, 0x3052, 0x2465, 0x1, 0x0);
        gbc.writeMem(0x58d4, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x565, gbc.sp());
        EXPECT(0x58d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 030C
        gbc.setState(0xc8b6, 0xf87f, 0xd110, 0x6c64, 0xd222, 0x48d8, 0x1, 0x1);
        gbc.writeMem(0xc8b6, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf87f, gbc.sp());
        EXPECT(0xc8b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8b6));
        EXPECT(0xf5, gbc.readMem(0xc8b7));
        // CB F5 030D
        gbc.setState(0xd5c8, 0x19b5, 0x7a40, 0xba5e, 0x92d8, 0xeb4e, 0x1, 0x0);
        gbc.writeMem(0xd5c8, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x19b5, gbc.sp());
        EXPECT(0xd5ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5c8));
        EXPECT(0xf5, gbc.readMem(0xd5c9));
        // CB F5 030E
        gbc.setState(0x26ad, 0xe01f, 0xc730, 0xee1c, 0x77a1, 0x2ccb, 0x0, 0x1);
        gbc.writeMem(0x26ad, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe01f, gbc.sp());
        EXPECT(0x26af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 030F
        gbc.setState(0x97a5, 0xf06, 0x700, 0xfca8, 0x66ac, 0xf3e, 0x0, 0x1);
        gbc.writeMem(0x97a5, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf06, gbc.sp());
        EXPECT(0x97a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97a5));
        EXPECT(0xf5, gbc.readMem(0x97a6));
        // CB F5 0310
        gbc.setState(0x298d, 0x5ddb, 0xad10, 0x9926, 0x790, 0x80a3, 0x1, 0x1);
        gbc.writeMem(0x298d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5ddb, gbc.sp());
        EXPECT(0x298f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0311
        gbc.setState(0x4e4a, 0x4364, 0xf2b0, 0x1c5f, 0xb4a1, 0x364a, 0x1, 0x1);
        gbc.writeMem(0x4e4a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x4364, gbc.sp());
        EXPECT(0x4e4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0312
        gbc.setState(0x887c, 0xc699, 0x3000, 0x6459, 0x305f, 0x3679, 0x0, 0x0);
        gbc.writeMem(0x887c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc699, gbc.sp());
        EXPECT(0x887e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x887c));
        EXPECT(0xf5, gbc.readMem(0x887d));
        // CB F5 0313
        gbc.setState(0xb39, 0xaada, 0x4f80, 0xcc29, 0xda43, 0xe965, 0x0, 0x0);
        gbc.writeMem(0xb39, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xaada, gbc.sp());
        EXPECT(0xb3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0314
        gbc.setState(0x8bfa, 0x53d2, 0xe850, 0x63c9, 0xf913, 0xcf54, 0x0, 0x1);
        gbc.writeMem(0x8bfa, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x53d2, gbc.sp());
        EXPECT(0x8bfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bfa));
        EXPECT(0xf5, gbc.readMem(0x8bfb));
        // CB F5 0315
        gbc.setState(0xd906, 0xb998, 0x8080, 0x779c, 0x77b5, 0xd985, 0x0, 0x1);
        gbc.writeMem(0xd906, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb998, gbc.sp());
        EXPECT(0xd908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd906));
        EXPECT(0xf5, gbc.readMem(0xd907));
        // CB F5 0316
        gbc.setState(0x3740, 0xa8b2, 0x7df0, 0xb240, 0x8e2e, 0x3a7e, 0x0, 0x1);
        gbc.writeMem(0x3740, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa8b2, gbc.sp());
        EXPECT(0x3742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0317
        gbc.setState(0x8a1e, 0x82f, 0xf8c0, 0x3955, 0xb9e4, 0xd42b, 0x1, 0x1);
        gbc.writeMem(0x8a1e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x82f, gbc.sp());
        EXPECT(0x8a20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a1e));
        EXPECT(0xf5, gbc.readMem(0x8a1f));
        // CB F5 0318
        gbc.setState(0xbd81, 0x7a0d, 0x5d00, 0xef84, 0x56bd, 0x714c, 0x0, 0x0);
        gbc.writeMem(0xbd81, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7a0d, gbc.sp());
        EXPECT(0xbd83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd81));
        EXPECT(0xf5, gbc.readMem(0xbd82));
        // CB F5 0319
        gbc.setState(0x304b, 0xfd7a, 0xf860, 0x4670, 0xd475, 0x8aec, 0x1, 0x0);
        gbc.writeMem(0x304b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfd7a, gbc.sp());
        EXPECT(0x304d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 031A
        gbc.setState(0xc69f, 0xf507, 0x96f0, 0x181a, 0xb226, 0xb1a1, 0x0, 0x1);
        gbc.writeMem(0xc69f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf507, gbc.sp());
        EXPECT(0xc6a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc69f));
        EXPECT(0xf5, gbc.readMem(0xc6a0));
        // CB F5 031B
        gbc.setState(0x24, 0x467b, 0x73d0, 0x56e6, 0x4c89, 0xbf6, 0x1, 0x1);
        gbc.writeMem(0x24, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x467b, gbc.sp());
        EXPECT(0x26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 031C
        gbc.setState(0x2714, 0x3512, 0xfce0, 0xefc3, 0xa90f, 0x117b, 0x0, 0x0);
        gbc.writeMem(0x2714, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3512, gbc.sp());
        EXPECT(0x2716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 031D
        gbc.setState(0xcf6, 0x9db4, 0x3150, 0xb849, 0x3e13, 0x2981, 0x0, 0x1);
        gbc.writeMem(0xcf6, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9db4, gbc.sp());
        EXPECT(0xcf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 031E
        gbc.setState(0x9a4, 0xce7b, 0xa3e0, 0x6c5b, 0x3d08, 0xc742, 0x0, 0x1);
        gbc.writeMem(0x9a4, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xce7b, gbc.sp());
        EXPECT(0x9a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 031F
        gbc.setState(0xa748, 0x6836, 0x4780, 0x7702, 0x7683, 0xca66, 0x0, 0x0);
        gbc.writeMem(0xa748, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6836, gbc.sp());
        EXPECT(0xa74a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa748));
        EXPECT(0xf5, gbc.readMem(0xa749));
        // CB F5 0320
        gbc.setState(0x8d3d, 0x1af1, 0xc360, 0xd083, 0x6ed6, 0xc4e0, 0x1, 0x0);
        gbc.writeMem(0x8d3d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1af1, gbc.sp());
        EXPECT(0x8d3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d3d));
        EXPECT(0xf5, gbc.readMem(0x8d3e));
        // CB F5 0321
        gbc.setState(0x717, 0x180f, 0xe280, 0xef6a, 0x7ffb, 0xba1e, 0x1, 0x0);
        gbc.writeMem(0x717, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x180f, gbc.sp());
        EXPECT(0x719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0322
        gbc.setState(0xcddd, 0x7f99, 0xdb00, 0x348b, 0xd771, 0xba5f, 0x1, 0x1);
        gbc.writeMem(0xcddd, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7f99, gbc.sp());
        EXPECT(0xcddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcddd));
        EXPECT(0xf5, gbc.readMem(0xcdde));
        // CB F5 0323
        gbc.setState(0x9f72, 0x6c12, 0xea40, 0xee42, 0x51c0, 0x19cb, 0x1, 0x1);
        gbc.writeMem(0x9f72, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6c12, gbc.sp());
        EXPECT(0x9f74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f72));
        EXPECT(0xf5, gbc.readMem(0x9f73));
        // CB F5 0324
        gbc.setState(0x6e19, 0x864e, 0xeea0, 0x8166, 0x122c, 0x926f, 0x0, 0x1);
        gbc.writeMem(0x6e19, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x864e, gbc.sp());
        EXPECT(0x6e1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0325
        gbc.setState(0x7a5d, 0xae2f, 0x9080, 0x8f6e, 0x1737, 0xba13, 0x1, 0x1);
        gbc.writeMem(0x7a5d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xae2f, gbc.sp());
        EXPECT(0x7a5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0326
        gbc.setState(0xe516, 0x46e3, 0x3340, 0x7350, 0x67f8, 0x7059, 0x0, 0x1);
        gbc.writeMem(0xe516, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x46e3, gbc.sp());
        EXPECT(0xe518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe516));
        EXPECT(0xf5, gbc.readMem(0xe517));
        // CB F5 0327
        gbc.setState(0xb8b0, 0x5de4, 0x4e70, 0x953f, 0x5a12, 0x7259, 0x0, 0x1);
        gbc.writeMem(0xb8b0, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5de4, gbc.sp());
        EXPECT(0xb8b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8b0));
        EXPECT(0xf5, gbc.readMem(0xb8b1));
        // CB F5 0328
        gbc.setState(0x47a, 0xdb38, 0x5470, 0xc19f, 0x9282, 0x8fc9, 0x0, 0x0);
        gbc.writeMem(0x47a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdb38, gbc.sp());
        EXPECT(0x47c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0329
        gbc.setState(0x9b97, 0x15f5, 0x9420, 0xe84b, 0xbabc, 0x44cd, 0x0, 0x1);
        gbc.writeMem(0x9b97, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x15f5, gbc.sp());
        EXPECT(0x9b99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b97));
        EXPECT(0xf5, gbc.readMem(0x9b98));
        // CB F5 032A
        gbc.setState(0xe8e0, 0x9723, 0x4a60, 0xbec9, 0xf18c, 0x5f82, 0x1, 0x1);
        gbc.writeMem(0xe8e0, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9723, gbc.sp());
        EXPECT(0xe8e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8e0));
        EXPECT(0xf5, gbc.readMem(0xe8e1));
        // CB F5 032B
        gbc.setState(0x7ca6, 0xb2cb, 0xd650, 0x2b8, 0xa3cf, 0xbd1f, 0x1, 0x1);
        gbc.writeMem(0x7ca6, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb2cb, gbc.sp());
        EXPECT(0x7ca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 032C
        gbc.setState(0x4c1e, 0x6226, 0x3430, 0xa161, 0x8be1, 0x60e9, 0x1, 0x0);
        gbc.writeMem(0x4c1e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6226, gbc.sp());
        EXPECT(0x4c20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 032D
        gbc.setState(0x61ff, 0x9df7, 0x5c50, 0x8cbc, 0x2d3c, 0x9646, 0x0, 0x0);
        gbc.writeMem(0x61ff, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9df7, gbc.sp());
        EXPECT(0x6201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 032E
        gbc.setState(0x2513, 0x61c5, 0xe7d0, 0xf154, 0xb4b4, 0x3ecd, 0x0, 0x1);
        gbc.writeMem(0x2513, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x61c5, gbc.sp());
        EXPECT(0x2515, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 032F
        gbc.setState(0xd50c, 0x1ebc, 0x3c80, 0x1ce5, 0x7441, 0xdb32, 0x0, 0x1);
        gbc.writeMem(0xd50c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1ebc, gbc.sp());
        EXPECT(0xd50e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd50c));
        EXPECT(0xf5, gbc.readMem(0xd50d));
        // CB F5 0330
        gbc.setState(0x851c, 0x82a1, 0xc9e0, 0x9632, 0xed29, 0xd352, 0x1, 0x1);
        gbc.writeMem(0x851c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x82a1, gbc.sp());
        EXPECT(0x851e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x851c));
        EXPECT(0xf5, gbc.readMem(0x851d));
        // CB F5 0331
        gbc.setState(0x7143, 0xc3ee, 0xeb0, 0x1a77, 0xd225, 0xbd8a, 0x0, 0x0);
        gbc.writeMem(0x7143, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc3ee, gbc.sp());
        EXPECT(0x7145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0332
        gbc.setState(0xcab, 0x8644, 0xbf30, 0x1c29, 0xa7a0, 0x1157, 0x0, 0x0);
        gbc.writeMem(0xcab, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8644, gbc.sp());
        EXPECT(0xcad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0333
        gbc.setState(0x9456, 0x90f6, 0x7bd0, 0xd540, 0x30f1, 0x1e7e, 0x0, 0x0);
        gbc.writeMem(0x9456, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x90f6, gbc.sp());
        EXPECT(0x9458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9456));
        EXPECT(0xf5, gbc.readMem(0x9457));
        // CB F5 0334
        gbc.setState(0xaa96, 0xc890, 0x2130, 0xe18c, 0x3323, 0x4c29, 0x1, 0x1);
        gbc.writeMem(0xaa96, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc890, gbc.sp());
        EXPECT(0xaa98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa96));
        EXPECT(0xf5, gbc.readMem(0xaa97));
        // CB F5 0335
        gbc.setState(0xee85, 0xa770, 0xe380, 0x8f61, 0x684, 0x210c, 0x0, 0x1);
        gbc.writeMem(0xee85, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa770, gbc.sp());
        EXPECT(0xee87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee85));
        EXPECT(0xf5, gbc.readMem(0xee86));
        // CB F5 0336
        gbc.setState(0x2ca8, 0xd626, 0x8850, 0x36ce, 0x8b5e, 0x9685, 0x0, 0x1);
        gbc.writeMem(0x2ca8, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd626, gbc.sp());
        EXPECT(0x2caa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0337
        gbc.setState(0xe942, 0xc5eb, 0xb840, 0x3dc1, 0xf3a5, 0x7ecc, 0x0, 0x0);
        gbc.writeMem(0xe942, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc5eb, gbc.sp());
        EXPECT(0xe944, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe942));
        EXPECT(0xf5, gbc.readMem(0xe943));
        // CB F5 0338
        gbc.setState(0xb373, 0x4072, 0x9af0, 0xee2b, 0x9257, 0x6eb2, 0x1, 0x0);
        gbc.writeMem(0xb373, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4072, gbc.sp());
        EXPECT(0xb375, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb373));
        EXPECT(0xf5, gbc.readMem(0xb374));
        // CB F5 0339
        gbc.setState(0xdd97, 0x953a, 0x82c0, 0xa82d, 0x584c, 0xd8c2, 0x1, 0x1);
        gbc.writeMem(0xdd97, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x953a, gbc.sp());
        EXPECT(0xdd99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd97));
        EXPECT(0xf5, gbc.readMem(0xdd98));
        // CB F5 033A
        gbc.setState(0x4551, 0xda07, 0x2e50, 0x6562, 0x5bd9, 0x91a1, 0x1, 0x0);
        gbc.writeMem(0x4551, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xda07, gbc.sp());
        EXPECT(0x4553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 033B
        gbc.setState(0x564d, 0x83a2, 0x4480, 0xe6d1, 0xd9a9, 0x5267, 0x0, 0x1);
        gbc.writeMem(0x564d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x83a2, gbc.sp());
        EXPECT(0x564f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 033C
        gbc.setState(0x155a, 0x1d95, 0x6f60, 0x2f1d, 0x2f4f, 0xefd7, 0x0, 0x1);
        gbc.writeMem(0x155a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1d95, gbc.sp());
        EXPECT(0x155c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 033D
        gbc.setState(0xa30d, 0x884c, 0xca80, 0xe0d9, 0xface, 0x2cf0, 0x1, 0x0);
        gbc.writeMem(0xa30d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x884c, gbc.sp());
        EXPECT(0xa30f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa30d));
        EXPECT(0xf5, gbc.readMem(0xa30e));
        // CB F5 033E
        gbc.setState(0xbb2f, 0xb8f2, 0xec0, 0x9140, 0xbf69, 0xacf0, 0x1, 0x0);
        gbc.writeMem(0xbb2f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb8f2, gbc.sp());
        EXPECT(0xbb31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb2f));
        EXPECT(0xf5, gbc.readMem(0xbb30));
        // CB F5 033F
        gbc.setState(0xac93, 0x7295, 0x280, 0x3f85, 0xe92c, 0x5fcb, 0x1, 0x1);
        gbc.writeMem(0xac93, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7295, gbc.sp());
        EXPECT(0xac95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac93));
        EXPECT(0xf5, gbc.readMem(0xac94));
        // CB F5 0340
        gbc.setState(0x3851, 0x55d3, 0x3500, 0xf0e4, 0xbbe4, 0x7ae0, 0x0, 0x0);
        gbc.writeMem(0x3851, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x55d3, gbc.sp());
        EXPECT(0x3853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0341
        gbc.setState(0x71fc, 0x7419, 0x29d0, 0x7d09, 0x5cfa, 0xb54c, 0x1, 0x1);
        gbc.writeMem(0x71fc, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7419, gbc.sp());
        EXPECT(0x71fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0342
        gbc.setState(0x56f9, 0x7b19, 0xe7c0, 0x7706, 0xb21f, 0x228d, 0x1, 0x1);
        gbc.writeMem(0x56f9, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7b19, gbc.sp());
        EXPECT(0x56fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0343
        gbc.setState(0xc471, 0x68f7, 0xb940, 0xc5be, 0xb27c, 0xe4eb, 0x1, 0x0);
        gbc.writeMem(0xc471, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x68f7, gbc.sp());
        EXPECT(0xc473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc471));
        EXPECT(0xf5, gbc.readMem(0xc472));
        // CB F5 0344
        gbc.setState(0x115, 0x8be4, 0xdba0, 0xfd29, 0x2e2c, 0x7b90, 0x0, 0x1);
        gbc.writeMem(0x115, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8be4, gbc.sp());
        EXPECT(0x117, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0345
        gbc.setState(0x1ad6, 0xe6cd, 0x5120, 0x795d, 0x36e2, 0x763, 0x0, 0x1);
        gbc.writeMem(0x1ad6, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe6cd, gbc.sp());
        EXPECT(0x1ad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0346
        gbc.setState(0x3f1a, 0xcb9d, 0xd7c0, 0x781f, 0x88d3, 0x99d8, 0x1, 0x0);
        gbc.writeMem(0x3f1a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcb9d, gbc.sp());
        EXPECT(0x3f1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0347
        gbc.setState(0x27a5, 0x4920, 0xe40, 0x95b3, 0xd728, 0xa0d7, 0x1, 0x1);
        gbc.writeMem(0x27a5, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4920, gbc.sp());
        EXPECT(0x27a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0348
        gbc.setState(0x1ebf, 0x73cf, 0x64b0, 0x9063, 0xd0b2, 0x8b43, 0x0, 0x1);
        gbc.writeMem(0x1ebf, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x73cf, gbc.sp());
        EXPECT(0x1ec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0349
        gbc.setState(0xbc69, 0x90d, 0xa940, 0xf321, 0xbfdf, 0x91a0, 0x1, 0x1);
        gbc.writeMem(0xbc69, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x90d, gbc.sp());
        EXPECT(0xbc6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc69));
        EXPECT(0xf5, gbc.readMem(0xbc6a));
        // CB F5 034A
        gbc.setState(0xb9d2, 0x11e1, 0x51c0, 0xffe, 0x5dc, 0x2b0d, 0x0, 0x1);
        gbc.writeMem(0xb9d2, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x11e1, gbc.sp());
        EXPECT(0xb9d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9d2));
        EXPECT(0xf5, gbc.readMem(0xb9d3));
        // CB F5 034B
        gbc.setState(0x95d4, 0x6c26, 0x1430, 0xdfc8, 0x227f, 0x7214, 0x0, 0x1);
        gbc.writeMem(0x95d4, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6c26, gbc.sp());
        EXPECT(0x95d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95d4));
        EXPECT(0xf5, gbc.readMem(0x95d5));
        // CB F5 034D
        gbc.setState(0x612c, 0x1293, 0x9e20, 0xdba4, 0x165d, 0x6f95, 0x0, 0x1);
        gbc.writeMem(0x612c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1293, gbc.sp());
        EXPECT(0x612e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 034E
        gbc.setState(0x6333, 0x158a, 0xa20, 0x68e7, 0xe220, 0xa57f, 0x1, 0x1);
        gbc.writeMem(0x6333, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x158a, gbc.sp());
        EXPECT(0x6335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 034F
        gbc.setState(0x6427, 0x2353, 0xe8f0, 0x2388, 0xca48, 0xc9f1, 0x0, 0x0);
        gbc.writeMem(0x6427, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2353, gbc.sp());
        EXPECT(0x6429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0350
        gbc.setState(0xba8e, 0xdd99, 0xfa20, 0xe9ba, 0xdc2a, 0x980b, 0x1, 0x0);
        gbc.writeMem(0xba8e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xdd99, gbc.sp());
        EXPECT(0xba90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba8e));
        EXPECT(0xf5, gbc.readMem(0xba8f));
        // CB F5 0351
        gbc.setState(0x134, 0xa6b2, 0x79b0, 0xc3c8, 0x84ca, 0xd257, 0x1, 0x0);
        gbc.writeMem(0x134, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa6b2, gbc.sp());
        EXPECT(0x136, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0352
        gbc.setState(0xcf6d, 0xe8dc, 0x9290, 0xd7ae, 0xe9f4, 0x5b94, 0x1, 0x0);
        gbc.writeMem(0xcf6d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe8dc, gbc.sp());
        EXPECT(0xcf6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf6d));
        EXPECT(0xf5, gbc.readMem(0xcf6e));
        // CB F5 0353
        gbc.setState(0x6c6c, 0x7f32, 0xc0e0, 0xbd02, 0x6a28, 0xd424, 0x1, 0x1);
        gbc.writeMem(0x6c6c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7f32, gbc.sp());
        EXPECT(0x6c6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0354
        gbc.setState(0x47f3, 0xc763, 0xbca0, 0xe117, 0xf9a8, 0x9400, 0x1, 0x1);
        gbc.writeMem(0x47f3, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc763, gbc.sp());
        EXPECT(0x47f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0355
        gbc.setState(0x16d7, 0x6f81, 0x6720, 0xa4f8, 0xfee6, 0xf49, 0x1, 0x1);
        gbc.writeMem(0x16d7, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6f81, gbc.sp());
        EXPECT(0x16d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0356
        gbc.setState(0x6a62, 0xd935, 0xf0a0, 0xed74, 0x3f60, 0xd4e2, 0x0, 0x0);
        gbc.writeMem(0x6a62, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd935, gbc.sp());
        EXPECT(0x6a64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0357
        gbc.setState(0x9bfa, 0xef9d, 0xf6b0, 0x54dd, 0x4509, 0x5fe4, 0x1, 0x1);
        gbc.writeMem(0x9bfa, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xef9d, gbc.sp());
        EXPECT(0x9bfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bfa));
        EXPECT(0xf5, gbc.readMem(0x9bfb));
        // CB F5 0358
        gbc.setState(0xbd96, 0xb398, 0xc6f0, 0x21b2, 0x9029, 0xf118, 0x1, 0x0);
        gbc.writeMem(0xbd96, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb398, gbc.sp());
        EXPECT(0xbd98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd96));
        EXPECT(0xf5, gbc.readMem(0xbd97));
        // CB F5 0359
        gbc.setState(0x780, 0x3cca, 0x3bc0, 0xd832, 0x425b, 0xe65d, 0x0, 0x0);
        gbc.writeMem(0x780, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3cca, gbc.sp());
        EXPECT(0x782, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 035A
        gbc.setState(0x9386, 0x1a9b, 0x5b30, 0xae35, 0xa0d9, 0x52f7, 0x0, 0x1);
        gbc.writeMem(0x9386, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1a9b, gbc.sp());
        EXPECT(0x9388, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9386));
        EXPECT(0xf5, gbc.readMem(0x9387));
        // CB F5 035B
        gbc.setState(0xb8a4, 0x569a, 0x5b30, 0x51fe, 0x8f65, 0x4ea3, 0x1, 0x0);
        gbc.writeMem(0xb8a4, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x569a, gbc.sp());
        EXPECT(0xb8a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8a4));
        EXPECT(0xf5, gbc.readMem(0xb8a5));
        // CB F5 035C
        gbc.setState(0x83ee, 0x3477, 0x7b30, 0x50b9, 0x178d, 0x6123, 0x0, 0x1);
        gbc.writeMem(0x83ee, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3477, gbc.sp());
        EXPECT(0x83f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83ee));
        EXPECT(0xf5, gbc.readMem(0x83ef));
        // CB F5 035D
        gbc.setState(0xc6d1, 0x9e1a, 0xb830, 0x36fa, 0x356f, 0x92b3, 0x1, 0x0);
        gbc.writeMem(0xc6d1, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9e1a, gbc.sp());
        EXPECT(0xc6d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6d1));
        EXPECT(0xf5, gbc.readMem(0xc6d2));
        // CB F5 035E
        gbc.setState(0xef54, 0x7647, 0x5d80, 0x164d, 0x1221, 0x1c27, 0x0, 0x1);
        gbc.writeMem(0xef54, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7647, gbc.sp());
        EXPECT(0xef56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef54));
        EXPECT(0xf5, gbc.readMem(0xef55));
        // CB F5 035F
        gbc.setState(0x9fc0, 0x46f3, 0x6fa0, 0xa3e2, 0x64c3, 0xa844, 0x1, 0x0);
        gbc.writeMem(0x9fc0, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x46f3, gbc.sp());
        EXPECT(0x9fc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fc0));
        EXPECT(0xf5, gbc.readMem(0x9fc1));
        // CB F5 0360
        gbc.setState(0xab33, 0xb9e7, 0x11b0, 0x2d50, 0x7606, 0xdc4b, 0x1, 0x1);
        gbc.writeMem(0xab33, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb9e7, gbc.sp());
        EXPECT(0xab35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab33));
        EXPECT(0xf5, gbc.readMem(0xab34));
        // CB F5 0361
        gbc.setState(0x4c93, 0xcd23, 0x9820, 0xd527, 0x823f, 0xeaf6, 0x1, 0x1);
        gbc.writeMem(0x4c93, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xcd23, gbc.sp());
        EXPECT(0x4c95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0362
        gbc.setState(0xa705, 0x66ce, 0xf950, 0xe92, 0x9b4f, 0x3ba7, 0x1, 0x0);
        gbc.writeMem(0xa705, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x66ce, gbc.sp());
        EXPECT(0xa707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa705));
        EXPECT(0xf5, gbc.readMem(0xa706));
        // CB F5 0363
        gbc.setState(0x62e, 0x7257, 0xe420, 0xca07, 0xc64c, 0x3a06, 0x0, 0x0);
        gbc.writeMem(0x62e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7257, gbc.sp());
        EXPECT(0x630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0364
        gbc.setState(0x4a31, 0x2753, 0xc430, 0x6843, 0xcb17, 0xdd37, 0x1, 0x1);
        gbc.writeMem(0x4a31, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2753, gbc.sp());
        EXPECT(0x4a33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0365
        gbc.setState(0x1569, 0x3f97, 0xf930, 0xad9, 0xe3db, 0xcbfa, 0x0, 0x0);
        gbc.writeMem(0x1569, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3f97, gbc.sp());
        EXPECT(0x156b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0366
        gbc.setState(0x592c, 0x8de8, 0xf350, 0x1ff, 0x7eb1, 0x6793, 0x0, 0x0);
        gbc.writeMem(0x592c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8de8, gbc.sp());
        EXPECT(0x592e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0367
        gbc.setState(0x2fd9, 0x4f6f, 0x4790, 0x640f, 0x8e16, 0xace6, 0x0, 0x0);
        gbc.writeMem(0x2fd9, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4f6f, gbc.sp());
        EXPECT(0x2fdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0368
        gbc.setState(0xc583, 0xf800, 0x1200, 0x35bb, 0x54e4, 0xfaef, 0x0, 0x1);
        gbc.writeMem(0xc583, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf800, gbc.sp());
        EXPECT(0xc585, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc583));
        EXPECT(0xf5, gbc.readMem(0xc584));
        // CB F5 0369
        gbc.setState(0x59bd, 0x718f, 0x5530, 0x88f3, 0xe0ff, 0xbeab, 0x1, 0x0);
        gbc.writeMem(0x59bd, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x718f, gbc.sp());
        EXPECT(0x59bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 036A
        gbc.setState(0xc2cc, 0x4b3, 0xd380, 0x29f, 0xf3d0, 0xb307, 0x1, 0x0);
        gbc.writeMem(0xc2cc, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4b3, gbc.sp());
        EXPECT(0xc2ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2cc));
        EXPECT(0xf5, gbc.readMem(0xc2cd));
        // CB F5 036B
        gbc.setState(0xa6ae, 0x3b24, 0xa4f0, 0x6c1e, 0x9bd1, 0xb9bb, 0x0, 0x0);
        gbc.writeMem(0xa6ae, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3b24, gbc.sp());
        EXPECT(0xa6b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6ae));
        EXPECT(0xf5, gbc.readMem(0xa6af));
        // CB F5 036C
        gbc.setState(0x8d3c, 0x9b90, 0x39f0, 0x6450, 0x4fd5, 0x30d5, 0x1, 0x1);
        gbc.writeMem(0x8d3c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9b90, gbc.sp());
        EXPECT(0x8d3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d3c));
        EXPECT(0xf5, gbc.readMem(0x8d3d));
        // CB F5 036D
        gbc.setState(0xdcad, 0x2653, 0x3210, 0x86c6, 0xca18, 0x7420, 0x0, 0x1);
        gbc.writeMem(0xdcad, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2653, gbc.sp());
        EXPECT(0xdcaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcad));
        EXPECT(0xf5, gbc.readMem(0xdcae));
        // CB F5 036E
        gbc.setState(0xbb7e, 0x39d0, 0x22e0, 0xc9bf, 0x6011, 0x80c8, 0x0, 0x1);
        gbc.writeMem(0xbb7e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x39d0, gbc.sp());
        EXPECT(0xbb80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb7e));
        EXPECT(0xf5, gbc.readMem(0xbb7f));
        // CB F5 036F
        gbc.setState(0x7958, 0xc32f, 0x5350, 0xb29b, 0x3c6b, 0xb545, 0x0, 0x0);
        gbc.writeMem(0x7958, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc32f, gbc.sp());
        EXPECT(0x795a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0370
        gbc.setState(0xeaf3, 0x9ef2, 0x59d0, 0xa9f8, 0xe8b9, 0xa4f5, 0x1, 0x1);
        gbc.writeMem(0xeaf3, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9ef2, gbc.sp());
        EXPECT(0xeaf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaf3));
        EXPECT(0xf5, gbc.readMem(0xeaf4));
        // CB F5 0371
        gbc.setState(0xc473, 0xeb53, 0xbbb0, 0x865e, 0xc338, 0xdf3f, 0x1, 0x1);
        gbc.writeMem(0xc473, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xeb53, gbc.sp());
        EXPECT(0xc475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc473));
        EXPECT(0xf5, gbc.readMem(0xc474));
        // CB F5 0372
        gbc.setState(0x3af7, 0x6c59, 0x2da0, 0x8e48, 0x1f03, 0x92e1, 0x1, 0x0);
        gbc.writeMem(0x3af7, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6c59, gbc.sp());
        EXPECT(0x3af9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0373
        gbc.setState(0xa8b7, 0x4222, 0xaf90, 0x38d1, 0x7958, 0x9826, 0x1, 0x1);
        gbc.writeMem(0xa8b7, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4222, gbc.sp());
        EXPECT(0xa8b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8b7));
        EXPECT(0xf5, gbc.readMem(0xa8b8));
        // CB F5 0374
        gbc.setState(0xe5b4, 0x736, 0x7cb0, 0x6057, 0x3842, 0x9e39, 0x0, 0x1);
        gbc.writeMem(0xe5b4, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x736, gbc.sp());
        EXPECT(0xe5b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5b4));
        EXPECT(0xf5, gbc.readMem(0xe5b5));
        // CB F5 0375
        gbc.setState(0x970e, 0x3d46, 0xcfe0, 0x5249, 0xd352, 0x5faa, 0x0, 0x1);
        gbc.writeMem(0x970e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3d46, gbc.sp());
        EXPECT(0x9710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x970e));
        EXPECT(0xf5, gbc.readMem(0x970f));
        // CB F5 0376
        gbc.setState(0x70e4, 0xfabf, 0x2880, 0x9eb2, 0xc706, 0x827d, 0x1, 0x1);
        gbc.writeMem(0x70e4, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfabf, gbc.sp());
        EXPECT(0x70e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0377
        gbc.setState(0x5113, 0xfa, 0x7f10, 0xf9d3, 0x2499, 0x3cb2, 0x0, 0x0);
        gbc.writeMem(0x5113, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xfa, gbc.sp());
        EXPECT(0x5115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0378
        gbc.setState(0x8db4, 0x3a57, 0x750, 0xeefc, 0xfd65, 0xfd33, 0x0, 0x0);
        gbc.writeMem(0x8db4, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3a57, gbc.sp());
        EXPECT(0x8db6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8db4));
        EXPECT(0xf5, gbc.readMem(0x8db5));
        // CB F5 0379
        gbc.setState(0x9b2d, 0x8b7e, 0x7d20, 0x425e, 0x811c, 0x4cd, 0x0, 0x1);
        gbc.writeMem(0x9b2d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8b7e, gbc.sp());
        EXPECT(0x9b2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b2d));
        EXPECT(0xf5, gbc.readMem(0x9b2e));
        // CB F5 037A
        gbc.setState(0xdc99, 0x7d4, 0xefc0, 0xe5c5, 0xcaa1, 0x332b, 0x0, 0x0);
        gbc.writeMem(0xdc99, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7d4, gbc.sp());
        EXPECT(0xdc9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc99));
        EXPECT(0xf5, gbc.readMem(0xdc9a));
        // CB F5 037B
        gbc.setState(0x7689, 0xe056, 0x11a0, 0x3921, 0x6d35, 0x555f, 0x0, 0x1);
        gbc.writeMem(0x7689, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe056, gbc.sp());
        EXPECT(0x768b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 037C
        gbc.setState(0x1f06, 0xebcc, 0xc660, 0xe013, 0x5633, 0xcb1f, 0x1, 0x0);
        gbc.writeMem(0x1f06, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xebcc, gbc.sp());
        EXPECT(0x1f08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 037D
        gbc.setState(0x8c4, 0xbe3b, 0x6680, 0xaf3f, 0xc22e, 0xfbbc, 0x1, 0x0);
        gbc.writeMem(0x8c4, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbe3b, gbc.sp());
        EXPECT(0x8c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 037E
        gbc.setState(0x8bba, 0x9ffd, 0xead0, 0x2f85, 0x4a10, 0xe3e1, 0x0, 0x1);
        gbc.writeMem(0x8bba, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9ffd, gbc.sp());
        EXPECT(0x8bbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bba));
        EXPECT(0xf5, gbc.readMem(0x8bbb));
        // CB F5 037F
        gbc.setState(0xa8e3, 0x6405, 0xa960, 0x83b6, 0x8658, 0xbe87, 0x0, 0x0);
        gbc.writeMem(0xa8e3, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6405, gbc.sp());
        EXPECT(0xa8e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8e3));
        EXPECT(0xf5, gbc.readMem(0xa8e4));
        // CB F5 0380
        gbc.setState(0xc14c, 0xf90e, 0x4eb0, 0x77db, 0xe120, 0x25b2, 0x0, 0x0);
        gbc.writeMem(0xc14c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf90e, gbc.sp());
        EXPECT(0xc14e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc14c));
        EXPECT(0xf5, gbc.readMem(0xc14d));
        // CB F5 0381
        gbc.setState(0x33c, 0xdfb8, 0xc580, 0x15f5, 0x538a, 0xe3f0, 0x0, 0x0);
        gbc.writeMem(0x33c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xdfb8, gbc.sp());
        EXPECT(0x33e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0382
        gbc.setState(0x18f1, 0x19fc, 0xdb40, 0x84b, 0x70e3, 0x8742, 0x1, 0x0);
        gbc.writeMem(0x18f1, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x19fc, gbc.sp());
        EXPECT(0x18f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0383
        gbc.setState(0x8519, 0x59d1, 0x82d0, 0x2bf3, 0x63b5, 0xf5e2, 0x1, 0x1);
        gbc.writeMem(0x8519, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x59d1, gbc.sp());
        EXPECT(0x851b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8519));
        EXPECT(0xf5, gbc.readMem(0x851a));
        // CB F5 0384
        gbc.setState(0x197d, 0x5e08, 0x5670, 0x59b2, 0x8d82, 0x2a9a, 0x0, 0x1);
        gbc.writeMem(0x197d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5e08, gbc.sp());
        EXPECT(0x197f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0385
        gbc.setState(0x675b, 0xef5f, 0x44e0, 0x1323, 0xc496, 0xa82d, 0x0, 0x0);
        gbc.writeMem(0x675b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xef5f, gbc.sp());
        EXPECT(0x675d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0386
        gbc.setState(0xb293, 0x33b8, 0x5e20, 0x4fe7, 0x406a, 0x81db, 0x0, 0x0);
        gbc.writeMem(0xb293, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x33b8, gbc.sp());
        EXPECT(0xb295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb293));
        EXPECT(0xf5, gbc.readMem(0xb294));
        // CB F5 0387
        gbc.setState(0xa087, 0x537f, 0x3730, 0xcc4b, 0x2244, 0x92af, 0x0, 0x0);
        gbc.writeMem(0xa087, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x537f, gbc.sp());
        EXPECT(0xa089, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa087));
        EXPECT(0xf5, gbc.readMem(0xa088));
        // CB F5 0388
        gbc.setState(0x1f36, 0xa576, 0x2880, 0xdd58, 0xa840, 0xe96a, 0x1, 0x1);
        gbc.writeMem(0x1f36, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa576, gbc.sp());
        EXPECT(0x1f38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0389
        gbc.setState(0xdb08, 0x8667, 0xd950, 0x299b, 0x4622, 0x65d3, 0x1, 0x0);
        gbc.writeMem(0xdb08, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8667, gbc.sp());
        EXPECT(0xdb0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb08));
        EXPECT(0xf5, gbc.readMem(0xdb09));
        // CB F5 038A
        gbc.setState(0x72bd, 0x6fe2, 0x9340, 0x6558, 0x3f2a, 0x8d10, 0x1, 0x0);
        gbc.writeMem(0x72bd, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6fe2, gbc.sp());
        EXPECT(0x72bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 038B
        gbc.setState(0x7494, 0x8156, 0xb7d0, 0xc257, 0x41e1, 0x4c53, 0x0, 0x0);
        gbc.writeMem(0x7494, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8156, gbc.sp());
        EXPECT(0x7496, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 038C
        gbc.setState(0x5e9f, 0x7f59, 0x9860, 0x2995, 0x761c, 0xe232, 0x0, 0x0);
        gbc.writeMem(0x5e9f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7f59, gbc.sp());
        EXPECT(0x5ea1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 038E
        gbc.setState(0xd, 0x989c, 0x3330, 0x8b43, 0xd023, 0xfa88, 0x1, 0x0);
        gbc.writeMem(0xd, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x989c, gbc.sp());
        EXPECT(0xf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 038F
        gbc.setState(0xda45, 0xafae, 0xcce0, 0x695e, 0xa14d, 0xd940, 0x0, 0x1);
        gbc.writeMem(0xda45, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xafae, gbc.sp());
        EXPECT(0xda47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda45));
        EXPECT(0xf5, gbc.readMem(0xda46));
        // CB F5 0390
        gbc.setState(0x5480, 0x61c7, 0x6770, 0xb055, 0x5b8, 0x84d6, 0x0, 0x1);
        gbc.writeMem(0x5480, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x61c7, gbc.sp());
        EXPECT(0x5482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0391
        gbc.setState(0xe9ed, 0xfbe7, 0x830, 0x6e06, 0xac63, 0x847a, 0x1, 0x0);
        gbc.writeMem(0xe9ed, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xfbe7, gbc.sp());
        EXPECT(0xe9ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ed));
        EXPECT(0xf5, gbc.readMem(0xe9ee));
        // CB F5 0392
        gbc.setState(0x2672, 0x9870, 0x1f20, 0xceaa, 0xc604, 0xd05b, 0x0, 0x1);
        gbc.writeMem(0x2672, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9870, gbc.sp());
        EXPECT(0x2674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0393
        gbc.setState(0xdc9d, 0x56d0, 0xb420, 0xda5a, 0x6bcd, 0x60d7, 0x1, 0x0);
        gbc.writeMem(0xdc9d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x56d0, gbc.sp());
        EXPECT(0xdc9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc9d));
        EXPECT(0xf5, gbc.readMem(0xdc9e));
        // CB F5 0394
        gbc.setState(0xa543, 0x8d93, 0x8a40, 0x1059, 0xa23a, 0xf1a1, 0x0, 0x0);
        gbc.writeMem(0xa543, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8d93, gbc.sp());
        EXPECT(0xa545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa543));
        EXPECT(0xf5, gbc.readMem(0xa544));
        // CB F5 0395
        gbc.setState(0xddc7, 0x4525, 0xe510, 0x1854, 0xa7e9, 0x9775, 0x0, 0x1);
        gbc.writeMem(0xddc7, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4525, gbc.sp());
        EXPECT(0xddc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddc7));
        EXPECT(0xf5, gbc.readMem(0xddc8));
        // CB F5 0396
        gbc.setState(0x477, 0xdaaf, 0xf420, 0xf50a, 0xeb97, 0xd38, 0x0, 0x1);
        gbc.writeMem(0x477, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xdaaf, gbc.sp());
        EXPECT(0x479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0397
        gbc.setState(0x3a0, 0xbd4e, 0x2d10, 0x1764, 0x7ccf, 0x7bd1, 0x0, 0x1);
        gbc.writeMem(0x3a0, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xbd4e, gbc.sp());
        EXPECT(0x3a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 0398
        gbc.setState(0x1048, 0xb290, 0x7e40, 0xd0c7, 0xed5d, 0x5a5e, 0x1, 0x1);
        gbc.writeMem(0x1048, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb290, gbc.sp());
        EXPECT(0x104a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 0399
        gbc.setState(0xd539, 0xa3a5, 0xad30, 0xbb3a, 0xa467, 0x6ca0, 0x0, 0x0);
        gbc.writeMem(0xd539, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa3a5, gbc.sp());
        EXPECT(0xd53b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd539));
        EXPECT(0xf5, gbc.readMem(0xd53a));
        // CB F5 039A
        gbc.setState(0xc0c9, 0xfe06, 0x8370, 0xd4f2, 0x51df, 0xe5b9, 0x0, 0x1);
        gbc.writeMem(0xc0c9, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfe06, gbc.sp());
        EXPECT(0xc0cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0c9));
        EXPECT(0xf5, gbc.readMem(0xc0ca));
        // CB F5 039B
        gbc.setState(0x561b, 0xc4bc, 0x8180, 0x8167, 0xa78b, 0x96f4, 0x1, 0x1);
        gbc.writeMem(0x561b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc4bc, gbc.sp());
        EXPECT(0x561d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 039C
        gbc.setState(0x65de, 0xc7e1, 0x51f0, 0xc35a, 0x7baa, 0x8e3f, 0x0, 0x0);
        gbc.writeMem(0x65de, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc7e1, gbc.sp());
        EXPECT(0x65e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 039D
        gbc.setState(0xd963, 0x3261, 0x8860, 0xef8b, 0xe8fc, 0x6573, 0x0, 0x1);
        gbc.writeMem(0xd963, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3261, gbc.sp());
        EXPECT(0xd965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd963));
        EXPECT(0xf5, gbc.readMem(0xd964));
        // CB F5 039E
        gbc.setState(0x5ca8, 0xb614, 0x3120, 0x4a02, 0xc65f, 0x2b3f, 0x0, 0x1);
        gbc.writeMem(0x5ca8, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb614, gbc.sp());
        EXPECT(0x5caa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 039F
        gbc.setState(0xc883, 0x1a0f, 0x51d0, 0x430a, 0xcf84, 0x38e4, 0x1, 0x1);
        gbc.writeMem(0xc883, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1a0f, gbc.sp());
        EXPECT(0xc885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc883));
        EXPECT(0xf5, gbc.readMem(0xc884));
        // CB F5 03A0
        gbc.setState(0x3f49, 0xeabd, 0xd110, 0xceec, 0x7c8f, 0xe04c, 0x0, 0x1);
        gbc.writeMem(0x3f49, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xeabd, gbc.sp());
        EXPECT(0x3f4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 03A1
        gbc.setState(0xc7ac, 0x4e53, 0xa740, 0xb612, 0x33fc, 0x23eb, 0x1, 0x0);
        gbc.writeMem(0xc7ac, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4e53, gbc.sp());
        EXPECT(0xc7ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7ac));
        EXPECT(0xf5, gbc.readMem(0xc7ad));
        // CB F5 03A2
        gbc.setState(0x9d74, 0xc79d, 0x3970, 0x6a87, 0x3532, 0xf7f, 0x0, 0x0);
        gbc.writeMem(0x9d74, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc79d, gbc.sp());
        EXPECT(0x9d76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d74));
        EXPECT(0xf5, gbc.readMem(0x9d75));
        // CB F5 03A3
        gbc.setState(0x6cc4, 0x2364, 0xb1d0, 0x6313, 0xc6c2, 0x20d0, 0x0, 0x1);
        gbc.writeMem(0x6cc4, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2364, gbc.sp());
        EXPECT(0x6cc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 03A4
        gbc.setState(0x48a0, 0x7a8e, 0xd660, 0x56e1, 0xaa08, 0x5805, 0x0, 0x1);
        gbc.writeMem(0x48a0, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7a8e, gbc.sp());
        EXPECT(0x48a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 03A5
        gbc.setState(0xd3c, 0x67c3, 0x8c10, 0x320a, 0xe4e3, 0x4e6c, 0x1, 0x0);
        gbc.writeMem(0xd3c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x67c3, gbc.sp());
        EXPECT(0xd3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 03A6
        gbc.setState(0x1645, 0x1c4, 0x9d90, 0x45d9, 0x459c, 0x16ab, 0x1, 0x1);
        gbc.writeMem(0x1645, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1c4, gbc.sp());
        EXPECT(0x1647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 03A7
        gbc.setState(0x69cf, 0x2a73, 0x8f20, 0x5647, 0x63d2, 0xfdac, 0x1, 0x1);
        gbc.writeMem(0x69cf, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2a73, gbc.sp());
        EXPECT(0x69d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 03A8
        gbc.setState(0x523b, 0xd02e, 0x6a40, 0x5a55, 0xebc7, 0xf49e, 0x0, 0x0);
        gbc.writeMem(0x523b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd02e, gbc.sp());
        EXPECT(0x523d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 03A9
        gbc.setState(0xeb89, 0xf143, 0x950, 0xfb77, 0x267a, 0x2a5a, 0x0, 0x1);
        gbc.writeMem(0xeb89, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf143, gbc.sp());
        EXPECT(0xeb8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb89));
        EXPECT(0xf5, gbc.readMem(0xeb8a));
        // CB F5 03AA
        gbc.setState(0xaacc, 0xe5cc, 0xd780, 0xbb9c, 0x6921, 0xc210, 0x0, 0x1);
        gbc.writeMem(0xaacc, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe5cc, gbc.sp());
        EXPECT(0xaace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaacc));
        EXPECT(0xf5, gbc.readMem(0xaacd));
        // CB F5 03AB
        gbc.setState(0xdb7, 0x2c0c, 0xd570, 0x4cf4, 0xacb6, 0xb68d, 0x0, 0x0);
        gbc.writeMem(0xdb7, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2c0c, gbc.sp());
        EXPECT(0xdb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 03AC
        gbc.setState(0xb14e, 0xa8f8, 0x6c70, 0x7753, 0x8732, 0x19ab, 0x1, 0x0);
        gbc.writeMem(0xb14e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa8f8, gbc.sp());
        EXPECT(0xb150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb14e));
        EXPECT(0xf5, gbc.readMem(0xb14f));
        // CB F5 03AD
        gbc.setState(0x8b7c, 0x3819, 0x71b0, 0x3ac7, 0xaecb, 0xfd92, 0x0, 0x1);
        gbc.writeMem(0x8b7c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3819, gbc.sp());
        EXPECT(0x8b7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b7c));
        EXPECT(0xf5, gbc.readMem(0x8b7d));
        // CB F5 03AE
        gbc.setState(0x8693, 0xfe49, 0x50f0, 0x958d, 0xd4da, 0x96ce, 0x0, 0x0);
        gbc.writeMem(0x8693, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xfe49, gbc.sp());
        EXPECT(0x8695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8693));
        EXPECT(0xf5, gbc.readMem(0x8694));
        // CB F5 03AF
        gbc.setState(0x3fff, 0xd34c, 0x9c50, 0xc28c, 0x8ca0, 0xfb15, 0x0, 0x0);
        gbc.writeMem(0x3fff, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd34c, gbc.sp());
        EXPECT(0x4001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 03B0
        gbc.setState(0x22aa, 0xaa9e, 0x200, 0x406c, 0x46bc, 0xf53e, 0x0, 0x0);
        gbc.writeMem(0x22aa, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xaa9e, gbc.sp());
        EXPECT(0x22ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 03B1
        gbc.setState(0x1dc6, 0x8d56, 0x9430, 0xadb8, 0x8b12, 0x7b82, 0x0, 0x1);
        gbc.writeMem(0x1dc6, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8d56, gbc.sp());
        EXPECT(0x1dc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 03B2
        gbc.setState(0xb585, 0xb3b7, 0xdf30, 0x797f, 0x2e42, 0xff47, 0x0, 0x1);
        gbc.writeMem(0xb585, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb3b7, gbc.sp());
        EXPECT(0xb587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb585));
        EXPECT(0xf5, gbc.readMem(0xb586));
        // CB F5 03B3
        gbc.setState(0x6c44, 0xba7b, 0x8c0, 0x4c87, 0x6aab, 0xa4a5, 0x0, 0x0);
        gbc.writeMem(0x6c44, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xba7b, gbc.sp());
        EXPECT(0x6c46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 03B5
        gbc.setState(0x7bfb, 0xdb9a, 0xc320, 0x3623, 0xc920, 0x7d3f, 0x1, 0x1);
        gbc.writeMem(0x7bfb, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xdb9a, gbc.sp());
        EXPECT(0x7bfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 03B6
        gbc.setState(0x7e07, 0xcce1, 0x7be0, 0x99d4, 0xe421, 0x51a8, 0x0, 0x1);
        gbc.writeMem(0x7e07, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xcce1, gbc.sp());
        EXPECT(0x7e09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 03B7
        gbc.setState(0x3a1e, 0x7e83, 0xc1c0, 0x14ce, 0x15af, 0x75bd, 0x1, 0x1);
        gbc.writeMem(0x3a1e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7e83, gbc.sp());
        EXPECT(0x3a20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 03B8
        gbc.setState(0xabc7, 0xae1, 0xad30, 0x2be6, 0xb497, 0xa48a, 0x1, 0x1);
        gbc.writeMem(0xabc7, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xae1, gbc.sp());
        EXPECT(0xabc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabc7));
        EXPECT(0xf5, gbc.readMem(0xabc8));
        // CB F5 03B9
        gbc.setState(0x4778, 0xeccc, 0x600, 0xdb3b, 0x9d1d, 0x8c02, 0x0, 0x0);
        gbc.writeMem(0x4778, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xeccc, gbc.sp());
        EXPECT(0x477a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 03BA
        gbc.setState(0x2b81, 0xbc2b, 0xbc10, 0x4e43, 0x8b6f, 0xbf9b, 0x0, 0x1);
        gbc.writeMem(0x2b81, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xbc2b, gbc.sp());
        EXPECT(0x2b83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 03BB
        gbc.setState(0xe535, 0x48e, 0x3c00, 0xa13d, 0x6d50, 0xee0a, 0x0, 0x0);
        gbc.writeMem(0xe535, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x48e, gbc.sp());
        EXPECT(0xe537, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe535));
        EXPECT(0xf5, gbc.readMem(0xe536));
        // CB F5 03BC
        gbc.setState(0x1282, 0x4300, 0x32b0, 0x24c6, 0x231a, 0x4a70, 0x0, 0x0);
        gbc.writeMem(0x1282, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4300, gbc.sp());
        EXPECT(0x1284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 03BD
        gbc.setState(0x5228, 0x257e, 0x25f0, 0x1a0f, 0xeb91, 0x3019, 0x1, 0x0);
        gbc.writeMem(0x5228, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x257e, gbc.sp());
        EXPECT(0x522a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 03BE
        gbc.setState(0x8f46, 0x6214, 0x6f00, 0xb085, 0xd54d, 0xdce3, 0x0, 0x0);
        gbc.writeMem(0x8f46, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6214, gbc.sp());
        EXPECT(0x8f48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f46));
        EXPECT(0xf5, gbc.readMem(0x8f47));
        // CB F5 03BF
        gbc.setState(0xc07b, 0xa94c, 0xcd00, 0xf1cf, 0x4c0d, 0x2bd6, 0x0, 0x0);
        gbc.writeMem(0xc07b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa94c, gbc.sp());
        EXPECT(0xc07d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc07b));
        EXPECT(0xf5, gbc.readMem(0xc07c));
        // CB F5 03C1
        gbc.setState(0xc25d, 0x6849, 0x9810, 0xae17, 0x8ea3, 0x62f, 0x0, 0x0);
        gbc.writeMem(0xc25d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6849, gbc.sp());
        EXPECT(0xc25f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc25d));
        EXPECT(0xf5, gbc.readMem(0xc25e));
        // CB F5 03C2
        gbc.setState(0xd65, 0x159, 0xf3e0, 0x8600, 0xb27e, 0x741b, 0x1, 0x1);
        gbc.writeMem(0xd65, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x159, gbc.sp());
        EXPECT(0xd67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 03C3
        gbc.setState(0xe7cb, 0xc03c, 0x80c0, 0xa72f, 0x179d, 0xe126, 0x0, 0x1);
        gbc.writeMem(0xe7cb, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc03c, gbc.sp());
        EXPECT(0xe7cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7cb));
        EXPECT(0xf5, gbc.readMem(0xe7cc));
        // CB F5 03C4
        gbc.setState(0x8106, 0xde20, 0x2980, 0x4439, 0xd550, 0xf608, 0x1, 0x1);
        gbc.writeMem(0x8106, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xde20, gbc.sp());
        EXPECT(0x8108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8106));
        EXPECT(0xf5, gbc.readMem(0x8107));
        // CB F5 03C5
        gbc.setState(0x429f, 0x720, 0x1d40, 0x398b, 0x7e23, 0x9f24, 0x0, 0x0);
        gbc.writeMem(0x429f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x720, gbc.sp());
        EXPECT(0x42a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 03C6
        gbc.setState(0xb490, 0x879f, 0xb2e0, 0xbb26, 0xae48, 0x5f31, 0x1, 0x1);
        gbc.writeMem(0xb490, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x879f, gbc.sp());
        EXPECT(0xb492, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb490));
        EXPECT(0xf5, gbc.readMem(0xb491));
        // CB F5 03C7
        gbc.setState(0xec5c, 0x4d44, 0x69b0, 0x1e87, 0xe7e6, 0x31e5, 0x1, 0x1);
        gbc.writeMem(0xec5c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4d44, gbc.sp());
        EXPECT(0xec5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec5c));
        EXPECT(0xf5, gbc.readMem(0xec5d));
        // CB F5 03C8
        gbc.setState(0xe0d7, 0x4b64, 0xc460, 0xc35b, 0x5962, 0xb79, 0x0, 0x1);
        gbc.writeMem(0xe0d7, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4b64, gbc.sp());
        EXPECT(0xe0d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0d7));
        EXPECT(0xf5, gbc.readMem(0xe0d8));
        // CB F5 03C9
        gbc.setState(0xb87f, 0xd21d, 0x4c50, 0x23ef, 0xefc4, 0x8c6, 0x0, 0x0);
        gbc.writeMem(0xb87f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd21d, gbc.sp());
        EXPECT(0xb881, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb87f));
        EXPECT(0xf5, gbc.readMem(0xb880));
        // CB F5 03CA
        gbc.setState(0x5251, 0x2677, 0xd860, 0xc3ff, 0x9a1f, 0xa3e9, 0x0, 0x1);
        gbc.writeMem(0x5251, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2677, gbc.sp());
        EXPECT(0x5253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 03CB
        gbc.setState(0x25e, 0x363c, 0x9650, 0x3a57, 0xbf58, 0xd965, 0x0, 0x0);
        gbc.writeMem(0x25e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x363c, gbc.sp());
        EXPECT(0x260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 03CC
        gbc.setState(0x55c1, 0x3053, 0xc520, 0x4fed, 0x55e5, 0x27a1, 0x0, 0x0);
        gbc.writeMem(0x55c1, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3053, gbc.sp());
        EXPECT(0x55c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 03CD
        gbc.setState(0x41ca, 0x6971, 0xcdd0, 0xb86e, 0xf362, 0x7d63, 0x1, 0x0);
        gbc.writeMem(0x41ca, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6971, gbc.sp());
        EXPECT(0x41cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 03CE
        gbc.setState(0x1e2b, 0x6562, 0x9830, 0x4825, 0x3afe, 0xb9c5, 0x0, 0x0);
        gbc.writeMem(0x1e2b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x6562, gbc.sp());
        EXPECT(0x1e2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 03CF
        gbc.setState(0xc844, 0x1012, 0xfec0, 0x66a6, 0x585c, 0x5e23, 0x0, 0x1);
        gbc.writeMem(0xc844, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1012, gbc.sp());
        EXPECT(0xc846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc844));
        EXPECT(0xf5, gbc.readMem(0xc845));
        // CB F5 03D0
        gbc.setState(0x7d5e, 0x4f7f, 0xc920, 0xff69, 0xa6f1, 0x6405, 0x1, 0x0);
        gbc.writeMem(0x7d5e, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4f7f, gbc.sp());
        EXPECT(0x7d60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 03D1
        gbc.setState(0x8cd7, 0xa5cb, 0xe790, 0x2a7a, 0x2bb, 0x3045, 0x1, 0x0);
        gbc.writeMem(0x8cd7, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa5cb, gbc.sp());
        EXPECT(0x8cd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cd7));
        EXPECT(0xf5, gbc.readMem(0x8cd8));
        // CB F5 03D2
        gbc.setState(0xc875, 0x2943, 0x7330, 0x8d7f, 0xc467, 0xaab9, 0x1, 0x1);
        gbc.writeMem(0xc875, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2943, gbc.sp());
        EXPECT(0xc877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc875));
        EXPECT(0xf5, gbc.readMem(0xc876));
        // CB F5 03D3
        gbc.setState(0x47b3, 0x25a9, 0xb5e0, 0x9542, 0xed19, 0xc5c9, 0x1, 0x0);
        gbc.writeMem(0x47b3, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x25a9, gbc.sp());
        EXPECT(0x47b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 03D4
        gbc.setState(0xe07a, 0xff05, 0x8650, 0xefa, 0x8003, 0xddcb, 0x1, 0x0);
        gbc.writeMem(0xe07a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xff05, gbc.sp());
        EXPECT(0xe07c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe07a));
        EXPECT(0xf5, gbc.readMem(0xe07b));
        // CB F5 03D5
        gbc.setState(0x2455, 0x9b41, 0x2950, 0xa602, 0xdc73, 0x6f39, 0x0, 0x1);
        gbc.writeMem(0x2455, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9b41, gbc.sp());
        EXPECT(0x2457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 03D6
        gbc.setState(0x19ff, 0x6e72, 0xd290, 0x1006, 0x9649, 0x853e, 0x1, 0x0);
        gbc.writeMem(0x19ff, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6e72, gbc.sp());
        EXPECT(0x1a01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 03D7
        gbc.setState(0x6b04, 0x2939, 0x9a60, 0x36c5, 0xc95f, 0x553c, 0x1, 0x1);
        gbc.writeMem(0x6b04, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2939, gbc.sp());
        EXPECT(0x6b06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 03D8
        gbc.setState(0x8b6b, 0x5e94, 0x40, 0x7437, 0xfec4, 0xdcda, 0x0, 0x1);
        gbc.writeMem(0x8b6b, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5e94, gbc.sp());
        EXPECT(0x8b6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b6b));
        EXPECT(0xf5, gbc.readMem(0x8b6c));
        // CB F5 03D9
        gbc.setState(0x8bc8, 0x3b, 0x9850, 0xbe88, 0xb833, 0xaef4, 0x0, 0x1);
        gbc.writeMem(0x8bc8, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3b, gbc.sp());
        EXPECT(0x8bca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bc8));
        EXPECT(0xf5, gbc.readMem(0x8bc9));
        // CB F5 03DA
        gbc.setState(0xca62, 0xeb25, 0xb1a0, 0xfb24, 0xe56b, 0x457d, 0x1, 0x1);
        gbc.writeMem(0xca62, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xeb25, gbc.sp());
        EXPECT(0xca64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca62));
        EXPECT(0xf5, gbc.readMem(0xca63));
        // CB F5 03DB
        gbc.setState(0x96d0, 0x3221, 0x9540, 0xb967, 0xf3b4, 0xbf10, 0x1, 0x1);
        gbc.writeMem(0x96d0, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3221, gbc.sp());
        EXPECT(0x96d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96d0));
        EXPECT(0xf5, gbc.readMem(0x96d1));
        // CB F5 03DC
        gbc.setState(0x617d, 0x4e18, 0x78a0, 0xc9a5, 0xcb34, 0xe52, 0x0, 0x1);
        gbc.writeMem(0x617d, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4e18, gbc.sp());
        EXPECT(0x617f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 03DD
        gbc.setState(0x761c, 0x421e, 0xd420, 0xb05, 0x8bad, 0x15a0, 0x1, 0x0);
        gbc.writeMem(0x761c, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x421e, gbc.sp());
        EXPECT(0x761e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 03DE
        gbc.setState(0x5ed9, 0xac82, 0x4530, 0x300d, 0x94a7, 0x6366, 0x1, 0x0);
        gbc.writeMem(0x5ed9, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xac82, gbc.sp());
        EXPECT(0x5edb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 03DF
        gbc.setState(0x6dc4, 0x7194, 0x8ca0, 0xbeaa, 0x1200, 0x80c4, 0x1, 0x1);
        gbc.writeMem(0x6dc4, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7194, gbc.sp());
        EXPECT(0x6dc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 03E0
        gbc.setState(0xd21f, 0xbe87, 0x87b0, 0x28b, 0x2e7b, 0x9420, 0x0, 0x1);
        gbc.writeMem(0xd21f, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xbe87, gbc.sp());
        EXPECT(0xd221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd21f));
        EXPECT(0xf5, gbc.readMem(0xd220));
        // CB F5 03E1
        gbc.setState(0xae03, 0x69a7, 0x8d40, 0x162, 0xe3f9, 0x7358, 0x0, 0x0);
        gbc.writeMem(0xae03, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x69a7, gbc.sp());
        EXPECT(0xae05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae03));
        EXPECT(0xf5, gbc.readMem(0xae04));
        // CB F5 03E2
        gbc.setState(0x3a95, 0xa072, 0x6f10, 0x1c1e, 0x93f3, 0x1fbb, 0x1, 0x0);
        gbc.writeMem(0x3a95, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa072, gbc.sp());
        EXPECT(0x3a97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 03E3
        gbc.setState(0x33e1, 0x960a, 0x3da0, 0x7844, 0xa6bc, 0xc388, 0x1, 0x1);
        gbc.writeMem(0x33e1, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x960a, gbc.sp());
        EXPECT(0x33e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F5 03E4
        gbc.setState(0x4351, 0xf077, 0x1ad0, 0x3a40, 0xe221, 0x4a9b, 0x0, 0x1);
        gbc.writeMem(0x4351, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf077, gbc.sp());
        EXPECT(0x4353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 03E5
        gbc.setState(0x1372, 0x7445, 0x59d0, 0x946, 0x3c1c, 0x93da, 0x1, 0x0);
        gbc.writeMem(0x1372, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7445, gbc.sp());
        EXPECT(0x1374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F5 03E6
        gbc.setState(0xd89a, 0xe314, 0x7a40, 0x4bc9, 0xae99, 0x7f0e, 0x1, 0x1);
        gbc.writeMem(0xd89a, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe314, gbc.sp());
        EXPECT(0xd89c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd89a));
        EXPECT(0xf5, gbc.readMem(0xd89b));
        // CB F5 03E7
        gbc.setState(0xa401, 0xeb0, 0x1d00, 0x7184, 0xbeb6, 0x28a, 0x1, 0x1);
        gbc.writeMem(0xa401, { 0xcb, 0xf5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xeb0, gbc.sp());
        EXPECT(0xa403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa401));
        EXPECT(0xf5, gbc.readMem(0xa402));
    }
