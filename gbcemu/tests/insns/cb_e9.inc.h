    TEST(gbcemu, opcode_cb_e9) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB E9 0000
        gbc.setState(0xb395, 0x151f, 0x6790, 0x8b46, 0x6ee8, 0x9515, 0x1, 0x1);
        gbc.writeMem(0xb395, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x151f);
        EXPECT(gbc.pc(), 0xb397);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb395), 0xcb);
        EXPECT(gbc.readMem(0xb396), 0xe9);
        // CB E9 0001
        gbc.setState(0xe6c4, 0xe5df, 0x1d40, 0xb9e, 0x8062, 0x65f1, 0x1, 0x0);
        gbc.writeMem(0xe6c4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xe5df);
        EXPECT(gbc.pc(), 0xe6c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6c4), 0xcb);
        EXPECT(gbc.readMem(0xe6c5), 0xe9);
        // CB E9 0002
        gbc.setState(0xd990, 0x3457, 0x1040, 0x362f, 0x1bc4, 0xaee8, 0x1, 0x0);
        gbc.writeMem(0xd990, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x3457);
        EXPECT(gbc.pc(), 0xd992);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd990), 0xcb);
        EXPECT(gbc.readMem(0xd991), 0xe9);
        // CB E9 0003
        gbc.setState(0x6c50, 0x13f0, 0x9cb0, 0xa06b, 0x371, 0x967b, 0x0, 0x1);
        gbc.writeMem(0x6c50, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x13f0);
        EXPECT(gbc.pc(), 0x6c52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0004
        gbc.setState(0x17b0, 0x431, 0xb580, 0x5d7b, 0xb112, 0x57e, 0x1, 0x1);
        gbc.writeMem(0x17b0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x431);
        EXPECT(gbc.pc(), 0x17b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0005
        gbc.setState(0x6374, 0x2714, 0x19d0, 0xdb89, 0x58b2, 0x4df2, 0x1, 0x0);
        gbc.writeMem(0x6374, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x2714);
        EXPECT(gbc.pc(), 0x6376);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0006
        gbc.setState(0xd2d4, 0x8bfd, 0xa060, 0xfa98, 0x1c6b, 0x7bd5, 0x1, 0x1);
        gbc.writeMem(0xd2d4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x8bfd);
        EXPECT(gbc.pc(), 0xd2d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2d4), 0xcb);
        EXPECT(gbc.readMem(0xd2d5), 0xe9);
        // CB E9 0007
        gbc.setState(0x4de0, 0xf9dc, 0x4f50, 0x4a02, 0xcce6, 0x75ad, 0x0, 0x1);
        gbc.writeMem(0x4de0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xf9dc);
        EXPECT(gbc.pc(), 0x4de2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0008
        gbc.setState(0x2761, 0xd12b, 0xbc90, 0x9bb2, 0x93af, 0xb914, 0x0, 0x0);
        gbc.writeMem(0x2761, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xd12b);
        EXPECT(gbc.pc(), 0x2763);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0009
        gbc.setState(0x2aad, 0x16aa, 0xf630, 0xd0f, 0x504e, 0x81df, 0x0, 0x1);
        gbc.writeMem(0x2aad, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x16aa);
        EXPECT(gbc.pc(), 0x2aaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 000A
        gbc.setState(0xaa54, 0xff4d, 0x9b10, 0xca44, 0xeb57, 0xf599, 0x0, 0x1);
        gbc.writeMem(0xaa54, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xff4d);
        EXPECT(gbc.pc(), 0xaa56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa54), 0xcb);
        EXPECT(gbc.readMem(0xaa55), 0xe9);
        // CB E9 000B
        gbc.setState(0xe8f7, 0x9dec, 0xa1d0, 0x4f29, 0xbc63, 0x2ca0, 0x1, 0x0);
        gbc.writeMem(0xe8f7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x9dec);
        EXPECT(gbc.pc(), 0xe8f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8f7), 0xcb);
        EXPECT(gbc.readMem(0xe8f8), 0xe9);
        // CB E9 000C
        gbc.setState(0xdb48, 0xdde0, 0x5760, 0xfa2b, 0x92ab, 0xb687, 0x0, 0x1);
        gbc.writeMem(0xdb48, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xdde0);
        EXPECT(gbc.pc(), 0xdb4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb48), 0xcb);
        EXPECT(gbc.readMem(0xdb49), 0xe9);
        // CB E9 000D
        gbc.setState(0x8228, 0xd2e0, 0xbad0, 0x5d25, 0xbc5a, 0xbc19, 0x0, 0x0);
        gbc.writeMem(0x8228, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xd2e0);
        EXPECT(gbc.pc(), 0x822a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8228), 0xcb);
        EXPECT(gbc.readMem(0x8229), 0xe9);
        // CB E9 000E
        gbc.setState(0x1f70, 0xe756, 0x9af0, 0xc0af, 0x6981, 0x9fc7, 0x0, 0x1);
        gbc.writeMem(0x1f70, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xe756);
        EXPECT(gbc.pc(), 0x1f72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 000F
        gbc.setState(0x55a4, 0x74de, 0x4a00, 0x2fae, 0xe84f, 0xcd37, 0x1, 0x0);
        gbc.writeMem(0x55a4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x74de);
        EXPECT(gbc.pc(), 0x55a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0010
        gbc.setState(0x5996, 0xd26b, 0x3460, 0xa797, 0xd26a, 0x82aa, 0x1, 0x0);
        gbc.writeMem(0x5996, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xd26b);
        EXPECT(gbc.pc(), 0x5998);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0011
        gbc.setState(0x1f60, 0x210a, 0x7b10, 0x86fd, 0xb03d, 0x259a, 0x0, 0x1);
        gbc.writeMem(0x1f60, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x210a);
        EXPECT(gbc.pc(), 0x1f62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0012
        gbc.setState(0x1120, 0x77a, 0xfa30, 0xa3e8, 0xad35, 0x9d51, 0x1, 0x1);
        gbc.writeMem(0x1120, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x77a);
        EXPECT(gbc.pc(), 0x1122);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0013
        gbc.setState(0x2ed1, 0x8a07, 0x2ca0, 0x2e79, 0xd3ea, 0x99e8, 0x1, 0x0);
        gbc.writeMem(0x2ed1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x8a07);
        EXPECT(gbc.pc(), 0x2ed3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0014
        gbc.setState(0x2570, 0x885e, 0xe0, 0x6ad2, 0x775b, 0x7f3, 0x0, 0x1);
        gbc.writeMem(0x2570, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x885e);
        EXPECT(gbc.pc(), 0x2572);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0015
        gbc.setState(0x9795, 0x72f3, 0x5050, 0x98c5, 0x702f, 0x90be, 0x1, 0x1);
        gbc.writeMem(0x9795, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x72f3);
        EXPECT(gbc.pc(), 0x9797);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9795), 0xcb);
        EXPECT(gbc.readMem(0x9796), 0xe9);
        // CB E9 0016
        gbc.setState(0x48b1, 0xed6b, 0xf760, 0x93b9, 0xeaf9, 0xeded, 0x1, 0x0);
        gbc.writeMem(0x48b1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xed6b);
        EXPECT(gbc.pc(), 0x48b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0017
        gbc.setState(0x4b0e, 0x5f9a, 0xebb0, 0xdd94, 0x5f3c, 0xdedd, 0x0, 0x0);
        gbc.writeMem(0x4b0e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5f9a);
        EXPECT(gbc.pc(), 0x4b10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0018
        gbc.setState(0xb08b, 0x9e5c, 0xff40, 0x869f, 0xebb7, 0xddf7, 0x0, 0x0);
        gbc.writeMem(0xb08b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x9e5c);
        EXPECT(gbc.pc(), 0xb08d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb08b), 0xcb);
        EXPECT(gbc.readMem(0xb08c), 0xe9);
        // CB E9 0019
        gbc.setState(0x7edb, 0x559b, 0x7f00, 0x7881, 0x1f3f, 0x26f4, 0x0, 0x0);
        gbc.writeMem(0x7edb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x559b);
        EXPECT(gbc.pc(), 0x7edd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 001A
        gbc.setState(0x5f32, 0x90a2, 0x2c00, 0x1458, 0xd2cd, 0xc841, 0x0, 0x1);
        gbc.writeMem(0x5f32, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x90a2);
        EXPECT(gbc.pc(), 0x5f34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 001B
        gbc.setState(0xef2f, 0x5698, 0xac10, 0x9c53, 0x7b41, 0xefa8, 0x0, 0x0);
        gbc.writeMem(0xef2f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5698);
        EXPECT(gbc.pc(), 0xef31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef2f), 0xcb);
        EXPECT(gbc.readMem(0xef30), 0xe9);
        // CB E9 001C
        gbc.setState(0x49a6, 0xfe47, 0x5dc0, 0x91ee, 0xfd33, 0xec0, 0x0, 0x1);
        gbc.writeMem(0x49a6, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xfe47);
        EXPECT(gbc.pc(), 0x49a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 001D
        gbc.setState(0x483e, 0x79bd, 0xa3a0, 0x62d1, 0x4177, 0xbd98, 0x0, 0x0);
        gbc.writeMem(0x483e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x79bd);
        EXPECT(gbc.pc(), 0x4840);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 001E
        gbc.setState(0xb58c, 0x4053, 0xd590, 0x35f1, 0x5ded, 0x6a7d, 0x1, 0x1);
        gbc.writeMem(0xb58c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x4053);
        EXPECT(gbc.pc(), 0xb58e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb58c), 0xcb);
        EXPECT(gbc.readMem(0xb58d), 0xe9);
        // CB E9 001F
        gbc.setState(0xa165, 0xe142, 0x8430, 0xb63e, 0xb40f, 0x3e69, 0x0, 0x1);
        gbc.writeMem(0xa165, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xe142);
        EXPECT(gbc.pc(), 0xa167);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa165), 0xcb);
        EXPECT(gbc.readMem(0xa166), 0xe9);
        // CB E9 0020
        gbc.setState(0x8801, 0xc059, 0xe7e0, 0x99ee, 0x29c0, 0xf094, 0x1, 0x0);
        gbc.writeMem(0x8801, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc059);
        EXPECT(gbc.pc(), 0x8803);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8801), 0xcb);
        EXPECT(gbc.readMem(0x8802), 0xe9);
        // CB E9 0021
        gbc.setState(0xe807, 0x4b41, 0xc340, 0xc2fc, 0x559c, 0xeeab, 0x1, 0x1);
        gbc.writeMem(0xe807, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x4b41);
        EXPECT(gbc.pc(), 0xe809);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe807), 0xcb);
        EXPECT(gbc.readMem(0xe808), 0xe9);
        // CB E9 0022
        gbc.setState(0x81c8, 0x5c5f, 0x76d0, 0x9326, 0x9f06, 0xe093, 0x0, 0x1);
        gbc.writeMem(0x81c8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x5c5f);
        EXPECT(gbc.pc(), 0x81ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81c8), 0xcb);
        EXPECT(gbc.readMem(0x81c9), 0xe9);
        // CB E9 0023
        gbc.setState(0xa4df, 0xbae8, 0x5be0, 0x4ca4, 0x45a3, 0x44f1, 0x0, 0x0);
        gbc.writeMem(0xa4df, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xbae8);
        EXPECT(gbc.pc(), 0xa4e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4df), 0xcb);
        EXPECT(gbc.readMem(0xa4e0), 0xe9);
        // CB E9 0024
        gbc.setState(0x26fe, 0xa7d1, 0x2940, 0xf6e0, 0x293, 0xe5ca, 0x1, 0x0);
        gbc.writeMem(0x26fe, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xa7d1);
        EXPECT(gbc.pc(), 0x2700);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0025
        gbc.setState(0x430c, 0xd07b, 0xa870, 0x93dd, 0x2a03, 0xd201, 0x1, 0x0);
        gbc.writeMem(0x430c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd07b);
        EXPECT(gbc.pc(), 0x430e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0026
        gbc.setState(0x45bd, 0x306, 0x64e0, 0xbb9d, 0x6a20, 0xe4c6, 0x0, 0x0);
        gbc.writeMem(0x45bd, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x306);
        EXPECT(gbc.pc(), 0x45bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0028
        gbc.setState(0x1ce6, 0x1e2c, 0x4f20, 0x2273, 0xbcef, 0xbbb9, 0x1, 0x1);
        gbc.writeMem(0x1ce6, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x1e2c);
        EXPECT(gbc.pc(), 0x1ce8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0029
        gbc.setState(0x8ba, 0xb089, 0x74d0, 0x9104, 0x5283, 0xc8a9, 0x1, 0x0);
        gbc.writeMem(0x8ba, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xb089);
        EXPECT(gbc.pc(), 0x8bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 002A
        gbc.setState(0xa2ed, 0x2d3c, 0x4150, 0x2b7f, 0x8775, 0x3f7, 0x1, 0x1);
        gbc.writeMem(0xa2ed, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x2d3c);
        EXPECT(gbc.pc(), 0xa2ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2ed), 0xcb);
        EXPECT(gbc.readMem(0xa2ee), 0xe9);
        // CB E9 002C
        gbc.setState(0x7c7c, 0xde3a, 0xf0, 0x38e4, 0x8299, 0x2781, 0x0, 0x0);
        gbc.writeMem(0x7c7c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xde3a);
        EXPECT(gbc.pc(), 0x7c7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 002D
        gbc.setState(0x134d, 0x230e, 0xc750, 0x20c5, 0xd069, 0x623f, 0x1, 0x0);
        gbc.writeMem(0x134d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x230e);
        EXPECT(gbc.pc(), 0x134f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 002E
        gbc.setState(0x7a50, 0x13e2, 0x7b70, 0x9f36, 0x390c, 0x2908, 0x1, 0x0);
        gbc.writeMem(0x7a50, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x13e2);
        EXPECT(gbc.pc(), 0x7a52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0030
        gbc.setState(0x9c63, 0xaf45, 0x13a0, 0xbcbc, 0x35b4, 0x2de1, 0x1, 0x0);
        gbc.writeMem(0x9c63, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xaf45);
        EXPECT(gbc.pc(), 0x9c65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c63), 0xcb);
        EXPECT(gbc.readMem(0x9c64), 0xe9);
        // CB E9 0031
        gbc.setState(0x1176, 0x4dd5, 0x96c0, 0x5982, 0x3433, 0x82c7, 0x1, 0x1);
        gbc.writeMem(0x1176, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x4dd5);
        EXPECT(gbc.pc(), 0x1178);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0032
        gbc.setState(0x2ac7, 0xf922, 0x4570, 0xd35d, 0x18eb, 0x9301, 0x1, 0x0);
        gbc.writeMem(0x2ac7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xf922);
        EXPECT(gbc.pc(), 0x2ac9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0033
        gbc.setState(0x909b, 0xeb3, 0xc300, 0x7409, 0x2a39, 0x7f6f, 0x0, 0x0);
        gbc.writeMem(0x909b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xeb3);
        EXPECT(gbc.pc(), 0x909d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x909b), 0xcb);
        EXPECT(gbc.readMem(0x909c), 0xe9);
        // CB E9 0034
        gbc.setState(0x8c37, 0x4e2d, 0x3140, 0xb5ec, 0x6a8f, 0x5290, 0x1, 0x0);
        gbc.writeMem(0x8c37, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x4e2d);
        EXPECT(gbc.pc(), 0x8c39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c37), 0xcb);
        EXPECT(gbc.readMem(0x8c38), 0xe9);
        // CB E9 0035
        gbc.setState(0x6a22, 0x1d2, 0x3760, 0x74a9, 0x6d63, 0xa3c9, 0x0, 0x0);
        gbc.writeMem(0x6a22, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x1d2);
        EXPECT(gbc.pc(), 0x6a24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0036
        gbc.setState(0xbd09, 0xf373, 0x350, 0x74a5, 0xa012, 0xccf6, 0x1, 0x0);
        gbc.writeMem(0xbd09, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xf373);
        EXPECT(gbc.pc(), 0xbd0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd09), 0xcb);
        EXPECT(gbc.readMem(0xbd0a), 0xe9);
        // CB E9 0037
        gbc.setState(0xc7b1, 0xa6b8, 0x5f30, 0x9c0b, 0xc377, 0x15f0, 0x0, 0x1);
        gbc.writeMem(0xc7b1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xa6b8);
        EXPECT(gbc.pc(), 0xc7b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7b1), 0xcb);
        EXPECT(gbc.readMem(0xc7b2), 0xe9);
        // CB E9 0038
        gbc.setState(0xa28b, 0xd75e, 0x68a0, 0x6362, 0x2ef1, 0x98e5, 0x0, 0x1);
        gbc.writeMem(0xa28b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xd75e);
        EXPECT(gbc.pc(), 0xa28d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa28b), 0xcb);
        EXPECT(gbc.readMem(0xa28c), 0xe9);
        // CB E9 0039
        gbc.setState(0xbf29, 0x26ea, 0x3860, 0x1e5b, 0x3c94, 0xac4f, 0x1, 0x1);
        gbc.writeMem(0xbf29, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x26ea);
        EXPECT(gbc.pc(), 0xbf2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf29), 0xcb);
        EXPECT(gbc.readMem(0xbf2a), 0xe9);
        // CB E9 003A
        gbc.setState(0xec7f, 0x68b6, 0x1640, 0x66f6, 0xd00f, 0xdd3e, 0x0, 0x0);
        gbc.writeMem(0xec7f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x68b6);
        EXPECT(gbc.pc(), 0xec81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec7f), 0xcb);
        EXPECT(gbc.readMem(0xec80), 0xe9);
        // CB E9 003B
        gbc.setState(0xdec3, 0x1c31, 0xd540, 0x833e, 0x6d90, 0xf947, 0x0, 0x0);
        gbc.writeMem(0xdec3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x1c31);
        EXPECT(gbc.pc(), 0xdec5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdec3), 0xcb);
        EXPECT(gbc.readMem(0xdec4), 0xe9);
        // CB E9 003C
        gbc.setState(0xce1a, 0xbded, 0x5ff0, 0x6b7d, 0x80af, 0x341d, 0x1, 0x0);
        gbc.writeMem(0xce1a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xbded);
        EXPECT(gbc.pc(), 0xce1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce1a), 0xcb);
        EXPECT(gbc.readMem(0xce1b), 0xe9);
        // CB E9 003D
        gbc.setState(0xe740, 0xa53f, 0x9de0, 0xa5d, 0x7871, 0x2f4f, 0x0, 0x0);
        gbc.writeMem(0xe740, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xa53f);
        EXPECT(gbc.pc(), 0xe742);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe740), 0xcb);
        EXPECT(gbc.readMem(0xe741), 0xe9);
        // CB E9 003E
        gbc.setState(0x6f21, 0x3892, 0x7580, 0xb4e1, 0xd3db, 0x2ee2, 0x1, 0x1);
        gbc.writeMem(0x6f21, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3892);
        EXPECT(gbc.pc(), 0x6f23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 003F
        gbc.setState(0x2b41, 0x5299, 0xacd0, 0x1001, 0xadd6, 0xb693, 0x0, 0x1);
        gbc.writeMem(0x2b41, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x5299);
        EXPECT(gbc.pc(), 0x2b43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0040
        gbc.setState(0xb671, 0x533a, 0x69c0, 0xa833, 0x85d7, 0xbe8c, 0x0, 0x0);
        gbc.writeMem(0xb671, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x533a);
        EXPECT(gbc.pc(), 0xb673);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb671), 0xcb);
        EXPECT(gbc.readMem(0xb672), 0xe9);
        // CB E9 0042
        gbc.setState(0x7089, 0xf822, 0xbe90, 0xd2c, 0x63c0, 0x282, 0x1, 0x0);
        gbc.writeMem(0x7089, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xf822);
        EXPECT(gbc.pc(), 0x708b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0043
        gbc.setState(0x1fd7, 0x6e92, 0x3700, 0x7f60, 0xf54, 0x3b6e, 0x0, 0x1);
        gbc.writeMem(0x1fd7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x6e92);
        EXPECT(gbc.pc(), 0x1fd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0044
        gbc.setState(0xd7b1, 0x2a2d, 0x8be0, 0x2ee7, 0x547f, 0xb1a2, 0x0, 0x1);
        gbc.writeMem(0xd7b1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x2a2d);
        EXPECT(gbc.pc(), 0xd7b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7b1), 0xcb);
        EXPECT(gbc.readMem(0xd7b2), 0xe9);
        // CB E9 0045
        gbc.setState(0x8e5f, 0xe6e2, 0x6e60, 0x6856, 0x400, 0x6315, 0x1, 0x0);
        gbc.writeMem(0x8e5f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xe6e2);
        EXPECT(gbc.pc(), 0x8e61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e5f), 0xcb);
        EXPECT(gbc.readMem(0x8e60), 0xe9);
        // CB E9 0047
        gbc.setState(0xba65, 0xa654, 0x8080, 0x7a07, 0xaefe, 0x8424, 0x1, 0x0);
        gbc.writeMem(0xba65, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xa654);
        EXPECT(gbc.pc(), 0xba67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba65), 0xcb);
        EXPECT(gbc.readMem(0xba66), 0xe9);
        // CB E9 0048
        gbc.setState(0xba6b, 0x6af2, 0x7590, 0x39b7, 0xc959, 0x6f6, 0x0, 0x0);
        gbc.writeMem(0xba6b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x6af2);
        EXPECT(gbc.pc(), 0xba6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba6b), 0xcb);
        EXPECT(gbc.readMem(0xba6c), 0xe9);
        // CB E9 0049
        gbc.setState(0x2223, 0x4922, 0xd3b0, 0xe8da, 0x69c9, 0xe325, 0x0, 0x0);
        gbc.writeMem(0x2223, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4922);
        EXPECT(gbc.pc(), 0x2225);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 004A
        gbc.setState(0xbc83, 0x523a, 0xbfa0, 0xd14f, 0x855f, 0x104, 0x1, 0x1);
        gbc.writeMem(0xbc83, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x523a);
        EXPECT(gbc.pc(), 0xbc85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc83), 0xcb);
        EXPECT(gbc.readMem(0xbc84), 0xe9);
        // CB E9 004B
        gbc.setState(0x11b4, 0xe7eb, 0xc940, 0xb401, 0xc7c2, 0x83a2, 0x1, 0x0);
        gbc.writeMem(0x11b4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xe7eb);
        EXPECT(gbc.pc(), 0x11b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 004C
        gbc.setState(0xd9d8, 0xd918, 0x240, 0x9f58, 0x7b09, 0xc2c3, 0x1, 0x0);
        gbc.writeMem(0xd9d8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xd918);
        EXPECT(gbc.pc(), 0xd9da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9d8), 0xcb);
        EXPECT(gbc.readMem(0xd9d9), 0xe9);
        // CB E9 004D
        gbc.setState(0x4ef2, 0x4f2f, 0xad90, 0xfe1d, 0x4589, 0xd11, 0x0, 0x0);
        gbc.writeMem(0x4ef2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x4f2f);
        EXPECT(gbc.pc(), 0x4ef4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 004E
        gbc.setState(0x58d7, 0x8712, 0x5440, 0x9b00, 0xb43d, 0xb16e, 0x1, 0x1);
        gbc.writeMem(0x58d7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x8712);
        EXPECT(gbc.pc(), 0x58d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 004F
        gbc.setState(0x806b, 0x1fc5, 0x2350, 0xfa61, 0x538d, 0x4cf3, 0x0, 0x1);
        gbc.writeMem(0x806b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1fc5);
        EXPECT(gbc.pc(), 0x806d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x806b), 0xcb);
        EXPECT(gbc.readMem(0x806c), 0xe9);
        // CB E9 0050
        gbc.setState(0xab43, 0xc654, 0x4840, 0x530d, 0x238c, 0x65b3, 0x0, 0x0);
        gbc.writeMem(0xab43, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xc654);
        EXPECT(gbc.pc(), 0xab45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab43), 0xcb);
        EXPECT(gbc.readMem(0xab44), 0xe9);
        // CB E9 0051
        gbc.setState(0xce7a, 0xcad0, 0x4320, 0x1129, 0x345c, 0xe662, 0x1, 0x1);
        gbc.writeMem(0xce7a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xcad0);
        EXPECT(gbc.pc(), 0xce7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce7a), 0xcb);
        EXPECT(gbc.readMem(0xce7b), 0xe9);
        // CB E9 0054
        gbc.setState(0x73e2, 0x4887, 0x3b40, 0xd82, 0x7dc4, 0x8991, 0x1, 0x0);
        gbc.writeMem(0x73e2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x4887);
        EXPECT(gbc.pc(), 0x73e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0055
        gbc.setState(0xb000, 0xc2ad, 0x16f0, 0x48d2, 0xd5b2, 0x33de, 0x1, 0x1);
        gbc.writeMem(0xb000, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xc2ad);
        EXPECT(gbc.pc(), 0xb002);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb000), 0xcb);
        EXPECT(gbc.readMem(0xb001), 0xe9);
        // CB E9 0056
        gbc.setState(0x40cf, 0x936, 0x2b50, 0x443e, 0xb6aa, 0x5791, 0x1, 0x1);
        gbc.writeMem(0x40cf, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x936);
        EXPECT(gbc.pc(), 0x40d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0057
        gbc.setState(0x17e0, 0xf21c, 0x52f0, 0x61b, 0xd1eb, 0x985d, 0x0, 0x0);
        gbc.writeMem(0x17e0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xf21c);
        EXPECT(gbc.pc(), 0x17e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0058
        gbc.setState(0x8b4, 0xf53a, 0x59a0, 0xb40b, 0x2e1c, 0xe388, 0x1, 0x0);
        gbc.writeMem(0x8b4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xf53a);
        EXPECT(gbc.pc(), 0x8b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0059
        gbc.setState(0xbab9, 0xb2c4, 0x4e60, 0x9a97, 0x4f5d, 0x4cf7, 0x0, 0x0);
        gbc.writeMem(0xbab9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb2c4);
        EXPECT(gbc.pc(), 0xbabb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbab9), 0xcb);
        EXPECT(gbc.readMem(0xbaba), 0xe9);
        // CB E9 005A
        gbc.setState(0x5742, 0x86c9, 0xcfc0, 0xb50b, 0x8a56, 0x7a70, 0x0, 0x0);
        gbc.writeMem(0x5742, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x86c9);
        EXPECT(gbc.pc(), 0x5744);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 005B
        gbc.setState(0xdff5, 0x8ac2, 0xe8b0, 0xb690, 0x579c, 0x8731, 0x1, 0x1);
        gbc.writeMem(0xdff5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x8ac2);
        EXPECT(gbc.pc(), 0xdff7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdff5), 0xcb);
        EXPECT(gbc.readMem(0xdff6), 0xe9);
        // CB E9 005C
        gbc.setState(0x12d6, 0xe04, 0x5ba0, 0xe1e0, 0xba67, 0xa8c3, 0x1, 0x1);
        gbc.writeMem(0x12d6, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xe04);
        EXPECT(gbc.pc(), 0x12d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 005E
        gbc.setState(0x7f60, 0xe66d, 0xf8e0, 0x11d2, 0xef67, 0x9570, 0x1, 0x1);
        gbc.writeMem(0x7f60, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe66d);
        EXPECT(gbc.pc(), 0x7f62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 005F
        gbc.setState(0xdc3f, 0xbcdd, 0x25e0, 0x55af, 0xf1b7, 0xcbd9, 0x0, 0x1);
        gbc.writeMem(0xdc3f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xbcdd);
        EXPECT(gbc.pc(), 0xdc41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc3f), 0xcb);
        EXPECT(gbc.readMem(0xdc40), 0xe9);
        // CB E9 0060
        gbc.setState(0xc955, 0x8f53, 0xb20, 0xfba3, 0xc883, 0xd320, 0x0, 0x1);
        gbc.writeMem(0xc955, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x8f53);
        EXPECT(gbc.pc(), 0xc957);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc955), 0xcb);
        EXPECT(gbc.readMem(0xc956), 0xe9);
        // CB E9 0061
        gbc.setState(0x321f, 0x43f5, 0x9760, 0xa2bd, 0x23ad, 0xfe33, 0x1, 0x0);
        gbc.writeMem(0x321f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x43f5);
        EXPECT(gbc.pc(), 0x3221);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0062
        gbc.setState(0x1f8, 0x5264, 0xb9e0, 0x41d2, 0x36e, 0x67b3, 0x1, 0x0);
        gbc.writeMem(0x1f8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x5264);
        EXPECT(gbc.pc(), 0x1fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0063
        gbc.setState(0x5c54, 0x5513, 0xc9f0, 0xde51, 0xa46f, 0x65cc, 0x0, 0x1);
        gbc.writeMem(0x5c54, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x5513);
        EXPECT(gbc.pc(), 0x5c56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0064
        gbc.setState(0x7d2, 0x35e6, 0x3b20, 0x9be8, 0x6664, 0x5236, 0x0, 0x1);
        gbc.writeMem(0x7d2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x35e6);
        EXPECT(gbc.pc(), 0x7d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0065
        gbc.setState(0x536a, 0x71b9, 0x5150, 0x3e77, 0x7399, 0xd88c, 0x1, 0x0);
        gbc.writeMem(0x536a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x71b9);
        EXPECT(gbc.pc(), 0x536c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0066
        gbc.setState(0x8d69, 0x7e6f, 0x860, 0x63e3, 0x662e, 0x699c, 0x0, 0x1);
        gbc.writeMem(0x8d69, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x7e6f);
        EXPECT(gbc.pc(), 0x8d6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d69), 0xcb);
        EXPECT(gbc.readMem(0x8d6a), 0xe9);
        // CB E9 0067
        gbc.setState(0xe2e3, 0xb0dc, 0x4930, 0x2296, 0x8c64, 0x232f, 0x1, 0x0);
        gbc.writeMem(0xe2e3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xb0dc);
        EXPECT(gbc.pc(), 0xe2e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2e3), 0xcb);
        EXPECT(gbc.readMem(0xe2e4), 0xe9);
        // CB E9 0068
        gbc.setState(0xa260, 0xa0f4, 0x9c00, 0x2341, 0x7f3b, 0x9a76, 0x0, 0x0);
        gbc.writeMem(0xa260, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xa0f4);
        EXPECT(gbc.pc(), 0xa262);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa260), 0xcb);
        EXPECT(gbc.readMem(0xa261), 0xe9);
        // CB E9 0069
        gbc.setState(0x834, 0xf8ce, 0xa500, 0xedf5, 0xa9dd, 0x7823, 0x0, 0x1);
        gbc.writeMem(0x834, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf8ce);
        EXPECT(gbc.pc(), 0x836);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 006A
        gbc.setState(0xafd3, 0xb9f5, 0xa3b0, 0x47c9, 0xa52c, 0x4e9f, 0x0, 0x1);
        gbc.writeMem(0xafd3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xb9f5);
        EXPECT(gbc.pc(), 0xafd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafd3), 0xcb);
        EXPECT(gbc.readMem(0xafd4), 0xe9);
        // CB E9 006B
        gbc.setState(0xe607, 0x3bc0, 0x7690, 0x79de, 0x4284, 0x426d, 0x1, 0x0);
        gbc.writeMem(0xe607, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3bc0);
        EXPECT(gbc.pc(), 0xe609);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe607), 0xcb);
        EXPECT(gbc.readMem(0xe608), 0xe9);
        // CB E9 006C
        gbc.setState(0xdff6, 0xb269, 0x9360, 0xb5aa, 0x8f7b, 0x748a, 0x1, 0x0);
        gbc.writeMem(0xdff6, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xb269);
        EXPECT(gbc.pc(), 0xdff8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdff6), 0xcb);
        EXPECT(gbc.readMem(0xdff7), 0xe9);
        // CB E9 006D
        gbc.setState(0xa423, 0x492a, 0x6200, 0x493b, 0xcf78, 0xffd0, 0x1, 0x1);
        gbc.writeMem(0xa423, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x492a);
        EXPECT(gbc.pc(), 0xa425);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa423), 0xcb);
        EXPECT(gbc.readMem(0xa424), 0xe9);
        // CB E9 006E
        gbc.setState(0xb8da, 0x81c8, 0xfb70, 0x621a, 0xef14, 0x533c, 0x1, 0x1);
        gbc.writeMem(0xb8da, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x81c8);
        EXPECT(gbc.pc(), 0xb8dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8da), 0xcb);
        EXPECT(gbc.readMem(0xb8db), 0xe9);
        // CB E9 006F
        gbc.setState(0xa25c, 0x88a0, 0x5be0, 0xd208, 0xb7b4, 0x6275, 0x1, 0x1);
        gbc.writeMem(0xa25c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x88a0);
        EXPECT(gbc.pc(), 0xa25e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa25c), 0xcb);
        EXPECT(gbc.readMem(0xa25d), 0xe9);
        // CB E9 0070
        gbc.setState(0x6164, 0x861a, 0xcde0, 0x7c4e, 0x394c, 0x27d2, 0x1, 0x1);
        gbc.writeMem(0x6164, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x861a);
        EXPECT(gbc.pc(), 0x6166);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0071
        gbc.setState(0xc49f, 0x7eea, 0xeb70, 0xd06f, 0xddad, 0x19b8, 0x1, 0x0);
        gbc.writeMem(0xc49f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x7eea);
        EXPECT(gbc.pc(), 0xc4a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc49f), 0xcb);
        EXPECT(gbc.readMem(0xc4a0), 0xe9);
        // CB E9 0072
        gbc.setState(0x3ffa, 0xb725, 0x19e0, 0xe073, 0x7a7b, 0x895e, 0x0, 0x1);
        gbc.writeMem(0x3ffa, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb725);
        EXPECT(gbc.pc(), 0x3ffc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0073
        gbc.setState(0xafa5, 0x4c0c, 0xfd70, 0x2f15, 0xd524, 0xec1a, 0x0, 0x0);
        gbc.writeMem(0xafa5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x4c0c);
        EXPECT(gbc.pc(), 0xafa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafa5), 0xcb);
        EXPECT(gbc.readMem(0xafa6), 0xe9);
        // CB E9 0074
        gbc.setState(0xca69, 0x47f2, 0xdbf0, 0x2f96, 0x32f6, 0x5bb8, 0x0, 0x0);
        gbc.writeMem(0xca69, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x47f2);
        EXPECT(gbc.pc(), 0xca6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca69), 0xcb);
        EXPECT(gbc.readMem(0xca6a), 0xe9);
        // CB E9 0075
        gbc.setState(0xffd, 0xdab0, 0xbc50, 0xdc72, 0x9f8, 0xbc1a, 0x0, 0x1);
        gbc.writeMem(0xffd, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xdab0);
        EXPECT(gbc.pc(), 0xfff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0076
        gbc.setState(0x783d, 0x21de, 0xf7b0, 0x5abd, 0x76dd, 0x4948, 0x0, 0x1);
        gbc.writeMem(0x783d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x21de);
        EXPECT(gbc.pc(), 0x783f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0077
        gbc.setState(0x4cb, 0xebc1, 0x5f30, 0xfead, 0xf19c, 0x3f8, 0x1, 0x1);
        gbc.writeMem(0x4cb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xebc1);
        EXPECT(gbc.pc(), 0x4cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0078
        gbc.setState(0x71f3, 0x9fe, 0x4370, 0xf844, 0x7542, 0xb0da, 0x0, 0x0);
        gbc.writeMem(0x71f3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x9fe);
        EXPECT(gbc.pc(), 0x71f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0079
        gbc.setState(0x753e, 0xcf91, 0x9c20, 0xc798, 0x6dc, 0x3cd5, 0x1, 0x0);
        gbc.writeMem(0x753e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xcf91);
        EXPECT(gbc.pc(), 0x7540);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 007A
        gbc.setState(0x941b, 0xfae5, 0xd780, 0xd366, 0xb475, 0x3366, 0x0, 0x1);
        gbc.writeMem(0x941b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xfae5);
        EXPECT(gbc.pc(), 0x941d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x941b), 0xcb);
        EXPECT(gbc.readMem(0x941c), 0xe9);
        // CB E9 007B
        gbc.setState(0x2c42, 0xba21, 0x2e50, 0xf0cc, 0xefbf, 0xf79, 0x1, 0x0);
        gbc.writeMem(0x2c42, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xba21);
        EXPECT(gbc.pc(), 0x2c44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 007C
        gbc.setState(0xf2f, 0x1cde, 0x9d70, 0x90ac, 0x458, 0x248a, 0x1, 0x0);
        gbc.writeMem(0xf2f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x1cde);
        EXPECT(gbc.pc(), 0xf31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 007D
        gbc.setState(0x1b95, 0x59a7, 0xf130, 0x864c, 0x385, 0xb1cd, 0x1, 0x0);
        gbc.writeMem(0x1b95, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x59a7);
        EXPECT(gbc.pc(), 0x1b97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 007E
        gbc.setState(0x7afa, 0x7e5d, 0x7f60, 0x413, 0xe034, 0x255b, 0x0, 0x0);
        gbc.writeMem(0x7afa, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x7e5d);
        EXPECT(gbc.pc(), 0x7afc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 007F
        gbc.setState(0x3529, 0x156c, 0x2620, 0xb060, 0xc60c, 0x7bd, 0x0, 0x1);
        gbc.writeMem(0x3529, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x156c);
        EXPECT(gbc.pc(), 0x352b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0080
        gbc.setState(0xdd37, 0x7def, 0x5830, 0x1c3d, 0xe4d6, 0x4280, 0x0, 0x0);
        gbc.writeMem(0xdd37, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x7def);
        EXPECT(gbc.pc(), 0xdd39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd37), 0xcb);
        EXPECT(gbc.readMem(0xdd38), 0xe9);
        // CB E9 0081
        gbc.setState(0xcd62, 0x4197, 0xe810, 0x3e63, 0x4122, 0x4a0d, 0x1, 0x0);
        gbc.writeMem(0xcd62, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x4197);
        EXPECT(gbc.pc(), 0xcd64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd62), 0xcb);
        EXPECT(gbc.readMem(0xcd63), 0xe9);
        // CB E9 0082
        gbc.setState(0x17df, 0x4ff6, 0xba0, 0x197c, 0xf5e4, 0x37bd, 0x0, 0x1);
        gbc.writeMem(0x17df, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x4ff6);
        EXPECT(gbc.pc(), 0x17e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0083
        gbc.setState(0x25c4, 0x728a, 0x6530, 0xe5c9, 0xc00e, 0x8ccc, 0x0, 0x1);
        gbc.writeMem(0x25c4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x728a);
        EXPECT(gbc.pc(), 0x25c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0084
        gbc.setState(0xe391, 0xc361, 0x2d0, 0x19bf, 0x7582, 0x2f58, 0x0, 0x1);
        gbc.writeMem(0xe391, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc361);
        EXPECT(gbc.pc(), 0xe393);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe391), 0xcb);
        EXPECT(gbc.readMem(0xe392), 0xe9);
        // CB E9 0085
        gbc.setState(0x4519, 0x8eb7, 0xaf60, 0x5e2a, 0x3d46, 0x7dc4, 0x0, 0x1);
        gbc.writeMem(0x4519, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8eb7);
        EXPECT(gbc.pc(), 0x451b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0086
        gbc.setState(0x108, 0xf99e, 0xb730, 0x2017, 0x3b6b, 0x6339, 0x1, 0x0);
        gbc.writeMem(0x108, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xf99e);
        EXPECT(gbc.pc(), 0x10a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0087
        gbc.setState(0xe373, 0x5026, 0x7760, 0xa342, 0x9daa, 0xfd9b, 0x0, 0x0);
        gbc.writeMem(0xe373, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x5026);
        EXPECT(gbc.pc(), 0xe375);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe373), 0xcb);
        EXPECT(gbc.readMem(0xe374), 0xe9);
        // CB E9 0088
        gbc.setState(0x499, 0x9c21, 0x3d80, 0x9101, 0x11e2, 0x20ec, 0x0, 0x1);
        gbc.writeMem(0x499, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x9c21);
        EXPECT(gbc.pc(), 0x49b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0089
        gbc.setState(0x8170, 0x4af2, 0x5e70, 0x3bc2, 0x8310, 0x52e, 0x0, 0x0);
        gbc.writeMem(0x8170, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x4af2);
        EXPECT(gbc.pc(), 0x8172);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8170), 0xcb);
        EXPECT(gbc.readMem(0x8171), 0xe9);
        // CB E9 008A
        gbc.setState(0xea1a, 0x3b81, 0xc110, 0x1d3c, 0x7fb1, 0x3fc4, 0x0, 0x1);
        gbc.writeMem(0xea1a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x3b81);
        EXPECT(gbc.pc(), 0xea1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea1a), 0xcb);
        EXPECT(gbc.readMem(0xea1b), 0xe9);
        // CB E9 008B
        gbc.setState(0x6152, 0x76ed, 0xd7b0, 0x23f6, 0x132d, 0xd051, 0x1, 0x0);
        gbc.writeMem(0x6152, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x76ed);
        EXPECT(gbc.pc(), 0x6154);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 008C
        gbc.setState(0x42a0, 0x750b, 0x72e0, 0xfc45, 0xbc02, 0xde60, 0x0, 0x1);
        gbc.writeMem(0x42a0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x750b);
        EXPECT(gbc.pc(), 0x42a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 008D
        gbc.setState(0x3835, 0xcadd, 0x8310, 0x74ac, 0x33da, 0x246c, 0x1, 0x0);
        gbc.writeMem(0x3835, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xcadd);
        EXPECT(gbc.pc(), 0x3837);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 008E
        gbc.setState(0xdf7d, 0x13c, 0xf910, 0xe5ed, 0x97be, 0x4bc9, 0x0, 0x1);
        gbc.writeMem(0xdf7d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x13c);
        EXPECT(gbc.pc(), 0xdf7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf7d), 0xcb);
        EXPECT(gbc.readMem(0xdf7e), 0xe9);
        // CB E9 0090
        gbc.setState(0xced, 0xada, 0x6420, 0x2b1e, 0x6f6e, 0x69e1, 0x0, 0x1);
        gbc.writeMem(0xced, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xada);
        EXPECT(gbc.pc(), 0xcef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0092
        gbc.setState(0x2436, 0xa4fc, 0x8f0, 0x42a2, 0xb5cf, 0x2cfe, 0x0, 0x1);
        gbc.writeMem(0x2436, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xa4fc);
        EXPECT(gbc.pc(), 0x2438);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0093
        gbc.setState(0x9f6e, 0x413f, 0xadf0, 0x182a, 0x4614, 0xb4f9, 0x0, 0x0);
        gbc.writeMem(0x9f6e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x413f);
        EXPECT(gbc.pc(), 0x9f70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f6e), 0xcb);
        EXPECT(gbc.readMem(0x9f6f), 0xe9);
        // CB E9 0094
        gbc.setState(0x43ff, 0x1c07, 0xf690, 0x73ca, 0xb752, 0x90b1, 0x1, 0x1);
        gbc.writeMem(0x43ff, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x1c07);
        EXPECT(gbc.pc(), 0x4401);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0095
        gbc.setState(0x79ba, 0xdc94, 0xfd50, 0x1c86, 0x10b8, 0x31ec, 0x0, 0x1);
        gbc.writeMem(0x79ba, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xdc94);
        EXPECT(gbc.pc(), 0x79bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0096
        gbc.setState(0x2a92, 0x989e, 0xf1b0, 0x6632, 0xf651, 0x2dc7, 0x1, 0x0);
        gbc.writeMem(0x2a92, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x989e);
        EXPECT(gbc.pc(), 0x2a94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0097
        gbc.setState(0x213e, 0x1412, 0x8ef0, 0xd9c2, 0x1678, 0xeb5d, 0x1, 0x0);
        gbc.writeMem(0x213e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x1412);
        EXPECT(gbc.pc(), 0x2140);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0098
        gbc.setState(0xb66, 0xb863, 0x33e0, 0x1117, 0x91c6, 0x6397, 0x0, 0x0);
        gbc.writeMem(0xb66, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xb863);
        EXPECT(gbc.pc(), 0xb68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0099
        gbc.setState(0x7668, 0xfc14, 0x7190, 0x68d1, 0x5ba3, 0x6017, 0x0, 0x1);
        gbc.writeMem(0x7668, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xfc14);
        EXPECT(gbc.pc(), 0x766a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 009B
        gbc.setState(0x3774, 0x170, 0xb790, 0xff79, 0x25e2, 0x6e3c, 0x0, 0x1);
        gbc.writeMem(0x3774, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x170);
        EXPECT(gbc.pc(), 0x3776);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 009C
        gbc.setState(0x5f9c, 0x4645, 0xb7c0, 0xdde3, 0x14e5, 0x5333, 0x0, 0x0);
        gbc.writeMem(0x5f9c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4645);
        EXPECT(gbc.pc(), 0x5f9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 009D
        gbc.setState(0x3bbe, 0xe101, 0x230, 0xa9f0, 0x762c, 0xe4f1, 0x0, 0x0);
        gbc.writeMem(0x3bbe, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xe101);
        EXPECT(gbc.pc(), 0x3bc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 009E
        gbc.setState(0x57b8, 0xcb08, 0x2020, 0xe5ef, 0x7e2b, 0xcd71, 0x1, 0x1);
        gbc.writeMem(0x57b8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xcb08);
        EXPECT(gbc.pc(), 0x57ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 009F
        gbc.setState(0xccf9, 0xcf41, 0xb070, 0xf285, 0xd8c0, 0x44a1, 0x0, 0x0);
        gbc.writeMem(0xccf9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xcf41);
        EXPECT(gbc.pc(), 0xccfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccf9), 0xcb);
        EXPECT(gbc.readMem(0xccfa), 0xe9);
        // CB E9 00A0
        gbc.setState(0x1f80, 0xc1c8, 0x6150, 0xe08b, 0xb47c, 0x7207, 0x0, 0x0);
        gbc.writeMem(0x1f80, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xc1c8);
        EXPECT(gbc.pc(), 0x1f82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 00A1
        gbc.setState(0xc722, 0xebd5, 0xaa80, 0x8b95, 0xe2b, 0xad91, 0x1, 0x1);
        gbc.writeMem(0xc722, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xebd5);
        EXPECT(gbc.pc(), 0xc724);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc722), 0xcb);
        EXPECT(gbc.readMem(0xc723), 0xe9);
        // CB E9 00A2
        gbc.setState(0x96f2, 0xc88b, 0x1280, 0xa725, 0x9d92, 0x5392, 0x1, 0x0);
        gbc.writeMem(0x96f2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xc88b);
        EXPECT(gbc.pc(), 0x96f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96f2), 0xcb);
        EXPECT(gbc.readMem(0x96f3), 0xe9);
        // CB E9 00A3
        gbc.setState(0x4680, 0x3202, 0xf800, 0x519f, 0xc5d9, 0x790f, 0x1, 0x1);
        gbc.writeMem(0x4680, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x3202);
        EXPECT(gbc.pc(), 0x4682);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 00A4
        gbc.setState(0x4cfc, 0xc3e2, 0x7000, 0xf60c, 0xfe70, 0x7580, 0x1, 0x1);
        gbc.writeMem(0x4cfc, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xc3e2);
        EXPECT(gbc.pc(), 0x4cfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 00A5
        gbc.setState(0xa109, 0x4f75, 0xc160, 0x55c2, 0x6910, 0xf827, 0x1, 0x1);
        gbc.writeMem(0xa109, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x4f75);
        EXPECT(gbc.pc(), 0xa10b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa109), 0xcb);
        EXPECT(gbc.readMem(0xa10a), 0xe9);
        // CB E9 00A6
        gbc.setState(0xe067, 0x600c, 0x7d20, 0x14ad, 0x2b59, 0xd04d, 0x1, 0x0);
        gbc.writeMem(0xe067, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x600c);
        EXPECT(gbc.pc(), 0xe069);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe067), 0xcb);
        EXPECT(gbc.readMem(0xe068), 0xe9);
        // CB E9 00A8
        gbc.setState(0x6b3f, 0x17d2, 0xed30, 0x38d9, 0x52cf, 0xa715, 0x0, 0x1);
        gbc.writeMem(0x6b3f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x17d2);
        EXPECT(gbc.pc(), 0x6b41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 00A9
        gbc.setState(0x7319, 0x21a5, 0x2bc0, 0x5cd3, 0x6d80, 0xcff6, 0x1, 0x0);
        gbc.writeMem(0x7319, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x21a5);
        EXPECT(gbc.pc(), 0x731b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 00AA
        gbc.setState(0xcc54, 0xb2c4, 0x9370, 0xf75b, 0x56b, 0xd1b6, 0x0, 0x1);
        gbc.writeMem(0xcc54, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xb2c4);
        EXPECT(gbc.pc(), 0xcc56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc54), 0xcb);
        EXPECT(gbc.readMem(0xcc55), 0xe9);
        // CB E9 00AB
        gbc.setState(0xe7f3, 0xdeef, 0x4f30, 0xf17c, 0x11f0, 0x1e51, 0x1, 0x0);
        gbc.writeMem(0xe7f3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xdeef);
        EXPECT(gbc.pc(), 0xe7f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7f3), 0xcb);
        EXPECT(gbc.readMem(0xe7f4), 0xe9);
        // CB E9 00AC
        gbc.setState(0xcb4c, 0x3314, 0xd9e0, 0x2c49, 0x8f72, 0x7747, 0x0, 0x1);
        gbc.writeMem(0xcb4c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x3314);
        EXPECT(gbc.pc(), 0xcb4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb4c), 0xcb);
        EXPECT(gbc.readMem(0xcb4d), 0xe9);
        // CB E9 00AD
        gbc.setState(0x378e, 0xceb4, 0x90c0, 0x7fe3, 0x6037, 0x3863, 0x0, 0x0);
        gbc.writeMem(0x378e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xceb4);
        EXPECT(gbc.pc(), 0x3790);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 00AE
        gbc.setState(0x4343, 0x53a0, 0xc7d0, 0x5b0a, 0x75ab, 0x9721, 0x1, 0x0);
        gbc.writeMem(0x4343, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x53a0);
        EXPECT(gbc.pc(), 0x4345);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 00AF
        gbc.setState(0xe78, 0xaca8, 0x6700, 0xee21, 0xe5bf, 0x4f50, 0x0, 0x0);
        gbc.writeMem(0xe78, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xaca8);
        EXPECT(gbc.pc(), 0xe7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 00B0
        gbc.setState(0x9b86, 0x6504, 0x2b20, 0xfa2c, 0x1bd4, 0xace3, 0x0, 0x1);
        gbc.writeMem(0x9b86, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x6504);
        EXPECT(gbc.pc(), 0x9b88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b86), 0xcb);
        EXPECT(gbc.readMem(0x9b87), 0xe9);
        // CB E9 00B1
        gbc.setState(0xeb3f, 0x1364, 0x9500, 0x5471, 0x8fc2, 0xe00f, 0x0, 0x0);
        gbc.writeMem(0xeb3f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x1364);
        EXPECT(gbc.pc(), 0xeb41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb3f), 0xcb);
        EXPECT(gbc.readMem(0xeb40), 0xe9);
        // CB E9 00B2
        gbc.setState(0x216c, 0xa109, 0x8b40, 0x94b0, 0x2567, 0xca9f, 0x1, 0x1);
        gbc.writeMem(0x216c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xa109);
        EXPECT(gbc.pc(), 0x216e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 00B3
        gbc.setState(0xc0e3, 0xa6bb, 0x70a0, 0x6278, 0x3fe6, 0x32a5, 0x1, 0x0);
        gbc.writeMem(0xc0e3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xa6bb);
        EXPECT(gbc.pc(), 0xc0e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0e3), 0xcb);
        EXPECT(gbc.readMem(0xc0e4), 0xe9);
        // CB E9 00B4
        gbc.setState(0xa5, 0xc435, 0xe2c0, 0xfbb4, 0x3778, 0xb97, 0x0, 0x0);
        gbc.writeMem(0xa5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xc435);
        EXPECT(gbc.pc(), 0xa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 00B5
        gbc.setState(0x4857, 0x29bb, 0x25c0, 0x2a60, 0x3fff, 0xd789, 0x0, 0x1);
        gbc.writeMem(0x4857, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x29bb);
        EXPECT(gbc.pc(), 0x4859);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 00B6
        gbc.setState(0x3f6a, 0x46a9, 0xd4c0, 0x41a9, 0x8643, 0x845a, 0x1, 0x0);
        gbc.writeMem(0x3f6a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x46a9);
        EXPECT(gbc.pc(), 0x3f6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 00B7
        gbc.setState(0x84bc, 0x6ea8, 0xe440, 0x7d6e, 0xdcd4, 0xa377, 0x0, 0x0);
        gbc.writeMem(0x84bc, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x6ea8);
        EXPECT(gbc.pc(), 0x84be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84bc), 0xcb);
        EXPECT(gbc.readMem(0x84bd), 0xe9);
        // CB E9 00B8
        gbc.setState(0x627f, 0x5381, 0x1590, 0x5fa3, 0xcb50, 0xa62f, 0x0, 0x0);
        gbc.writeMem(0x627f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x5381);
        EXPECT(gbc.pc(), 0x6281);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 00B9
        gbc.setState(0xdd4c, 0xcd53, 0x6960, 0x5b08, 0x97a7, 0x4c1c, 0x1, 0x1);
        gbc.writeMem(0xdd4c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xcd53);
        EXPECT(gbc.pc(), 0xdd4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd4c), 0xcb);
        EXPECT(gbc.readMem(0xdd4d), 0xe9);
        // CB E9 00BA
        gbc.setState(0xb0ec, 0xe07b, 0x3680, 0x58c6, 0x297b, 0x2db6, 0x1, 0x0);
        gbc.writeMem(0xb0ec, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xe07b);
        EXPECT(gbc.pc(), 0xb0ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0ec), 0xcb);
        EXPECT(gbc.readMem(0xb0ed), 0xe9);
        // CB E9 00BB
        gbc.setState(0x7c0f, 0x821d, 0xe890, 0xf38e, 0x1be9, 0xa907, 0x0, 0x0);
        gbc.writeMem(0x7c0f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x821d);
        EXPECT(gbc.pc(), 0x7c11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 00BD
        gbc.setState(0x9833, 0xfd48, 0x2210, 0x271c, 0x736d, 0x8379, 0x0, 0x0);
        gbc.writeMem(0x9833, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xfd48);
        EXPECT(gbc.pc(), 0x9835);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9833), 0xcb);
        EXPECT(gbc.readMem(0x9834), 0xe9);
        // CB E9 00BE
        gbc.setState(0x77a2, 0x9b5, 0x3450, 0x6b92, 0xc4c5, 0x64bd, 0x0, 0x1);
        gbc.writeMem(0x77a2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9b5);
        EXPECT(gbc.pc(), 0x77a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 00BF
        gbc.setState(0x63f1, 0x3bab, 0x590, 0x7b18, 0x5b24, 0x217, 0x1, 0x1);
        gbc.writeMem(0x63f1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x3bab);
        EXPECT(gbc.pc(), 0x63f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 00C1
        gbc.setState(0x30bf, 0x27bf, 0x5060, 0xbd7e, 0x9644, 0x975, 0x0, 0x0);
        gbc.writeMem(0x30bf, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x27bf);
        EXPECT(gbc.pc(), 0x30c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 00C2
        gbc.setState(0x8df4, 0xe740, 0x2690, 0xd4c0, 0x474, 0xad56, 0x1, 0x1);
        gbc.writeMem(0x8df4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xe740);
        EXPECT(gbc.pc(), 0x8df6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8df4), 0xcb);
        EXPECT(gbc.readMem(0x8df5), 0xe9);
        // CB E9 00C3
        gbc.setState(0xb236, 0xf648, 0xd40, 0x5f94, 0x177b, 0xd538, 0x0, 0x0);
        gbc.writeMem(0xb236, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xf648);
        EXPECT(gbc.pc(), 0xb238);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb236), 0xcb);
        EXPECT(gbc.readMem(0xb237), 0xe9);
        // CB E9 00C4
        gbc.setState(0xcec5, 0xeef1, 0x5e80, 0xa6fb, 0xd212, 0x5511, 0x0, 0x0);
        gbc.writeMem(0xcec5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xeef1);
        EXPECT(gbc.pc(), 0xcec7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcec5), 0xcb);
        EXPECT(gbc.readMem(0xcec6), 0xe9);
        // CB E9 00C5
        gbc.setState(0x8390, 0x5830, 0x7800, 0x13e7, 0x48d, 0x4fe8, 0x0, 0x1);
        gbc.writeMem(0x8390, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x5830);
        EXPECT(gbc.pc(), 0x8392);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8390), 0xcb);
        EXPECT(gbc.readMem(0x8391), 0xe9);
        // CB E9 00C6
        gbc.setState(0x72e3, 0x387c, 0xacc0, 0x84f4, 0x5fca, 0xabb9, 0x0, 0x1);
        gbc.writeMem(0x72e3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x387c);
        EXPECT(gbc.pc(), 0x72e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 00C7
        gbc.setState(0x7fd2, 0xe9e2, 0xf740, 0xc257, 0x838e, 0x60e0, 0x0, 0x1);
        gbc.writeMem(0x7fd2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe9e2);
        EXPECT(gbc.pc(), 0x7fd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 00C8
        gbc.setState(0x3da9, 0xf8d6, 0x60f0, 0xadc8, 0x77df, 0x2d96, 0x1, 0x0);
        gbc.writeMem(0x3da9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xf8d6);
        EXPECT(gbc.pc(), 0x3dab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 00C9
        gbc.setState(0x52b9, 0x9f5, 0x3890, 0x1f7a, 0x6f66, 0xe1ca, 0x1, 0x0);
        gbc.writeMem(0x52b9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9f5);
        EXPECT(gbc.pc(), 0x52bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 00CA
        gbc.setState(0xd3ad, 0x108d, 0x2350, 0x3cb8, 0xccd4, 0xbb7e, 0x1, 0x1);
        gbc.writeMem(0xd3ad, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x108d);
        EXPECT(gbc.pc(), 0xd3af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3ad), 0xcb);
        EXPECT(gbc.readMem(0xd3ae), 0xe9);
        // CB E9 00CB
        gbc.setState(0x98f8, 0x4f97, 0xdbe0, 0xb128, 0x86d3, 0xb6f9, 0x1, 0x0);
        gbc.writeMem(0x98f8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x4f97);
        EXPECT(gbc.pc(), 0x98fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98f8), 0xcb);
        EXPECT(gbc.readMem(0x98f9), 0xe9);
        // CB E9 00CC
        gbc.setState(0xd825, 0xd207, 0xaec0, 0x76fe, 0x8a3e, 0x4bab, 0x0, 0x1);
        gbc.writeMem(0xd825, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xd207);
        EXPECT(gbc.pc(), 0xd827);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd825), 0xcb);
        EXPECT(gbc.readMem(0xd826), 0xe9);
        // CB E9 00CD
        gbc.setState(0x23ce, 0xacd5, 0x5e70, 0xc72c, 0x68bc, 0xe2d2, 0x1, 0x0);
        gbc.writeMem(0x23ce, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xacd5);
        EXPECT(gbc.pc(), 0x23d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 00CE
        gbc.setState(0xe01a, 0x4ee6, 0xe080, 0x32a, 0x531d, 0x71a7, 0x1, 0x0);
        gbc.writeMem(0xe01a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x4ee6);
        EXPECT(gbc.pc(), 0xe01c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe01a), 0xcb);
        EXPECT(gbc.readMem(0xe01b), 0xe9);
        // CB E9 00CF
        gbc.setState(0x6c54, 0x59e9, 0xba10, 0xdfb2, 0x96eb, 0xec52, 0x1, 0x1);
        gbc.writeMem(0x6c54, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x59e9);
        EXPECT(gbc.pc(), 0x6c56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 00D0
        gbc.setState(0xe1a0, 0x9b53, 0x51b0, 0xe949, 0xb23, 0x8ae4, 0x0, 0x0);
        gbc.writeMem(0xe1a0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x9b53);
        EXPECT(gbc.pc(), 0xe1a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1a0), 0xcb);
        EXPECT(gbc.readMem(0xe1a1), 0xe9);
        // CB E9 00D1
        gbc.setState(0x841c, 0x4faf, 0x4d40, 0x733, 0x2277, 0x1552, 0x0, 0x1);
        gbc.writeMem(0x841c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x4faf);
        EXPECT(gbc.pc(), 0x841e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x841c), 0xcb);
        EXPECT(gbc.readMem(0x841d), 0xe9);
        // CB E9 00D2
        gbc.setState(0x7d01, 0x787c, 0xf7f0, 0xfd5c, 0x46d6, 0x1bd1, 0x0, 0x1);
        gbc.writeMem(0x7d01, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x787c);
        EXPECT(gbc.pc(), 0x7d03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 00D3
        gbc.setState(0x7103, 0x737f, 0xc350, 0x6d41, 0x4506, 0xb321, 0x1, 0x1);
        gbc.writeMem(0x7103, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x737f);
        EXPECT(gbc.pc(), 0x7105);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 00D4
        gbc.setState(0x2392, 0xd209, 0xb8b0, 0x27ae, 0x88bb, 0x8e46, 0x0, 0x1);
        gbc.writeMem(0x2392, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xd209);
        EXPECT(gbc.pc(), 0x2394);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 00D5
        gbc.setState(0xeef8, 0xa22b, 0xcde0, 0xdddb, 0xd749, 0xffe3, 0x0, 0x1);
        gbc.writeMem(0xeef8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa22b);
        EXPECT(gbc.pc(), 0xeefa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeef8), 0xcb);
        EXPECT(gbc.readMem(0xeef9), 0xe9);
        // CB E9 00D6
        gbc.setState(0xd361, 0x16d4, 0x8310, 0xbc1e, 0x2d2e, 0x2a85, 0x0, 0x1);
        gbc.writeMem(0xd361, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x16d4);
        EXPECT(gbc.pc(), 0xd363);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd361), 0xcb);
        EXPECT(gbc.readMem(0xd362), 0xe9);
        // CB E9 00D7
        gbc.setState(0x54bc, 0x14ec, 0x7530, 0x31ae, 0xe296, 0x6618, 0x0, 0x0);
        gbc.writeMem(0x54bc, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x14ec);
        EXPECT(gbc.pc(), 0x54be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 00D8
        gbc.setState(0x1d6b, 0xf44, 0xa690, 0x16f7, 0xdbd1, 0xb124, 0x0, 0x0);
        gbc.writeMem(0x1d6b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xf44);
        EXPECT(gbc.pc(), 0x1d6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 00D9
        gbc.setState(0xeed5, 0x4c98, 0x5bd0, 0x7fc4, 0xcda5, 0x11f4, 0x1, 0x0);
        gbc.writeMem(0xeed5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x4c98);
        EXPECT(gbc.pc(), 0xeed7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeed5), 0xcb);
        EXPECT(gbc.readMem(0xeed6), 0xe9);
        // CB E9 00DA
        gbc.setState(0x7f6f, 0x20f2, 0x5f80, 0x96e, 0x8b05, 0x26d4, 0x1, 0x1);
        gbc.writeMem(0x7f6f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x20f2);
        EXPECT(gbc.pc(), 0x7f71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 00DB
        gbc.setState(0xb1b, 0xe04a, 0x5130, 0x570e, 0x2a60, 0x7f5d, 0x1, 0x0);
        gbc.writeMem(0xb1b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xe04a);
        EXPECT(gbc.pc(), 0xb1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 00DC
        gbc.setState(0x9e92, 0x63b9, 0xf360, 0x8582, 0xb043, 0xbd58, 0x0, 0x0);
        gbc.writeMem(0x9e92, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x63b9);
        EXPECT(gbc.pc(), 0x9e94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e92), 0xcb);
        EXPECT(gbc.readMem(0x9e93), 0xe9);
        // CB E9 00DD
        gbc.setState(0x26de, 0x41de, 0x38b0, 0x9383, 0xe9dd, 0x11b9, 0x0, 0x0);
        gbc.writeMem(0x26de, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x41de);
        EXPECT(gbc.pc(), 0x26e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 00DE
        gbc.setState(0x29e1, 0x8c71, 0x6400, 0x2779, 0x6dc9, 0x8253, 0x1, 0x0);
        gbc.writeMem(0x29e1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x8c71);
        EXPECT(gbc.pc(), 0x29e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 00DF
        gbc.setState(0x3839, 0x248b, 0x2ce0, 0x52b4, 0x65e2, 0x1ff1, 0x1, 0x1);
        gbc.writeMem(0x3839, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x248b);
        EXPECT(gbc.pc(), 0x383b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 00E0
        gbc.setState(0x5524, 0xc482, 0x5d50, 0x1206, 0xdbad, 0x2ad8, 0x1, 0x1);
        gbc.writeMem(0x5524, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xc482);
        EXPECT(gbc.pc(), 0x5526);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 00E1
        gbc.setState(0x2def, 0x5db2, 0x2bd0, 0x9d86, 0x33fd, 0x8952, 0x0, 0x1);
        gbc.writeMem(0x2def, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x5db2);
        EXPECT(gbc.pc(), 0x2df1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 00E2
        gbc.setState(0x221d, 0xb6b4, 0x1630, 0xc223, 0x289, 0xe6c8, 0x0, 0x1);
        gbc.writeMem(0x221d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xb6b4);
        EXPECT(gbc.pc(), 0x221f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 00E3
        gbc.setState(0x6d0c, 0x81ba, 0x42f0, 0x3f01, 0x53a, 0xdf39, 0x1, 0x0);
        gbc.writeMem(0x6d0c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x81ba);
        EXPECT(gbc.pc(), 0x6d0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 00E4
        gbc.setState(0x9c03, 0xb00f, 0xb340, 0x6359, 0x5cd5, 0xaa8, 0x1, 0x0);
        gbc.writeMem(0x9c03, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb00f);
        EXPECT(gbc.pc(), 0x9c05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c03), 0xcb);
        EXPECT(gbc.readMem(0x9c04), 0xe9);
        // CB E9 00E5
        gbc.setState(0xdf72, 0xc522, 0xa4f0, 0x6208, 0xa6a0, 0x2578, 0x1, 0x1);
        gbc.writeMem(0xdf72, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc522);
        EXPECT(gbc.pc(), 0xdf74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf72), 0xcb);
        EXPECT(gbc.readMem(0xdf73), 0xe9);
        // CB E9 00E6
        gbc.setState(0xaeb8, 0x902b, 0xb270, 0x2460, 0x63e5, 0x2adc, 0x1, 0x1);
        gbc.writeMem(0xaeb8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x902b);
        EXPECT(gbc.pc(), 0xaeba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaeb8), 0xcb);
        EXPECT(gbc.readMem(0xaeb9), 0xe9);
        // CB E9 00E7
        gbc.setState(0x63df, 0x506f, 0x2dd0, 0xe579, 0x723f, 0xf9ce, 0x0, 0x1);
        gbc.writeMem(0x63df, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x506f);
        EXPECT(gbc.pc(), 0x63e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 00E8
        gbc.setState(0x6af2, 0x3da7, 0x8b60, 0x313d, 0x9acd, 0xf484, 0x1, 0x1);
        gbc.writeMem(0x6af2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x3da7);
        EXPECT(gbc.pc(), 0x6af4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 00E9
        gbc.setState(0x9d26, 0x9a77, 0x71f0, 0x72e, 0xb6ed, 0x584e, 0x0, 0x0);
        gbc.writeMem(0x9d26, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x9a77);
        EXPECT(gbc.pc(), 0x9d28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d26), 0xcb);
        EXPECT(gbc.readMem(0x9d27), 0xe9);
        // CB E9 00EA
        gbc.setState(0xce8a, 0xaab9, 0x2e20, 0xb27f, 0xc471, 0xbcb4, 0x0, 0x0);
        gbc.writeMem(0xce8a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xaab9);
        EXPECT(gbc.pc(), 0xce8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce8a), 0xcb);
        EXPECT(gbc.readMem(0xce8b), 0xe9);
        // CB E9 00EC
        gbc.setState(0xb131, 0x6b34, 0x9510, 0x5596, 0x93f6, 0xa06f, 0x0, 0x0);
        gbc.writeMem(0xb131, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x6b34);
        EXPECT(gbc.pc(), 0xb133);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb131), 0xcb);
        EXPECT(gbc.readMem(0xb132), 0xe9);
        // CB E9 00ED
        gbc.setState(0x8403, 0xf71c, 0xeae0, 0xc1dc, 0xc010, 0x89f9, 0x1, 0x1);
        gbc.writeMem(0x8403, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xf71c);
        EXPECT(gbc.pc(), 0x8405);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8403), 0xcb);
        EXPECT(gbc.readMem(0x8404), 0xe9);
        // CB E9 00EE
        gbc.setState(0x6b, 0x3c26, 0x520, 0x4231, 0x812a, 0xe9d7, 0x0, 0x1);
        gbc.writeMem(0x6b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3c26);
        EXPECT(gbc.pc(), 0x6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 00EF
        gbc.setState(0xabca, 0x6e08, 0x36c0, 0x98a2, 0x8749, 0x17ee, 0x1, 0x0);
        gbc.writeMem(0xabca, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x6e08);
        EXPECT(gbc.pc(), 0xabcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabca), 0xcb);
        EXPECT(gbc.readMem(0xabcb), 0xe9);
        // CB E9 00F0
        gbc.setState(0x793, 0x447b, 0x81c0, 0x21c, 0xb1b1, 0xdfa9, 0x1, 0x1);
        gbc.writeMem(0x793, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x447b);
        EXPECT(gbc.pc(), 0x795);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 00F1
        gbc.setState(0xe62b, 0x8fa2, 0xb1b0, 0xfdea, 0x3a90, 0xf067, 0x1, 0x0);
        gbc.writeMem(0xe62b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x8fa2);
        EXPECT(gbc.pc(), 0xe62d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe62b), 0xcb);
        EXPECT(gbc.readMem(0xe62c), 0xe9);
        // CB E9 00F2
        gbc.setState(0x9f74, 0xe2cb, 0x4be0, 0x3b72, 0xb94a, 0xf96a, 0x0, 0x1);
        gbc.writeMem(0x9f74, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe2cb);
        EXPECT(gbc.pc(), 0x9f76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f74), 0xcb);
        EXPECT(gbc.readMem(0x9f75), 0xe9);
        // CB E9 00F3
        gbc.setState(0x24c, 0xfa86, 0x69e0, 0xe170, 0x387e, 0x22e2, 0x1, 0x0);
        gbc.writeMem(0x24c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xfa86);
        EXPECT(gbc.pc(), 0x24e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 00F4
        gbc.setState(0x5ec2, 0xa295, 0x7f00, 0xdc68, 0xd66c, 0x74f, 0x1, 0x0);
        gbc.writeMem(0x5ec2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xa295);
        EXPECT(gbc.pc(), 0x5ec4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 00F5
        gbc.setState(0xdcc0, 0x305, 0xb590, 0xad89, 0x19d9, 0xeea5, 0x0, 0x0);
        gbc.writeMem(0xdcc0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x305);
        EXPECT(gbc.pc(), 0xdcc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcc0), 0xcb);
        EXPECT(gbc.readMem(0xdcc1), 0xe9);
        // CB E9 00F6
        gbc.setState(0x1d, 0x4793, 0xb650, 0x533c, 0xe700, 0xf69e, 0x0, 0x0);
        gbc.writeMem(0x1d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x4793);
        EXPECT(gbc.pc(), 0x1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 00F8
        gbc.setState(0x61ec, 0x4fb3, 0x9a60, 0x47db, 0xcb40, 0xbd92, 0x1, 0x1);
        gbc.writeMem(0x61ec, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x4fb3);
        EXPECT(gbc.pc(), 0x61ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 00F9
        gbc.setState(0x7576, 0x4e80, 0x2b10, 0xbcdc, 0x4be9, 0xaa65, 0x1, 0x0);
        gbc.writeMem(0x7576, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x4e80);
        EXPECT(gbc.pc(), 0x7578);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 00FA
        gbc.setState(0x2587, 0x925c, 0x8da0, 0x778a, 0xbb6e, 0x32a7, 0x1, 0x1);
        gbc.writeMem(0x2587, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x925c);
        EXPECT(gbc.pc(), 0x2589);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 00FB
        gbc.setState(0x6896, 0xbfa2, 0x99b0, 0xc48d, 0x8e94, 0x8e8, 0x1, 0x0);
        gbc.writeMem(0x6896, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xbfa2);
        EXPECT(gbc.pc(), 0x6898);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 00FC
        gbc.setState(0x49f5, 0xf4d1, 0x9170, 0xa963, 0x5591, 0xd557, 0x1, 0x1);
        gbc.writeMem(0x49f5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf4d1);
        EXPECT(gbc.pc(), 0x49f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 00FD
        gbc.setState(0x5a3d, 0xf03, 0x4a80, 0x5f17, 0xf36f, 0x9150, 0x0, 0x1);
        gbc.writeMem(0x5a3d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xf03);
        EXPECT(gbc.pc(), 0x5a3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 00FE
        gbc.setState(0xc0a5, 0x6d46, 0xeab0, 0x4ba3, 0x9273, 0x42d8, 0x1, 0x1);
        gbc.writeMem(0xc0a5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x6d46);
        EXPECT(gbc.pc(), 0xc0a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0a5), 0xcb);
        EXPECT(gbc.readMem(0xc0a6), 0xe9);
        // CB E9 00FF
        gbc.setState(0x195b, 0x25ee, 0x3290, 0x755f, 0x8998, 0x5485, 0x1, 0x0);
        gbc.writeMem(0x195b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x25ee);
        EXPECT(gbc.pc(), 0x195d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0101
        gbc.setState(0x6373, 0x845, 0xa9d0, 0xd4da, 0x7bc2, 0x71b9, 0x0, 0x0);
        gbc.writeMem(0x6373, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x845);
        EXPECT(gbc.pc(), 0x6375);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0102
        gbc.setState(0x8422, 0x8f1, 0x3500, 0xacdb, 0xb6ce, 0x47dc, 0x0, 0x0);
        gbc.writeMem(0x8422, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x8f1);
        EXPECT(gbc.pc(), 0x8424);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8422), 0xcb);
        EXPECT(gbc.readMem(0x8423), 0xe9);
        // CB E9 0103
        gbc.setState(0x96c0, 0x197d, 0x5cb0, 0x821d, 0xc909, 0xc91f, 0x0, 0x0);
        gbc.writeMem(0x96c0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x197d);
        EXPECT(gbc.pc(), 0x96c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96c0), 0xcb);
        EXPECT(gbc.readMem(0x96c1), 0xe9);
        // CB E9 0104
        gbc.setState(0x302a, 0x5542, 0x3780, 0xccae, 0xdfd1, 0x739b, 0x1, 0x1);
        gbc.writeMem(0x302a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x5542);
        EXPECT(gbc.pc(), 0x302c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0105
        gbc.setState(0x8b10, 0x2b1a, 0x5ee0, 0xe7a1, 0xbbad, 0x98ea, 0x1, 0x1);
        gbc.writeMem(0x8b10, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x2b1a);
        EXPECT(gbc.pc(), 0x8b12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b10), 0xcb);
        EXPECT(gbc.readMem(0x8b11), 0xe9);
        // CB E9 0106
        gbc.setState(0x5ccb, 0xdd5c, 0x86b0, 0x27d5, 0xe67b, 0x1b92, 0x0, 0x1);
        gbc.writeMem(0x5ccb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xdd5c);
        EXPECT(gbc.pc(), 0x5ccd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0107
        gbc.setState(0xb9c9, 0x6c5e, 0xcad0, 0x6a9d, 0x2ace, 0x4afc, 0x0, 0x0);
        gbc.writeMem(0xb9c9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x6c5e);
        EXPECT(gbc.pc(), 0xb9cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9c9), 0xcb);
        EXPECT(gbc.readMem(0xb9ca), 0xe9);
        // CB E9 0108
        gbc.setState(0x131, 0x93be, 0x4260, 0xa62, 0xb6, 0xa6d2, 0x1, 0x1);
        gbc.writeMem(0x131, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x93be);
        EXPECT(gbc.pc(), 0x133);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0109
        gbc.setState(0xcb77, 0x5b6b, 0x6dd0, 0x4b2e, 0xb982, 0x5772, 0x0, 0x0);
        gbc.writeMem(0xcb77, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x5b6b);
        EXPECT(gbc.pc(), 0xcb79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb77), 0xcb);
        EXPECT(gbc.readMem(0xcb78), 0xe9);
        // CB E9 010A
        gbc.setState(0xe35d, 0x62ae, 0x4600, 0x3d68, 0x5c53, 0x6741, 0x1, 0x0);
        gbc.writeMem(0xe35d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x62ae);
        EXPECT(gbc.pc(), 0xe35f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe35d), 0xcb);
        EXPECT(gbc.readMem(0xe35e), 0xe9);
        // CB E9 010B
        gbc.setState(0xb69f, 0xac74, 0x2c20, 0x30ea, 0xf377, 0xbf96, 0x0, 0x0);
        gbc.writeMem(0xb69f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xac74);
        EXPECT(gbc.pc(), 0xb6a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb69f), 0xcb);
        EXPECT(gbc.readMem(0xb6a0), 0xe9);
        // CB E9 010C
        gbc.setState(0x9c6f, 0xf305, 0x1940, 0xd04b, 0x190, 0x72d5, 0x0, 0x1);
        gbc.writeMem(0x9c6f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xf305);
        EXPECT(gbc.pc(), 0x9c71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c6f), 0xcb);
        EXPECT(gbc.readMem(0x9c70), 0xe9);
        // CB E9 010D
        gbc.setState(0x4e6a, 0x391e, 0xe390, 0x427e, 0xe28e, 0x88dd, 0x0, 0x0);
        gbc.writeMem(0x4e6a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x391e);
        EXPECT(gbc.pc(), 0x4e6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 010E
        gbc.setState(0x880f, 0x2d9b, 0x3c30, 0x8409, 0xcc82, 0x83, 0x0, 0x1);
        gbc.writeMem(0x880f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x2d9b);
        EXPECT(gbc.pc(), 0x8811);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x880f), 0xcb);
        EXPECT(gbc.readMem(0x8810), 0xe9);
        // CB E9 010F
        gbc.setState(0x71cf, 0xbdb5, 0x9880, 0x4de6, 0x5dce, 0x6adb, 0x0, 0x0);
        gbc.writeMem(0x71cf, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xbdb5);
        EXPECT(gbc.pc(), 0x71d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0110
        gbc.setState(0x5cac, 0xc514, 0x1220, 0x18b, 0x6298, 0xa7c4, 0x1, 0x1);
        gbc.writeMem(0x5cac, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xc514);
        EXPECT(gbc.pc(), 0x5cae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0111
        gbc.setState(0xd17a, 0x5489, 0xfa30, 0xc49e, 0xa3de, 0x54f5, 0x1, 0x0);
        gbc.writeMem(0xd17a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5489);
        EXPECT(gbc.pc(), 0xd17c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd17a), 0xcb);
        EXPECT(gbc.readMem(0xd17b), 0xe9);
        // CB E9 0112
        gbc.setState(0x83f7, 0x3e4c, 0xa1b0, 0x62d3, 0x6f4c, 0x7ef6, 0x0, 0x0);
        gbc.writeMem(0x83f7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x3e4c);
        EXPECT(gbc.pc(), 0x83f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83f7), 0xcb);
        EXPECT(gbc.readMem(0x83f8), 0xe9);
        // CB E9 0113
        gbc.setState(0x9f89, 0x4fd2, 0x7b60, 0xaff, 0x31d4, 0x212a, 0x1, 0x0);
        gbc.writeMem(0x9f89, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x4fd2);
        EXPECT(gbc.pc(), 0x9f8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f89), 0xcb);
        EXPECT(gbc.readMem(0x9f8a), 0xe9);
        // CB E9 0114
        gbc.setState(0x7fc9, 0x408, 0x2000, 0x747c, 0x6993, 0x45e2, 0x1, 0x0);
        gbc.writeMem(0x7fc9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x408);
        EXPECT(gbc.pc(), 0x7fcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0116
        gbc.setState(0xcbc2, 0x4b2d, 0xdea0, 0xeb26, 0x7290, 0xa33a, 0x1, 0x1);
        gbc.writeMem(0xcbc2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x4b2d);
        EXPECT(gbc.pc(), 0xcbc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbc2), 0xcb);
        EXPECT(gbc.readMem(0xcbc3), 0xe9);
        // CB E9 0117
        gbc.setState(0x1cea, 0xee2b, 0xf240, 0x6e31, 0x112, 0xba8c, 0x1, 0x0);
        gbc.writeMem(0x1cea, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xee2b);
        EXPECT(gbc.pc(), 0x1cec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0118
        gbc.setState(0xd235, 0xf68c, 0xcfd0, 0xd309, 0xa9d2, 0xa92b, 0x1, 0x0);
        gbc.writeMem(0xd235, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xf68c);
        EXPECT(gbc.pc(), 0xd237);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd235), 0xcb);
        EXPECT(gbc.readMem(0xd236), 0xe9);
        // CB E9 0119
        gbc.setState(0x6d79, 0x2c58, 0xaac0, 0xb8f4, 0x60ff, 0x307f, 0x1, 0x0);
        gbc.writeMem(0x6d79, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2c58);
        EXPECT(gbc.pc(), 0x6d7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 011A
        gbc.setState(0x253, 0xbed8, 0x39e0, 0xd111, 0xf327, 0x259c, 0x0, 0x1);
        gbc.writeMem(0x253, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xbed8);
        EXPECT(gbc.pc(), 0x255);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 011B
        gbc.setState(0xc022, 0x460f, 0x2f90, 0xcd6d, 0x30b3, 0xb3b8, 0x0, 0x0);
        gbc.writeMem(0xc022, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x460f);
        EXPECT(gbc.pc(), 0xc024);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc022), 0xcb);
        EXPECT(gbc.readMem(0xc023), 0xe9);
        // CB E9 011C
        gbc.setState(0xa7f9, 0x487e, 0xfca0, 0x26d9, 0x9132, 0x4136, 0x1, 0x0);
        gbc.writeMem(0xa7f9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x487e);
        EXPECT(gbc.pc(), 0xa7fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7f9), 0xcb);
        EXPECT(gbc.readMem(0xa7fa), 0xe9);
        // CB E9 011D
        gbc.setState(0xad2b, 0xd103, 0x2240, 0xc563, 0xbacb, 0x34, 0x1, 0x0);
        gbc.writeMem(0xad2b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xd103);
        EXPECT(gbc.pc(), 0xad2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad2b), 0xcb);
        EXPECT(gbc.readMem(0xad2c), 0xe9);
        // CB E9 011E
        gbc.setState(0x9f01, 0x6f6f, 0x3160, 0xb395, 0x2d15, 0x3ef7, 0x1, 0x0);
        gbc.writeMem(0x9f01, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6f6f);
        EXPECT(gbc.pc(), 0x9f03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f01), 0xcb);
        EXPECT(gbc.readMem(0x9f02), 0xe9);
        // CB E9 011F
        gbc.setState(0x3b3e, 0x4061, 0xc600, 0x45d0, 0xd12c, 0x2606, 0x1, 0x0);
        gbc.writeMem(0x3b3e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x4061);
        EXPECT(gbc.pc(), 0x3b40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0120
        gbc.setState(0x5298, 0x3f1f, 0x2c0, 0x92c7, 0x763b, 0xd636, 0x1, 0x0);
        gbc.writeMem(0x5298, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3f1f);
        EXPECT(gbc.pc(), 0x529a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0121
        gbc.setState(0xea8a, 0xd82f, 0x8be0, 0x62d3, 0x3502, 0x335e, 0x0, 0x0);
        gbc.writeMem(0xea8a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xd82f);
        EXPECT(gbc.pc(), 0xea8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea8a), 0xcb);
        EXPECT(gbc.readMem(0xea8b), 0xe9);
        // CB E9 0122
        gbc.setState(0xa3ed, 0xd616, 0x1580, 0x8cab, 0xe8ed, 0x937, 0x1, 0x0);
        gbc.writeMem(0xa3ed, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xd616);
        EXPECT(gbc.pc(), 0xa3ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3ed), 0xcb);
        EXPECT(gbc.readMem(0xa3ee), 0xe9);
        // CB E9 0123
        gbc.setState(0x1b60, 0xf68d, 0x280, 0xa41e, 0xca8c, 0xdc4e, 0x0, 0x0);
        gbc.writeMem(0x1b60, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf68d);
        EXPECT(gbc.pc(), 0x1b62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0124
        gbc.setState(0x6e71, 0x3247, 0x5230, 0x1cdf, 0xa3a2, 0x4ee1, 0x0, 0x0);
        gbc.writeMem(0x6e71, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x3247);
        EXPECT(gbc.pc(), 0x6e73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0125
        gbc.setState(0xbe95, 0x1c3c, 0xa6f0, 0x768, 0xd5b9, 0x8630, 0x1, 0x1);
        gbc.writeMem(0xbe95, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x1c3c);
        EXPECT(gbc.pc(), 0xbe97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe95), 0xcb);
        EXPECT(gbc.readMem(0xbe96), 0xe9);
        // CB E9 0126
        gbc.setState(0x12e3, 0xb573, 0x4f0, 0x45b6, 0x9a22, 0x3253, 0x0, 0x1);
        gbc.writeMem(0x12e3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb573);
        EXPECT(gbc.pc(), 0x12e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0127
        gbc.setState(0x515a, 0x253a, 0xd650, 0xa0d3, 0x403, 0xfcaa, 0x1, 0x0);
        gbc.writeMem(0x515a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x253a);
        EXPECT(gbc.pc(), 0x515c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0128
        gbc.setState(0x50b3, 0xcb7d, 0x1750, 0xb10a, 0xe538, 0xf94d, 0x1, 0x0);
        gbc.writeMem(0x50b3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xcb7d);
        EXPECT(gbc.pc(), 0x50b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0129
        gbc.setState(0xafc6, 0x25fc, 0xdd40, 0x2908, 0x6f5f, 0x4cda, 0x1, 0x0);
        gbc.writeMem(0xafc6, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x25fc);
        EXPECT(gbc.pc(), 0xafc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafc6), 0xcb);
        EXPECT(gbc.readMem(0xafc7), 0xe9);
        // CB E9 012B
        gbc.setState(0x5039, 0x3137, 0xc890, 0xe7fb, 0x6baa, 0xb9e0, 0x1, 0x1);
        gbc.writeMem(0x5039, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3137);
        EXPECT(gbc.pc(), 0x503b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 012C
        gbc.setState(0x85bd, 0x4da3, 0x48c0, 0x378a, 0xf0cf, 0x1d5f, 0x1, 0x1);
        gbc.writeMem(0x85bd, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x4da3);
        EXPECT(gbc.pc(), 0x85bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85bd), 0xcb);
        EXPECT(gbc.readMem(0x85be), 0xe9);
        // CB E9 012D
        gbc.setState(0x9e33, 0xa49b, 0x9670, 0x5f56, 0x530b, 0x22ce, 0x1, 0x0);
        gbc.writeMem(0x9e33, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xa49b);
        EXPECT(gbc.pc(), 0x9e35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e33), 0xcb);
        EXPECT(gbc.readMem(0x9e34), 0xe9);
        // CB E9 012E
        gbc.setState(0x4d5b, 0x4e4d, 0x9fd0, 0xccaa, 0xdd09, 0xb5d5, 0x0, 0x0);
        gbc.writeMem(0x4d5b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x4e4d);
        EXPECT(gbc.pc(), 0x4d5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 012F
        gbc.setState(0x7231, 0x8fe8, 0x4860, 0xd0dc, 0xa8b3, 0x4bb4, 0x1, 0x0);
        gbc.writeMem(0x7231, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x8fe8);
        EXPECT(gbc.pc(), 0x7233);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0130
        gbc.setState(0xd478, 0x9c19, 0x6e80, 0x384, 0xfe5f, 0x2fd4, 0x1, 0x0);
        gbc.writeMem(0xd478, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x9c19);
        EXPECT(gbc.pc(), 0xd47a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd478), 0xcb);
        EXPECT(gbc.readMem(0xd479), 0xe9);
        // CB E9 0131
        gbc.setState(0xde58, 0x56a1, 0xbd0, 0x9420, 0x537a, 0xad31, 0x1, 0x0);
        gbc.writeMem(0xde58, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x56a1);
        EXPECT(gbc.pc(), 0xde5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde58), 0xcb);
        EXPECT(gbc.readMem(0xde59), 0xe9);
        // CB E9 0132
        gbc.setState(0xedc8, 0x87c2, 0x1120, 0x4f62, 0x5127, 0x66cb, 0x0, 0x1);
        gbc.writeMem(0xedc8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x87c2);
        EXPECT(gbc.pc(), 0xedca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedc8), 0xcb);
        EXPECT(gbc.readMem(0xedc9), 0xe9);
        // CB E9 0133
        gbc.setState(0xd746, 0xcc7f, 0x91d0, 0xa047, 0x974a, 0x8161, 0x1, 0x0);
        gbc.writeMem(0xd746, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xcc7f);
        EXPECT(gbc.pc(), 0xd748);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd746), 0xcb);
        EXPECT(gbc.readMem(0xd747), 0xe9);
        // CB E9 0134
        gbc.setState(0x9cb7, 0xc041, 0xae60, 0x139e, 0xa549, 0x98de, 0x0, 0x0);
        gbc.writeMem(0x9cb7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xc041);
        EXPECT(gbc.pc(), 0x9cb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cb7), 0xcb);
        EXPECT(gbc.readMem(0x9cb8), 0xe9);
        // CB E9 0135
        gbc.setState(0xcfa3, 0x4809, 0x120, 0x1311, 0xcc9d, 0x36e1, 0x1, 0x1);
        gbc.writeMem(0xcfa3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x4809);
        EXPECT(gbc.pc(), 0xcfa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfa3), 0xcb);
        EXPECT(gbc.readMem(0xcfa4), 0xe9);
        // CB E9 0136
        gbc.setState(0xc8ce, 0xb282, 0x440, 0x8f15, 0x5ecd, 0xcb99, 0x1, 0x0);
        gbc.writeMem(0xc8ce, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xb282);
        EXPECT(gbc.pc(), 0xc8d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8ce), 0xcb);
        EXPECT(gbc.readMem(0xc8cf), 0xe9);
        // CB E9 0137
        gbc.setState(0xbed2, 0xf654, 0xf800, 0x7474, 0xa8c2, 0xd1a2, 0x0, 0x0);
        gbc.writeMem(0xbed2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf654);
        EXPECT(gbc.pc(), 0xbed4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbed2), 0xcb);
        EXPECT(gbc.readMem(0xbed3), 0xe9);
        // CB E9 0138
        gbc.setState(0xa7fc, 0xd9c8, 0x7550, 0x11e5, 0x401, 0x2631, 0x0, 0x1);
        gbc.writeMem(0xa7fc, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xd9c8);
        EXPECT(gbc.pc(), 0xa7fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7fc), 0xcb);
        EXPECT(gbc.readMem(0xa7fd), 0xe9);
        // CB E9 0139
        gbc.setState(0xd0ac, 0xf0a2, 0x7110, 0xd7be, 0xe169, 0x280a, 0x1, 0x0);
        gbc.writeMem(0xd0ac, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xf0a2);
        EXPECT(gbc.pc(), 0xd0ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0ac), 0xcb);
        EXPECT(gbc.readMem(0xd0ad), 0xe9);
        // CB E9 013A
        gbc.setState(0x1084, 0xfa86, 0xe640, 0x83dd, 0x197d, 0x12c1, 0x0, 0x1);
        gbc.writeMem(0x1084, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xfa86);
        EXPECT(gbc.pc(), 0x1086);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 013B
        gbc.setState(0x15a7, 0x2b53, 0x6730, 0x1205, 0x5a28, 0xca62, 0x1, 0x0);
        gbc.writeMem(0x15a7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x2b53);
        EXPECT(gbc.pc(), 0x15a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 013C
        gbc.setState(0x92b8, 0x25e2, 0x7640, 0x781f, 0x6ab0, 0x88ab, 0x1, 0x0);
        gbc.writeMem(0x92b8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x25e2);
        EXPECT(gbc.pc(), 0x92ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92b8), 0xcb);
        EXPECT(gbc.readMem(0x92b9), 0xe9);
        // CB E9 013D
        gbc.setState(0x8994, 0xbeba, 0x9b90, 0xe175, 0x11f0, 0x1a, 0x0, 0x1);
        gbc.writeMem(0x8994, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xbeba);
        EXPECT(gbc.pc(), 0x8996);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8994), 0xcb);
        EXPECT(gbc.readMem(0x8995), 0xe9);
        // CB E9 013E
        gbc.setState(0x61a1, 0x3131, 0x1b80, 0xbfd8, 0x7600, 0x9ba4, 0x1, 0x1);
        gbc.writeMem(0x61a1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x3131);
        EXPECT(gbc.pc(), 0x61a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 013F
        gbc.setState(0x3472, 0x95ab, 0xf260, 0x26df, 0xd88e, 0x5e85, 0x1, 0x1);
        gbc.writeMem(0x3472, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x95ab);
        EXPECT(gbc.pc(), 0x3474);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0140
        gbc.setState(0x2cc6, 0x8249, 0xea90, 0x223e, 0x6ce5, 0xc990, 0x0, 0x1);
        gbc.writeMem(0x2cc6, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x8249);
        EXPECT(gbc.pc(), 0x2cc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0141
        gbc.setState(0x2f8, 0x42ed, 0x2180, 0xa01a, 0xf66a, 0x65fa, 0x1, 0x0);
        gbc.writeMem(0x2f8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x42ed);
        EXPECT(gbc.pc(), 0x2fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0142
        gbc.setState(0xc7af, 0xc60f, 0xa0d0, 0x83af, 0xf5db, 0xd4ec, 0x1, 0x1);
        gbc.writeMem(0xc7af, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc60f);
        EXPECT(gbc.pc(), 0xc7b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7af), 0xcb);
        EXPECT(gbc.readMem(0xc7b0), 0xe9);
        // CB E9 0143
        gbc.setState(0x6930, 0xcc61, 0xb940, 0x6cc1, 0xec49, 0xdf7, 0x0, 0x0);
        gbc.writeMem(0x6930, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xcc61);
        EXPECT(gbc.pc(), 0x6932);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0144
        gbc.setState(0xd263, 0xd179, 0x5050, 0x80fe, 0x2675, 0x7cd4, 0x0, 0x0);
        gbc.writeMem(0xd263, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xd179);
        EXPECT(gbc.pc(), 0xd265);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd263), 0xcb);
        EXPECT(gbc.readMem(0xd264), 0xe9);
        // CB E9 0145
        gbc.setState(0x2c3c, 0x6984, 0xa4d0, 0x8ad2, 0x24cd, 0x7306, 0x1, 0x1);
        gbc.writeMem(0x2c3c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x6984);
        EXPECT(gbc.pc(), 0x2c3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0146
        gbc.setState(0x78a9, 0x72bf, 0x5eb0, 0x3303, 0xcb2d, 0x207f, 0x1, 0x0);
        gbc.writeMem(0x78a9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x72bf);
        EXPECT(gbc.pc(), 0x78ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0148
        gbc.setState(0x36e5, 0xbdce, 0x17a0, 0xa57e, 0xb057, 0xcc46, 0x1, 0x0);
        gbc.writeMem(0x36e5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xbdce);
        EXPECT(gbc.pc(), 0x36e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0149
        gbc.setState(0x47cd, 0x62c8, 0x96f0, 0xa9bd, 0xe312, 0x6b63, 0x0, 0x1);
        gbc.writeMem(0x47cd, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x62c8);
        EXPECT(gbc.pc(), 0x47cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 014A
        gbc.setState(0x54c, 0x5ea8, 0x90c0, 0xb418, 0xfa99, 0xc94b, 0x1, 0x1);
        gbc.writeMem(0x54c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x5ea8);
        EXPECT(gbc.pc(), 0x54e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 014B
        gbc.setState(0xeb9d, 0x29b0, 0x3c10, 0x3a59, 0x381a, 0xa9f, 0x0, 0x1);
        gbc.writeMem(0xeb9d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x29b0);
        EXPECT(gbc.pc(), 0xeb9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb9d), 0xcb);
        EXPECT(gbc.readMem(0xeb9e), 0xe9);
        // CB E9 014C
        gbc.setState(0x54e7, 0x6c72, 0x1630, 0xabd4, 0xc51e, 0x6109, 0x0, 0x1);
        gbc.writeMem(0x54e7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x6c72);
        EXPECT(gbc.pc(), 0x54e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 014D
        gbc.setState(0xd26c, 0xc78b, 0x3800, 0xbf9d, 0x4d26, 0xc71d, 0x1, 0x0);
        gbc.writeMem(0xd26c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xc78b);
        EXPECT(gbc.pc(), 0xd26e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd26c), 0xcb);
        EXPECT(gbc.readMem(0xd26d), 0xe9);
        // CB E9 014E
        gbc.setState(0x4607, 0xdf3c, 0x5a30, 0xf6af, 0x234b, 0xe6b7, 0x1, 0x0);
        gbc.writeMem(0x4607, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xdf3c);
        EXPECT(gbc.pc(), 0x4609);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 014F
        gbc.setState(0x8aeb, 0x747e, 0x4f40, 0x388d, 0xec25, 0x17f5, 0x1, 0x1);
        gbc.writeMem(0x8aeb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x747e);
        EXPECT(gbc.pc(), 0x8aed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aeb), 0xcb);
        EXPECT(gbc.readMem(0x8aec), 0xe9);
        // CB E9 0150
        gbc.setState(0x96b8, 0x85e0, 0xd360, 0x2448, 0x18f8, 0xae2b, 0x0, 0x0);
        gbc.writeMem(0x96b8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x85e0);
        EXPECT(gbc.pc(), 0x96ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96b8), 0xcb);
        EXPECT(gbc.readMem(0x96b9), 0xe9);
        // CB E9 0151
        gbc.setState(0x53ae, 0x3a4, 0xf4d0, 0x5281, 0xb8ce, 0x59b4, 0x1, 0x1);
        gbc.writeMem(0x53ae, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x3a4);
        EXPECT(gbc.pc(), 0x53b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0152
        gbc.setState(0x2a32, 0xf402, 0x45a0, 0x2e0a, 0x7e0a, 0xd731, 0x0, 0x0);
        gbc.writeMem(0x2a32, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xf402);
        EXPECT(gbc.pc(), 0x2a34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0153
        gbc.setState(0xdfab, 0x906c, 0x98c0, 0xde86, 0x9517, 0xcc05, 0x1, 0x1);
        gbc.writeMem(0xdfab, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x906c);
        EXPECT(gbc.pc(), 0xdfad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfab), 0xcb);
        EXPECT(gbc.readMem(0xdfac), 0xe9);
        // CB E9 0154
        gbc.setState(0xd56f, 0x2df4, 0x2d80, 0x4f9, 0x635e, 0xff37, 0x0, 0x1);
        gbc.writeMem(0xd56f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x2df4);
        EXPECT(gbc.pc(), 0xd571);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd56f), 0xcb);
        EXPECT(gbc.readMem(0xd570), 0xe9);
        // CB E9 0155
        gbc.setState(0xb1e1, 0xea6, 0xfa00, 0xa553, 0x5fed, 0xcafc, 0x0, 0x0);
        gbc.writeMem(0xb1e1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xea6);
        EXPECT(gbc.pc(), 0xb1e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1e1), 0xcb);
        EXPECT(gbc.readMem(0xb1e2), 0xe9);
        // CB E9 0156
        gbc.setState(0xcde2, 0x4a86, 0xa800, 0xfe10, 0x7ba9, 0xebf0, 0x1, 0x0);
        gbc.writeMem(0xcde2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x4a86);
        EXPECT(gbc.pc(), 0xcde4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcde2), 0xcb);
        EXPECT(gbc.readMem(0xcde3), 0xe9);
        // CB E9 0157
        gbc.setState(0xc181, 0xe063, 0x17c0, 0x5dc3, 0xa515, 0xedf4, 0x1, 0x0);
        gbc.writeMem(0xc181, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xe063);
        EXPECT(gbc.pc(), 0xc183);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc181), 0xcb);
        EXPECT(gbc.readMem(0xc182), 0xe9);
        // CB E9 0158
        gbc.setState(0xe659, 0xc942, 0x8130, 0x92f4, 0x89b0, 0xa7ba, 0x1, 0x0);
        gbc.writeMem(0xe659, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xc942);
        EXPECT(gbc.pc(), 0xe65b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe659), 0xcb);
        EXPECT(gbc.readMem(0xe65a), 0xe9);
        // CB E9 0159
        gbc.setState(0xbfb5, 0x3c24, 0x5090, 0x40fb, 0xf5d7, 0xc863, 0x0, 0x1);
        gbc.writeMem(0xbfb5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x3c24);
        EXPECT(gbc.pc(), 0xbfb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfb5), 0xcb);
        EXPECT(gbc.readMem(0xbfb6), 0xe9);
        // CB E9 015A
        gbc.setState(0x3d60, 0xb78a, 0x9620, 0x15f9, 0x9081, 0xd71, 0x1, 0x1);
        gbc.writeMem(0x3d60, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xb78a);
        EXPECT(gbc.pc(), 0x3d62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 015B
        gbc.setState(0x7b3b, 0xa6cd, 0x9c20, 0x46a1, 0x8cea, 0x6098, 0x0, 0x1);
        gbc.writeMem(0x7b3b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xa6cd);
        EXPECT(gbc.pc(), 0x7b3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 015C
        gbc.setState(0xec9a, 0xa646, 0xcef0, 0xf635, 0xd5e8, 0x6038, 0x1, 0x1);
        gbc.writeMem(0xec9a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xa646);
        EXPECT(gbc.pc(), 0xec9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec9a), 0xcb);
        EXPECT(gbc.readMem(0xec9b), 0xe9);
        // CB E9 015D
        gbc.setState(0xe983, 0x3342, 0x5ab0, 0x28c2, 0x94c7, 0x302b, 0x1, 0x0);
        gbc.writeMem(0xe983, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x3342);
        EXPECT(gbc.pc(), 0xe985);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe983), 0xcb);
        EXPECT(gbc.readMem(0xe984), 0xe9);
        // CB E9 015E
        gbc.setState(0x415a, 0x700c, 0x8ea0, 0x96d3, 0xed6e, 0x27c6, 0x0, 0x1);
        gbc.writeMem(0x415a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x700c);
        EXPECT(gbc.pc(), 0x415c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 015F
        gbc.setState(0x53d2, 0xd73c, 0x7de0, 0xc2ef, 0xca99, 0x1445, 0x0, 0x1);
        gbc.writeMem(0x53d2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xd73c);
        EXPECT(gbc.pc(), 0x53d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0160
        gbc.setState(0x2313, 0xf38c, 0xb660, 0xacc6, 0x96c1, 0xb3b6, 0x0, 0x1);
        gbc.writeMem(0x2313, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xf38c);
        EXPECT(gbc.pc(), 0x2315);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0161
        gbc.setState(0x69ad, 0xcddf, 0x9c30, 0xcef6, 0x8b79, 0xea38, 0x1, 0x0);
        gbc.writeMem(0x69ad, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xcddf);
        EXPECT(gbc.pc(), 0x69af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0162
        gbc.setState(0x71b1, 0xfd8c, 0x6330, 0xbca0, 0xe5d8, 0xe206, 0x0, 0x1);
        gbc.writeMem(0x71b1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xfd8c);
        EXPECT(gbc.pc(), 0x71b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0163
        gbc.setState(0x79e7, 0x6307, 0xb140, 0xbe5, 0xa7d5, 0x17a7, 0x1, 0x1);
        gbc.writeMem(0x79e7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x6307);
        EXPECT(gbc.pc(), 0x79e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0164
        gbc.setState(0xda7a, 0x888a, 0x7b20, 0xba0c, 0xbf95, 0xc9bb, 0x1, 0x0);
        gbc.writeMem(0xda7a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x888a);
        EXPECT(gbc.pc(), 0xda7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda7a), 0xcb);
        EXPECT(gbc.readMem(0xda7b), 0xe9);
        // CB E9 0165
        gbc.setState(0x3fb7, 0x1bda, 0xbb60, 0x8b80, 0xad5, 0x8752, 0x1, 0x0);
        gbc.writeMem(0x3fb7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x1bda);
        EXPECT(gbc.pc(), 0x3fb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0166
        gbc.setState(0x7547, 0xf01, 0xedc0, 0x515c, 0xdd8a, 0x6c76, 0x1, 0x0);
        gbc.writeMem(0x7547, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xf01);
        EXPECT(gbc.pc(), 0x7549);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0167
        gbc.setState(0xbf6a, 0x9052, 0x5bb0, 0x47a6, 0x28de, 0x220b, 0x1, 0x1);
        gbc.writeMem(0xbf6a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x9052);
        EXPECT(gbc.pc(), 0xbf6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf6a), 0xcb);
        EXPECT(gbc.readMem(0xbf6b), 0xe9);
        // CB E9 0168
        gbc.setState(0xe7e2, 0x5ebc, 0xd20, 0xfacb, 0x398d, 0xb94b, 0x1, 0x1);
        gbc.writeMem(0xe7e2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x5ebc);
        EXPECT(gbc.pc(), 0xe7e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7e2), 0xcb);
        EXPECT(gbc.readMem(0xe7e3), 0xe9);
        // CB E9 0169
        gbc.setState(0xcfca, 0xb9d5, 0x3360, 0x737b, 0xb51b, 0xef31, 0x0, 0x1);
        gbc.writeMem(0xcfca, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xb9d5);
        EXPECT(gbc.pc(), 0xcfcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfca), 0xcb);
        EXPECT(gbc.readMem(0xcfcb), 0xe9);
        // CB E9 016A
        gbc.setState(0x74da, 0xfd2d, 0x970, 0x3b23, 0x2ed4, 0xa958, 0x1, 0x0);
        gbc.writeMem(0x74da, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xfd2d);
        EXPECT(gbc.pc(), 0x74dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 016B
        gbc.setState(0x599d, 0x8470, 0xbe0, 0xebc2, 0xc5, 0x51f0, 0x1, 0x1);
        gbc.writeMem(0x599d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x8470);
        EXPECT(gbc.pc(), 0x599f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 016C
        gbc.setState(0x8ab5, 0xbd06, 0x6c60, 0x28c, 0x12ee, 0x37fd, 0x1, 0x0);
        gbc.writeMem(0x8ab5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xbd06);
        EXPECT(gbc.pc(), 0x8ab7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ab5), 0xcb);
        EXPECT(gbc.readMem(0x8ab6), 0xe9);
        // CB E9 016D
        gbc.setState(0xd66c, 0xe40b, 0xc440, 0x5e6e, 0x5c4, 0x51a, 0x0, 0x0);
        gbc.writeMem(0xd66c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xe40b);
        EXPECT(gbc.pc(), 0xd66e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd66c), 0xcb);
        EXPECT(gbc.readMem(0xd66d), 0xe9);
        // CB E9 016E
        gbc.setState(0x8414, 0xf1e1, 0x8680, 0x4190, 0x8975, 0x3ac, 0x0, 0x1);
        gbc.writeMem(0x8414, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xf1e1);
        EXPECT(gbc.pc(), 0x8416);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8414), 0xcb);
        EXPECT(gbc.readMem(0x8415), 0xe9);
        // CB E9 016F
        gbc.setState(0xa05, 0x4798, 0x3030, 0xb160, 0xf6c5, 0xa87d, 0x0, 0x1);
        gbc.writeMem(0xa05, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x4798);
        EXPECT(gbc.pc(), 0xa07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0170
        gbc.setState(0x8f10, 0xb6bb, 0xf560, 0x74a2, 0x6efc, 0x1e92, 0x0, 0x0);
        gbc.writeMem(0x8f10, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xb6bb);
        EXPECT(gbc.pc(), 0x8f12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f10), 0xcb);
        EXPECT(gbc.readMem(0x8f11), 0xe9);
        // CB E9 0171
        gbc.setState(0xe92c, 0x60f5, 0x6c0, 0xaa11, 0x3f4f, 0xa427, 0x0, 0x1);
        gbc.writeMem(0xe92c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x60f5);
        EXPECT(gbc.pc(), 0xe92e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe92c), 0xcb);
        EXPECT(gbc.readMem(0xe92d), 0xe9);
        // CB E9 0172
        gbc.setState(0xea45, 0xa077, 0x7b00, 0x7dfc, 0x5ecb, 0xe9f0, 0x0, 0x1);
        gbc.writeMem(0xea45, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xa077);
        EXPECT(gbc.pc(), 0xea47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea45), 0xcb);
        EXPECT(gbc.readMem(0xea46), 0xe9);
        // CB E9 0173
        gbc.setState(0x18b9, 0x83c3, 0xd230, 0x1ea5, 0xb0ad, 0xc467, 0x1, 0x0);
        gbc.writeMem(0x18b9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x83c3);
        EXPECT(gbc.pc(), 0x18bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0174
        gbc.setState(0xbf50, 0x6197, 0xb820, 0x6d3e, 0x36eb, 0xb689, 0x0, 0x1);
        gbc.writeMem(0xbf50, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6197);
        EXPECT(gbc.pc(), 0xbf52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf50), 0xcb);
        EXPECT(gbc.readMem(0xbf51), 0xe9);
        // CB E9 0175
        gbc.setState(0xa4e9, 0xa52a, 0xd880, 0x6044, 0x26ac, 0x9ddb, 0x0, 0x1);
        gbc.writeMem(0xa4e9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xa52a);
        EXPECT(gbc.pc(), 0xa4eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4e9), 0xcb);
        EXPECT(gbc.readMem(0xa4ea), 0xe9);
        // CB E9 0176
        gbc.setState(0x8397, 0x6384, 0xaed0, 0xc80d, 0x1165, 0x4db9, 0x1, 0x0);
        gbc.writeMem(0x8397, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x6384);
        EXPECT(gbc.pc(), 0x8399);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8397), 0xcb);
        EXPECT(gbc.readMem(0x8398), 0xe9);
        // CB E9 0177
        gbc.setState(0x8ceb, 0xb82d, 0xaed0, 0xbc27, 0x8179, 0xbf2b, 0x1, 0x0);
        gbc.writeMem(0x8ceb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xb82d);
        EXPECT(gbc.pc(), 0x8ced);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ceb), 0xcb);
        EXPECT(gbc.readMem(0x8cec), 0xe9);
        // CB E9 0178
        gbc.setState(0x942a, 0xf03c, 0xce50, 0xd9ff, 0x5f96, 0x3e1c, 0x1, 0x1);
        gbc.writeMem(0x942a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xf03c);
        EXPECT(gbc.pc(), 0x942c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x942a), 0xcb);
        EXPECT(gbc.readMem(0x942b), 0xe9);
        // CB E9 0179
        gbc.setState(0xcebe, 0xd0f8, 0x2700, 0x53aa, 0xb8df, 0x430b, 0x1, 0x1);
        gbc.writeMem(0xcebe, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xd0f8);
        EXPECT(gbc.pc(), 0xcec0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcebe), 0xcb);
        EXPECT(gbc.readMem(0xcebf), 0xe9);
        // CB E9 017A
        gbc.setState(0x6ec3, 0x7555, 0x6e30, 0x4719, 0x814, 0xeea0, 0x0, 0x0);
        gbc.writeMem(0x6ec3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x7555);
        EXPECT(gbc.pc(), 0x6ec5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 017B
        gbc.setState(0x96a9, 0x9c19, 0x1660, 0xa4b0, 0x7d19, 0x9a5f, 0x0, 0x1);
        gbc.writeMem(0x96a9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x9c19);
        EXPECT(gbc.pc(), 0x96ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96a9), 0xcb);
        EXPECT(gbc.readMem(0x96aa), 0xe9);
        // CB E9 017C
        gbc.setState(0x8d0b, 0xfbde, 0x8e10, 0xc6a5, 0xa84b, 0x52ae, 0x0, 0x0);
        gbc.writeMem(0x8d0b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xfbde);
        EXPECT(gbc.pc(), 0x8d0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d0b), 0xcb);
        EXPECT(gbc.readMem(0x8d0c), 0xe9);
        // CB E9 017D
        gbc.setState(0x2e60, 0xba53, 0x8110, 0xfaed, 0x8bdc, 0x53c2, 0x1, 0x1);
        gbc.writeMem(0x2e60, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xba53);
        EXPECT(gbc.pc(), 0x2e62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 017E
        gbc.setState(0x1706, 0xfa8e, 0x7920, 0x9f73, 0x26f5, 0x2916, 0x0, 0x1);
        gbc.writeMem(0x1706, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xfa8e);
        EXPECT(gbc.pc(), 0x1708);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 017F
        gbc.setState(0x7097, 0xf99f, 0x5f60, 0xec43, 0xcbc1, 0x7947, 0x0, 0x1);
        gbc.writeMem(0x7097, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xf99f);
        EXPECT(gbc.pc(), 0x7099);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0180
        gbc.setState(0x3266, 0x7f15, 0x75e0, 0xc04, 0x508f, 0x9f7, 0x0, 0x1);
        gbc.writeMem(0x3266, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x7f15);
        EXPECT(gbc.pc(), 0x3268);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0181
        gbc.setState(0xdf63, 0xc25f, 0x57b0, 0x6771, 0xdf49, 0x7740, 0x1, 0x1);
        gbc.writeMem(0xdf63, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xc25f);
        EXPECT(gbc.pc(), 0xdf65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf63), 0xcb);
        EXPECT(gbc.readMem(0xdf64), 0xe9);
        // CB E9 0183
        gbc.setState(0x3cda, 0xc226, 0x3ee0, 0x6d4e, 0x6155, 0x67b, 0x0, 0x1);
        gbc.writeMem(0x3cda, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xc226);
        EXPECT(gbc.pc(), 0x3cdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0184
        gbc.setState(0xf2c, 0x8bd, 0x8cd0, 0xf62b, 0x86bd, 0x642e, 0x0, 0x1);
        gbc.writeMem(0xf2c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x8bd);
        EXPECT(gbc.pc(), 0xf2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0185
        gbc.setState(0xd13f, 0xf6cb, 0x6b30, 0x6f45, 0xb2df, 0xd488, 0x1, 0x0);
        gbc.writeMem(0xd13f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xf6cb);
        EXPECT(gbc.pc(), 0xd141);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd13f), 0xcb);
        EXPECT(gbc.readMem(0xd140), 0xe9);
        // CB E9 0186
        gbc.setState(0x3f, 0x439c, 0xe0b0, 0x5d5e, 0x702b, 0x9fbc, 0x1, 0x1);
        gbc.writeMem(0x3f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x439c);
        EXPECT(gbc.pc(), 0x41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0187
        gbc.setState(0x11d2, 0x57ac, 0xdb70, 0xb362, 0x9580, 0x4ec3, 0x0, 0x0);
        gbc.writeMem(0x11d2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x57ac);
        EXPECT(gbc.pc(), 0x11d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0189
        gbc.setState(0xab8, 0x173d, 0xc5a0, 0xdcdc, 0xa408, 0xe520, 0x1, 0x0);
        gbc.writeMem(0xab8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x173d);
        EXPECT(gbc.pc(), 0xaba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 018A
        gbc.setState(0xd1da, 0xf249, 0x6e40, 0xd7e7, 0x842e, 0x4e68, 0x1, 0x0);
        gbc.writeMem(0xd1da, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xf249);
        EXPECT(gbc.pc(), 0xd1dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1da), 0xcb);
        EXPECT(gbc.readMem(0xd1db), 0xe9);
        // CB E9 018B
        gbc.setState(0x4de1, 0x24b0, 0x1580, 0xad31, 0xb29d, 0x2d41, 0x1, 0x0);
        gbc.writeMem(0x4de1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x24b0);
        EXPECT(gbc.pc(), 0x4de3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 018C
        gbc.setState(0xb621, 0xba72, 0xf800, 0x834b, 0xc366, 0x1cb6, 0x1, 0x0);
        gbc.writeMem(0xb621, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xba72);
        EXPECT(gbc.pc(), 0xb623);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb621), 0xcb);
        EXPECT(gbc.readMem(0xb622), 0xe9);
        // CB E9 018D
        gbc.setState(0xe2c4, 0xe485, 0xe310, 0x7135, 0xb48e, 0xbaac, 0x0, 0x1);
        gbc.writeMem(0xe2c4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xe485);
        EXPECT(gbc.pc(), 0xe2c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2c4), 0xcb);
        EXPECT(gbc.readMem(0xe2c5), 0xe9);
        // CB E9 018E
        gbc.setState(0x8efc, 0x50eb, 0x3c80, 0xca50, 0xf50d, 0xbd1f, 0x1, 0x0);
        gbc.writeMem(0x8efc, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x50eb);
        EXPECT(gbc.pc(), 0x8efe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8efc), 0xcb);
        EXPECT(gbc.readMem(0x8efd), 0xe9);
        // CB E9 018F
        gbc.setState(0x865, 0x7d42, 0x2f80, 0x6418, 0xb1e0, 0x647, 0x0, 0x0);
        gbc.writeMem(0x865, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7d42);
        EXPECT(gbc.pc(), 0x867);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0190
        gbc.setState(0xe7b5, 0xf163, 0xdcb0, 0x91d5, 0x4281, 0x2cff, 0x0, 0x1);
        gbc.writeMem(0xe7b5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xf163);
        EXPECT(gbc.pc(), 0xe7b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7b5), 0xcb);
        EXPECT(gbc.readMem(0xe7b6), 0xe9);
        // CB E9 0191
        gbc.setState(0xa070, 0x2bbf, 0xb700, 0xf6ba, 0xe02, 0xd1c1, 0x0, 0x0);
        gbc.writeMem(0xa070, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x2bbf);
        EXPECT(gbc.pc(), 0xa072);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa070), 0xcb);
        EXPECT(gbc.readMem(0xa071), 0xe9);
        // CB E9 0192
        gbc.setState(0xee94, 0x8144, 0x7e60, 0xb8f, 0xddd3, 0x9f79, 0x1, 0x0);
        gbc.writeMem(0xee94, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x8144);
        EXPECT(gbc.pc(), 0xee96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee94), 0xcb);
        EXPECT(gbc.readMem(0xee95), 0xe9);
        // CB E9 0193
        gbc.setState(0x3520, 0xf240, 0xe3e0, 0x5f8f, 0x1404, 0xc564, 0x1, 0x1);
        gbc.writeMem(0x3520, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf240);
        EXPECT(gbc.pc(), 0x3522);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0194
        gbc.setState(0x6a7d, 0x8e44, 0x2a40, 0x97c2, 0xb74, 0x3ca1, 0x1, 0x0);
        gbc.writeMem(0x6a7d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x8e44);
        EXPECT(gbc.pc(), 0x6a7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0195
        gbc.setState(0xc669, 0x27fb, 0x3370, 0xb735, 0xbb54, 0x4a59, 0x0, 0x1);
        gbc.writeMem(0xc669, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x27fb);
        EXPECT(gbc.pc(), 0xc66b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc669), 0xcb);
        EXPECT(gbc.readMem(0xc66a), 0xe9);
        // CB E9 0196
        gbc.setState(0x95e6, 0xaa28, 0x6f80, 0xb5be, 0xfb46, 0x316e, 0x1, 0x1);
        gbc.writeMem(0x95e6, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xaa28);
        EXPECT(gbc.pc(), 0x95e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95e6), 0xcb);
        EXPECT(gbc.readMem(0x95e7), 0xe9);
        // CB E9 0197
        gbc.setState(0x5604, 0xc9fb, 0x37a0, 0xcb4d, 0xb268, 0x6fc6, 0x1, 0x1);
        gbc.writeMem(0x5604, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xc9fb);
        EXPECT(gbc.pc(), 0x5606);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0198
        gbc.setState(0xa44f, 0x3afe, 0x8c90, 0x2bab, 0x1f26, 0xbbd9, 0x1, 0x1);
        gbc.writeMem(0xa44f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x3afe);
        EXPECT(gbc.pc(), 0xa451);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa44f), 0xcb);
        EXPECT(gbc.readMem(0xa450), 0xe9);
        // CB E9 0199
        gbc.setState(0xc213, 0x98cf, 0xbb40, 0xbee5, 0xeab5, 0x2b8f, 0x1, 0x1);
        gbc.writeMem(0xc213, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x98cf);
        EXPECT(gbc.pc(), 0xc215);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc213), 0xcb);
        EXPECT(gbc.readMem(0xc214), 0xe9);
        // CB E9 019A
        gbc.setState(0xce88, 0x3082, 0x1140, 0x32c4, 0x7f13, 0x7981, 0x1, 0x0);
        gbc.writeMem(0xce88, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x3082);
        EXPECT(gbc.pc(), 0xce8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce88), 0xcb);
        EXPECT(gbc.readMem(0xce89), 0xe9);
        // CB E9 019B
        gbc.setState(0x72ed, 0x16ce, 0x35e0, 0x3d38, 0x5e4c, 0x9788, 0x1, 0x0);
        gbc.writeMem(0x72ed, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x16ce);
        EXPECT(gbc.pc(), 0x72ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 019C
        gbc.setState(0xbbe7, 0xf6e3, 0xaa00, 0x7b38, 0x6707, 0xa039, 0x0, 0x1);
        gbc.writeMem(0xbbe7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xf6e3);
        EXPECT(gbc.pc(), 0xbbe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbe7), 0xcb);
        EXPECT(gbc.readMem(0xbbe8), 0xe9);
        // CB E9 019D
        gbc.setState(0x34b0, 0xdcb1, 0x8e70, 0x1794, 0x9034, 0x4751, 0x0, 0x0);
        gbc.writeMem(0x34b0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xdcb1);
        EXPECT(gbc.pc(), 0x34b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 019E
        gbc.setState(0x7fe6, 0xe253, 0xe670, 0xe621, 0x530c, 0x9922, 0x1, 0x0);
        gbc.writeMem(0x7fe6, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xe253);
        EXPECT(gbc.pc(), 0x7fe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 019F
        gbc.setState(0x5b52, 0x733f, 0xa1e0, 0xed3a, 0x7772, 0xfee9, 0x0, 0x0);
        gbc.writeMem(0x5b52, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x733f);
        EXPECT(gbc.pc(), 0x5b54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 01A0
        gbc.setState(0x7f54, 0x18f1, 0x6950, 0x56b4, 0x3ce4, 0x8bab, 0x1, 0x0);
        gbc.writeMem(0x7f54, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x18f1);
        EXPECT(gbc.pc(), 0x7f56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 01A1
        gbc.setState(0x6781, 0xe72c, 0xda40, 0xfbd0, 0x46e3, 0x7cc1, 0x1, 0x0);
        gbc.writeMem(0x6781, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xe72c);
        EXPECT(gbc.pc(), 0x6783);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 01A2
        gbc.setState(0x2978, 0x708e, 0x1620, 0x8dc1, 0x36f5, 0x95b1, 0x1, 0x0);
        gbc.writeMem(0x2978, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x708e);
        EXPECT(gbc.pc(), 0x297a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 01A3
        gbc.setState(0x6a57, 0x1ef9, 0x8620, 0x2464, 0x471f, 0x6d98, 0x1, 0x0);
        gbc.writeMem(0x6a57, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x1ef9);
        EXPECT(gbc.pc(), 0x6a59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 01A4
        gbc.setState(0x392e, 0x17d5, 0x21c0, 0xb8e5, 0xc806, 0xf288, 0x0, 0x1);
        gbc.writeMem(0x392e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x17d5);
        EXPECT(gbc.pc(), 0x3930);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 01A5
        gbc.setState(0x781a, 0x824, 0x5890, 0x367c, 0x3e87, 0xf3f7, 0x1, 0x0);
        gbc.writeMem(0x781a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x824);
        EXPECT(gbc.pc(), 0x781c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 01A6
        gbc.setState(0xa6d9, 0x31, 0x8950, 0x137c, 0xb117, 0x304d, 0x0, 0x1);
        gbc.writeMem(0xa6d9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x31);
        EXPECT(gbc.pc(), 0xa6db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6d9), 0xcb);
        EXPECT(gbc.readMem(0xa6da), 0xe9);
        // CB E9 01A7
        gbc.setState(0x56cf, 0x46ca, 0x6d40, 0x1047, 0x975e, 0x8a2c, 0x0, 0x0);
        gbc.writeMem(0x56cf, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x46ca);
        EXPECT(gbc.pc(), 0x56d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 01A8
        gbc.setState(0x4ee7, 0xee80, 0x8f10, 0xad80, 0xf63d, 0x1c0e, 0x0, 0x0);
        gbc.writeMem(0x4ee7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xee80);
        EXPECT(gbc.pc(), 0x4ee9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 01A9
        gbc.setState(0xe47e, 0x2a4d, 0x3920, 0xfcd5, 0xf37f, 0xd800, 0x0, 0x0);
        gbc.writeMem(0xe47e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x2a4d);
        EXPECT(gbc.pc(), 0xe480);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe47e), 0xcb);
        EXPECT(gbc.readMem(0xe47f), 0xe9);
        // CB E9 01AA
        gbc.setState(0x559, 0xc553, 0x2800, 0x3c65, 0x26ee, 0xa597, 0x0, 0x0);
        gbc.writeMem(0x559, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xc553);
        EXPECT(gbc.pc(), 0x55b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 01AB
        gbc.setState(0x8aac, 0x666f, 0x1450, 0x2a0, 0xdd85, 0xff79, 0x0, 0x0);
        gbc.writeMem(0x8aac, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x666f);
        EXPECT(gbc.pc(), 0x8aae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8aac), 0xcb);
        EXPECT(gbc.readMem(0x8aad), 0xe9);
        // CB E9 01AC
        gbc.setState(0xd139, 0xc785, 0x6320, 0x72e2, 0x956a, 0xc685, 0x1, 0x0);
        gbc.writeMem(0xd139, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xc785);
        EXPECT(gbc.pc(), 0xd13b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd139), 0xcb);
        EXPECT(gbc.readMem(0xd13a), 0xe9);
        // CB E9 01AD
        gbc.setState(0x7e09, 0x6f95, 0x6dd0, 0x6d2f, 0x8d8a, 0x501b, 0x0, 0x0);
        gbc.writeMem(0x7e09, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6f95);
        EXPECT(gbc.pc(), 0x7e0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 01AE
        gbc.setState(0x7ff1, 0x68f, 0x2160, 0x3ea4, 0xd8f6, 0x244, 0x1, 0x1);
        gbc.writeMem(0x7ff1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x68f);
        EXPECT(gbc.pc(), 0x7ff3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 01AF
        gbc.setState(0xaed6, 0xf0f5, 0x8d40, 0x832a, 0x9bf9, 0x7fe1, 0x0, 0x1);
        gbc.writeMem(0xaed6, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xf0f5);
        EXPECT(gbc.pc(), 0xaed8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaed6), 0xcb);
        EXPECT(gbc.readMem(0xaed7), 0xe9);
        // CB E9 01B0
        gbc.setState(0xcfb0, 0xf65a, 0x4c90, 0x104, 0x321a, 0xe4c7, 0x0, 0x1);
        gbc.writeMem(0xcfb0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xf65a);
        EXPECT(gbc.pc(), 0xcfb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfb0), 0xcb);
        EXPECT(gbc.readMem(0xcfb1), 0xe9);
        // CB E9 01B1
        gbc.setState(0xdb0c, 0xd892, 0xf1f0, 0xbeb5, 0xa45f, 0x8958, 0x1, 0x0);
        gbc.writeMem(0xdb0c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xd892);
        EXPECT(gbc.pc(), 0xdb0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb0c), 0xcb);
        EXPECT(gbc.readMem(0xdb0d), 0xe9);
        // CB E9 01B2
        gbc.setState(0xc01a, 0xe8cb, 0x9510, 0xe31b, 0x701f, 0xbe97, 0x0, 0x0);
        gbc.writeMem(0xc01a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xe8cb);
        EXPECT(gbc.pc(), 0xc01c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc01a), 0xcb);
        EXPECT(gbc.readMem(0xc01b), 0xe9);
        // CB E9 01B3
        gbc.setState(0xc276, 0x4b8a, 0x9d10, 0x1af8, 0x8c96, 0x187e, 0x0, 0x0);
        gbc.writeMem(0xc276, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x4b8a);
        EXPECT(gbc.pc(), 0xc278);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc276), 0xcb);
        EXPECT(gbc.readMem(0xc277), 0xe9);
        // CB E9 01B4
        gbc.setState(0x5ecf, 0x1a9e, 0xce10, 0x1d76, 0xe443, 0x11d1, 0x1, 0x1);
        gbc.writeMem(0x5ecf, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x1a9e);
        EXPECT(gbc.pc(), 0x5ed1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 01B6
        gbc.setState(0xc274, 0x3547, 0xa990, 0xd000, 0x5f8c, 0xe35b, 0x0, 0x0);
        gbc.writeMem(0xc274, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x3547);
        EXPECT(gbc.pc(), 0xc276);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc274), 0xcb);
        EXPECT(gbc.readMem(0xc275), 0xe9);
        // CB E9 01B7
        gbc.setState(0xc5a9, 0x447f, 0xf0a0, 0xddbe, 0x8b10, 0x76c4, 0x1, 0x0);
        gbc.writeMem(0xc5a9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x447f);
        EXPECT(gbc.pc(), 0xc5ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5a9), 0xcb);
        EXPECT(gbc.readMem(0xc5aa), 0xe9);
        // CB E9 01B8
        gbc.setState(0x9a03, 0x37b6, 0x48d0, 0x78fc, 0x7796, 0xd5e8, 0x0, 0x0);
        gbc.writeMem(0x9a03, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x37b6);
        EXPECT(gbc.pc(), 0x9a05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a03), 0xcb);
        EXPECT(gbc.readMem(0x9a04), 0xe9);
        // CB E9 01B9
        gbc.setState(0x7cb7, 0xd066, 0xcd60, 0x3d25, 0x4472, 0xf83e, 0x1, 0x1);
        gbc.writeMem(0x7cb7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xd066);
        EXPECT(gbc.pc(), 0x7cb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 01BA
        gbc.setState(0x7156, 0x4efa, 0x7900, 0x5997, 0x991a, 0x36e0, 0x1, 0x1);
        gbc.writeMem(0x7156, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x4efa);
        EXPECT(gbc.pc(), 0x7158);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 01BB
        gbc.setState(0xec63, 0x77d7, 0x3350, 0x9621, 0xc4bc, 0x12b, 0x1, 0x1);
        gbc.writeMem(0xec63, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x77d7);
        EXPECT(gbc.pc(), 0xec65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec63), 0xcb);
        EXPECT(gbc.readMem(0xec64), 0xe9);
        // CB E9 01BC
        gbc.setState(0x3290, 0xd504, 0x9040, 0x220b, 0x1db4, 0x7428, 0x0, 0x0);
        gbc.writeMem(0x3290, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xd504);
        EXPECT(gbc.pc(), 0x3292);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 01BD
        gbc.setState(0x3e90, 0x1ce, 0xb180, 0x678e, 0x9aad, 0x2774, 0x1, 0x1);
        gbc.writeMem(0x3e90, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x1ce);
        EXPECT(gbc.pc(), 0x3e92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 01BE
        gbc.setState(0x49b9, 0x28ca, 0xa90, 0x77d8, 0xc663, 0xc462, 0x1, 0x1);
        gbc.writeMem(0x49b9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x28ca);
        EXPECT(gbc.pc(), 0x49bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 01BF
        gbc.setState(0x5d4e, 0x7220, 0x9e10, 0x239, 0x94b7, 0x6cf4, 0x0, 0x1);
        gbc.writeMem(0x5d4e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x7220);
        EXPECT(gbc.pc(), 0x5d50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 01C0
        gbc.setState(0x443c, 0x876d, 0xd750, 0xdd29, 0xbf70, 0x4e87, 0x1, 0x0);
        gbc.writeMem(0x443c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x876d);
        EXPECT(gbc.pc(), 0x443e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 01C1
        gbc.setState(0xae40, 0x383a, 0xf070, 0x4fd, 0x326, 0x6b27, 0x0, 0x1);
        gbc.writeMem(0xae40, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x383a);
        EXPECT(gbc.pc(), 0xae42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae40), 0xcb);
        EXPECT(gbc.readMem(0xae41), 0xe9);
        // CB E9 01C2
        gbc.setState(0x5dab, 0x7e41, 0xfbd0, 0x707a, 0x4b76, 0xeddb, 0x0, 0x1);
        gbc.writeMem(0x5dab, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7e41);
        EXPECT(gbc.pc(), 0x5dad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 01C3
        gbc.setState(0xc4c5, 0x5c3b, 0xa0b0, 0xed5c, 0xed42, 0x4a8b, 0x0, 0x1);
        gbc.writeMem(0xc4c5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x5c3b);
        EXPECT(gbc.pc(), 0xc4c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4c5), 0xcb);
        EXPECT(gbc.readMem(0xc4c6), 0xe9);
        // CB E9 01C4
        gbc.setState(0xc19a, 0x73ee, 0xda20, 0x3815, 0xac56, 0xf095, 0x0, 0x0);
        gbc.writeMem(0xc19a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x73ee);
        EXPECT(gbc.pc(), 0xc19c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc19a), 0xcb);
        EXPECT(gbc.readMem(0xc19b), 0xe9);
        // CB E9 01C5
        gbc.setState(0xaff9, 0x9eaa, 0x3460, 0xbcd5, 0x78ac, 0x9368, 0x0, 0x0);
        gbc.writeMem(0xaff9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x9eaa);
        EXPECT(gbc.pc(), 0xaffb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaff9), 0xcb);
        EXPECT(gbc.readMem(0xaffa), 0xe9);
        // CB E9 01C6
        gbc.setState(0x28ab, 0xc056, 0x6500, 0x8403, 0xb493, 0xf17, 0x1, 0x0);
        gbc.writeMem(0x28ab, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xc056);
        EXPECT(gbc.pc(), 0x28ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 01C7
        gbc.setState(0xd1e8, 0xdaeb, 0x5520, 0xdd9a, 0xa8b0, 0x2f9d, 0x0, 0x0);
        gbc.writeMem(0xd1e8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xdaeb);
        EXPECT(gbc.pc(), 0xd1ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1e8), 0xcb);
        EXPECT(gbc.readMem(0xd1e9), 0xe9);
        // CB E9 01C8
        gbc.setState(0xac0a, 0xe1d, 0x5920, 0x6a87, 0xd062, 0x1589, 0x1, 0x1);
        gbc.writeMem(0xac0a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe1d);
        EXPECT(gbc.pc(), 0xac0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac0a), 0xcb);
        EXPECT(gbc.readMem(0xac0b), 0xe9);
        // CB E9 01C9
        gbc.setState(0x1358, 0x6fed, 0x9ba0, 0xc153, 0x3923, 0xbc6d, 0x0, 0x0);
        gbc.writeMem(0x1358, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x6fed);
        EXPECT(gbc.pc(), 0x135a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 01CA
        gbc.setState(0x664e, 0x2c05, 0x50, 0xc02a, 0x2f2a, 0x677b, 0x1, 0x1);
        gbc.writeMem(0x664e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x2c05);
        EXPECT(gbc.pc(), 0x6650);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 01CB
        gbc.setState(0x3885, 0x54e1, 0x7d50, 0x1223, 0x407d, 0x4a07, 0x0, 0x1);
        gbc.writeMem(0x3885, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x54e1);
        EXPECT(gbc.pc(), 0x3887);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 01CD
        gbc.setState(0x46b, 0xdf52, 0xb60, 0xcf, 0x82db, 0x278b, 0x0, 0x1);
        gbc.writeMem(0x46b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xdf52);
        EXPECT(gbc.pc(), 0x46d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 01CE
        gbc.setState(0x164, 0x3b15, 0xb680, 0xfe05, 0x698d, 0x2bcd, 0x0, 0x0);
        gbc.writeMem(0x164, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x3b15);
        EXPECT(gbc.pc(), 0x166);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 01CF
        gbc.setState(0xd41d, 0xc37e, 0x7890, 0x2309, 0x2b23, 0xc643, 0x1, 0x1);
        gbc.writeMem(0xd41d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xc37e);
        EXPECT(gbc.pc(), 0xd41f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd41d), 0xcb);
        EXPECT(gbc.readMem(0xd41e), 0xe9);
        // CB E9 01D0
        gbc.setState(0x7bdc, 0xa849, 0x94f0, 0x2f02, 0x1189, 0x59a1, 0x1, 0x0);
        gbc.writeMem(0x7bdc, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa849);
        EXPECT(gbc.pc(), 0x7bde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 01D1
        gbc.setState(0x7395, 0x4774, 0xaa30, 0x2422, 0xad24, 0xd19d, 0x0, 0x0);
        gbc.writeMem(0x7395, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x4774);
        EXPECT(gbc.pc(), 0x7397);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 01D2
        gbc.setState(0x8c3b, 0x9b3b, 0x57b0, 0x15ac, 0x8d50, 0x3578, 0x1, 0x0);
        gbc.writeMem(0x8c3b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x9b3b);
        EXPECT(gbc.pc(), 0x8c3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c3b), 0xcb);
        EXPECT(gbc.readMem(0x8c3c), 0xe9);
        // CB E9 01D3
        gbc.setState(0x4480, 0x1fad, 0xc7b0, 0x223a, 0xba4b, 0x14b4, 0x0, 0x0);
        gbc.writeMem(0x4480, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x1fad);
        EXPECT(gbc.pc(), 0x4482);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 01D4
        gbc.setState(0x1adf, 0xe8fe, 0xa4e0, 0x1d2e, 0xeee3, 0x294f, 0x1, 0x0);
        gbc.writeMem(0x1adf, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe8fe);
        EXPECT(gbc.pc(), 0x1ae1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 01D5
        gbc.setState(0x9106, 0x884c, 0x1a40, 0xeea, 0xb8c7, 0xa52f, 0x0, 0x0);
        gbc.writeMem(0x9106, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x884c);
        EXPECT(gbc.pc(), 0x9108);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9106), 0xcb);
        EXPECT(gbc.readMem(0x9107), 0xe9);
        // CB E9 01D6
        gbc.setState(0x2c8f, 0xbe85, 0xd150, 0x6c08, 0xae10, 0xcbac, 0x0, 0x1);
        gbc.writeMem(0x2c8f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xbe85);
        EXPECT(gbc.pc(), 0x2c91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 01D8
        gbc.setState(0x976e, 0xcc10, 0xea50, 0x4530, 0x5c1a, 0xc2d8, 0x0, 0x0);
        gbc.writeMem(0x976e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xcc10);
        EXPECT(gbc.pc(), 0x9770);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x976e), 0xcb);
        EXPECT(gbc.readMem(0x976f), 0xe9);
        // CB E9 01D9
        gbc.setState(0xab08, 0x97f4, 0x5e70, 0xabfa, 0xd719, 0x9fab, 0x0, 0x1);
        gbc.writeMem(0xab08, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x97f4);
        EXPECT(gbc.pc(), 0xab0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab08), 0xcb);
        EXPECT(gbc.readMem(0xab09), 0xe9);
        // CB E9 01DA
        gbc.setState(0x30b4, 0xe298, 0x3710, 0x5ffc, 0xc40f, 0xf217, 0x0, 0x0);
        gbc.writeMem(0x30b4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xe298);
        EXPECT(gbc.pc(), 0x30b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 01DB
        gbc.setState(0x1e38, 0x16b3, 0x5fe0, 0xa4a3, 0x1c7c, 0x84e8, 0x0, 0x1);
        gbc.writeMem(0x1e38, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x16b3);
        EXPECT(gbc.pc(), 0x1e3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 01DC
        gbc.setState(0x11a, 0x8100, 0xdd40, 0xc3e1, 0x757, 0xc2ca, 0x0, 0x1);
        gbc.writeMem(0x11a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8100);
        EXPECT(gbc.pc(), 0x11c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 01DD
        gbc.setState(0x3b4b, 0xe2da, 0x6610, 0x56e8, 0xef99, 0x36c6, 0x0, 0x1);
        gbc.writeMem(0x3b4b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xe2da);
        EXPECT(gbc.pc(), 0x3b4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 01DE
        gbc.setState(0x7058, 0xf50a, 0x2a30, 0xa73c, 0x5e3f, 0xa3c6, 0x1, 0x0);
        gbc.writeMem(0x7058, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xf50a);
        EXPECT(gbc.pc(), 0x705a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 01DF
        gbc.setState(0xc123, 0x54d4, 0x8050, 0x92f3, 0xf2e2, 0xdfeb, 0x0, 0x0);
        gbc.writeMem(0xc123, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x54d4);
        EXPECT(gbc.pc(), 0xc125);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc123), 0xcb);
        EXPECT(gbc.readMem(0xc124), 0xe9);
        // CB E9 01E0
        gbc.setState(0x9324, 0xfae1, 0xcb90, 0xf61, 0xc2fd, 0x4b7f, 0x0, 0x0);
        gbc.writeMem(0x9324, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xfae1);
        EXPECT(gbc.pc(), 0x9326);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9324), 0xcb);
        EXPECT(gbc.readMem(0x9325), 0xe9);
        // CB E9 01E1
        gbc.setState(0xc783, 0xcb42, 0x7300, 0xb0f9, 0x3bf8, 0x2473, 0x0, 0x0);
        gbc.writeMem(0xc783, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xcb42);
        EXPECT(gbc.pc(), 0xc785);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc783), 0xcb);
        EXPECT(gbc.readMem(0xc784), 0xe9);
        // CB E9 01E2
        gbc.setState(0xb5dd, 0x9b54, 0xcad0, 0x8cdc, 0x40d5, 0x2ca1, 0x0, 0x0);
        gbc.writeMem(0xb5dd, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9b54);
        EXPECT(gbc.pc(), 0xb5df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5dd), 0xcb);
        EXPECT(gbc.readMem(0xb5de), 0xe9);
        // CB E9 01E3
        gbc.setState(0x5612, 0x1a4d, 0xa3f0, 0x31c2, 0xa8d4, 0xb62, 0x1, 0x0);
        gbc.writeMem(0x5612, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x1a4d);
        EXPECT(gbc.pc(), 0x5614);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 01E5
        gbc.setState(0x7fae, 0xb13a, 0x5f70, 0x7513, 0xaaa6, 0x625, 0x1, 0x0);
        gbc.writeMem(0x7fae, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb13a);
        EXPECT(gbc.pc(), 0x7fb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 01E7
        gbc.setState(0x2596, 0x31da, 0x4ef0, 0xcb7a, 0xebd1, 0xcb6d, 0x0, 0x0);
        gbc.writeMem(0x2596, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x31da);
        EXPECT(gbc.pc(), 0x2598);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 01E8
        gbc.setState(0x30ad, 0x71b9, 0x5c70, 0xef53, 0xb596, 0xdf9a, 0x1, 0x1);
        gbc.writeMem(0x30ad, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x71b9);
        EXPECT(gbc.pc(), 0x30af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 01E9
        gbc.setState(0xd53e, 0xe16, 0x7090, 0x52ad, 0xc6b, 0x1089, 0x1, 0x0);
        gbc.writeMem(0xd53e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe16);
        EXPECT(gbc.pc(), 0xd540);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd53e), 0xcb);
        EXPECT(gbc.readMem(0xd53f), 0xe9);
        // CB E9 01EA
        gbc.setState(0xe7b7, 0x385f, 0xd6c0, 0x2004, 0x4663, 0x330, 0x0, 0x1);
        gbc.writeMem(0xe7b7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x385f);
        EXPECT(gbc.pc(), 0xe7b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7b7), 0xcb);
        EXPECT(gbc.readMem(0xe7b8), 0xe9);
        // CB E9 01EB
        gbc.setState(0x745e, 0x6e07, 0xe580, 0xee57, 0x4c29, 0xff3e, 0x1, 0x0);
        gbc.writeMem(0x745e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x6e07);
        EXPECT(gbc.pc(), 0x7460);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 01EC
        gbc.setState(0xedda, 0x4e3b, 0xc5c0, 0x1589, 0x25d6, 0xec0d, 0x0, 0x0);
        gbc.writeMem(0xedda, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x4e3b);
        EXPECT(gbc.pc(), 0xeddc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedda), 0xcb);
        EXPECT(gbc.readMem(0xeddb), 0xe9);
        // CB E9 01ED
        gbc.setState(0x853e, 0x5e9, 0xf40, 0xa76c, 0xf363, 0x11b0, 0x0, 0x0);
        gbc.writeMem(0x853e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x5e9);
        EXPECT(gbc.pc(), 0x8540);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x853e), 0xcb);
        EXPECT(gbc.readMem(0x853f), 0xe9);
        // CB E9 01EF
        gbc.setState(0x6176, 0x6fbe, 0xb2c0, 0xd43c, 0x3988, 0x1871, 0x0, 0x0);
        gbc.writeMem(0x6176, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x6fbe);
        EXPECT(gbc.pc(), 0x6178);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 01F0
        gbc.setState(0x1efd, 0xd161, 0xf560, 0x65cd, 0x1e0a, 0xda4d, 0x1, 0x1);
        gbc.writeMem(0x1efd, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xd161);
        EXPECT(gbc.pc(), 0x1eff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 01F1
        gbc.setState(0x713d, 0xb606, 0x4780, 0xc9b, 0xc415, 0x85a8, 0x1, 0x1);
        gbc.writeMem(0x713d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb606);
        EXPECT(gbc.pc(), 0x713f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 01F2
        gbc.setState(0xedd0, 0xbbb3, 0x21a0, 0x4312, 0x3935, 0x558e, 0x0, 0x1);
        gbc.writeMem(0xedd0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xbbb3);
        EXPECT(gbc.pc(), 0xedd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedd0), 0xcb);
        EXPECT(gbc.readMem(0xedd1), 0xe9);
        // CB E9 01F3
        gbc.setState(0x9a2d, 0x56d5, 0x2f10, 0xefa5, 0xce1a, 0x486b, 0x0, 0x1);
        gbc.writeMem(0x9a2d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x56d5);
        EXPECT(gbc.pc(), 0x9a2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a2d), 0xcb);
        EXPECT(gbc.readMem(0x9a2e), 0xe9);
        // CB E9 01F4
        gbc.setState(0xcd1, 0xda19, 0x1850, 0xb9, 0xada, 0x9fb1, 0x0, 0x1);
        gbc.writeMem(0xcd1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xda19);
        EXPECT(gbc.pc(), 0xcd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 01F6
        gbc.setState(0xd97a, 0xb5b7, 0xee40, 0x3d02, 0xa6f, 0x5a91, 0x0, 0x0);
        gbc.writeMem(0xd97a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xb5b7);
        EXPECT(gbc.pc(), 0xd97c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd97a), 0xcb);
        EXPECT(gbc.readMem(0xd97b), 0xe9);
        // CB E9 01F7
        gbc.setState(0x7efa, 0x17dd, 0xfba0, 0x1d44, 0x4f34, 0xbe2, 0x0, 0x1);
        gbc.writeMem(0x7efa, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x17dd);
        EXPECT(gbc.pc(), 0x7efc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 01F8
        gbc.setState(0xebe5, 0xb9a9, 0x26a0, 0x11fe, 0xa986, 0xb891, 0x0, 0x0);
        gbc.writeMem(0xebe5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xb9a9);
        EXPECT(gbc.pc(), 0xebe7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebe5), 0xcb);
        EXPECT(gbc.readMem(0xebe6), 0xe9);
        // CB E9 01F9
        gbc.setState(0xa1b9, 0x61df, 0x9e20, 0xd09d, 0x91e4, 0x71d6, 0x1, 0x0);
        gbc.writeMem(0xa1b9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x61df);
        EXPECT(gbc.pc(), 0xa1bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1b9), 0xcb);
        EXPECT(gbc.readMem(0xa1ba), 0xe9);
        // CB E9 01FA
        gbc.setState(0x7fbc, 0x1ef6, 0x1860, 0x6158, 0xe6e1, 0x6101, 0x1, 0x1);
        gbc.writeMem(0x7fbc, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x1ef6);
        EXPECT(gbc.pc(), 0x7fbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 01FB
        gbc.setState(0x7447, 0x9d69, 0x22f0, 0x4848, 0x42b6, 0x1e99, 0x1, 0x0);
        gbc.writeMem(0x7447, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x9d69);
        EXPECT(gbc.pc(), 0x7449);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 01FC
        gbc.setState(0x820d, 0x19cd, 0x2ca0, 0x1ab9, 0x94d, 0x373, 0x1, 0x1);
        gbc.writeMem(0x820d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x19cd);
        EXPECT(gbc.pc(), 0x820f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x820d), 0xcb);
        EXPECT(gbc.readMem(0x820e), 0xe9);
        // CB E9 01FD
        gbc.setState(0x8318, 0xe631, 0x3c80, 0xac57, 0x1b3e, 0x4503, 0x0, 0x1);
        gbc.writeMem(0x8318, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xe631);
        EXPECT(gbc.pc(), 0x831a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8318), 0xcb);
        EXPECT(gbc.readMem(0x8319), 0xe9);
        // CB E9 01FE
        gbc.setState(0x388, 0xdc09, 0x1a40, 0x8864, 0xfb6d, 0xa63f, 0x1, 0x0);
        gbc.writeMem(0x388, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xdc09);
        EXPECT(gbc.pc(), 0x38a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 01FF
        gbc.setState(0xa510, 0xe5c4, 0xd590, 0x6ce, 0x1b21, 0xf88, 0x0, 0x0);
        gbc.writeMem(0xa510, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe5c4);
        EXPECT(gbc.pc(), 0xa512);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa510), 0xcb);
        EXPECT(gbc.readMem(0xa511), 0xe9);
        // CB E9 0200
        gbc.setState(0x5ab6, 0x9a07, 0x1370, 0xdaf0, 0xea9c, 0x200c, 0x1, 0x0);
        gbc.writeMem(0x5ab6, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x9a07);
        EXPECT(gbc.pc(), 0x5ab8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0201
        gbc.setState(0x49b2, 0x2ab5, 0x6610, 0x340c, 0x39b7, 0xbeb1, 0x1, 0x1);
        gbc.writeMem(0x49b2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x2ab5);
        EXPECT(gbc.pc(), 0x49b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0202
        gbc.setState(0xa4c1, 0x2216, 0x45e0, 0x9d40, 0xb23b, 0xe9aa, 0x0, 0x1);
        gbc.writeMem(0xa4c1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x2216);
        EXPECT(gbc.pc(), 0xa4c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4c1), 0xcb);
        EXPECT(gbc.readMem(0xa4c2), 0xe9);
        // CB E9 0203
        gbc.setState(0x7290, 0x24b7, 0x8c00, 0x5d24, 0x2a1b, 0xe9bd, 0x0, 0x1);
        gbc.writeMem(0x7290, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x24b7);
        EXPECT(gbc.pc(), 0x7292);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0204
        gbc.setState(0x775e, 0x61f3, 0x2d00, 0x8ae4, 0x8a06, 0x8632, 0x0, 0x0);
        gbc.writeMem(0x775e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x61f3);
        EXPECT(gbc.pc(), 0x7760);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0205
        gbc.setState(0x21a, 0x67c, 0xcac0, 0x4d8a, 0xf34c, 0xa450, 0x0, 0x0);
        gbc.writeMem(0x21a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x67c);
        EXPECT(gbc.pc(), 0x21c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0206
        gbc.setState(0x55d1, 0x4f0b, 0xdaf0, 0x7ea6, 0x8d8e, 0xded6, 0x0, 0x0);
        gbc.writeMem(0x55d1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x4f0b);
        EXPECT(gbc.pc(), 0x55d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0207
        gbc.setState(0xe5d5, 0x55d2, 0x94f0, 0x2c44, 0x4e16, 0x940f, 0x0, 0x1);
        gbc.writeMem(0xe5d5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x55d2);
        EXPECT(gbc.pc(), 0xe5d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5d5), 0xcb);
        EXPECT(gbc.readMem(0xe5d6), 0xe9);
        // CB E9 0208
        gbc.setState(0x4881, 0xdd9f, 0xffe0, 0x6ea8, 0xd35f, 0xae6, 0x0, 0x1);
        gbc.writeMem(0x4881, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xdd9f);
        EXPECT(gbc.pc(), 0x4883);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0209
        gbc.setState(0x1e77, 0x2fc1, 0x8e10, 0x4e3, 0x43ea, 0x6c91, 0x0, 0x0);
        gbc.writeMem(0x1e77, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x2fc1);
        EXPECT(gbc.pc(), 0x1e79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 020A
        gbc.setState(0xa36f, 0xadd4, 0x1860, 0x1ad2, 0xc396, 0xe7e5, 0x1, 0x1);
        gbc.writeMem(0xa36f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xadd4);
        EXPECT(gbc.pc(), 0xa371);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa36f), 0xcb);
        EXPECT(gbc.readMem(0xa370), 0xe9);
        // CB E9 020B
        gbc.setState(0x946, 0xd4cf, 0xeb10, 0xc1e5, 0x936e, 0x9952, 0x1, 0x1);
        gbc.writeMem(0x946, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd4cf);
        EXPECT(gbc.pc(), 0x948);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 020C
        gbc.setState(0x1f4e, 0xa58c, 0xd2d0, 0xd51c, 0x8570, 0xa280, 0x1, 0x1);
        gbc.writeMem(0x1f4e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xa58c);
        EXPECT(gbc.pc(), 0x1f50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 020D
        gbc.setState(0x9a, 0xaf1f, 0x4740, 0x5581, 0xa2a4, 0xb520, 0x1, 0x0);
        gbc.writeMem(0x9a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xaf1f);
        EXPECT(gbc.pc(), 0x9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 020E
        gbc.setState(0x8743, 0x59ac, 0xd80, 0x2f18, 0x458a, 0x4409, 0x1, 0x0);
        gbc.writeMem(0x8743, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x59ac);
        EXPECT(gbc.pc(), 0x8745);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8743), 0xcb);
        EXPECT(gbc.readMem(0x8744), 0xe9);
        // CB E9 020F
        gbc.setState(0x257, 0xebd5, 0xb00, 0x774c, 0x23c6, 0x9735, 0x0, 0x0);
        gbc.writeMem(0x257, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xebd5);
        EXPECT(gbc.pc(), 0x259);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0210
        gbc.setState(0x5330, 0xaa82, 0xf210, 0x2a76, 0x7f39, 0xcdc, 0x0, 0x0);
        gbc.writeMem(0x5330, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xaa82);
        EXPECT(gbc.pc(), 0x5332);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0211
        gbc.setState(0x78d5, 0x2d95, 0x4180, 0xfa75, 0x9c8, 0x7772, 0x0, 0x0);
        gbc.writeMem(0x78d5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2d95);
        EXPECT(gbc.pc(), 0x78d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0212
        gbc.setState(0xa7d0, 0xf1b7, 0x9e30, 0x69c, 0xf34b, 0x9669, 0x0, 0x1);
        gbc.writeMem(0xa7d0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xf1b7);
        EXPECT(gbc.pc(), 0xa7d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7d0), 0xcb);
        EXPECT(gbc.readMem(0xa7d1), 0xe9);
        // CB E9 0213
        gbc.setState(0xb178, 0xbb41, 0xe340, 0x7dd7, 0x7538, 0x25c6, 0x1, 0x0);
        gbc.writeMem(0xb178, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xbb41);
        EXPECT(gbc.pc(), 0xb17a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb178), 0xcb);
        EXPECT(gbc.readMem(0xb179), 0xe9);
        // CB E9 0214
        gbc.setState(0x2af9, 0x9a07, 0x71e0, 0x18bd, 0xf8cb, 0x987f, 0x0, 0x0);
        gbc.writeMem(0x2af9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x9a07);
        EXPECT(gbc.pc(), 0x2afb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0215
        gbc.setState(0x5c40, 0x73d9, 0x6250, 0x71e1, 0xa194, 0x6fe8, 0x0, 0x0);
        gbc.writeMem(0x5c40, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x73d9);
        EXPECT(gbc.pc(), 0x5c42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0216
        gbc.setState(0xdf36, 0x8640, 0xa5e0, 0xb938, 0xbeb, 0xdb74, 0x0, 0x1);
        gbc.writeMem(0xdf36, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x8640);
        EXPECT(gbc.pc(), 0xdf38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf36), 0xcb);
        EXPECT(gbc.readMem(0xdf37), 0xe9);
        // CB E9 0217
        gbc.setState(0x348a, 0xea8b, 0x8190, 0x205d, 0x8d4a, 0xf8, 0x0, 0x1);
        gbc.writeMem(0x348a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xea8b);
        EXPECT(gbc.pc(), 0x348c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0218
        gbc.setState(0x299f, 0x8605, 0xfd00, 0x5bdd, 0xac12, 0x4842, 0x1, 0x0);
        gbc.writeMem(0x299f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x8605);
        EXPECT(gbc.pc(), 0x29a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0219
        gbc.setState(0xbba0, 0x8e97, 0xc640, 0x7d8d, 0xdc38, 0x6c1b, 0x0, 0x1);
        gbc.writeMem(0xbba0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x8e97);
        EXPECT(gbc.pc(), 0xbba2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbba0), 0xcb);
        EXPECT(gbc.readMem(0xbba1), 0xe9);
        // CB E9 021A
        gbc.setState(0x728f, 0x240f, 0x430, 0x904d, 0x20fa, 0x6469, 0x1, 0x0);
        gbc.writeMem(0x728f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x240f);
        EXPECT(gbc.pc(), 0x7291);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 021B
        gbc.setState(0xe1a0, 0xfde6, 0xc1a0, 0x4d57, 0x8c70, 0x1c57, 0x0, 0x0);
        gbc.writeMem(0xe1a0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xfde6);
        EXPECT(gbc.pc(), 0xe1a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1a0), 0xcb);
        EXPECT(gbc.readMem(0xe1a1), 0xe9);
        // CB E9 021C
        gbc.setState(0xa93e, 0x2fb9, 0xdbc0, 0xcb7f, 0xfea9, 0x2395, 0x0, 0x1);
        gbc.writeMem(0xa93e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2fb9);
        EXPECT(gbc.pc(), 0xa940);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa93e), 0xcb);
        EXPECT(gbc.readMem(0xa93f), 0xe9);
        // CB E9 021D
        gbc.setState(0xaed6, 0xdcb1, 0x7270, 0x590c, 0xd1f7, 0xc975, 0x0, 0x0);
        gbc.writeMem(0xaed6, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xdcb1);
        EXPECT(gbc.pc(), 0xaed8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaed6), 0xcb);
        EXPECT(gbc.readMem(0xaed7), 0xe9);
        // CB E9 021E
        gbc.setState(0xb3b8, 0x5791, 0x2f20, 0xa22e, 0xd006, 0xfa48, 0x0, 0x0);
        gbc.writeMem(0xb3b8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x5791);
        EXPECT(gbc.pc(), 0xb3ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3b8), 0xcb);
        EXPECT(gbc.readMem(0xb3b9), 0xe9);
        // CB E9 021F
        gbc.setState(0xc59e, 0x7ca2, 0x2b90, 0xc104, 0xd966, 0x8c0e, 0x1, 0x1);
        gbc.writeMem(0xc59e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x7ca2);
        EXPECT(gbc.pc(), 0xc5a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc59e), 0xcb);
        EXPECT(gbc.readMem(0xc59f), 0xe9);
        // CB E9 0221
        gbc.setState(0x2692, 0x4728, 0x29c0, 0x817f, 0xe8b, 0xa9b5, 0x1, 0x1);
        gbc.writeMem(0x2692, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x4728);
        EXPECT(gbc.pc(), 0x2694);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0222
        gbc.setState(0x3993, 0x2025, 0xf0c0, 0xf6c7, 0x590b, 0x30d3, 0x1, 0x1);
        gbc.writeMem(0x3993, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2025);
        EXPECT(gbc.pc(), 0x3995);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0223
        gbc.setState(0x81d1, 0xe458, 0xc370, 0x679e, 0xc139, 0x5b7c, 0x0, 0x0);
        gbc.writeMem(0x81d1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe458);
        EXPECT(gbc.pc(), 0x81d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81d1), 0xcb);
        EXPECT(gbc.readMem(0x81d2), 0xe9);
        // CB E9 0224
        gbc.setState(0x171b, 0x7251, 0x8650, 0xbb57, 0x8eb5, 0x84a5, 0x0, 0x1);
        gbc.writeMem(0x171b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x7251);
        EXPECT(gbc.pc(), 0x171d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0225
        gbc.setState(0x24fe, 0xd74a, 0x9f20, 0xb701, 0x72b4, 0x8577, 0x1, 0x0);
        gbc.writeMem(0x24fe, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd74a);
        EXPECT(gbc.pc(), 0x2500);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0226
        gbc.setState(0xbeba, 0xe954, 0x25a0, 0x3684, 0x2e9, 0xcfa9, 0x1, 0x0);
        gbc.writeMem(0xbeba, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe954);
        EXPECT(gbc.pc(), 0xbebc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeba), 0xcb);
        EXPECT(gbc.readMem(0xbebb), 0xe9);
        // CB E9 0227
        gbc.setState(0x3671, 0xd008, 0xc90, 0x6aad, 0x48e, 0x406f, 0x0, 0x1);
        gbc.writeMem(0x3671, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xd008);
        EXPECT(gbc.pc(), 0x3673);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0228
        gbc.setState(0x98d1, 0x2ae2, 0x2430, 0x48a0, 0x81b2, 0x58d9, 0x0, 0x1);
        gbc.writeMem(0x98d1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x2ae2);
        EXPECT(gbc.pc(), 0x98d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98d1), 0xcb);
        EXPECT(gbc.readMem(0x98d2), 0xe9);
        // CB E9 0229
        gbc.setState(0x6638, 0xd03c, 0x9310, 0x969b, 0x5cb4, 0x53e5, 0x0, 0x0);
        gbc.writeMem(0x6638, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xd03c);
        EXPECT(gbc.pc(), 0x663a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 022A
        gbc.setState(0x240d, 0x6b2e, 0xeb20, 0x803d, 0x154, 0x7b2e, 0x1, 0x1);
        gbc.writeMem(0x240d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x6b2e);
        EXPECT(gbc.pc(), 0x240f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 022B
        gbc.setState(0x6867, 0xc69, 0x89f0, 0x404f, 0xb938, 0x3c0a, 0x1, 0x1);
        gbc.writeMem(0x6867, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xc69);
        EXPECT(gbc.pc(), 0x6869);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 022C
        gbc.setState(0x5591, 0x91e3, 0xd9f0, 0xefd0, 0xe613, 0x425f, 0x1, 0x1);
        gbc.writeMem(0x5591, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x91e3);
        EXPECT(gbc.pc(), 0x5593);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 022D
        gbc.setState(0x3232, 0xc778, 0x14d0, 0x9372, 0xc7e1, 0x8161, 0x1, 0x1);
        gbc.writeMem(0x3232, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xc778);
        EXPECT(gbc.pc(), 0x3234);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 022E
        gbc.setState(0x945, 0xca4e, 0x3a70, 0xfa09, 0x922e, 0x20ea, 0x1, 0x1);
        gbc.writeMem(0x945, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xca4e);
        EXPECT(gbc.pc(), 0x947);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 022F
        gbc.setState(0x33f7, 0xd34, 0xc170, 0x1fcb, 0xed9c, 0x8d2b, 0x0, 0x1);
        gbc.writeMem(0x33f7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xd34);
        EXPECT(gbc.pc(), 0x33f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0230
        gbc.setState(0x2e2c, 0x8a4a, 0x5b80, 0x576c, 0x1ca8, 0xfb2f, 0x1, 0x0);
        gbc.writeMem(0x2e2c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x8a4a);
        EXPECT(gbc.pc(), 0x2e2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0231
        gbc.setState(0xc325, 0xac1f, 0x5ea0, 0xc284, 0x3236, 0x825c, 0x0, 0x1);
        gbc.writeMem(0xc325, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xac1f);
        EXPECT(gbc.pc(), 0xc327);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc325), 0xcb);
        EXPECT(gbc.readMem(0xc326), 0xe9);
        // CB E9 0232
        gbc.setState(0x888c, 0x8b4b, 0xf7d0, 0xfec0, 0xa4fd, 0x42b, 0x1, 0x0);
        gbc.writeMem(0x888c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x8b4b);
        EXPECT(gbc.pc(), 0x888e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x888c), 0xcb);
        EXPECT(gbc.readMem(0x888d), 0xe9);
        // CB E9 0233
        gbc.setState(0x512, 0xb08d, 0x920, 0xd8cc, 0x3fec, 0xb142, 0x0, 0x1);
        gbc.writeMem(0x512, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xb08d);
        EXPECT(gbc.pc(), 0x514);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0234
        gbc.setState(0x6213, 0x956a, 0xb2d0, 0xf10b, 0x6004, 0xe85d, 0x1, 0x0);
        gbc.writeMem(0x6213, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x956a);
        EXPECT(gbc.pc(), 0x6215);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0235
        gbc.setState(0xd673, 0x2d86, 0xc2c0, 0x4bf4, 0xda1a, 0x5059, 0x0, 0x1);
        gbc.writeMem(0xd673, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x2d86);
        EXPECT(gbc.pc(), 0xd675);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd673), 0xcb);
        EXPECT(gbc.readMem(0xd674), 0xe9);
        // CB E9 0236
        gbc.setState(0x6a1c, 0xe33f, 0x3840, 0x4890, 0x3974, 0x53f1, 0x1, 0x1);
        gbc.writeMem(0x6a1c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xe33f);
        EXPECT(gbc.pc(), 0x6a1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0237
        gbc.setState(0x2bd5, 0x6f12, 0xd770, 0x4c68, 0xc1ab, 0x9b64, 0x0, 0x1);
        gbc.writeMem(0x2bd5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x6f12);
        EXPECT(gbc.pc(), 0x2bd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0238
        gbc.setState(0x46cb, 0x7838, 0xc030, 0x440c, 0x38d, 0x4eb8, 0x0, 0x1);
        gbc.writeMem(0x46cb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x7838);
        EXPECT(gbc.pc(), 0x46cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0239
        gbc.setState(0x4241, 0xcf3f, 0x70a0, 0x43dd, 0xf89a, 0x7438, 0x0, 0x0);
        gbc.writeMem(0x4241, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xcf3f);
        EXPECT(gbc.pc(), 0x4243);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 023A
        gbc.setState(0x54d2, 0x67eb, 0x9a50, 0x5013, 0x2cbd, 0xc00f, 0x0, 0x0);
        gbc.writeMem(0x54d2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x67eb);
        EXPECT(gbc.pc(), 0x54d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 023B
        gbc.setState(0x192c, 0x7301, 0xc030, 0x8d5f, 0x6ddb, 0x76ed, 0x0, 0x1);
        gbc.writeMem(0x192c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x7301);
        EXPECT(gbc.pc(), 0x192e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 023C
        gbc.setState(0x95e2, 0x4ad1, 0x3900, 0x90fe, 0x2ac9, 0x7e78, 0x0, 0x1);
        gbc.writeMem(0x95e2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x4ad1);
        EXPECT(gbc.pc(), 0x95e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95e2), 0xcb);
        EXPECT(gbc.readMem(0x95e3), 0xe9);
        // CB E9 023D
        gbc.setState(0xaa9f, 0x5c4, 0x28a0, 0x7ec3, 0x7050, 0xde95, 0x0, 0x1);
        gbc.writeMem(0xaa9f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x5c4);
        EXPECT(gbc.pc(), 0xaaa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa9f), 0xcb);
        EXPECT(gbc.readMem(0xaaa0), 0xe9);
        // CB E9 023E
        gbc.setState(0x9862, 0x2080, 0x6ef0, 0xa318, 0x18f2, 0x7bc9, 0x0, 0x1);
        gbc.writeMem(0x9862, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x2080);
        EXPECT(gbc.pc(), 0x9864);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9862), 0xcb);
        EXPECT(gbc.readMem(0x9863), 0xe9);
        // CB E9 023F
        gbc.setState(0x52e4, 0x7008, 0x2af0, 0xafd, 0x39f8, 0x146f, 0x1, 0x1);
        gbc.writeMem(0x52e4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x7008);
        EXPECT(gbc.pc(), 0x52e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0240
        gbc.setState(0x204a, 0xe5a4, 0xca00, 0x2d4d, 0xe307, 0x5b89, 0x1, 0x0);
        gbc.writeMem(0x204a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe5a4);
        EXPECT(gbc.pc(), 0x204c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0241
        gbc.setState(0xa284, 0xb352, 0x8c00, 0x27ac, 0xd8c, 0x6cca, 0x0, 0x1);
        gbc.writeMem(0xa284, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xb352);
        EXPECT(gbc.pc(), 0xa286);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa284), 0xcb);
        EXPECT(gbc.readMem(0xa285), 0xe9);
        // CB E9 0242
        gbc.setState(0x8c90, 0xad06, 0xa90, 0x2028, 0x109d, 0xf038, 0x1, 0x0);
        gbc.writeMem(0x8c90, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xad06);
        EXPECT(gbc.pc(), 0x8c92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c90), 0xcb);
        EXPECT(gbc.readMem(0x8c91), 0xe9);
        // CB E9 0243
        gbc.setState(0x75f, 0x51ae, 0xdd60, 0xfb14, 0xb8ad, 0xda0, 0x0, 0x0);
        gbc.writeMem(0x75f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x51ae);
        EXPECT(gbc.pc(), 0x761);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0244
        gbc.setState(0xc957, 0x7459, 0xe7b0, 0x881a, 0xe6b2, 0xf258, 0x0, 0x1);
        gbc.writeMem(0xc957, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x7459);
        EXPECT(gbc.pc(), 0xc959);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc957), 0xcb);
        EXPECT(gbc.readMem(0xc958), 0xe9);
        // CB E9 0245
        gbc.setState(0xa18d, 0x765b, 0x9d10, 0xa84e, 0x98f, 0xf4f1, 0x1, 0x1);
        gbc.writeMem(0xa18d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x765b);
        EXPECT(gbc.pc(), 0xa18f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa18d), 0xcb);
        EXPECT(gbc.readMem(0xa18e), 0xe9);
        // CB E9 0246
        gbc.setState(0xaa2c, 0x12f3, 0x4780, 0x241c, 0xa541, 0xab1c, 0x0, 0x1);
        gbc.writeMem(0xaa2c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x12f3);
        EXPECT(gbc.pc(), 0xaa2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa2c), 0xcb);
        EXPECT(gbc.readMem(0xaa2d), 0xe9);
        // CB E9 0247
        gbc.setState(0x1465, 0x24f7, 0x1ed0, 0x3374, 0xa1c8, 0xda46, 0x0, 0x0);
        gbc.writeMem(0x1465, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x24f7);
        EXPECT(gbc.pc(), 0x1467);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0248
        gbc.setState(0xa3f9, 0x8961, 0xf2d0, 0x2d6c, 0x71c1, 0xa9d4, 0x1, 0x1);
        gbc.writeMem(0xa3f9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8961);
        EXPECT(gbc.pc(), 0xa3fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3f9), 0xcb);
        EXPECT(gbc.readMem(0xa3fa), 0xe9);
        // CB E9 0249
        gbc.setState(0x7616, 0x1f39, 0x47d0, 0x93af, 0x7135, 0x784b, 0x0, 0x0);
        gbc.writeMem(0x7616, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x1f39);
        EXPECT(gbc.pc(), 0x7618);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 024A
        gbc.setState(0xaa93, 0x969a, 0x1460, 0xe4e2, 0xe4de, 0xc073, 0x1, 0x0);
        gbc.writeMem(0xaa93, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x969a);
        EXPECT(gbc.pc(), 0xaa95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa93), 0xcb);
        EXPECT(gbc.readMem(0xaa94), 0xe9);
        // CB E9 024B
        gbc.setState(0x97d7, 0x40de, 0xdaf0, 0x62ba, 0x1bc1, 0xb5df, 0x1, 0x0);
        gbc.writeMem(0x97d7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x40de);
        EXPECT(gbc.pc(), 0x97d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97d7), 0xcb);
        EXPECT(gbc.readMem(0x97d8), 0xe9);
        // CB E9 024C
        gbc.setState(0xec36, 0x2ec8, 0xb250, 0x18d3, 0x7cae, 0x3e78, 0x1, 0x1);
        gbc.writeMem(0xec36, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x2ec8);
        EXPECT(gbc.pc(), 0xec38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec36), 0xcb);
        EXPECT(gbc.readMem(0xec37), 0xe9);
        // CB E9 024D
        gbc.setState(0x58aa, 0xf26d, 0x4790, 0xac1e, 0x5b79, 0xbfb0, 0x1, 0x1);
        gbc.writeMem(0x58aa, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xf26d);
        EXPECT(gbc.pc(), 0x58ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 024E
        gbc.setState(0x13b9, 0xd856, 0xcdb0, 0x91b8, 0xf1f5, 0xc7cb, 0x0, 0x1);
        gbc.writeMem(0x13b9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xd856);
        EXPECT(gbc.pc(), 0x13bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 024F
        gbc.setState(0x1c4a, 0x3127, 0xaa0, 0x8671, 0x1879, 0x52b7, 0x0, 0x0);
        gbc.writeMem(0x1c4a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x3127);
        EXPECT(gbc.pc(), 0x1c4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0250
        gbc.setState(0x6564, 0x8998, 0xce0, 0xdea1, 0xc1e4, 0xa90d, 0x0, 0x1);
        gbc.writeMem(0x6564, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8998);
        EXPECT(gbc.pc(), 0x6566);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0251
        gbc.setState(0x131e, 0x1c2f, 0x7db0, 0xacf9, 0x1f2b, 0xd266, 0x0, 0x0);
        gbc.writeMem(0x131e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x1c2f);
        EXPECT(gbc.pc(), 0x1320);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0252
        gbc.setState(0x4347, 0x21cf, 0xab10, 0xcaf0, 0x55a3, 0x7ebc, 0x1, 0x1);
        gbc.writeMem(0x4347, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x21cf);
        EXPECT(gbc.pc(), 0x4349);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0253
        gbc.setState(0xdb0d, 0xf879, 0x46e0, 0xfd7d, 0x185d, 0x59, 0x0, 0x0);
        gbc.writeMem(0xdb0d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xf879);
        EXPECT(gbc.pc(), 0xdb0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb0d), 0xcb);
        EXPECT(gbc.readMem(0xdb0e), 0xe9);
        // CB E9 0254
        gbc.setState(0x5765, 0xd495, 0x9110, 0x663b, 0x9ca3, 0x3bd8, 0x1, 0x1);
        gbc.writeMem(0x5765, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xd495);
        EXPECT(gbc.pc(), 0x5767);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0255
        gbc.setState(0x2f68, 0x62ec, 0x9dc0, 0x7a35, 0x6d8c, 0x2b34, 0x0, 0x1);
        gbc.writeMem(0x2f68, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x62ec);
        EXPECT(gbc.pc(), 0x2f6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0256
        gbc.setState(0x5a48, 0x3784, 0xf240, 0xb77d, 0x97a1, 0x7eda, 0x1, 0x1);
        gbc.writeMem(0x5a48, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x3784);
        EXPECT(gbc.pc(), 0x5a4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0257
        gbc.setState(0x5acc, 0xbe1f, 0x4db0, 0x756f, 0xf7bd, 0x557f, 0x0, 0x0);
        gbc.writeMem(0x5acc, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xbe1f);
        EXPECT(gbc.pc(), 0x5ace);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0259
        gbc.setState(0x4741, 0x53bc, 0x2120, 0x1995, 0xb98a, 0xd19, 0x1, 0x0);
        gbc.writeMem(0x4741, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x53bc);
        EXPECT(gbc.pc(), 0x4743);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 025A
        gbc.setState(0x2afb, 0x373a, 0xd490, 0x777, 0xc09, 0x4ab6, 0x1, 0x1);
        gbc.writeMem(0x2afb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x373a);
        EXPECT(gbc.pc(), 0x2afd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 025B
        gbc.setState(0x92de, 0xd8e3, 0x89d0, 0x3767, 0xfde2, 0x1aee, 0x0, 0x1);
        gbc.writeMem(0x92de, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xd8e3);
        EXPECT(gbc.pc(), 0x92e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92de), 0xcb);
        EXPECT(gbc.readMem(0x92df), 0xe9);
        // CB E9 025C
        gbc.setState(0x927e, 0x96b9, 0x3a50, 0xb94c, 0xa5ec, 0x82f8, 0x1, 0x1);
        gbc.writeMem(0x927e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x96b9);
        EXPECT(gbc.pc(), 0x9280);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x927e), 0xcb);
        EXPECT(gbc.readMem(0x927f), 0xe9);
        // CB E9 025D
        gbc.setState(0x2def, 0xaffd, 0x27e0, 0x9afb, 0x7c0d, 0x2b9c, 0x0, 0x1);
        gbc.writeMem(0x2def, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xaffd);
        EXPECT(gbc.pc(), 0x2df1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 025F
        gbc.setState(0xcdf, 0xdca1, 0x3ff0, 0x9c94, 0x203e, 0x354, 0x0, 0x0);
        gbc.writeMem(0xcdf, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xdca1);
        EXPECT(gbc.pc(), 0xce1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0260
        gbc.setState(0x70ba, 0x8cf5, 0x4750, 0xa05c, 0x35dc, 0x73c2, 0x1, 0x1);
        gbc.writeMem(0x70ba, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x8cf5);
        EXPECT(gbc.pc(), 0x70bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0261
        gbc.setState(0x41fb, 0xcbeb, 0x6080, 0xb36, 0xe387, 0x9dec, 0x0, 0x0);
        gbc.writeMem(0x41fb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xcbeb);
        EXPECT(gbc.pc(), 0x41fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0262
        gbc.setState(0xbceb, 0x58c3, 0xaac0, 0xd630, 0xacae, 0x77be, 0x0, 0x1);
        gbc.writeMem(0xbceb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x58c3);
        EXPECT(gbc.pc(), 0xbced);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbceb), 0xcb);
        EXPECT(gbc.readMem(0xbcec), 0xe9);
        // CB E9 0263
        gbc.setState(0xb18f, 0x1a61, 0xf6c0, 0x3278, 0x6db, 0x5a4a, 0x0, 0x0);
        gbc.writeMem(0xb18f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x1a61);
        EXPECT(gbc.pc(), 0xb191);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb18f), 0xcb);
        EXPECT(gbc.readMem(0xb190), 0xe9);
        // CB E9 0264
        gbc.setState(0x4d1f, 0x4b3c, 0x7eb0, 0x928e, 0x43db, 0xc548, 0x0, 0x0);
        gbc.writeMem(0x4d1f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x4b3c);
        EXPECT(gbc.pc(), 0x4d21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0265
        gbc.setState(0x8ab9, 0x217e, 0xfb40, 0xd4a8, 0x3631, 0x316f, 0x0, 0x0);
        gbc.writeMem(0x8ab9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x217e);
        EXPECT(gbc.pc(), 0x8abb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ab9), 0xcb);
        EXPECT(gbc.readMem(0x8aba), 0xe9);
        // CB E9 0266
        gbc.setState(0x5c9, 0x766b, 0xae70, 0x232d, 0xb1db, 0x1011, 0x0, 0x0);
        gbc.writeMem(0x5c9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x766b);
        EXPECT(gbc.pc(), 0x5cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0267
        gbc.setState(0x12a9, 0x5513, 0x83c0, 0x6418, 0xa912, 0x9499, 0x1, 0x1);
        gbc.writeMem(0x12a9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x5513);
        EXPECT(gbc.pc(), 0x12ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0268
        gbc.setState(0xa023, 0x76db, 0x13f0, 0xefda, 0x3ddd, 0xe878, 0x1, 0x1);
        gbc.writeMem(0xa023, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x76db);
        EXPECT(gbc.pc(), 0xa025);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa023), 0xcb);
        EXPECT(gbc.readMem(0xa024), 0xe9);
        // CB E9 0269
        gbc.setState(0x8702, 0x6883, 0x94b0, 0x82e9, 0xece0, 0x9235, 0x1, 0x0);
        gbc.writeMem(0x8702, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x6883);
        EXPECT(gbc.pc(), 0x8704);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8702), 0xcb);
        EXPECT(gbc.readMem(0x8703), 0xe9);
        // CB E9 026A
        gbc.setState(0x852, 0x668c, 0x5fb0, 0xc2ab, 0x7cf5, 0x9b13, 0x1, 0x1);
        gbc.writeMem(0x852, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x668c);
        EXPECT(gbc.pc(), 0x854);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 026B
        gbc.setState(0xa2a, 0x58f, 0x490, 0xf5b5, 0xc5b7, 0x2304, 0x1, 0x0);
        gbc.writeMem(0xa2a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x58f);
        EXPECT(gbc.pc(), 0xa2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 026C
        gbc.setState(0x5a1f, 0x61c9, 0x3d60, 0x59a9, 0x9fc1, 0xe636, 0x0, 0x0);
        gbc.writeMem(0x5a1f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x61c9);
        EXPECT(gbc.pc(), 0x5a21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 026D
        gbc.setState(0x11b2, 0x3dc6, 0x62c0, 0x42bd, 0x8908, 0x4212, 0x0, 0x0);
        gbc.writeMem(0x11b2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x3dc6);
        EXPECT(gbc.pc(), 0x11b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 026E
        gbc.setState(0x2c24, 0xeea0, 0xff80, 0xf5ec, 0x66c8, 0x56ba, 0x0, 0x1);
        gbc.writeMem(0x2c24, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xeea0);
        EXPECT(gbc.pc(), 0x2c26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 026F
        gbc.setState(0xa125, 0x29ec, 0x4960, 0x90bf, 0xc0de, 0xea72, 0x0, 0x1);
        gbc.writeMem(0xa125, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x29ec);
        EXPECT(gbc.pc(), 0xa127);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa125), 0xcb);
        EXPECT(gbc.readMem(0xa126), 0xe9);
        // CB E9 0270
        gbc.setState(0xbfd6, 0x3042, 0x5cc0, 0x506f, 0xaaef, 0x5d82, 0x1, 0x0);
        gbc.writeMem(0xbfd6, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x3042);
        EXPECT(gbc.pc(), 0xbfd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfd6), 0xcb);
        EXPECT(gbc.readMem(0xbfd7), 0xe9);
        // CB E9 0271
        gbc.setState(0x90f4, 0xd15e, 0xd860, 0x6dbe, 0x4784, 0x19d9, 0x0, 0x1);
        gbc.writeMem(0x90f4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xd15e);
        EXPECT(gbc.pc(), 0x90f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90f4), 0xcb);
        EXPECT(gbc.readMem(0x90f5), 0xe9);
        // CB E9 0273
        gbc.setState(0x9398, 0xc5d7, 0xda40, 0x176b, 0x79c0, 0xf61c, 0x0, 0x0);
        gbc.writeMem(0x9398, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xc5d7);
        EXPECT(gbc.pc(), 0x939a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9398), 0xcb);
        EXPECT(gbc.readMem(0x9399), 0xe9);
        // CB E9 0274
        gbc.setState(0x9737, 0xd642, 0xedc0, 0x934f, 0xbf21, 0xcf39, 0x0, 0x1);
        gbc.writeMem(0x9737, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd642);
        EXPECT(gbc.pc(), 0x9739);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9737), 0xcb);
        EXPECT(gbc.readMem(0x9738), 0xe9);
        // CB E9 0275
        gbc.setState(0x3a1d, 0x8c5f, 0x2890, 0x19dd, 0x9a96, 0x3a67, 0x1, 0x1);
        gbc.writeMem(0x3a1d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x8c5f);
        EXPECT(gbc.pc(), 0x3a1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0276
        gbc.setState(0x6b83, 0x5c40, 0x98f0, 0x7dd5, 0xbfea, 0x2f2a, 0x0, 0x0);
        gbc.writeMem(0x6b83, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x5c40);
        EXPECT(gbc.pc(), 0x6b85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0277
        gbc.setState(0xa81b, 0xe25b, 0xd020, 0xd91f, 0x8cc, 0xc451, 0x0, 0x0);
        gbc.writeMem(0xa81b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe25b);
        EXPECT(gbc.pc(), 0xa81d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa81b), 0xcb);
        EXPECT(gbc.readMem(0xa81c), 0xe9);
        // CB E9 0278
        gbc.setState(0xe0e7, 0xad19, 0x4d50, 0x766f, 0xda98, 0x6b8d, 0x0, 0x1);
        gbc.writeMem(0xe0e7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xad19);
        EXPECT(gbc.pc(), 0xe0e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0e7), 0xcb);
        EXPECT(gbc.readMem(0xe0e8), 0xe9);
        // CB E9 0279
        gbc.setState(0x51a9, 0xf24, 0xa540, 0xd5a6, 0xc85c, 0xca9f, 0x1, 0x1);
        gbc.writeMem(0x51a9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xf24);
        EXPECT(gbc.pc(), 0x51ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 027A
        gbc.setState(0xbb68, 0x56cf, 0x4ea0, 0x8861, 0x25e3, 0x4a59, 0x1, 0x1);
        gbc.writeMem(0xbb68, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x56cf);
        EXPECT(gbc.pc(), 0xbb6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb68), 0xcb);
        EXPECT(gbc.readMem(0xbb69), 0xe9);
        // CB E9 027B
        gbc.setState(0x7d98, 0x4847, 0xe690, 0xf698, 0xa15d, 0x2d87, 0x1, 0x0);
        gbc.writeMem(0x7d98, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x4847);
        EXPECT(gbc.pc(), 0x7d9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 027C
        gbc.setState(0xce58, 0x7148, 0x27b0, 0x98a4, 0xcf78, 0xd42f, 0x0, 0x1);
        gbc.writeMem(0xce58, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x7148);
        EXPECT(gbc.pc(), 0xce5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce58), 0xcb);
        EXPECT(gbc.readMem(0xce59), 0xe9);
        // CB E9 027D
        gbc.setState(0x806d, 0x1f84, 0x1fa0, 0x1a32, 0x9a8f, 0xe0d7, 0x1, 0x1);
        gbc.writeMem(0x806d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x1f84);
        EXPECT(gbc.pc(), 0x806f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x806d), 0xcb);
        EXPECT(gbc.readMem(0x806e), 0xe9);
        // CB E9 027E
        gbc.setState(0xd63a, 0xf02c, 0xb2b0, 0x248c, 0xd59e, 0x235b, 0x0, 0x1);
        gbc.writeMem(0xd63a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xf02c);
        EXPECT(gbc.pc(), 0xd63c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd63a), 0xcb);
        EXPECT(gbc.readMem(0xd63b), 0xe9);
        // CB E9 027F
        gbc.setState(0x8eec, 0xd8ed, 0xe970, 0xe08b, 0x16f0, 0xd2e0, 0x1, 0x1);
        gbc.writeMem(0x8eec, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xd8ed);
        EXPECT(gbc.pc(), 0x8eee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eec), 0xcb);
        EXPECT(gbc.readMem(0x8eed), 0xe9);
        // CB E9 0280
        gbc.setState(0x1997, 0x7211, 0xa4a0, 0xdda8, 0x8ee0, 0x2516, 0x0, 0x0);
        gbc.writeMem(0x1997, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x7211);
        EXPECT(gbc.pc(), 0x1999);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0281
        gbc.setState(0x955b, 0x6a75, 0x20f0, 0x2032, 0xb413, 0xacd8, 0x0, 0x0);
        gbc.writeMem(0x955b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x6a75);
        EXPECT(gbc.pc(), 0x955d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x955b), 0xcb);
        EXPECT(gbc.readMem(0x955c), 0xe9);
        // CB E9 0282
        gbc.setState(0x30d6, 0xdbe1, 0xb9d0, 0x8d64, 0xf2b0, 0x653e, 0x1, 0x1);
        gbc.writeMem(0x30d6, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xdbe1);
        EXPECT(gbc.pc(), 0x30d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0283
        gbc.setState(0x7d14, 0x1d46, 0x9c70, 0x5f30, 0x2229, 0x49f2, 0x0, 0x1);
        gbc.writeMem(0x7d14, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x1d46);
        EXPECT(gbc.pc(), 0x7d16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0284
        gbc.setState(0x39ca, 0x7447, 0x5390, 0x8fe3, 0x5ca3, 0x9dd4, 0x1, 0x1);
        gbc.writeMem(0x39ca, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x7447);
        EXPECT(gbc.pc(), 0x39cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0285
        gbc.setState(0xab51, 0x5161, 0x6820, 0x839, 0x8db0, 0x6f6b, 0x0, 0x0);
        gbc.writeMem(0xab51, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x5161);
        EXPECT(gbc.pc(), 0xab53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab51), 0xcb);
        EXPECT(gbc.readMem(0xab52), 0xe9);
        // CB E9 0286
        gbc.setState(0xccfb, 0xadf, 0xb390, 0x2350, 0xb0fc, 0x56a6, 0x1, 0x1);
        gbc.writeMem(0xccfb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xadf);
        EXPECT(gbc.pc(), 0xccfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccfb), 0xcb);
        EXPECT(gbc.readMem(0xccfc), 0xe9);
        // CB E9 0287
        gbc.setState(0x1a86, 0xa388, 0x6880, 0x67a3, 0x678f, 0x6852, 0x1, 0x1);
        gbc.writeMem(0x1a86, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa388);
        EXPECT(gbc.pc(), 0x1a88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0288
        gbc.setState(0x6a2b, 0x9e40, 0x48b0, 0xa9aa, 0x391f, 0xaf46, 0x1, 0x1);
        gbc.writeMem(0x6a2b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x9e40);
        EXPECT(gbc.pc(), 0x6a2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0289
        gbc.setState(0x2e5b, 0xd92d, 0xe8d0, 0x6c2d, 0xcc66, 0xc50f, 0x0, 0x0);
        gbc.writeMem(0x2e5b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd92d);
        EXPECT(gbc.pc(), 0x2e5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 028A
        gbc.setState(0x2803, 0x6a38, 0xcf50, 0x3bf2, 0xcfaa, 0x10ac, 0x0, 0x0);
        gbc.writeMem(0x2803, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6a38);
        EXPECT(gbc.pc(), 0x2805);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 028B
        gbc.setState(0xe9ed, 0x6a25, 0x4740, 0x667b, 0x321a, 0x3d15, 0x1, 0x1);
        gbc.writeMem(0xe9ed, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x6a25);
        EXPECT(gbc.pc(), 0xe9ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ed), 0xcb);
        EXPECT(gbc.readMem(0xe9ee), 0xe9);
        // CB E9 028C
        gbc.setState(0x1c37, 0xf89f, 0x2e80, 0x389, 0xd3e9, 0xb71b, 0x0, 0x0);
        gbc.writeMem(0x1c37, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xf89f);
        EXPECT(gbc.pc(), 0x1c39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 028D
        gbc.setState(0x5975, 0xd534, 0x1ea0, 0x4504, 0x597c, 0x2a71, 0x1, 0x1);
        gbc.writeMem(0x5975, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xd534);
        EXPECT(gbc.pc(), 0x5977);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 028E
        gbc.setState(0x6276, 0x3080, 0x9dc0, 0x43cb, 0x49de, 0x6f20, 0x0, 0x1);
        gbc.writeMem(0x6276, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x3080);
        EXPECT(gbc.pc(), 0x6278);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 028F
        gbc.setState(0xed30, 0x429f, 0x1d40, 0xf794, 0x5b9e, 0xd0f5, 0x0, 0x0);
        gbc.writeMem(0xed30, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x429f);
        EXPECT(gbc.pc(), 0xed32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed30), 0xcb);
        EXPECT(gbc.readMem(0xed31), 0xe9);
        // CB E9 0290
        gbc.setState(0x14a0, 0x9545, 0x7d70, 0x5066, 0xa128, 0x1f2f, 0x0, 0x0);
        gbc.writeMem(0x14a0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9545);
        EXPECT(gbc.pc(), 0x14a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0291
        gbc.setState(0x1b1e, 0xa146, 0x9a0, 0xe447, 0xa021, 0x1b3c, 0x0, 0x0);
        gbc.writeMem(0x1b1e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xa146);
        EXPECT(gbc.pc(), 0x1b20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0292
        gbc.setState(0xdd97, 0x2677, 0x1e80, 0x561a, 0x13ec, 0xbd06, 0x0, 0x0);
        gbc.writeMem(0xdd97, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x2677);
        EXPECT(gbc.pc(), 0xdd99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd97), 0xcb);
        EXPECT(gbc.readMem(0xdd98), 0xe9);
        // CB E9 0293
        gbc.setState(0x220e, 0x65d6, 0xf420, 0xc19f, 0x2a3a, 0x933a, 0x1, 0x0);
        gbc.writeMem(0x220e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x65d6);
        EXPECT(gbc.pc(), 0x2210);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0294
        gbc.setState(0x4850, 0xd9fa, 0x4730, 0xf92e, 0xb380, 0x9c04, 0x0, 0x0);
        gbc.writeMem(0x4850, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xd9fa);
        EXPECT(gbc.pc(), 0x4852);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0295
        gbc.setState(0xed38, 0x5b62, 0x9be0, 0x1629, 0xfb4a, 0x2bd3, 0x1, 0x0);
        gbc.writeMem(0xed38, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x5b62);
        EXPECT(gbc.pc(), 0xed3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed38), 0xcb);
        EXPECT(gbc.readMem(0xed39), 0xe9);
        // CB E9 0297
        gbc.setState(0x1339, 0x110b, 0xf620, 0xfbfc, 0x7a00, 0xc925, 0x0, 0x0);
        gbc.writeMem(0x1339, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x110b);
        EXPECT(gbc.pc(), 0x133b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0298
        gbc.setState(0x8526, 0x3156, 0x4780, 0xa021, 0x6544, 0xbd8a, 0x0, 0x1);
        gbc.writeMem(0x8526, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x3156);
        EXPECT(gbc.pc(), 0x8528);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8526), 0xcb);
        EXPECT(gbc.readMem(0x8527), 0xe9);
        // CB E9 0299
        gbc.setState(0xb5f3, 0xcab6, 0x9aa0, 0xf015, 0xa9ef, 0x8cd1, 0x0, 0x0);
        gbc.writeMem(0xb5f3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xcab6);
        EXPECT(gbc.pc(), 0xb5f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5f3), 0xcb);
        EXPECT(gbc.readMem(0xb5f4), 0xe9);
        // CB E9 029A
        gbc.setState(0x9e0a, 0xcce7, 0xa040, 0xbf54, 0xbf7f, 0x119a, 0x0, 0x1);
        gbc.writeMem(0x9e0a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xcce7);
        EXPECT(gbc.pc(), 0x9e0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e0a), 0xcb);
        EXPECT(gbc.readMem(0x9e0b), 0xe9);
        // CB E9 029B
        gbc.setState(0x4337, 0xfe1d, 0x7a40, 0x22a3, 0x65ee, 0xce04, 0x0, 0x1);
        gbc.writeMem(0x4337, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xfe1d);
        EXPECT(gbc.pc(), 0x4339);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 029C
        gbc.setState(0xceb, 0x686b, 0x210, 0xd1b0, 0x6ad3, 0x5e54, 0x1, 0x0);
        gbc.writeMem(0xceb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x686b);
        EXPECT(gbc.pc(), 0xced);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 029D
        gbc.setState(0x8a7d, 0x57a6, 0xb820, 0x6b75, 0x6740, 0xea4, 0x0, 0x0);
        gbc.writeMem(0x8a7d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x57a6);
        EXPECT(gbc.pc(), 0x8a7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a7d), 0xcb);
        EXPECT(gbc.readMem(0x8a7e), 0xe9);
        // CB E9 029E
        gbc.setState(0xa72f, 0xeb32, 0xcc0, 0x56b2, 0x9806, 0x547, 0x1, 0x1);
        gbc.writeMem(0xa72f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xeb32);
        EXPECT(gbc.pc(), 0xa731);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa72f), 0xcb);
        EXPECT(gbc.readMem(0xa730), 0xe9);
        // CB E9 029F
        gbc.setState(0x52f9, 0x87fc, 0xe630, 0xadbf, 0x83db, 0x8c1d, 0x0, 0x1);
        gbc.writeMem(0x52f9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x87fc);
        EXPECT(gbc.pc(), 0x52fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 02A0
        gbc.setState(0x82c, 0x8e7c, 0x8870, 0x3198, 0x5433, 0x5ba2, 0x1, 0x1);
        gbc.writeMem(0x82c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x8e7c);
        EXPECT(gbc.pc(), 0x82e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 02A1
        gbc.setState(0xaff8, 0x8dc1, 0x2c40, 0x6c31, 0xfa81, 0x3444, 0x1, 0x1);
        gbc.writeMem(0xaff8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x8dc1);
        EXPECT(gbc.pc(), 0xaffa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaff8), 0xcb);
        EXPECT(gbc.readMem(0xaff9), 0xe9);
        // CB E9 02A2
        gbc.setState(0x3554, 0xb551, 0x2e0, 0x80d2, 0x2d4f, 0xb93, 0x1, 0x1);
        gbc.writeMem(0x3554, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb551);
        EXPECT(gbc.pc(), 0x3556);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02A3
        gbc.setState(0x5564, 0x998, 0x3b80, 0xf20c, 0xc9f0, 0xb3fe, 0x0, 0x1);
        gbc.writeMem(0x5564, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x998);
        EXPECT(gbc.pc(), 0x5566);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02A4
        gbc.setState(0xb90e, 0x6b27, 0x5fc0, 0xb842, 0xa0e6, 0x593a, 0x1, 0x1);
        gbc.writeMem(0xb90e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x6b27);
        EXPECT(gbc.pc(), 0xb910);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb90e), 0xcb);
        EXPECT(gbc.readMem(0xb90f), 0xe9);
        // CB E9 02A5
        gbc.setState(0x1731, 0x4d67, 0xe670, 0xcd49, 0xe3a, 0xe1cc, 0x1, 0x1);
        gbc.writeMem(0x1731, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x4d67);
        EXPECT(gbc.pc(), 0x1733);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 02A6
        gbc.setState(0x915b, 0xd7da, 0xc2a0, 0xd8ef, 0xab82, 0xe7d5, 0x0, 0x0);
        gbc.writeMem(0x915b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xd7da);
        EXPECT(gbc.pc(), 0x915d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x915b), 0xcb);
        EXPECT(gbc.readMem(0x915c), 0xe9);
        // CB E9 02A7
        gbc.setState(0x62db, 0xd7c2, 0x10a0, 0x5b7d, 0xe697, 0x4e84, 0x0, 0x0);
        gbc.writeMem(0x62db, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xd7c2);
        EXPECT(gbc.pc(), 0x62dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02A8
        gbc.setState(0xbeef, 0xaffb, 0x1fe0, 0x15b4, 0x80bd, 0xa62c, 0x1, 0x1);
        gbc.writeMem(0xbeef, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xaffb);
        EXPECT(gbc.pc(), 0xbef1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeef), 0xcb);
        EXPECT(gbc.readMem(0xbef0), 0xe9);
        // CB E9 02A9
        gbc.setState(0xef29, 0x7127, 0xcaa0, 0xb90c, 0x4613, 0x1200, 0x0, 0x1);
        gbc.writeMem(0xef29, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x7127);
        EXPECT(gbc.pc(), 0xef2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef29), 0xcb);
        EXPECT(gbc.readMem(0xef2a), 0xe9);
        // CB E9 02AA
        gbc.setState(0x7c1b, 0x7a7, 0x8960, 0x81bc, 0x4ad4, 0x9327, 0x1, 0x1);
        gbc.writeMem(0x7c1b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x7a7);
        EXPECT(gbc.pc(), 0x7c1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02AC
        gbc.setState(0x58ca, 0x639, 0x3d30, 0x6da5, 0x43db, 0xb26c, 0x0, 0x0);
        gbc.writeMem(0x58ca, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x639);
        EXPECT(gbc.pc(), 0x58cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 02AD
        gbc.setState(0x3faf, 0xe37f, 0xa260, 0x22ba, 0x3727, 0xc54a, 0x0, 0x0);
        gbc.writeMem(0x3faf, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xe37f);
        EXPECT(gbc.pc(), 0x3fb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02AE
        gbc.setState(0x147e, 0x1993, 0x500, 0x2de9, 0x641a, 0xf0b8, 0x0, 0x0);
        gbc.writeMem(0x147e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x1993);
        EXPECT(gbc.pc(), 0x1480);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02AF
        gbc.setState(0x6084, 0x5e3f, 0xf500, 0x97d0, 0xb654, 0xed88, 0x1, 0x1);
        gbc.writeMem(0x6084, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x5e3f);
        EXPECT(gbc.pc(), 0x6086);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02B0
        gbc.setState(0x715a, 0x18b7, 0x2c50, 0xbc8c, 0x910b, 0x5e92, 0x0, 0x0);
        gbc.writeMem(0x715a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x18b7);
        EXPECT(gbc.pc(), 0x715c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 02B1
        gbc.setState(0x92ab, 0xf279, 0xcd80, 0x23fc, 0x92d0, 0xfd72, 0x0, 0x0);
        gbc.writeMem(0x92ab, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xf279);
        EXPECT(gbc.pc(), 0x92ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92ab), 0xcb);
        EXPECT(gbc.readMem(0x92ac), 0xe9);
        // CB E9 02B2
        gbc.setState(0x31eb, 0x80ee, 0xfd90, 0x7690, 0x9486, 0x3f20, 0x1, 0x1);
        gbc.writeMem(0x31eb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x80ee);
        EXPECT(gbc.pc(), 0x31ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 02B3
        gbc.setState(0x55a, 0x331b, 0x1340, 0x4d81, 0x128a, 0xcf96, 0x0, 0x1);
        gbc.writeMem(0x55a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x331b);
        EXPECT(gbc.pc(), 0x55c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02B4
        gbc.setState(0xda30, 0xb44, 0x6250, 0x9ffd, 0xe60c, 0x365b, 0x1, 0x1);
        gbc.writeMem(0xda30, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xb44);
        EXPECT(gbc.pc(), 0xda32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda30), 0xcb);
        EXPECT(gbc.readMem(0xda31), 0xe9);
        // CB E9 02B6
        gbc.setState(0x20d2, 0xa14f, 0xb220, 0xf972, 0x65fd, 0x9964, 0x0, 0x0);
        gbc.writeMem(0x20d2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xa14f);
        EXPECT(gbc.pc(), 0x20d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02B8
        gbc.setState(0x54cc, 0xc9eb, 0xe60, 0x921f, 0xa101, 0x1088, 0x0, 0x0);
        gbc.writeMem(0x54cc, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xc9eb);
        EXPECT(gbc.pc(), 0x54ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02B9
        gbc.setState(0xb3a2, 0x995, 0xef40, 0x4de3, 0xb16a, 0xd9e0, 0x0, 0x1);
        gbc.writeMem(0xb3a2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x995);
        EXPECT(gbc.pc(), 0xb3a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3a2), 0xcb);
        EXPECT(gbc.readMem(0xb3a3), 0xe9);
        // CB E9 02BA
        gbc.setState(0x6d4f, 0x6f16, 0x1e40, 0xa47d, 0x63c9, 0x65ca, 0x0, 0x1);
        gbc.writeMem(0x6d4f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x6f16);
        EXPECT(gbc.pc(), 0x6d51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02BB
        gbc.setState(0x718c, 0x8a9a, 0x7280, 0xffee, 0x34d7, 0xad21, 0x0, 0x1);
        gbc.writeMem(0x718c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x8a9a);
        EXPECT(gbc.pc(), 0x718e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02BC
        gbc.setState(0x163f, 0xc0a5, 0xe0, 0xc237, 0x77fd, 0xc83a, 0x1, 0x0);
        gbc.writeMem(0x163f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc0a5);
        EXPECT(gbc.pc(), 0x1641);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02BD
        gbc.setState(0xaf08, 0x185a, 0x6110, 0x47f8, 0x9185, 0x8f74, 0x0, 0x1);
        gbc.writeMem(0xaf08, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x185a);
        EXPECT(gbc.pc(), 0xaf0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf08), 0xcb);
        EXPECT(gbc.readMem(0xaf09), 0xe9);
        // CB E9 02BE
        gbc.setState(0x90d, 0xbcf9, 0x46f0, 0xf96d, 0xc900, 0xc557, 0x0, 0x1);
        gbc.writeMem(0x90d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xbcf9);
        EXPECT(gbc.pc(), 0x90f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 02BF
        gbc.setState(0x8764, 0x46d0, 0xcf50, 0xd0cf, 0x460f, 0xd526, 0x1, 0x1);
        gbc.writeMem(0x8764, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x46d0);
        EXPECT(gbc.pc(), 0x8766);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8764), 0xcb);
        EXPECT(gbc.readMem(0x8765), 0xe9);
        // CB E9 02C0
        gbc.setState(0xd024, 0x8d8b, 0x8a80, 0x61e4, 0x347f, 0x63f6, 0x1, 0x1);
        gbc.writeMem(0xd024, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x8d8b);
        EXPECT(gbc.pc(), 0xd026);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd024), 0xcb);
        EXPECT(gbc.readMem(0xd025), 0xe9);
        // CB E9 02C1
        gbc.setState(0x6459, 0xe3bf, 0x230, 0x91a2, 0x8914, 0xc7b0, 0x0, 0x1);
        gbc.writeMem(0x6459, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xe3bf);
        EXPECT(gbc.pc(), 0x645b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 02C2
        gbc.setState(0xad56, 0xe47b, 0xcae0, 0xe8c7, 0xf99b, 0x8808, 0x1, 0x1);
        gbc.writeMem(0xad56, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xe47b);
        EXPECT(gbc.pc(), 0xad58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad56), 0xcb);
        EXPECT(gbc.readMem(0xad57), 0xe9);
        // CB E9 02C3
        gbc.setState(0xb0c5, 0xfc93, 0x70, 0xc8be, 0x7442, 0xcee3, 0x1, 0x1);
        gbc.writeMem(0xb0c5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xfc93);
        EXPECT(gbc.pc(), 0xb0c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0c5), 0xcb);
        EXPECT(gbc.readMem(0xb0c6), 0xe9);
        // CB E9 02C4
        gbc.setState(0x3ee1, 0x616a, 0xfb00, 0x4e5f, 0xc4a7, 0x791f, 0x0, 0x1);
        gbc.writeMem(0x3ee1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x616a);
        EXPECT(gbc.pc(), 0x3ee3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02C5
        gbc.setState(0x9877, 0xbd0d, 0xf030, 0x2e16, 0xe1f7, 0x6610, 0x1, 0x0);
        gbc.writeMem(0x9877, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xbd0d);
        EXPECT(gbc.pc(), 0x9879);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9877), 0xcb);
        EXPECT(gbc.readMem(0x9878), 0xe9);
        // CB E9 02C6
        gbc.setState(0x493a, 0x90e, 0x9760, 0xf753, 0xfea5, 0x4876, 0x1, 0x1);
        gbc.writeMem(0x493a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x90e);
        EXPECT(gbc.pc(), 0x493c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02C7
        gbc.setState(0xb02c, 0xf88e, 0xcb00, 0xd580, 0xc72f, 0x19db, 0x1, 0x0);
        gbc.writeMem(0xb02c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xf88e);
        EXPECT(gbc.pc(), 0xb02e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb02c), 0xcb);
        EXPECT(gbc.readMem(0xb02d), 0xe9);
        // CB E9 02C8
        gbc.setState(0xb40, 0x766c, 0xb820, 0x7f2a, 0x6d10, 0xb50e, 0x0, 0x1);
        gbc.writeMem(0xb40, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x766c);
        EXPECT(gbc.pc(), 0xb42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02C9
        gbc.setState(0x13b9, 0xba5b, 0xdab0, 0x5e0b, 0x107f, 0x426b, 0x0, 0x1);
        gbc.writeMem(0x13b9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xba5b);
        EXPECT(gbc.pc(), 0x13bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 02CA
        gbc.setState(0xe129, 0xc3bf, 0x4050, 0x72b3, 0xa740, 0x7bc2, 0x0, 0x1);
        gbc.writeMem(0xe129, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc3bf);
        EXPECT(gbc.pc(), 0xe12b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe129), 0xcb);
        EXPECT(gbc.readMem(0xe12a), 0xe9);
        // CB E9 02CB
        gbc.setState(0xbdb3, 0xfe2b, 0xc970, 0x229f, 0xf28, 0xd5f2, 0x1, 0x0);
        gbc.writeMem(0xbdb3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xfe2b);
        EXPECT(gbc.pc(), 0xbdb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdb3), 0xcb);
        EXPECT(gbc.readMem(0xbdb4), 0xe9);
        // CB E9 02CC
        gbc.setState(0x9263, 0x9f36, 0x4cf0, 0xf8c6, 0xf75, 0x36fb, 0x0, 0x0);
        gbc.writeMem(0x9263, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x9f36);
        EXPECT(gbc.pc(), 0x9265);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9263), 0xcb);
        EXPECT(gbc.readMem(0x9264), 0xe9);
        // CB E9 02CD
        gbc.setState(0x73e0, 0x5e6a, 0x6180, 0x6b6f, 0x45a7, 0xbb2b, 0x1, 0x0);
        gbc.writeMem(0x73e0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x5e6a);
        EXPECT(gbc.pc(), 0x73e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02CE
        gbc.setState(0xc219, 0x60fb, 0x880, 0xcb7d, 0x4043, 0x3ef3, 0x1, 0x0);
        gbc.writeMem(0xc219, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x60fb);
        EXPECT(gbc.pc(), 0xc21b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc219), 0xcb);
        EXPECT(gbc.readMem(0xc21a), 0xe9);
        // CB E9 02D0
        gbc.setState(0x90ef, 0x8d04, 0x3390, 0xb3d6, 0xbfb8, 0xebe4, 0x0, 0x1);
        gbc.writeMem(0x90ef, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x8d04);
        EXPECT(gbc.pc(), 0x90f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90ef), 0xcb);
        EXPECT(gbc.readMem(0x90f0), 0xe9);
        // CB E9 02D1
        gbc.setState(0x9062, 0x120d, 0x92a0, 0xa1b2, 0xb08a, 0x689a, 0x1, 0x1);
        gbc.writeMem(0x9062, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x120d);
        EXPECT(gbc.pc(), 0x9064);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9062), 0xcb);
        EXPECT(gbc.readMem(0x9063), 0xe9);
        // CB E9 02D2
        gbc.setState(0x199a, 0x7a5e, 0xfd90, 0x7fe3, 0xf2e0, 0x3b05, 0x0, 0x1);
        gbc.writeMem(0x199a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x7a5e);
        EXPECT(gbc.pc(), 0x199c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 02D3
        gbc.setState(0x84d5, 0xc48a, 0xd50, 0x74a9, 0x637c, 0x6c90, 0x0, 0x0);
        gbc.writeMem(0x84d5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xc48a);
        EXPECT(gbc.pc(), 0x84d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84d5), 0xcb);
        EXPECT(gbc.readMem(0x84d6), 0xe9);
        // CB E9 02D4
        gbc.setState(0xe6f4, 0x8a3, 0x81c0, 0x8ba, 0x7a94, 0x8ad, 0x1, 0x0);
        gbc.writeMem(0xe6f4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x8a3);
        EXPECT(gbc.pc(), 0xe6f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6f4), 0xcb);
        EXPECT(gbc.readMem(0xe6f5), 0xe9);
        // CB E9 02D5
        gbc.setState(0xf7e, 0xc540, 0x4fb0, 0x9113, 0xcd37, 0xf8ba, 0x1, 0x0);
        gbc.writeMem(0xf7e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xc540);
        EXPECT(gbc.pc(), 0xf80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 02D6
        gbc.setState(0xfc5, 0xe951, 0x1b20, 0x3514, 0x3ba, 0xb671, 0x1, 0x0);
        gbc.writeMem(0xfc5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xe951);
        EXPECT(gbc.pc(), 0xfc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02D7
        gbc.setState(0x577a, 0xb41, 0xcaa0, 0x76ca, 0xbbd0, 0x4288, 0x1, 0x0);
        gbc.writeMem(0x577a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xb41);
        EXPECT(gbc.pc(), 0x577c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02D8
        gbc.setState(0x70e9, 0x2eec, 0xda10, 0xf98f, 0x367, 0x4115, 0x1, 0x1);
        gbc.writeMem(0x70e9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x2eec);
        EXPECT(gbc.pc(), 0x70eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 02D9
        gbc.setState(0x589, 0x6b94, 0x3ba0, 0x647b, 0x626f, 0xfa4c, 0x1, 0x1);
        gbc.writeMem(0x589, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x6b94);
        EXPECT(gbc.pc(), 0x58b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02DA
        gbc.setState(0x82b2, 0xf451, 0x35c0, 0x8cdf, 0xf55e, 0x34dd, 0x1, 0x0);
        gbc.writeMem(0x82b2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xf451);
        EXPECT(gbc.pc(), 0x82b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82b2), 0xcb);
        EXPECT(gbc.readMem(0x82b3), 0xe9);
        // CB E9 02DB
        gbc.setState(0x26d3, 0x4d80, 0x9340, 0xe19, 0xb23f, 0xa4a3, 0x1, 0x0);
        gbc.writeMem(0x26d3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x4d80);
        EXPECT(gbc.pc(), 0x26d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02DC
        gbc.setState(0x9f37, 0x932d, 0xe6b0, 0xc2ff, 0x9e2c, 0xa40e, 0x0, 0x1);
        gbc.writeMem(0x9f37, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x932d);
        EXPECT(gbc.pc(), 0x9f39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f37), 0xcb);
        EXPECT(gbc.readMem(0x9f38), 0xe9);
        // CB E9 02DD
        gbc.setState(0x53d8, 0xd42c, 0x6700, 0x7032, 0x393e, 0x642c, 0x1, 0x1);
        gbc.writeMem(0x53d8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xd42c);
        EXPECT(gbc.pc(), 0x53da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02DE
        gbc.setState(0x60d0, 0x99a1, 0x42e0, 0xbcd, 0x2358, 0x25f, 0x0, 0x1);
        gbc.writeMem(0x60d0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x99a1);
        EXPECT(gbc.pc(), 0x60d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02DF
        gbc.setState(0x7455, 0xf7fc, 0xa880, 0x2446, 0x9714, 0xffad, 0x1, 0x0);
        gbc.writeMem(0x7455, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xf7fc);
        EXPECT(gbc.pc(), 0x7457);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02E0
        gbc.setState(0x91e0, 0x9bdd, 0x3f10, 0xcd7a, 0x3a70, 0x18d3, 0x0, 0x0);
        gbc.writeMem(0x91e0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x9bdd);
        EXPECT(gbc.pc(), 0x91e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91e0), 0xcb);
        EXPECT(gbc.readMem(0x91e1), 0xe9);
        // CB E9 02E1
        gbc.setState(0x83df, 0x8732, 0x9d90, 0x5c49, 0xfda3, 0x9936, 0x0, 0x1);
        gbc.writeMem(0x83df, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x8732);
        EXPECT(gbc.pc(), 0x83e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83df), 0xcb);
        EXPECT(gbc.readMem(0x83e0), 0xe9);
        // CB E9 02E2
        gbc.setState(0xd99a, 0xd2ab, 0xd120, 0x4551, 0xf77b, 0x4a44, 0x1, 0x0);
        gbc.writeMem(0xd99a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd2ab);
        EXPECT(gbc.pc(), 0xd99c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd99a), 0xcb);
        EXPECT(gbc.readMem(0xd99b), 0xe9);
        // CB E9 02E3
        gbc.setState(0xba33, 0xa0a2, 0xe3c0, 0xb499, 0x1aee, 0x8acd, 0x0, 0x1);
        gbc.writeMem(0xba33, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xa0a2);
        EXPECT(gbc.pc(), 0xba35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba33), 0xcb);
        EXPECT(gbc.readMem(0xba34), 0xe9);
        // CB E9 02E4
        gbc.setState(0xcf22, 0xfeb7, 0xacb0, 0xfa6, 0xef55, 0xc3e7, 0x0, 0x0);
        gbc.writeMem(0xcf22, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xfeb7);
        EXPECT(gbc.pc(), 0xcf24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf22), 0xcb);
        EXPECT(gbc.readMem(0xcf23), 0xe9);
        // CB E9 02E5
        gbc.setState(0xa49e, 0x45b4, 0xe040, 0x1547, 0x9ef0, 0x5df7, 0x1, 0x1);
        gbc.writeMem(0xa49e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x45b4);
        EXPECT(gbc.pc(), 0xa4a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa49e), 0xcb);
        EXPECT(gbc.readMem(0xa49f), 0xe9);
        // CB E9 02E6
        gbc.setState(0xc0f4, 0x8e17, 0xc020, 0xc2ea, 0xd057, 0xc60b, 0x1, 0x0);
        gbc.writeMem(0xc0f4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x8e17);
        EXPECT(gbc.pc(), 0xc0f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0f4), 0xcb);
        EXPECT(gbc.readMem(0xc0f5), 0xe9);
        // CB E9 02E7
        gbc.setState(0x241f, 0xf1ee, 0x8920, 0xa5f2, 0xdf14, 0x204e, 0x0, 0x1);
        gbc.writeMem(0x241f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf1ee);
        EXPECT(gbc.pc(), 0x2421);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02E8
        gbc.setState(0x8ad3, 0xb93a, 0x4d90, 0x25e8, 0x71c7, 0xed5f, 0x0, 0x1);
        gbc.writeMem(0x8ad3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb93a);
        EXPECT(gbc.pc(), 0x8ad5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ad3), 0xcb);
        EXPECT(gbc.readMem(0x8ad4), 0xe9);
        // CB E9 02EA
        gbc.setState(0x4c11, 0x358f, 0x36c0, 0xaf6e, 0x274, 0xc8a3, 0x1, 0x1);
        gbc.writeMem(0x4c11, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x358f);
        EXPECT(gbc.pc(), 0x4c13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02EB
        gbc.setState(0xe8bc, 0x8976, 0xf460, 0xb9b5, 0xc453, 0x47c5, 0x1, 0x0);
        gbc.writeMem(0xe8bc, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x8976);
        EXPECT(gbc.pc(), 0xe8be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8bc), 0xcb);
        EXPECT(gbc.readMem(0xe8bd), 0xe9);
        // CB E9 02EC
        gbc.setState(0x16dd, 0x760c, 0xbf40, 0xc65e, 0x4917, 0x2f45, 0x1, 0x1);
        gbc.writeMem(0x16dd, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x760c);
        EXPECT(gbc.pc(), 0x16df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02ED
        gbc.setState(0xc57b, 0xe1bc, 0xc900, 0x6397, 0x611, 0xb893, 0x1, 0x1);
        gbc.writeMem(0xc57b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xe1bc);
        EXPECT(gbc.pc(), 0xc57d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc57b), 0xcb);
        EXPECT(gbc.readMem(0xc57c), 0xe9);
        // CB E9 02EE
        gbc.setState(0xbfca, 0x22d4, 0xd230, 0x3b20, 0x3ac3, 0x74b, 0x0, 0x1);
        gbc.writeMem(0xbfca, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x22d4);
        EXPECT(gbc.pc(), 0xbfcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfca), 0xcb);
        EXPECT(gbc.readMem(0xbfcb), 0xe9);
        // CB E9 02EF
        gbc.setState(0x52e0, 0x6641, 0xb030, 0x3983, 0xc505, 0x34d, 0x0, 0x0);
        gbc.writeMem(0x52e0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x6641);
        EXPECT(gbc.pc(), 0x52e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 02F0
        gbc.setState(0x5fae, 0x319f, 0xdba0, 0xfa90, 0xf776, 0xf003, 0x0, 0x0);
        gbc.writeMem(0x5fae, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x319f);
        EXPECT(gbc.pc(), 0x5fb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02F2
        gbc.setState(0xa9f8, 0x58f7, 0x35b0, 0xab93, 0x8782, 0x76ab, 0x1, 0x1);
        gbc.writeMem(0xa9f8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x58f7);
        EXPECT(gbc.pc(), 0xa9fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9f8), 0xcb);
        EXPECT(gbc.readMem(0xa9f9), 0xe9);
        // CB E9 02F3
        gbc.setState(0x4902, 0x90a3, 0x8000, 0x3b5f, 0x3c8a, 0x999f, 0x1, 0x1);
        gbc.writeMem(0x4902, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x90a3);
        EXPECT(gbc.pc(), 0x4904);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02F5
        gbc.setState(0x97f5, 0x3bc8, 0xc180, 0x5dd9, 0xbc46, 0xf4af, 0x0, 0x1);
        gbc.writeMem(0x97f5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x3bc8);
        EXPECT(gbc.pc(), 0x97f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97f5), 0xcb);
        EXPECT(gbc.readMem(0x97f6), 0xe9);
        // CB E9 02F6
        gbc.setState(0x7800, 0xe205, 0xaa70, 0xba11, 0xdf03, 0xd00e, 0x1, 0x1);
        gbc.writeMem(0x7800, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xe205);
        EXPECT(gbc.pc(), 0x7802);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 02F7
        gbc.setState(0xa09d, 0x819f, 0xbac0, 0xc383, 0x7a89, 0x85bd, 0x1, 0x1);
        gbc.writeMem(0xa09d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x819f);
        EXPECT(gbc.pc(), 0xa09f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa09d), 0xcb);
        EXPECT(gbc.readMem(0xa09e), 0xe9);
        // CB E9 02F8
        gbc.setState(0x2d03, 0x4900, 0x1ee0, 0xc744, 0xbd38, 0x201f, 0x1, 0x1);
        gbc.writeMem(0x2d03, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x4900);
        EXPECT(gbc.pc(), 0x2d05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02F9
        gbc.setState(0x1c0a, 0xf299, 0xfc20, 0x82b5, 0x51fd, 0x8dd1, 0x1, 0x1);
        gbc.writeMem(0x1c0a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xf299);
        EXPECT(gbc.pc(), 0x1c0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02FA
        gbc.setState(0xc66e, 0x3960, 0xadf0, 0xbfc1, 0x256, 0x5e9d, 0x1, 0x1);
        gbc.writeMem(0xc66e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x3960);
        EXPECT(gbc.pc(), 0xc670);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc66e), 0xcb);
        EXPECT(gbc.readMem(0xc66f), 0xe9);
        // CB E9 02FB
        gbc.setState(0x726c, 0x9b1c, 0x1640, 0x47a5, 0xa4d6, 0x2c4c, 0x1, 0x1);
        gbc.writeMem(0x726c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9b1c);
        EXPECT(gbc.pc(), 0x726e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 02FC
        gbc.setState(0x9551, 0x6028, 0x77c0, 0x6663, 0x55b4, 0x7114, 0x1, 0x0);
        gbc.writeMem(0x9551, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x6028);
        EXPECT(gbc.pc(), 0x9553);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9551), 0xcb);
        EXPECT(gbc.readMem(0x9552), 0xe9);
        // CB E9 02FD
        gbc.setState(0x77e7, 0x3bbb, 0xd5d0, 0xea0f, 0x8a59, 0x3dd5, 0x0, 0x0);
        gbc.writeMem(0x77e7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x3bbb);
        EXPECT(gbc.pc(), 0x77e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 02FE
        gbc.setState(0x5e57, 0x7911, 0x8570, 0x661c, 0x497f, 0xd66c, 0x0, 0x1);
        gbc.writeMem(0x5e57, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x7911);
        EXPECT(gbc.pc(), 0x5e59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 02FF
        gbc.setState(0x1efe, 0x6f75, 0x40c0, 0x5c08, 0x710c, 0xad77, 0x0, 0x1);
        gbc.writeMem(0x1efe, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x6f75);
        EXPECT(gbc.pc(), 0x1f00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0300
        gbc.setState(0x8ae4, 0x3fb3, 0x9030, 0x1043, 0x5ad5, 0x4732, 0x0, 0x1);
        gbc.writeMem(0x8ae4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x3fb3);
        EXPECT(gbc.pc(), 0x8ae6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ae4), 0xcb);
        EXPECT(gbc.readMem(0x8ae5), 0xe9);
        // CB E9 0301
        gbc.setState(0x7087, 0x7827, 0xbae0, 0xe964, 0x82af, 0x75e, 0x0, 0x1);
        gbc.writeMem(0x7087, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x7827);
        EXPECT(gbc.pc(), 0x7089);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0302
        gbc.setState(0xc382, 0x5f27, 0xeb80, 0x9999, 0x34cf, 0x6a7c, 0x0, 0x0);
        gbc.writeMem(0xc382, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x5f27);
        EXPECT(gbc.pc(), 0xc384);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc382), 0xcb);
        EXPECT(gbc.readMem(0xc383), 0xe9);
        // CB E9 0304
        gbc.setState(0x85b9, 0xfdf6, 0xece0, 0x9451, 0x358f, 0x6249, 0x1, 0x1);
        gbc.writeMem(0x85b9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xfdf6);
        EXPECT(gbc.pc(), 0x85bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85b9), 0xcb);
        EXPECT(gbc.readMem(0x85ba), 0xe9);
        // CB E9 0305
        gbc.setState(0xf20, 0x3961, 0xcf30, 0x6b2e, 0xb7b5, 0xc37e, 0x0, 0x0);
        gbc.writeMem(0xf20, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x3961);
        EXPECT(gbc.pc(), 0xf22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0306
        gbc.setState(0xd075, 0x7062, 0xf30, 0x22a9, 0x41e, 0x701f, 0x0, 0x0);
        gbc.writeMem(0xd075, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x7062);
        EXPECT(gbc.pc(), 0xd077);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd075), 0xcb);
        EXPECT(gbc.readMem(0xd076), 0xe9);
        // CB E9 0307
        gbc.setState(0x6995, 0x6e3b, 0x4f60, 0xe478, 0x3ad3, 0x8cfa, 0x1, 0x1);
        gbc.writeMem(0x6995, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6e3b);
        EXPECT(gbc.pc(), 0x6997);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0308
        gbc.setState(0xabad, 0x83b7, 0xfdb0, 0x978b, 0xf912, 0x3528, 0x0, 0x0);
        gbc.writeMem(0xabad, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x83b7);
        EXPECT(gbc.pc(), 0xabaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabad), 0xcb);
        EXPECT(gbc.readMem(0xabae), 0xe9);
        // CB E9 0309
        gbc.setState(0x5043, 0xd55c, 0xab80, 0x6b54, 0x3ef9, 0xb199, 0x0, 0x0);
        gbc.writeMem(0x5043, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xd55c);
        EXPECT(gbc.pc(), 0x5045);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 030A
        gbc.setState(0xbf87, 0x1ef5, 0x67b0, 0x4783, 0x4a15, 0x44ec, 0x1, 0x0);
        gbc.writeMem(0xbf87, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x1ef5);
        EXPECT(gbc.pc(), 0xbf89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf87), 0xcb);
        EXPECT(gbc.readMem(0xbf88), 0xe9);
        // CB E9 030B
        gbc.setState(0x6995, 0x82da, 0x7f10, 0xee6d, 0x5b5f, 0x800a, 0x0, 0x1);
        gbc.writeMem(0x6995, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x82da);
        EXPECT(gbc.pc(), 0x6997);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 030C
        gbc.setState(0xb591, 0xe3f5, 0x3280, 0x2051, 0xe93e, 0x84aa, 0x1, 0x1);
        gbc.writeMem(0xb591, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe3f5);
        EXPECT(gbc.pc(), 0xb593);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb591), 0xcb);
        EXPECT(gbc.readMem(0xb592), 0xe9);
        // CB E9 030E
        gbc.setState(0xa351, 0x791f, 0x760, 0xecb8, 0x5013, 0xac3, 0x0, 0x0);
        gbc.writeMem(0xa351, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x791f);
        EXPECT(gbc.pc(), 0xa353);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa351), 0xcb);
        EXPECT(gbc.readMem(0xa352), 0xe9);
        // CB E9 030F
        gbc.setState(0xf6d, 0xb337, 0xf590, 0xd74, 0x63e7, 0x247, 0x0, 0x0);
        gbc.writeMem(0xf6d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xb337);
        EXPECT(gbc.pc(), 0xf6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0310
        gbc.setState(0x11b4, 0x3775, 0x5aa0, 0xb78c, 0xebaf, 0x3dcc, 0x0, 0x1);
        gbc.writeMem(0x11b4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x3775);
        EXPECT(gbc.pc(), 0x11b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0313
        gbc.setState(0x8ae7, 0xd3c3, 0x23d0, 0x65af, 0xd6d5, 0x320d, 0x0, 0x1);
        gbc.writeMem(0x8ae7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xd3c3);
        EXPECT(gbc.pc(), 0x8ae9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ae7), 0xcb);
        EXPECT(gbc.readMem(0x8ae8), 0xe9);
        // CB E9 0314
        gbc.setState(0xd90f, 0x4369, 0x7190, 0x329c, 0x822e, 0x3e25, 0x1, 0x0);
        gbc.writeMem(0xd90f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4369);
        EXPECT(gbc.pc(), 0xd911);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd90f), 0xcb);
        EXPECT(gbc.readMem(0xd910), 0xe9);
        // CB E9 0315
        gbc.setState(0x4ab2, 0x6747, 0xf560, 0x6ab5, 0xf785, 0xf3c9, 0x1, 0x1);
        gbc.writeMem(0x4ab2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6747);
        EXPECT(gbc.pc(), 0x4ab4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0316
        gbc.setState(0x2328, 0x9911, 0x1ba0, 0x5a5f, 0x8f85, 0xb5f1, 0x0, 0x0);
        gbc.writeMem(0x2328, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x9911);
        EXPECT(gbc.pc(), 0x232a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0317
        gbc.setState(0x513b, 0xa0c5, 0x4b10, 0xb8f9, 0xb27a, 0x6d6d, 0x1, 0x0);
        gbc.writeMem(0x513b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xa0c5);
        EXPECT(gbc.pc(), 0x513d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0318
        gbc.setState(0x913b, 0x7174, 0x4e20, 0xd44c, 0x2f9b, 0xee93, 0x0, 0x0);
        gbc.writeMem(0x913b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x7174);
        EXPECT(gbc.pc(), 0x913d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x913b), 0xcb);
        EXPECT(gbc.readMem(0x913c), 0xe9);
        // CB E9 0319
        gbc.setState(0x2596, 0xb325, 0x46d0, 0xefae, 0x8019, 0xbdc9, 0x1, 0x1);
        gbc.writeMem(0x2596, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xb325);
        EXPECT(gbc.pc(), 0x2598);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 031A
        gbc.setState(0xc8e7, 0x9214, 0xb270, 0x7883, 0x3726, 0x8bc, 0x0, 0x0);
        gbc.writeMem(0xc8e7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9214);
        EXPECT(gbc.pc(), 0xc8e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8e7), 0xcb);
        EXPECT(gbc.readMem(0xc8e8), 0xe9);
        // CB E9 031C
        gbc.setState(0xb91f, 0x4585, 0xe820, 0xc5e8, 0x126b, 0x7c8b, 0x0, 0x1);
        gbc.writeMem(0xb91f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x4585);
        EXPECT(gbc.pc(), 0xb921);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb91f), 0xcb);
        EXPECT(gbc.readMem(0xb920), 0xe9);
        // CB E9 031D
        gbc.setState(0xc9b8, 0xf2be, 0x6110, 0xf9fb, 0x1fd5, 0xce2f, 0x1, 0x1);
        gbc.writeMem(0xc9b8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xf2be);
        EXPECT(gbc.pc(), 0xc9ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9b8), 0xcb);
        EXPECT(gbc.readMem(0xc9b9), 0xe9);
        // CB E9 031E
        gbc.setState(0xca6, 0x55e9, 0x8520, 0xacbd, 0x5e09, 0xf091, 0x0, 0x0);
        gbc.writeMem(0xca6, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x55e9);
        EXPECT(gbc.pc(), 0xca8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 031F
        gbc.setState(0x7c3, 0x78f2, 0xe830, 0x247d, 0x2c8d, 0xb9c4, 0x0, 0x0);
        gbc.writeMem(0x7c3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x78f2);
        EXPECT(gbc.pc(), 0x7c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0320
        gbc.setState(0x1393, 0x2b6b, 0x46d0, 0x845, 0x6b09, 0x6843, 0x1, 0x0);
        gbc.writeMem(0x1393, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2b6b);
        EXPECT(gbc.pc(), 0x1395);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0321
        gbc.setState(0xea31, 0x7bde, 0x6e0, 0x8372, 0x1e9, 0xbddb, 0x0, 0x0);
        gbc.writeMem(0xea31, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7bde);
        EXPECT(gbc.pc(), 0xea33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea31), 0xcb);
        EXPECT(gbc.readMem(0xea32), 0xe9);
        // CB E9 0322
        gbc.setState(0x94d4, 0x3f69, 0x57f0, 0xc81e, 0x940c, 0xf49d, 0x0, 0x1);
        gbc.writeMem(0x94d4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x3f69);
        EXPECT(gbc.pc(), 0x94d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94d4), 0xcb);
        EXPECT(gbc.readMem(0x94d5), 0xe9);
        // CB E9 0323
        gbc.setState(0xd52a, 0xaa4a, 0x83a0, 0xa115, 0x33f2, 0x1e5, 0x0, 0x0);
        gbc.writeMem(0xd52a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xaa4a);
        EXPECT(gbc.pc(), 0xd52c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd52a), 0xcb);
        EXPECT(gbc.readMem(0xd52b), 0xe9);
        // CB E9 0324
        gbc.setState(0xa730, 0x6cd1, 0xd3e0, 0x3e62, 0xbae1, 0x8022, 0x0, 0x1);
        gbc.writeMem(0xa730, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x6cd1);
        EXPECT(gbc.pc(), 0xa732);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa730), 0xcb);
        EXPECT(gbc.readMem(0xa731), 0xe9);
        // CB E9 0325
        gbc.setState(0x876b, 0x31e4, 0xe2d0, 0xe6b1, 0xd62c, 0x4a83, 0x0, 0x1);
        gbc.writeMem(0x876b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x31e4);
        EXPECT(gbc.pc(), 0x876d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x876b), 0xcb);
        EXPECT(gbc.readMem(0x876c), 0xe9);
        // CB E9 0326
        gbc.setState(0xba1f, 0x9298, 0xa880, 0x4bf, 0x9bc6, 0x68b0, 0x0, 0x1);
        gbc.writeMem(0xba1f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x9298);
        EXPECT(gbc.pc(), 0xba21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba1f), 0xcb);
        EXPECT(gbc.readMem(0xba20), 0xe9);
        // CB E9 0327
        gbc.setState(0xb508, 0x22a2, 0xb8a0, 0xc895, 0x62fe, 0xea3b, 0x1, 0x1);
        gbc.writeMem(0xb508, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x22a2);
        EXPECT(gbc.pc(), 0xb50a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb508), 0xcb);
        EXPECT(gbc.readMem(0xb509), 0xe9);
        // CB E9 0328
        gbc.setState(0xbd5a, 0xbda9, 0xdb10, 0x6e2e, 0xc8f1, 0x54e6, 0x1, 0x0);
        gbc.writeMem(0xbd5a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xbda9);
        EXPECT(gbc.pc(), 0xbd5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd5a), 0xcb);
        EXPECT(gbc.readMem(0xbd5b), 0xe9);
        // CB E9 0329
        gbc.setState(0x1a82, 0x6af9, 0xdac0, 0xc681, 0xb2c1, 0x309, 0x0, 0x0);
        gbc.writeMem(0x1a82, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x6af9);
        EXPECT(gbc.pc(), 0x1a84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 032A
        gbc.setState(0xdfd6, 0x8cfe, 0xb610, 0x8883, 0x2b1a, 0xc714, 0x0, 0x1);
        gbc.writeMem(0xdfd6, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x8cfe);
        EXPECT(gbc.pc(), 0xdfd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfd6), 0xcb);
        EXPECT(gbc.readMem(0xdfd7), 0xe9);
        // CB E9 032B
        gbc.setState(0xd374, 0x6924, 0x5a00, 0x669d, 0xd8cb, 0x146a, 0x1, 0x0);
        gbc.writeMem(0xd374, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6924);
        EXPECT(gbc.pc(), 0xd376);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd374), 0xcb);
        EXPECT(gbc.readMem(0xd375), 0xe9);
        // CB E9 032D
        gbc.setState(0x51b9, 0xa622, 0xbcb0, 0xe3fb, 0xf14a, 0x3837, 0x0, 0x0);
        gbc.writeMem(0x51b9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xa622);
        EXPECT(gbc.pc(), 0x51bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 032E
        gbc.setState(0xad6e, 0xe574, 0xdec0, 0x31d7, 0xa410, 0xbec0, 0x0, 0x0);
        gbc.writeMem(0xad6e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xe574);
        EXPECT(gbc.pc(), 0xad70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad6e), 0xcb);
        EXPECT(gbc.readMem(0xad6f), 0xe9);
        // CB E9 032F
        gbc.setState(0x50d1, 0x4b93, 0x59a0, 0x7fe7, 0xa87a, 0x1176, 0x1, 0x0);
        gbc.writeMem(0x50d1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x4b93);
        EXPECT(gbc.pc(), 0x50d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0330
        gbc.setState(0x9e0c, 0x5203, 0x9ff0, 0xa44c, 0x4d65, 0xa602, 0x1, 0x1);
        gbc.writeMem(0x9e0c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x5203);
        EXPECT(gbc.pc(), 0x9e0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e0c), 0xcb);
        EXPECT(gbc.readMem(0x9e0d), 0xe9);
        // CB E9 0331
        gbc.setState(0xd352, 0x4e30, 0x7a50, 0x1dfc, 0x8daf, 0x9f98, 0x1, 0x1);
        gbc.writeMem(0xd352, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x4e30);
        EXPECT(gbc.pc(), 0xd354);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd352), 0xcb);
        EXPECT(gbc.readMem(0xd353), 0xe9);
        // CB E9 0332
        gbc.setState(0x489d, 0xd9ee, 0xc710, 0x6283, 0x7df8, 0x9a36, 0x1, 0x0);
        gbc.writeMem(0x489d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xd9ee);
        EXPECT(gbc.pc(), 0x489f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0333
        gbc.setState(0xb9f5, 0x1d25, 0x1360, 0xf507, 0x3286, 0xbde9, 0x0, 0x0);
        gbc.writeMem(0xb9f5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x1d25);
        EXPECT(gbc.pc(), 0xb9f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9f5), 0xcb);
        EXPECT(gbc.readMem(0xb9f6), 0xe9);
        // CB E9 0334
        gbc.setState(0x7b88, 0x9ea1, 0x4710, 0x8817, 0xf549, 0xf6ed, 0x0, 0x1);
        gbc.writeMem(0x7b88, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9ea1);
        EXPECT(gbc.pc(), 0x7b8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0335
        gbc.setState(0x46a5, 0x79f9, 0x7920, 0x6dd2, 0xbbd4, 0x300e, 0x0, 0x0);
        gbc.writeMem(0x46a5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x79f9);
        EXPECT(gbc.pc(), 0x46a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0336
        gbc.setState(0xd722, 0x4eb1, 0xfe10, 0x6dcd, 0xc688, 0xf65b, 0x0, 0x1);
        gbc.writeMem(0xd722, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x4eb1);
        EXPECT(gbc.pc(), 0xd724);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd722), 0xcb);
        EXPECT(gbc.readMem(0xd723), 0xe9);
        // CB E9 0337
        gbc.setState(0x2e4f, 0x2ad5, 0xeed0, 0xbfb0, 0xdfe2, 0x6712, 0x1, 0x1);
        gbc.writeMem(0x2e4f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x2ad5);
        EXPECT(gbc.pc(), 0x2e51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0338
        gbc.setState(0x487a, 0x533b, 0x85d0, 0xc2ee, 0x3d22, 0x9de9, 0x0, 0x0);
        gbc.writeMem(0x487a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x533b);
        EXPECT(gbc.pc(), 0x487c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0339
        gbc.setState(0xbc0c, 0xd4fa, 0xb6d0, 0x16bc, 0x8cb3, 0xf1e4, 0x1, 0x1);
        gbc.writeMem(0xbc0c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xd4fa);
        EXPECT(gbc.pc(), 0xbc0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc0c), 0xcb);
        EXPECT(gbc.readMem(0xbc0d), 0xe9);
        // CB E9 033A
        gbc.setState(0x69c1, 0xda74, 0xf820, 0xb716, 0xe297, 0xfcca, 0x0, 0x0);
        gbc.writeMem(0x69c1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xda74);
        EXPECT(gbc.pc(), 0x69c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 033B
        gbc.setState(0x6933, 0xea9e, 0x96c0, 0x4464, 0x4649, 0x67af, 0x0, 0x1);
        gbc.writeMem(0x6933, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xea9e);
        EXPECT(gbc.pc(), 0x6935);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 033C
        gbc.setState(0xc300, 0xd0b2, 0x8410, 0xa2a1, 0xca8c, 0xff48, 0x0, 0x1);
        gbc.writeMem(0xc300, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xd0b2);
        EXPECT(gbc.pc(), 0xc302);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc300), 0xcb);
        EXPECT(gbc.readMem(0xc301), 0xe9);
        // CB E9 033D
        gbc.setState(0xae31, 0x2e16, 0xcf50, 0xc3fa, 0x9704, 0xc95e, 0x0, 0x1);
        gbc.writeMem(0xae31, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2e16);
        EXPECT(gbc.pc(), 0xae33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae31), 0xcb);
        EXPECT(gbc.readMem(0xae32), 0xe9);
        // CB E9 033E
        gbc.setState(0x70b7, 0x9e6, 0xe3a0, 0x72d1, 0xf27, 0x7529, 0x0, 0x0);
        gbc.writeMem(0x70b7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x9e6);
        EXPECT(gbc.pc(), 0x70b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 033F
        gbc.setState(0x838, 0x5c4b, 0x23f0, 0x985b, 0xb74f, 0x80c1, 0x0, 0x1);
        gbc.writeMem(0x838, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x5c4b);
        EXPECT(gbc.pc(), 0x83a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0340
        gbc.setState(0x4083, 0xff5a, 0x7b90, 0x6cc0, 0x29e4, 0xc354, 0x0, 0x0);
        gbc.writeMem(0x4083, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xff5a);
        EXPECT(gbc.pc(), 0x4085);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0341
        gbc.setState(0xba65, 0x6196, 0xc070, 0x54b, 0x20fd, 0x2e04, 0x0, 0x1);
        gbc.writeMem(0xba65, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6196);
        EXPECT(gbc.pc(), 0xba67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba65), 0xcb);
        EXPECT(gbc.readMem(0xba66), 0xe9);
        // CB E9 0342
        gbc.setState(0xef27, 0x9fe9, 0x47a0, 0xc4dd, 0xc4c1, 0x4bb7, 0x1, 0x0);
        gbc.writeMem(0xef27, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x9fe9);
        EXPECT(gbc.pc(), 0xef29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef27), 0xcb);
        EXPECT(gbc.readMem(0xef28), 0xe9);
        // CB E9 0343
        gbc.setState(0x6a71, 0xdc47, 0x1610, 0xf3d5, 0x9495, 0xcf40, 0x0, 0x0);
        gbc.writeMem(0x6a71, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xdc47);
        EXPECT(gbc.pc(), 0x6a73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0345
        gbc.setState(0xa48, 0x205f, 0x3650, 0x8a92, 0xfa19, 0x3623, 0x0, 0x0);
        gbc.writeMem(0xa48, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x205f);
        EXPECT(gbc.pc(), 0xa4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0346
        gbc.setState(0x34a8, 0x83d7, 0xc3e0, 0x3581, 0xbbbc, 0xb815, 0x0, 0x1);
        gbc.writeMem(0x34a8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x83d7);
        EXPECT(gbc.pc(), 0x34aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0347
        gbc.setState(0xa236, 0x4aba, 0x5a30, 0xb6ed, 0xe891, 0x544, 0x1, 0x1);
        gbc.writeMem(0xa236, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x4aba);
        EXPECT(gbc.pc(), 0xa238);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa236), 0xcb);
        EXPECT(gbc.readMem(0xa237), 0xe9);
        // CB E9 0348
        gbc.setState(0x213a, 0x32e5, 0x7e70, 0xc83f, 0xb37b, 0x5943, 0x1, 0x0);
        gbc.writeMem(0x213a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x32e5);
        EXPECT(gbc.pc(), 0x213c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0349
        gbc.setState(0xede1, 0x7409, 0x590, 0xfae6, 0xb3ae, 0xd632, 0x0, 0x1);
        gbc.writeMem(0xede1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x7409);
        EXPECT(gbc.pc(), 0xede3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xede1), 0xcb);
        EXPECT(gbc.readMem(0xede2), 0xe9);
        // CB E9 034A
        gbc.setState(0x4adf, 0x58c1, 0x8f40, 0x3a83, 0x54db, 0xbbe3, 0x0, 0x0);
        gbc.writeMem(0x4adf, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x58c1);
        EXPECT(gbc.pc(), 0x4ae1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 034B
        gbc.setState(0x74fa, 0x708c, 0x99c0, 0x330, 0xa6cc, 0xadc7, 0x1, 0x1);
        gbc.writeMem(0x74fa, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x708c);
        EXPECT(gbc.pc(), 0x74fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 034C
        gbc.setState(0x4cdb, 0xf7fe, 0xec00, 0xc2ef, 0x2ff3, 0x249a, 0x1, 0x0);
        gbc.writeMem(0x4cdb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xf7fe);
        EXPECT(gbc.pc(), 0x4cdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 034D
        gbc.setState(0x3250, 0x677f, 0xb510, 0x3fa6, 0xfd30, 0xaa6c, 0x0, 0x1);
        gbc.writeMem(0x3250, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x677f);
        EXPECT(gbc.pc(), 0x3252);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 034E
        gbc.setState(0xafe0, 0xff84, 0x4330, 0x85d, 0xa3fc, 0x71e4, 0x1, 0x1);
        gbc.writeMem(0xafe0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xff84);
        EXPECT(gbc.pc(), 0xafe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafe0), 0xcb);
        EXPECT(gbc.readMem(0xafe1), 0xe9);
        // CB E9 034F
        gbc.setState(0xb4e0, 0xc10, 0x32a0, 0x7035, 0x310a, 0x1217, 0x0, 0x1);
        gbc.writeMem(0xb4e0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xc10);
        EXPECT(gbc.pc(), 0xb4e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4e0), 0xcb);
        EXPECT(gbc.readMem(0xb4e1), 0xe9);
        // CB E9 0350
        gbc.setState(0x6514, 0x4f38, 0x5d80, 0xb994, 0x7f50, 0xb2f8, 0x0, 0x1);
        gbc.writeMem(0x6514, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x4f38);
        EXPECT(gbc.pc(), 0x6516);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0351
        gbc.setState(0x695d, 0xac47, 0x5760, 0x714a, 0xf6e3, 0xdd01, 0x0, 0x1);
        gbc.writeMem(0x695d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xac47);
        EXPECT(gbc.pc(), 0x695f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0352
        gbc.setState(0x9bbd, 0x36ce, 0x2500, 0x21d2, 0x3cea, 0xe87d, 0x0, 0x0);
        gbc.writeMem(0x9bbd, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x36ce);
        EXPECT(gbc.pc(), 0x9bbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bbd), 0xcb);
        EXPECT(gbc.readMem(0x9bbe), 0xe9);
        // CB E9 0353
        gbc.setState(0x1e6b, 0x6b56, 0x9cc0, 0x6674, 0x2adc, 0xbbf0, 0x1, 0x0);
        gbc.writeMem(0x1e6b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6b56);
        EXPECT(gbc.pc(), 0x1e6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0354
        gbc.setState(0x71f7, 0xdb62, 0x500, 0xe3a9, 0x72c, 0xb4a4, 0x1, 0x0);
        gbc.writeMem(0x71f7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xdb62);
        EXPECT(gbc.pc(), 0x71f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0355
        gbc.setState(0x2e11, 0x4159, 0x8fe0, 0x7ede, 0x8e99, 0x338, 0x0, 0x0);
        gbc.writeMem(0x2e11, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x4159);
        EXPECT(gbc.pc(), 0x2e13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0356
        gbc.setState(0x5be1, 0x4ce7, 0x8390, 0x412d, 0x88e9, 0xed4c, 0x0, 0x1);
        gbc.writeMem(0x5be1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x4ce7);
        EXPECT(gbc.pc(), 0x5be3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0357
        gbc.setState(0x4239, 0x8cef, 0xc4d0, 0x2641, 0xb681, 0xb0f0, 0x0, 0x1);
        gbc.writeMem(0x4239, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x8cef);
        EXPECT(gbc.pc(), 0x423b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0358
        gbc.setState(0xd3ee, 0xe7aa, 0x2cf0, 0xea74, 0x5f7f, 0xf040, 0x0, 0x1);
        gbc.writeMem(0xd3ee, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xe7aa);
        EXPECT(gbc.pc(), 0xd3f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3ee), 0xcb);
        EXPECT(gbc.readMem(0xd3ef), 0xe9);
        // CB E9 0359
        gbc.setState(0xc601, 0x32f3, 0x7a90, 0x2a69, 0x53d9, 0x6590, 0x1, 0x1);
        gbc.writeMem(0xc601, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x32f3);
        EXPECT(gbc.pc(), 0xc603);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc601), 0xcb);
        EXPECT(gbc.readMem(0xc602), 0xe9);
        // CB E9 035A
        gbc.setState(0xa7cb, 0x2efe, 0x97e0, 0x4d26, 0xc786, 0x8fbf, 0x0, 0x0);
        gbc.writeMem(0xa7cb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x2efe);
        EXPECT(gbc.pc(), 0xa7cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7cb), 0xcb);
        EXPECT(gbc.readMem(0xa7cc), 0xe9);
        // CB E9 035B
        gbc.setState(0xdf5f, 0x8e1, 0xc310, 0xed00, 0x8d2d, 0x7dce, 0x0, 0x0);
        gbc.writeMem(0xdf5f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x8e1);
        EXPECT(gbc.pc(), 0xdf61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf5f), 0xcb);
        EXPECT(gbc.readMem(0xdf60), 0xe9);
        // CB E9 035C
        gbc.setState(0x3d38, 0x1ac, 0xa290, 0x4661, 0xd845, 0xe795, 0x1, 0x1);
        gbc.writeMem(0x3d38, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x1ac);
        EXPECT(gbc.pc(), 0x3d3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 035D
        gbc.setState(0x6308, 0x38f2, 0x2c0, 0x4449, 0x3fc3, 0x3a2, 0x1, 0x1);
        gbc.writeMem(0x6308, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x38f2);
        EXPECT(gbc.pc(), 0x630a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 035F
        gbc.setState(0x61b4, 0x57f9, 0xa670, 0xf3e3, 0x2823, 0x99ee, 0x0, 0x1);
        gbc.writeMem(0x61b4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x57f9);
        EXPECT(gbc.pc(), 0x61b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0360
        gbc.setState(0x3a31, 0x4f53, 0xc9e0, 0x2e27, 0xa808, 0xc65e, 0x0, 0x1);
        gbc.writeMem(0x3a31, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x4f53);
        EXPECT(gbc.pc(), 0x3a33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0361
        gbc.setState(0xb6dc, 0x49b0, 0x6ae0, 0x1ee9, 0xee9e, 0x573b, 0x0, 0x1);
        gbc.writeMem(0xb6dc, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x49b0);
        EXPECT(gbc.pc(), 0xb6de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6dc), 0xcb);
        EXPECT(gbc.readMem(0xb6dd), 0xe9);
        // CB E9 0362
        gbc.setState(0x4f21, 0x4fa1, 0x6760, 0x70fe, 0x23a2, 0x4393, 0x0, 0x0);
        gbc.writeMem(0x4f21, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x4fa1);
        EXPECT(gbc.pc(), 0x4f23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0363
        gbc.setState(0xb87d, 0xaf28, 0x5e70, 0x7b4d, 0xfc66, 0x5256, 0x1, 0x0);
        gbc.writeMem(0xb87d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xaf28);
        EXPECT(gbc.pc(), 0xb87f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb87d), 0xcb);
        EXPECT(gbc.readMem(0xb87e), 0xe9);
        // CB E9 0364
        gbc.setState(0xacac, 0x2df0, 0xd1b0, 0x59d0, 0x5f36, 0x10c1, 0x1, 0x1);
        gbc.writeMem(0xacac, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x2df0);
        EXPECT(gbc.pc(), 0xacae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacac), 0xcb);
        EXPECT(gbc.readMem(0xacad), 0xe9);
        // CB E9 0365
        gbc.setState(0x2564, 0x9815, 0xa7f0, 0x3541, 0x256e, 0xb962, 0x1, 0x1);
        gbc.writeMem(0x2564, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x9815);
        EXPECT(gbc.pc(), 0x2566);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0366
        gbc.setState(0x4c4c, 0xadc9, 0xac90, 0x9c28, 0xcec, 0x2568, 0x1, 0x1);
        gbc.writeMem(0x4c4c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xadc9);
        EXPECT(gbc.pc(), 0x4c4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0367
        gbc.setState(0x77c0, 0xee04, 0x2560, 0x92a6, 0x7949, 0x78c3, 0x1, 0x0);
        gbc.writeMem(0x77c0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xee04);
        EXPECT(gbc.pc(), 0x77c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0368
        gbc.setState(0xa28f, 0x1433, 0xa960, 0xe962, 0xc49f, 0x5ea, 0x0, 0x0);
        gbc.writeMem(0xa28f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x1433);
        EXPECT(gbc.pc(), 0xa291);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa28f), 0xcb);
        EXPECT(gbc.readMem(0xa290), 0xe9);
        // CB E9 0369
        gbc.setState(0x5990, 0x4fce, 0xd000, 0xe763, 0x32ba, 0x1f1c, 0x0, 0x1);
        gbc.writeMem(0x5990, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x4fce);
        EXPECT(gbc.pc(), 0x5992);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 036A
        gbc.setState(0x60d3, 0xa84f, 0x45b0, 0x4f75, 0x60af, 0x8fd6, 0x1, 0x0);
        gbc.writeMem(0x60d3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xa84f);
        EXPECT(gbc.pc(), 0x60d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 036B
        gbc.setState(0xef01, 0xe111, 0x3140, 0x771e, 0x2131, 0xa610, 0x1, 0x0);
        gbc.writeMem(0xef01, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xe111);
        EXPECT(gbc.pc(), 0xef03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef01), 0xcb);
        EXPECT(gbc.readMem(0xef02), 0xe9);
        // CB E9 036C
        gbc.setState(0xb83b, 0xb5c5, 0x3ed0, 0xed, 0x35fa, 0xa998, 0x1, 0x1);
        gbc.writeMem(0xb83b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb5c5);
        EXPECT(gbc.pc(), 0xb83d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb83b), 0xcb);
        EXPECT(gbc.readMem(0xb83c), 0xe9);
        // CB E9 036D
        gbc.setState(0xcb55, 0xf08, 0x9590, 0xa355, 0xa207, 0xf566, 0x1, 0x0);
        gbc.writeMem(0xcb55, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xf08);
        EXPECT(gbc.pc(), 0xcb57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb55), 0xcb);
        EXPECT(gbc.readMem(0xcb56), 0xe9);
        // CB E9 036E
        gbc.setState(0x98f3, 0x1514, 0x2650, 0xe96, 0x9257, 0x2ed1, 0x0, 0x0);
        gbc.writeMem(0x98f3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x1514);
        EXPECT(gbc.pc(), 0x98f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98f3), 0xcb);
        EXPECT(gbc.readMem(0x98f4), 0xe9);
        // CB E9 036F
        gbc.setState(0x8330, 0x4506, 0x3950, 0xe5af, 0x9bfe, 0xaae8, 0x1, 0x1);
        gbc.writeMem(0x8330, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4506);
        EXPECT(gbc.pc(), 0x8332);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8330), 0xcb);
        EXPECT(gbc.readMem(0x8331), 0xe9);
        // CB E9 0370
        gbc.setState(0x28de, 0x5a03, 0xec40, 0xd73b, 0x3928, 0x67d1, 0x1, 0x1);
        gbc.writeMem(0x28de, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x5a03);
        EXPECT(gbc.pc(), 0x28e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0371
        gbc.setState(0x383c, 0xecab, 0xe560, 0x3ee9, 0x6725, 0xb482, 0x0, 0x1);
        gbc.writeMem(0x383c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xecab);
        EXPECT(gbc.pc(), 0x383e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0372
        gbc.setState(0x2d68, 0xda62, 0xd50, 0x8aa8, 0x599d, 0x76c1, 0x0, 0x0);
        gbc.writeMem(0x2d68, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xda62);
        EXPECT(gbc.pc(), 0x2d6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0373
        gbc.setState(0x278b, 0xd0e4, 0xe840, 0xa98c, 0xa2de, 0x5010, 0x0, 0x1);
        gbc.writeMem(0x278b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xd0e4);
        EXPECT(gbc.pc(), 0x278d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0374
        gbc.setState(0xb106, 0xf533, 0x60e0, 0x3af5, 0xfb36, 0xd958, 0x0, 0x1);
        gbc.writeMem(0xb106, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xf533);
        EXPECT(gbc.pc(), 0xb108);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb106), 0xcb);
        EXPECT(gbc.readMem(0xb107), 0xe9);
        // CB E9 0375
        gbc.setState(0x2bcd, 0x7b22, 0xa770, 0x1108, 0xd3e7, 0x81cc, 0x0, 0x1);
        gbc.writeMem(0x2bcd, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x7b22);
        EXPECT(gbc.pc(), 0x2bcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0376
        gbc.setState(0x481b, 0x31ed, 0xfe30, 0xb2c6, 0x957a, 0x62ec, 0x0, 0x0);
        gbc.writeMem(0x481b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x31ed);
        EXPECT(gbc.pc(), 0x481d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0377
        gbc.setState(0x3a3, 0xa46b, 0x8610, 0x692b, 0x5cc, 0xf7b6, 0x1, 0x0);
        gbc.writeMem(0x3a3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xa46b);
        EXPECT(gbc.pc(), 0x3a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0378
        gbc.setState(0xd958, 0x9611, 0x3270, 0x2ba2, 0x20b7, 0xd2b1, 0x1, 0x0);
        gbc.writeMem(0xd958, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x9611);
        EXPECT(gbc.pc(), 0xd95a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd958), 0xcb);
        EXPECT(gbc.readMem(0xd959), 0xe9);
        // CB E9 0379
        gbc.setState(0x3ef4, 0xab21, 0x79b0, 0xeab, 0x542f, 0x974e, 0x0, 0x0);
        gbc.writeMem(0x3ef4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xab21);
        EXPECT(gbc.pc(), 0x3ef6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 037A
        gbc.setState(0x2c8e, 0xf986, 0x1620, 0xa6aa, 0x2aac, 0x7caa, 0x0, 0x0);
        gbc.writeMem(0x2c8e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xf986);
        EXPECT(gbc.pc(), 0x2c90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 037B
        gbc.setState(0xdbdc, 0xd7fb, 0x7d0, 0x3861, 0x2b7b, 0x1345, 0x0, 0x0);
        gbc.writeMem(0xdbdc, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xd7fb);
        EXPECT(gbc.pc(), 0xdbde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbdc), 0xcb);
        EXPECT(gbc.readMem(0xdbdd), 0xe9);
        // CB E9 037C
        gbc.setState(0x75be, 0x330e, 0xbc0, 0xb137, 0x2096, 0x2405, 0x1, 0x1);
        gbc.writeMem(0x75be, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x330e);
        EXPECT(gbc.pc(), 0x75c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 037D
        gbc.setState(0x9e6e, 0xfcc3, 0xac00, 0xbb2b, 0x852d, 0xb4fa, 0x0, 0x1);
        gbc.writeMem(0x9e6e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xfcc3);
        EXPECT(gbc.pc(), 0x9e70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e6e), 0xcb);
        EXPECT(gbc.readMem(0x9e6f), 0xe9);
        // CB E9 037E
        gbc.setState(0xd186, 0xef3a, 0x29d0, 0x9759, 0xa897, 0x44bd, 0x0, 0x0);
        gbc.writeMem(0xd186, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xef3a);
        EXPECT(gbc.pc(), 0xd188);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd186), 0xcb);
        EXPECT(gbc.readMem(0xd187), 0xe9);
        // CB E9 037F
        gbc.setState(0x92cb, 0xe8b2, 0xe060, 0x74ff, 0x3a69, 0xb4ba, 0x0, 0x1);
        gbc.writeMem(0x92cb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xe8b2);
        EXPECT(gbc.pc(), 0x92cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92cb), 0xcb);
        EXPECT(gbc.readMem(0x92cc), 0xe9);
        // CB E9 0380
        gbc.setState(0xc988, 0x6106, 0x61e0, 0x7c57, 0x9cf9, 0x1925, 0x0, 0x1);
        gbc.writeMem(0xc988, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x6106);
        EXPECT(gbc.pc(), 0xc98a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc988), 0xcb);
        EXPECT(gbc.readMem(0xc989), 0xe9);
        // CB E9 0382
        gbc.setState(0x1343, 0xe4d2, 0x99a0, 0x20bd, 0xf8fb, 0xf40f, 0x1, 0x1);
        gbc.writeMem(0x1343, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xe4d2);
        EXPECT(gbc.pc(), 0x1345);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0383
        gbc.setState(0xbbf1, 0x6b2d, 0xc8c0, 0xb01d, 0x790a, 0x30a0, 0x0, 0x0);
        gbc.writeMem(0xbbf1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x6b2d);
        EXPECT(gbc.pc(), 0xbbf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbf1), 0xcb);
        EXPECT(gbc.readMem(0xbbf2), 0xe9);
        // CB E9 0384
        gbc.setState(0x5a5a, 0xdf5f, 0x2190, 0xe3a5, 0x35db, 0x4fff, 0x0, 0x1);
        gbc.writeMem(0x5a5a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xdf5f);
        EXPECT(gbc.pc(), 0x5a5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0385
        gbc.setState(0x1023, 0x2121, 0xefa0, 0x9627, 0xfe5f, 0x2591, 0x1, 0x0);
        gbc.writeMem(0x1023, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x2121);
        EXPECT(gbc.pc(), 0x1025);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0386
        gbc.setState(0xec4c, 0xad48, 0xd60, 0x2e62, 0xd13c, 0xb6c, 0x1, 0x1);
        gbc.writeMem(0xec4c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xad48);
        EXPECT(gbc.pc(), 0xec4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec4c), 0xcb);
        EXPECT(gbc.readMem(0xec4d), 0xe9);
        // CB E9 0387
        gbc.setState(0x16df, 0x9807, 0x1100, 0x3269, 0xed92, 0x9949, 0x1, 0x0);
        gbc.writeMem(0x16df, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x9807);
        EXPECT(gbc.pc(), 0x16e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0389
        gbc.setState(0x532, 0x368c, 0x3cc0, 0xb8c6, 0x8b6a, 0x7cf1, 0x0, 0x1);
        gbc.writeMem(0x532, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x368c);
        EXPECT(gbc.pc(), 0x534);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 038A
        gbc.setState(0x282f, 0xa98e, 0x6680, 0x2e11, 0x502a, 0xf07e, 0x0, 0x0);
        gbc.writeMem(0x282f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xa98e);
        EXPECT(gbc.pc(), 0x2831);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 038B
        gbc.setState(0xad48, 0x931e, 0x45c0, 0xcc7f, 0x43fa, 0x2e25, 0x1, 0x0);
        gbc.writeMem(0xad48, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x931e);
        EXPECT(gbc.pc(), 0xad4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad48), 0xcb);
        EXPECT(gbc.readMem(0xad49), 0xe9);
        // CB E9 038C
        gbc.setState(0xce86, 0x3f7b, 0xb220, 0x6b3b, 0x35cf, 0x301e, 0x1, 0x1);
        gbc.writeMem(0xce86, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x3f7b);
        EXPECT(gbc.pc(), 0xce88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce86), 0xcb);
        EXPECT(gbc.readMem(0xce87), 0xe9);
        // CB E9 038D
        gbc.setState(0x5f5a, 0xd833, 0x2020, 0xd5d2, 0xae99, 0x21bd, 0x0, 0x1);
        gbc.writeMem(0x5f5a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xd833);
        EXPECT(gbc.pc(), 0x5f5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 038F
        gbc.setState(0x15a, 0xc2ae, 0x20d0, 0xe51f, 0x39f6, 0xabac, 0x1, 0x1);
        gbc.writeMem(0x15a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc2ae);
        EXPECT(gbc.pc(), 0x15c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0390
        gbc.setState(0x9a50, 0x24d1, 0x4d60, 0x6471, 0x57cf, 0x60f8, 0x1, 0x1);
        gbc.writeMem(0x9a50, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x24d1);
        EXPECT(gbc.pc(), 0x9a52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a50), 0xcb);
        EXPECT(gbc.readMem(0x9a51), 0xe9);
        // CB E9 0391
        gbc.setState(0x2e15, 0x2b3a, 0xd840, 0xa96d, 0xa90b, 0x2376, 0x0, 0x1);
        gbc.writeMem(0x2e15, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x2b3a);
        EXPECT(gbc.pc(), 0x2e17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 0392
        gbc.setState(0xbbe9, 0x308e, 0xd7d0, 0xc880, 0xd4d6, 0x4487, 0x0, 0x1);
        gbc.writeMem(0xbbe9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x308e);
        EXPECT(gbc.pc(), 0xbbeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbe9), 0xcb);
        EXPECT(gbc.readMem(0xbbea), 0xe9);
        // CB E9 0393
        gbc.setState(0xa653, 0x613c, 0xa140, 0xedee, 0x82ec, 0x7c62, 0x1, 0x1);
        gbc.writeMem(0xa653, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x613c);
        EXPECT(gbc.pc(), 0xa655);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa653), 0xcb);
        EXPECT(gbc.readMem(0xa654), 0xe9);
        // CB E9 0394
        gbc.setState(0xd266, 0x1c26, 0xe5f0, 0x9a4c, 0xe0d9, 0x7482, 0x1, 0x0);
        gbc.writeMem(0xd266, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x1c26);
        EXPECT(gbc.pc(), 0xd268);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd266), 0xcb);
        EXPECT(gbc.readMem(0xd267), 0xe9);
        // CB E9 0396
        gbc.setState(0xedaa, 0xfe7a, 0x8810, 0x4aa3, 0x8424, 0xfa40, 0x1, 0x1);
        gbc.writeMem(0xedaa, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xfe7a);
        EXPECT(gbc.pc(), 0xedac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedaa), 0xcb);
        EXPECT(gbc.readMem(0xedab), 0xe9);
        // CB E9 0398
        gbc.setState(0x3563, 0xcaec, 0x11f0, 0x3b91, 0xb424, 0x271c, 0x1, 0x0);
        gbc.writeMem(0x3563, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xcaec);
        EXPECT(gbc.pc(), 0x3565);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 0399
        gbc.setState(0x533e, 0x81ea, 0x2cb0, 0x22c, 0xc47c, 0x688f, 0x1, 0x1);
        gbc.writeMem(0x533e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x81ea);
        EXPECT(gbc.pc(), 0x5340);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 039A
        gbc.setState(0x3280, 0x7555, 0xf00, 0xfe73, 0x3229, 0xf374, 0x0, 0x0);
        gbc.writeMem(0x3280, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x7555);
        EXPECT(gbc.pc(), 0x3282);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 039C
        gbc.setState(0xac65, 0x6910, 0xab10, 0xfbcf, 0xc73, 0xb438, 0x0, 0x1);
        gbc.writeMem(0xac65, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x6910);
        EXPECT(gbc.pc(), 0xac67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac65), 0xcb);
        EXPECT(gbc.readMem(0xac66), 0xe9);
        // CB E9 039D
        gbc.setState(0xd542, 0x6d60, 0x7f80, 0xd109, 0x8368, 0x903a, 0x0, 0x0);
        gbc.writeMem(0xd542, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x6d60);
        EXPECT(gbc.pc(), 0xd544);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd542), 0xcb);
        EXPECT(gbc.readMem(0xd543), 0xe9);
        // CB E9 039E
        gbc.setState(0x9663, 0xd64a, 0x2b10, 0xf3f0, 0x581, 0x312, 0x0, 0x1);
        gbc.writeMem(0x9663, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xd64a);
        EXPECT(gbc.pc(), 0x9665);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9663), 0xcb);
        EXPECT(gbc.readMem(0x9664), 0xe9);
        // CB E9 039F
        gbc.setState(0x6ebc, 0xded0, 0x1b60, 0xb760, 0xe1da, 0x2c4a, 0x0, 0x0);
        gbc.writeMem(0x6ebc, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xded0);
        EXPECT(gbc.pc(), 0x6ebe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 03A0
        gbc.setState(0xded0, 0xbc3, 0x2e10, 0x32ba, 0x8d7f, 0x4cb1, 0x1, 0x0);
        gbc.writeMem(0xded0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xbc3);
        EXPECT(gbc.pc(), 0xded2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xded0), 0xcb);
        EXPECT(gbc.readMem(0xded1), 0xe9);
        // CB E9 03A1
        gbc.setState(0xbbf, 0xea5f, 0xe700, 0xa106, 0xacdd, 0x4368, 0x0, 0x1);
        gbc.writeMem(0xbbf, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xea5f);
        EXPECT(gbc.pc(), 0xbc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 03A3
        gbc.setState(0x5b12, 0x80a, 0x55a0, 0x48e4, 0x5930, 0x1202, 0x1, 0x1);
        gbc.writeMem(0x5b12, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x80a);
        EXPECT(gbc.pc(), 0x5b14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 03A4
        gbc.setState(0xc58b, 0x6833, 0xabc0, 0x14db, 0x3608, 0x4af4, 0x1, 0x0);
        gbc.writeMem(0xc58b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x6833);
        EXPECT(gbc.pc(), 0xc58d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc58b), 0xcb);
        EXPECT(gbc.readMem(0xc58c), 0xe9);
        // CB E9 03A5
        gbc.setState(0xd674, 0x7315, 0xf800, 0x8c89, 0x8cee, 0xe518, 0x1, 0x1);
        gbc.writeMem(0xd674, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7315);
        EXPECT(gbc.pc(), 0xd676);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd674), 0xcb);
        EXPECT(gbc.readMem(0xd675), 0xe9);
        // CB E9 03A6
        gbc.setState(0x763, 0xb03c, 0xf670, 0xa0e8, 0xf313, 0x8344, 0x1, 0x0);
        gbc.writeMem(0x763, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xb03c);
        EXPECT(gbc.pc(), 0x765);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 03A7
        gbc.setState(0x6909, 0x5f00, 0x6540, 0xe02a, 0xcf88, 0x26a9, 0x0, 0x1);
        gbc.writeMem(0x6909, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x5f00);
        EXPECT(gbc.pc(), 0x690b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 03A8
        gbc.setState(0xdebb, 0xec24, 0xddb0, 0xbbd7, 0xc7d, 0x1883, 0x1, 0x1);
        gbc.writeMem(0xdebb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xec24);
        EXPECT(gbc.pc(), 0xdebd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdebb), 0xcb);
        EXPECT(gbc.readMem(0xdebc), 0xe9);
        // CB E9 03A9
        gbc.setState(0x1300, 0xd519, 0x84e0, 0x9178, 0x6862, 0xb3d2, 0x0, 0x1);
        gbc.writeMem(0x1300, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xd519);
        EXPECT(gbc.pc(), 0x1302);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 03AA
        gbc.setState(0x3fa1, 0xdb45, 0x3ee0, 0x8786, 0x555b, 0xcce4, 0x0, 0x0);
        gbc.writeMem(0x3fa1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xdb45);
        EXPECT(gbc.pc(), 0x3fa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 03AB
        gbc.setState(0xea48, 0x581c, 0xb940, 0x7e0, 0x469a, 0x71b8, 0x0, 0x1);
        gbc.writeMem(0xea48, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x581c);
        EXPECT(gbc.pc(), 0xea4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea48), 0xcb);
        EXPECT(gbc.readMem(0xea49), 0xe9);
        // CB E9 03AC
        gbc.setState(0xc1ac, 0xe208, 0xffe0, 0x10f2, 0x7762, 0xa476, 0x1, 0x0);
        gbc.writeMem(0xc1ac, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xe208);
        EXPECT(gbc.pc(), 0xc1ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1ac), 0xcb);
        EXPECT(gbc.readMem(0xc1ad), 0xe9);
        // CB E9 03AD
        gbc.setState(0x978c, 0xbb8b, 0x6190, 0xa0ab, 0xd15f, 0xa584, 0x0, 0x0);
        gbc.writeMem(0x978c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xbb8b);
        EXPECT(gbc.pc(), 0x978e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x978c), 0xcb);
        EXPECT(gbc.readMem(0x978d), 0xe9);
        // CB E9 03AE
        gbc.setState(0x343c, 0x124c, 0xd260, 0x3059, 0x165d, 0x499c, 0x1, 0x0);
        gbc.writeMem(0x343c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x124c);
        EXPECT(gbc.pc(), 0x343e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 03AF
        gbc.setState(0x499, 0x38eb, 0xc150, 0x487a, 0x6355, 0xca66, 0x1, 0x0);
        gbc.writeMem(0x499, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x38eb);
        EXPECT(gbc.pc(), 0x49b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 03B0
        gbc.setState(0x7929, 0xa0cf, 0xaff0, 0x3d24, 0x56db, 0x1297, 0x1, 0x1);
        gbc.writeMem(0x7929, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xa0cf);
        EXPECT(gbc.pc(), 0x792b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 03B1
        gbc.setState(0x8f7b, 0xb82e, 0x1200, 0xa8ae, 0x9792, 0xe256, 0x0, 0x0);
        gbc.writeMem(0x8f7b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xb82e);
        EXPECT(gbc.pc(), 0x8f7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f7b), 0xcb);
        EXPECT(gbc.readMem(0x8f7c), 0xe9);
        // CB E9 03B2
        gbc.setState(0x73ff, 0x577e, 0x840, 0xb748, 0x6ccc, 0x832d, 0x0, 0x0);
        gbc.writeMem(0x73ff, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x577e);
        EXPECT(gbc.pc(), 0x7401);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 03B3
        gbc.setState(0x9d37, 0x1da4, 0xb7c0, 0xebc0, 0x579c, 0xf6f8, 0x1, 0x1);
        gbc.writeMem(0x9d37, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x1da4);
        EXPECT(gbc.pc(), 0x9d39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d37), 0xcb);
        EXPECT(gbc.readMem(0x9d38), 0xe9);
        // CB E9 03B4
        gbc.setState(0xef3d, 0x3c64, 0xc800, 0x4591, 0x4077, 0x4831, 0x0, 0x0);
        gbc.writeMem(0xef3d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x3c64);
        EXPECT(gbc.pc(), 0xef3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef3d), 0xcb);
        EXPECT(gbc.readMem(0xef3e), 0xe9);
        // CB E9 03B5
        gbc.setState(0xb4ec, 0xe2a0, 0xfe60, 0x71ae, 0xb9c1, 0xe200, 0x1, 0x1);
        gbc.writeMem(0xb4ec, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xe2a0);
        EXPECT(gbc.pc(), 0xb4ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4ec), 0xcb);
        EXPECT(gbc.readMem(0xb4ed), 0xe9);
        // CB E9 03B6
        gbc.setState(0x6883, 0x1458, 0x56a0, 0xa1a6, 0xf287, 0x2f58, 0x0, 0x1);
        gbc.writeMem(0x6883, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x1458);
        EXPECT(gbc.pc(), 0x6885);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 03B7
        gbc.setState(0xe8c4, 0x9e44, 0xd3c0, 0x8e38, 0xddc8, 0xfae6, 0x0, 0x0);
        gbc.writeMem(0xe8c4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x9e44);
        EXPECT(gbc.pc(), 0xe8c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8c4), 0xcb);
        EXPECT(gbc.readMem(0xe8c5), 0xe9);
        // CB E9 03B8
        gbc.setState(0x3bda, 0xce85, 0xe750, 0xd133, 0xedce, 0x3b58, 0x1, 0x1);
        gbc.writeMem(0x3bda, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xce85);
        EXPECT(gbc.pc(), 0x3bdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 03B9
        gbc.setState(0x84c1, 0x75ef, 0x59a0, 0x27ff, 0xfb75, 0xd8ba, 0x1, 0x1);
        gbc.writeMem(0x84c1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x75ef);
        EXPECT(gbc.pc(), 0x84c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84c1), 0xcb);
        EXPECT(gbc.readMem(0x84c2), 0xe9);
        // CB E9 03BA
        gbc.setState(0x3851, 0x9259, 0x18e0, 0x7cf, 0x1f94, 0xceec, 0x1, 0x1);
        gbc.writeMem(0x3851, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x9259);
        EXPECT(gbc.pc(), 0x3853);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 03BB
        gbc.setState(0xed95, 0x5dc2, 0x5420, 0xe8af, 0xf35, 0x3aff, 0x0, 0x0);
        gbc.writeMem(0xed95, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x5dc2);
        EXPECT(gbc.pc(), 0xed97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed95), 0xcb);
        EXPECT(gbc.readMem(0xed96), 0xe9);
        // CB E9 03BC
        gbc.setState(0x593e, 0x8afb, 0x2260, 0xb9bf, 0xda65, 0x6a59, 0x1, 0x0);
        gbc.writeMem(0x593e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8afb);
        EXPECT(gbc.pc(), 0x5940);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 03BD
        gbc.setState(0x5af5, 0x2adc, 0x6b50, 0x201b, 0xfdba, 0x72f8, 0x1, 0x1);
        gbc.writeMem(0x5af5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2adc);
        EXPECT(gbc.pc(), 0x5af7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 03BE
        gbc.setState(0x898d, 0x58f4, 0x3dc0, 0x7d7c, 0x940b, 0x92e, 0x1, 0x0);
        gbc.writeMem(0x898d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x58f4);
        EXPECT(gbc.pc(), 0x898f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x898d), 0xcb);
        EXPECT(gbc.readMem(0x898e), 0xe9);
        // CB E9 03BF
        gbc.setState(0xa060, 0x1a27, 0xb240, 0x6248, 0xb0d8, 0x392f, 0x0, 0x0);
        gbc.writeMem(0xa060, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x1a27);
        EXPECT(gbc.pc(), 0xa062);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa060), 0xcb);
        EXPECT(gbc.readMem(0xa061), 0xe9);
        // CB E9 03C0
        gbc.setState(0xd95, 0xd3dc, 0xc590, 0x2d76, 0x4bf5, 0x601a, 0x1, 0x1);
        gbc.writeMem(0xd95, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xd3dc);
        EXPECT(gbc.pc(), 0xd97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 03C1
        gbc.setState(0xd45, 0x5b7b, 0xbd60, 0x58ba, 0x5ae2, 0x265e, 0x1, 0x1);
        gbc.writeMem(0xd45, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x5b7b);
        EXPECT(gbc.pc(), 0xd47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 03C2
        gbc.setState(0x3b68, 0x3480, 0xac40, 0x2294, 0x51a2, 0xb286, 0x1, 0x0);
        gbc.writeMem(0x3b68, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x3480);
        EXPECT(gbc.pc(), 0x3b6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 03C3
        gbc.setState(0xae7a, 0x4698, 0x1290, 0x8949, 0xe076, 0xb656, 0x1, 0x1);
        gbc.writeMem(0xae7a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x4698);
        EXPECT(gbc.pc(), 0xae7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae7a), 0xcb);
        EXPECT(gbc.readMem(0xae7b), 0xe9);
        // CB E9 03C4
        gbc.setState(0x5181, 0x797c, 0x3450, 0x50d5, 0x91ae, 0xd57, 0x1, 0x1);
        gbc.writeMem(0x5181, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x797c);
        EXPECT(gbc.pc(), 0x5183);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 03C5
        gbc.setState(0xa28a, 0x65fe, 0x4600, 0x7c3d, 0x4403, 0xef8f, 0x0, 0x0);
        gbc.writeMem(0xa28a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x65fe);
        EXPECT(gbc.pc(), 0xa28c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa28a), 0xcb);
        EXPECT(gbc.readMem(0xa28b), 0xe9);
        // CB E9 03C6
        gbc.setState(0x8e18, 0xedad, 0x79d0, 0x9a29, 0x64e2, 0xfb0, 0x1, 0x1);
        gbc.writeMem(0x8e18, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xedad);
        EXPECT(gbc.pc(), 0x8e1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e18), 0xcb);
        EXPECT(gbc.readMem(0x8e19), 0xe9);
        // CB E9 03C7
        gbc.setState(0x6bdf, 0x878e, 0x87b0, 0x1b65, 0x7d1e, 0x306, 0x1, 0x1);
        gbc.writeMem(0x6bdf, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x878e);
        EXPECT(gbc.pc(), 0x6be1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 03C9
        gbc.setState(0x87c7, 0x8ecc, 0x2a50, 0xf0ee, 0x7d32, 0xffff, 0x0, 0x0);
        gbc.writeMem(0x87c7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x8ecc);
        EXPECT(gbc.pc(), 0x87c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87c7), 0xcb);
        EXPECT(gbc.readMem(0x87c8), 0xe9);
        // CB E9 03CA
        gbc.setState(0x4903, 0x3b33, 0xeca0, 0xff59, 0xcf4c, 0xd361, 0x0, 0x1);
        gbc.writeMem(0x4903, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3b33);
        EXPECT(gbc.pc(), 0x4905);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E9 03CB
        gbc.setState(0x8e90, 0x9b74, 0xbc40, 0x71bf, 0x57c, 0x4124, 0x1, 0x0);
        gbc.writeMem(0x8e90, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x9b74);
        EXPECT(gbc.pc(), 0x8e92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e90), 0xcb);
        EXPECT(gbc.readMem(0x8e91), 0xe9);
        // CB E9 03CC
        gbc.setState(0xd081, 0x934e, 0x7180, 0x6174, 0x977f, 0x1f1a, 0x1, 0x1);
        gbc.writeMem(0xd081, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x934e);
        EXPECT(gbc.pc(), 0xd083);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd081), 0xcb);
        EXPECT(gbc.readMem(0xd082), 0xe9);
        // CB E9 03CD
        gbc.setState(0xd20f, 0xeedb, 0xc510, 0xd41c, 0x317, 0x5cc4, 0x0, 0x1);
        gbc.writeMem(0xd20f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xeedb);
        EXPECT(gbc.pc(), 0xd211);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd20f), 0xcb);
        EXPECT(gbc.readMem(0xd210), 0xe9);
        // CB E9 03CE
        gbc.setState(0x4cbd, 0xf4ba, 0xccf0, 0x635d, 0xb95, 0x5710, 0x0, 0x0);
        gbc.writeMem(0x4cbd, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf4ba);
        EXPECT(gbc.pc(), 0x4cbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 03CF
        gbc.setState(0xed6b, 0xd67c, 0x7ae0, 0x27a0, 0x3faa, 0x6912, 0x1, 0x1);
        gbc.writeMem(0xed6b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xd67c);
        EXPECT(gbc.pc(), 0xed6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed6b), 0xcb);
        EXPECT(gbc.readMem(0xed6c), 0xe9);
        // CB E9 03D0
        gbc.setState(0x5b18, 0xea26, 0x84f0, 0x416c, 0xb0e2, 0x523e, 0x1, 0x1);
        gbc.writeMem(0x5b18, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xea26);
        EXPECT(gbc.pc(), 0x5b1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 03D1
        gbc.setState(0x2055, 0xb8df, 0x1390, 0x90b3, 0x2083, 0x7a28, 0x1, 0x1);
        gbc.writeMem(0x2055, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xb8df);
        EXPECT(gbc.pc(), 0x2057);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 03D2
        gbc.setState(0x517a, 0x3e03, 0xc2f0, 0x4710, 0x3db4, 0x248c, 0x1, 0x0);
        gbc.writeMem(0x517a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x3e03);
        EXPECT(gbc.pc(), 0x517c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 03D3
        gbc.setState(0x56d0, 0x269d, 0x4550, 0x364b, 0xa5b3, 0xece7, 0x1, 0x1);
        gbc.writeMem(0x56d0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x269d);
        EXPECT(gbc.pc(), 0x56d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 03D4
        gbc.setState(0xad8, 0xdc4c, 0x2980, 0x7f2f, 0x700f, 0xcf59, 0x1, 0x1);
        gbc.writeMem(0xad8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xdc4c);
        EXPECT(gbc.pc(), 0xada);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 03D5
        gbc.setState(0x8732, 0x6b03, 0xf220, 0x23bb, 0xd629, 0xdb65, 0x1, 0x1);
        gbc.writeMem(0x8732, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x6b03);
        EXPECT(gbc.pc(), 0x8734);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8732), 0xcb);
        EXPECT(gbc.readMem(0x8733), 0xe9);
        // CB E9 03D6
        gbc.setState(0x3ff5, 0xc78e, 0x6cb0, 0xa9e2, 0xcfae, 0x9697, 0x0, 0x0);
        gbc.writeMem(0x3ff5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xc78e);
        EXPECT(gbc.pc(), 0x3ff7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 03D7
        gbc.setState(0x143d, 0x1857, 0x4ad0, 0x9d4f, 0x925f, 0x9cce, 0x0, 0x0);
        gbc.writeMem(0x143d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x1857);
        EXPECT(gbc.pc(), 0x143f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 03D8
        gbc.setState(0x1dfb, 0x2d8a, 0x1c80, 0xe391, 0x4ba5, 0xbb72, 0x0, 0x1);
        gbc.writeMem(0x1dfb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2d8a);
        EXPECT(gbc.pc(), 0x1dfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 03D9
        gbc.setState(0x681f, 0x3cd2, 0xe440, 0x8e39, 0xc656, 0x43fe, 0x1, 0x1);
        gbc.writeMem(0x681f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x3cd2);
        EXPECT(gbc.pc(), 0x6821);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 03DA
        gbc.setState(0xdf38, 0xd09d, 0xc390, 0xf76b, 0xf491, 0x6a65, 0x1, 0x1);
        gbc.writeMem(0xdf38, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xd09d);
        EXPECT(gbc.pc(), 0xdf3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf38), 0xcb);
        EXPECT(gbc.readMem(0xdf39), 0xe9);
        // CB E9 03DB
        gbc.setState(0x5c9d, 0x59be, 0xb4f0, 0x29d2, 0xe238, 0x4de9, 0x0, 0x1);
        gbc.writeMem(0x5c9d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x59be);
        EXPECT(gbc.pc(), 0x5c9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 03DC
        gbc.setState(0x5bd0, 0x864b, 0x1fd0, 0x6342, 0x15ae, 0x6719, 0x1, 0x0);
        gbc.writeMem(0x5bd0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x864b);
        EXPECT(gbc.pc(), 0x5bd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 03DD
        gbc.setState(0x1a1e, 0xdf54, 0xab0, 0xf1cd, 0xd847, 0xe285, 0x0, 0x1);
        gbc.writeMem(0x1a1e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xdf54);
        EXPECT(gbc.pc(), 0x1a20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 03DE
        gbc.setState(0x7e9c, 0x26e, 0x4650, 0x2477, 0x43c3, 0x6ca1, 0x0, 0x0);
        gbc.writeMem(0x7e9c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x26e);
        EXPECT(gbc.pc(), 0x7e9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 03DF
        gbc.setState(0xa937, 0xfefd, 0x8720, 0x45c7, 0xbdf6, 0xa71a, 0x1, 0x1);
        gbc.writeMem(0xa937, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xfefd);
        EXPECT(gbc.pc(), 0xa939);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa937), 0xcb);
        EXPECT(gbc.readMem(0xa938), 0xe9);
        // CB E9 03E0
        gbc.setState(0x33e, 0x2e34, 0xe4d0, 0x51e1, 0x1d51, 0x5c16, 0x0, 0x0);
        gbc.writeMem(0x33e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x2e34);
        EXPECT(gbc.pc(), 0x340);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 03E1
        gbc.setState(0x5c99, 0xefb6, 0x55f0, 0x34e6, 0x819b, 0x58b5, 0x0, 0x1);
        gbc.writeMem(0x5c99, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xefb6);
        EXPECT(gbc.pc(), 0x5c9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E9 03E2
        gbc.setState(0x80df, 0xd826, 0x6340, 0x2fec, 0xf239, 0x3c4b, 0x1, 0x1);
        gbc.writeMem(0x80df, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xd826);
        EXPECT(gbc.pc(), 0x80e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80df), 0xcb);
        EXPECT(gbc.readMem(0x80e0), 0xe9);
        // CB E9 03E3
        gbc.setState(0x7531, 0x539f, 0xcb00, 0xd259, 0x6418, 0xdacb, 0x0, 0x1);
        gbc.writeMem(0x7531, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x539f);
        EXPECT(gbc.pc(), 0x7533);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E9 03E4
        gbc.setState(0xa803, 0x204f, 0x4c70, 0xd48f, 0xc30a, 0xab00, 0x0, 0x1);
        gbc.writeMem(0xa803, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x204f);
        EXPECT(gbc.pc(), 0xa805);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa803), 0xcb);
        EXPECT(gbc.readMem(0xa804), 0xe9);
        // CB E9 03E5
        gbc.setState(0x6a00, 0x7aea, 0xf810, 0xb7df, 0xdd62, 0x5999, 0x1, 0x0);
        gbc.writeMem(0x6a00, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x7aea);
        EXPECT(gbc.pc(), 0x6a02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E9 03E6
        gbc.setState(0x952a, 0xf006, 0x8a10, 0x8133, 0x4106, 0xacda, 0x0, 0x0);
        gbc.writeMem(0x952a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xf006);
        EXPECT(gbc.pc(), 0x952c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x952a), 0xcb);
        EXPECT(gbc.readMem(0x952b), 0xe9);
        // CB E9 03E7
        gbc.setState(0x3292, 0x1be2, 0x58c0, 0x198d, 0xd48d, 0xdaae, 0x1, 0x1);
        gbc.writeMem(0x3292, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x1be2);
        EXPECT(gbc.pc(), 0x3294);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
    }
