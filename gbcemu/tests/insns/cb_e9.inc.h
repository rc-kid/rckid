    TEST(gbcemu, opcode_cb_e9) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB E9 0000
        gbc.setState(0xb395, 0x151f, 0x6790, 0x8b46, 0x6ee8, 0x9515, 0x1, 0x1);
        gbc.writeMem(0xb395, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x151f, gbc.sp());
        EXPECT(0xb397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb395));
        EXPECT(0xe9, gbc.readMem(0xb396));
        // CB E9 0001
        gbc.setState(0xe6c4, 0xe5df, 0x1d40, 0xb9e, 0x8062, 0x65f1, 0x1, 0x0);
        gbc.writeMem(0xe6c4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe5df, gbc.sp());
        EXPECT(0xe6c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6c4));
        EXPECT(0xe9, gbc.readMem(0xe6c5));
        // CB E9 0002
        gbc.setState(0xd990, 0x3457, 0x1040, 0x362f, 0x1bc4, 0xaee8, 0x1, 0x0);
        gbc.writeMem(0xd990, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3457, gbc.sp());
        EXPECT(0xd992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd990));
        EXPECT(0xe9, gbc.readMem(0xd991));
        // CB E9 0003
        gbc.setState(0x6c50, 0x13f0, 0x9cb0, 0xa06b, 0x371, 0x967b, 0x0, 0x1);
        gbc.writeMem(0x6c50, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x13f0, gbc.sp());
        EXPECT(0x6c52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0004
        gbc.setState(0x17b0, 0x431, 0xb580, 0x5d7b, 0xb112, 0x57e, 0x1, 0x1);
        gbc.writeMem(0x17b0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x431, gbc.sp());
        EXPECT(0x17b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0005
        gbc.setState(0x6374, 0x2714, 0x19d0, 0xdb89, 0x58b2, 0x4df2, 0x1, 0x0);
        gbc.writeMem(0x6374, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2714, gbc.sp());
        EXPECT(0x6376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0006
        gbc.setState(0xd2d4, 0x8bfd, 0xa060, 0xfa98, 0x1c6b, 0x7bd5, 0x1, 0x1);
        gbc.writeMem(0xd2d4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8bfd, gbc.sp());
        EXPECT(0xd2d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2d4));
        EXPECT(0xe9, gbc.readMem(0xd2d5));
        // CB E9 0007
        gbc.setState(0x4de0, 0xf9dc, 0x4f50, 0x4a02, 0xcce6, 0x75ad, 0x0, 0x1);
        gbc.writeMem(0x4de0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf9dc, gbc.sp());
        EXPECT(0x4de2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0008
        gbc.setState(0x2761, 0xd12b, 0xbc90, 0x9bb2, 0x93af, 0xb914, 0x0, 0x0);
        gbc.writeMem(0x2761, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd12b, gbc.sp());
        EXPECT(0x2763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0009
        gbc.setState(0x2aad, 0x16aa, 0xf630, 0xd0f, 0x504e, 0x81df, 0x0, 0x1);
        gbc.writeMem(0x2aad, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x16aa, gbc.sp());
        EXPECT(0x2aaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 000A
        gbc.setState(0xaa54, 0xff4d, 0x9b10, 0xca44, 0xeb57, 0xf599, 0x0, 0x1);
        gbc.writeMem(0xaa54, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xff4d, gbc.sp());
        EXPECT(0xaa56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa54));
        EXPECT(0xe9, gbc.readMem(0xaa55));
        // CB E9 000B
        gbc.setState(0xe8f7, 0x9dec, 0xa1d0, 0x4f29, 0xbc63, 0x2ca0, 0x1, 0x0);
        gbc.writeMem(0xe8f7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9dec, gbc.sp());
        EXPECT(0xe8f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8f7));
        EXPECT(0xe9, gbc.readMem(0xe8f8));
        // CB E9 000C
        gbc.setState(0xdb48, 0xdde0, 0x5760, 0xfa2b, 0x92ab, 0xb687, 0x0, 0x1);
        gbc.writeMem(0xdb48, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xdde0, gbc.sp());
        EXPECT(0xdb4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb48));
        EXPECT(0xe9, gbc.readMem(0xdb49));
        // CB E9 000D
        gbc.setState(0x8228, 0xd2e0, 0xbad0, 0x5d25, 0xbc5a, 0xbc19, 0x0, 0x0);
        gbc.writeMem(0x8228, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd2e0, gbc.sp());
        EXPECT(0x822a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8228));
        EXPECT(0xe9, gbc.readMem(0x8229));
        // CB E9 000E
        gbc.setState(0x1f70, 0xe756, 0x9af0, 0xc0af, 0x6981, 0x9fc7, 0x0, 0x1);
        gbc.writeMem(0x1f70, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe756, gbc.sp());
        EXPECT(0x1f72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 000F
        gbc.setState(0x55a4, 0x74de, 0x4a00, 0x2fae, 0xe84f, 0xcd37, 0x1, 0x0);
        gbc.writeMem(0x55a4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x74de, gbc.sp());
        EXPECT(0x55a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0010
        gbc.setState(0x5996, 0xd26b, 0x3460, 0xa797, 0xd26a, 0x82aa, 0x1, 0x0);
        gbc.writeMem(0x5996, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd26b, gbc.sp());
        EXPECT(0x5998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0011
        gbc.setState(0x1f60, 0x210a, 0x7b10, 0x86fd, 0xb03d, 0x259a, 0x0, 0x1);
        gbc.writeMem(0x1f60, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x210a, gbc.sp());
        EXPECT(0x1f62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0012
        gbc.setState(0x1120, 0x77a, 0xfa30, 0xa3e8, 0xad35, 0x9d51, 0x1, 0x1);
        gbc.writeMem(0x1120, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x77a, gbc.sp());
        EXPECT(0x1122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0013
        gbc.setState(0x2ed1, 0x8a07, 0x2ca0, 0x2e79, 0xd3ea, 0x99e8, 0x1, 0x0);
        gbc.writeMem(0x2ed1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8a07, gbc.sp());
        EXPECT(0x2ed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0014
        gbc.setState(0x2570, 0x885e, 0xe0, 0x6ad2, 0x775b, 0x7f3, 0x0, 0x1);
        gbc.writeMem(0x2570, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x885e, gbc.sp());
        EXPECT(0x2572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0015
        gbc.setState(0x9795, 0x72f3, 0x5050, 0x98c5, 0x702f, 0x90be, 0x1, 0x1);
        gbc.writeMem(0x9795, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x72f3, gbc.sp());
        EXPECT(0x9797, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9795));
        EXPECT(0xe9, gbc.readMem(0x9796));
        // CB E9 0016
        gbc.setState(0x48b1, 0xed6b, 0xf760, 0x93b9, 0xeaf9, 0xeded, 0x1, 0x0);
        gbc.writeMem(0x48b1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xed6b, gbc.sp());
        EXPECT(0x48b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0017
        gbc.setState(0x4b0e, 0x5f9a, 0xebb0, 0xdd94, 0x5f3c, 0xdedd, 0x0, 0x0);
        gbc.writeMem(0x4b0e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5f9a, gbc.sp());
        EXPECT(0x4b10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0018
        gbc.setState(0xb08b, 0x9e5c, 0xff40, 0x869f, 0xebb7, 0xddf7, 0x0, 0x0);
        gbc.writeMem(0xb08b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9e5c, gbc.sp());
        EXPECT(0xb08d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb08b));
        EXPECT(0xe9, gbc.readMem(0xb08c));
        // CB E9 0019
        gbc.setState(0x7edb, 0x559b, 0x7f00, 0x7881, 0x1f3f, 0x26f4, 0x0, 0x0);
        gbc.writeMem(0x7edb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x559b, gbc.sp());
        EXPECT(0x7edd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 001A
        gbc.setState(0x5f32, 0x90a2, 0x2c00, 0x1458, 0xd2cd, 0xc841, 0x0, 0x1);
        gbc.writeMem(0x5f32, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x90a2, gbc.sp());
        EXPECT(0x5f34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 001B
        gbc.setState(0xef2f, 0x5698, 0xac10, 0x9c53, 0x7b41, 0xefa8, 0x0, 0x0);
        gbc.writeMem(0xef2f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5698, gbc.sp());
        EXPECT(0xef31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef2f));
        EXPECT(0xe9, gbc.readMem(0xef30));
        // CB E9 001C
        gbc.setState(0x49a6, 0xfe47, 0x5dc0, 0x91ee, 0xfd33, 0xec0, 0x0, 0x1);
        gbc.writeMem(0x49a6, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xfe47, gbc.sp());
        EXPECT(0x49a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 001D
        gbc.setState(0x483e, 0x79bd, 0xa3a0, 0x62d1, 0x4177, 0xbd98, 0x0, 0x0);
        gbc.writeMem(0x483e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x79bd, gbc.sp());
        EXPECT(0x4840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 001E
        gbc.setState(0xb58c, 0x4053, 0xd590, 0x35f1, 0x5ded, 0x6a7d, 0x1, 0x1);
        gbc.writeMem(0xb58c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4053, gbc.sp());
        EXPECT(0xb58e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb58c));
        EXPECT(0xe9, gbc.readMem(0xb58d));
        // CB E9 001F
        gbc.setState(0xa165, 0xe142, 0x8430, 0xb63e, 0xb40f, 0x3e69, 0x0, 0x1);
        gbc.writeMem(0xa165, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe142, gbc.sp());
        EXPECT(0xa167, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa165));
        EXPECT(0xe9, gbc.readMem(0xa166));
        // CB E9 0020
        gbc.setState(0x8801, 0xc059, 0xe7e0, 0x99ee, 0x29c0, 0xf094, 0x1, 0x0);
        gbc.writeMem(0x8801, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc059, gbc.sp());
        EXPECT(0x8803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8801));
        EXPECT(0xe9, gbc.readMem(0x8802));
        // CB E9 0021
        gbc.setState(0xe807, 0x4b41, 0xc340, 0xc2fc, 0x559c, 0xeeab, 0x1, 0x1);
        gbc.writeMem(0xe807, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4b41, gbc.sp());
        EXPECT(0xe809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe807));
        EXPECT(0xe9, gbc.readMem(0xe808));
        // CB E9 0022
        gbc.setState(0x81c8, 0x5c5f, 0x76d0, 0x9326, 0x9f06, 0xe093, 0x0, 0x1);
        gbc.writeMem(0x81c8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5c5f, gbc.sp());
        EXPECT(0x81ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81c8));
        EXPECT(0xe9, gbc.readMem(0x81c9));
        // CB E9 0023
        gbc.setState(0xa4df, 0xbae8, 0x5be0, 0x4ca4, 0x45a3, 0x44f1, 0x0, 0x0);
        gbc.writeMem(0xa4df, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xbae8, gbc.sp());
        EXPECT(0xa4e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4df));
        EXPECT(0xe9, gbc.readMem(0xa4e0));
        // CB E9 0024
        gbc.setState(0x26fe, 0xa7d1, 0x2940, 0xf6e0, 0x293, 0xe5ca, 0x1, 0x0);
        gbc.writeMem(0x26fe, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa7d1, gbc.sp());
        EXPECT(0x2700, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0025
        gbc.setState(0x430c, 0xd07b, 0xa870, 0x93dd, 0x2a03, 0xd201, 0x1, 0x0);
        gbc.writeMem(0x430c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd07b, gbc.sp());
        EXPECT(0x430e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0026
        gbc.setState(0x45bd, 0x306, 0x64e0, 0xbb9d, 0x6a20, 0xe4c6, 0x0, 0x0);
        gbc.writeMem(0x45bd, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x306, gbc.sp());
        EXPECT(0x45bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0028
        gbc.setState(0x1ce6, 0x1e2c, 0x4f20, 0x2273, 0xbcef, 0xbbb9, 0x1, 0x1);
        gbc.writeMem(0x1ce6, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1e2c, gbc.sp());
        EXPECT(0x1ce8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0029
        gbc.setState(0x8ba, 0xb089, 0x74d0, 0x9104, 0x5283, 0xc8a9, 0x1, 0x0);
        gbc.writeMem(0x8ba, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb089, gbc.sp());
        EXPECT(0x8bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 002A
        gbc.setState(0xa2ed, 0x2d3c, 0x4150, 0x2b7f, 0x8775, 0x3f7, 0x1, 0x1);
        gbc.writeMem(0xa2ed, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2d3c, gbc.sp());
        EXPECT(0xa2ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2ed));
        EXPECT(0xe9, gbc.readMem(0xa2ee));
        // CB E9 002C
        gbc.setState(0x7c7c, 0xde3a, 0xf0, 0x38e4, 0x8299, 0x2781, 0x0, 0x0);
        gbc.writeMem(0x7c7c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xde3a, gbc.sp());
        EXPECT(0x7c7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 002D
        gbc.setState(0x134d, 0x230e, 0xc750, 0x20c5, 0xd069, 0x623f, 0x1, 0x0);
        gbc.writeMem(0x134d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x230e, gbc.sp());
        EXPECT(0x134f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 002E
        gbc.setState(0x7a50, 0x13e2, 0x7b70, 0x9f36, 0x390c, 0x2908, 0x1, 0x0);
        gbc.writeMem(0x7a50, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x13e2, gbc.sp());
        EXPECT(0x7a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0030
        gbc.setState(0x9c63, 0xaf45, 0x13a0, 0xbcbc, 0x35b4, 0x2de1, 0x1, 0x0);
        gbc.writeMem(0x9c63, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xaf45, gbc.sp());
        EXPECT(0x9c65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c63));
        EXPECT(0xe9, gbc.readMem(0x9c64));
        // CB E9 0031
        gbc.setState(0x1176, 0x4dd5, 0x96c0, 0x5982, 0x3433, 0x82c7, 0x1, 0x1);
        gbc.writeMem(0x1176, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4dd5, gbc.sp());
        EXPECT(0x1178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0032
        gbc.setState(0x2ac7, 0xf922, 0x4570, 0xd35d, 0x18eb, 0x9301, 0x1, 0x0);
        gbc.writeMem(0x2ac7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf922, gbc.sp());
        EXPECT(0x2ac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0033
        gbc.setState(0x909b, 0xeb3, 0xc300, 0x7409, 0x2a39, 0x7f6f, 0x0, 0x0);
        gbc.writeMem(0x909b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xeb3, gbc.sp());
        EXPECT(0x909d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x909b));
        EXPECT(0xe9, gbc.readMem(0x909c));
        // CB E9 0034
        gbc.setState(0x8c37, 0x4e2d, 0x3140, 0xb5ec, 0x6a8f, 0x5290, 0x1, 0x0);
        gbc.writeMem(0x8c37, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4e2d, gbc.sp());
        EXPECT(0x8c39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c37));
        EXPECT(0xe9, gbc.readMem(0x8c38));
        // CB E9 0035
        gbc.setState(0x6a22, 0x1d2, 0x3760, 0x74a9, 0x6d63, 0xa3c9, 0x0, 0x0);
        gbc.writeMem(0x6a22, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1d2, gbc.sp());
        EXPECT(0x6a24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0036
        gbc.setState(0xbd09, 0xf373, 0x350, 0x74a5, 0xa012, 0xccf6, 0x1, 0x0);
        gbc.writeMem(0xbd09, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf373, gbc.sp());
        EXPECT(0xbd0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd09));
        EXPECT(0xe9, gbc.readMem(0xbd0a));
        // CB E9 0037
        gbc.setState(0xc7b1, 0xa6b8, 0x5f30, 0x9c0b, 0xc377, 0x15f0, 0x0, 0x1);
        gbc.writeMem(0xc7b1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa6b8, gbc.sp());
        EXPECT(0xc7b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7b1));
        EXPECT(0xe9, gbc.readMem(0xc7b2));
        // CB E9 0038
        gbc.setState(0xa28b, 0xd75e, 0x68a0, 0x6362, 0x2ef1, 0x98e5, 0x0, 0x1);
        gbc.writeMem(0xa28b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd75e, gbc.sp());
        EXPECT(0xa28d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa28b));
        EXPECT(0xe9, gbc.readMem(0xa28c));
        // CB E9 0039
        gbc.setState(0xbf29, 0x26ea, 0x3860, 0x1e5b, 0x3c94, 0xac4f, 0x1, 0x1);
        gbc.writeMem(0xbf29, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x26ea, gbc.sp());
        EXPECT(0xbf2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf29));
        EXPECT(0xe9, gbc.readMem(0xbf2a));
        // CB E9 003A
        gbc.setState(0xec7f, 0x68b6, 0x1640, 0x66f6, 0xd00f, 0xdd3e, 0x0, 0x0);
        gbc.writeMem(0xec7f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x68b6, gbc.sp());
        EXPECT(0xec81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec7f));
        EXPECT(0xe9, gbc.readMem(0xec80));
        // CB E9 003B
        gbc.setState(0xdec3, 0x1c31, 0xd540, 0x833e, 0x6d90, 0xf947, 0x0, 0x0);
        gbc.writeMem(0xdec3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1c31, gbc.sp());
        EXPECT(0xdec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdec3));
        EXPECT(0xe9, gbc.readMem(0xdec4));
        // CB E9 003C
        gbc.setState(0xce1a, 0xbded, 0x5ff0, 0x6b7d, 0x80af, 0x341d, 0x1, 0x0);
        gbc.writeMem(0xce1a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xbded, gbc.sp());
        EXPECT(0xce1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce1a));
        EXPECT(0xe9, gbc.readMem(0xce1b));
        // CB E9 003D
        gbc.setState(0xe740, 0xa53f, 0x9de0, 0xa5d, 0x7871, 0x2f4f, 0x0, 0x0);
        gbc.writeMem(0xe740, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa53f, gbc.sp());
        EXPECT(0xe742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe740));
        EXPECT(0xe9, gbc.readMem(0xe741));
        // CB E9 003E
        gbc.setState(0x6f21, 0x3892, 0x7580, 0xb4e1, 0xd3db, 0x2ee2, 0x1, 0x1);
        gbc.writeMem(0x6f21, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3892, gbc.sp());
        EXPECT(0x6f23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 003F
        gbc.setState(0x2b41, 0x5299, 0xacd0, 0x1001, 0xadd6, 0xb693, 0x0, 0x1);
        gbc.writeMem(0x2b41, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5299, gbc.sp());
        EXPECT(0x2b43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0040
        gbc.setState(0xb671, 0x533a, 0x69c0, 0xa833, 0x85d7, 0xbe8c, 0x0, 0x0);
        gbc.writeMem(0xb671, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x533a, gbc.sp());
        EXPECT(0xb673, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb671));
        EXPECT(0xe9, gbc.readMem(0xb672));
        // CB E9 0042
        gbc.setState(0x7089, 0xf822, 0xbe90, 0xd2c, 0x63c0, 0x282, 0x1, 0x0);
        gbc.writeMem(0x7089, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf822, gbc.sp());
        EXPECT(0x708b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0043
        gbc.setState(0x1fd7, 0x6e92, 0x3700, 0x7f60, 0xf54, 0x3b6e, 0x0, 0x1);
        gbc.writeMem(0x1fd7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6e92, gbc.sp());
        EXPECT(0x1fd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0044
        gbc.setState(0xd7b1, 0x2a2d, 0x8be0, 0x2ee7, 0x547f, 0xb1a2, 0x0, 0x1);
        gbc.writeMem(0xd7b1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2a2d, gbc.sp());
        EXPECT(0xd7b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7b1));
        EXPECT(0xe9, gbc.readMem(0xd7b2));
        // CB E9 0045
        gbc.setState(0x8e5f, 0xe6e2, 0x6e60, 0x6856, 0x400, 0x6315, 0x1, 0x0);
        gbc.writeMem(0x8e5f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe6e2, gbc.sp());
        EXPECT(0x8e61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e5f));
        EXPECT(0xe9, gbc.readMem(0x8e60));
        // CB E9 0047
        gbc.setState(0xba65, 0xa654, 0x8080, 0x7a07, 0xaefe, 0x8424, 0x1, 0x0);
        gbc.writeMem(0xba65, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa654, gbc.sp());
        EXPECT(0xba67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba65));
        EXPECT(0xe9, gbc.readMem(0xba66));
        // CB E9 0048
        gbc.setState(0xba6b, 0x6af2, 0x7590, 0x39b7, 0xc959, 0x6f6, 0x0, 0x0);
        gbc.writeMem(0xba6b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x6af2, gbc.sp());
        EXPECT(0xba6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba6b));
        EXPECT(0xe9, gbc.readMem(0xba6c));
        // CB E9 0049
        gbc.setState(0x2223, 0x4922, 0xd3b0, 0xe8da, 0x69c9, 0xe325, 0x0, 0x0);
        gbc.writeMem(0x2223, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4922, gbc.sp());
        EXPECT(0x2225, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 004A
        gbc.setState(0xbc83, 0x523a, 0xbfa0, 0xd14f, 0x855f, 0x104, 0x1, 0x1);
        gbc.writeMem(0xbc83, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x523a, gbc.sp());
        EXPECT(0xbc85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc83));
        EXPECT(0xe9, gbc.readMem(0xbc84));
        // CB E9 004B
        gbc.setState(0x11b4, 0xe7eb, 0xc940, 0xb401, 0xc7c2, 0x83a2, 0x1, 0x0);
        gbc.writeMem(0x11b4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe7eb, gbc.sp());
        EXPECT(0x11b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 004C
        gbc.setState(0xd9d8, 0xd918, 0x240, 0x9f58, 0x7b09, 0xc2c3, 0x1, 0x0);
        gbc.writeMem(0xd9d8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd918, gbc.sp());
        EXPECT(0xd9da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9d8));
        EXPECT(0xe9, gbc.readMem(0xd9d9));
        // CB E9 004D
        gbc.setState(0x4ef2, 0x4f2f, 0xad90, 0xfe1d, 0x4589, 0xd11, 0x0, 0x0);
        gbc.writeMem(0x4ef2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4f2f, gbc.sp());
        EXPECT(0x4ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 004E
        gbc.setState(0x58d7, 0x8712, 0x5440, 0x9b00, 0xb43d, 0xb16e, 0x1, 0x1);
        gbc.writeMem(0x58d7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8712, gbc.sp());
        EXPECT(0x58d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 004F
        gbc.setState(0x806b, 0x1fc5, 0x2350, 0xfa61, 0x538d, 0x4cf3, 0x0, 0x1);
        gbc.writeMem(0x806b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1fc5, gbc.sp());
        EXPECT(0x806d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x806b));
        EXPECT(0xe9, gbc.readMem(0x806c));
        // CB E9 0050
        gbc.setState(0xab43, 0xc654, 0x4840, 0x530d, 0x238c, 0x65b3, 0x0, 0x0);
        gbc.writeMem(0xab43, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc654, gbc.sp());
        EXPECT(0xab45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab43));
        EXPECT(0xe9, gbc.readMem(0xab44));
        // CB E9 0051
        gbc.setState(0xce7a, 0xcad0, 0x4320, 0x1129, 0x345c, 0xe662, 0x1, 0x1);
        gbc.writeMem(0xce7a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xcad0, gbc.sp());
        EXPECT(0xce7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce7a));
        EXPECT(0xe9, gbc.readMem(0xce7b));
        // CB E9 0054
        gbc.setState(0x73e2, 0x4887, 0x3b40, 0xd82, 0x7dc4, 0x8991, 0x1, 0x0);
        gbc.writeMem(0x73e2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4887, gbc.sp());
        EXPECT(0x73e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0055
        gbc.setState(0xb000, 0xc2ad, 0x16f0, 0x48d2, 0xd5b2, 0x33de, 0x1, 0x1);
        gbc.writeMem(0xb000, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc2ad, gbc.sp());
        EXPECT(0xb002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb000));
        EXPECT(0xe9, gbc.readMem(0xb001));
        // CB E9 0056
        gbc.setState(0x40cf, 0x936, 0x2b50, 0x443e, 0xb6aa, 0x5791, 0x1, 0x1);
        gbc.writeMem(0x40cf, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x936, gbc.sp());
        EXPECT(0x40d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0057
        gbc.setState(0x17e0, 0xf21c, 0x52f0, 0x61b, 0xd1eb, 0x985d, 0x0, 0x0);
        gbc.writeMem(0x17e0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf21c, gbc.sp());
        EXPECT(0x17e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0058
        gbc.setState(0x8b4, 0xf53a, 0x59a0, 0xb40b, 0x2e1c, 0xe388, 0x1, 0x0);
        gbc.writeMem(0x8b4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf53a, gbc.sp());
        EXPECT(0x8b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0059
        gbc.setState(0xbab9, 0xb2c4, 0x4e60, 0x9a97, 0x4f5d, 0x4cf7, 0x0, 0x0);
        gbc.writeMem(0xbab9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb2c4, gbc.sp());
        EXPECT(0xbabb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbab9));
        EXPECT(0xe9, gbc.readMem(0xbaba));
        // CB E9 005A
        gbc.setState(0x5742, 0x86c9, 0xcfc0, 0xb50b, 0x8a56, 0x7a70, 0x0, 0x0);
        gbc.writeMem(0x5742, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x86c9, gbc.sp());
        EXPECT(0x5744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 005B
        gbc.setState(0xdff5, 0x8ac2, 0xe8b0, 0xb690, 0x579c, 0x8731, 0x1, 0x1);
        gbc.writeMem(0xdff5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8ac2, gbc.sp());
        EXPECT(0xdff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdff5));
        EXPECT(0xe9, gbc.readMem(0xdff6));
        // CB E9 005C
        gbc.setState(0x12d6, 0xe04, 0x5ba0, 0xe1e0, 0xba67, 0xa8c3, 0x1, 0x1);
        gbc.writeMem(0x12d6, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe04, gbc.sp());
        EXPECT(0x12d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 005E
        gbc.setState(0x7f60, 0xe66d, 0xf8e0, 0x11d2, 0xef67, 0x9570, 0x1, 0x1);
        gbc.writeMem(0x7f60, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe66d, gbc.sp());
        EXPECT(0x7f62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 005F
        gbc.setState(0xdc3f, 0xbcdd, 0x25e0, 0x55af, 0xf1b7, 0xcbd9, 0x0, 0x1);
        gbc.writeMem(0xdc3f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xbcdd, gbc.sp());
        EXPECT(0xdc41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc3f));
        EXPECT(0xe9, gbc.readMem(0xdc40));
        // CB E9 0060
        gbc.setState(0xc955, 0x8f53, 0xb20, 0xfba3, 0xc883, 0xd320, 0x0, 0x1);
        gbc.writeMem(0xc955, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8f53, gbc.sp());
        EXPECT(0xc957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc955));
        EXPECT(0xe9, gbc.readMem(0xc956));
        // CB E9 0061
        gbc.setState(0x321f, 0x43f5, 0x9760, 0xa2bd, 0x23ad, 0xfe33, 0x1, 0x0);
        gbc.writeMem(0x321f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x43f5, gbc.sp());
        EXPECT(0x3221, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0062
        gbc.setState(0x1f8, 0x5264, 0xb9e0, 0x41d2, 0x36e, 0x67b3, 0x1, 0x0);
        gbc.writeMem(0x1f8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5264, gbc.sp());
        EXPECT(0x1fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0063
        gbc.setState(0x5c54, 0x5513, 0xc9f0, 0xde51, 0xa46f, 0x65cc, 0x0, 0x1);
        gbc.writeMem(0x5c54, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5513, gbc.sp());
        EXPECT(0x5c56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0064
        gbc.setState(0x7d2, 0x35e6, 0x3b20, 0x9be8, 0x6664, 0x5236, 0x0, 0x1);
        gbc.writeMem(0x7d2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x35e6, gbc.sp());
        EXPECT(0x7d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0065
        gbc.setState(0x536a, 0x71b9, 0x5150, 0x3e77, 0x7399, 0xd88c, 0x1, 0x0);
        gbc.writeMem(0x536a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x71b9, gbc.sp());
        EXPECT(0x536c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0066
        gbc.setState(0x8d69, 0x7e6f, 0x860, 0x63e3, 0x662e, 0x699c, 0x0, 0x1);
        gbc.writeMem(0x8d69, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7e6f, gbc.sp());
        EXPECT(0x8d6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d69));
        EXPECT(0xe9, gbc.readMem(0x8d6a));
        // CB E9 0067
        gbc.setState(0xe2e3, 0xb0dc, 0x4930, 0x2296, 0x8c64, 0x232f, 0x1, 0x0);
        gbc.writeMem(0xe2e3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb0dc, gbc.sp());
        EXPECT(0xe2e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2e3));
        EXPECT(0xe9, gbc.readMem(0xe2e4));
        // CB E9 0068
        gbc.setState(0xa260, 0xa0f4, 0x9c00, 0x2341, 0x7f3b, 0x9a76, 0x0, 0x0);
        gbc.writeMem(0xa260, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa0f4, gbc.sp());
        EXPECT(0xa262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa260));
        EXPECT(0xe9, gbc.readMem(0xa261));
        // CB E9 0069
        gbc.setState(0x834, 0xf8ce, 0xa500, 0xedf5, 0xa9dd, 0x7823, 0x0, 0x1);
        gbc.writeMem(0x834, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf8ce, gbc.sp());
        EXPECT(0x836, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 006A
        gbc.setState(0xafd3, 0xb9f5, 0xa3b0, 0x47c9, 0xa52c, 0x4e9f, 0x0, 0x1);
        gbc.writeMem(0xafd3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb9f5, gbc.sp());
        EXPECT(0xafd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd3));
        EXPECT(0xe9, gbc.readMem(0xafd4));
        // CB E9 006B
        gbc.setState(0xe607, 0x3bc0, 0x7690, 0x79de, 0x4284, 0x426d, 0x1, 0x0);
        gbc.writeMem(0xe607, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3bc0, gbc.sp());
        EXPECT(0xe609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe607));
        EXPECT(0xe9, gbc.readMem(0xe608));
        // CB E9 006C
        gbc.setState(0xdff6, 0xb269, 0x9360, 0xb5aa, 0x8f7b, 0x748a, 0x1, 0x0);
        gbc.writeMem(0xdff6, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb269, gbc.sp());
        EXPECT(0xdff8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdff6));
        EXPECT(0xe9, gbc.readMem(0xdff7));
        // CB E9 006D
        gbc.setState(0xa423, 0x492a, 0x6200, 0x493b, 0xcf78, 0xffd0, 0x1, 0x1);
        gbc.writeMem(0xa423, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x492a, gbc.sp());
        EXPECT(0xa425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa423));
        EXPECT(0xe9, gbc.readMem(0xa424));
        // CB E9 006E
        gbc.setState(0xb8da, 0x81c8, 0xfb70, 0x621a, 0xef14, 0x533c, 0x1, 0x1);
        gbc.writeMem(0xb8da, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x81c8, gbc.sp());
        EXPECT(0xb8dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8da));
        EXPECT(0xe9, gbc.readMem(0xb8db));
        // CB E9 006F
        gbc.setState(0xa25c, 0x88a0, 0x5be0, 0xd208, 0xb7b4, 0x6275, 0x1, 0x1);
        gbc.writeMem(0xa25c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x88a0, gbc.sp());
        EXPECT(0xa25e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa25c));
        EXPECT(0xe9, gbc.readMem(0xa25d));
        // CB E9 0070
        gbc.setState(0x6164, 0x861a, 0xcde0, 0x7c4e, 0x394c, 0x27d2, 0x1, 0x1);
        gbc.writeMem(0x6164, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x861a, gbc.sp());
        EXPECT(0x6166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0071
        gbc.setState(0xc49f, 0x7eea, 0xeb70, 0xd06f, 0xddad, 0x19b8, 0x1, 0x0);
        gbc.writeMem(0xc49f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7eea, gbc.sp());
        EXPECT(0xc4a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc49f));
        EXPECT(0xe9, gbc.readMem(0xc4a0));
        // CB E9 0072
        gbc.setState(0x3ffa, 0xb725, 0x19e0, 0xe073, 0x7a7b, 0x895e, 0x0, 0x1);
        gbc.writeMem(0x3ffa, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb725, gbc.sp());
        EXPECT(0x3ffc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0073
        gbc.setState(0xafa5, 0x4c0c, 0xfd70, 0x2f15, 0xd524, 0xec1a, 0x0, 0x0);
        gbc.writeMem(0xafa5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4c0c, gbc.sp());
        EXPECT(0xafa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafa5));
        EXPECT(0xe9, gbc.readMem(0xafa6));
        // CB E9 0074
        gbc.setState(0xca69, 0x47f2, 0xdbf0, 0x2f96, 0x32f6, 0x5bb8, 0x0, 0x0);
        gbc.writeMem(0xca69, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x47f2, gbc.sp());
        EXPECT(0xca6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca69));
        EXPECT(0xe9, gbc.readMem(0xca6a));
        // CB E9 0075
        gbc.setState(0xffd, 0xdab0, 0xbc50, 0xdc72, 0x9f8, 0xbc1a, 0x0, 0x1);
        gbc.writeMem(0xffd, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xdab0, gbc.sp());
        EXPECT(0xfff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0076
        gbc.setState(0x783d, 0x21de, 0xf7b0, 0x5abd, 0x76dd, 0x4948, 0x0, 0x1);
        gbc.writeMem(0x783d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x21de, gbc.sp());
        EXPECT(0x783f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0077
        gbc.setState(0x4cb, 0xebc1, 0x5f30, 0xfead, 0xf19c, 0x3f8, 0x1, 0x1);
        gbc.writeMem(0x4cb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xebc1, gbc.sp());
        EXPECT(0x4cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0078
        gbc.setState(0x71f3, 0x9fe, 0x4370, 0xf844, 0x7542, 0xb0da, 0x0, 0x0);
        gbc.writeMem(0x71f3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9fe, gbc.sp());
        EXPECT(0x71f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0079
        gbc.setState(0x753e, 0xcf91, 0x9c20, 0xc798, 0x6dc, 0x3cd5, 0x1, 0x0);
        gbc.writeMem(0x753e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xcf91, gbc.sp());
        EXPECT(0x7540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 007A
        gbc.setState(0x941b, 0xfae5, 0xd780, 0xd366, 0xb475, 0x3366, 0x0, 0x1);
        gbc.writeMem(0x941b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xfae5, gbc.sp());
        EXPECT(0x941d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x941b));
        EXPECT(0xe9, gbc.readMem(0x941c));
        // CB E9 007B
        gbc.setState(0x2c42, 0xba21, 0x2e50, 0xf0cc, 0xefbf, 0xf79, 0x1, 0x0);
        gbc.writeMem(0x2c42, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xba21, gbc.sp());
        EXPECT(0x2c44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 007C
        gbc.setState(0xf2f, 0x1cde, 0x9d70, 0x90ac, 0x458, 0x248a, 0x1, 0x0);
        gbc.writeMem(0xf2f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1cde, gbc.sp());
        EXPECT(0xf31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 007D
        gbc.setState(0x1b95, 0x59a7, 0xf130, 0x864c, 0x385, 0xb1cd, 0x1, 0x0);
        gbc.writeMem(0x1b95, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x59a7, gbc.sp());
        EXPECT(0x1b97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 007E
        gbc.setState(0x7afa, 0x7e5d, 0x7f60, 0x413, 0xe034, 0x255b, 0x0, 0x0);
        gbc.writeMem(0x7afa, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7e5d, gbc.sp());
        EXPECT(0x7afc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 007F
        gbc.setState(0x3529, 0x156c, 0x2620, 0xb060, 0xc60c, 0x7bd, 0x0, 0x1);
        gbc.writeMem(0x3529, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x156c, gbc.sp());
        EXPECT(0x352b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0080
        gbc.setState(0xdd37, 0x7def, 0x5830, 0x1c3d, 0xe4d6, 0x4280, 0x0, 0x0);
        gbc.writeMem(0xdd37, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7def, gbc.sp());
        EXPECT(0xdd39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd37));
        EXPECT(0xe9, gbc.readMem(0xdd38));
        // CB E9 0081
        gbc.setState(0xcd62, 0x4197, 0xe810, 0x3e63, 0x4122, 0x4a0d, 0x1, 0x0);
        gbc.writeMem(0xcd62, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4197, gbc.sp());
        EXPECT(0xcd64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd62));
        EXPECT(0xe9, gbc.readMem(0xcd63));
        // CB E9 0082
        gbc.setState(0x17df, 0x4ff6, 0xba0, 0x197c, 0xf5e4, 0x37bd, 0x0, 0x1);
        gbc.writeMem(0x17df, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4ff6, gbc.sp());
        EXPECT(0x17e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0083
        gbc.setState(0x25c4, 0x728a, 0x6530, 0xe5c9, 0xc00e, 0x8ccc, 0x0, 0x1);
        gbc.writeMem(0x25c4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x728a, gbc.sp());
        EXPECT(0x25c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0084
        gbc.setState(0xe391, 0xc361, 0x2d0, 0x19bf, 0x7582, 0x2f58, 0x0, 0x1);
        gbc.writeMem(0xe391, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc361, gbc.sp());
        EXPECT(0xe393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe391));
        EXPECT(0xe9, gbc.readMem(0xe392));
        // CB E9 0085
        gbc.setState(0x4519, 0x8eb7, 0xaf60, 0x5e2a, 0x3d46, 0x7dc4, 0x0, 0x1);
        gbc.writeMem(0x4519, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8eb7, gbc.sp());
        EXPECT(0x451b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0086
        gbc.setState(0x108, 0xf99e, 0xb730, 0x2017, 0x3b6b, 0x6339, 0x1, 0x0);
        gbc.writeMem(0x108, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf99e, gbc.sp());
        EXPECT(0x10a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0087
        gbc.setState(0xe373, 0x5026, 0x7760, 0xa342, 0x9daa, 0xfd9b, 0x0, 0x0);
        gbc.writeMem(0xe373, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5026, gbc.sp());
        EXPECT(0xe375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe373));
        EXPECT(0xe9, gbc.readMem(0xe374));
        // CB E9 0088
        gbc.setState(0x499, 0x9c21, 0x3d80, 0x9101, 0x11e2, 0x20ec, 0x0, 0x1);
        gbc.writeMem(0x499, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9c21, gbc.sp());
        EXPECT(0x49b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0089
        gbc.setState(0x8170, 0x4af2, 0x5e70, 0x3bc2, 0x8310, 0x52e, 0x0, 0x0);
        gbc.writeMem(0x8170, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4af2, gbc.sp());
        EXPECT(0x8172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8170));
        EXPECT(0xe9, gbc.readMem(0x8171));
        // CB E9 008A
        gbc.setState(0xea1a, 0x3b81, 0xc110, 0x1d3c, 0x7fb1, 0x3fc4, 0x0, 0x1);
        gbc.writeMem(0xea1a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3b81, gbc.sp());
        EXPECT(0xea1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea1a));
        EXPECT(0xe9, gbc.readMem(0xea1b));
        // CB E9 008B
        gbc.setState(0x6152, 0x76ed, 0xd7b0, 0x23f6, 0x132d, 0xd051, 0x1, 0x0);
        gbc.writeMem(0x6152, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x76ed, gbc.sp());
        EXPECT(0x6154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 008C
        gbc.setState(0x42a0, 0x750b, 0x72e0, 0xfc45, 0xbc02, 0xde60, 0x0, 0x1);
        gbc.writeMem(0x42a0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x750b, gbc.sp());
        EXPECT(0x42a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 008D
        gbc.setState(0x3835, 0xcadd, 0x8310, 0x74ac, 0x33da, 0x246c, 0x1, 0x0);
        gbc.writeMem(0x3835, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xcadd, gbc.sp());
        EXPECT(0x3837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 008E
        gbc.setState(0xdf7d, 0x13c, 0xf910, 0xe5ed, 0x97be, 0x4bc9, 0x0, 0x1);
        gbc.writeMem(0xdf7d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x13c, gbc.sp());
        EXPECT(0xdf7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf7d));
        EXPECT(0xe9, gbc.readMem(0xdf7e));
        // CB E9 0090
        gbc.setState(0xced, 0xada, 0x6420, 0x2b1e, 0x6f6e, 0x69e1, 0x0, 0x1);
        gbc.writeMem(0xced, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xada, gbc.sp());
        EXPECT(0xcef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0092
        gbc.setState(0x2436, 0xa4fc, 0x8f0, 0x42a2, 0xb5cf, 0x2cfe, 0x0, 0x1);
        gbc.writeMem(0x2436, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa4fc, gbc.sp());
        EXPECT(0x2438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0093
        gbc.setState(0x9f6e, 0x413f, 0xadf0, 0x182a, 0x4614, 0xb4f9, 0x0, 0x0);
        gbc.writeMem(0x9f6e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x413f, gbc.sp());
        EXPECT(0x9f70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f6e));
        EXPECT(0xe9, gbc.readMem(0x9f6f));
        // CB E9 0094
        gbc.setState(0x43ff, 0x1c07, 0xf690, 0x73ca, 0xb752, 0x90b1, 0x1, 0x1);
        gbc.writeMem(0x43ff, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1c07, gbc.sp());
        EXPECT(0x4401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0095
        gbc.setState(0x79ba, 0xdc94, 0xfd50, 0x1c86, 0x10b8, 0x31ec, 0x0, 0x1);
        gbc.writeMem(0x79ba, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xdc94, gbc.sp());
        EXPECT(0x79bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0096
        gbc.setState(0x2a92, 0x989e, 0xf1b0, 0x6632, 0xf651, 0x2dc7, 0x1, 0x0);
        gbc.writeMem(0x2a92, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x989e, gbc.sp());
        EXPECT(0x2a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0097
        gbc.setState(0x213e, 0x1412, 0x8ef0, 0xd9c2, 0x1678, 0xeb5d, 0x1, 0x0);
        gbc.writeMem(0x213e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1412, gbc.sp());
        EXPECT(0x2140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0098
        gbc.setState(0xb66, 0xb863, 0x33e0, 0x1117, 0x91c6, 0x6397, 0x0, 0x0);
        gbc.writeMem(0xb66, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb863, gbc.sp());
        EXPECT(0xb68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0099
        gbc.setState(0x7668, 0xfc14, 0x7190, 0x68d1, 0x5ba3, 0x6017, 0x0, 0x1);
        gbc.writeMem(0x7668, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xfc14, gbc.sp());
        EXPECT(0x766a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 009B
        gbc.setState(0x3774, 0x170, 0xb790, 0xff79, 0x25e2, 0x6e3c, 0x0, 0x1);
        gbc.writeMem(0x3774, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x170, gbc.sp());
        EXPECT(0x3776, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 009C
        gbc.setState(0x5f9c, 0x4645, 0xb7c0, 0xdde3, 0x14e5, 0x5333, 0x0, 0x0);
        gbc.writeMem(0x5f9c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4645, gbc.sp());
        EXPECT(0x5f9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 009D
        gbc.setState(0x3bbe, 0xe101, 0x230, 0xa9f0, 0x762c, 0xe4f1, 0x0, 0x0);
        gbc.writeMem(0x3bbe, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe101, gbc.sp());
        EXPECT(0x3bc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 009E
        gbc.setState(0x57b8, 0xcb08, 0x2020, 0xe5ef, 0x7e2b, 0xcd71, 0x1, 0x1);
        gbc.writeMem(0x57b8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xcb08, gbc.sp());
        EXPECT(0x57ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 009F
        gbc.setState(0xccf9, 0xcf41, 0xb070, 0xf285, 0xd8c0, 0x44a1, 0x0, 0x0);
        gbc.writeMem(0xccf9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xcf41, gbc.sp());
        EXPECT(0xccfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccf9));
        EXPECT(0xe9, gbc.readMem(0xccfa));
        // CB E9 00A0
        gbc.setState(0x1f80, 0xc1c8, 0x6150, 0xe08b, 0xb47c, 0x7207, 0x0, 0x0);
        gbc.writeMem(0x1f80, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc1c8, gbc.sp());
        EXPECT(0x1f82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 00A1
        gbc.setState(0xc722, 0xebd5, 0xaa80, 0x8b95, 0xe2b, 0xad91, 0x1, 0x1);
        gbc.writeMem(0xc722, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xebd5, gbc.sp());
        EXPECT(0xc724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc722));
        EXPECT(0xe9, gbc.readMem(0xc723));
        // CB E9 00A2
        gbc.setState(0x96f2, 0xc88b, 0x1280, 0xa725, 0x9d92, 0x5392, 0x1, 0x0);
        gbc.writeMem(0x96f2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc88b, gbc.sp());
        EXPECT(0x96f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96f2));
        EXPECT(0xe9, gbc.readMem(0x96f3));
        // CB E9 00A3
        gbc.setState(0x4680, 0x3202, 0xf800, 0x519f, 0xc5d9, 0x790f, 0x1, 0x1);
        gbc.writeMem(0x4680, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3202, gbc.sp());
        EXPECT(0x4682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 00A4
        gbc.setState(0x4cfc, 0xc3e2, 0x7000, 0xf60c, 0xfe70, 0x7580, 0x1, 0x1);
        gbc.writeMem(0x4cfc, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc3e2, gbc.sp());
        EXPECT(0x4cfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 00A5
        gbc.setState(0xa109, 0x4f75, 0xc160, 0x55c2, 0x6910, 0xf827, 0x1, 0x1);
        gbc.writeMem(0xa109, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4f75, gbc.sp());
        EXPECT(0xa10b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa109));
        EXPECT(0xe9, gbc.readMem(0xa10a));
        // CB E9 00A6
        gbc.setState(0xe067, 0x600c, 0x7d20, 0x14ad, 0x2b59, 0xd04d, 0x1, 0x0);
        gbc.writeMem(0xe067, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x600c, gbc.sp());
        EXPECT(0xe069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe067));
        EXPECT(0xe9, gbc.readMem(0xe068));
        // CB E9 00A8
        gbc.setState(0x6b3f, 0x17d2, 0xed30, 0x38d9, 0x52cf, 0xa715, 0x0, 0x1);
        gbc.writeMem(0x6b3f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x17d2, gbc.sp());
        EXPECT(0x6b41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 00A9
        gbc.setState(0x7319, 0x21a5, 0x2bc0, 0x5cd3, 0x6d80, 0xcff6, 0x1, 0x0);
        gbc.writeMem(0x7319, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x21a5, gbc.sp());
        EXPECT(0x731b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 00AA
        gbc.setState(0xcc54, 0xb2c4, 0x9370, 0xf75b, 0x56b, 0xd1b6, 0x0, 0x1);
        gbc.writeMem(0xcc54, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb2c4, gbc.sp());
        EXPECT(0xcc56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc54));
        EXPECT(0xe9, gbc.readMem(0xcc55));
        // CB E9 00AB
        gbc.setState(0xe7f3, 0xdeef, 0x4f30, 0xf17c, 0x11f0, 0x1e51, 0x1, 0x0);
        gbc.writeMem(0xe7f3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xdeef, gbc.sp());
        EXPECT(0xe7f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7f3));
        EXPECT(0xe9, gbc.readMem(0xe7f4));
        // CB E9 00AC
        gbc.setState(0xcb4c, 0x3314, 0xd9e0, 0x2c49, 0x8f72, 0x7747, 0x0, 0x1);
        gbc.writeMem(0xcb4c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3314, gbc.sp());
        EXPECT(0xcb4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb4c));
        EXPECT(0xe9, gbc.readMem(0xcb4d));
        // CB E9 00AD
        gbc.setState(0x378e, 0xceb4, 0x90c0, 0x7fe3, 0x6037, 0x3863, 0x0, 0x0);
        gbc.writeMem(0x378e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xceb4, gbc.sp());
        EXPECT(0x3790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 00AE
        gbc.setState(0x4343, 0x53a0, 0xc7d0, 0x5b0a, 0x75ab, 0x9721, 0x1, 0x0);
        gbc.writeMem(0x4343, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x53a0, gbc.sp());
        EXPECT(0x4345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 00AF
        gbc.setState(0xe78, 0xaca8, 0x6700, 0xee21, 0xe5bf, 0x4f50, 0x0, 0x0);
        gbc.writeMem(0xe78, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xaca8, gbc.sp());
        EXPECT(0xe7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 00B0
        gbc.setState(0x9b86, 0x6504, 0x2b20, 0xfa2c, 0x1bd4, 0xace3, 0x0, 0x1);
        gbc.writeMem(0x9b86, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6504, gbc.sp());
        EXPECT(0x9b88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b86));
        EXPECT(0xe9, gbc.readMem(0x9b87));
        // CB E9 00B1
        gbc.setState(0xeb3f, 0x1364, 0x9500, 0x5471, 0x8fc2, 0xe00f, 0x0, 0x0);
        gbc.writeMem(0xeb3f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1364, gbc.sp());
        EXPECT(0xeb41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb3f));
        EXPECT(0xe9, gbc.readMem(0xeb40));
        // CB E9 00B2
        gbc.setState(0x216c, 0xa109, 0x8b40, 0x94b0, 0x2567, 0xca9f, 0x1, 0x1);
        gbc.writeMem(0x216c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa109, gbc.sp());
        EXPECT(0x216e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 00B3
        gbc.setState(0xc0e3, 0xa6bb, 0x70a0, 0x6278, 0x3fe6, 0x32a5, 0x1, 0x0);
        gbc.writeMem(0xc0e3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa6bb, gbc.sp());
        EXPECT(0xc0e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0e3));
        EXPECT(0xe9, gbc.readMem(0xc0e4));
        // CB E9 00B4
        gbc.setState(0xa5, 0xc435, 0xe2c0, 0xfbb4, 0x3778, 0xb97, 0x0, 0x0);
        gbc.writeMem(0xa5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc435, gbc.sp());
        EXPECT(0xa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 00B5
        gbc.setState(0x4857, 0x29bb, 0x25c0, 0x2a60, 0x3fff, 0xd789, 0x0, 0x1);
        gbc.writeMem(0x4857, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x29bb, gbc.sp());
        EXPECT(0x4859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 00B6
        gbc.setState(0x3f6a, 0x46a9, 0xd4c0, 0x41a9, 0x8643, 0x845a, 0x1, 0x0);
        gbc.writeMem(0x3f6a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x46a9, gbc.sp());
        EXPECT(0x3f6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 00B7
        gbc.setState(0x84bc, 0x6ea8, 0xe440, 0x7d6e, 0xdcd4, 0xa377, 0x0, 0x0);
        gbc.writeMem(0x84bc, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6ea8, gbc.sp());
        EXPECT(0x84be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84bc));
        EXPECT(0xe9, gbc.readMem(0x84bd));
        // CB E9 00B8
        gbc.setState(0x627f, 0x5381, 0x1590, 0x5fa3, 0xcb50, 0xa62f, 0x0, 0x0);
        gbc.writeMem(0x627f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5381, gbc.sp());
        EXPECT(0x6281, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 00B9
        gbc.setState(0xdd4c, 0xcd53, 0x6960, 0x5b08, 0x97a7, 0x4c1c, 0x1, 0x1);
        gbc.writeMem(0xdd4c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xcd53, gbc.sp());
        EXPECT(0xdd4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd4c));
        EXPECT(0xe9, gbc.readMem(0xdd4d));
        // CB E9 00BA
        gbc.setState(0xb0ec, 0xe07b, 0x3680, 0x58c6, 0x297b, 0x2db6, 0x1, 0x0);
        gbc.writeMem(0xb0ec, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe07b, gbc.sp());
        EXPECT(0xb0ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0ec));
        EXPECT(0xe9, gbc.readMem(0xb0ed));
        // CB E9 00BB
        gbc.setState(0x7c0f, 0x821d, 0xe890, 0xf38e, 0x1be9, 0xa907, 0x0, 0x0);
        gbc.writeMem(0x7c0f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x821d, gbc.sp());
        EXPECT(0x7c11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 00BD
        gbc.setState(0x9833, 0xfd48, 0x2210, 0x271c, 0x736d, 0x8379, 0x0, 0x0);
        gbc.writeMem(0x9833, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xfd48, gbc.sp());
        EXPECT(0x9835, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9833));
        EXPECT(0xe9, gbc.readMem(0x9834));
        // CB E9 00BE
        gbc.setState(0x77a2, 0x9b5, 0x3450, 0x6b92, 0xc4c5, 0x64bd, 0x0, 0x1);
        gbc.writeMem(0x77a2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9b5, gbc.sp());
        EXPECT(0x77a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 00BF
        gbc.setState(0x63f1, 0x3bab, 0x590, 0x7b18, 0x5b24, 0x217, 0x1, 0x1);
        gbc.writeMem(0x63f1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3bab, gbc.sp());
        EXPECT(0x63f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 00C1
        gbc.setState(0x30bf, 0x27bf, 0x5060, 0xbd7e, 0x9644, 0x975, 0x0, 0x0);
        gbc.writeMem(0x30bf, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x27bf, gbc.sp());
        EXPECT(0x30c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 00C2
        gbc.setState(0x8df4, 0xe740, 0x2690, 0xd4c0, 0x474, 0xad56, 0x1, 0x1);
        gbc.writeMem(0x8df4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe740, gbc.sp());
        EXPECT(0x8df6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8df4));
        EXPECT(0xe9, gbc.readMem(0x8df5));
        // CB E9 00C3
        gbc.setState(0xb236, 0xf648, 0xd40, 0x5f94, 0x177b, 0xd538, 0x0, 0x0);
        gbc.writeMem(0xb236, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf648, gbc.sp());
        EXPECT(0xb238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb236));
        EXPECT(0xe9, gbc.readMem(0xb237));
        // CB E9 00C4
        gbc.setState(0xcec5, 0xeef1, 0x5e80, 0xa6fb, 0xd212, 0x5511, 0x0, 0x0);
        gbc.writeMem(0xcec5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xeef1, gbc.sp());
        EXPECT(0xcec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcec5));
        EXPECT(0xe9, gbc.readMem(0xcec6));
        // CB E9 00C5
        gbc.setState(0x8390, 0x5830, 0x7800, 0x13e7, 0x48d, 0x4fe8, 0x0, 0x1);
        gbc.writeMem(0x8390, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5830, gbc.sp());
        EXPECT(0x8392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8390));
        EXPECT(0xe9, gbc.readMem(0x8391));
        // CB E9 00C6
        gbc.setState(0x72e3, 0x387c, 0xacc0, 0x84f4, 0x5fca, 0xabb9, 0x0, 0x1);
        gbc.writeMem(0x72e3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x387c, gbc.sp());
        EXPECT(0x72e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 00C7
        gbc.setState(0x7fd2, 0xe9e2, 0xf740, 0xc257, 0x838e, 0x60e0, 0x0, 0x1);
        gbc.writeMem(0x7fd2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe9e2, gbc.sp());
        EXPECT(0x7fd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 00C8
        gbc.setState(0x3da9, 0xf8d6, 0x60f0, 0xadc8, 0x77df, 0x2d96, 0x1, 0x0);
        gbc.writeMem(0x3da9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf8d6, gbc.sp());
        EXPECT(0x3dab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 00C9
        gbc.setState(0x52b9, 0x9f5, 0x3890, 0x1f7a, 0x6f66, 0xe1ca, 0x1, 0x0);
        gbc.writeMem(0x52b9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9f5, gbc.sp());
        EXPECT(0x52bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 00CA
        gbc.setState(0xd3ad, 0x108d, 0x2350, 0x3cb8, 0xccd4, 0xbb7e, 0x1, 0x1);
        gbc.writeMem(0xd3ad, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x108d, gbc.sp());
        EXPECT(0xd3af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ad));
        EXPECT(0xe9, gbc.readMem(0xd3ae));
        // CB E9 00CB
        gbc.setState(0x98f8, 0x4f97, 0xdbe0, 0xb128, 0x86d3, 0xb6f9, 0x1, 0x0);
        gbc.writeMem(0x98f8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4f97, gbc.sp());
        EXPECT(0x98fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f8));
        EXPECT(0xe9, gbc.readMem(0x98f9));
        // CB E9 00CC
        gbc.setState(0xd825, 0xd207, 0xaec0, 0x76fe, 0x8a3e, 0x4bab, 0x0, 0x1);
        gbc.writeMem(0xd825, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd207, gbc.sp());
        EXPECT(0xd827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd825));
        EXPECT(0xe9, gbc.readMem(0xd826));
        // CB E9 00CD
        gbc.setState(0x23ce, 0xacd5, 0x5e70, 0xc72c, 0x68bc, 0xe2d2, 0x1, 0x0);
        gbc.writeMem(0x23ce, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xacd5, gbc.sp());
        EXPECT(0x23d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 00CE
        gbc.setState(0xe01a, 0x4ee6, 0xe080, 0x32a, 0x531d, 0x71a7, 0x1, 0x0);
        gbc.writeMem(0xe01a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4ee6, gbc.sp());
        EXPECT(0xe01c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe01a));
        EXPECT(0xe9, gbc.readMem(0xe01b));
        // CB E9 00CF
        gbc.setState(0x6c54, 0x59e9, 0xba10, 0xdfb2, 0x96eb, 0xec52, 0x1, 0x1);
        gbc.writeMem(0x6c54, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x59e9, gbc.sp());
        EXPECT(0x6c56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 00D0
        gbc.setState(0xe1a0, 0x9b53, 0x51b0, 0xe949, 0xb23, 0x8ae4, 0x0, 0x0);
        gbc.writeMem(0xe1a0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9b53, gbc.sp());
        EXPECT(0xe1a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1a0));
        EXPECT(0xe9, gbc.readMem(0xe1a1));
        // CB E9 00D1
        gbc.setState(0x841c, 0x4faf, 0x4d40, 0x733, 0x2277, 0x1552, 0x0, 0x1);
        gbc.writeMem(0x841c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4faf, gbc.sp());
        EXPECT(0x841e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x841c));
        EXPECT(0xe9, gbc.readMem(0x841d));
        // CB E9 00D2
        gbc.setState(0x7d01, 0x787c, 0xf7f0, 0xfd5c, 0x46d6, 0x1bd1, 0x0, 0x1);
        gbc.writeMem(0x7d01, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x787c, gbc.sp());
        EXPECT(0x7d03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 00D3
        gbc.setState(0x7103, 0x737f, 0xc350, 0x6d41, 0x4506, 0xb321, 0x1, 0x1);
        gbc.writeMem(0x7103, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x737f, gbc.sp());
        EXPECT(0x7105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 00D4
        gbc.setState(0x2392, 0xd209, 0xb8b0, 0x27ae, 0x88bb, 0x8e46, 0x0, 0x1);
        gbc.writeMem(0x2392, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd209, gbc.sp());
        EXPECT(0x2394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 00D5
        gbc.setState(0xeef8, 0xa22b, 0xcde0, 0xdddb, 0xd749, 0xffe3, 0x0, 0x1);
        gbc.writeMem(0xeef8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa22b, gbc.sp());
        EXPECT(0xeefa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeef8));
        EXPECT(0xe9, gbc.readMem(0xeef9));
        // CB E9 00D6
        gbc.setState(0xd361, 0x16d4, 0x8310, 0xbc1e, 0x2d2e, 0x2a85, 0x0, 0x1);
        gbc.writeMem(0xd361, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x16d4, gbc.sp());
        EXPECT(0xd363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd361));
        EXPECT(0xe9, gbc.readMem(0xd362));
        // CB E9 00D7
        gbc.setState(0x54bc, 0x14ec, 0x7530, 0x31ae, 0xe296, 0x6618, 0x0, 0x0);
        gbc.writeMem(0x54bc, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x14ec, gbc.sp());
        EXPECT(0x54be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 00D8
        gbc.setState(0x1d6b, 0xf44, 0xa690, 0x16f7, 0xdbd1, 0xb124, 0x0, 0x0);
        gbc.writeMem(0x1d6b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf44, gbc.sp());
        EXPECT(0x1d6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 00D9
        gbc.setState(0xeed5, 0x4c98, 0x5bd0, 0x7fc4, 0xcda5, 0x11f4, 0x1, 0x0);
        gbc.writeMem(0xeed5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4c98, gbc.sp());
        EXPECT(0xeed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeed5));
        EXPECT(0xe9, gbc.readMem(0xeed6));
        // CB E9 00DA
        gbc.setState(0x7f6f, 0x20f2, 0x5f80, 0x96e, 0x8b05, 0x26d4, 0x1, 0x1);
        gbc.writeMem(0x7f6f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x20f2, gbc.sp());
        EXPECT(0x7f71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 00DB
        gbc.setState(0xb1b, 0xe04a, 0x5130, 0x570e, 0x2a60, 0x7f5d, 0x1, 0x0);
        gbc.writeMem(0xb1b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe04a, gbc.sp());
        EXPECT(0xb1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 00DC
        gbc.setState(0x9e92, 0x63b9, 0xf360, 0x8582, 0xb043, 0xbd58, 0x0, 0x0);
        gbc.writeMem(0x9e92, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x63b9, gbc.sp());
        EXPECT(0x9e94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e92));
        EXPECT(0xe9, gbc.readMem(0x9e93));
        // CB E9 00DD
        gbc.setState(0x26de, 0x41de, 0x38b0, 0x9383, 0xe9dd, 0x11b9, 0x0, 0x0);
        gbc.writeMem(0x26de, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x41de, gbc.sp());
        EXPECT(0x26e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 00DE
        gbc.setState(0x29e1, 0x8c71, 0x6400, 0x2779, 0x6dc9, 0x8253, 0x1, 0x0);
        gbc.writeMem(0x29e1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8c71, gbc.sp());
        EXPECT(0x29e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 00DF
        gbc.setState(0x3839, 0x248b, 0x2ce0, 0x52b4, 0x65e2, 0x1ff1, 0x1, 0x1);
        gbc.writeMem(0x3839, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x248b, gbc.sp());
        EXPECT(0x383b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 00E0
        gbc.setState(0x5524, 0xc482, 0x5d50, 0x1206, 0xdbad, 0x2ad8, 0x1, 0x1);
        gbc.writeMem(0x5524, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc482, gbc.sp());
        EXPECT(0x5526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 00E1
        gbc.setState(0x2def, 0x5db2, 0x2bd0, 0x9d86, 0x33fd, 0x8952, 0x0, 0x1);
        gbc.writeMem(0x2def, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5db2, gbc.sp());
        EXPECT(0x2df1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 00E2
        gbc.setState(0x221d, 0xb6b4, 0x1630, 0xc223, 0x289, 0xe6c8, 0x0, 0x1);
        gbc.writeMem(0x221d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb6b4, gbc.sp());
        EXPECT(0x221f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 00E3
        gbc.setState(0x6d0c, 0x81ba, 0x42f0, 0x3f01, 0x53a, 0xdf39, 0x1, 0x0);
        gbc.writeMem(0x6d0c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x81ba, gbc.sp());
        EXPECT(0x6d0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 00E4
        gbc.setState(0x9c03, 0xb00f, 0xb340, 0x6359, 0x5cd5, 0xaa8, 0x1, 0x0);
        gbc.writeMem(0x9c03, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb00f, gbc.sp());
        EXPECT(0x9c05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c03));
        EXPECT(0xe9, gbc.readMem(0x9c04));
        // CB E9 00E5
        gbc.setState(0xdf72, 0xc522, 0xa4f0, 0x6208, 0xa6a0, 0x2578, 0x1, 0x1);
        gbc.writeMem(0xdf72, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc522, gbc.sp());
        EXPECT(0xdf74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf72));
        EXPECT(0xe9, gbc.readMem(0xdf73));
        // CB E9 00E6
        gbc.setState(0xaeb8, 0x902b, 0xb270, 0x2460, 0x63e5, 0x2adc, 0x1, 0x1);
        gbc.writeMem(0xaeb8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x902b, gbc.sp());
        EXPECT(0xaeba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeb8));
        EXPECT(0xe9, gbc.readMem(0xaeb9));
        // CB E9 00E7
        gbc.setState(0x63df, 0x506f, 0x2dd0, 0xe579, 0x723f, 0xf9ce, 0x0, 0x1);
        gbc.writeMem(0x63df, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x506f, gbc.sp());
        EXPECT(0x63e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 00E8
        gbc.setState(0x6af2, 0x3da7, 0x8b60, 0x313d, 0x9acd, 0xf484, 0x1, 0x1);
        gbc.writeMem(0x6af2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3da7, gbc.sp());
        EXPECT(0x6af4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 00E9
        gbc.setState(0x9d26, 0x9a77, 0x71f0, 0x72e, 0xb6ed, 0x584e, 0x0, 0x0);
        gbc.writeMem(0x9d26, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9a77, gbc.sp());
        EXPECT(0x9d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d26));
        EXPECT(0xe9, gbc.readMem(0x9d27));
        // CB E9 00EA
        gbc.setState(0xce8a, 0xaab9, 0x2e20, 0xb27f, 0xc471, 0xbcb4, 0x0, 0x0);
        gbc.writeMem(0xce8a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xaab9, gbc.sp());
        EXPECT(0xce8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce8a));
        EXPECT(0xe9, gbc.readMem(0xce8b));
        // CB E9 00EC
        gbc.setState(0xb131, 0x6b34, 0x9510, 0x5596, 0x93f6, 0xa06f, 0x0, 0x0);
        gbc.writeMem(0xb131, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6b34, gbc.sp());
        EXPECT(0xb133, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb131));
        EXPECT(0xe9, gbc.readMem(0xb132));
        // CB E9 00ED
        gbc.setState(0x8403, 0xf71c, 0xeae0, 0xc1dc, 0xc010, 0x89f9, 0x1, 0x1);
        gbc.writeMem(0x8403, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf71c, gbc.sp());
        EXPECT(0x8405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8403));
        EXPECT(0xe9, gbc.readMem(0x8404));
        // CB E9 00EE
        gbc.setState(0x6b, 0x3c26, 0x520, 0x4231, 0x812a, 0xe9d7, 0x0, 0x1);
        gbc.writeMem(0x6b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3c26, gbc.sp());
        EXPECT(0x6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 00EF
        gbc.setState(0xabca, 0x6e08, 0x36c0, 0x98a2, 0x8749, 0x17ee, 0x1, 0x0);
        gbc.writeMem(0xabca, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6e08, gbc.sp());
        EXPECT(0xabcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabca));
        EXPECT(0xe9, gbc.readMem(0xabcb));
        // CB E9 00F0
        gbc.setState(0x793, 0x447b, 0x81c0, 0x21c, 0xb1b1, 0xdfa9, 0x1, 0x1);
        gbc.writeMem(0x793, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x447b, gbc.sp());
        EXPECT(0x795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 00F1
        gbc.setState(0xe62b, 0x8fa2, 0xb1b0, 0xfdea, 0x3a90, 0xf067, 0x1, 0x0);
        gbc.writeMem(0xe62b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8fa2, gbc.sp());
        EXPECT(0xe62d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe62b));
        EXPECT(0xe9, gbc.readMem(0xe62c));
        // CB E9 00F2
        gbc.setState(0x9f74, 0xe2cb, 0x4be0, 0x3b72, 0xb94a, 0xf96a, 0x0, 0x1);
        gbc.writeMem(0x9f74, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe2cb, gbc.sp());
        EXPECT(0x9f76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f74));
        EXPECT(0xe9, gbc.readMem(0x9f75));
        // CB E9 00F3
        gbc.setState(0x24c, 0xfa86, 0x69e0, 0xe170, 0x387e, 0x22e2, 0x1, 0x0);
        gbc.writeMem(0x24c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xfa86, gbc.sp());
        EXPECT(0x24e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 00F4
        gbc.setState(0x5ec2, 0xa295, 0x7f00, 0xdc68, 0xd66c, 0x74f, 0x1, 0x0);
        gbc.writeMem(0x5ec2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa295, gbc.sp());
        EXPECT(0x5ec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 00F5
        gbc.setState(0xdcc0, 0x305, 0xb590, 0xad89, 0x19d9, 0xeea5, 0x0, 0x0);
        gbc.writeMem(0xdcc0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x305, gbc.sp());
        EXPECT(0xdcc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcc0));
        EXPECT(0xe9, gbc.readMem(0xdcc1));
        // CB E9 00F6
        gbc.setState(0x1d, 0x4793, 0xb650, 0x533c, 0xe700, 0xf69e, 0x0, 0x0);
        gbc.writeMem(0x1d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4793, gbc.sp());
        EXPECT(0x1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 00F8
        gbc.setState(0x61ec, 0x4fb3, 0x9a60, 0x47db, 0xcb40, 0xbd92, 0x1, 0x1);
        gbc.writeMem(0x61ec, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4fb3, gbc.sp());
        EXPECT(0x61ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 00F9
        gbc.setState(0x7576, 0x4e80, 0x2b10, 0xbcdc, 0x4be9, 0xaa65, 0x1, 0x0);
        gbc.writeMem(0x7576, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4e80, gbc.sp());
        EXPECT(0x7578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 00FA
        gbc.setState(0x2587, 0x925c, 0x8da0, 0x778a, 0xbb6e, 0x32a7, 0x1, 0x1);
        gbc.writeMem(0x2587, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x925c, gbc.sp());
        EXPECT(0x2589, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 00FB
        gbc.setState(0x6896, 0xbfa2, 0x99b0, 0xc48d, 0x8e94, 0x8e8, 0x1, 0x0);
        gbc.writeMem(0x6896, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xbfa2, gbc.sp());
        EXPECT(0x6898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 00FC
        gbc.setState(0x49f5, 0xf4d1, 0x9170, 0xa963, 0x5591, 0xd557, 0x1, 0x1);
        gbc.writeMem(0x49f5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf4d1, gbc.sp());
        EXPECT(0x49f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 00FD
        gbc.setState(0x5a3d, 0xf03, 0x4a80, 0x5f17, 0xf36f, 0x9150, 0x0, 0x1);
        gbc.writeMem(0x5a3d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf03, gbc.sp());
        EXPECT(0x5a3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 00FE
        gbc.setState(0xc0a5, 0x6d46, 0xeab0, 0x4ba3, 0x9273, 0x42d8, 0x1, 0x1);
        gbc.writeMem(0xc0a5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6d46, gbc.sp());
        EXPECT(0xc0a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0a5));
        EXPECT(0xe9, gbc.readMem(0xc0a6));
        // CB E9 00FF
        gbc.setState(0x195b, 0x25ee, 0x3290, 0x755f, 0x8998, 0x5485, 0x1, 0x0);
        gbc.writeMem(0x195b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x25ee, gbc.sp());
        EXPECT(0x195d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0101
        gbc.setState(0x6373, 0x845, 0xa9d0, 0xd4da, 0x7bc2, 0x71b9, 0x0, 0x0);
        gbc.writeMem(0x6373, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x845, gbc.sp());
        EXPECT(0x6375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0102
        gbc.setState(0x8422, 0x8f1, 0x3500, 0xacdb, 0xb6ce, 0x47dc, 0x0, 0x0);
        gbc.writeMem(0x8422, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8f1, gbc.sp());
        EXPECT(0x8424, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8422));
        EXPECT(0xe9, gbc.readMem(0x8423));
        // CB E9 0103
        gbc.setState(0x96c0, 0x197d, 0x5cb0, 0x821d, 0xc909, 0xc91f, 0x0, 0x0);
        gbc.writeMem(0x96c0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x197d, gbc.sp());
        EXPECT(0x96c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96c0));
        EXPECT(0xe9, gbc.readMem(0x96c1));
        // CB E9 0104
        gbc.setState(0x302a, 0x5542, 0x3780, 0xccae, 0xdfd1, 0x739b, 0x1, 0x1);
        gbc.writeMem(0x302a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5542, gbc.sp());
        EXPECT(0x302c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0105
        gbc.setState(0x8b10, 0x2b1a, 0x5ee0, 0xe7a1, 0xbbad, 0x98ea, 0x1, 0x1);
        gbc.writeMem(0x8b10, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2b1a, gbc.sp());
        EXPECT(0x8b12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b10));
        EXPECT(0xe9, gbc.readMem(0x8b11));
        // CB E9 0106
        gbc.setState(0x5ccb, 0xdd5c, 0x86b0, 0x27d5, 0xe67b, 0x1b92, 0x0, 0x1);
        gbc.writeMem(0x5ccb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xdd5c, gbc.sp());
        EXPECT(0x5ccd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0107
        gbc.setState(0xb9c9, 0x6c5e, 0xcad0, 0x6a9d, 0x2ace, 0x4afc, 0x0, 0x0);
        gbc.writeMem(0xb9c9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6c5e, gbc.sp());
        EXPECT(0xb9cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9c9));
        EXPECT(0xe9, gbc.readMem(0xb9ca));
        // CB E9 0108
        gbc.setState(0x131, 0x93be, 0x4260, 0xa62, 0xb6, 0xa6d2, 0x1, 0x1);
        gbc.writeMem(0x131, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x93be, gbc.sp());
        EXPECT(0x133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0109
        gbc.setState(0xcb77, 0x5b6b, 0x6dd0, 0x4b2e, 0xb982, 0x5772, 0x0, 0x0);
        gbc.writeMem(0xcb77, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5b6b, gbc.sp());
        EXPECT(0xcb79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb77));
        EXPECT(0xe9, gbc.readMem(0xcb78));
        // CB E9 010A
        gbc.setState(0xe35d, 0x62ae, 0x4600, 0x3d68, 0x5c53, 0x6741, 0x1, 0x0);
        gbc.writeMem(0xe35d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x62ae, gbc.sp());
        EXPECT(0xe35f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe35d));
        EXPECT(0xe9, gbc.readMem(0xe35e));
        // CB E9 010B
        gbc.setState(0xb69f, 0xac74, 0x2c20, 0x30ea, 0xf377, 0xbf96, 0x0, 0x0);
        gbc.writeMem(0xb69f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xac74, gbc.sp());
        EXPECT(0xb6a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb69f));
        EXPECT(0xe9, gbc.readMem(0xb6a0));
        // CB E9 010C
        gbc.setState(0x9c6f, 0xf305, 0x1940, 0xd04b, 0x190, 0x72d5, 0x0, 0x1);
        gbc.writeMem(0x9c6f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf305, gbc.sp());
        EXPECT(0x9c71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c6f));
        EXPECT(0xe9, gbc.readMem(0x9c70));
        // CB E9 010D
        gbc.setState(0x4e6a, 0x391e, 0xe390, 0x427e, 0xe28e, 0x88dd, 0x0, 0x0);
        gbc.writeMem(0x4e6a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x391e, gbc.sp());
        EXPECT(0x4e6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 010E
        gbc.setState(0x880f, 0x2d9b, 0x3c30, 0x8409, 0xcc82, 0x83, 0x0, 0x1);
        gbc.writeMem(0x880f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2d9b, gbc.sp());
        EXPECT(0x8811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x880f));
        EXPECT(0xe9, gbc.readMem(0x8810));
        // CB E9 010F
        gbc.setState(0x71cf, 0xbdb5, 0x9880, 0x4de6, 0x5dce, 0x6adb, 0x0, 0x0);
        gbc.writeMem(0x71cf, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xbdb5, gbc.sp());
        EXPECT(0x71d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0110
        gbc.setState(0x5cac, 0xc514, 0x1220, 0x18b, 0x6298, 0xa7c4, 0x1, 0x1);
        gbc.writeMem(0x5cac, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc514, gbc.sp());
        EXPECT(0x5cae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0111
        gbc.setState(0xd17a, 0x5489, 0xfa30, 0xc49e, 0xa3de, 0x54f5, 0x1, 0x0);
        gbc.writeMem(0xd17a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5489, gbc.sp());
        EXPECT(0xd17c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd17a));
        EXPECT(0xe9, gbc.readMem(0xd17b));
        // CB E9 0112
        gbc.setState(0x83f7, 0x3e4c, 0xa1b0, 0x62d3, 0x6f4c, 0x7ef6, 0x0, 0x0);
        gbc.writeMem(0x83f7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3e4c, gbc.sp());
        EXPECT(0x83f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83f7));
        EXPECT(0xe9, gbc.readMem(0x83f8));
        // CB E9 0113
        gbc.setState(0x9f89, 0x4fd2, 0x7b60, 0xaff, 0x31d4, 0x212a, 0x1, 0x0);
        gbc.writeMem(0x9f89, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4fd2, gbc.sp());
        EXPECT(0x9f8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f89));
        EXPECT(0xe9, gbc.readMem(0x9f8a));
        // CB E9 0114
        gbc.setState(0x7fc9, 0x408, 0x2000, 0x747c, 0x6993, 0x45e2, 0x1, 0x0);
        gbc.writeMem(0x7fc9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x408, gbc.sp());
        EXPECT(0x7fcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0116
        gbc.setState(0xcbc2, 0x4b2d, 0xdea0, 0xeb26, 0x7290, 0xa33a, 0x1, 0x1);
        gbc.writeMem(0xcbc2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4b2d, gbc.sp());
        EXPECT(0xcbc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbc2));
        EXPECT(0xe9, gbc.readMem(0xcbc3));
        // CB E9 0117
        gbc.setState(0x1cea, 0xee2b, 0xf240, 0x6e31, 0x112, 0xba8c, 0x1, 0x0);
        gbc.writeMem(0x1cea, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xee2b, gbc.sp());
        EXPECT(0x1cec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0118
        gbc.setState(0xd235, 0xf68c, 0xcfd0, 0xd309, 0xa9d2, 0xa92b, 0x1, 0x0);
        gbc.writeMem(0xd235, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf68c, gbc.sp());
        EXPECT(0xd237, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd235));
        EXPECT(0xe9, gbc.readMem(0xd236));
        // CB E9 0119
        gbc.setState(0x6d79, 0x2c58, 0xaac0, 0xb8f4, 0x60ff, 0x307f, 0x1, 0x0);
        gbc.writeMem(0x6d79, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2c58, gbc.sp());
        EXPECT(0x6d7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 011A
        gbc.setState(0x253, 0xbed8, 0x39e0, 0xd111, 0xf327, 0x259c, 0x0, 0x1);
        gbc.writeMem(0x253, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xbed8, gbc.sp());
        EXPECT(0x255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 011B
        gbc.setState(0xc022, 0x460f, 0x2f90, 0xcd6d, 0x30b3, 0xb3b8, 0x0, 0x0);
        gbc.writeMem(0xc022, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x460f, gbc.sp());
        EXPECT(0xc024, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc022));
        EXPECT(0xe9, gbc.readMem(0xc023));
        // CB E9 011C
        gbc.setState(0xa7f9, 0x487e, 0xfca0, 0x26d9, 0x9132, 0x4136, 0x1, 0x0);
        gbc.writeMem(0xa7f9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x487e, gbc.sp());
        EXPECT(0xa7fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f9));
        EXPECT(0xe9, gbc.readMem(0xa7fa));
        // CB E9 011D
        gbc.setState(0xad2b, 0xd103, 0x2240, 0xc563, 0xbacb, 0x34, 0x1, 0x0);
        gbc.writeMem(0xad2b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd103, gbc.sp());
        EXPECT(0xad2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad2b));
        EXPECT(0xe9, gbc.readMem(0xad2c));
        // CB E9 011E
        gbc.setState(0x9f01, 0x6f6f, 0x3160, 0xb395, 0x2d15, 0x3ef7, 0x1, 0x0);
        gbc.writeMem(0x9f01, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6f6f, gbc.sp());
        EXPECT(0x9f03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f01));
        EXPECT(0xe9, gbc.readMem(0x9f02));
        // CB E9 011F
        gbc.setState(0x3b3e, 0x4061, 0xc600, 0x45d0, 0xd12c, 0x2606, 0x1, 0x0);
        gbc.writeMem(0x3b3e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4061, gbc.sp());
        EXPECT(0x3b40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0120
        gbc.setState(0x5298, 0x3f1f, 0x2c0, 0x92c7, 0x763b, 0xd636, 0x1, 0x0);
        gbc.writeMem(0x5298, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3f1f, gbc.sp());
        EXPECT(0x529a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0121
        gbc.setState(0xea8a, 0xd82f, 0x8be0, 0x62d3, 0x3502, 0x335e, 0x0, 0x0);
        gbc.writeMem(0xea8a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd82f, gbc.sp());
        EXPECT(0xea8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea8a));
        EXPECT(0xe9, gbc.readMem(0xea8b));
        // CB E9 0122
        gbc.setState(0xa3ed, 0xd616, 0x1580, 0x8cab, 0xe8ed, 0x937, 0x1, 0x0);
        gbc.writeMem(0xa3ed, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd616, gbc.sp());
        EXPECT(0xa3ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ed));
        EXPECT(0xe9, gbc.readMem(0xa3ee));
        // CB E9 0123
        gbc.setState(0x1b60, 0xf68d, 0x280, 0xa41e, 0xca8c, 0xdc4e, 0x0, 0x0);
        gbc.writeMem(0x1b60, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf68d, gbc.sp());
        EXPECT(0x1b62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0124
        gbc.setState(0x6e71, 0x3247, 0x5230, 0x1cdf, 0xa3a2, 0x4ee1, 0x0, 0x0);
        gbc.writeMem(0x6e71, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3247, gbc.sp());
        EXPECT(0x6e73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0125
        gbc.setState(0xbe95, 0x1c3c, 0xa6f0, 0x768, 0xd5b9, 0x8630, 0x1, 0x1);
        gbc.writeMem(0xbe95, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1c3c, gbc.sp());
        EXPECT(0xbe97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe95));
        EXPECT(0xe9, gbc.readMem(0xbe96));
        // CB E9 0126
        gbc.setState(0x12e3, 0xb573, 0x4f0, 0x45b6, 0x9a22, 0x3253, 0x0, 0x1);
        gbc.writeMem(0x12e3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb573, gbc.sp());
        EXPECT(0x12e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0127
        gbc.setState(0x515a, 0x253a, 0xd650, 0xa0d3, 0x403, 0xfcaa, 0x1, 0x0);
        gbc.writeMem(0x515a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x253a, gbc.sp());
        EXPECT(0x515c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0128
        gbc.setState(0x50b3, 0xcb7d, 0x1750, 0xb10a, 0xe538, 0xf94d, 0x1, 0x0);
        gbc.writeMem(0x50b3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xcb7d, gbc.sp());
        EXPECT(0x50b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0129
        gbc.setState(0xafc6, 0x25fc, 0xdd40, 0x2908, 0x6f5f, 0x4cda, 0x1, 0x0);
        gbc.writeMem(0xafc6, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x25fc, gbc.sp());
        EXPECT(0xafc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc6));
        EXPECT(0xe9, gbc.readMem(0xafc7));
        // CB E9 012B
        gbc.setState(0x5039, 0x3137, 0xc890, 0xe7fb, 0x6baa, 0xb9e0, 0x1, 0x1);
        gbc.writeMem(0x5039, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3137, gbc.sp());
        EXPECT(0x503b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 012C
        gbc.setState(0x85bd, 0x4da3, 0x48c0, 0x378a, 0xf0cf, 0x1d5f, 0x1, 0x1);
        gbc.writeMem(0x85bd, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4da3, gbc.sp());
        EXPECT(0x85bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85bd));
        EXPECT(0xe9, gbc.readMem(0x85be));
        // CB E9 012D
        gbc.setState(0x9e33, 0xa49b, 0x9670, 0x5f56, 0x530b, 0x22ce, 0x1, 0x0);
        gbc.writeMem(0x9e33, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa49b, gbc.sp());
        EXPECT(0x9e35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e33));
        EXPECT(0xe9, gbc.readMem(0x9e34));
        // CB E9 012E
        gbc.setState(0x4d5b, 0x4e4d, 0x9fd0, 0xccaa, 0xdd09, 0xb5d5, 0x0, 0x0);
        gbc.writeMem(0x4d5b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4e4d, gbc.sp());
        EXPECT(0x4d5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 012F
        gbc.setState(0x7231, 0x8fe8, 0x4860, 0xd0dc, 0xa8b3, 0x4bb4, 0x1, 0x0);
        gbc.writeMem(0x7231, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8fe8, gbc.sp());
        EXPECT(0x7233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0130
        gbc.setState(0xd478, 0x9c19, 0x6e80, 0x384, 0xfe5f, 0x2fd4, 0x1, 0x0);
        gbc.writeMem(0xd478, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9c19, gbc.sp());
        EXPECT(0xd47a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd478));
        EXPECT(0xe9, gbc.readMem(0xd479));
        // CB E9 0131
        gbc.setState(0xde58, 0x56a1, 0xbd0, 0x9420, 0x537a, 0xad31, 0x1, 0x0);
        gbc.writeMem(0xde58, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x56a1, gbc.sp());
        EXPECT(0xde5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde58));
        EXPECT(0xe9, gbc.readMem(0xde59));
        // CB E9 0132
        gbc.setState(0xedc8, 0x87c2, 0x1120, 0x4f62, 0x5127, 0x66cb, 0x0, 0x1);
        gbc.writeMem(0xedc8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x87c2, gbc.sp());
        EXPECT(0xedca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedc8));
        EXPECT(0xe9, gbc.readMem(0xedc9));
        // CB E9 0133
        gbc.setState(0xd746, 0xcc7f, 0x91d0, 0xa047, 0x974a, 0x8161, 0x1, 0x0);
        gbc.writeMem(0xd746, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xcc7f, gbc.sp());
        EXPECT(0xd748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd746));
        EXPECT(0xe9, gbc.readMem(0xd747));
        // CB E9 0134
        gbc.setState(0x9cb7, 0xc041, 0xae60, 0x139e, 0xa549, 0x98de, 0x0, 0x0);
        gbc.writeMem(0x9cb7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc041, gbc.sp());
        EXPECT(0x9cb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cb7));
        EXPECT(0xe9, gbc.readMem(0x9cb8));
        // CB E9 0135
        gbc.setState(0xcfa3, 0x4809, 0x120, 0x1311, 0xcc9d, 0x36e1, 0x1, 0x1);
        gbc.writeMem(0xcfa3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4809, gbc.sp());
        EXPECT(0xcfa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfa3));
        EXPECT(0xe9, gbc.readMem(0xcfa4));
        // CB E9 0136
        gbc.setState(0xc8ce, 0xb282, 0x440, 0x8f15, 0x5ecd, 0xcb99, 0x1, 0x0);
        gbc.writeMem(0xc8ce, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb282, gbc.sp());
        EXPECT(0xc8d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8ce));
        EXPECT(0xe9, gbc.readMem(0xc8cf));
        // CB E9 0137
        gbc.setState(0xbed2, 0xf654, 0xf800, 0x7474, 0xa8c2, 0xd1a2, 0x0, 0x0);
        gbc.writeMem(0xbed2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf654, gbc.sp());
        EXPECT(0xbed4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbed2));
        EXPECT(0xe9, gbc.readMem(0xbed3));
        // CB E9 0138
        gbc.setState(0xa7fc, 0xd9c8, 0x7550, 0x11e5, 0x401, 0x2631, 0x0, 0x1);
        gbc.writeMem(0xa7fc, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd9c8, gbc.sp());
        EXPECT(0xa7fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7fc));
        EXPECT(0xe9, gbc.readMem(0xa7fd));
        // CB E9 0139
        gbc.setState(0xd0ac, 0xf0a2, 0x7110, 0xd7be, 0xe169, 0x280a, 0x1, 0x0);
        gbc.writeMem(0xd0ac, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf0a2, gbc.sp());
        EXPECT(0xd0ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0ac));
        EXPECT(0xe9, gbc.readMem(0xd0ad));
        // CB E9 013A
        gbc.setState(0x1084, 0xfa86, 0xe640, 0x83dd, 0x197d, 0x12c1, 0x0, 0x1);
        gbc.writeMem(0x1084, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xfa86, gbc.sp());
        EXPECT(0x1086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 013B
        gbc.setState(0x15a7, 0x2b53, 0x6730, 0x1205, 0x5a28, 0xca62, 0x1, 0x0);
        gbc.writeMem(0x15a7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2b53, gbc.sp());
        EXPECT(0x15a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 013C
        gbc.setState(0x92b8, 0x25e2, 0x7640, 0x781f, 0x6ab0, 0x88ab, 0x1, 0x0);
        gbc.writeMem(0x92b8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x25e2, gbc.sp());
        EXPECT(0x92ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92b8));
        EXPECT(0xe9, gbc.readMem(0x92b9));
        // CB E9 013D
        gbc.setState(0x8994, 0xbeba, 0x9b90, 0xe175, 0x11f0, 0x1a, 0x0, 0x1);
        gbc.writeMem(0x8994, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbeba, gbc.sp());
        EXPECT(0x8996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8994));
        EXPECT(0xe9, gbc.readMem(0x8995));
        // CB E9 013E
        gbc.setState(0x61a1, 0x3131, 0x1b80, 0xbfd8, 0x7600, 0x9ba4, 0x1, 0x1);
        gbc.writeMem(0x61a1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3131, gbc.sp());
        EXPECT(0x61a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 013F
        gbc.setState(0x3472, 0x95ab, 0xf260, 0x26df, 0xd88e, 0x5e85, 0x1, 0x1);
        gbc.writeMem(0x3472, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x95ab, gbc.sp());
        EXPECT(0x3474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0140
        gbc.setState(0x2cc6, 0x8249, 0xea90, 0x223e, 0x6ce5, 0xc990, 0x0, 0x1);
        gbc.writeMem(0x2cc6, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8249, gbc.sp());
        EXPECT(0x2cc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0141
        gbc.setState(0x2f8, 0x42ed, 0x2180, 0xa01a, 0xf66a, 0x65fa, 0x1, 0x0);
        gbc.writeMem(0x2f8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x42ed, gbc.sp());
        EXPECT(0x2fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0142
        gbc.setState(0xc7af, 0xc60f, 0xa0d0, 0x83af, 0xf5db, 0xd4ec, 0x1, 0x1);
        gbc.writeMem(0xc7af, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc60f, gbc.sp());
        EXPECT(0xc7b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7af));
        EXPECT(0xe9, gbc.readMem(0xc7b0));
        // CB E9 0143
        gbc.setState(0x6930, 0xcc61, 0xb940, 0x6cc1, 0xec49, 0xdf7, 0x0, 0x0);
        gbc.writeMem(0x6930, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xcc61, gbc.sp());
        EXPECT(0x6932, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0144
        gbc.setState(0xd263, 0xd179, 0x5050, 0x80fe, 0x2675, 0x7cd4, 0x0, 0x0);
        gbc.writeMem(0xd263, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd179, gbc.sp());
        EXPECT(0xd265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd263));
        EXPECT(0xe9, gbc.readMem(0xd264));
        // CB E9 0145
        gbc.setState(0x2c3c, 0x6984, 0xa4d0, 0x8ad2, 0x24cd, 0x7306, 0x1, 0x1);
        gbc.writeMem(0x2c3c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6984, gbc.sp());
        EXPECT(0x2c3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0146
        gbc.setState(0x78a9, 0x72bf, 0x5eb0, 0x3303, 0xcb2d, 0x207f, 0x1, 0x0);
        gbc.writeMem(0x78a9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x72bf, gbc.sp());
        EXPECT(0x78ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0148
        gbc.setState(0x36e5, 0xbdce, 0x17a0, 0xa57e, 0xb057, 0xcc46, 0x1, 0x0);
        gbc.writeMem(0x36e5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbdce, gbc.sp());
        EXPECT(0x36e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0149
        gbc.setState(0x47cd, 0x62c8, 0x96f0, 0xa9bd, 0xe312, 0x6b63, 0x0, 0x1);
        gbc.writeMem(0x47cd, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x62c8, gbc.sp());
        EXPECT(0x47cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 014A
        gbc.setState(0x54c, 0x5ea8, 0x90c0, 0xb418, 0xfa99, 0xc94b, 0x1, 0x1);
        gbc.writeMem(0x54c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5ea8, gbc.sp());
        EXPECT(0x54e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 014B
        gbc.setState(0xeb9d, 0x29b0, 0x3c10, 0x3a59, 0x381a, 0xa9f, 0x0, 0x1);
        gbc.writeMem(0xeb9d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x29b0, gbc.sp());
        EXPECT(0xeb9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb9d));
        EXPECT(0xe9, gbc.readMem(0xeb9e));
        // CB E9 014C
        gbc.setState(0x54e7, 0x6c72, 0x1630, 0xabd4, 0xc51e, 0x6109, 0x0, 0x1);
        gbc.writeMem(0x54e7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6c72, gbc.sp());
        EXPECT(0x54e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 014D
        gbc.setState(0xd26c, 0xc78b, 0x3800, 0xbf9d, 0x4d26, 0xc71d, 0x1, 0x0);
        gbc.writeMem(0xd26c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc78b, gbc.sp());
        EXPECT(0xd26e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd26c));
        EXPECT(0xe9, gbc.readMem(0xd26d));
        // CB E9 014E
        gbc.setState(0x4607, 0xdf3c, 0x5a30, 0xf6af, 0x234b, 0xe6b7, 0x1, 0x0);
        gbc.writeMem(0x4607, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xdf3c, gbc.sp());
        EXPECT(0x4609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 014F
        gbc.setState(0x8aeb, 0x747e, 0x4f40, 0x388d, 0xec25, 0x17f5, 0x1, 0x1);
        gbc.writeMem(0x8aeb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x747e, gbc.sp());
        EXPECT(0x8aed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aeb));
        EXPECT(0xe9, gbc.readMem(0x8aec));
        // CB E9 0150
        gbc.setState(0x96b8, 0x85e0, 0xd360, 0x2448, 0x18f8, 0xae2b, 0x0, 0x0);
        gbc.writeMem(0x96b8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x85e0, gbc.sp());
        EXPECT(0x96ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96b8));
        EXPECT(0xe9, gbc.readMem(0x96b9));
        // CB E9 0151
        gbc.setState(0x53ae, 0x3a4, 0xf4d0, 0x5281, 0xb8ce, 0x59b4, 0x1, 0x1);
        gbc.writeMem(0x53ae, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3a4, gbc.sp());
        EXPECT(0x53b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0152
        gbc.setState(0x2a32, 0xf402, 0x45a0, 0x2e0a, 0x7e0a, 0xd731, 0x0, 0x0);
        gbc.writeMem(0x2a32, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf402, gbc.sp());
        EXPECT(0x2a34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0153
        gbc.setState(0xdfab, 0x906c, 0x98c0, 0xde86, 0x9517, 0xcc05, 0x1, 0x1);
        gbc.writeMem(0xdfab, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x906c, gbc.sp());
        EXPECT(0xdfad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfab));
        EXPECT(0xe9, gbc.readMem(0xdfac));
        // CB E9 0154
        gbc.setState(0xd56f, 0x2df4, 0x2d80, 0x4f9, 0x635e, 0xff37, 0x0, 0x1);
        gbc.writeMem(0xd56f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2df4, gbc.sp());
        EXPECT(0xd571, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd56f));
        EXPECT(0xe9, gbc.readMem(0xd570));
        // CB E9 0155
        gbc.setState(0xb1e1, 0xea6, 0xfa00, 0xa553, 0x5fed, 0xcafc, 0x0, 0x0);
        gbc.writeMem(0xb1e1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xea6, gbc.sp());
        EXPECT(0xb1e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1e1));
        EXPECT(0xe9, gbc.readMem(0xb1e2));
        // CB E9 0156
        gbc.setState(0xcde2, 0x4a86, 0xa800, 0xfe10, 0x7ba9, 0xebf0, 0x1, 0x0);
        gbc.writeMem(0xcde2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4a86, gbc.sp());
        EXPECT(0xcde4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcde2));
        EXPECT(0xe9, gbc.readMem(0xcde3));
        // CB E9 0157
        gbc.setState(0xc181, 0xe063, 0x17c0, 0x5dc3, 0xa515, 0xedf4, 0x1, 0x0);
        gbc.writeMem(0xc181, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe063, gbc.sp());
        EXPECT(0xc183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc181));
        EXPECT(0xe9, gbc.readMem(0xc182));
        // CB E9 0158
        gbc.setState(0xe659, 0xc942, 0x8130, 0x92f4, 0x89b0, 0xa7ba, 0x1, 0x0);
        gbc.writeMem(0xe659, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc942, gbc.sp());
        EXPECT(0xe65b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe659));
        EXPECT(0xe9, gbc.readMem(0xe65a));
        // CB E9 0159
        gbc.setState(0xbfb5, 0x3c24, 0x5090, 0x40fb, 0xf5d7, 0xc863, 0x0, 0x1);
        gbc.writeMem(0xbfb5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3c24, gbc.sp());
        EXPECT(0xbfb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfb5));
        EXPECT(0xe9, gbc.readMem(0xbfb6));
        // CB E9 015A
        gbc.setState(0x3d60, 0xb78a, 0x9620, 0x15f9, 0x9081, 0xd71, 0x1, 0x1);
        gbc.writeMem(0x3d60, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb78a, gbc.sp());
        EXPECT(0x3d62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 015B
        gbc.setState(0x7b3b, 0xa6cd, 0x9c20, 0x46a1, 0x8cea, 0x6098, 0x0, 0x1);
        gbc.writeMem(0x7b3b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa6cd, gbc.sp());
        EXPECT(0x7b3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 015C
        gbc.setState(0xec9a, 0xa646, 0xcef0, 0xf635, 0xd5e8, 0x6038, 0x1, 0x1);
        gbc.writeMem(0xec9a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa646, gbc.sp());
        EXPECT(0xec9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec9a));
        EXPECT(0xe9, gbc.readMem(0xec9b));
        // CB E9 015D
        gbc.setState(0xe983, 0x3342, 0x5ab0, 0x28c2, 0x94c7, 0x302b, 0x1, 0x0);
        gbc.writeMem(0xe983, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3342, gbc.sp());
        EXPECT(0xe985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe983));
        EXPECT(0xe9, gbc.readMem(0xe984));
        // CB E9 015E
        gbc.setState(0x415a, 0x700c, 0x8ea0, 0x96d3, 0xed6e, 0x27c6, 0x0, 0x1);
        gbc.writeMem(0x415a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x700c, gbc.sp());
        EXPECT(0x415c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 015F
        gbc.setState(0x53d2, 0xd73c, 0x7de0, 0xc2ef, 0xca99, 0x1445, 0x0, 0x1);
        gbc.writeMem(0x53d2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd73c, gbc.sp());
        EXPECT(0x53d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0160
        gbc.setState(0x2313, 0xf38c, 0xb660, 0xacc6, 0x96c1, 0xb3b6, 0x0, 0x1);
        gbc.writeMem(0x2313, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf38c, gbc.sp());
        EXPECT(0x2315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0161
        gbc.setState(0x69ad, 0xcddf, 0x9c30, 0xcef6, 0x8b79, 0xea38, 0x1, 0x0);
        gbc.writeMem(0x69ad, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xcddf, gbc.sp());
        EXPECT(0x69af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0162
        gbc.setState(0x71b1, 0xfd8c, 0x6330, 0xbca0, 0xe5d8, 0xe206, 0x0, 0x1);
        gbc.writeMem(0x71b1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfd8c, gbc.sp());
        EXPECT(0x71b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0163
        gbc.setState(0x79e7, 0x6307, 0xb140, 0xbe5, 0xa7d5, 0x17a7, 0x1, 0x1);
        gbc.writeMem(0x79e7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6307, gbc.sp());
        EXPECT(0x79e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0164
        gbc.setState(0xda7a, 0x888a, 0x7b20, 0xba0c, 0xbf95, 0xc9bb, 0x1, 0x0);
        gbc.writeMem(0xda7a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x888a, gbc.sp());
        EXPECT(0xda7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda7a));
        EXPECT(0xe9, gbc.readMem(0xda7b));
        // CB E9 0165
        gbc.setState(0x3fb7, 0x1bda, 0xbb60, 0x8b80, 0xad5, 0x8752, 0x1, 0x0);
        gbc.writeMem(0x3fb7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1bda, gbc.sp());
        EXPECT(0x3fb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0166
        gbc.setState(0x7547, 0xf01, 0xedc0, 0x515c, 0xdd8a, 0x6c76, 0x1, 0x0);
        gbc.writeMem(0x7547, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf01, gbc.sp());
        EXPECT(0x7549, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0167
        gbc.setState(0xbf6a, 0x9052, 0x5bb0, 0x47a6, 0x28de, 0x220b, 0x1, 0x1);
        gbc.writeMem(0xbf6a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9052, gbc.sp());
        EXPECT(0xbf6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf6a));
        EXPECT(0xe9, gbc.readMem(0xbf6b));
        // CB E9 0168
        gbc.setState(0xe7e2, 0x5ebc, 0xd20, 0xfacb, 0x398d, 0xb94b, 0x1, 0x1);
        gbc.writeMem(0xe7e2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5ebc, gbc.sp());
        EXPECT(0xe7e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7e2));
        EXPECT(0xe9, gbc.readMem(0xe7e3));
        // CB E9 0169
        gbc.setState(0xcfca, 0xb9d5, 0x3360, 0x737b, 0xb51b, 0xef31, 0x0, 0x1);
        gbc.writeMem(0xcfca, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb9d5, gbc.sp());
        EXPECT(0xcfcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfca));
        EXPECT(0xe9, gbc.readMem(0xcfcb));
        // CB E9 016A
        gbc.setState(0x74da, 0xfd2d, 0x970, 0x3b23, 0x2ed4, 0xa958, 0x1, 0x0);
        gbc.writeMem(0x74da, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xfd2d, gbc.sp());
        EXPECT(0x74dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 016B
        gbc.setState(0x599d, 0x8470, 0xbe0, 0xebc2, 0xc5, 0x51f0, 0x1, 0x1);
        gbc.writeMem(0x599d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8470, gbc.sp());
        EXPECT(0x599f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 016C
        gbc.setState(0x8ab5, 0xbd06, 0x6c60, 0x28c, 0x12ee, 0x37fd, 0x1, 0x0);
        gbc.writeMem(0x8ab5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xbd06, gbc.sp());
        EXPECT(0x8ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ab5));
        EXPECT(0xe9, gbc.readMem(0x8ab6));
        // CB E9 016D
        gbc.setState(0xd66c, 0xe40b, 0xc440, 0x5e6e, 0x5c4, 0x51a, 0x0, 0x0);
        gbc.writeMem(0xd66c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe40b, gbc.sp());
        EXPECT(0xd66e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd66c));
        EXPECT(0xe9, gbc.readMem(0xd66d));
        // CB E9 016E
        gbc.setState(0x8414, 0xf1e1, 0x8680, 0x4190, 0x8975, 0x3ac, 0x0, 0x1);
        gbc.writeMem(0x8414, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf1e1, gbc.sp());
        EXPECT(0x8416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8414));
        EXPECT(0xe9, gbc.readMem(0x8415));
        // CB E9 016F
        gbc.setState(0xa05, 0x4798, 0x3030, 0xb160, 0xf6c5, 0xa87d, 0x0, 0x1);
        gbc.writeMem(0xa05, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4798, gbc.sp());
        EXPECT(0xa07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0170
        gbc.setState(0x8f10, 0xb6bb, 0xf560, 0x74a2, 0x6efc, 0x1e92, 0x0, 0x0);
        gbc.writeMem(0x8f10, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb6bb, gbc.sp());
        EXPECT(0x8f12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f10));
        EXPECT(0xe9, gbc.readMem(0x8f11));
        // CB E9 0171
        gbc.setState(0xe92c, 0x60f5, 0x6c0, 0xaa11, 0x3f4f, 0xa427, 0x0, 0x1);
        gbc.writeMem(0xe92c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x60f5, gbc.sp());
        EXPECT(0xe92e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe92c));
        EXPECT(0xe9, gbc.readMem(0xe92d));
        // CB E9 0172
        gbc.setState(0xea45, 0xa077, 0x7b00, 0x7dfc, 0x5ecb, 0xe9f0, 0x0, 0x1);
        gbc.writeMem(0xea45, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa077, gbc.sp());
        EXPECT(0xea47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea45));
        EXPECT(0xe9, gbc.readMem(0xea46));
        // CB E9 0173
        gbc.setState(0x18b9, 0x83c3, 0xd230, 0x1ea5, 0xb0ad, 0xc467, 0x1, 0x0);
        gbc.writeMem(0x18b9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x83c3, gbc.sp());
        EXPECT(0x18bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0174
        gbc.setState(0xbf50, 0x6197, 0xb820, 0x6d3e, 0x36eb, 0xb689, 0x0, 0x1);
        gbc.writeMem(0xbf50, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6197, gbc.sp());
        EXPECT(0xbf52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf50));
        EXPECT(0xe9, gbc.readMem(0xbf51));
        // CB E9 0175
        gbc.setState(0xa4e9, 0xa52a, 0xd880, 0x6044, 0x26ac, 0x9ddb, 0x0, 0x1);
        gbc.writeMem(0xa4e9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa52a, gbc.sp());
        EXPECT(0xa4eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4e9));
        EXPECT(0xe9, gbc.readMem(0xa4ea));
        // CB E9 0176
        gbc.setState(0x8397, 0x6384, 0xaed0, 0xc80d, 0x1165, 0x4db9, 0x1, 0x0);
        gbc.writeMem(0x8397, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6384, gbc.sp());
        EXPECT(0x8399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8397));
        EXPECT(0xe9, gbc.readMem(0x8398));
        // CB E9 0177
        gbc.setState(0x8ceb, 0xb82d, 0xaed0, 0xbc27, 0x8179, 0xbf2b, 0x1, 0x0);
        gbc.writeMem(0x8ceb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb82d, gbc.sp());
        EXPECT(0x8ced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ceb));
        EXPECT(0xe9, gbc.readMem(0x8cec));
        // CB E9 0178
        gbc.setState(0x942a, 0xf03c, 0xce50, 0xd9ff, 0x5f96, 0x3e1c, 0x1, 0x1);
        gbc.writeMem(0x942a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf03c, gbc.sp());
        EXPECT(0x942c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x942a));
        EXPECT(0xe9, gbc.readMem(0x942b));
        // CB E9 0179
        gbc.setState(0xcebe, 0xd0f8, 0x2700, 0x53aa, 0xb8df, 0x430b, 0x1, 0x1);
        gbc.writeMem(0xcebe, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd0f8, gbc.sp());
        EXPECT(0xcec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcebe));
        EXPECT(0xe9, gbc.readMem(0xcebf));
        // CB E9 017A
        gbc.setState(0x6ec3, 0x7555, 0x6e30, 0x4719, 0x814, 0xeea0, 0x0, 0x0);
        gbc.writeMem(0x6ec3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7555, gbc.sp());
        EXPECT(0x6ec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 017B
        gbc.setState(0x96a9, 0x9c19, 0x1660, 0xa4b0, 0x7d19, 0x9a5f, 0x0, 0x1);
        gbc.writeMem(0x96a9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9c19, gbc.sp());
        EXPECT(0x96ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96a9));
        EXPECT(0xe9, gbc.readMem(0x96aa));
        // CB E9 017C
        gbc.setState(0x8d0b, 0xfbde, 0x8e10, 0xc6a5, 0xa84b, 0x52ae, 0x0, 0x0);
        gbc.writeMem(0x8d0b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xfbde, gbc.sp());
        EXPECT(0x8d0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d0b));
        EXPECT(0xe9, gbc.readMem(0x8d0c));
        // CB E9 017D
        gbc.setState(0x2e60, 0xba53, 0x8110, 0xfaed, 0x8bdc, 0x53c2, 0x1, 0x1);
        gbc.writeMem(0x2e60, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xba53, gbc.sp());
        EXPECT(0x2e62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 017E
        gbc.setState(0x1706, 0xfa8e, 0x7920, 0x9f73, 0x26f5, 0x2916, 0x0, 0x1);
        gbc.writeMem(0x1706, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xfa8e, gbc.sp());
        EXPECT(0x1708, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 017F
        gbc.setState(0x7097, 0xf99f, 0x5f60, 0xec43, 0xcbc1, 0x7947, 0x0, 0x1);
        gbc.writeMem(0x7097, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf99f, gbc.sp());
        EXPECT(0x7099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0180
        gbc.setState(0x3266, 0x7f15, 0x75e0, 0xc04, 0x508f, 0x9f7, 0x0, 0x1);
        gbc.writeMem(0x3266, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7f15, gbc.sp());
        EXPECT(0x3268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0181
        gbc.setState(0xdf63, 0xc25f, 0x57b0, 0x6771, 0xdf49, 0x7740, 0x1, 0x1);
        gbc.writeMem(0xdf63, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc25f, gbc.sp());
        EXPECT(0xdf65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf63));
        EXPECT(0xe9, gbc.readMem(0xdf64));
        // CB E9 0183
        gbc.setState(0x3cda, 0xc226, 0x3ee0, 0x6d4e, 0x6155, 0x67b, 0x0, 0x1);
        gbc.writeMem(0x3cda, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc226, gbc.sp());
        EXPECT(0x3cdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0184
        gbc.setState(0xf2c, 0x8bd, 0x8cd0, 0xf62b, 0x86bd, 0x642e, 0x0, 0x1);
        gbc.writeMem(0xf2c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8bd, gbc.sp());
        EXPECT(0xf2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0185
        gbc.setState(0xd13f, 0xf6cb, 0x6b30, 0x6f45, 0xb2df, 0xd488, 0x1, 0x0);
        gbc.writeMem(0xd13f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf6cb, gbc.sp());
        EXPECT(0xd141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd13f));
        EXPECT(0xe9, gbc.readMem(0xd140));
        // CB E9 0186
        gbc.setState(0x3f, 0x439c, 0xe0b0, 0x5d5e, 0x702b, 0x9fbc, 0x1, 0x1);
        gbc.writeMem(0x3f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x439c, gbc.sp());
        EXPECT(0x41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0187
        gbc.setState(0x11d2, 0x57ac, 0xdb70, 0xb362, 0x9580, 0x4ec3, 0x0, 0x0);
        gbc.writeMem(0x11d2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x57ac, gbc.sp());
        EXPECT(0x11d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0189
        gbc.setState(0xab8, 0x173d, 0xc5a0, 0xdcdc, 0xa408, 0xe520, 0x1, 0x0);
        gbc.writeMem(0xab8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x173d, gbc.sp());
        EXPECT(0xaba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 018A
        gbc.setState(0xd1da, 0xf249, 0x6e40, 0xd7e7, 0x842e, 0x4e68, 0x1, 0x0);
        gbc.writeMem(0xd1da, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf249, gbc.sp());
        EXPECT(0xd1dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1da));
        EXPECT(0xe9, gbc.readMem(0xd1db));
        // CB E9 018B
        gbc.setState(0x4de1, 0x24b0, 0x1580, 0xad31, 0xb29d, 0x2d41, 0x1, 0x0);
        gbc.writeMem(0x4de1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x24b0, gbc.sp());
        EXPECT(0x4de3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 018C
        gbc.setState(0xb621, 0xba72, 0xf800, 0x834b, 0xc366, 0x1cb6, 0x1, 0x0);
        gbc.writeMem(0xb621, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xba72, gbc.sp());
        EXPECT(0xb623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb621));
        EXPECT(0xe9, gbc.readMem(0xb622));
        // CB E9 018D
        gbc.setState(0xe2c4, 0xe485, 0xe310, 0x7135, 0xb48e, 0xbaac, 0x0, 0x1);
        gbc.writeMem(0xe2c4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe485, gbc.sp());
        EXPECT(0xe2c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2c4));
        EXPECT(0xe9, gbc.readMem(0xe2c5));
        // CB E9 018E
        gbc.setState(0x8efc, 0x50eb, 0x3c80, 0xca50, 0xf50d, 0xbd1f, 0x1, 0x0);
        gbc.writeMem(0x8efc, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x50eb, gbc.sp());
        EXPECT(0x8efe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8efc));
        EXPECT(0xe9, gbc.readMem(0x8efd));
        // CB E9 018F
        gbc.setState(0x865, 0x7d42, 0x2f80, 0x6418, 0xb1e0, 0x647, 0x0, 0x0);
        gbc.writeMem(0x865, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7d42, gbc.sp());
        EXPECT(0x867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0190
        gbc.setState(0xe7b5, 0xf163, 0xdcb0, 0x91d5, 0x4281, 0x2cff, 0x0, 0x1);
        gbc.writeMem(0xe7b5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf163, gbc.sp());
        EXPECT(0xe7b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7b5));
        EXPECT(0xe9, gbc.readMem(0xe7b6));
        // CB E9 0191
        gbc.setState(0xa070, 0x2bbf, 0xb700, 0xf6ba, 0xe02, 0xd1c1, 0x0, 0x0);
        gbc.writeMem(0xa070, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2bbf, gbc.sp());
        EXPECT(0xa072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa070));
        EXPECT(0xe9, gbc.readMem(0xa071));
        // CB E9 0192
        gbc.setState(0xee94, 0x8144, 0x7e60, 0xb8f, 0xddd3, 0x9f79, 0x1, 0x0);
        gbc.writeMem(0xee94, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8144, gbc.sp());
        EXPECT(0xee96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee94));
        EXPECT(0xe9, gbc.readMem(0xee95));
        // CB E9 0193
        gbc.setState(0x3520, 0xf240, 0xe3e0, 0x5f8f, 0x1404, 0xc564, 0x1, 0x1);
        gbc.writeMem(0x3520, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf240, gbc.sp());
        EXPECT(0x3522, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0194
        gbc.setState(0x6a7d, 0x8e44, 0x2a40, 0x97c2, 0xb74, 0x3ca1, 0x1, 0x0);
        gbc.writeMem(0x6a7d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8e44, gbc.sp());
        EXPECT(0x6a7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0195
        gbc.setState(0xc669, 0x27fb, 0x3370, 0xb735, 0xbb54, 0x4a59, 0x0, 0x1);
        gbc.writeMem(0xc669, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x27fb, gbc.sp());
        EXPECT(0xc66b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc669));
        EXPECT(0xe9, gbc.readMem(0xc66a));
        // CB E9 0196
        gbc.setState(0x95e6, 0xaa28, 0x6f80, 0xb5be, 0xfb46, 0x316e, 0x1, 0x1);
        gbc.writeMem(0x95e6, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xaa28, gbc.sp());
        EXPECT(0x95e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95e6));
        EXPECT(0xe9, gbc.readMem(0x95e7));
        // CB E9 0197
        gbc.setState(0x5604, 0xc9fb, 0x37a0, 0xcb4d, 0xb268, 0x6fc6, 0x1, 0x1);
        gbc.writeMem(0x5604, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc9fb, gbc.sp());
        EXPECT(0x5606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0198
        gbc.setState(0xa44f, 0x3afe, 0x8c90, 0x2bab, 0x1f26, 0xbbd9, 0x1, 0x1);
        gbc.writeMem(0xa44f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3afe, gbc.sp());
        EXPECT(0xa451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa44f));
        EXPECT(0xe9, gbc.readMem(0xa450));
        // CB E9 0199
        gbc.setState(0xc213, 0x98cf, 0xbb40, 0xbee5, 0xeab5, 0x2b8f, 0x1, 0x1);
        gbc.writeMem(0xc213, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x98cf, gbc.sp());
        EXPECT(0xc215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc213));
        EXPECT(0xe9, gbc.readMem(0xc214));
        // CB E9 019A
        gbc.setState(0xce88, 0x3082, 0x1140, 0x32c4, 0x7f13, 0x7981, 0x1, 0x0);
        gbc.writeMem(0xce88, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3082, gbc.sp());
        EXPECT(0xce8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce88));
        EXPECT(0xe9, gbc.readMem(0xce89));
        // CB E9 019B
        gbc.setState(0x72ed, 0x16ce, 0x35e0, 0x3d38, 0x5e4c, 0x9788, 0x1, 0x0);
        gbc.writeMem(0x72ed, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x16ce, gbc.sp());
        EXPECT(0x72ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 019C
        gbc.setState(0xbbe7, 0xf6e3, 0xaa00, 0x7b38, 0x6707, 0xa039, 0x0, 0x1);
        gbc.writeMem(0xbbe7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf6e3, gbc.sp());
        EXPECT(0xbbe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe7));
        EXPECT(0xe9, gbc.readMem(0xbbe8));
        // CB E9 019D
        gbc.setState(0x34b0, 0xdcb1, 0x8e70, 0x1794, 0x9034, 0x4751, 0x0, 0x0);
        gbc.writeMem(0x34b0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xdcb1, gbc.sp());
        EXPECT(0x34b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 019E
        gbc.setState(0x7fe6, 0xe253, 0xe670, 0xe621, 0x530c, 0x9922, 0x1, 0x0);
        gbc.writeMem(0x7fe6, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe253, gbc.sp());
        EXPECT(0x7fe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 019F
        gbc.setState(0x5b52, 0x733f, 0xa1e0, 0xed3a, 0x7772, 0xfee9, 0x0, 0x0);
        gbc.writeMem(0x5b52, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x733f, gbc.sp());
        EXPECT(0x5b54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 01A0
        gbc.setState(0x7f54, 0x18f1, 0x6950, 0x56b4, 0x3ce4, 0x8bab, 0x1, 0x0);
        gbc.writeMem(0x7f54, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x18f1, gbc.sp());
        EXPECT(0x7f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 01A1
        gbc.setState(0x6781, 0xe72c, 0xda40, 0xfbd0, 0x46e3, 0x7cc1, 0x1, 0x0);
        gbc.writeMem(0x6781, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe72c, gbc.sp());
        EXPECT(0x6783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 01A2
        gbc.setState(0x2978, 0x708e, 0x1620, 0x8dc1, 0x36f5, 0x95b1, 0x1, 0x0);
        gbc.writeMem(0x2978, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x708e, gbc.sp());
        EXPECT(0x297a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 01A3
        gbc.setState(0x6a57, 0x1ef9, 0x8620, 0x2464, 0x471f, 0x6d98, 0x1, 0x0);
        gbc.writeMem(0x6a57, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1ef9, gbc.sp());
        EXPECT(0x6a59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 01A4
        gbc.setState(0x392e, 0x17d5, 0x21c0, 0xb8e5, 0xc806, 0xf288, 0x0, 0x1);
        gbc.writeMem(0x392e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x17d5, gbc.sp());
        EXPECT(0x3930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 01A5
        gbc.setState(0x781a, 0x824, 0x5890, 0x367c, 0x3e87, 0xf3f7, 0x1, 0x0);
        gbc.writeMem(0x781a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x824, gbc.sp());
        EXPECT(0x781c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 01A6
        gbc.setState(0xa6d9, 0x31, 0x8950, 0x137c, 0xb117, 0x304d, 0x0, 0x1);
        gbc.writeMem(0xa6d9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x31, gbc.sp());
        EXPECT(0xa6db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6d9));
        EXPECT(0xe9, gbc.readMem(0xa6da));
        // CB E9 01A7
        gbc.setState(0x56cf, 0x46ca, 0x6d40, 0x1047, 0x975e, 0x8a2c, 0x0, 0x0);
        gbc.writeMem(0x56cf, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x46ca, gbc.sp());
        EXPECT(0x56d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 01A8
        gbc.setState(0x4ee7, 0xee80, 0x8f10, 0xad80, 0xf63d, 0x1c0e, 0x0, 0x0);
        gbc.writeMem(0x4ee7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xee80, gbc.sp());
        EXPECT(0x4ee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 01A9
        gbc.setState(0xe47e, 0x2a4d, 0x3920, 0xfcd5, 0xf37f, 0xd800, 0x0, 0x0);
        gbc.writeMem(0xe47e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2a4d, gbc.sp());
        EXPECT(0xe480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe47e));
        EXPECT(0xe9, gbc.readMem(0xe47f));
        // CB E9 01AA
        gbc.setState(0x559, 0xc553, 0x2800, 0x3c65, 0x26ee, 0xa597, 0x0, 0x0);
        gbc.writeMem(0x559, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc553, gbc.sp());
        EXPECT(0x55b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 01AB
        gbc.setState(0x8aac, 0x666f, 0x1450, 0x2a0, 0xdd85, 0xff79, 0x0, 0x0);
        gbc.writeMem(0x8aac, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x666f, gbc.sp());
        EXPECT(0x8aae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aac));
        EXPECT(0xe9, gbc.readMem(0x8aad));
        // CB E9 01AC
        gbc.setState(0xd139, 0xc785, 0x6320, 0x72e2, 0x956a, 0xc685, 0x1, 0x0);
        gbc.writeMem(0xd139, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc785, gbc.sp());
        EXPECT(0xd13b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd139));
        EXPECT(0xe9, gbc.readMem(0xd13a));
        // CB E9 01AD
        gbc.setState(0x7e09, 0x6f95, 0x6dd0, 0x6d2f, 0x8d8a, 0x501b, 0x0, 0x0);
        gbc.writeMem(0x7e09, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6f95, gbc.sp());
        EXPECT(0x7e0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 01AE
        gbc.setState(0x7ff1, 0x68f, 0x2160, 0x3ea4, 0xd8f6, 0x244, 0x1, 0x1);
        gbc.writeMem(0x7ff1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x68f, gbc.sp());
        EXPECT(0x7ff3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 01AF
        gbc.setState(0xaed6, 0xf0f5, 0x8d40, 0x832a, 0x9bf9, 0x7fe1, 0x0, 0x1);
        gbc.writeMem(0xaed6, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf0f5, gbc.sp());
        EXPECT(0xaed8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaed6));
        EXPECT(0xe9, gbc.readMem(0xaed7));
        // CB E9 01B0
        gbc.setState(0xcfb0, 0xf65a, 0x4c90, 0x104, 0x321a, 0xe4c7, 0x0, 0x1);
        gbc.writeMem(0xcfb0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf65a, gbc.sp());
        EXPECT(0xcfb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfb0));
        EXPECT(0xe9, gbc.readMem(0xcfb1));
        // CB E9 01B1
        gbc.setState(0xdb0c, 0xd892, 0xf1f0, 0xbeb5, 0xa45f, 0x8958, 0x1, 0x0);
        gbc.writeMem(0xdb0c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd892, gbc.sp());
        EXPECT(0xdb0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb0c));
        EXPECT(0xe9, gbc.readMem(0xdb0d));
        // CB E9 01B2
        gbc.setState(0xc01a, 0xe8cb, 0x9510, 0xe31b, 0x701f, 0xbe97, 0x0, 0x0);
        gbc.writeMem(0xc01a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe8cb, gbc.sp());
        EXPECT(0xc01c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc01a));
        EXPECT(0xe9, gbc.readMem(0xc01b));
        // CB E9 01B3
        gbc.setState(0xc276, 0x4b8a, 0x9d10, 0x1af8, 0x8c96, 0x187e, 0x0, 0x0);
        gbc.writeMem(0xc276, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x4b8a, gbc.sp());
        EXPECT(0xc278, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc276));
        EXPECT(0xe9, gbc.readMem(0xc277));
        // CB E9 01B4
        gbc.setState(0x5ecf, 0x1a9e, 0xce10, 0x1d76, 0xe443, 0x11d1, 0x1, 0x1);
        gbc.writeMem(0x5ecf, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1a9e, gbc.sp());
        EXPECT(0x5ed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 01B6
        gbc.setState(0xc274, 0x3547, 0xa990, 0xd000, 0x5f8c, 0xe35b, 0x0, 0x0);
        gbc.writeMem(0xc274, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3547, gbc.sp());
        EXPECT(0xc276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc274));
        EXPECT(0xe9, gbc.readMem(0xc275));
        // CB E9 01B7
        gbc.setState(0xc5a9, 0x447f, 0xf0a0, 0xddbe, 0x8b10, 0x76c4, 0x1, 0x0);
        gbc.writeMem(0xc5a9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x447f, gbc.sp());
        EXPECT(0xc5ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5a9));
        EXPECT(0xe9, gbc.readMem(0xc5aa));
        // CB E9 01B8
        gbc.setState(0x9a03, 0x37b6, 0x48d0, 0x78fc, 0x7796, 0xd5e8, 0x0, 0x0);
        gbc.writeMem(0x9a03, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x37b6, gbc.sp());
        EXPECT(0x9a05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a03));
        EXPECT(0xe9, gbc.readMem(0x9a04));
        // CB E9 01B9
        gbc.setState(0x7cb7, 0xd066, 0xcd60, 0x3d25, 0x4472, 0xf83e, 0x1, 0x1);
        gbc.writeMem(0x7cb7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xd066, gbc.sp());
        EXPECT(0x7cb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 01BA
        gbc.setState(0x7156, 0x4efa, 0x7900, 0x5997, 0x991a, 0x36e0, 0x1, 0x1);
        gbc.writeMem(0x7156, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4efa, gbc.sp());
        EXPECT(0x7158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 01BB
        gbc.setState(0xec63, 0x77d7, 0x3350, 0x9621, 0xc4bc, 0x12b, 0x1, 0x1);
        gbc.writeMem(0xec63, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x77d7, gbc.sp());
        EXPECT(0xec65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec63));
        EXPECT(0xe9, gbc.readMem(0xec64));
        // CB E9 01BC
        gbc.setState(0x3290, 0xd504, 0x9040, 0x220b, 0x1db4, 0x7428, 0x0, 0x0);
        gbc.writeMem(0x3290, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd504, gbc.sp());
        EXPECT(0x3292, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 01BD
        gbc.setState(0x3e90, 0x1ce, 0xb180, 0x678e, 0x9aad, 0x2774, 0x1, 0x1);
        gbc.writeMem(0x3e90, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1ce, gbc.sp());
        EXPECT(0x3e92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 01BE
        gbc.setState(0x49b9, 0x28ca, 0xa90, 0x77d8, 0xc663, 0xc462, 0x1, 0x1);
        gbc.writeMem(0x49b9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x28ca, gbc.sp());
        EXPECT(0x49bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 01BF
        gbc.setState(0x5d4e, 0x7220, 0x9e10, 0x239, 0x94b7, 0x6cf4, 0x0, 0x1);
        gbc.writeMem(0x5d4e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7220, gbc.sp());
        EXPECT(0x5d50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 01C0
        gbc.setState(0x443c, 0x876d, 0xd750, 0xdd29, 0xbf70, 0x4e87, 0x1, 0x0);
        gbc.writeMem(0x443c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x876d, gbc.sp());
        EXPECT(0x443e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 01C1
        gbc.setState(0xae40, 0x383a, 0xf070, 0x4fd, 0x326, 0x6b27, 0x0, 0x1);
        gbc.writeMem(0xae40, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x383a, gbc.sp());
        EXPECT(0xae42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae40));
        EXPECT(0xe9, gbc.readMem(0xae41));
        // CB E9 01C2
        gbc.setState(0x5dab, 0x7e41, 0xfbd0, 0x707a, 0x4b76, 0xeddb, 0x0, 0x1);
        gbc.writeMem(0x5dab, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7e41, gbc.sp());
        EXPECT(0x5dad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 01C3
        gbc.setState(0xc4c5, 0x5c3b, 0xa0b0, 0xed5c, 0xed42, 0x4a8b, 0x0, 0x1);
        gbc.writeMem(0xc4c5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5c3b, gbc.sp());
        EXPECT(0xc4c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4c5));
        EXPECT(0xe9, gbc.readMem(0xc4c6));
        // CB E9 01C4
        gbc.setState(0xc19a, 0x73ee, 0xda20, 0x3815, 0xac56, 0xf095, 0x0, 0x0);
        gbc.writeMem(0xc19a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x73ee, gbc.sp());
        EXPECT(0xc19c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc19a));
        EXPECT(0xe9, gbc.readMem(0xc19b));
        // CB E9 01C5
        gbc.setState(0xaff9, 0x9eaa, 0x3460, 0xbcd5, 0x78ac, 0x9368, 0x0, 0x0);
        gbc.writeMem(0xaff9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9eaa, gbc.sp());
        EXPECT(0xaffb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaff9));
        EXPECT(0xe9, gbc.readMem(0xaffa));
        // CB E9 01C6
        gbc.setState(0x28ab, 0xc056, 0x6500, 0x8403, 0xb493, 0xf17, 0x1, 0x0);
        gbc.writeMem(0x28ab, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc056, gbc.sp());
        EXPECT(0x28ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 01C7
        gbc.setState(0xd1e8, 0xdaeb, 0x5520, 0xdd9a, 0xa8b0, 0x2f9d, 0x0, 0x0);
        gbc.writeMem(0xd1e8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xdaeb, gbc.sp());
        EXPECT(0xd1ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1e8));
        EXPECT(0xe9, gbc.readMem(0xd1e9));
        // CB E9 01C8
        gbc.setState(0xac0a, 0xe1d, 0x5920, 0x6a87, 0xd062, 0x1589, 0x1, 0x1);
        gbc.writeMem(0xac0a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe1d, gbc.sp());
        EXPECT(0xac0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac0a));
        EXPECT(0xe9, gbc.readMem(0xac0b));
        // CB E9 01C9
        gbc.setState(0x1358, 0x6fed, 0x9ba0, 0xc153, 0x3923, 0xbc6d, 0x0, 0x0);
        gbc.writeMem(0x1358, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6fed, gbc.sp());
        EXPECT(0x135a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 01CA
        gbc.setState(0x664e, 0x2c05, 0x50, 0xc02a, 0x2f2a, 0x677b, 0x1, 0x1);
        gbc.writeMem(0x664e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2c05, gbc.sp());
        EXPECT(0x6650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 01CB
        gbc.setState(0x3885, 0x54e1, 0x7d50, 0x1223, 0x407d, 0x4a07, 0x0, 0x1);
        gbc.writeMem(0x3885, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x54e1, gbc.sp());
        EXPECT(0x3887, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 01CD
        gbc.setState(0x46b, 0xdf52, 0xb60, 0xcf, 0x82db, 0x278b, 0x0, 0x1);
        gbc.writeMem(0x46b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdf52, gbc.sp());
        EXPECT(0x46d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 01CE
        gbc.setState(0x164, 0x3b15, 0xb680, 0xfe05, 0x698d, 0x2bcd, 0x0, 0x0);
        gbc.writeMem(0x164, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3b15, gbc.sp());
        EXPECT(0x166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 01CF
        gbc.setState(0xd41d, 0xc37e, 0x7890, 0x2309, 0x2b23, 0xc643, 0x1, 0x1);
        gbc.writeMem(0xd41d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc37e, gbc.sp());
        EXPECT(0xd41f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd41d));
        EXPECT(0xe9, gbc.readMem(0xd41e));
        // CB E9 01D0
        gbc.setState(0x7bdc, 0xa849, 0x94f0, 0x2f02, 0x1189, 0x59a1, 0x1, 0x0);
        gbc.writeMem(0x7bdc, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa849, gbc.sp());
        EXPECT(0x7bde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 01D1
        gbc.setState(0x7395, 0x4774, 0xaa30, 0x2422, 0xad24, 0xd19d, 0x0, 0x0);
        gbc.writeMem(0x7395, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4774, gbc.sp());
        EXPECT(0x7397, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 01D2
        gbc.setState(0x8c3b, 0x9b3b, 0x57b0, 0x15ac, 0x8d50, 0x3578, 0x1, 0x0);
        gbc.writeMem(0x8c3b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9b3b, gbc.sp());
        EXPECT(0x8c3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c3b));
        EXPECT(0xe9, gbc.readMem(0x8c3c));
        // CB E9 01D3
        gbc.setState(0x4480, 0x1fad, 0xc7b0, 0x223a, 0xba4b, 0x14b4, 0x0, 0x0);
        gbc.writeMem(0x4480, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1fad, gbc.sp());
        EXPECT(0x4482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 01D4
        gbc.setState(0x1adf, 0xe8fe, 0xa4e0, 0x1d2e, 0xeee3, 0x294f, 0x1, 0x0);
        gbc.writeMem(0x1adf, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe8fe, gbc.sp());
        EXPECT(0x1ae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 01D5
        gbc.setState(0x9106, 0x884c, 0x1a40, 0xeea, 0xb8c7, 0xa52f, 0x0, 0x0);
        gbc.writeMem(0x9106, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x884c, gbc.sp());
        EXPECT(0x9108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9106));
        EXPECT(0xe9, gbc.readMem(0x9107));
        // CB E9 01D6
        gbc.setState(0x2c8f, 0xbe85, 0xd150, 0x6c08, 0xae10, 0xcbac, 0x0, 0x1);
        gbc.writeMem(0x2c8f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xbe85, gbc.sp());
        EXPECT(0x2c91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 01D8
        gbc.setState(0x976e, 0xcc10, 0xea50, 0x4530, 0x5c1a, 0xc2d8, 0x0, 0x0);
        gbc.writeMem(0x976e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcc10, gbc.sp());
        EXPECT(0x9770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x976e));
        EXPECT(0xe9, gbc.readMem(0x976f));
        // CB E9 01D9
        gbc.setState(0xab08, 0x97f4, 0x5e70, 0xabfa, 0xd719, 0x9fab, 0x0, 0x1);
        gbc.writeMem(0xab08, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x97f4, gbc.sp());
        EXPECT(0xab0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab08));
        EXPECT(0xe9, gbc.readMem(0xab09));
        // CB E9 01DA
        gbc.setState(0x30b4, 0xe298, 0x3710, 0x5ffc, 0xc40f, 0xf217, 0x0, 0x0);
        gbc.writeMem(0x30b4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe298, gbc.sp());
        EXPECT(0x30b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 01DB
        gbc.setState(0x1e38, 0x16b3, 0x5fe0, 0xa4a3, 0x1c7c, 0x84e8, 0x0, 0x1);
        gbc.writeMem(0x1e38, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x16b3, gbc.sp());
        EXPECT(0x1e3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 01DC
        gbc.setState(0x11a, 0x8100, 0xdd40, 0xc3e1, 0x757, 0xc2ca, 0x0, 0x1);
        gbc.writeMem(0x11a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8100, gbc.sp());
        EXPECT(0x11c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 01DD
        gbc.setState(0x3b4b, 0xe2da, 0x6610, 0x56e8, 0xef99, 0x36c6, 0x0, 0x1);
        gbc.writeMem(0x3b4b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe2da, gbc.sp());
        EXPECT(0x3b4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 01DE
        gbc.setState(0x7058, 0xf50a, 0x2a30, 0xa73c, 0x5e3f, 0xa3c6, 0x1, 0x0);
        gbc.writeMem(0x7058, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf50a, gbc.sp());
        EXPECT(0x705a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 01DF
        gbc.setState(0xc123, 0x54d4, 0x8050, 0x92f3, 0xf2e2, 0xdfeb, 0x0, 0x0);
        gbc.writeMem(0xc123, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x54d4, gbc.sp());
        EXPECT(0xc125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc123));
        EXPECT(0xe9, gbc.readMem(0xc124));
        // CB E9 01E0
        gbc.setState(0x9324, 0xfae1, 0xcb90, 0xf61, 0xc2fd, 0x4b7f, 0x0, 0x0);
        gbc.writeMem(0x9324, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xfae1, gbc.sp());
        EXPECT(0x9326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9324));
        EXPECT(0xe9, gbc.readMem(0x9325));
        // CB E9 01E1
        gbc.setState(0xc783, 0xcb42, 0x7300, 0xb0f9, 0x3bf8, 0x2473, 0x0, 0x0);
        gbc.writeMem(0xc783, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xcb42, gbc.sp());
        EXPECT(0xc785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc783));
        EXPECT(0xe9, gbc.readMem(0xc784));
        // CB E9 01E2
        gbc.setState(0xb5dd, 0x9b54, 0xcad0, 0x8cdc, 0x40d5, 0x2ca1, 0x0, 0x0);
        gbc.writeMem(0xb5dd, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9b54, gbc.sp());
        EXPECT(0xb5df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5dd));
        EXPECT(0xe9, gbc.readMem(0xb5de));
        // CB E9 01E3
        gbc.setState(0x5612, 0x1a4d, 0xa3f0, 0x31c2, 0xa8d4, 0xb62, 0x1, 0x0);
        gbc.writeMem(0x5612, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1a4d, gbc.sp());
        EXPECT(0x5614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 01E5
        gbc.setState(0x7fae, 0xb13a, 0x5f70, 0x7513, 0xaaa6, 0x625, 0x1, 0x0);
        gbc.writeMem(0x7fae, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb13a, gbc.sp());
        EXPECT(0x7fb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 01E7
        gbc.setState(0x2596, 0x31da, 0x4ef0, 0xcb7a, 0xebd1, 0xcb6d, 0x0, 0x0);
        gbc.writeMem(0x2596, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x31da, gbc.sp());
        EXPECT(0x2598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 01E8
        gbc.setState(0x30ad, 0x71b9, 0x5c70, 0xef53, 0xb596, 0xdf9a, 0x1, 0x1);
        gbc.writeMem(0x30ad, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x71b9, gbc.sp());
        EXPECT(0x30af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 01E9
        gbc.setState(0xd53e, 0xe16, 0x7090, 0x52ad, 0xc6b, 0x1089, 0x1, 0x0);
        gbc.writeMem(0xd53e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe16, gbc.sp());
        EXPECT(0xd540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd53e));
        EXPECT(0xe9, gbc.readMem(0xd53f));
        // CB E9 01EA
        gbc.setState(0xe7b7, 0x385f, 0xd6c0, 0x2004, 0x4663, 0x330, 0x0, 0x1);
        gbc.writeMem(0xe7b7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x385f, gbc.sp());
        EXPECT(0xe7b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7b7));
        EXPECT(0xe9, gbc.readMem(0xe7b8));
        // CB E9 01EB
        gbc.setState(0x745e, 0x6e07, 0xe580, 0xee57, 0x4c29, 0xff3e, 0x1, 0x0);
        gbc.writeMem(0x745e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6e07, gbc.sp());
        EXPECT(0x7460, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 01EC
        gbc.setState(0xedda, 0x4e3b, 0xc5c0, 0x1589, 0x25d6, 0xec0d, 0x0, 0x0);
        gbc.writeMem(0xedda, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4e3b, gbc.sp());
        EXPECT(0xeddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedda));
        EXPECT(0xe9, gbc.readMem(0xeddb));
        // CB E9 01ED
        gbc.setState(0x853e, 0x5e9, 0xf40, 0xa76c, 0xf363, 0x11b0, 0x0, 0x0);
        gbc.writeMem(0x853e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5e9, gbc.sp());
        EXPECT(0x8540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x853e));
        EXPECT(0xe9, gbc.readMem(0x853f));
        // CB E9 01EF
        gbc.setState(0x6176, 0x6fbe, 0xb2c0, 0xd43c, 0x3988, 0x1871, 0x0, 0x0);
        gbc.writeMem(0x6176, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6fbe, gbc.sp());
        EXPECT(0x6178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 01F0
        gbc.setState(0x1efd, 0xd161, 0xf560, 0x65cd, 0x1e0a, 0xda4d, 0x1, 0x1);
        gbc.writeMem(0x1efd, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd161, gbc.sp());
        EXPECT(0x1eff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 01F1
        gbc.setState(0x713d, 0xb606, 0x4780, 0xc9b, 0xc415, 0x85a8, 0x1, 0x1);
        gbc.writeMem(0x713d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb606, gbc.sp());
        EXPECT(0x713f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 01F2
        gbc.setState(0xedd0, 0xbbb3, 0x21a0, 0x4312, 0x3935, 0x558e, 0x0, 0x1);
        gbc.writeMem(0xedd0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xbbb3, gbc.sp());
        EXPECT(0xedd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedd0));
        EXPECT(0xe9, gbc.readMem(0xedd1));
        // CB E9 01F3
        gbc.setState(0x9a2d, 0x56d5, 0x2f10, 0xefa5, 0xce1a, 0x486b, 0x0, 0x1);
        gbc.writeMem(0x9a2d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x56d5, gbc.sp());
        EXPECT(0x9a2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a2d));
        EXPECT(0xe9, gbc.readMem(0x9a2e));
        // CB E9 01F4
        gbc.setState(0xcd1, 0xda19, 0x1850, 0xb9, 0xada, 0x9fb1, 0x0, 0x1);
        gbc.writeMem(0xcd1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xda19, gbc.sp());
        EXPECT(0xcd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 01F6
        gbc.setState(0xd97a, 0xb5b7, 0xee40, 0x3d02, 0xa6f, 0x5a91, 0x0, 0x0);
        gbc.writeMem(0xd97a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb5b7, gbc.sp());
        EXPECT(0xd97c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd97a));
        EXPECT(0xe9, gbc.readMem(0xd97b));
        // CB E9 01F7
        gbc.setState(0x7efa, 0x17dd, 0xfba0, 0x1d44, 0x4f34, 0xbe2, 0x0, 0x1);
        gbc.writeMem(0x7efa, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x17dd, gbc.sp());
        EXPECT(0x7efc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 01F8
        gbc.setState(0xebe5, 0xb9a9, 0x26a0, 0x11fe, 0xa986, 0xb891, 0x0, 0x0);
        gbc.writeMem(0xebe5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb9a9, gbc.sp());
        EXPECT(0xebe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebe5));
        EXPECT(0xe9, gbc.readMem(0xebe6));
        // CB E9 01F9
        gbc.setState(0xa1b9, 0x61df, 0x9e20, 0xd09d, 0x91e4, 0x71d6, 0x1, 0x0);
        gbc.writeMem(0xa1b9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x61df, gbc.sp());
        EXPECT(0xa1bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1b9));
        EXPECT(0xe9, gbc.readMem(0xa1ba));
        // CB E9 01FA
        gbc.setState(0x7fbc, 0x1ef6, 0x1860, 0x6158, 0xe6e1, 0x6101, 0x1, 0x1);
        gbc.writeMem(0x7fbc, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1ef6, gbc.sp());
        EXPECT(0x7fbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 01FB
        gbc.setState(0x7447, 0x9d69, 0x22f0, 0x4848, 0x42b6, 0x1e99, 0x1, 0x0);
        gbc.writeMem(0x7447, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9d69, gbc.sp());
        EXPECT(0x7449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 01FC
        gbc.setState(0x820d, 0x19cd, 0x2ca0, 0x1ab9, 0x94d, 0x373, 0x1, 0x1);
        gbc.writeMem(0x820d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x19cd, gbc.sp());
        EXPECT(0x820f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x820d));
        EXPECT(0xe9, gbc.readMem(0x820e));
        // CB E9 01FD
        gbc.setState(0x8318, 0xe631, 0x3c80, 0xac57, 0x1b3e, 0x4503, 0x0, 0x1);
        gbc.writeMem(0x8318, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe631, gbc.sp());
        EXPECT(0x831a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8318));
        EXPECT(0xe9, gbc.readMem(0x8319));
        // CB E9 01FE
        gbc.setState(0x388, 0xdc09, 0x1a40, 0x8864, 0xfb6d, 0xa63f, 0x1, 0x0);
        gbc.writeMem(0x388, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xdc09, gbc.sp());
        EXPECT(0x38a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 01FF
        gbc.setState(0xa510, 0xe5c4, 0xd590, 0x6ce, 0x1b21, 0xf88, 0x0, 0x0);
        gbc.writeMem(0xa510, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe5c4, gbc.sp());
        EXPECT(0xa512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa510));
        EXPECT(0xe9, gbc.readMem(0xa511));
        // CB E9 0200
        gbc.setState(0x5ab6, 0x9a07, 0x1370, 0xdaf0, 0xea9c, 0x200c, 0x1, 0x0);
        gbc.writeMem(0x5ab6, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9a07, gbc.sp());
        EXPECT(0x5ab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0201
        gbc.setState(0x49b2, 0x2ab5, 0x6610, 0x340c, 0x39b7, 0xbeb1, 0x1, 0x1);
        gbc.writeMem(0x49b2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2ab5, gbc.sp());
        EXPECT(0x49b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0202
        gbc.setState(0xa4c1, 0x2216, 0x45e0, 0x9d40, 0xb23b, 0xe9aa, 0x0, 0x1);
        gbc.writeMem(0xa4c1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2216, gbc.sp());
        EXPECT(0xa4c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4c1));
        EXPECT(0xe9, gbc.readMem(0xa4c2));
        // CB E9 0203
        gbc.setState(0x7290, 0x24b7, 0x8c00, 0x5d24, 0x2a1b, 0xe9bd, 0x0, 0x1);
        gbc.writeMem(0x7290, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x24b7, gbc.sp());
        EXPECT(0x7292, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0204
        gbc.setState(0x775e, 0x61f3, 0x2d00, 0x8ae4, 0x8a06, 0x8632, 0x0, 0x0);
        gbc.writeMem(0x775e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x61f3, gbc.sp());
        EXPECT(0x7760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0205
        gbc.setState(0x21a, 0x67c, 0xcac0, 0x4d8a, 0xf34c, 0xa450, 0x0, 0x0);
        gbc.writeMem(0x21a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x67c, gbc.sp());
        EXPECT(0x21c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0206
        gbc.setState(0x55d1, 0x4f0b, 0xdaf0, 0x7ea6, 0x8d8e, 0xded6, 0x0, 0x0);
        gbc.writeMem(0x55d1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4f0b, gbc.sp());
        EXPECT(0x55d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0207
        gbc.setState(0xe5d5, 0x55d2, 0x94f0, 0x2c44, 0x4e16, 0x940f, 0x0, 0x1);
        gbc.writeMem(0xe5d5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x55d2, gbc.sp());
        EXPECT(0xe5d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5d5));
        EXPECT(0xe9, gbc.readMem(0xe5d6));
        // CB E9 0208
        gbc.setState(0x4881, 0xdd9f, 0xffe0, 0x6ea8, 0xd35f, 0xae6, 0x0, 0x1);
        gbc.writeMem(0x4881, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xdd9f, gbc.sp());
        EXPECT(0x4883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0209
        gbc.setState(0x1e77, 0x2fc1, 0x8e10, 0x4e3, 0x43ea, 0x6c91, 0x0, 0x0);
        gbc.writeMem(0x1e77, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2fc1, gbc.sp());
        EXPECT(0x1e79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 020A
        gbc.setState(0xa36f, 0xadd4, 0x1860, 0x1ad2, 0xc396, 0xe7e5, 0x1, 0x1);
        gbc.writeMem(0xa36f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xadd4, gbc.sp());
        EXPECT(0xa371, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa36f));
        EXPECT(0xe9, gbc.readMem(0xa370));
        // CB E9 020B
        gbc.setState(0x946, 0xd4cf, 0xeb10, 0xc1e5, 0x936e, 0x9952, 0x1, 0x1);
        gbc.writeMem(0x946, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd4cf, gbc.sp());
        EXPECT(0x948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 020C
        gbc.setState(0x1f4e, 0xa58c, 0xd2d0, 0xd51c, 0x8570, 0xa280, 0x1, 0x1);
        gbc.writeMem(0x1f4e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa58c, gbc.sp());
        EXPECT(0x1f50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 020D
        gbc.setState(0x9a, 0xaf1f, 0x4740, 0x5581, 0xa2a4, 0xb520, 0x1, 0x0);
        gbc.writeMem(0x9a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xaf1f, gbc.sp());
        EXPECT(0x9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 020E
        gbc.setState(0x8743, 0x59ac, 0xd80, 0x2f18, 0x458a, 0x4409, 0x1, 0x0);
        gbc.writeMem(0x8743, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x59ac, gbc.sp());
        EXPECT(0x8745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8743));
        EXPECT(0xe9, gbc.readMem(0x8744));
        // CB E9 020F
        gbc.setState(0x257, 0xebd5, 0xb00, 0x774c, 0x23c6, 0x9735, 0x0, 0x0);
        gbc.writeMem(0x257, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xebd5, gbc.sp());
        EXPECT(0x259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0210
        gbc.setState(0x5330, 0xaa82, 0xf210, 0x2a76, 0x7f39, 0xcdc, 0x0, 0x0);
        gbc.writeMem(0x5330, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xaa82, gbc.sp());
        EXPECT(0x5332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0211
        gbc.setState(0x78d5, 0x2d95, 0x4180, 0xfa75, 0x9c8, 0x7772, 0x0, 0x0);
        gbc.writeMem(0x78d5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2d95, gbc.sp());
        EXPECT(0x78d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0212
        gbc.setState(0xa7d0, 0xf1b7, 0x9e30, 0x69c, 0xf34b, 0x9669, 0x0, 0x1);
        gbc.writeMem(0xa7d0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf1b7, gbc.sp());
        EXPECT(0xa7d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7d0));
        EXPECT(0xe9, gbc.readMem(0xa7d1));
        // CB E9 0213
        gbc.setState(0xb178, 0xbb41, 0xe340, 0x7dd7, 0x7538, 0x25c6, 0x1, 0x0);
        gbc.writeMem(0xb178, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xbb41, gbc.sp());
        EXPECT(0xb17a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb178));
        EXPECT(0xe9, gbc.readMem(0xb179));
        // CB E9 0214
        gbc.setState(0x2af9, 0x9a07, 0x71e0, 0x18bd, 0xf8cb, 0x987f, 0x0, 0x0);
        gbc.writeMem(0x2af9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9a07, gbc.sp());
        EXPECT(0x2afb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0215
        gbc.setState(0x5c40, 0x73d9, 0x6250, 0x71e1, 0xa194, 0x6fe8, 0x0, 0x0);
        gbc.writeMem(0x5c40, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x73d9, gbc.sp());
        EXPECT(0x5c42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0216
        gbc.setState(0xdf36, 0x8640, 0xa5e0, 0xb938, 0xbeb, 0xdb74, 0x0, 0x1);
        gbc.writeMem(0xdf36, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8640, gbc.sp());
        EXPECT(0xdf38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf36));
        EXPECT(0xe9, gbc.readMem(0xdf37));
        // CB E9 0217
        gbc.setState(0x348a, 0xea8b, 0x8190, 0x205d, 0x8d4a, 0xf8, 0x0, 0x1);
        gbc.writeMem(0x348a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xea8b, gbc.sp());
        EXPECT(0x348c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0218
        gbc.setState(0x299f, 0x8605, 0xfd00, 0x5bdd, 0xac12, 0x4842, 0x1, 0x0);
        gbc.writeMem(0x299f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8605, gbc.sp());
        EXPECT(0x29a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0219
        gbc.setState(0xbba0, 0x8e97, 0xc640, 0x7d8d, 0xdc38, 0x6c1b, 0x0, 0x1);
        gbc.writeMem(0xbba0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8e97, gbc.sp());
        EXPECT(0xbba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbba0));
        EXPECT(0xe9, gbc.readMem(0xbba1));
        // CB E9 021A
        gbc.setState(0x728f, 0x240f, 0x430, 0x904d, 0x20fa, 0x6469, 0x1, 0x0);
        gbc.writeMem(0x728f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x240f, gbc.sp());
        EXPECT(0x7291, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 021B
        gbc.setState(0xe1a0, 0xfde6, 0xc1a0, 0x4d57, 0x8c70, 0x1c57, 0x0, 0x0);
        gbc.writeMem(0xe1a0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfde6, gbc.sp());
        EXPECT(0xe1a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1a0));
        EXPECT(0xe9, gbc.readMem(0xe1a1));
        // CB E9 021C
        gbc.setState(0xa93e, 0x2fb9, 0xdbc0, 0xcb7f, 0xfea9, 0x2395, 0x0, 0x1);
        gbc.writeMem(0xa93e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2fb9, gbc.sp());
        EXPECT(0xa940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa93e));
        EXPECT(0xe9, gbc.readMem(0xa93f));
        // CB E9 021D
        gbc.setState(0xaed6, 0xdcb1, 0x7270, 0x590c, 0xd1f7, 0xc975, 0x0, 0x0);
        gbc.writeMem(0xaed6, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xdcb1, gbc.sp());
        EXPECT(0xaed8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaed6));
        EXPECT(0xe9, gbc.readMem(0xaed7));
        // CB E9 021E
        gbc.setState(0xb3b8, 0x5791, 0x2f20, 0xa22e, 0xd006, 0xfa48, 0x0, 0x0);
        gbc.writeMem(0xb3b8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5791, gbc.sp());
        EXPECT(0xb3ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3b8));
        EXPECT(0xe9, gbc.readMem(0xb3b9));
        // CB E9 021F
        gbc.setState(0xc59e, 0x7ca2, 0x2b90, 0xc104, 0xd966, 0x8c0e, 0x1, 0x1);
        gbc.writeMem(0xc59e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7ca2, gbc.sp());
        EXPECT(0xc5a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc59e));
        EXPECT(0xe9, gbc.readMem(0xc59f));
        // CB E9 0221
        gbc.setState(0x2692, 0x4728, 0x29c0, 0x817f, 0xe8b, 0xa9b5, 0x1, 0x1);
        gbc.writeMem(0x2692, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4728, gbc.sp());
        EXPECT(0x2694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0222
        gbc.setState(0x3993, 0x2025, 0xf0c0, 0xf6c7, 0x590b, 0x30d3, 0x1, 0x1);
        gbc.writeMem(0x3993, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2025, gbc.sp());
        EXPECT(0x3995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0223
        gbc.setState(0x81d1, 0xe458, 0xc370, 0x679e, 0xc139, 0x5b7c, 0x0, 0x0);
        gbc.writeMem(0x81d1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe458, gbc.sp());
        EXPECT(0x81d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81d1));
        EXPECT(0xe9, gbc.readMem(0x81d2));
        // CB E9 0224
        gbc.setState(0x171b, 0x7251, 0x8650, 0xbb57, 0x8eb5, 0x84a5, 0x0, 0x1);
        gbc.writeMem(0x171b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7251, gbc.sp());
        EXPECT(0x171d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0225
        gbc.setState(0x24fe, 0xd74a, 0x9f20, 0xb701, 0x72b4, 0x8577, 0x1, 0x0);
        gbc.writeMem(0x24fe, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd74a, gbc.sp());
        EXPECT(0x2500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0226
        gbc.setState(0xbeba, 0xe954, 0x25a0, 0x3684, 0x2e9, 0xcfa9, 0x1, 0x0);
        gbc.writeMem(0xbeba, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe954, gbc.sp());
        EXPECT(0xbebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeba));
        EXPECT(0xe9, gbc.readMem(0xbebb));
        // CB E9 0227
        gbc.setState(0x3671, 0xd008, 0xc90, 0x6aad, 0x48e, 0x406f, 0x0, 0x1);
        gbc.writeMem(0x3671, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd008, gbc.sp());
        EXPECT(0x3673, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0228
        gbc.setState(0x98d1, 0x2ae2, 0x2430, 0x48a0, 0x81b2, 0x58d9, 0x0, 0x1);
        gbc.writeMem(0x98d1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2ae2, gbc.sp());
        EXPECT(0x98d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98d1));
        EXPECT(0xe9, gbc.readMem(0x98d2));
        // CB E9 0229
        gbc.setState(0x6638, 0xd03c, 0x9310, 0x969b, 0x5cb4, 0x53e5, 0x0, 0x0);
        gbc.writeMem(0x6638, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd03c, gbc.sp());
        EXPECT(0x663a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 022A
        gbc.setState(0x240d, 0x6b2e, 0xeb20, 0x803d, 0x154, 0x7b2e, 0x1, 0x1);
        gbc.writeMem(0x240d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6b2e, gbc.sp());
        EXPECT(0x240f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 022B
        gbc.setState(0x6867, 0xc69, 0x89f0, 0x404f, 0xb938, 0x3c0a, 0x1, 0x1);
        gbc.writeMem(0x6867, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc69, gbc.sp());
        EXPECT(0x6869, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 022C
        gbc.setState(0x5591, 0x91e3, 0xd9f0, 0xefd0, 0xe613, 0x425f, 0x1, 0x1);
        gbc.writeMem(0x5591, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x91e3, gbc.sp());
        EXPECT(0x5593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 022D
        gbc.setState(0x3232, 0xc778, 0x14d0, 0x9372, 0xc7e1, 0x8161, 0x1, 0x1);
        gbc.writeMem(0x3232, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc778, gbc.sp());
        EXPECT(0x3234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 022E
        gbc.setState(0x945, 0xca4e, 0x3a70, 0xfa09, 0x922e, 0x20ea, 0x1, 0x1);
        gbc.writeMem(0x945, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xca4e, gbc.sp());
        EXPECT(0x947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 022F
        gbc.setState(0x33f7, 0xd34, 0xc170, 0x1fcb, 0xed9c, 0x8d2b, 0x0, 0x1);
        gbc.writeMem(0x33f7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd34, gbc.sp());
        EXPECT(0x33f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0230
        gbc.setState(0x2e2c, 0x8a4a, 0x5b80, 0x576c, 0x1ca8, 0xfb2f, 0x1, 0x0);
        gbc.writeMem(0x2e2c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8a4a, gbc.sp());
        EXPECT(0x2e2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0231
        gbc.setState(0xc325, 0xac1f, 0x5ea0, 0xc284, 0x3236, 0x825c, 0x0, 0x1);
        gbc.writeMem(0xc325, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xac1f, gbc.sp());
        EXPECT(0xc327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc325));
        EXPECT(0xe9, gbc.readMem(0xc326));
        // CB E9 0232
        gbc.setState(0x888c, 0x8b4b, 0xf7d0, 0xfec0, 0xa4fd, 0x42b, 0x1, 0x0);
        gbc.writeMem(0x888c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8b4b, gbc.sp());
        EXPECT(0x888e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x888c));
        EXPECT(0xe9, gbc.readMem(0x888d));
        // CB E9 0233
        gbc.setState(0x512, 0xb08d, 0x920, 0xd8cc, 0x3fec, 0xb142, 0x0, 0x1);
        gbc.writeMem(0x512, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb08d, gbc.sp());
        EXPECT(0x514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0234
        gbc.setState(0x6213, 0x956a, 0xb2d0, 0xf10b, 0x6004, 0xe85d, 0x1, 0x0);
        gbc.writeMem(0x6213, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x956a, gbc.sp());
        EXPECT(0x6215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0235
        gbc.setState(0xd673, 0x2d86, 0xc2c0, 0x4bf4, 0xda1a, 0x5059, 0x0, 0x1);
        gbc.writeMem(0xd673, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2d86, gbc.sp());
        EXPECT(0xd675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd673));
        EXPECT(0xe9, gbc.readMem(0xd674));
        // CB E9 0236
        gbc.setState(0x6a1c, 0xe33f, 0x3840, 0x4890, 0x3974, 0x53f1, 0x1, 0x1);
        gbc.writeMem(0x6a1c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe33f, gbc.sp());
        EXPECT(0x6a1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0237
        gbc.setState(0x2bd5, 0x6f12, 0xd770, 0x4c68, 0xc1ab, 0x9b64, 0x0, 0x1);
        gbc.writeMem(0x2bd5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6f12, gbc.sp());
        EXPECT(0x2bd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0238
        gbc.setState(0x46cb, 0x7838, 0xc030, 0x440c, 0x38d, 0x4eb8, 0x0, 0x1);
        gbc.writeMem(0x46cb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7838, gbc.sp());
        EXPECT(0x46cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0239
        gbc.setState(0x4241, 0xcf3f, 0x70a0, 0x43dd, 0xf89a, 0x7438, 0x0, 0x0);
        gbc.writeMem(0x4241, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xcf3f, gbc.sp());
        EXPECT(0x4243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 023A
        gbc.setState(0x54d2, 0x67eb, 0x9a50, 0x5013, 0x2cbd, 0xc00f, 0x0, 0x0);
        gbc.writeMem(0x54d2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x67eb, gbc.sp());
        EXPECT(0x54d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 023B
        gbc.setState(0x192c, 0x7301, 0xc030, 0x8d5f, 0x6ddb, 0x76ed, 0x0, 0x1);
        gbc.writeMem(0x192c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7301, gbc.sp());
        EXPECT(0x192e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 023C
        gbc.setState(0x95e2, 0x4ad1, 0x3900, 0x90fe, 0x2ac9, 0x7e78, 0x0, 0x1);
        gbc.writeMem(0x95e2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4ad1, gbc.sp());
        EXPECT(0x95e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95e2));
        EXPECT(0xe9, gbc.readMem(0x95e3));
        // CB E9 023D
        gbc.setState(0xaa9f, 0x5c4, 0x28a0, 0x7ec3, 0x7050, 0xde95, 0x0, 0x1);
        gbc.writeMem(0xaa9f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5c4, gbc.sp());
        EXPECT(0xaaa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa9f));
        EXPECT(0xe9, gbc.readMem(0xaaa0));
        // CB E9 023E
        gbc.setState(0x9862, 0x2080, 0x6ef0, 0xa318, 0x18f2, 0x7bc9, 0x0, 0x1);
        gbc.writeMem(0x9862, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2080, gbc.sp());
        EXPECT(0x9864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9862));
        EXPECT(0xe9, gbc.readMem(0x9863));
        // CB E9 023F
        gbc.setState(0x52e4, 0x7008, 0x2af0, 0xafd, 0x39f8, 0x146f, 0x1, 0x1);
        gbc.writeMem(0x52e4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7008, gbc.sp());
        EXPECT(0x52e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0240
        gbc.setState(0x204a, 0xe5a4, 0xca00, 0x2d4d, 0xe307, 0x5b89, 0x1, 0x0);
        gbc.writeMem(0x204a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe5a4, gbc.sp());
        EXPECT(0x204c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0241
        gbc.setState(0xa284, 0xb352, 0x8c00, 0x27ac, 0xd8c, 0x6cca, 0x0, 0x1);
        gbc.writeMem(0xa284, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb352, gbc.sp());
        EXPECT(0xa286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa284));
        EXPECT(0xe9, gbc.readMem(0xa285));
        // CB E9 0242
        gbc.setState(0x8c90, 0xad06, 0xa90, 0x2028, 0x109d, 0xf038, 0x1, 0x0);
        gbc.writeMem(0x8c90, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xad06, gbc.sp());
        EXPECT(0x8c92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c90));
        EXPECT(0xe9, gbc.readMem(0x8c91));
        // CB E9 0243
        gbc.setState(0x75f, 0x51ae, 0xdd60, 0xfb14, 0xb8ad, 0xda0, 0x0, 0x0);
        gbc.writeMem(0x75f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x51ae, gbc.sp());
        EXPECT(0x761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0244
        gbc.setState(0xc957, 0x7459, 0xe7b0, 0x881a, 0xe6b2, 0xf258, 0x0, 0x1);
        gbc.writeMem(0xc957, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7459, gbc.sp());
        EXPECT(0xc959, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc957));
        EXPECT(0xe9, gbc.readMem(0xc958));
        // CB E9 0245
        gbc.setState(0xa18d, 0x765b, 0x9d10, 0xa84e, 0x98f, 0xf4f1, 0x1, 0x1);
        gbc.writeMem(0xa18d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x765b, gbc.sp());
        EXPECT(0xa18f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa18d));
        EXPECT(0xe9, gbc.readMem(0xa18e));
        // CB E9 0246
        gbc.setState(0xaa2c, 0x12f3, 0x4780, 0x241c, 0xa541, 0xab1c, 0x0, 0x1);
        gbc.writeMem(0xaa2c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x12f3, gbc.sp());
        EXPECT(0xaa2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa2c));
        EXPECT(0xe9, gbc.readMem(0xaa2d));
        // CB E9 0247
        gbc.setState(0x1465, 0x24f7, 0x1ed0, 0x3374, 0xa1c8, 0xda46, 0x0, 0x0);
        gbc.writeMem(0x1465, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x24f7, gbc.sp());
        EXPECT(0x1467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0248
        gbc.setState(0xa3f9, 0x8961, 0xf2d0, 0x2d6c, 0x71c1, 0xa9d4, 0x1, 0x1);
        gbc.writeMem(0xa3f9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8961, gbc.sp());
        EXPECT(0xa3fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3f9));
        EXPECT(0xe9, gbc.readMem(0xa3fa));
        // CB E9 0249
        gbc.setState(0x7616, 0x1f39, 0x47d0, 0x93af, 0x7135, 0x784b, 0x0, 0x0);
        gbc.writeMem(0x7616, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1f39, gbc.sp());
        EXPECT(0x7618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 024A
        gbc.setState(0xaa93, 0x969a, 0x1460, 0xe4e2, 0xe4de, 0xc073, 0x1, 0x0);
        gbc.writeMem(0xaa93, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x969a, gbc.sp());
        EXPECT(0xaa95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa93));
        EXPECT(0xe9, gbc.readMem(0xaa94));
        // CB E9 024B
        gbc.setState(0x97d7, 0x40de, 0xdaf0, 0x62ba, 0x1bc1, 0xb5df, 0x1, 0x0);
        gbc.writeMem(0x97d7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x40de, gbc.sp());
        EXPECT(0x97d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97d7));
        EXPECT(0xe9, gbc.readMem(0x97d8));
        // CB E9 024C
        gbc.setState(0xec36, 0x2ec8, 0xb250, 0x18d3, 0x7cae, 0x3e78, 0x1, 0x1);
        gbc.writeMem(0xec36, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2ec8, gbc.sp());
        EXPECT(0xec38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec36));
        EXPECT(0xe9, gbc.readMem(0xec37));
        // CB E9 024D
        gbc.setState(0x58aa, 0xf26d, 0x4790, 0xac1e, 0x5b79, 0xbfb0, 0x1, 0x1);
        gbc.writeMem(0x58aa, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf26d, gbc.sp());
        EXPECT(0x58ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 024E
        gbc.setState(0x13b9, 0xd856, 0xcdb0, 0x91b8, 0xf1f5, 0xc7cb, 0x0, 0x1);
        gbc.writeMem(0x13b9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd856, gbc.sp());
        EXPECT(0x13bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 024F
        gbc.setState(0x1c4a, 0x3127, 0xaa0, 0x8671, 0x1879, 0x52b7, 0x0, 0x0);
        gbc.writeMem(0x1c4a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3127, gbc.sp());
        EXPECT(0x1c4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0250
        gbc.setState(0x6564, 0x8998, 0xce0, 0xdea1, 0xc1e4, 0xa90d, 0x0, 0x1);
        gbc.writeMem(0x6564, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8998, gbc.sp());
        EXPECT(0x6566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0251
        gbc.setState(0x131e, 0x1c2f, 0x7db0, 0xacf9, 0x1f2b, 0xd266, 0x0, 0x0);
        gbc.writeMem(0x131e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1c2f, gbc.sp());
        EXPECT(0x1320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0252
        gbc.setState(0x4347, 0x21cf, 0xab10, 0xcaf0, 0x55a3, 0x7ebc, 0x1, 0x1);
        gbc.writeMem(0x4347, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x21cf, gbc.sp());
        EXPECT(0x4349, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0253
        gbc.setState(0xdb0d, 0xf879, 0x46e0, 0xfd7d, 0x185d, 0x59, 0x0, 0x0);
        gbc.writeMem(0xdb0d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf879, gbc.sp());
        EXPECT(0xdb0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb0d));
        EXPECT(0xe9, gbc.readMem(0xdb0e));
        // CB E9 0254
        gbc.setState(0x5765, 0xd495, 0x9110, 0x663b, 0x9ca3, 0x3bd8, 0x1, 0x1);
        gbc.writeMem(0x5765, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd495, gbc.sp());
        EXPECT(0x5767, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0255
        gbc.setState(0x2f68, 0x62ec, 0x9dc0, 0x7a35, 0x6d8c, 0x2b34, 0x0, 0x1);
        gbc.writeMem(0x2f68, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x62ec, gbc.sp());
        EXPECT(0x2f6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0256
        gbc.setState(0x5a48, 0x3784, 0xf240, 0xb77d, 0x97a1, 0x7eda, 0x1, 0x1);
        gbc.writeMem(0x5a48, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3784, gbc.sp());
        EXPECT(0x5a4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0257
        gbc.setState(0x5acc, 0xbe1f, 0x4db0, 0x756f, 0xf7bd, 0x557f, 0x0, 0x0);
        gbc.writeMem(0x5acc, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xbe1f, gbc.sp());
        EXPECT(0x5ace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0259
        gbc.setState(0x4741, 0x53bc, 0x2120, 0x1995, 0xb98a, 0xd19, 0x1, 0x0);
        gbc.writeMem(0x4741, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x53bc, gbc.sp());
        EXPECT(0x4743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 025A
        gbc.setState(0x2afb, 0x373a, 0xd490, 0x777, 0xc09, 0x4ab6, 0x1, 0x1);
        gbc.writeMem(0x2afb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x373a, gbc.sp());
        EXPECT(0x2afd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 025B
        gbc.setState(0x92de, 0xd8e3, 0x89d0, 0x3767, 0xfde2, 0x1aee, 0x0, 0x1);
        gbc.writeMem(0x92de, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd8e3, gbc.sp());
        EXPECT(0x92e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92de));
        EXPECT(0xe9, gbc.readMem(0x92df));
        // CB E9 025C
        gbc.setState(0x927e, 0x96b9, 0x3a50, 0xb94c, 0xa5ec, 0x82f8, 0x1, 0x1);
        gbc.writeMem(0x927e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x96b9, gbc.sp());
        EXPECT(0x9280, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x927e));
        EXPECT(0xe9, gbc.readMem(0x927f));
        // CB E9 025D
        gbc.setState(0x2def, 0xaffd, 0x27e0, 0x9afb, 0x7c0d, 0x2b9c, 0x0, 0x1);
        gbc.writeMem(0x2def, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xaffd, gbc.sp());
        EXPECT(0x2df1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 025F
        gbc.setState(0xcdf, 0xdca1, 0x3ff0, 0x9c94, 0x203e, 0x354, 0x0, 0x0);
        gbc.writeMem(0xcdf, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xdca1, gbc.sp());
        EXPECT(0xce1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0260
        gbc.setState(0x70ba, 0x8cf5, 0x4750, 0xa05c, 0x35dc, 0x73c2, 0x1, 0x1);
        gbc.writeMem(0x70ba, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8cf5, gbc.sp());
        EXPECT(0x70bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0261
        gbc.setState(0x41fb, 0xcbeb, 0x6080, 0xb36, 0xe387, 0x9dec, 0x0, 0x0);
        gbc.writeMem(0x41fb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xcbeb, gbc.sp());
        EXPECT(0x41fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0262
        gbc.setState(0xbceb, 0x58c3, 0xaac0, 0xd630, 0xacae, 0x77be, 0x0, 0x1);
        gbc.writeMem(0xbceb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x58c3, gbc.sp());
        EXPECT(0xbced, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbceb));
        EXPECT(0xe9, gbc.readMem(0xbcec));
        // CB E9 0263
        gbc.setState(0xb18f, 0x1a61, 0xf6c0, 0x3278, 0x6db, 0x5a4a, 0x0, 0x0);
        gbc.writeMem(0xb18f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1a61, gbc.sp());
        EXPECT(0xb191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb18f));
        EXPECT(0xe9, gbc.readMem(0xb190));
        // CB E9 0264
        gbc.setState(0x4d1f, 0x4b3c, 0x7eb0, 0x928e, 0x43db, 0xc548, 0x0, 0x0);
        gbc.writeMem(0x4d1f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4b3c, gbc.sp());
        EXPECT(0x4d21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0265
        gbc.setState(0x8ab9, 0x217e, 0xfb40, 0xd4a8, 0x3631, 0x316f, 0x0, 0x0);
        gbc.writeMem(0x8ab9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x217e, gbc.sp());
        EXPECT(0x8abb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ab9));
        EXPECT(0xe9, gbc.readMem(0x8aba));
        // CB E9 0266
        gbc.setState(0x5c9, 0x766b, 0xae70, 0x232d, 0xb1db, 0x1011, 0x0, 0x0);
        gbc.writeMem(0x5c9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x766b, gbc.sp());
        EXPECT(0x5cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0267
        gbc.setState(0x12a9, 0x5513, 0x83c0, 0x6418, 0xa912, 0x9499, 0x1, 0x1);
        gbc.writeMem(0x12a9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5513, gbc.sp());
        EXPECT(0x12ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0268
        gbc.setState(0xa023, 0x76db, 0x13f0, 0xefda, 0x3ddd, 0xe878, 0x1, 0x1);
        gbc.writeMem(0xa023, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x76db, gbc.sp());
        EXPECT(0xa025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa023));
        EXPECT(0xe9, gbc.readMem(0xa024));
        // CB E9 0269
        gbc.setState(0x8702, 0x6883, 0x94b0, 0x82e9, 0xece0, 0x9235, 0x1, 0x0);
        gbc.writeMem(0x8702, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6883, gbc.sp());
        EXPECT(0x8704, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8702));
        EXPECT(0xe9, gbc.readMem(0x8703));
        // CB E9 026A
        gbc.setState(0x852, 0x668c, 0x5fb0, 0xc2ab, 0x7cf5, 0x9b13, 0x1, 0x1);
        gbc.writeMem(0x852, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x668c, gbc.sp());
        EXPECT(0x854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 026B
        gbc.setState(0xa2a, 0x58f, 0x490, 0xf5b5, 0xc5b7, 0x2304, 0x1, 0x0);
        gbc.writeMem(0xa2a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x58f, gbc.sp());
        EXPECT(0xa2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 026C
        gbc.setState(0x5a1f, 0x61c9, 0x3d60, 0x59a9, 0x9fc1, 0xe636, 0x0, 0x0);
        gbc.writeMem(0x5a1f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x61c9, gbc.sp());
        EXPECT(0x5a21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 026D
        gbc.setState(0x11b2, 0x3dc6, 0x62c0, 0x42bd, 0x8908, 0x4212, 0x0, 0x0);
        gbc.writeMem(0x11b2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3dc6, gbc.sp());
        EXPECT(0x11b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 026E
        gbc.setState(0x2c24, 0xeea0, 0xff80, 0xf5ec, 0x66c8, 0x56ba, 0x0, 0x1);
        gbc.writeMem(0x2c24, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xeea0, gbc.sp());
        EXPECT(0x2c26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 026F
        gbc.setState(0xa125, 0x29ec, 0x4960, 0x90bf, 0xc0de, 0xea72, 0x0, 0x1);
        gbc.writeMem(0xa125, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x29ec, gbc.sp());
        EXPECT(0xa127, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa125));
        EXPECT(0xe9, gbc.readMem(0xa126));
        // CB E9 0270
        gbc.setState(0xbfd6, 0x3042, 0x5cc0, 0x506f, 0xaaef, 0x5d82, 0x1, 0x0);
        gbc.writeMem(0xbfd6, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3042, gbc.sp());
        EXPECT(0xbfd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfd6));
        EXPECT(0xe9, gbc.readMem(0xbfd7));
        // CB E9 0271
        gbc.setState(0x90f4, 0xd15e, 0xd860, 0x6dbe, 0x4784, 0x19d9, 0x0, 0x1);
        gbc.writeMem(0x90f4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd15e, gbc.sp());
        EXPECT(0x90f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90f4));
        EXPECT(0xe9, gbc.readMem(0x90f5));
        // CB E9 0273
        gbc.setState(0x9398, 0xc5d7, 0xda40, 0x176b, 0x79c0, 0xf61c, 0x0, 0x0);
        gbc.writeMem(0x9398, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc5d7, gbc.sp());
        EXPECT(0x939a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9398));
        EXPECT(0xe9, gbc.readMem(0x9399));
        // CB E9 0274
        gbc.setState(0x9737, 0xd642, 0xedc0, 0x934f, 0xbf21, 0xcf39, 0x0, 0x1);
        gbc.writeMem(0x9737, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd642, gbc.sp());
        EXPECT(0x9739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9737));
        EXPECT(0xe9, gbc.readMem(0x9738));
        // CB E9 0275
        gbc.setState(0x3a1d, 0x8c5f, 0x2890, 0x19dd, 0x9a96, 0x3a67, 0x1, 0x1);
        gbc.writeMem(0x3a1d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8c5f, gbc.sp());
        EXPECT(0x3a1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0276
        gbc.setState(0x6b83, 0x5c40, 0x98f0, 0x7dd5, 0xbfea, 0x2f2a, 0x0, 0x0);
        gbc.writeMem(0x6b83, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5c40, gbc.sp());
        EXPECT(0x6b85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0277
        gbc.setState(0xa81b, 0xe25b, 0xd020, 0xd91f, 0x8cc, 0xc451, 0x0, 0x0);
        gbc.writeMem(0xa81b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe25b, gbc.sp());
        EXPECT(0xa81d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa81b));
        EXPECT(0xe9, gbc.readMem(0xa81c));
        // CB E9 0278
        gbc.setState(0xe0e7, 0xad19, 0x4d50, 0x766f, 0xda98, 0x6b8d, 0x0, 0x1);
        gbc.writeMem(0xe0e7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xad19, gbc.sp());
        EXPECT(0xe0e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0e7));
        EXPECT(0xe9, gbc.readMem(0xe0e8));
        // CB E9 0279
        gbc.setState(0x51a9, 0xf24, 0xa540, 0xd5a6, 0xc85c, 0xca9f, 0x1, 0x1);
        gbc.writeMem(0x51a9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf24, gbc.sp());
        EXPECT(0x51ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 027A
        gbc.setState(0xbb68, 0x56cf, 0x4ea0, 0x8861, 0x25e3, 0x4a59, 0x1, 0x1);
        gbc.writeMem(0xbb68, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x56cf, gbc.sp());
        EXPECT(0xbb6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb68));
        EXPECT(0xe9, gbc.readMem(0xbb69));
        // CB E9 027B
        gbc.setState(0x7d98, 0x4847, 0xe690, 0xf698, 0xa15d, 0x2d87, 0x1, 0x0);
        gbc.writeMem(0x7d98, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4847, gbc.sp());
        EXPECT(0x7d9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 027C
        gbc.setState(0xce58, 0x7148, 0x27b0, 0x98a4, 0xcf78, 0xd42f, 0x0, 0x1);
        gbc.writeMem(0xce58, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7148, gbc.sp());
        EXPECT(0xce5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce58));
        EXPECT(0xe9, gbc.readMem(0xce59));
        // CB E9 027D
        gbc.setState(0x806d, 0x1f84, 0x1fa0, 0x1a32, 0x9a8f, 0xe0d7, 0x1, 0x1);
        gbc.writeMem(0x806d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1f84, gbc.sp());
        EXPECT(0x806f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x806d));
        EXPECT(0xe9, gbc.readMem(0x806e));
        // CB E9 027E
        gbc.setState(0xd63a, 0xf02c, 0xb2b0, 0x248c, 0xd59e, 0x235b, 0x0, 0x1);
        gbc.writeMem(0xd63a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf02c, gbc.sp());
        EXPECT(0xd63c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd63a));
        EXPECT(0xe9, gbc.readMem(0xd63b));
        // CB E9 027F
        gbc.setState(0x8eec, 0xd8ed, 0xe970, 0xe08b, 0x16f0, 0xd2e0, 0x1, 0x1);
        gbc.writeMem(0x8eec, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd8ed, gbc.sp());
        EXPECT(0x8eee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eec));
        EXPECT(0xe9, gbc.readMem(0x8eed));
        // CB E9 0280
        gbc.setState(0x1997, 0x7211, 0xa4a0, 0xdda8, 0x8ee0, 0x2516, 0x0, 0x0);
        gbc.writeMem(0x1997, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7211, gbc.sp());
        EXPECT(0x1999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0281
        gbc.setState(0x955b, 0x6a75, 0x20f0, 0x2032, 0xb413, 0xacd8, 0x0, 0x0);
        gbc.writeMem(0x955b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6a75, gbc.sp());
        EXPECT(0x955d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x955b));
        EXPECT(0xe9, gbc.readMem(0x955c));
        // CB E9 0282
        gbc.setState(0x30d6, 0xdbe1, 0xb9d0, 0x8d64, 0xf2b0, 0x653e, 0x1, 0x1);
        gbc.writeMem(0x30d6, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xdbe1, gbc.sp());
        EXPECT(0x30d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0283
        gbc.setState(0x7d14, 0x1d46, 0x9c70, 0x5f30, 0x2229, 0x49f2, 0x0, 0x1);
        gbc.writeMem(0x7d14, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1d46, gbc.sp());
        EXPECT(0x7d16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0284
        gbc.setState(0x39ca, 0x7447, 0x5390, 0x8fe3, 0x5ca3, 0x9dd4, 0x1, 0x1);
        gbc.writeMem(0x39ca, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7447, gbc.sp());
        EXPECT(0x39cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0285
        gbc.setState(0xab51, 0x5161, 0x6820, 0x839, 0x8db0, 0x6f6b, 0x0, 0x0);
        gbc.writeMem(0xab51, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5161, gbc.sp());
        EXPECT(0xab53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab51));
        EXPECT(0xe9, gbc.readMem(0xab52));
        // CB E9 0286
        gbc.setState(0xccfb, 0xadf, 0xb390, 0x2350, 0xb0fc, 0x56a6, 0x1, 0x1);
        gbc.writeMem(0xccfb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xadf, gbc.sp());
        EXPECT(0xccfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccfb));
        EXPECT(0xe9, gbc.readMem(0xccfc));
        // CB E9 0287
        gbc.setState(0x1a86, 0xa388, 0x6880, 0x67a3, 0x678f, 0x6852, 0x1, 0x1);
        gbc.writeMem(0x1a86, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa388, gbc.sp());
        EXPECT(0x1a88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0288
        gbc.setState(0x6a2b, 0x9e40, 0x48b0, 0xa9aa, 0x391f, 0xaf46, 0x1, 0x1);
        gbc.writeMem(0x6a2b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9e40, gbc.sp());
        EXPECT(0x6a2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0289
        gbc.setState(0x2e5b, 0xd92d, 0xe8d0, 0x6c2d, 0xcc66, 0xc50f, 0x0, 0x0);
        gbc.writeMem(0x2e5b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd92d, gbc.sp());
        EXPECT(0x2e5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 028A
        gbc.setState(0x2803, 0x6a38, 0xcf50, 0x3bf2, 0xcfaa, 0x10ac, 0x0, 0x0);
        gbc.writeMem(0x2803, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6a38, gbc.sp());
        EXPECT(0x2805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 028B
        gbc.setState(0xe9ed, 0x6a25, 0x4740, 0x667b, 0x321a, 0x3d15, 0x1, 0x1);
        gbc.writeMem(0xe9ed, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6a25, gbc.sp());
        EXPECT(0xe9ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ed));
        EXPECT(0xe9, gbc.readMem(0xe9ee));
        // CB E9 028C
        gbc.setState(0x1c37, 0xf89f, 0x2e80, 0x389, 0xd3e9, 0xb71b, 0x0, 0x0);
        gbc.writeMem(0x1c37, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf89f, gbc.sp());
        EXPECT(0x1c39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 028D
        gbc.setState(0x5975, 0xd534, 0x1ea0, 0x4504, 0x597c, 0x2a71, 0x1, 0x1);
        gbc.writeMem(0x5975, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd534, gbc.sp());
        EXPECT(0x5977, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 028E
        gbc.setState(0x6276, 0x3080, 0x9dc0, 0x43cb, 0x49de, 0x6f20, 0x0, 0x1);
        gbc.writeMem(0x6276, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3080, gbc.sp());
        EXPECT(0x6278, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 028F
        gbc.setState(0xed30, 0x429f, 0x1d40, 0xf794, 0x5b9e, 0xd0f5, 0x0, 0x0);
        gbc.writeMem(0xed30, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x429f, gbc.sp());
        EXPECT(0xed32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed30));
        EXPECT(0xe9, gbc.readMem(0xed31));
        // CB E9 0290
        gbc.setState(0x14a0, 0x9545, 0x7d70, 0x5066, 0xa128, 0x1f2f, 0x0, 0x0);
        gbc.writeMem(0x14a0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9545, gbc.sp());
        EXPECT(0x14a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0291
        gbc.setState(0x1b1e, 0xa146, 0x9a0, 0xe447, 0xa021, 0x1b3c, 0x0, 0x0);
        gbc.writeMem(0x1b1e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa146, gbc.sp());
        EXPECT(0x1b20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0292
        gbc.setState(0xdd97, 0x2677, 0x1e80, 0x561a, 0x13ec, 0xbd06, 0x0, 0x0);
        gbc.writeMem(0xdd97, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2677, gbc.sp());
        EXPECT(0xdd99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd97));
        EXPECT(0xe9, gbc.readMem(0xdd98));
        // CB E9 0293
        gbc.setState(0x220e, 0x65d6, 0xf420, 0xc19f, 0x2a3a, 0x933a, 0x1, 0x0);
        gbc.writeMem(0x220e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x65d6, gbc.sp());
        EXPECT(0x2210, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0294
        gbc.setState(0x4850, 0xd9fa, 0x4730, 0xf92e, 0xb380, 0x9c04, 0x0, 0x0);
        gbc.writeMem(0x4850, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd9fa, gbc.sp());
        EXPECT(0x4852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0295
        gbc.setState(0xed38, 0x5b62, 0x9be0, 0x1629, 0xfb4a, 0x2bd3, 0x1, 0x0);
        gbc.writeMem(0xed38, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5b62, gbc.sp());
        EXPECT(0xed3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed38));
        EXPECT(0xe9, gbc.readMem(0xed39));
        // CB E9 0297
        gbc.setState(0x1339, 0x110b, 0xf620, 0xfbfc, 0x7a00, 0xc925, 0x0, 0x0);
        gbc.writeMem(0x1339, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x110b, gbc.sp());
        EXPECT(0x133b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0298
        gbc.setState(0x8526, 0x3156, 0x4780, 0xa021, 0x6544, 0xbd8a, 0x0, 0x1);
        gbc.writeMem(0x8526, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3156, gbc.sp());
        EXPECT(0x8528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8526));
        EXPECT(0xe9, gbc.readMem(0x8527));
        // CB E9 0299
        gbc.setState(0xb5f3, 0xcab6, 0x9aa0, 0xf015, 0xa9ef, 0x8cd1, 0x0, 0x0);
        gbc.writeMem(0xb5f3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xcab6, gbc.sp());
        EXPECT(0xb5f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5f3));
        EXPECT(0xe9, gbc.readMem(0xb5f4));
        // CB E9 029A
        gbc.setState(0x9e0a, 0xcce7, 0xa040, 0xbf54, 0xbf7f, 0x119a, 0x0, 0x1);
        gbc.writeMem(0x9e0a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xcce7, gbc.sp());
        EXPECT(0x9e0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e0a));
        EXPECT(0xe9, gbc.readMem(0x9e0b));
        // CB E9 029B
        gbc.setState(0x4337, 0xfe1d, 0x7a40, 0x22a3, 0x65ee, 0xce04, 0x0, 0x1);
        gbc.writeMem(0x4337, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xfe1d, gbc.sp());
        EXPECT(0x4339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 029C
        gbc.setState(0xceb, 0x686b, 0x210, 0xd1b0, 0x6ad3, 0x5e54, 0x1, 0x0);
        gbc.writeMem(0xceb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x686b, gbc.sp());
        EXPECT(0xced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 029D
        gbc.setState(0x8a7d, 0x57a6, 0xb820, 0x6b75, 0x6740, 0xea4, 0x0, 0x0);
        gbc.writeMem(0x8a7d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x57a6, gbc.sp());
        EXPECT(0x8a7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a7d));
        EXPECT(0xe9, gbc.readMem(0x8a7e));
        // CB E9 029E
        gbc.setState(0xa72f, 0xeb32, 0xcc0, 0x56b2, 0x9806, 0x547, 0x1, 0x1);
        gbc.writeMem(0xa72f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xeb32, gbc.sp());
        EXPECT(0xa731, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa72f));
        EXPECT(0xe9, gbc.readMem(0xa730));
        // CB E9 029F
        gbc.setState(0x52f9, 0x87fc, 0xe630, 0xadbf, 0x83db, 0x8c1d, 0x0, 0x1);
        gbc.writeMem(0x52f9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x87fc, gbc.sp());
        EXPECT(0x52fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 02A0
        gbc.setState(0x82c, 0x8e7c, 0x8870, 0x3198, 0x5433, 0x5ba2, 0x1, 0x1);
        gbc.writeMem(0x82c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8e7c, gbc.sp());
        EXPECT(0x82e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 02A1
        gbc.setState(0xaff8, 0x8dc1, 0x2c40, 0x6c31, 0xfa81, 0x3444, 0x1, 0x1);
        gbc.writeMem(0xaff8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8dc1, gbc.sp());
        EXPECT(0xaffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaff8));
        EXPECT(0xe9, gbc.readMem(0xaff9));
        // CB E9 02A2
        gbc.setState(0x3554, 0xb551, 0x2e0, 0x80d2, 0x2d4f, 0xb93, 0x1, 0x1);
        gbc.writeMem(0x3554, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb551, gbc.sp());
        EXPECT(0x3556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02A3
        gbc.setState(0x5564, 0x998, 0x3b80, 0xf20c, 0xc9f0, 0xb3fe, 0x0, 0x1);
        gbc.writeMem(0x5564, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x998, gbc.sp());
        EXPECT(0x5566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02A4
        gbc.setState(0xb90e, 0x6b27, 0x5fc0, 0xb842, 0xa0e6, 0x593a, 0x1, 0x1);
        gbc.writeMem(0xb90e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6b27, gbc.sp());
        EXPECT(0xb910, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb90e));
        EXPECT(0xe9, gbc.readMem(0xb90f));
        // CB E9 02A5
        gbc.setState(0x1731, 0x4d67, 0xe670, 0xcd49, 0xe3a, 0xe1cc, 0x1, 0x1);
        gbc.writeMem(0x1731, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4d67, gbc.sp());
        EXPECT(0x1733, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 02A6
        gbc.setState(0x915b, 0xd7da, 0xc2a0, 0xd8ef, 0xab82, 0xe7d5, 0x0, 0x0);
        gbc.writeMem(0x915b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd7da, gbc.sp());
        EXPECT(0x915d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x915b));
        EXPECT(0xe9, gbc.readMem(0x915c));
        // CB E9 02A7
        gbc.setState(0x62db, 0xd7c2, 0x10a0, 0x5b7d, 0xe697, 0x4e84, 0x0, 0x0);
        gbc.writeMem(0x62db, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd7c2, gbc.sp());
        EXPECT(0x62dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02A8
        gbc.setState(0xbeef, 0xaffb, 0x1fe0, 0x15b4, 0x80bd, 0xa62c, 0x1, 0x1);
        gbc.writeMem(0xbeef, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xaffb, gbc.sp());
        EXPECT(0xbef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeef));
        EXPECT(0xe9, gbc.readMem(0xbef0));
        // CB E9 02A9
        gbc.setState(0xef29, 0x7127, 0xcaa0, 0xb90c, 0x4613, 0x1200, 0x0, 0x1);
        gbc.writeMem(0xef29, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7127, gbc.sp());
        EXPECT(0xef2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef29));
        EXPECT(0xe9, gbc.readMem(0xef2a));
        // CB E9 02AA
        gbc.setState(0x7c1b, 0x7a7, 0x8960, 0x81bc, 0x4ad4, 0x9327, 0x1, 0x1);
        gbc.writeMem(0x7c1b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7a7, gbc.sp());
        EXPECT(0x7c1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02AC
        gbc.setState(0x58ca, 0x639, 0x3d30, 0x6da5, 0x43db, 0xb26c, 0x0, 0x0);
        gbc.writeMem(0x58ca, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x639, gbc.sp());
        EXPECT(0x58cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 02AD
        gbc.setState(0x3faf, 0xe37f, 0xa260, 0x22ba, 0x3727, 0xc54a, 0x0, 0x0);
        gbc.writeMem(0x3faf, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe37f, gbc.sp());
        EXPECT(0x3fb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02AE
        gbc.setState(0x147e, 0x1993, 0x500, 0x2de9, 0x641a, 0xf0b8, 0x0, 0x0);
        gbc.writeMem(0x147e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1993, gbc.sp());
        EXPECT(0x1480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02AF
        gbc.setState(0x6084, 0x5e3f, 0xf500, 0x97d0, 0xb654, 0xed88, 0x1, 0x1);
        gbc.writeMem(0x6084, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5e3f, gbc.sp());
        EXPECT(0x6086, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02B0
        gbc.setState(0x715a, 0x18b7, 0x2c50, 0xbc8c, 0x910b, 0x5e92, 0x0, 0x0);
        gbc.writeMem(0x715a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x18b7, gbc.sp());
        EXPECT(0x715c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 02B1
        gbc.setState(0x92ab, 0xf279, 0xcd80, 0x23fc, 0x92d0, 0xfd72, 0x0, 0x0);
        gbc.writeMem(0x92ab, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf279, gbc.sp());
        EXPECT(0x92ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ab));
        EXPECT(0xe9, gbc.readMem(0x92ac));
        // CB E9 02B2
        gbc.setState(0x31eb, 0x80ee, 0xfd90, 0x7690, 0x9486, 0x3f20, 0x1, 0x1);
        gbc.writeMem(0x31eb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x80ee, gbc.sp());
        EXPECT(0x31ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 02B3
        gbc.setState(0x55a, 0x331b, 0x1340, 0x4d81, 0x128a, 0xcf96, 0x0, 0x1);
        gbc.writeMem(0x55a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x331b, gbc.sp());
        EXPECT(0x55c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02B4
        gbc.setState(0xda30, 0xb44, 0x6250, 0x9ffd, 0xe60c, 0x365b, 0x1, 0x1);
        gbc.writeMem(0xda30, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb44, gbc.sp());
        EXPECT(0xda32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda30));
        EXPECT(0xe9, gbc.readMem(0xda31));
        // CB E9 02B6
        gbc.setState(0x20d2, 0xa14f, 0xb220, 0xf972, 0x65fd, 0x9964, 0x0, 0x0);
        gbc.writeMem(0x20d2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa14f, gbc.sp());
        EXPECT(0x20d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02B8
        gbc.setState(0x54cc, 0xc9eb, 0xe60, 0x921f, 0xa101, 0x1088, 0x0, 0x0);
        gbc.writeMem(0x54cc, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc9eb, gbc.sp());
        EXPECT(0x54ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02B9
        gbc.setState(0xb3a2, 0x995, 0xef40, 0x4de3, 0xb16a, 0xd9e0, 0x0, 0x1);
        gbc.writeMem(0xb3a2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x995, gbc.sp());
        EXPECT(0xb3a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3a2));
        EXPECT(0xe9, gbc.readMem(0xb3a3));
        // CB E9 02BA
        gbc.setState(0x6d4f, 0x6f16, 0x1e40, 0xa47d, 0x63c9, 0x65ca, 0x0, 0x1);
        gbc.writeMem(0x6d4f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6f16, gbc.sp());
        EXPECT(0x6d51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02BB
        gbc.setState(0x718c, 0x8a9a, 0x7280, 0xffee, 0x34d7, 0xad21, 0x0, 0x1);
        gbc.writeMem(0x718c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8a9a, gbc.sp());
        EXPECT(0x718e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02BC
        gbc.setState(0x163f, 0xc0a5, 0xe0, 0xc237, 0x77fd, 0xc83a, 0x1, 0x0);
        gbc.writeMem(0x163f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc0a5, gbc.sp());
        EXPECT(0x1641, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02BD
        gbc.setState(0xaf08, 0x185a, 0x6110, 0x47f8, 0x9185, 0x8f74, 0x0, 0x1);
        gbc.writeMem(0xaf08, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x185a, gbc.sp());
        EXPECT(0xaf0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf08));
        EXPECT(0xe9, gbc.readMem(0xaf09));
        // CB E9 02BE
        gbc.setState(0x90d, 0xbcf9, 0x46f0, 0xf96d, 0xc900, 0xc557, 0x0, 0x1);
        gbc.writeMem(0x90d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xbcf9, gbc.sp());
        EXPECT(0x90f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 02BF
        gbc.setState(0x8764, 0x46d0, 0xcf50, 0xd0cf, 0x460f, 0xd526, 0x1, 0x1);
        gbc.writeMem(0x8764, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x46d0, gbc.sp());
        EXPECT(0x8766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8764));
        EXPECT(0xe9, gbc.readMem(0x8765));
        // CB E9 02C0
        gbc.setState(0xd024, 0x8d8b, 0x8a80, 0x61e4, 0x347f, 0x63f6, 0x1, 0x1);
        gbc.writeMem(0xd024, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8d8b, gbc.sp());
        EXPECT(0xd026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd024));
        EXPECT(0xe9, gbc.readMem(0xd025));
        // CB E9 02C1
        gbc.setState(0x6459, 0xe3bf, 0x230, 0x91a2, 0x8914, 0xc7b0, 0x0, 0x1);
        gbc.writeMem(0x6459, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe3bf, gbc.sp());
        EXPECT(0x645b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 02C2
        gbc.setState(0xad56, 0xe47b, 0xcae0, 0xe8c7, 0xf99b, 0x8808, 0x1, 0x1);
        gbc.writeMem(0xad56, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe47b, gbc.sp());
        EXPECT(0xad58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad56));
        EXPECT(0xe9, gbc.readMem(0xad57));
        // CB E9 02C3
        gbc.setState(0xb0c5, 0xfc93, 0x70, 0xc8be, 0x7442, 0xcee3, 0x1, 0x1);
        gbc.writeMem(0xb0c5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfc93, gbc.sp());
        EXPECT(0xb0c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0c5));
        EXPECT(0xe9, gbc.readMem(0xb0c6));
        // CB E9 02C4
        gbc.setState(0x3ee1, 0x616a, 0xfb00, 0x4e5f, 0xc4a7, 0x791f, 0x0, 0x1);
        gbc.writeMem(0x3ee1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x616a, gbc.sp());
        EXPECT(0x3ee3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02C5
        gbc.setState(0x9877, 0xbd0d, 0xf030, 0x2e16, 0xe1f7, 0x6610, 0x1, 0x0);
        gbc.writeMem(0x9877, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xbd0d, gbc.sp());
        EXPECT(0x9879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9877));
        EXPECT(0xe9, gbc.readMem(0x9878));
        // CB E9 02C6
        gbc.setState(0x493a, 0x90e, 0x9760, 0xf753, 0xfea5, 0x4876, 0x1, 0x1);
        gbc.writeMem(0x493a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x90e, gbc.sp());
        EXPECT(0x493c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02C7
        gbc.setState(0xb02c, 0xf88e, 0xcb00, 0xd580, 0xc72f, 0x19db, 0x1, 0x0);
        gbc.writeMem(0xb02c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf88e, gbc.sp());
        EXPECT(0xb02e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb02c));
        EXPECT(0xe9, gbc.readMem(0xb02d));
        // CB E9 02C8
        gbc.setState(0xb40, 0x766c, 0xb820, 0x7f2a, 0x6d10, 0xb50e, 0x0, 0x1);
        gbc.writeMem(0xb40, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x766c, gbc.sp());
        EXPECT(0xb42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02C9
        gbc.setState(0x13b9, 0xba5b, 0xdab0, 0x5e0b, 0x107f, 0x426b, 0x0, 0x1);
        gbc.writeMem(0x13b9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xba5b, gbc.sp());
        EXPECT(0x13bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 02CA
        gbc.setState(0xe129, 0xc3bf, 0x4050, 0x72b3, 0xa740, 0x7bc2, 0x0, 0x1);
        gbc.writeMem(0xe129, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc3bf, gbc.sp());
        EXPECT(0xe12b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe129));
        EXPECT(0xe9, gbc.readMem(0xe12a));
        // CB E9 02CB
        gbc.setState(0xbdb3, 0xfe2b, 0xc970, 0x229f, 0xf28, 0xd5f2, 0x1, 0x0);
        gbc.writeMem(0xbdb3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xfe2b, gbc.sp());
        EXPECT(0xbdb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb3));
        EXPECT(0xe9, gbc.readMem(0xbdb4));
        // CB E9 02CC
        gbc.setState(0x9263, 0x9f36, 0x4cf0, 0xf8c6, 0xf75, 0x36fb, 0x0, 0x0);
        gbc.writeMem(0x9263, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9f36, gbc.sp());
        EXPECT(0x9265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9263));
        EXPECT(0xe9, gbc.readMem(0x9264));
        // CB E9 02CD
        gbc.setState(0x73e0, 0x5e6a, 0x6180, 0x6b6f, 0x45a7, 0xbb2b, 0x1, 0x0);
        gbc.writeMem(0x73e0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5e6a, gbc.sp());
        EXPECT(0x73e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02CE
        gbc.setState(0xc219, 0x60fb, 0x880, 0xcb7d, 0x4043, 0x3ef3, 0x1, 0x0);
        gbc.writeMem(0xc219, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x60fb, gbc.sp());
        EXPECT(0xc21b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc219));
        EXPECT(0xe9, gbc.readMem(0xc21a));
        // CB E9 02D0
        gbc.setState(0x90ef, 0x8d04, 0x3390, 0xb3d6, 0xbfb8, 0xebe4, 0x0, 0x1);
        gbc.writeMem(0x90ef, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8d04, gbc.sp());
        EXPECT(0x90f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90ef));
        EXPECT(0xe9, gbc.readMem(0x90f0));
        // CB E9 02D1
        gbc.setState(0x9062, 0x120d, 0x92a0, 0xa1b2, 0xb08a, 0x689a, 0x1, 0x1);
        gbc.writeMem(0x9062, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x120d, gbc.sp());
        EXPECT(0x9064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9062));
        EXPECT(0xe9, gbc.readMem(0x9063));
        // CB E9 02D2
        gbc.setState(0x199a, 0x7a5e, 0xfd90, 0x7fe3, 0xf2e0, 0x3b05, 0x0, 0x1);
        gbc.writeMem(0x199a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7a5e, gbc.sp());
        EXPECT(0x199c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 02D3
        gbc.setState(0x84d5, 0xc48a, 0xd50, 0x74a9, 0x637c, 0x6c90, 0x0, 0x0);
        gbc.writeMem(0x84d5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc48a, gbc.sp());
        EXPECT(0x84d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84d5));
        EXPECT(0xe9, gbc.readMem(0x84d6));
        // CB E9 02D4
        gbc.setState(0xe6f4, 0x8a3, 0x81c0, 0x8ba, 0x7a94, 0x8ad, 0x1, 0x0);
        gbc.writeMem(0xe6f4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8a3, gbc.sp());
        EXPECT(0xe6f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6f4));
        EXPECT(0xe9, gbc.readMem(0xe6f5));
        // CB E9 02D5
        gbc.setState(0xf7e, 0xc540, 0x4fb0, 0x9113, 0xcd37, 0xf8ba, 0x1, 0x0);
        gbc.writeMem(0xf7e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc540, gbc.sp());
        EXPECT(0xf80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 02D6
        gbc.setState(0xfc5, 0xe951, 0x1b20, 0x3514, 0x3ba, 0xb671, 0x1, 0x0);
        gbc.writeMem(0xfc5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe951, gbc.sp());
        EXPECT(0xfc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02D7
        gbc.setState(0x577a, 0xb41, 0xcaa0, 0x76ca, 0xbbd0, 0x4288, 0x1, 0x0);
        gbc.writeMem(0x577a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb41, gbc.sp());
        EXPECT(0x577c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02D8
        gbc.setState(0x70e9, 0x2eec, 0xda10, 0xf98f, 0x367, 0x4115, 0x1, 0x1);
        gbc.writeMem(0x70e9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2eec, gbc.sp());
        EXPECT(0x70eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 02D9
        gbc.setState(0x589, 0x6b94, 0x3ba0, 0x647b, 0x626f, 0xfa4c, 0x1, 0x1);
        gbc.writeMem(0x589, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6b94, gbc.sp());
        EXPECT(0x58b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02DA
        gbc.setState(0x82b2, 0xf451, 0x35c0, 0x8cdf, 0xf55e, 0x34dd, 0x1, 0x0);
        gbc.writeMem(0x82b2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf451, gbc.sp());
        EXPECT(0x82b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82b2));
        EXPECT(0xe9, gbc.readMem(0x82b3));
        // CB E9 02DB
        gbc.setState(0x26d3, 0x4d80, 0x9340, 0xe19, 0xb23f, 0xa4a3, 0x1, 0x0);
        gbc.writeMem(0x26d3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x4d80, gbc.sp());
        EXPECT(0x26d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02DC
        gbc.setState(0x9f37, 0x932d, 0xe6b0, 0xc2ff, 0x9e2c, 0xa40e, 0x0, 0x1);
        gbc.writeMem(0x9f37, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x932d, gbc.sp());
        EXPECT(0x9f39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f37));
        EXPECT(0xe9, gbc.readMem(0x9f38));
        // CB E9 02DD
        gbc.setState(0x53d8, 0xd42c, 0x6700, 0x7032, 0x393e, 0x642c, 0x1, 0x1);
        gbc.writeMem(0x53d8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd42c, gbc.sp());
        EXPECT(0x53da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02DE
        gbc.setState(0x60d0, 0x99a1, 0x42e0, 0xbcd, 0x2358, 0x25f, 0x0, 0x1);
        gbc.writeMem(0x60d0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x99a1, gbc.sp());
        EXPECT(0x60d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02DF
        gbc.setState(0x7455, 0xf7fc, 0xa880, 0x2446, 0x9714, 0xffad, 0x1, 0x0);
        gbc.writeMem(0x7455, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf7fc, gbc.sp());
        EXPECT(0x7457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02E0
        gbc.setState(0x91e0, 0x9bdd, 0x3f10, 0xcd7a, 0x3a70, 0x18d3, 0x0, 0x0);
        gbc.writeMem(0x91e0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9bdd, gbc.sp());
        EXPECT(0x91e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91e0));
        EXPECT(0xe9, gbc.readMem(0x91e1));
        // CB E9 02E1
        gbc.setState(0x83df, 0x8732, 0x9d90, 0x5c49, 0xfda3, 0x9936, 0x0, 0x1);
        gbc.writeMem(0x83df, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8732, gbc.sp());
        EXPECT(0x83e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83df));
        EXPECT(0xe9, gbc.readMem(0x83e0));
        // CB E9 02E2
        gbc.setState(0xd99a, 0xd2ab, 0xd120, 0x4551, 0xf77b, 0x4a44, 0x1, 0x0);
        gbc.writeMem(0xd99a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd2ab, gbc.sp());
        EXPECT(0xd99c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd99a));
        EXPECT(0xe9, gbc.readMem(0xd99b));
        // CB E9 02E3
        gbc.setState(0xba33, 0xa0a2, 0xe3c0, 0xb499, 0x1aee, 0x8acd, 0x0, 0x1);
        gbc.writeMem(0xba33, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa0a2, gbc.sp());
        EXPECT(0xba35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba33));
        EXPECT(0xe9, gbc.readMem(0xba34));
        // CB E9 02E4
        gbc.setState(0xcf22, 0xfeb7, 0xacb0, 0xfa6, 0xef55, 0xc3e7, 0x0, 0x0);
        gbc.writeMem(0xcf22, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xfeb7, gbc.sp());
        EXPECT(0xcf24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf22));
        EXPECT(0xe9, gbc.readMem(0xcf23));
        // CB E9 02E5
        gbc.setState(0xa49e, 0x45b4, 0xe040, 0x1547, 0x9ef0, 0x5df7, 0x1, 0x1);
        gbc.writeMem(0xa49e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x45b4, gbc.sp());
        EXPECT(0xa4a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa49e));
        EXPECT(0xe9, gbc.readMem(0xa49f));
        // CB E9 02E6
        gbc.setState(0xc0f4, 0x8e17, 0xc020, 0xc2ea, 0xd057, 0xc60b, 0x1, 0x0);
        gbc.writeMem(0xc0f4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8e17, gbc.sp());
        EXPECT(0xc0f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0f4));
        EXPECT(0xe9, gbc.readMem(0xc0f5));
        // CB E9 02E7
        gbc.setState(0x241f, 0xf1ee, 0x8920, 0xa5f2, 0xdf14, 0x204e, 0x0, 0x1);
        gbc.writeMem(0x241f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf1ee, gbc.sp());
        EXPECT(0x2421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02E8
        gbc.setState(0x8ad3, 0xb93a, 0x4d90, 0x25e8, 0x71c7, 0xed5f, 0x0, 0x1);
        gbc.writeMem(0x8ad3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb93a, gbc.sp());
        EXPECT(0x8ad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ad3));
        EXPECT(0xe9, gbc.readMem(0x8ad4));
        // CB E9 02EA
        gbc.setState(0x4c11, 0x358f, 0x36c0, 0xaf6e, 0x274, 0xc8a3, 0x1, 0x1);
        gbc.writeMem(0x4c11, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x358f, gbc.sp());
        EXPECT(0x4c13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02EB
        gbc.setState(0xe8bc, 0x8976, 0xf460, 0xb9b5, 0xc453, 0x47c5, 0x1, 0x0);
        gbc.writeMem(0xe8bc, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8976, gbc.sp());
        EXPECT(0xe8be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8bc));
        EXPECT(0xe9, gbc.readMem(0xe8bd));
        // CB E9 02EC
        gbc.setState(0x16dd, 0x760c, 0xbf40, 0xc65e, 0x4917, 0x2f45, 0x1, 0x1);
        gbc.writeMem(0x16dd, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x760c, gbc.sp());
        EXPECT(0x16df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02ED
        gbc.setState(0xc57b, 0xe1bc, 0xc900, 0x6397, 0x611, 0xb893, 0x1, 0x1);
        gbc.writeMem(0xc57b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe1bc, gbc.sp());
        EXPECT(0xc57d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc57b));
        EXPECT(0xe9, gbc.readMem(0xc57c));
        // CB E9 02EE
        gbc.setState(0xbfca, 0x22d4, 0xd230, 0x3b20, 0x3ac3, 0x74b, 0x0, 0x1);
        gbc.writeMem(0xbfca, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x22d4, gbc.sp());
        EXPECT(0xbfcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfca));
        EXPECT(0xe9, gbc.readMem(0xbfcb));
        // CB E9 02EF
        gbc.setState(0x52e0, 0x6641, 0xb030, 0x3983, 0xc505, 0x34d, 0x0, 0x0);
        gbc.writeMem(0x52e0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6641, gbc.sp());
        EXPECT(0x52e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 02F0
        gbc.setState(0x5fae, 0x319f, 0xdba0, 0xfa90, 0xf776, 0xf003, 0x0, 0x0);
        gbc.writeMem(0x5fae, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x319f, gbc.sp());
        EXPECT(0x5fb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02F2
        gbc.setState(0xa9f8, 0x58f7, 0x35b0, 0xab93, 0x8782, 0x76ab, 0x1, 0x1);
        gbc.writeMem(0xa9f8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x58f7, gbc.sp());
        EXPECT(0xa9fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9f8));
        EXPECT(0xe9, gbc.readMem(0xa9f9));
        // CB E9 02F3
        gbc.setState(0x4902, 0x90a3, 0x8000, 0x3b5f, 0x3c8a, 0x999f, 0x1, 0x1);
        gbc.writeMem(0x4902, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x90a3, gbc.sp());
        EXPECT(0x4904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02F5
        gbc.setState(0x97f5, 0x3bc8, 0xc180, 0x5dd9, 0xbc46, 0xf4af, 0x0, 0x1);
        gbc.writeMem(0x97f5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x3bc8, gbc.sp());
        EXPECT(0x97f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97f5));
        EXPECT(0xe9, gbc.readMem(0x97f6));
        // CB E9 02F6
        gbc.setState(0x7800, 0xe205, 0xaa70, 0xba11, 0xdf03, 0xd00e, 0x1, 0x1);
        gbc.writeMem(0x7800, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe205, gbc.sp());
        EXPECT(0x7802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 02F7
        gbc.setState(0xa09d, 0x819f, 0xbac0, 0xc383, 0x7a89, 0x85bd, 0x1, 0x1);
        gbc.writeMem(0xa09d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x819f, gbc.sp());
        EXPECT(0xa09f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa09d));
        EXPECT(0xe9, gbc.readMem(0xa09e));
        // CB E9 02F8
        gbc.setState(0x2d03, 0x4900, 0x1ee0, 0xc744, 0xbd38, 0x201f, 0x1, 0x1);
        gbc.writeMem(0x2d03, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4900, gbc.sp());
        EXPECT(0x2d05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02F9
        gbc.setState(0x1c0a, 0xf299, 0xfc20, 0x82b5, 0x51fd, 0x8dd1, 0x1, 0x1);
        gbc.writeMem(0x1c0a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf299, gbc.sp());
        EXPECT(0x1c0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02FA
        gbc.setState(0xc66e, 0x3960, 0xadf0, 0xbfc1, 0x256, 0x5e9d, 0x1, 0x1);
        gbc.writeMem(0xc66e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3960, gbc.sp());
        EXPECT(0xc670, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc66e));
        EXPECT(0xe9, gbc.readMem(0xc66f));
        // CB E9 02FB
        gbc.setState(0x726c, 0x9b1c, 0x1640, 0x47a5, 0xa4d6, 0x2c4c, 0x1, 0x1);
        gbc.writeMem(0x726c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9b1c, gbc.sp());
        EXPECT(0x726e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 02FC
        gbc.setState(0x9551, 0x6028, 0x77c0, 0x6663, 0x55b4, 0x7114, 0x1, 0x0);
        gbc.writeMem(0x9551, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6028, gbc.sp());
        EXPECT(0x9553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9551));
        EXPECT(0xe9, gbc.readMem(0x9552));
        // CB E9 02FD
        gbc.setState(0x77e7, 0x3bbb, 0xd5d0, 0xea0f, 0x8a59, 0x3dd5, 0x0, 0x0);
        gbc.writeMem(0x77e7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3bbb, gbc.sp());
        EXPECT(0x77e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 02FE
        gbc.setState(0x5e57, 0x7911, 0x8570, 0x661c, 0x497f, 0xd66c, 0x0, 0x1);
        gbc.writeMem(0x5e57, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7911, gbc.sp());
        EXPECT(0x5e59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 02FF
        gbc.setState(0x1efe, 0x6f75, 0x40c0, 0x5c08, 0x710c, 0xad77, 0x0, 0x1);
        gbc.writeMem(0x1efe, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6f75, gbc.sp());
        EXPECT(0x1f00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0300
        gbc.setState(0x8ae4, 0x3fb3, 0x9030, 0x1043, 0x5ad5, 0x4732, 0x0, 0x1);
        gbc.writeMem(0x8ae4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3fb3, gbc.sp());
        EXPECT(0x8ae6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ae4));
        EXPECT(0xe9, gbc.readMem(0x8ae5));
        // CB E9 0301
        gbc.setState(0x7087, 0x7827, 0xbae0, 0xe964, 0x82af, 0x75e, 0x0, 0x1);
        gbc.writeMem(0x7087, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7827, gbc.sp());
        EXPECT(0x7089, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0302
        gbc.setState(0xc382, 0x5f27, 0xeb80, 0x9999, 0x34cf, 0x6a7c, 0x0, 0x0);
        gbc.writeMem(0xc382, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5f27, gbc.sp());
        EXPECT(0xc384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc382));
        EXPECT(0xe9, gbc.readMem(0xc383));
        // CB E9 0304
        gbc.setState(0x85b9, 0xfdf6, 0xece0, 0x9451, 0x358f, 0x6249, 0x1, 0x1);
        gbc.writeMem(0x85b9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xfdf6, gbc.sp());
        EXPECT(0x85bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85b9));
        EXPECT(0xe9, gbc.readMem(0x85ba));
        // CB E9 0305
        gbc.setState(0xf20, 0x3961, 0xcf30, 0x6b2e, 0xb7b5, 0xc37e, 0x0, 0x0);
        gbc.writeMem(0xf20, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3961, gbc.sp());
        EXPECT(0xf22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0306
        gbc.setState(0xd075, 0x7062, 0xf30, 0x22a9, 0x41e, 0x701f, 0x0, 0x0);
        gbc.writeMem(0xd075, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7062, gbc.sp());
        EXPECT(0xd077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd075));
        EXPECT(0xe9, gbc.readMem(0xd076));
        // CB E9 0307
        gbc.setState(0x6995, 0x6e3b, 0x4f60, 0xe478, 0x3ad3, 0x8cfa, 0x1, 0x1);
        gbc.writeMem(0x6995, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6e3b, gbc.sp());
        EXPECT(0x6997, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0308
        gbc.setState(0xabad, 0x83b7, 0xfdb0, 0x978b, 0xf912, 0x3528, 0x0, 0x0);
        gbc.writeMem(0xabad, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x83b7, gbc.sp());
        EXPECT(0xabaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabad));
        EXPECT(0xe9, gbc.readMem(0xabae));
        // CB E9 0309
        gbc.setState(0x5043, 0xd55c, 0xab80, 0x6b54, 0x3ef9, 0xb199, 0x0, 0x0);
        gbc.writeMem(0x5043, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd55c, gbc.sp());
        EXPECT(0x5045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 030A
        gbc.setState(0xbf87, 0x1ef5, 0x67b0, 0x4783, 0x4a15, 0x44ec, 0x1, 0x0);
        gbc.writeMem(0xbf87, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1ef5, gbc.sp());
        EXPECT(0xbf89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf87));
        EXPECT(0xe9, gbc.readMem(0xbf88));
        // CB E9 030B
        gbc.setState(0x6995, 0x82da, 0x7f10, 0xee6d, 0x5b5f, 0x800a, 0x0, 0x1);
        gbc.writeMem(0x6995, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x82da, gbc.sp());
        EXPECT(0x6997, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 030C
        gbc.setState(0xb591, 0xe3f5, 0x3280, 0x2051, 0xe93e, 0x84aa, 0x1, 0x1);
        gbc.writeMem(0xb591, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe3f5, gbc.sp());
        EXPECT(0xb593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb591));
        EXPECT(0xe9, gbc.readMem(0xb592));
        // CB E9 030E
        gbc.setState(0xa351, 0x791f, 0x760, 0xecb8, 0x5013, 0xac3, 0x0, 0x0);
        gbc.writeMem(0xa351, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x791f, gbc.sp());
        EXPECT(0xa353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa351));
        EXPECT(0xe9, gbc.readMem(0xa352));
        // CB E9 030F
        gbc.setState(0xf6d, 0xb337, 0xf590, 0xd74, 0x63e7, 0x247, 0x0, 0x0);
        gbc.writeMem(0xf6d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb337, gbc.sp());
        EXPECT(0xf6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0310
        gbc.setState(0x11b4, 0x3775, 0x5aa0, 0xb78c, 0xebaf, 0x3dcc, 0x0, 0x1);
        gbc.writeMem(0x11b4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3775, gbc.sp());
        EXPECT(0x11b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0313
        gbc.setState(0x8ae7, 0xd3c3, 0x23d0, 0x65af, 0xd6d5, 0x320d, 0x0, 0x1);
        gbc.writeMem(0x8ae7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd3c3, gbc.sp());
        EXPECT(0x8ae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ae7));
        EXPECT(0xe9, gbc.readMem(0x8ae8));
        // CB E9 0314
        gbc.setState(0xd90f, 0x4369, 0x7190, 0x329c, 0x822e, 0x3e25, 0x1, 0x0);
        gbc.writeMem(0xd90f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4369, gbc.sp());
        EXPECT(0xd911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd90f));
        EXPECT(0xe9, gbc.readMem(0xd910));
        // CB E9 0315
        gbc.setState(0x4ab2, 0x6747, 0xf560, 0x6ab5, 0xf785, 0xf3c9, 0x1, 0x1);
        gbc.writeMem(0x4ab2, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6747, gbc.sp());
        EXPECT(0x4ab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0316
        gbc.setState(0x2328, 0x9911, 0x1ba0, 0x5a5f, 0x8f85, 0xb5f1, 0x0, 0x0);
        gbc.writeMem(0x2328, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9911, gbc.sp());
        EXPECT(0x232a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0317
        gbc.setState(0x513b, 0xa0c5, 0x4b10, 0xb8f9, 0xb27a, 0x6d6d, 0x1, 0x0);
        gbc.writeMem(0x513b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa0c5, gbc.sp());
        EXPECT(0x513d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0318
        gbc.setState(0x913b, 0x7174, 0x4e20, 0xd44c, 0x2f9b, 0xee93, 0x0, 0x0);
        gbc.writeMem(0x913b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7174, gbc.sp());
        EXPECT(0x913d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x913b));
        EXPECT(0xe9, gbc.readMem(0x913c));
        // CB E9 0319
        gbc.setState(0x2596, 0xb325, 0x46d0, 0xefae, 0x8019, 0xbdc9, 0x1, 0x1);
        gbc.writeMem(0x2596, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb325, gbc.sp());
        EXPECT(0x2598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 031A
        gbc.setState(0xc8e7, 0x9214, 0xb270, 0x7883, 0x3726, 0x8bc, 0x0, 0x0);
        gbc.writeMem(0xc8e7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9214, gbc.sp());
        EXPECT(0xc8e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8e7));
        EXPECT(0xe9, gbc.readMem(0xc8e8));
        // CB E9 031C
        gbc.setState(0xb91f, 0x4585, 0xe820, 0xc5e8, 0x126b, 0x7c8b, 0x0, 0x1);
        gbc.writeMem(0xb91f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4585, gbc.sp());
        EXPECT(0xb921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb91f));
        EXPECT(0xe9, gbc.readMem(0xb920));
        // CB E9 031D
        gbc.setState(0xc9b8, 0xf2be, 0x6110, 0xf9fb, 0x1fd5, 0xce2f, 0x1, 0x1);
        gbc.writeMem(0xc9b8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf2be, gbc.sp());
        EXPECT(0xc9ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9b8));
        EXPECT(0xe9, gbc.readMem(0xc9b9));
        // CB E9 031E
        gbc.setState(0xca6, 0x55e9, 0x8520, 0xacbd, 0x5e09, 0xf091, 0x0, 0x0);
        gbc.writeMem(0xca6, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x55e9, gbc.sp());
        EXPECT(0xca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 031F
        gbc.setState(0x7c3, 0x78f2, 0xe830, 0x247d, 0x2c8d, 0xb9c4, 0x0, 0x0);
        gbc.writeMem(0x7c3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x78f2, gbc.sp());
        EXPECT(0x7c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0320
        gbc.setState(0x1393, 0x2b6b, 0x46d0, 0x845, 0x6b09, 0x6843, 0x1, 0x0);
        gbc.writeMem(0x1393, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2b6b, gbc.sp());
        EXPECT(0x1395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0321
        gbc.setState(0xea31, 0x7bde, 0x6e0, 0x8372, 0x1e9, 0xbddb, 0x0, 0x0);
        gbc.writeMem(0xea31, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7bde, gbc.sp());
        EXPECT(0xea33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea31));
        EXPECT(0xe9, gbc.readMem(0xea32));
        // CB E9 0322
        gbc.setState(0x94d4, 0x3f69, 0x57f0, 0xc81e, 0x940c, 0xf49d, 0x0, 0x1);
        gbc.writeMem(0x94d4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3f69, gbc.sp());
        EXPECT(0x94d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94d4));
        EXPECT(0xe9, gbc.readMem(0x94d5));
        // CB E9 0323
        gbc.setState(0xd52a, 0xaa4a, 0x83a0, 0xa115, 0x33f2, 0x1e5, 0x0, 0x0);
        gbc.writeMem(0xd52a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xaa4a, gbc.sp());
        EXPECT(0xd52c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd52a));
        EXPECT(0xe9, gbc.readMem(0xd52b));
        // CB E9 0324
        gbc.setState(0xa730, 0x6cd1, 0xd3e0, 0x3e62, 0xbae1, 0x8022, 0x0, 0x1);
        gbc.writeMem(0xa730, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6cd1, gbc.sp());
        EXPECT(0xa732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa730));
        EXPECT(0xe9, gbc.readMem(0xa731));
        // CB E9 0325
        gbc.setState(0x876b, 0x31e4, 0xe2d0, 0xe6b1, 0xd62c, 0x4a83, 0x0, 0x1);
        gbc.writeMem(0x876b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x31e4, gbc.sp());
        EXPECT(0x876d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x876b));
        EXPECT(0xe9, gbc.readMem(0x876c));
        // CB E9 0326
        gbc.setState(0xba1f, 0x9298, 0xa880, 0x4bf, 0x9bc6, 0x68b0, 0x0, 0x1);
        gbc.writeMem(0xba1f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9298, gbc.sp());
        EXPECT(0xba21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba1f));
        EXPECT(0xe9, gbc.readMem(0xba20));
        // CB E9 0327
        gbc.setState(0xb508, 0x22a2, 0xb8a0, 0xc895, 0x62fe, 0xea3b, 0x1, 0x1);
        gbc.writeMem(0xb508, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x22a2, gbc.sp());
        EXPECT(0xb50a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb508));
        EXPECT(0xe9, gbc.readMem(0xb509));
        // CB E9 0328
        gbc.setState(0xbd5a, 0xbda9, 0xdb10, 0x6e2e, 0xc8f1, 0x54e6, 0x1, 0x0);
        gbc.writeMem(0xbd5a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xbda9, gbc.sp());
        EXPECT(0xbd5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd5a));
        EXPECT(0xe9, gbc.readMem(0xbd5b));
        // CB E9 0329
        gbc.setState(0x1a82, 0x6af9, 0xdac0, 0xc681, 0xb2c1, 0x309, 0x0, 0x0);
        gbc.writeMem(0x1a82, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6af9, gbc.sp());
        EXPECT(0x1a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 032A
        gbc.setState(0xdfd6, 0x8cfe, 0xb610, 0x8883, 0x2b1a, 0xc714, 0x0, 0x1);
        gbc.writeMem(0xdfd6, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8cfe, gbc.sp());
        EXPECT(0xdfd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfd6));
        EXPECT(0xe9, gbc.readMem(0xdfd7));
        // CB E9 032B
        gbc.setState(0xd374, 0x6924, 0x5a00, 0x669d, 0xd8cb, 0x146a, 0x1, 0x0);
        gbc.writeMem(0xd374, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6924, gbc.sp());
        EXPECT(0xd376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd374));
        EXPECT(0xe9, gbc.readMem(0xd375));
        // CB E9 032D
        gbc.setState(0x51b9, 0xa622, 0xbcb0, 0xe3fb, 0xf14a, 0x3837, 0x0, 0x0);
        gbc.writeMem(0x51b9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa622, gbc.sp());
        EXPECT(0x51bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 032E
        gbc.setState(0xad6e, 0xe574, 0xdec0, 0x31d7, 0xa410, 0xbec0, 0x0, 0x0);
        gbc.writeMem(0xad6e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe574, gbc.sp());
        EXPECT(0xad70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad6e));
        EXPECT(0xe9, gbc.readMem(0xad6f));
        // CB E9 032F
        gbc.setState(0x50d1, 0x4b93, 0x59a0, 0x7fe7, 0xa87a, 0x1176, 0x1, 0x0);
        gbc.writeMem(0x50d1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4b93, gbc.sp());
        EXPECT(0x50d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0330
        gbc.setState(0x9e0c, 0x5203, 0x9ff0, 0xa44c, 0x4d65, 0xa602, 0x1, 0x1);
        gbc.writeMem(0x9e0c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5203, gbc.sp());
        EXPECT(0x9e0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e0c));
        EXPECT(0xe9, gbc.readMem(0x9e0d));
        // CB E9 0331
        gbc.setState(0xd352, 0x4e30, 0x7a50, 0x1dfc, 0x8daf, 0x9f98, 0x1, 0x1);
        gbc.writeMem(0xd352, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4e30, gbc.sp());
        EXPECT(0xd354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd352));
        EXPECT(0xe9, gbc.readMem(0xd353));
        // CB E9 0332
        gbc.setState(0x489d, 0xd9ee, 0xc710, 0x6283, 0x7df8, 0x9a36, 0x1, 0x0);
        gbc.writeMem(0x489d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd9ee, gbc.sp());
        EXPECT(0x489f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0333
        gbc.setState(0xb9f5, 0x1d25, 0x1360, 0xf507, 0x3286, 0xbde9, 0x0, 0x0);
        gbc.writeMem(0xb9f5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1d25, gbc.sp());
        EXPECT(0xb9f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9f5));
        EXPECT(0xe9, gbc.readMem(0xb9f6));
        // CB E9 0334
        gbc.setState(0x7b88, 0x9ea1, 0x4710, 0x8817, 0xf549, 0xf6ed, 0x0, 0x1);
        gbc.writeMem(0x7b88, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9ea1, gbc.sp());
        EXPECT(0x7b8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0335
        gbc.setState(0x46a5, 0x79f9, 0x7920, 0x6dd2, 0xbbd4, 0x300e, 0x0, 0x0);
        gbc.writeMem(0x46a5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x79f9, gbc.sp());
        EXPECT(0x46a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0336
        gbc.setState(0xd722, 0x4eb1, 0xfe10, 0x6dcd, 0xc688, 0xf65b, 0x0, 0x1);
        gbc.writeMem(0xd722, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4eb1, gbc.sp());
        EXPECT(0xd724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd722));
        EXPECT(0xe9, gbc.readMem(0xd723));
        // CB E9 0337
        gbc.setState(0x2e4f, 0x2ad5, 0xeed0, 0xbfb0, 0xdfe2, 0x6712, 0x1, 0x1);
        gbc.writeMem(0x2e4f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2ad5, gbc.sp());
        EXPECT(0x2e51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0338
        gbc.setState(0x487a, 0x533b, 0x85d0, 0xc2ee, 0x3d22, 0x9de9, 0x0, 0x0);
        gbc.writeMem(0x487a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x533b, gbc.sp());
        EXPECT(0x487c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0339
        gbc.setState(0xbc0c, 0xd4fa, 0xb6d0, 0x16bc, 0x8cb3, 0xf1e4, 0x1, 0x1);
        gbc.writeMem(0xbc0c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd4fa, gbc.sp());
        EXPECT(0xbc0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc0c));
        EXPECT(0xe9, gbc.readMem(0xbc0d));
        // CB E9 033A
        gbc.setState(0x69c1, 0xda74, 0xf820, 0xb716, 0xe297, 0xfcca, 0x0, 0x0);
        gbc.writeMem(0x69c1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xda74, gbc.sp());
        EXPECT(0x69c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 033B
        gbc.setState(0x6933, 0xea9e, 0x96c0, 0x4464, 0x4649, 0x67af, 0x0, 0x1);
        gbc.writeMem(0x6933, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xea9e, gbc.sp());
        EXPECT(0x6935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 033C
        gbc.setState(0xc300, 0xd0b2, 0x8410, 0xa2a1, 0xca8c, 0xff48, 0x0, 0x1);
        gbc.writeMem(0xc300, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd0b2, gbc.sp());
        EXPECT(0xc302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc300));
        EXPECT(0xe9, gbc.readMem(0xc301));
        // CB E9 033D
        gbc.setState(0xae31, 0x2e16, 0xcf50, 0xc3fa, 0x9704, 0xc95e, 0x0, 0x1);
        gbc.writeMem(0xae31, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2e16, gbc.sp());
        EXPECT(0xae33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae31));
        EXPECT(0xe9, gbc.readMem(0xae32));
        // CB E9 033E
        gbc.setState(0x70b7, 0x9e6, 0xe3a0, 0x72d1, 0xf27, 0x7529, 0x0, 0x0);
        gbc.writeMem(0x70b7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9e6, gbc.sp());
        EXPECT(0x70b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 033F
        gbc.setState(0x838, 0x5c4b, 0x23f0, 0x985b, 0xb74f, 0x80c1, 0x0, 0x1);
        gbc.writeMem(0x838, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5c4b, gbc.sp());
        EXPECT(0x83a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0340
        gbc.setState(0x4083, 0xff5a, 0x7b90, 0x6cc0, 0x29e4, 0xc354, 0x0, 0x0);
        gbc.writeMem(0x4083, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xff5a, gbc.sp());
        EXPECT(0x4085, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0341
        gbc.setState(0xba65, 0x6196, 0xc070, 0x54b, 0x20fd, 0x2e04, 0x0, 0x1);
        gbc.writeMem(0xba65, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6196, gbc.sp());
        EXPECT(0xba67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba65));
        EXPECT(0xe9, gbc.readMem(0xba66));
        // CB E9 0342
        gbc.setState(0xef27, 0x9fe9, 0x47a0, 0xc4dd, 0xc4c1, 0x4bb7, 0x1, 0x0);
        gbc.writeMem(0xef27, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9fe9, gbc.sp());
        EXPECT(0xef29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef27));
        EXPECT(0xe9, gbc.readMem(0xef28));
        // CB E9 0343
        gbc.setState(0x6a71, 0xdc47, 0x1610, 0xf3d5, 0x9495, 0xcf40, 0x0, 0x0);
        gbc.writeMem(0x6a71, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xdc47, gbc.sp());
        EXPECT(0x6a73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0345
        gbc.setState(0xa48, 0x205f, 0x3650, 0x8a92, 0xfa19, 0x3623, 0x0, 0x0);
        gbc.writeMem(0xa48, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x205f, gbc.sp());
        EXPECT(0xa4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0346
        gbc.setState(0x34a8, 0x83d7, 0xc3e0, 0x3581, 0xbbbc, 0xb815, 0x0, 0x1);
        gbc.writeMem(0x34a8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x83d7, gbc.sp());
        EXPECT(0x34aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0347
        gbc.setState(0xa236, 0x4aba, 0x5a30, 0xb6ed, 0xe891, 0x544, 0x1, 0x1);
        gbc.writeMem(0xa236, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4aba, gbc.sp());
        EXPECT(0xa238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa236));
        EXPECT(0xe9, gbc.readMem(0xa237));
        // CB E9 0348
        gbc.setState(0x213a, 0x32e5, 0x7e70, 0xc83f, 0xb37b, 0x5943, 0x1, 0x0);
        gbc.writeMem(0x213a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x32e5, gbc.sp());
        EXPECT(0x213c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0349
        gbc.setState(0xede1, 0x7409, 0x590, 0xfae6, 0xb3ae, 0xd632, 0x0, 0x1);
        gbc.writeMem(0xede1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7409, gbc.sp());
        EXPECT(0xede3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xede1));
        EXPECT(0xe9, gbc.readMem(0xede2));
        // CB E9 034A
        gbc.setState(0x4adf, 0x58c1, 0x8f40, 0x3a83, 0x54db, 0xbbe3, 0x0, 0x0);
        gbc.writeMem(0x4adf, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x58c1, gbc.sp());
        EXPECT(0x4ae1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 034B
        gbc.setState(0x74fa, 0x708c, 0x99c0, 0x330, 0xa6cc, 0xadc7, 0x1, 0x1);
        gbc.writeMem(0x74fa, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x708c, gbc.sp());
        EXPECT(0x74fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 034C
        gbc.setState(0x4cdb, 0xf7fe, 0xec00, 0xc2ef, 0x2ff3, 0x249a, 0x1, 0x0);
        gbc.writeMem(0x4cdb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf7fe, gbc.sp());
        EXPECT(0x4cdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 034D
        gbc.setState(0x3250, 0x677f, 0xb510, 0x3fa6, 0xfd30, 0xaa6c, 0x0, 0x1);
        gbc.writeMem(0x3250, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x677f, gbc.sp());
        EXPECT(0x3252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 034E
        gbc.setState(0xafe0, 0xff84, 0x4330, 0x85d, 0xa3fc, 0x71e4, 0x1, 0x1);
        gbc.writeMem(0xafe0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xff84, gbc.sp());
        EXPECT(0xafe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafe0));
        EXPECT(0xe9, gbc.readMem(0xafe1));
        // CB E9 034F
        gbc.setState(0xb4e0, 0xc10, 0x32a0, 0x7035, 0x310a, 0x1217, 0x0, 0x1);
        gbc.writeMem(0xb4e0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc10, gbc.sp());
        EXPECT(0xb4e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4e0));
        EXPECT(0xe9, gbc.readMem(0xb4e1));
        // CB E9 0350
        gbc.setState(0x6514, 0x4f38, 0x5d80, 0xb994, 0x7f50, 0xb2f8, 0x0, 0x1);
        gbc.writeMem(0x6514, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4f38, gbc.sp());
        EXPECT(0x6516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0351
        gbc.setState(0x695d, 0xac47, 0x5760, 0x714a, 0xf6e3, 0xdd01, 0x0, 0x1);
        gbc.writeMem(0x695d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xac47, gbc.sp());
        EXPECT(0x695f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0352
        gbc.setState(0x9bbd, 0x36ce, 0x2500, 0x21d2, 0x3cea, 0xe87d, 0x0, 0x0);
        gbc.writeMem(0x9bbd, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x36ce, gbc.sp());
        EXPECT(0x9bbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bbd));
        EXPECT(0xe9, gbc.readMem(0x9bbe));
        // CB E9 0353
        gbc.setState(0x1e6b, 0x6b56, 0x9cc0, 0x6674, 0x2adc, 0xbbf0, 0x1, 0x0);
        gbc.writeMem(0x1e6b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6b56, gbc.sp());
        EXPECT(0x1e6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0354
        gbc.setState(0x71f7, 0xdb62, 0x500, 0xe3a9, 0x72c, 0xb4a4, 0x1, 0x0);
        gbc.writeMem(0x71f7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xdb62, gbc.sp());
        EXPECT(0x71f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0355
        gbc.setState(0x2e11, 0x4159, 0x8fe0, 0x7ede, 0x8e99, 0x338, 0x0, 0x0);
        gbc.writeMem(0x2e11, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4159, gbc.sp());
        EXPECT(0x2e13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0356
        gbc.setState(0x5be1, 0x4ce7, 0x8390, 0x412d, 0x88e9, 0xed4c, 0x0, 0x1);
        gbc.writeMem(0x5be1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4ce7, gbc.sp());
        EXPECT(0x5be3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0357
        gbc.setState(0x4239, 0x8cef, 0xc4d0, 0x2641, 0xb681, 0xb0f0, 0x0, 0x1);
        gbc.writeMem(0x4239, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8cef, gbc.sp());
        EXPECT(0x423b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0358
        gbc.setState(0xd3ee, 0xe7aa, 0x2cf0, 0xea74, 0x5f7f, 0xf040, 0x0, 0x1);
        gbc.writeMem(0xd3ee, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe7aa, gbc.sp());
        EXPECT(0xd3f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ee));
        EXPECT(0xe9, gbc.readMem(0xd3ef));
        // CB E9 0359
        gbc.setState(0xc601, 0x32f3, 0x7a90, 0x2a69, 0x53d9, 0x6590, 0x1, 0x1);
        gbc.writeMem(0xc601, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x32f3, gbc.sp());
        EXPECT(0xc603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc601));
        EXPECT(0xe9, gbc.readMem(0xc602));
        // CB E9 035A
        gbc.setState(0xa7cb, 0x2efe, 0x97e0, 0x4d26, 0xc786, 0x8fbf, 0x0, 0x0);
        gbc.writeMem(0xa7cb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2efe, gbc.sp());
        EXPECT(0xa7cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7cb));
        EXPECT(0xe9, gbc.readMem(0xa7cc));
        // CB E9 035B
        gbc.setState(0xdf5f, 0x8e1, 0xc310, 0xed00, 0x8d2d, 0x7dce, 0x0, 0x0);
        gbc.writeMem(0xdf5f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8e1, gbc.sp());
        EXPECT(0xdf61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf5f));
        EXPECT(0xe9, gbc.readMem(0xdf60));
        // CB E9 035C
        gbc.setState(0x3d38, 0x1ac, 0xa290, 0x4661, 0xd845, 0xe795, 0x1, 0x1);
        gbc.writeMem(0x3d38, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1ac, gbc.sp());
        EXPECT(0x3d3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 035D
        gbc.setState(0x6308, 0x38f2, 0x2c0, 0x4449, 0x3fc3, 0x3a2, 0x1, 0x1);
        gbc.writeMem(0x6308, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x38f2, gbc.sp());
        EXPECT(0x630a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 035F
        gbc.setState(0x61b4, 0x57f9, 0xa670, 0xf3e3, 0x2823, 0x99ee, 0x0, 0x1);
        gbc.writeMem(0x61b4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x57f9, gbc.sp());
        EXPECT(0x61b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0360
        gbc.setState(0x3a31, 0x4f53, 0xc9e0, 0x2e27, 0xa808, 0xc65e, 0x0, 0x1);
        gbc.writeMem(0x3a31, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4f53, gbc.sp());
        EXPECT(0x3a33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0361
        gbc.setState(0xb6dc, 0x49b0, 0x6ae0, 0x1ee9, 0xee9e, 0x573b, 0x0, 0x1);
        gbc.writeMem(0xb6dc, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x49b0, gbc.sp());
        EXPECT(0xb6de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6dc));
        EXPECT(0xe9, gbc.readMem(0xb6dd));
        // CB E9 0362
        gbc.setState(0x4f21, 0x4fa1, 0x6760, 0x70fe, 0x23a2, 0x4393, 0x0, 0x0);
        gbc.writeMem(0x4f21, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x4fa1, gbc.sp());
        EXPECT(0x4f23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0363
        gbc.setState(0xb87d, 0xaf28, 0x5e70, 0x7b4d, 0xfc66, 0x5256, 0x1, 0x0);
        gbc.writeMem(0xb87d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xaf28, gbc.sp());
        EXPECT(0xb87f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb87d));
        EXPECT(0xe9, gbc.readMem(0xb87e));
        // CB E9 0364
        gbc.setState(0xacac, 0x2df0, 0xd1b0, 0x59d0, 0x5f36, 0x10c1, 0x1, 0x1);
        gbc.writeMem(0xacac, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2df0, gbc.sp());
        EXPECT(0xacae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacac));
        EXPECT(0xe9, gbc.readMem(0xacad));
        // CB E9 0365
        gbc.setState(0x2564, 0x9815, 0xa7f0, 0x3541, 0x256e, 0xb962, 0x1, 0x1);
        gbc.writeMem(0x2564, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9815, gbc.sp());
        EXPECT(0x2566, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0366
        gbc.setState(0x4c4c, 0xadc9, 0xac90, 0x9c28, 0xcec, 0x2568, 0x1, 0x1);
        gbc.writeMem(0x4c4c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xadc9, gbc.sp());
        EXPECT(0x4c4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0367
        gbc.setState(0x77c0, 0xee04, 0x2560, 0x92a6, 0x7949, 0x78c3, 0x1, 0x0);
        gbc.writeMem(0x77c0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xee04, gbc.sp());
        EXPECT(0x77c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0368
        gbc.setState(0xa28f, 0x1433, 0xa960, 0xe962, 0xc49f, 0x5ea, 0x0, 0x0);
        gbc.writeMem(0xa28f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1433, gbc.sp());
        EXPECT(0xa291, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa28f));
        EXPECT(0xe9, gbc.readMem(0xa290));
        // CB E9 0369
        gbc.setState(0x5990, 0x4fce, 0xd000, 0xe763, 0x32ba, 0x1f1c, 0x0, 0x1);
        gbc.writeMem(0x5990, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4fce, gbc.sp());
        EXPECT(0x5992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 036A
        gbc.setState(0x60d3, 0xa84f, 0x45b0, 0x4f75, 0x60af, 0x8fd6, 0x1, 0x0);
        gbc.writeMem(0x60d3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa84f, gbc.sp());
        EXPECT(0x60d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 036B
        gbc.setState(0xef01, 0xe111, 0x3140, 0x771e, 0x2131, 0xa610, 0x1, 0x0);
        gbc.writeMem(0xef01, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe111, gbc.sp());
        EXPECT(0xef03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef01));
        EXPECT(0xe9, gbc.readMem(0xef02));
        // CB E9 036C
        gbc.setState(0xb83b, 0xb5c5, 0x3ed0, 0xed, 0x35fa, 0xa998, 0x1, 0x1);
        gbc.writeMem(0xb83b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb5c5, gbc.sp());
        EXPECT(0xb83d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb83b));
        EXPECT(0xe9, gbc.readMem(0xb83c));
        // CB E9 036D
        gbc.setState(0xcb55, 0xf08, 0x9590, 0xa355, 0xa207, 0xf566, 0x1, 0x0);
        gbc.writeMem(0xcb55, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf08, gbc.sp());
        EXPECT(0xcb57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb55));
        EXPECT(0xe9, gbc.readMem(0xcb56));
        // CB E9 036E
        gbc.setState(0x98f3, 0x1514, 0x2650, 0xe96, 0x9257, 0x2ed1, 0x0, 0x0);
        gbc.writeMem(0x98f3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1514, gbc.sp());
        EXPECT(0x98f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f3));
        EXPECT(0xe9, gbc.readMem(0x98f4));
        // CB E9 036F
        gbc.setState(0x8330, 0x4506, 0x3950, 0xe5af, 0x9bfe, 0xaae8, 0x1, 0x1);
        gbc.writeMem(0x8330, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4506, gbc.sp());
        EXPECT(0x8332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8330));
        EXPECT(0xe9, gbc.readMem(0x8331));
        // CB E9 0370
        gbc.setState(0x28de, 0x5a03, 0xec40, 0xd73b, 0x3928, 0x67d1, 0x1, 0x1);
        gbc.writeMem(0x28de, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5a03, gbc.sp());
        EXPECT(0x28e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0371
        gbc.setState(0x383c, 0xecab, 0xe560, 0x3ee9, 0x6725, 0xb482, 0x0, 0x1);
        gbc.writeMem(0x383c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xecab, gbc.sp());
        EXPECT(0x383e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0372
        gbc.setState(0x2d68, 0xda62, 0xd50, 0x8aa8, 0x599d, 0x76c1, 0x0, 0x0);
        gbc.writeMem(0x2d68, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xda62, gbc.sp());
        EXPECT(0x2d6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0373
        gbc.setState(0x278b, 0xd0e4, 0xe840, 0xa98c, 0xa2de, 0x5010, 0x0, 0x1);
        gbc.writeMem(0x278b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd0e4, gbc.sp());
        EXPECT(0x278d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0374
        gbc.setState(0xb106, 0xf533, 0x60e0, 0x3af5, 0xfb36, 0xd958, 0x0, 0x1);
        gbc.writeMem(0xb106, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf533, gbc.sp());
        EXPECT(0xb108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb106));
        EXPECT(0xe9, gbc.readMem(0xb107));
        // CB E9 0375
        gbc.setState(0x2bcd, 0x7b22, 0xa770, 0x1108, 0xd3e7, 0x81cc, 0x0, 0x1);
        gbc.writeMem(0x2bcd, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7b22, gbc.sp());
        EXPECT(0x2bcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0376
        gbc.setState(0x481b, 0x31ed, 0xfe30, 0xb2c6, 0x957a, 0x62ec, 0x0, 0x0);
        gbc.writeMem(0x481b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x31ed, gbc.sp());
        EXPECT(0x481d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0377
        gbc.setState(0x3a3, 0xa46b, 0x8610, 0x692b, 0x5cc, 0xf7b6, 0x1, 0x0);
        gbc.writeMem(0x3a3, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa46b, gbc.sp());
        EXPECT(0x3a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0378
        gbc.setState(0xd958, 0x9611, 0x3270, 0x2ba2, 0x20b7, 0xd2b1, 0x1, 0x0);
        gbc.writeMem(0xd958, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9611, gbc.sp());
        EXPECT(0xd95a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd958));
        EXPECT(0xe9, gbc.readMem(0xd959));
        // CB E9 0379
        gbc.setState(0x3ef4, 0xab21, 0x79b0, 0xeab, 0x542f, 0x974e, 0x0, 0x0);
        gbc.writeMem(0x3ef4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xab21, gbc.sp());
        EXPECT(0x3ef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 037A
        gbc.setState(0x2c8e, 0xf986, 0x1620, 0xa6aa, 0x2aac, 0x7caa, 0x0, 0x0);
        gbc.writeMem(0x2c8e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf986, gbc.sp());
        EXPECT(0x2c90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 037B
        gbc.setState(0xdbdc, 0xd7fb, 0x7d0, 0x3861, 0x2b7b, 0x1345, 0x0, 0x0);
        gbc.writeMem(0xdbdc, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd7fb, gbc.sp());
        EXPECT(0xdbde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbdc));
        EXPECT(0xe9, gbc.readMem(0xdbdd));
        // CB E9 037C
        gbc.setState(0x75be, 0x330e, 0xbc0, 0xb137, 0x2096, 0x2405, 0x1, 0x1);
        gbc.writeMem(0x75be, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x330e, gbc.sp());
        EXPECT(0x75c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 037D
        gbc.setState(0x9e6e, 0xfcc3, 0xac00, 0xbb2b, 0x852d, 0xb4fa, 0x0, 0x1);
        gbc.writeMem(0x9e6e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xfcc3, gbc.sp());
        EXPECT(0x9e70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e6e));
        EXPECT(0xe9, gbc.readMem(0x9e6f));
        // CB E9 037E
        gbc.setState(0xd186, 0xef3a, 0x29d0, 0x9759, 0xa897, 0x44bd, 0x0, 0x0);
        gbc.writeMem(0xd186, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xef3a, gbc.sp());
        EXPECT(0xd188, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd186));
        EXPECT(0xe9, gbc.readMem(0xd187));
        // CB E9 037F
        gbc.setState(0x92cb, 0xe8b2, 0xe060, 0x74ff, 0x3a69, 0xb4ba, 0x0, 0x1);
        gbc.writeMem(0x92cb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe8b2, gbc.sp());
        EXPECT(0x92cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92cb));
        EXPECT(0xe9, gbc.readMem(0x92cc));
        // CB E9 0380
        gbc.setState(0xc988, 0x6106, 0x61e0, 0x7c57, 0x9cf9, 0x1925, 0x0, 0x1);
        gbc.writeMem(0xc988, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6106, gbc.sp());
        EXPECT(0xc98a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc988));
        EXPECT(0xe9, gbc.readMem(0xc989));
        // CB E9 0382
        gbc.setState(0x1343, 0xe4d2, 0x99a0, 0x20bd, 0xf8fb, 0xf40f, 0x1, 0x1);
        gbc.writeMem(0x1343, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe4d2, gbc.sp());
        EXPECT(0x1345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0383
        gbc.setState(0xbbf1, 0x6b2d, 0xc8c0, 0xb01d, 0x790a, 0x30a0, 0x0, 0x0);
        gbc.writeMem(0xbbf1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6b2d, gbc.sp());
        EXPECT(0xbbf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbf1));
        EXPECT(0xe9, gbc.readMem(0xbbf2));
        // CB E9 0384
        gbc.setState(0x5a5a, 0xdf5f, 0x2190, 0xe3a5, 0x35db, 0x4fff, 0x0, 0x1);
        gbc.writeMem(0x5a5a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xdf5f, gbc.sp());
        EXPECT(0x5a5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0385
        gbc.setState(0x1023, 0x2121, 0xefa0, 0x9627, 0xfe5f, 0x2591, 0x1, 0x0);
        gbc.writeMem(0x1023, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2121, gbc.sp());
        EXPECT(0x1025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0386
        gbc.setState(0xec4c, 0xad48, 0xd60, 0x2e62, 0xd13c, 0xb6c, 0x1, 0x1);
        gbc.writeMem(0xec4c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xad48, gbc.sp());
        EXPECT(0xec4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec4c));
        EXPECT(0xe9, gbc.readMem(0xec4d));
        // CB E9 0387
        gbc.setState(0x16df, 0x9807, 0x1100, 0x3269, 0xed92, 0x9949, 0x1, 0x0);
        gbc.writeMem(0x16df, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9807, gbc.sp());
        EXPECT(0x16e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0389
        gbc.setState(0x532, 0x368c, 0x3cc0, 0xb8c6, 0x8b6a, 0x7cf1, 0x0, 0x1);
        gbc.writeMem(0x532, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x368c, gbc.sp());
        EXPECT(0x534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 038A
        gbc.setState(0x282f, 0xa98e, 0x6680, 0x2e11, 0x502a, 0xf07e, 0x0, 0x0);
        gbc.writeMem(0x282f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa98e, gbc.sp());
        EXPECT(0x2831, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 038B
        gbc.setState(0xad48, 0x931e, 0x45c0, 0xcc7f, 0x43fa, 0x2e25, 0x1, 0x0);
        gbc.writeMem(0xad48, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x931e, gbc.sp());
        EXPECT(0xad4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad48));
        EXPECT(0xe9, gbc.readMem(0xad49));
        // CB E9 038C
        gbc.setState(0xce86, 0x3f7b, 0xb220, 0x6b3b, 0x35cf, 0x301e, 0x1, 0x1);
        gbc.writeMem(0xce86, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3f7b, gbc.sp());
        EXPECT(0xce88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce86));
        EXPECT(0xe9, gbc.readMem(0xce87));
        // CB E9 038D
        gbc.setState(0x5f5a, 0xd833, 0x2020, 0xd5d2, 0xae99, 0x21bd, 0x0, 0x1);
        gbc.writeMem(0x5f5a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd833, gbc.sp());
        EXPECT(0x5f5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 038F
        gbc.setState(0x15a, 0xc2ae, 0x20d0, 0xe51f, 0x39f6, 0xabac, 0x1, 0x1);
        gbc.writeMem(0x15a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc2ae, gbc.sp());
        EXPECT(0x15c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0390
        gbc.setState(0x9a50, 0x24d1, 0x4d60, 0x6471, 0x57cf, 0x60f8, 0x1, 0x1);
        gbc.writeMem(0x9a50, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x24d1, gbc.sp());
        EXPECT(0x9a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a50));
        EXPECT(0xe9, gbc.readMem(0x9a51));
        // CB E9 0391
        gbc.setState(0x2e15, 0x2b3a, 0xd840, 0xa96d, 0xa90b, 0x2376, 0x0, 0x1);
        gbc.writeMem(0x2e15, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2b3a, gbc.sp());
        EXPECT(0x2e17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 0392
        gbc.setState(0xbbe9, 0x308e, 0xd7d0, 0xc880, 0xd4d6, 0x4487, 0x0, 0x1);
        gbc.writeMem(0xbbe9, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x308e, gbc.sp());
        EXPECT(0xbbeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe9));
        EXPECT(0xe9, gbc.readMem(0xbbea));
        // CB E9 0393
        gbc.setState(0xa653, 0x613c, 0xa140, 0xedee, 0x82ec, 0x7c62, 0x1, 0x1);
        gbc.writeMem(0xa653, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x613c, gbc.sp());
        EXPECT(0xa655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa653));
        EXPECT(0xe9, gbc.readMem(0xa654));
        // CB E9 0394
        gbc.setState(0xd266, 0x1c26, 0xe5f0, 0x9a4c, 0xe0d9, 0x7482, 0x1, 0x0);
        gbc.writeMem(0xd266, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x1c26, gbc.sp());
        EXPECT(0xd268, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd266));
        EXPECT(0xe9, gbc.readMem(0xd267));
        // CB E9 0396
        gbc.setState(0xedaa, 0xfe7a, 0x8810, 0x4aa3, 0x8424, 0xfa40, 0x1, 0x1);
        gbc.writeMem(0xedaa, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xfe7a, gbc.sp());
        EXPECT(0xedac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedaa));
        EXPECT(0xe9, gbc.readMem(0xedab));
        // CB E9 0398
        gbc.setState(0x3563, 0xcaec, 0x11f0, 0x3b91, 0xb424, 0x271c, 0x1, 0x0);
        gbc.writeMem(0x3563, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xcaec, gbc.sp());
        EXPECT(0x3565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 0399
        gbc.setState(0x533e, 0x81ea, 0x2cb0, 0x22c, 0xc47c, 0x688f, 0x1, 0x1);
        gbc.writeMem(0x533e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x81ea, gbc.sp());
        EXPECT(0x5340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 039A
        gbc.setState(0x3280, 0x7555, 0xf00, 0xfe73, 0x3229, 0xf374, 0x0, 0x0);
        gbc.writeMem(0x3280, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7555, gbc.sp());
        EXPECT(0x3282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 039C
        gbc.setState(0xac65, 0x6910, 0xab10, 0xfbcf, 0xc73, 0xb438, 0x0, 0x1);
        gbc.writeMem(0xac65, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6910, gbc.sp());
        EXPECT(0xac67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac65));
        EXPECT(0xe9, gbc.readMem(0xac66));
        // CB E9 039D
        gbc.setState(0xd542, 0x6d60, 0x7f80, 0xd109, 0x8368, 0x903a, 0x0, 0x0);
        gbc.writeMem(0xd542, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6d60, gbc.sp());
        EXPECT(0xd544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd542));
        EXPECT(0xe9, gbc.readMem(0xd543));
        // CB E9 039E
        gbc.setState(0x9663, 0xd64a, 0x2b10, 0xf3f0, 0x581, 0x312, 0x0, 0x1);
        gbc.writeMem(0x9663, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd64a, gbc.sp());
        EXPECT(0x9665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9663));
        EXPECT(0xe9, gbc.readMem(0x9664));
        // CB E9 039F
        gbc.setState(0x6ebc, 0xded0, 0x1b60, 0xb760, 0xe1da, 0x2c4a, 0x0, 0x0);
        gbc.writeMem(0x6ebc, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xded0, gbc.sp());
        EXPECT(0x6ebe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 03A0
        gbc.setState(0xded0, 0xbc3, 0x2e10, 0x32ba, 0x8d7f, 0x4cb1, 0x1, 0x0);
        gbc.writeMem(0xded0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbc3, gbc.sp());
        EXPECT(0xded2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xded0));
        EXPECT(0xe9, gbc.readMem(0xded1));
        // CB E9 03A1
        gbc.setState(0xbbf, 0xea5f, 0xe700, 0xa106, 0xacdd, 0x4368, 0x0, 0x1);
        gbc.writeMem(0xbbf, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xea5f, gbc.sp());
        EXPECT(0xbc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 03A3
        gbc.setState(0x5b12, 0x80a, 0x55a0, 0x48e4, 0x5930, 0x1202, 0x1, 0x1);
        gbc.writeMem(0x5b12, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x80a, gbc.sp());
        EXPECT(0x5b14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 03A4
        gbc.setState(0xc58b, 0x6833, 0xabc0, 0x14db, 0x3608, 0x4af4, 0x1, 0x0);
        gbc.writeMem(0xc58b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6833, gbc.sp());
        EXPECT(0xc58d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc58b));
        EXPECT(0xe9, gbc.readMem(0xc58c));
        // CB E9 03A5
        gbc.setState(0xd674, 0x7315, 0xf800, 0x8c89, 0x8cee, 0xe518, 0x1, 0x1);
        gbc.writeMem(0xd674, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7315, gbc.sp());
        EXPECT(0xd676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd674));
        EXPECT(0xe9, gbc.readMem(0xd675));
        // CB E9 03A6
        gbc.setState(0x763, 0xb03c, 0xf670, 0xa0e8, 0xf313, 0x8344, 0x1, 0x0);
        gbc.writeMem(0x763, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb03c, gbc.sp());
        EXPECT(0x765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 03A7
        gbc.setState(0x6909, 0x5f00, 0x6540, 0xe02a, 0xcf88, 0x26a9, 0x0, 0x1);
        gbc.writeMem(0x6909, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5f00, gbc.sp());
        EXPECT(0x690b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 03A8
        gbc.setState(0xdebb, 0xec24, 0xddb0, 0xbbd7, 0xc7d, 0x1883, 0x1, 0x1);
        gbc.writeMem(0xdebb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xec24, gbc.sp());
        EXPECT(0xdebd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdebb));
        EXPECT(0xe9, gbc.readMem(0xdebc));
        // CB E9 03A9
        gbc.setState(0x1300, 0xd519, 0x84e0, 0x9178, 0x6862, 0xb3d2, 0x0, 0x1);
        gbc.writeMem(0x1300, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd519, gbc.sp());
        EXPECT(0x1302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 03AA
        gbc.setState(0x3fa1, 0xdb45, 0x3ee0, 0x8786, 0x555b, 0xcce4, 0x0, 0x0);
        gbc.writeMem(0x3fa1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xdb45, gbc.sp());
        EXPECT(0x3fa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 03AB
        gbc.setState(0xea48, 0x581c, 0xb940, 0x7e0, 0x469a, 0x71b8, 0x0, 0x1);
        gbc.writeMem(0xea48, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x581c, gbc.sp());
        EXPECT(0xea4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea48));
        EXPECT(0xe9, gbc.readMem(0xea49));
        // CB E9 03AC
        gbc.setState(0xc1ac, 0xe208, 0xffe0, 0x10f2, 0x7762, 0xa476, 0x1, 0x0);
        gbc.writeMem(0xc1ac, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe208, gbc.sp());
        EXPECT(0xc1ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ac));
        EXPECT(0xe9, gbc.readMem(0xc1ad));
        // CB E9 03AD
        gbc.setState(0x978c, 0xbb8b, 0x6190, 0xa0ab, 0xd15f, 0xa584, 0x0, 0x0);
        gbc.writeMem(0x978c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbb8b, gbc.sp());
        EXPECT(0x978e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x978c));
        EXPECT(0xe9, gbc.readMem(0x978d));
        // CB E9 03AE
        gbc.setState(0x343c, 0x124c, 0xd260, 0x3059, 0x165d, 0x499c, 0x1, 0x0);
        gbc.writeMem(0x343c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x124c, gbc.sp());
        EXPECT(0x343e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 03AF
        gbc.setState(0x499, 0x38eb, 0xc150, 0x487a, 0x6355, 0xca66, 0x1, 0x0);
        gbc.writeMem(0x499, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x38eb, gbc.sp());
        EXPECT(0x49b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 03B0
        gbc.setState(0x7929, 0xa0cf, 0xaff0, 0x3d24, 0x56db, 0x1297, 0x1, 0x1);
        gbc.writeMem(0x7929, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa0cf, gbc.sp());
        EXPECT(0x792b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 03B1
        gbc.setState(0x8f7b, 0xb82e, 0x1200, 0xa8ae, 0x9792, 0xe256, 0x0, 0x0);
        gbc.writeMem(0x8f7b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb82e, gbc.sp());
        EXPECT(0x8f7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f7b));
        EXPECT(0xe9, gbc.readMem(0x8f7c));
        // CB E9 03B2
        gbc.setState(0x73ff, 0x577e, 0x840, 0xb748, 0x6ccc, 0x832d, 0x0, 0x0);
        gbc.writeMem(0x73ff, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x577e, gbc.sp());
        EXPECT(0x7401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 03B3
        gbc.setState(0x9d37, 0x1da4, 0xb7c0, 0xebc0, 0x579c, 0xf6f8, 0x1, 0x1);
        gbc.writeMem(0x9d37, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x1da4, gbc.sp());
        EXPECT(0x9d39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d37));
        EXPECT(0xe9, gbc.readMem(0x9d38));
        // CB E9 03B4
        gbc.setState(0xef3d, 0x3c64, 0xc800, 0x4591, 0x4077, 0x4831, 0x0, 0x0);
        gbc.writeMem(0xef3d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3c64, gbc.sp());
        EXPECT(0xef3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef3d));
        EXPECT(0xe9, gbc.readMem(0xef3e));
        // CB E9 03B5
        gbc.setState(0xb4ec, 0xe2a0, 0xfe60, 0x71ae, 0xb9c1, 0xe200, 0x1, 0x1);
        gbc.writeMem(0xb4ec, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe2a0, gbc.sp());
        EXPECT(0xb4ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ec));
        EXPECT(0xe9, gbc.readMem(0xb4ed));
        // CB E9 03B6
        gbc.setState(0x6883, 0x1458, 0x56a0, 0xa1a6, 0xf287, 0x2f58, 0x0, 0x1);
        gbc.writeMem(0x6883, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1458, gbc.sp());
        EXPECT(0x6885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 03B7
        gbc.setState(0xe8c4, 0x9e44, 0xd3c0, 0x8e38, 0xddc8, 0xfae6, 0x0, 0x0);
        gbc.writeMem(0xe8c4, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9e44, gbc.sp());
        EXPECT(0xe8c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8c4));
        EXPECT(0xe9, gbc.readMem(0xe8c5));
        // CB E9 03B8
        gbc.setState(0x3bda, 0xce85, 0xe750, 0xd133, 0xedce, 0x3b58, 0x1, 0x1);
        gbc.writeMem(0x3bda, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xce85, gbc.sp());
        EXPECT(0x3bdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 03B9
        gbc.setState(0x84c1, 0x75ef, 0x59a0, 0x27ff, 0xfb75, 0xd8ba, 0x1, 0x1);
        gbc.writeMem(0x84c1, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x75ef, gbc.sp());
        EXPECT(0x84c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c1));
        EXPECT(0xe9, gbc.readMem(0x84c2));
        // CB E9 03BA
        gbc.setState(0x3851, 0x9259, 0x18e0, 0x7cf, 0x1f94, 0xceec, 0x1, 0x1);
        gbc.writeMem(0x3851, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9259, gbc.sp());
        EXPECT(0x3853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 03BB
        gbc.setState(0xed95, 0x5dc2, 0x5420, 0xe8af, 0xf35, 0x3aff, 0x0, 0x0);
        gbc.writeMem(0xed95, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5dc2, gbc.sp());
        EXPECT(0xed97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed95));
        EXPECT(0xe9, gbc.readMem(0xed96));
        // CB E9 03BC
        gbc.setState(0x593e, 0x8afb, 0x2260, 0xb9bf, 0xda65, 0x6a59, 0x1, 0x0);
        gbc.writeMem(0x593e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8afb, gbc.sp());
        EXPECT(0x5940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 03BD
        gbc.setState(0x5af5, 0x2adc, 0x6b50, 0x201b, 0xfdba, 0x72f8, 0x1, 0x1);
        gbc.writeMem(0x5af5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2adc, gbc.sp());
        EXPECT(0x5af7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 03BE
        gbc.setState(0x898d, 0x58f4, 0x3dc0, 0x7d7c, 0x940b, 0x92e, 0x1, 0x0);
        gbc.writeMem(0x898d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x58f4, gbc.sp());
        EXPECT(0x898f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x898d));
        EXPECT(0xe9, gbc.readMem(0x898e));
        // CB E9 03BF
        gbc.setState(0xa060, 0x1a27, 0xb240, 0x6248, 0xb0d8, 0x392f, 0x0, 0x0);
        gbc.writeMem(0xa060, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1a27, gbc.sp());
        EXPECT(0xa062, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa060));
        EXPECT(0xe9, gbc.readMem(0xa061));
        // CB E9 03C0
        gbc.setState(0xd95, 0xd3dc, 0xc590, 0x2d76, 0x4bf5, 0x601a, 0x1, 0x1);
        gbc.writeMem(0xd95, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd3dc, gbc.sp());
        EXPECT(0xd97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 03C1
        gbc.setState(0xd45, 0x5b7b, 0xbd60, 0x58ba, 0x5ae2, 0x265e, 0x1, 0x1);
        gbc.writeMem(0xd45, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5b7b, gbc.sp());
        EXPECT(0xd47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 03C2
        gbc.setState(0x3b68, 0x3480, 0xac40, 0x2294, 0x51a2, 0xb286, 0x1, 0x0);
        gbc.writeMem(0x3b68, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3480, gbc.sp());
        EXPECT(0x3b6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 03C3
        gbc.setState(0xae7a, 0x4698, 0x1290, 0x8949, 0xe076, 0xb656, 0x1, 0x1);
        gbc.writeMem(0xae7a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4698, gbc.sp());
        EXPECT(0xae7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae7a));
        EXPECT(0xe9, gbc.readMem(0xae7b));
        // CB E9 03C4
        gbc.setState(0x5181, 0x797c, 0x3450, 0x50d5, 0x91ae, 0xd57, 0x1, 0x1);
        gbc.writeMem(0x5181, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x797c, gbc.sp());
        EXPECT(0x5183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 03C5
        gbc.setState(0xa28a, 0x65fe, 0x4600, 0x7c3d, 0x4403, 0xef8f, 0x0, 0x0);
        gbc.writeMem(0xa28a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x65fe, gbc.sp());
        EXPECT(0xa28c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa28a));
        EXPECT(0xe9, gbc.readMem(0xa28b));
        // CB E9 03C6
        gbc.setState(0x8e18, 0xedad, 0x79d0, 0x9a29, 0x64e2, 0xfb0, 0x1, 0x1);
        gbc.writeMem(0x8e18, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xedad, gbc.sp());
        EXPECT(0x8e1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e18));
        EXPECT(0xe9, gbc.readMem(0x8e19));
        // CB E9 03C7
        gbc.setState(0x6bdf, 0x878e, 0x87b0, 0x1b65, 0x7d1e, 0x306, 0x1, 0x1);
        gbc.writeMem(0x6bdf, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x878e, gbc.sp());
        EXPECT(0x6be1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 03C9
        gbc.setState(0x87c7, 0x8ecc, 0x2a50, 0xf0ee, 0x7d32, 0xffff, 0x0, 0x0);
        gbc.writeMem(0x87c7, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8ecc, gbc.sp());
        EXPECT(0x87c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87c7));
        EXPECT(0xe9, gbc.readMem(0x87c8));
        // CB E9 03CA
        gbc.setState(0x4903, 0x3b33, 0xeca0, 0xff59, 0xcf4c, 0xd361, 0x0, 0x1);
        gbc.writeMem(0x4903, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3b33, gbc.sp());
        EXPECT(0x4905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 03CB
        gbc.setState(0x8e90, 0x9b74, 0xbc40, 0x71bf, 0x57c, 0x4124, 0x1, 0x0);
        gbc.writeMem(0x8e90, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9b74, gbc.sp());
        EXPECT(0x8e92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e90));
        EXPECT(0xe9, gbc.readMem(0x8e91));
        // CB E9 03CC
        gbc.setState(0xd081, 0x934e, 0x7180, 0x6174, 0x977f, 0x1f1a, 0x1, 0x1);
        gbc.writeMem(0xd081, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x934e, gbc.sp());
        EXPECT(0xd083, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd081));
        EXPECT(0xe9, gbc.readMem(0xd082));
        // CB E9 03CD
        gbc.setState(0xd20f, 0xeedb, 0xc510, 0xd41c, 0x317, 0x5cc4, 0x0, 0x1);
        gbc.writeMem(0xd20f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xeedb, gbc.sp());
        EXPECT(0xd211, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd20f));
        EXPECT(0xe9, gbc.readMem(0xd210));
        // CB E9 03CE
        gbc.setState(0x4cbd, 0xf4ba, 0xccf0, 0x635d, 0xb95, 0x5710, 0x0, 0x0);
        gbc.writeMem(0x4cbd, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf4ba, gbc.sp());
        EXPECT(0x4cbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 03CF
        gbc.setState(0xed6b, 0xd67c, 0x7ae0, 0x27a0, 0x3faa, 0x6912, 0x1, 0x1);
        gbc.writeMem(0xed6b, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd67c, gbc.sp());
        EXPECT(0xed6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed6b));
        EXPECT(0xe9, gbc.readMem(0xed6c));
        // CB E9 03D0
        gbc.setState(0x5b18, 0xea26, 0x84f0, 0x416c, 0xb0e2, 0x523e, 0x1, 0x1);
        gbc.writeMem(0x5b18, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xea26, gbc.sp());
        EXPECT(0x5b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 03D1
        gbc.setState(0x2055, 0xb8df, 0x1390, 0x90b3, 0x2083, 0x7a28, 0x1, 0x1);
        gbc.writeMem(0x2055, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb8df, gbc.sp());
        EXPECT(0x2057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 03D2
        gbc.setState(0x517a, 0x3e03, 0xc2f0, 0x4710, 0x3db4, 0x248c, 0x1, 0x0);
        gbc.writeMem(0x517a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3e03, gbc.sp());
        EXPECT(0x517c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 03D3
        gbc.setState(0x56d0, 0x269d, 0x4550, 0x364b, 0xa5b3, 0xece7, 0x1, 0x1);
        gbc.writeMem(0x56d0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x269d, gbc.sp());
        EXPECT(0x56d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 03D4
        gbc.setState(0xad8, 0xdc4c, 0x2980, 0x7f2f, 0x700f, 0xcf59, 0x1, 0x1);
        gbc.writeMem(0xad8, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xdc4c, gbc.sp());
        EXPECT(0xada, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 03D5
        gbc.setState(0x8732, 0x6b03, 0xf220, 0x23bb, 0xd629, 0xdb65, 0x1, 0x1);
        gbc.writeMem(0x8732, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6b03, gbc.sp());
        EXPECT(0x8734, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8732));
        EXPECT(0xe9, gbc.readMem(0x8733));
        // CB E9 03D6
        gbc.setState(0x3ff5, 0xc78e, 0x6cb0, 0xa9e2, 0xcfae, 0x9697, 0x0, 0x0);
        gbc.writeMem(0x3ff5, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc78e, gbc.sp());
        EXPECT(0x3ff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 03D7
        gbc.setState(0x143d, 0x1857, 0x4ad0, 0x9d4f, 0x925f, 0x9cce, 0x0, 0x0);
        gbc.writeMem(0x143d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1857, gbc.sp());
        EXPECT(0x143f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 03D8
        gbc.setState(0x1dfb, 0x2d8a, 0x1c80, 0xe391, 0x4ba5, 0xbb72, 0x0, 0x1);
        gbc.writeMem(0x1dfb, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2d8a, gbc.sp());
        EXPECT(0x1dfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 03D9
        gbc.setState(0x681f, 0x3cd2, 0xe440, 0x8e39, 0xc656, 0x43fe, 0x1, 0x1);
        gbc.writeMem(0x681f, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3cd2, gbc.sp());
        EXPECT(0x6821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 03DA
        gbc.setState(0xdf38, 0xd09d, 0xc390, 0xf76b, 0xf491, 0x6a65, 0x1, 0x1);
        gbc.writeMem(0xdf38, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd09d, gbc.sp());
        EXPECT(0xdf3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf38));
        EXPECT(0xe9, gbc.readMem(0xdf39));
        // CB E9 03DB
        gbc.setState(0x5c9d, 0x59be, 0xb4f0, 0x29d2, 0xe238, 0x4de9, 0x0, 0x1);
        gbc.writeMem(0x5c9d, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x59be, gbc.sp());
        EXPECT(0x5c9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 03DC
        gbc.setState(0x5bd0, 0x864b, 0x1fd0, 0x6342, 0x15ae, 0x6719, 0x1, 0x0);
        gbc.writeMem(0x5bd0, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x864b, gbc.sp());
        EXPECT(0x5bd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 03DD
        gbc.setState(0x1a1e, 0xdf54, 0xab0, 0xf1cd, 0xd847, 0xe285, 0x0, 0x1);
        gbc.writeMem(0x1a1e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xdf54, gbc.sp());
        EXPECT(0x1a20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 03DE
        gbc.setState(0x7e9c, 0x26e, 0x4650, 0x2477, 0x43c3, 0x6ca1, 0x0, 0x0);
        gbc.writeMem(0x7e9c, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x26e, gbc.sp());
        EXPECT(0x7e9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 03DF
        gbc.setState(0xa937, 0xfefd, 0x8720, 0x45c7, 0xbdf6, 0xa71a, 0x1, 0x1);
        gbc.writeMem(0xa937, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xfefd, gbc.sp());
        EXPECT(0xa939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa937));
        EXPECT(0xe9, gbc.readMem(0xa938));
        // CB E9 03E0
        gbc.setState(0x33e, 0x2e34, 0xe4d0, 0x51e1, 0x1d51, 0x5c16, 0x0, 0x0);
        gbc.writeMem(0x33e, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2e34, gbc.sp());
        EXPECT(0x340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 03E1
        gbc.setState(0x5c99, 0xefb6, 0x55f0, 0x34e6, 0x819b, 0x58b5, 0x0, 0x1);
        gbc.writeMem(0x5c99, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xefb6, gbc.sp());
        EXPECT(0x5c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 03E2
        gbc.setState(0x80df, 0xd826, 0x6340, 0x2fec, 0xf239, 0x3c4b, 0x1, 0x1);
        gbc.writeMem(0x80df, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd826, gbc.sp());
        EXPECT(0x80e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80df));
        EXPECT(0xe9, gbc.readMem(0x80e0));
        // CB E9 03E3
        gbc.setState(0x7531, 0x539f, 0xcb00, 0xd259, 0x6418, 0xdacb, 0x0, 0x1);
        gbc.writeMem(0x7531, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x539f, gbc.sp());
        EXPECT(0x7533, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E9 03E4
        gbc.setState(0xa803, 0x204f, 0x4c70, 0xd48f, 0xc30a, 0xab00, 0x0, 0x1);
        gbc.writeMem(0xa803, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x204f, gbc.sp());
        EXPECT(0xa805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa803));
        EXPECT(0xe9, gbc.readMem(0xa804));
        // CB E9 03E5
        gbc.setState(0x6a00, 0x7aea, 0xf810, 0xb7df, 0xdd62, 0x5999, 0x1, 0x0);
        gbc.writeMem(0x6a00, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7aea, gbc.sp());
        EXPECT(0x6a02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E9 03E6
        gbc.setState(0x952a, 0xf006, 0x8a10, 0x8133, 0x4106, 0xacda, 0x0, 0x0);
        gbc.writeMem(0x952a, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf006, gbc.sp());
        EXPECT(0x952c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x952a));
        EXPECT(0xe9, gbc.readMem(0x952b));
        // CB E9 03E7
        gbc.setState(0x3292, 0x1be2, 0x58c0, 0x198d, 0xd48d, 0xdaae, 0x1, 0x1);
        gbc.writeMem(0x3292, { 0xcb, 0xe9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1be2, gbc.sp());
        EXPECT(0x3294, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
