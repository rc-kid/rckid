    TEST(gbcemu, opcode_a0) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // A0 0000
        gbc.setState(0x6fcf, 0x82ea, 0x74b0, 0x129e, 0x37b5, 0x6aa1, 0x0, 0x0);
        gbc.writeMem(0x6fcf, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x82ea, gbc.sp());
        EXPECT(0x6fd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0001
        gbc.setState(0xe53e, 0x56a1, 0x2a10, 0x6f2c, 0xa9cd, 0x5dbd, 0x1, 0x0);
        gbc.writeMem(0xe53e, { 0xa0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x56a1, gbc.sp());
        EXPECT(0xe53f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe53e));
        // A0 0002
        gbc.setState(0x1ab0, 0x2041, 0x2b40, 0xaa68, 0xd86d, 0xe2f9, 0x0, 0x1);
        gbc.writeMem(0x1ab0, { 0xa0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2041, gbc.sp());
        EXPECT(0x1ab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0004
        gbc.setState(0x980d, 0xf824, 0xdbd0, 0x9b10, 0x4c21, 0xeea9, 0x0, 0x1);
        gbc.writeMem(0x980d, { 0xa0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf824, gbc.sp());
        EXPECT(0x980e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x980d));
        // A0 0005
        gbc.setState(0xa7e, 0x46fa, 0x8cf0, 0x2f6b, 0x2a93, 0x5c0d, 0x1, 0x0);
        gbc.writeMem(0xa7e, { 0xa0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x46fa, gbc.sp());
        EXPECT(0xa7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0006
        gbc.setState(0x5da8, 0xda72, 0x9fe0, 0xd230, 0xc066, 0xcbf, 0x1, 0x0);
        gbc.writeMem(0x5da8, { 0xa0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xda72, gbc.sp());
        EXPECT(0x5da9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0007
        gbc.setState(0x498f, 0x315d, 0x2950, 0xbdf4, 0x1bb, 0xa147, 0x0, 0x0);
        gbc.writeMem(0x498f, { 0xa0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x315d, gbc.sp());
        EXPECT(0x4990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0008
        gbc.setState(0xd4ee, 0x2830, 0x7aa0, 0xc7d2, 0xfedd, 0xbd6a, 0x1, 0x1);
        gbc.writeMem(0xd4ee, { 0xa0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2830, gbc.sp());
        EXPECT(0xd4ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd4ee));
        // A0 0009
        gbc.setState(0xae07, 0x62f, 0xfbd0, 0x889e, 0xa753, 0x865d, 0x1, 0x0);
        gbc.writeMem(0xae07, { 0xa0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x62f, gbc.sp());
        EXPECT(0xae08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xae07));
        // A0 000A
        gbc.setState(0x3df0, 0xd72b, 0xff10, 0x6d48, 0xf088, 0xe70e, 0x0, 0x1);
        gbc.writeMem(0x3df0, { 0xa0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd72b, gbc.sp());
        EXPECT(0x3df1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 000B
        gbc.setState(0x23d5, 0x8ef0, 0xb0d0, 0x1132, 0xd3ea, 0xb7f5, 0x1, 0x1);
        gbc.writeMem(0x23d5, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8ef0, gbc.sp());
        EXPECT(0x23d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 000C
        gbc.setState(0x856a, 0xafde, 0x8b50, 0x79ee, 0xaa3b, 0x213c, 0x0, 0x0);
        gbc.writeMem(0x856a, { 0xa0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xafde, gbc.sp());
        EXPECT(0x856b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x856a));
        // A0 000D
        gbc.setState(0x4afa, 0xa5fe, 0xc3e0, 0x4d8a, 0x54d4, 0x706f, 0x0, 0x1);
        gbc.writeMem(0x4afa, { 0xa0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa5fe, gbc.sp());
        EXPECT(0x4afb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 000E
        gbc.setState(0xc849, 0xc44, 0x14a0, 0x9cd0, 0xf3fb, 0xed91, 0x1, 0x0);
        gbc.writeMem(0xc849, { 0xa0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc44, gbc.sp());
        EXPECT(0xc84a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc849));
        // A0 000F
        gbc.setState(0x3673, 0x59bd, 0x8000, 0x2c9, 0x2b94, 0xa1b, 0x1, 0x0);
        gbc.writeMem(0x3673, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x59bd, gbc.sp());
        EXPECT(0x3674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0010
        gbc.setState(0x5716, 0x8466, 0x8280, 0xcdcb, 0xf23c, 0xd4c1, 0x1, 0x1);
        gbc.writeMem(0x5716, { 0xa0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8466, gbc.sp());
        EXPECT(0x5717, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0011
        gbc.setState(0x572, 0xcc6a, 0xf00, 0xe106, 0x2513, 0x69d5, 0x0, 0x0);
        gbc.writeMem(0x572, { 0xa0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xcc6a, gbc.sp());
        EXPECT(0x573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0012
        gbc.setState(0x18ba, 0x72d9, 0xbea0, 0x98d2, 0xe0d2, 0x20dc, 0x1, 0x0);
        gbc.writeMem(0x18ba, { 0xa0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x72d9, gbc.sp());
        EXPECT(0x18bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0013
        gbc.setState(0x4cfa, 0xae1e, 0xa910, 0xbc63, 0x105d, 0x9340, 0x0, 0x1);
        gbc.writeMem(0x4cfa, { 0xa0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xae1e, gbc.sp());
        EXPECT(0x4cfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0014
        gbc.setState(0x5b6e, 0xb70d, 0xa7d0, 0xf581, 0xbcb3, 0x8fd7, 0x0, 0x0);
        gbc.writeMem(0x5b6e, { 0xa0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb70d, gbc.sp());
        EXPECT(0x5b6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0015
        gbc.setState(0x5f98, 0x4dc8, 0x5700, 0x7d9f, 0x37fc, 0x6dd8, 0x0, 0x0);
        gbc.writeMem(0x5f98, { 0xa0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4dc8, gbc.sp());
        EXPECT(0x5f99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0016
        gbc.setState(0x1248, 0x2b3f, 0x5f60, 0x90db, 0x18f0, 0x5cd1, 0x0, 0x0);
        gbc.writeMem(0x1248, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2b3f, gbc.sp());
        EXPECT(0x1249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0017
        gbc.setState(0x7051, 0xcea7, 0xcf80, 0x17d0, 0x5135, 0x62b8, 0x0, 0x1);
        gbc.writeMem(0x7051, { 0xa0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xcea7, gbc.sp());
        EXPECT(0x7052, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0018
        gbc.setState(0xb9c6, 0xf8a, 0x7520, 0xcbaf, 0xb801, 0xbe5a, 0x1, 0x1);
        gbc.writeMem(0xb9c6, { 0xa0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf8a, gbc.sp());
        EXPECT(0xb9c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb9c6));
        // A0 0019
        gbc.setState(0x907, 0x3c66, 0x8800, 0xc206, 0x4312, 0xafc2, 0x0, 0x1);
        gbc.writeMem(0x907, { 0xa0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3c66, gbc.sp());
        EXPECT(0x908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 001A
        gbc.setState(0x2af6, 0x8d4, 0xa850, 0x4093, 0x8d78, 0x1c6a, 0x0, 0x1);
        gbc.writeMem(0x2af6, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8d4, gbc.sp());
        EXPECT(0x2af7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 001C
        gbc.setState(0xe0c8, 0xc971, 0x1e40, 0x62b2, 0xe519, 0x89b3, 0x1, 0x0);
        gbc.writeMem(0xe0c8, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc971, gbc.sp());
        EXPECT(0xe0c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe0c8));
        // A0 001D
        gbc.setState(0xb1ac, 0x4f46, 0x1600, 0xea8a, 0x41c1, 0x800a, 0x1, 0x1);
        gbc.writeMem(0xb1ac, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4f46, gbc.sp());
        EXPECT(0xb1ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb1ac));
        // A0 001E
        gbc.setState(0xc565, 0x2f25, 0xe6f0, 0x9968, 0xaa9e, 0xdeeb, 0x0, 0x1);
        gbc.writeMem(0xc565, { 0xa0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2f25, gbc.sp());
        EXPECT(0xc566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc565));
        // A0 001F
        gbc.setState(0xba43, 0x118c, 0xd620, 0x6f31, 0x339b, 0xc939, 0x1, 0x1);
        gbc.writeMem(0xba43, { 0xa0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x118c, gbc.sp());
        EXPECT(0xba44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xba43));
        // A0 0020
        gbc.setState(0x1ce9, 0xc0fa, 0xc5a0, 0xcfb0, 0x3a98, 0xcdf3, 0x1, 0x0);
        gbc.writeMem(0x1ce9, { 0xa0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc0fa, gbc.sp());
        EXPECT(0x1cea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0021
        gbc.setState(0xa85b, 0x55e7, 0x7350, 0xaeb4, 0xcedf, 0x7bc6, 0x1, 0x0);
        gbc.writeMem(0xa85b, { 0xa0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x55e7, gbc.sp());
        EXPECT(0xa85c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa85b));
        // A0 0022
        gbc.setState(0xc6c9, 0xf0cc, 0x7e00, 0xc557, 0xded4, 0x6f40, 0x1, 0x0);
        gbc.writeMem(0xc6c9, { 0xa0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf0cc, gbc.sp());
        EXPECT(0xc6ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc6c9));
        // A0 0023
        gbc.setState(0xe191, 0xf581, 0xd280, 0x55c8, 0xe74f, 0xf5ef, 0x0, 0x0);
        gbc.writeMem(0xe191, { 0xa0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf581, gbc.sp());
        EXPECT(0xe192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe191));
        // A0 0024
        gbc.setState(0x799f, 0x5ac2, 0xe2d0, 0x420b, 0x1376, 0x41f8, 0x1, 0x1);
        gbc.writeMem(0x799f, { 0xa0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5ac2, gbc.sp());
        EXPECT(0x79a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0025
        gbc.setState(0x538b, 0x976e, 0x1d40, 0xca0c, 0xc0c6, 0x276d, 0x0, 0x0);
        gbc.writeMem(0x538b, { 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x976e, gbc.sp());
        EXPECT(0x538c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0026
        gbc.setState(0xb246, 0xce8f, 0x4da0, 0x7ad6, 0x88a9, 0xd1ab, 0x1, 0x1);
        gbc.writeMem(0xb246, { 0xa0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xce8f, gbc.sp());
        EXPECT(0xb247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb246));
        // A0 0027
        gbc.setState(0x2f1f, 0x79cd, 0x4cd0, 0x920f, 0x4e72, 0x1d60, 0x1, 0x1);
        gbc.writeMem(0x2f1f, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x79cd, gbc.sp());
        EXPECT(0x2f20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0029
        gbc.setState(0xa30e, 0x9768, 0x14e0, 0xce6c, 0x6bea, 0x361, 0x0, 0x0);
        gbc.writeMem(0xa30e, { 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9768, gbc.sp());
        EXPECT(0xa30f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa30e));
        // A0 002A
        gbc.setState(0xea77, 0x39ac, 0xb9f0, 0x2a6d, 0x50e, 0xc4d2, 0x1, 0x1);
        gbc.writeMem(0xea77, { 0xa0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x39ac, gbc.sp());
        EXPECT(0xea78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xea77));
        // A0 002B
        gbc.setState(0x9c87, 0x8327, 0xba10, 0x7135, 0xc22, 0x12b7, 0x0, 0x0);
        gbc.writeMem(0x9c87, { 0xa0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8327, gbc.sp());
        EXPECT(0x9c88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9c87));
        // A0 002C
        gbc.setState(0x694e, 0x6e3, 0x4bd0, 0xc79f, 0xe7b9, 0x8a97, 0x1, 0x0);
        gbc.writeMem(0x694e, { 0xa0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6e3, gbc.sp());
        EXPECT(0x694f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 002D
        gbc.setState(0x522a, 0x65f5, 0xf10, 0x7e06, 0xc04, 0xb308, 0x0, 0x1);
        gbc.writeMem(0x522a, { 0xa0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x65f5, gbc.sp());
        EXPECT(0x522b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 002E
        gbc.setState(0x613f, 0x83d3, 0x32a0, 0xcbda, 0x6047, 0xf194, 0x1, 0x1);
        gbc.writeMem(0x613f, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x83d3, gbc.sp());
        EXPECT(0x6140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 002F
        gbc.setState(0xe681, 0x9db0, 0x9680, 0x8b33, 0xbd45, 0x58b4, 0x0, 0x0);
        gbc.writeMem(0xe681, { 0xa0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9db0, gbc.sp());
        EXPECT(0xe682, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe681));
        // A0 0030
        gbc.setState(0x9af, 0xd53, 0xe980, 0x5c98, 0x3964, 0x154b, 0x0, 0x0);
        gbc.writeMem(0x9af, { 0xa0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd53, gbc.sp());
        EXPECT(0x9b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0031
        gbc.setState(0xec03, 0x4164, 0xea0, 0xaa1c, 0x2888, 0xcf3e, 0x1, 0x1);
        gbc.writeMem(0xec03, { 0xa0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4164, gbc.sp());
        EXPECT(0xec04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xec03));
        // A0 0032
        gbc.setState(0xce54, 0x1d99, 0x1fa0, 0xfa19, 0x9e02, 0x4eb4, 0x0, 0x0);
        gbc.writeMem(0xce54, { 0xa0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1d99, gbc.sp());
        EXPECT(0xce55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xce54));
        // A0 0033
        gbc.setState(0x386a, 0xf27b, 0x3ae0, 0x8b46, 0xdd0d, 0x3689, 0x0, 0x0);
        gbc.writeMem(0x386a, { 0xa0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf27b, gbc.sp());
        EXPECT(0x386b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0034
        gbc.setState(0x1552, 0x51ca, 0x9890, 0xb9af, 0x9239, 0x44b3, 0x1, 0x1);
        gbc.writeMem(0x1552, { 0xa0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x51ca, gbc.sp());
        EXPECT(0x1553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0035
        gbc.setState(0x9971, 0xef96, 0x7d40, 0x2f30, 0x9a94, 0x7b45, 0x1, 0x1);
        gbc.writeMem(0x9971, { 0xa0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xef96, gbc.sp());
        EXPECT(0x9972, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9971));
        // A0 0036
        gbc.setState(0xdb5c, 0xe074, 0x5220, 0x1892, 0xeb5d, 0xbc3e, 0x1, 0x1);
        gbc.writeMem(0xdb5c, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe074, gbc.sp());
        EXPECT(0xdb5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xdb5c));
        // A0 0037
        gbc.setState(0xd2d3, 0x4534, 0xd730, 0xc381, 0xdacf, 0x3c47, 0x0, 0x0);
        gbc.writeMem(0xd2d3, { 0xa0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4534, gbc.sp());
        EXPECT(0xd2d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd2d3));
        // A0 0038
        gbc.setState(0x4327, 0x2d9b, 0xa40, 0xf17, 0xbc24, 0xb994, 0x0, 0x1);
        gbc.writeMem(0x4327, { 0xa0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2d9b, gbc.sp());
        EXPECT(0x4328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0039
        gbc.setState(0xb2ca, 0x377, 0x10e0, 0xf42c, 0x7e3f, 0x5f30, 0x0, 0x0);
        gbc.writeMem(0xb2ca, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x377, gbc.sp());
        EXPECT(0xb2cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb2ca));
        // A0 003A
        gbc.setState(0x94b0, 0x5d22, 0x7a80, 0xb8ff, 0x3022, 0x4c5f, 0x0, 0x0);
        gbc.writeMem(0x94b0, { 0xa0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5d22, gbc.sp());
        EXPECT(0x94b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x94b0));
        // A0 003B
        gbc.setState(0xe223, 0x9d29, 0x9620, 0x7245, 0xf9b9, 0x3260, 0x0, 0x1);
        gbc.writeMem(0xe223, { 0xa0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9d29, gbc.sp());
        EXPECT(0xe224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe223));
        // A0 003C
        gbc.setState(0x3102, 0xac46, 0xc650, 0xa763, 0xb966, 0x65f4, 0x1, 0x0);
        gbc.writeMem(0x3102, { 0xa0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xac46, gbc.sp());
        EXPECT(0x3103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 003D
        gbc.setState(0xb63b, 0x295b, 0xa0a0, 0x2a83, 0xbed2, 0xd3b0, 0x1, 0x0);
        gbc.writeMem(0xb63b, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x295b, gbc.sp());
        EXPECT(0xb63c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb63b));
        // A0 003E
        gbc.setState(0x2982, 0x775a, 0x25b0, 0xfb4b, 0x1a8, 0xcd22, 0x0, 0x0);
        gbc.writeMem(0x2982, { 0xa0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x775a, gbc.sp());
        EXPECT(0x2983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 003F
        gbc.setState(0x7447, 0xe14d, 0x1ea0, 0xceb3, 0x8315, 0x4d04, 0x1, 0x0);
        gbc.writeMem(0x7447, { 0xa0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe14d, gbc.sp());
        EXPECT(0x7448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0040
        gbc.setState(0x3324, 0xb52, 0xd010, 0x44b4, 0xe2df, 0xa9b9, 0x1, 0x0);
        gbc.writeMem(0x3324, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb52, gbc.sp());
        EXPECT(0x3325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0041
        gbc.setState(0xd862, 0x1120, 0x7750, 0x1fb5, 0xc38f, 0x5ce8, 0x0, 0x1);
        gbc.writeMem(0xd862, { 0xa0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1120, gbc.sp());
        EXPECT(0xd863, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd862));
        // A0 0042
        gbc.setState(0x291, 0xcad2, 0x1ef0, 0x8d09, 0x2170, 0xc363, 0x0, 0x1);
        gbc.writeMem(0x291, { 0xa0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xcad2, gbc.sp());
        EXPECT(0x292, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0043
        gbc.setState(0x13b9, 0xd0b4, 0x2750, 0xa891, 0x8b1d, 0x5b63, 0x0, 0x0);
        gbc.writeMem(0x13b9, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd0b4, gbc.sp());
        EXPECT(0x13ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0044
        gbc.setState(0xd2ac, 0x534a, 0xbd20, 0xccaa, 0x4110, 0x6174, 0x1, 0x1);
        gbc.writeMem(0xd2ac, { 0xa0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x534a, gbc.sp());
        EXPECT(0xd2ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd2ac));
        // A0 0045
        gbc.setState(0x9b57, 0x46ca, 0x6270, 0xe499, 0x9c0a, 0xa6c7, 0x1, 0x1);
        gbc.writeMem(0x9b57, { 0xa0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x46ca, gbc.sp());
        EXPECT(0x9b58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9b57));
        // A0 0046
        gbc.setState(0x4f93, 0x86a9, 0xbaa0, 0x5656, 0x796d, 0xa9ad, 0x1, 0x1);
        gbc.writeMem(0x4f93, { 0xa0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x86a9, gbc.sp());
        EXPECT(0x4f94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0047
        gbc.setState(0xb1aa, 0x51f7, 0xc900, 0x3659, 0x5037, 0x8b8f, 0x0, 0x1);
        gbc.writeMem(0xb1aa, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x51f7, gbc.sp());
        EXPECT(0xb1ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb1aa));
        // A0 0048
        gbc.setState(0xe9ed, 0x1e52, 0x3c40, 0xbaa4, 0xf1f2, 0x2ede, 0x0, 0x1);
        gbc.writeMem(0xe9ed, { 0xa0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1e52, gbc.sp());
        EXPECT(0xe9ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe9ed));
        // A0 0049
        gbc.setState(0x4f57, 0x32d6, 0x8430, 0x1840, 0x4fc9, 0x9f39, 0x1, 0x0);
        gbc.writeMem(0x4f57, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x32d6, gbc.sp());
        EXPECT(0x4f58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 004A
        gbc.setState(0xed36, 0xd46d, 0x7d10, 0xdb93, 0xacf1, 0xb541, 0x1, 0x1);
        gbc.writeMem(0xed36, { 0xa0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd46d, gbc.sp());
        EXPECT(0xed37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xed36));
        // A0 004B
        gbc.setState(0x637d, 0xad63, 0x9b30, 0xdb5, 0x45dd, 0x2f9f, 0x1, 0x0);
        gbc.writeMem(0x637d, { 0xa0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xad63, gbc.sp());
        EXPECT(0x637e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 004C
        gbc.setState(0xb6bb, 0x1fa4, 0xe820, 0x3b32, 0xfb11, 0xd66, 0x0, 0x0);
        gbc.writeMem(0xb6bb, { 0xa0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1fa4, gbc.sp());
        EXPECT(0xb6bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb6bb));
        // A0 004D
        gbc.setState(0x4660, 0x5eaa, 0xff0, 0xd353, 0xfc72, 0xa5d9, 0x1, 0x0);
        gbc.writeMem(0x4660, { 0xa0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5eaa, gbc.sp());
        EXPECT(0x4661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 004E
        gbc.setState(0x5e8f, 0x2042, 0xf30, 0x7ce0, 0x15b0, 0xd31, 0x0, 0x1);
        gbc.writeMem(0x5e8f, { 0xa0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2042, gbc.sp());
        EXPECT(0x5e90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 004F
        gbc.setState(0x6020, 0xe841, 0x2a30, 0x40fd, 0xd92e, 0x2f26, 0x0, 0x1);
        gbc.writeMem(0x6020, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe841, gbc.sp());
        EXPECT(0x6021, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0050
        gbc.setState(0x4570, 0xb190, 0x8820, 0xb6f6, 0x6fa6, 0x62e9, 0x1, 0x0);
        gbc.writeMem(0x4570, { 0xa0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb190, gbc.sp());
        EXPECT(0x4571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0051
        gbc.setState(0x3010, 0xbda6, 0x1010, 0x1aa9, 0xd62b, 0xa94b, 0x1, 0x0);
        gbc.writeMem(0x3010, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbda6, gbc.sp());
        EXPECT(0x3011, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0052
        gbc.setState(0x631c, 0x5e8f, 0x4080, 0x5001, 0x5836, 0x8e43, 0x0, 0x0);
        gbc.writeMem(0x631c, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5e8f, gbc.sp());
        EXPECT(0x631d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0053
        gbc.setState(0xc1ac, 0x7ba7, 0x7a70, 0x3625, 0x223b, 0xb967, 0x1, 0x0);
        gbc.writeMem(0xc1ac, { 0xa0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7ba7, gbc.sp());
        EXPECT(0xc1ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc1ac));
        // A0 0054
        gbc.setState(0xd05b, 0x4820, 0x6060, 0x49a3, 0x5107, 0x468d, 0x0, 0x0);
        gbc.writeMem(0xd05b, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4820, gbc.sp());
        EXPECT(0xd05c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd05b));
        // A0 0055
        gbc.setState(0x12c4, 0xb502, 0xfed0, 0x78c0, 0x9f45, 0xf9bd, 0x0, 0x0);
        gbc.writeMem(0x12c4, { 0xa0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb502, gbc.sp());
        EXPECT(0x12c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0056
        gbc.setState(0x3b6c, 0xb30, 0x7f50, 0x7ad2, 0x664c, 0x5274, 0x1, 0x0);
        gbc.writeMem(0x3b6c, { 0xa0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb30, gbc.sp());
        EXPECT(0x3b6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0057
        gbc.setState(0x8624, 0x87e4, 0xa7f0, 0x62da, 0x8a1e, 0xfd3e, 0x0, 0x0);
        gbc.writeMem(0x8624, { 0xa0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x87e4, gbc.sp());
        EXPECT(0x8625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8624));
        // A0 0058
        gbc.setState(0x30bf, 0xe922, 0xf500, 0x97a6, 0x27ff, 0xcb34, 0x0, 0x0);
        gbc.writeMem(0x30bf, { 0xa0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe922, gbc.sp());
        EXPECT(0x30c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0059
        gbc.setState(0xaee5, 0xbaa3, 0x1840, 0x936b, 0xc6ed, 0x4e6d, 0x1, 0x0);
        gbc.writeMem(0xaee5, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xbaa3, gbc.sp());
        EXPECT(0xaee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xaee5));
        // A0 005A
        gbc.setState(0x58f4, 0x44a8, 0x7bd0, 0x6e10, 0x95ea, 0x9e03, 0x1, 0x0);
        gbc.writeMem(0x58f4, { 0xa0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x44a8, gbc.sp());
        EXPECT(0x58f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 005B
        gbc.setState(0xba2, 0x8236, 0x6860, 0xa580, 0x4807, 0x227c, 0x1, 0x1);
        gbc.writeMem(0xba2, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8236, gbc.sp());
        EXPECT(0xba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 005C
        gbc.setState(0x44b7, 0x11d5, 0x3a20, 0xeff7, 0x9001, 0x375e, 0x0, 0x0);
        gbc.writeMem(0x44b7, { 0xa0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x11d5, gbc.sp());
        EXPECT(0x44b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 005D
        gbc.setState(0x4b99, 0x94f9, 0x7470, 0x48ed, 0x4491, 0x9611, 0x0, 0x0);
        gbc.writeMem(0x4b99, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x94f9, gbc.sp());
        EXPECT(0x4b9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 005E
        gbc.setState(0xc99b, 0x7f04, 0x6eb0, 0xa291, 0x328a, 0x9917, 0x0, 0x1);
        gbc.writeMem(0xc99b, { 0xa0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7f04, gbc.sp());
        EXPECT(0xc99c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc99b));
        // A0 005F
        gbc.setState(0x9d5f, 0x8832, 0x60e0, 0xb31d, 0xa550, 0x688d, 0x1, 0x1);
        gbc.writeMem(0x9d5f, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8832, gbc.sp());
        EXPECT(0x9d60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9d5f));
        // A0 0060
        gbc.setState(0x8552, 0xb069, 0xf310, 0x2019, 0x162f, 0x7a99, 0x0, 0x0);
        gbc.writeMem(0x8552, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb069, gbc.sp());
        EXPECT(0x8553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8552));
        // A0 0061
        gbc.setState(0x638e, 0x1356, 0x9a30, 0xb250, 0x7c0d, 0x37aa, 0x0, 0x1);
        gbc.writeMem(0x638e, { 0xa0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1356, gbc.sp());
        EXPECT(0x638f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0062
        gbc.setState(0xdac9, 0x890d, 0x90c0, 0x43d, 0xd6fc, 0x8725, 0x1, 0x1);
        gbc.writeMem(0xdac9, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x890d, gbc.sp());
        EXPECT(0xdaca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xdac9));
        // A0 0063
        gbc.setState(0x695a, 0x9482, 0x8ca0, 0xf5a7, 0xbf57, 0x6fd5, 0x1, 0x1);
        gbc.writeMem(0x695a, { 0xa0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9482, gbc.sp());
        EXPECT(0x695b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0064
        gbc.setState(0x964f, 0x7789, 0x7420, 0xf015, 0x1dce, 0xdbbb, 0x0, 0x1);
        gbc.writeMem(0x964f, { 0xa0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7789, gbc.sp());
        EXPECT(0x9650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x964f));
        // A0 0065
        gbc.setState(0x33d7, 0x93b0, 0xb450, 0x9de4, 0xbadf, 0x588, 0x0, 0x0);
        gbc.writeMem(0x33d7, { 0xa0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x93b0, gbc.sp());
        EXPECT(0x33d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0066
        gbc.setState(0x8299, 0xa282, 0xd5b0, 0xed30, 0xbe5c, 0x17d6, 0x1, 0x0);
        gbc.writeMem(0x8299, { 0xa0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa282, gbc.sp());
        EXPECT(0x829a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8299));
        // A0 0067
        gbc.setState(0x8a08, 0xc496, 0x7bf0, 0x2388, 0x7d28, 0x4144, 0x1, 0x0);
        gbc.writeMem(0x8a08, { 0xa0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc496, gbc.sp());
        EXPECT(0x8a09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8a08));
        // A0 0068
        gbc.setState(0xe3c0, 0x7286, 0x5a40, 0x3ebf, 0x4fa4, 0xfcb7, 0x0, 0x0);
        gbc.writeMem(0xe3c0, { 0xa0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7286, gbc.sp());
        EXPECT(0xe3c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe3c0));
        // A0 0069
        gbc.setState(0xbe6a, 0x47df, 0x90e0, 0xfd11, 0x499, 0x272e, 0x0, 0x1);
        gbc.writeMem(0xbe6a, { 0xa0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x47df, gbc.sp());
        EXPECT(0xbe6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xbe6a));
        // A0 006A
        gbc.setState(0xdbac, 0xf3df, 0x3e00, 0x348c, 0x65aa, 0x4b94, 0x0, 0x0);
        gbc.writeMem(0xdbac, { 0xa0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf3df, gbc.sp());
        EXPECT(0xdbad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xdbac));
        // A0 006B
        gbc.setState(0x3497, 0xa4e6, 0x49c0, 0x9de7, 0xe387, 0x8d5, 0x1, 0x0);
        gbc.writeMem(0x3497, { 0xa0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa4e6, gbc.sp());
        EXPECT(0x3498, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 006C
        gbc.setState(0xce47, 0x39d2, 0xb8d0, 0x2376, 0xc5d7, 0x9625, 0x1, 0x1);
        gbc.writeMem(0xce47, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x39d2, gbc.sp());
        EXPECT(0xce48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xce47));
        // A0 006D
        gbc.setState(0x4aaa, 0x1388, 0x8760, 0x4f5c, 0xac60, 0xe283, 0x1, 0x0);
        gbc.writeMem(0x4aaa, { 0xa0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1388, gbc.sp());
        EXPECT(0x4aab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 006E
        gbc.setState(0x83b3, 0x2dae, 0xaa10, 0x6a0f, 0x5351, 0xc6e9, 0x0, 0x0);
        gbc.writeMem(0x83b3, { 0xa0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2dae, gbc.sp());
        EXPECT(0x83b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x83b3));
        // A0 006F
        gbc.setState(0xb922, 0x5484, 0x5800, 0xc06c, 0x8328, 0xc6e2, 0x0, 0x0);
        gbc.writeMem(0xb922, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5484, gbc.sp());
        EXPECT(0xb923, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb922));
        // A0 0070
        gbc.setState(0x5aba, 0xd5fc, 0xefe0, 0xe0d7, 0x3369, 0x9d3, 0x1, 0x1);
        gbc.writeMem(0x5aba, { 0xa0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd5fc, gbc.sp());
        EXPECT(0x5abb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0071
        gbc.setState(0x71cd, 0x54fc, 0x380, 0x80a9, 0xf165, 0xb75c, 0x1, 0x1);
        gbc.writeMem(0x71cd, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x54fc, gbc.sp());
        EXPECT(0x71ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0072
        gbc.setState(0x9ee4, 0x9e5b, 0x5f30, 0x26a3, 0xf0a8, 0xa71c, 0x1, 0x0);
        gbc.writeMem(0x9ee4, { 0xa0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9e5b, gbc.sp());
        EXPECT(0x9ee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9ee4));
        // A0 0073
        gbc.setState(0xc28a, 0xa3c4, 0x8030, 0x9aa9, 0xa876, 0xb96b, 0x0, 0x1);
        gbc.writeMem(0xc28a, { 0xa0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa3c4, gbc.sp());
        EXPECT(0xc28b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc28a));
        // A0 0074
        gbc.setState(0xeae4, 0xbea, 0xde20, 0xb1ed, 0x4f1, 0x46c7, 0x0, 0x1);
        gbc.writeMem(0xeae4, { 0xa0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xbea, gbc.sp());
        EXPECT(0xeae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xeae4));
        // A0 0075
        gbc.setState(0x7d9f, 0xa81c, 0x2130, 0xc300, 0x7811, 0xa4f6, 0x0, 0x0);
        gbc.writeMem(0x7d9f, { 0xa0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa81c, gbc.sp());
        EXPECT(0x7da0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0076
        gbc.setState(0x564d, 0x3074, 0xb470, 0xbe2e, 0xfc31, 0xf9c1, 0x0, 0x1);
        gbc.writeMem(0x564d, { 0xa0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3074, gbc.sp());
        EXPECT(0x564e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0077
        gbc.setState(0x4f99, 0xec26, 0xe5a0, 0x70ac, 0x55eb, 0x3b1e, 0x1, 0x0);
        gbc.writeMem(0x4f99, { 0xa0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xec26, gbc.sp());
        EXPECT(0x4f9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0078
        gbc.setState(0x64cc, 0x2785, 0xefe0, 0x1203, 0x4d80, 0x2870, 0x0, 0x0);
        gbc.writeMem(0x64cc, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2785, gbc.sp());
        EXPECT(0x64cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 007A
        gbc.setState(0x7fc1, 0x692d, 0x1cf0, 0x6216, 0x6524, 0xa998, 0x0, 0x0);
        gbc.writeMem(0x7fc1, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x692d, gbc.sp());
        EXPECT(0x7fc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 007B
        gbc.setState(0x6778, 0x3f18, 0x69f0, 0xc929, 0xbfac, 0xcc65, 0x0, 0x1);
        gbc.writeMem(0x6778, { 0xa0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3f18, gbc.sp());
        EXPECT(0x6779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 007C
        gbc.setState(0x8b5d, 0x401e, 0xb4b0, 0x669d, 0xc22d, 0x163e, 0x0, 0x1);
        gbc.writeMem(0x8b5d, { 0xa0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x401e, gbc.sp());
        EXPECT(0x8b5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8b5d));
        // A0 007E
        gbc.setState(0xdaf7, 0x5cb8, 0xe570, 0x2a8b, 0x242a, 0x589b, 0x0, 0x0);
        gbc.writeMem(0xdaf7, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5cb8, gbc.sp());
        EXPECT(0xdaf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xdaf7));
        // A0 007F
        gbc.setState(0x6c08, 0x484b, 0x9710, 0x922d, 0x140b, 0x7efb, 0x1, 0x0);
        gbc.writeMem(0x6c08, { 0xa0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x484b, gbc.sp());
        EXPECT(0x6c09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0080
        gbc.setState(0x6e29, 0xa3ba, 0x41e0, 0xd6b6, 0xa205, 0xe3df, 0x0, 0x1);
        gbc.writeMem(0x6e29, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa3ba, gbc.sp());
        EXPECT(0x6e2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0081
        gbc.setState(0xdcd5, 0x64f3, 0xe8a0, 0x602a, 0x9a9d, 0xd492, 0x0, 0x0);
        gbc.writeMem(0xdcd5, { 0xa0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x64f3, gbc.sp());
        EXPECT(0xdcd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xdcd5));
        // A0 0082
        gbc.setState(0x57a3, 0xe4fe, 0x98a0, 0x347f, 0xbea6, 0x65d4, 0x0, 0x1);
        gbc.writeMem(0x57a3, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe4fe, gbc.sp());
        EXPECT(0x57a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0083
        gbc.setState(0xa04d, 0xd80d, 0xcf00, 0x76d3, 0x9753, 0x1daf, 0x0, 0x0);
        gbc.writeMem(0xa04d, { 0xa0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd80d, gbc.sp());
        EXPECT(0xa04e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa04d));
        // A0 0084
        gbc.setState(0xc4a5, 0xdd9f, 0x5b10, 0x1bf0, 0x7ac4, 0x2ce1, 0x0, 0x0);
        gbc.writeMem(0xc4a5, { 0xa0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xdd9f, gbc.sp());
        EXPECT(0xc4a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc4a5));
        // A0 0085
        gbc.setState(0xd5b7, 0xc696, 0x3a80, 0x529b, 0xa91d, 0x61de, 0x1, 0x0);
        gbc.writeMem(0xd5b7, { 0xa0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc696, gbc.sp());
        EXPECT(0xd5b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd5b7));
        // A0 0086
        gbc.setState(0x27f6, 0x5a91, 0xc900, 0xca17, 0xb238, 0x2a7e, 0x0, 0x0);
        gbc.writeMem(0x27f6, { 0xa0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5a91, gbc.sp());
        EXPECT(0x27f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0087
        gbc.setState(0x592a, 0xface, 0x2180, 0x59c8, 0x8a3d, 0x7131, 0x1, 0x1);
        gbc.writeMem(0x592a, { 0xa0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xface, gbc.sp());
        EXPECT(0x592b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0088
        gbc.setState(0xd54a, 0xbf62, 0xcba0, 0xf63e, 0x9a94, 0x42bf, 0x0, 0x0);
        gbc.writeMem(0xd54a, { 0xa0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xbf62, gbc.sp());
        EXPECT(0xd54b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd54a));
        // A0 0089
        gbc.setState(0x237e, 0xaad9, 0x7ca0, 0xcec4, 0xabb9, 0x67d2, 0x1, 0x1);
        gbc.writeMem(0x237e, { 0xa0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xaad9, gbc.sp());
        EXPECT(0x237f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 008A
        gbc.setState(0xe9e8, 0x728a, 0x7f00, 0xc539, 0x93df, 0x604a, 0x0, 0x0);
        gbc.writeMem(0xe9e8, { 0xa0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x728a, gbc.sp());
        EXPECT(0xe9e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe9e8));
        // A0 008B
        gbc.setState(0x4180, 0x61b6, 0x1ba0, 0x3c3, 0xb1ac, 0x79ba, 0x1, 0x0);
        gbc.writeMem(0x4180, { 0xa0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x61b6, gbc.sp());
        EXPECT(0x4181, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 008C
        gbc.setState(0x2225, 0xe64a, 0xc090, 0x69af, 0xbf6d, 0x2346, 0x1, 0x1);
        gbc.writeMem(0x2225, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xe64a, gbc.sp());
        EXPECT(0x2226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 008D
        gbc.setState(0x46a, 0xdbee, 0x8e00, 0xb78f, 0x8441, 0xec5c, 0x0, 0x1);
        gbc.writeMem(0x46a, { 0xa0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xdbee, gbc.sp());
        EXPECT(0x46b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 008E
        gbc.setState(0x61e, 0xfc58, 0x4d00, 0x5a9a, 0xc90f, 0x1522, 0x1, 0x1);
        gbc.writeMem(0x61e, { 0xa0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xfc58, gbc.sp());
        EXPECT(0x61f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 008F
        gbc.setState(0x3b0e, 0xacdb, 0xb850, 0x5165, 0x5f39, 0x2851, 0x1, 0x0);
        gbc.writeMem(0x3b0e, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xacdb, gbc.sp());
        EXPECT(0x3b0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0090
        gbc.setState(0x2b5e, 0x5968, 0x25b0, 0xd22b, 0x3425, 0x2faa, 0x0, 0x1);
        gbc.writeMem(0x2b5e, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5968, gbc.sp());
        EXPECT(0x2b5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0091
        gbc.setState(0x45ef, 0x9a68, 0x10f0, 0x917, 0xb8a8, 0xdb27, 0x1, 0x0);
        gbc.writeMem(0x45ef, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9a68, gbc.sp());
        EXPECT(0x45f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0092
        gbc.setState(0x20fa, 0x31a5, 0x3150, 0x71f, 0x4619, 0xa10c, 0x1, 0x1);
        gbc.writeMem(0x20fa, { 0xa0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x31a5, gbc.sp());
        EXPECT(0x20fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0094
        gbc.setState(0x9dee, 0xe578, 0x13a0, 0xe6b5, 0xf645, 0x8d01, 0x0, 0x1);
        gbc.writeMem(0x9dee, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe578, gbc.sp());
        EXPECT(0x9def, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9dee));
        // A0 0095
        gbc.setState(0x8d36, 0xd066, 0xc8f0, 0x6707, 0xe074, 0x59db, 0x0, 0x0);
        gbc.writeMem(0x8d36, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd066, gbc.sp());
        EXPECT(0x8d37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8d36));
        // A0 0096
        gbc.setState(0x8ee5, 0xf196, 0x9b0, 0x687e, 0xd7e1, 0x7b50, 0x0, 0x0);
        gbc.writeMem(0x8ee5, { 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf196, gbc.sp());
        EXPECT(0x8ee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8ee5));
        // A0 0097
        gbc.setState(0x5ea8, 0xa38a, 0x1a0, 0xc971, 0xc97a, 0xd67a, 0x0, 0x0);
        gbc.writeMem(0x5ea8, { 0xa0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa38a, gbc.sp());
        EXPECT(0x5ea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0098
        gbc.setState(0x1a8b, 0x60c4, 0x6ac0, 0x93a8, 0x9bdd, 0x1573, 0x1, 0x0);
        gbc.writeMem(0x1a8b, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x60c4, gbc.sp());
        EXPECT(0x1a8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0099
        gbc.setState(0x32aa, 0x26c3, 0x2cd0, 0x982e, 0xd815, 0x7015, 0x0, 0x0);
        gbc.writeMem(0x32aa, { 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x26c3, gbc.sp());
        EXPECT(0x32ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 009A
        gbc.setState(0x1442, 0xb0ae, 0x9580, 0x3b2e, 0x7d1e, 0xcbfc, 0x0, 0x0);
        gbc.writeMem(0x1442, { 0xa0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb0ae, gbc.sp());
        EXPECT(0x1443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 009B
        gbc.setState(0x1a8f, 0xff85, 0xe3b0, 0x84c9, 0xe6d7, 0x61d2, 0x0, 0x0);
        gbc.writeMem(0x1a8f, { 0xa0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xff85, gbc.sp());
        EXPECT(0x1a90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 009C
        gbc.setState(0x961d, 0x8b38, 0xd590, 0x3639, 0x8a69, 0xfde1, 0x0, 0x1);
        gbc.writeMem(0x961d, { 0xa0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8b38, gbc.sp());
        EXPECT(0x961e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x961d));
        // A0 009D
        gbc.setState(0x6f2f, 0x44c6, 0x23b0, 0xc731, 0x6ff3, 0xd8f4, 0x0, 0x0);
        gbc.writeMem(0x6f2f, { 0xa0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x44c6, gbc.sp());
        EXPECT(0x6f30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 009E
        gbc.setState(0xed2b, 0xa699, 0xfa80, 0x7c52, 0x50b9, 0x585c, 0x0, 0x0);
        gbc.writeMem(0xed2b, { 0xa0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa699, gbc.sp());
        EXPECT(0xed2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xed2b));
        // A0 009F
        gbc.setState(0x7978, 0x87fc, 0x2570, 0x9b, 0xf518, 0x6414, 0x1, 0x0);
        gbc.writeMem(0x7978, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x87fc, gbc.sp());
        EXPECT(0x7979, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00A0
        gbc.setState(0x53cd, 0xf044, 0xcd20, 0x4571, 0xbdde, 0xe0a7, 0x0, 0x0);
        gbc.writeMem(0x53cd, { 0xa0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf044, gbc.sp());
        EXPECT(0x53ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00A1
        gbc.setState(0x8a33, 0x5ec2, 0x7db0, 0x41bd, 0x1d40, 0xfbb6, 0x0, 0x0);
        gbc.writeMem(0x8a33, { 0xa0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5ec2, gbc.sp());
        EXPECT(0x8a34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8a33));
        // A0 00A2
        gbc.setState(0x9a83, 0xc210, 0xb100, 0xdf57, 0xa04, 0x7954, 0x0, 0x1);
        gbc.writeMem(0x9a83, { 0xa0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc210, gbc.sp());
        EXPECT(0x9a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9a83));
        // A0 00A3
        gbc.setState(0xcc29, 0xc1b3, 0x3e20, 0x1b2d, 0x626c, 0xe467, 0x1, 0x1);
        gbc.writeMem(0xcc29, { 0xa0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc1b3, gbc.sp());
        EXPECT(0xcc2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xcc29));
        // A0 00A4
        gbc.setState(0x2c5d, 0x3c17, 0xd370, 0x62da, 0x438, 0xc770, 0x0, 0x1);
        gbc.writeMem(0x2c5d, { 0xa0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3c17, gbc.sp());
        EXPECT(0x2c5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00A5
        gbc.setState(0x890a, 0x9fa6, 0xde0, 0x9df7, 0xb232, 0xcf8f, 0x0, 0x0);
        gbc.writeMem(0x890a, { 0xa0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9fa6, gbc.sp());
        EXPECT(0x890b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x890a));
        // A0 00A6
        gbc.setState(0xdb0d, 0x6ba7, 0x47a0, 0xbc68, 0xb78a, 0x4ed4, 0x1, 0x1);
        gbc.writeMem(0xdb0d, { 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6ba7, gbc.sp());
        EXPECT(0xdb0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xdb0d));
        // A0 00A7
        gbc.setState(0x4734, 0xa51f, 0x49f0, 0xcee8, 0xa919, 0xa597, 0x0, 0x1);
        gbc.writeMem(0x4734, { 0xa0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa51f, gbc.sp());
        EXPECT(0x4735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00A8
        gbc.setState(0x8a78, 0x2cad, 0x590, 0x9c49, 0xc5e0, 0x143d, 0x0, 0x0);
        gbc.writeMem(0x8a78, { 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2cad, gbc.sp());
        EXPECT(0x8a79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8a78));
        // A0 00A9
        gbc.setState(0x494, 0x27e3, 0xda70, 0xf23, 0xe5dc, 0x60a7, 0x1, 0x1);
        gbc.writeMem(0x494, { 0xa0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x27e3, gbc.sp());
        EXPECT(0x495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00AA
        gbc.setState(0x92eb, 0xeea, 0x6180, 0x5ac3, 0x36a1, 0x10b6, 0x0, 0x1);
        gbc.writeMem(0x92eb, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xeea, gbc.sp());
        EXPECT(0x92ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x92eb));
        // A0 00AB
        gbc.setState(0x1f2, 0x81a3, 0x4710, 0xa8ad, 0x7f3e, 0xb18b, 0x0, 0x0);
        gbc.writeMem(0x1f2, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x81a3, gbc.sp());
        EXPECT(0x1f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00AC
        gbc.setState(0x3229, 0x589e, 0xa30, 0xb916, 0x71c9, 0x175b, 0x1, 0x0);
        gbc.writeMem(0x3229, { 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x589e, gbc.sp());
        EXPECT(0x322a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00AD
        gbc.setState(0x7126, 0x5d16, 0xb360, 0xac18, 0x3ec1, 0xaacc, 0x1, 0x0);
        gbc.writeMem(0x7126, { 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5d16, gbc.sp());
        EXPECT(0x7127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00AE
        gbc.setState(0xd246, 0x3c82, 0xc6e0, 0xc740, 0x6504, 0x6a89, 0x1, 0x0);
        gbc.writeMem(0xd246, { 0xa0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3c82, gbc.sp());
        EXPECT(0xd247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd246));
        // A0 00AF
        gbc.setState(0x2da0, 0xfee0, 0xe130, 0xb2c9, 0x61f2, 0x826e, 0x0, 0x0);
        gbc.writeMem(0x2da0, { 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xfee0, gbc.sp());
        EXPECT(0x2da1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00B0
        gbc.setState(0xe1a5, 0xab51, 0xa9e0, 0xb016, 0xc112, 0x9b82, 0x1, 0x0);
        gbc.writeMem(0xe1a5, { 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xab51, gbc.sp());
        EXPECT(0xe1a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe1a5));
        // A0 00B1
        gbc.setState(0x24ad, 0x471d, 0xf1d0, 0x13fc, 0xd290, 0x54bf, 0x1, 0x1);
        gbc.writeMem(0x24ad, { 0xa0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x471d, gbc.sp());
        EXPECT(0x24ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00B2
        gbc.setState(0x2d37, 0x1dae, 0x1020, 0x72cb, 0x1e6a, 0x83a0, 0x0, 0x0);
        gbc.writeMem(0x2d37, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1dae, gbc.sp());
        EXPECT(0x2d38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00B3
        gbc.setState(0x15, 0x8c8c, 0x2c20, 0x481d, 0x9747, 0xe3c9, 0x1, 0x1);
        gbc.writeMem(0x15, { 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8c8c, gbc.sp());
        EXPECT(0x16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00B4
        gbc.setState(0x696a, 0x2823, 0x21e0, 0x5cd7, 0x92ef, 0x394a, 0x1, 0x0);
        gbc.writeMem(0x696a, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2823, gbc.sp());
        EXPECT(0x696b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00B5
        gbc.setState(0x4976, 0x2f81, 0x7da0, 0x6a9a, 0x79f6, 0xbec4, 0x0, 0x0);
        gbc.writeMem(0x4976, { 0xa0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2f81, gbc.sp());
        EXPECT(0x4977, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00B6
        gbc.setState(0x8cb5, 0x36ed, 0x8060, 0x5940, 0xf34f, 0x8203, 0x1, 0x1);
        gbc.writeMem(0x8cb5, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x36ed, gbc.sp());
        EXPECT(0x8cb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8cb5));
        // A0 00B7
        gbc.setState(0x3e24, 0xb1db, 0xe160, 0xb308, 0x9fcc, 0x10e3, 0x0, 0x0);
        gbc.writeMem(0x3e24, { 0xa0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb1db, gbc.sp());
        EXPECT(0x3e25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00B8
        gbc.setState(0x2f1b, 0x96d4, 0xf670, 0xbf29, 0xd5bc, 0x8511, 0x0, 0x0);
        gbc.writeMem(0x2f1b, { 0xa0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x96d4, gbc.sp());
        EXPECT(0x2f1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00B9
        gbc.setState(0x166b, 0x7f7c, 0xf520, 0x9127, 0x2599, 0x3966, 0x0, 0x0);
        gbc.writeMem(0x166b, { 0xa0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7f7c, gbc.sp());
        EXPECT(0x166c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00BA
        gbc.setState(0xda82, 0xda9b, 0x30f0, 0x86a4, 0x63bc, 0x6ac6, 0x1, 0x0);
        gbc.writeMem(0xda82, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xda9b, gbc.sp());
        EXPECT(0xda83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xda82));
        // A0 00BB
        gbc.setState(0xec2f, 0xa53d, 0x1920, 0x56bf, 0x5678, 0xc450, 0x1, 0x1);
        gbc.writeMem(0xec2f, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa53d, gbc.sp());
        EXPECT(0xec30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xec2f));
        // A0 00BC
        gbc.setState(0xec0, 0x84ec, 0xc540, 0x5dc4, 0xf766, 0x7ce5, 0x0, 0x1);
        gbc.writeMem(0xec0, { 0xa0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x84ec, gbc.sp());
        EXPECT(0xec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00BD
        gbc.setState(0xd08a, 0xe525, 0x6920, 0x2da5, 0x2e4f, 0x959a, 0x0, 0x1);
        gbc.writeMem(0xd08a, { 0xa0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe525, gbc.sp());
        EXPECT(0xd08b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd08a));
        // A0 00BE
        gbc.setState(0x88a9, 0x9814, 0x2790, 0xa112, 0x7799, 0xadcd, 0x1, 0x0);
        gbc.writeMem(0x88a9, { 0xa0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9814, gbc.sp());
        EXPECT(0x88aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x88a9));
        // A0 00BF
        gbc.setState(0x4f1e, 0x90b8, 0xf4c0, 0xd465, 0x216d, 0xdd25, 0x0, 0x0);
        gbc.writeMem(0x4f1e, { 0xa0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x90b8, gbc.sp());
        EXPECT(0x4f1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00C0
        gbc.setState(0x5b1a, 0x1459, 0x22f0, 0x5207, 0xc996, 0x5c1c, 0x1, 0x0);
        gbc.writeMem(0x5b1a, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1459, gbc.sp());
        EXPECT(0x5b1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00C2
        gbc.setState(0x709f, 0x1431, 0x3610, 0x8e49, 0x282b, 0x1a05, 0x0, 0x0);
        gbc.writeMem(0x709f, { 0xa0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1431, gbc.sp());
        EXPECT(0x70a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00C3
        gbc.setState(0x3714, 0xb82c, 0x4620, 0xfa5d, 0x996f, 0x4367, 0x1, 0x0);
        gbc.writeMem(0x3714, { 0xa0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb82c, gbc.sp());
        EXPECT(0x3715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00C4
        gbc.setState(0x36e2, 0x6665, 0xb1f0, 0x654a, 0xfaf7, 0x76a3, 0x0, 0x0);
        gbc.writeMem(0x36e2, { 0xa0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6665, gbc.sp());
        EXPECT(0x36e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00C5
        gbc.setState(0xc252, 0xa47d, 0x2740, 0x536d, 0xa6d, 0xd326, 0x1, 0x0);
        gbc.writeMem(0xc252, { 0xa0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa47d, gbc.sp());
        EXPECT(0xc253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc252));
        // A0 00C6
        gbc.setState(0x98a9, 0x3ecd, 0x6870, 0xcbe6, 0x88da, 0x3f40, 0x1, 0x1);
        gbc.writeMem(0x98a9, { 0xa0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3ecd, gbc.sp());
        EXPECT(0x98aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x98a9));
        // A0 00C7
        gbc.setState(0x3b8a, 0xdbc, 0x9470, 0x5b52, 0xbd8d, 0x4642, 0x1, 0x0);
        gbc.writeMem(0x3b8a, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xdbc, gbc.sp());
        EXPECT(0x3b8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00C8
        gbc.setState(0x55ff, 0x8f02, 0x6910, 0xd550, 0x6ef, 0xb259, 0x0, 0x1);
        gbc.writeMem(0x55ff, { 0xa0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8f02, gbc.sp());
        EXPECT(0x5600, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00C9
        gbc.setState(0x9b72, 0x3af4, 0x7d00, 0xcfa2, 0xf4ee, 0xeec5, 0x0, 0x0);
        gbc.writeMem(0x9b72, { 0xa0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3af4, gbc.sp());
        EXPECT(0x9b73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9b72));
        // A0 00CA
        gbc.setState(0x3d2a, 0x6394, 0x2320, 0x4a6b, 0xe03a, 0xc61e, 0x1, 0x0);
        gbc.writeMem(0x3d2a, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6394, gbc.sp());
        EXPECT(0x3d2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00CB
        gbc.setState(0xe40c, 0x95b7, 0x1fb0, 0xf9fd, 0x33dc, 0x308e, 0x1, 0x1);
        gbc.writeMem(0xe40c, { 0xa0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x95b7, gbc.sp());
        EXPECT(0xe40d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe40c));
        // A0 00CC
        gbc.setState(0x7e54, 0xaa62, 0xfc90, 0xe6c4, 0x83b4, 0x6279, 0x1, 0x0);
        gbc.writeMem(0x7e54, { 0xa0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xaa62, gbc.sp());
        EXPECT(0x7e55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00CD
        gbc.setState(0x7ad0, 0x696, 0x5950, 0x56b7, 0x14d3, 0x8df9, 0x0, 0x0);
        gbc.writeMem(0x7ad0, { 0xa0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x696, gbc.sp());
        EXPECT(0x7ad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00CE
        gbc.setState(0x780f, 0x620f, 0x4dd0, 0xc9de, 0xa3b6, 0x5a86, 0x0, 0x1);
        gbc.writeMem(0x780f, { 0xa0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x620f, gbc.sp());
        EXPECT(0x7810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00CF
        gbc.setState(0xdcb1, 0x3625, 0xfda0, 0xeb8, 0x24b, 0x233, 0x0, 0x1);
        gbc.writeMem(0xdcb1, { 0xa0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3625, gbc.sp());
        EXPECT(0xdcb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xdcb1));
        // A0 00D0
        gbc.setState(0xca68, 0x97bb, 0x5da0, 0xa64d, 0xc934, 0xdb7, 0x0, 0x0);
        gbc.writeMem(0xca68, { 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x97bb, gbc.sp());
        EXPECT(0xca69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xca68));
        // A0 00D1
        gbc.setState(0x2554, 0x5afd, 0xccd0, 0xfe9d, 0x87a0, 0xeb53, 0x1, 0x0);
        gbc.writeMem(0x2554, { 0xa0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5afd, gbc.sp());
        EXPECT(0x2555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00D2
        gbc.setState(0x72bc, 0x63ef, 0x5350, 0xae51, 0x159d, 0x19ae, 0x1, 0x0);
        gbc.writeMem(0x72bc, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x63ef, gbc.sp());
        EXPECT(0x72bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00D3
        gbc.setState(0x933b, 0xe6a7, 0x61c0, 0x2c71, 0x94d, 0x9aa4, 0x0, 0x1);
        gbc.writeMem(0x933b, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe6a7, gbc.sp());
        EXPECT(0x933c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x933b));
        // A0 00D4
        gbc.setState(0x66d5, 0x47fb, 0xc730, 0xf1a, 0x33af, 0xc4ea, 0x0, 0x0);
        gbc.writeMem(0x66d5, { 0xa0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x47fb, gbc.sp());
        EXPECT(0x66d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00D5
        gbc.setState(0x5633, 0xc5, 0x9930, 0xd4b4, 0xe143, 0x6b89, 0x1, 0x0);
        gbc.writeMem(0x5633, { 0xa0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc5, gbc.sp());
        EXPECT(0x5634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00D6
        gbc.setState(0x412c, 0xfa3b, 0x3cb0, 0x9d87, 0xdb43, 0x9994, 0x0, 0x0);
        gbc.writeMem(0x412c, { 0xa0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xfa3b, gbc.sp());
        EXPECT(0x412d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00D7
        gbc.setState(0xe96e, 0x663b, 0xc5a0, 0xf488, 0x5067, 0xe14c, 0x1, 0x1);
        gbc.writeMem(0xe96e, { 0xa0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x663b, gbc.sp());
        EXPECT(0xe96f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe96e));
        // A0 00D8
        gbc.setState(0x537a, 0x242c, 0x1580, 0x9c80, 0xd66f, 0xc050, 0x1, 0x1);
        gbc.writeMem(0x537a, { 0xa0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x242c, gbc.sp());
        EXPECT(0x537b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00D9
        gbc.setState(0xd38b, 0xf9bd, 0x7c70, 0x488d, 0x4113, 0xe8f9, 0x0, 0x1);
        gbc.writeMem(0xd38b, { 0xa0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf9bd, gbc.sp());
        EXPECT(0xd38c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd38b));
        // A0 00DA
        gbc.setState(0x79af, 0x3231, 0x93a0, 0x21cb, 0x5844, 0x93f3, 0x0, 0x0);
        gbc.writeMem(0x79af, { 0xa0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3231, gbc.sp());
        EXPECT(0x79b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00DB
        gbc.setState(0x5ec8, 0xe95f, 0x7910, 0x4d7c, 0x72a0, 0x9718, 0x0, 0x0);
        gbc.writeMem(0x5ec8, { 0xa0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe95f, gbc.sp());
        EXPECT(0x5ec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00DC
        gbc.setState(0x1529, 0x48f, 0x4580, 0x907e, 0x83e2, 0xe295, 0x0, 0x0);
        gbc.writeMem(0x1529, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x48f, gbc.sp());
        EXPECT(0x152a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00DD
        gbc.setState(0xeecb, 0x811d, 0x7f20, 0x8b6, 0xb40d, 0xcc46, 0x0, 0x0);
        gbc.writeMem(0xeecb, { 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x811d, gbc.sp());
        EXPECT(0xeecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xeecb));
        // A0 00DE
        gbc.setState(0x2cdb, 0x7689, 0x57a0, 0xaabe, 0x9a6b, 0x4bdf, 0x1, 0x1);
        gbc.writeMem(0x2cdb, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7689, gbc.sp());
        EXPECT(0x2cdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00DF
        gbc.setState(0x52a8, 0xa71a, 0xcf20, 0xb3ff, 0xca37, 0x71d4, 0x0, 0x1);
        gbc.writeMem(0x52a8, { 0xa0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa71a, gbc.sp());
        EXPECT(0x52a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00E0
        gbc.setState(0x72b4, 0x67c7, 0x9480, 0xc6af, 0x20a, 0x754c, 0x0, 0x0);
        gbc.writeMem(0x72b4, { 0xa0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x67c7, gbc.sp());
        EXPECT(0x72b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00E1
        gbc.setState(0x5c81, 0x6fa7, 0xbf40, 0xd984, 0x4988, 0x37ed, 0x0, 0x0);
        gbc.writeMem(0x5c81, { 0xa0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6fa7, gbc.sp());
        EXPECT(0x5c82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00E2
        gbc.setState(0xc124, 0x72a9, 0xafa0, 0xfb8, 0xf5cd, 0xe10c, 0x0, 0x1);
        gbc.writeMem(0xc124, { 0xa0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x72a9, gbc.sp());
        EXPECT(0xc125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc124));
        // A0 00E3
        gbc.setState(0x2bf, 0xe7af, 0xd6c0, 0x78cb, 0xf2bb, 0xcd68, 0x0, 0x0);
        gbc.writeMem(0x2bf, { 0xa0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe7af, gbc.sp());
        EXPECT(0x2c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00E4
        gbc.setState(0xd877, 0xf711, 0xd610, 0xe88f, 0x75a, 0x89bc, 0x1, 0x0);
        gbc.writeMem(0xd877, { 0xa0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf711, gbc.sp());
        EXPECT(0xd878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd877));
        // A0 00E5
        gbc.setState(0x3927, 0x55b2, 0xb20, 0x628e, 0xc401, 0x9f8, 0x0, 0x1);
        gbc.writeMem(0x3927, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x55b2, gbc.sp());
        EXPECT(0x3928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00E6
        gbc.setState(0x4b9b, 0xbfa4, 0xdea0, 0x444b, 0xa485, 0x663, 0x1, 0x0);
        gbc.writeMem(0x4b9b, { 0xa0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xbfa4, gbc.sp());
        EXPECT(0x4b9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00E7
        gbc.setState(0x3ea2, 0x7c6c, 0xfad0, 0x41c7, 0x658, 0x54eb, 0x1, 0x1);
        gbc.writeMem(0x3ea2, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7c6c, gbc.sp());
        EXPECT(0x3ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00E8
        gbc.setState(0x2891, 0x613a, 0x8cf0, 0x46ce, 0x2be4, 0x7f5c, 0x1, 0x1);
        gbc.writeMem(0x2891, { 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x613a, gbc.sp());
        EXPECT(0x2892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00E9
        gbc.setState(0x806b, 0x4b0e, 0x89b0, 0x3229, 0xf8a5, 0xa133, 0x1, 0x1);
        gbc.writeMem(0x806b, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4b0e, gbc.sp());
        EXPECT(0x806c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x806b));
        // A0 00EA
        gbc.setState(0x2bb0, 0xa7fc, 0xe040, 0x291f, 0x9ce0, 0xb4ce, 0x1, 0x1);
        gbc.writeMem(0x2bb0, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa7fc, gbc.sp());
        EXPECT(0x2bb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00EB
        gbc.setState(0xae81, 0x53f3, 0xd8f0, 0xbdaa, 0xd574, 0xddb7, 0x1, 0x1);
        gbc.writeMem(0xae81, { 0xa0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x53f3, gbc.sp());
        EXPECT(0xae82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xae81));
        // A0 00EC
        gbc.setState(0x101c, 0x3bf7, 0x8fb0, 0x9b7, 0x9268, 0xdcd5, 0x0, 0x1);
        gbc.writeMem(0x101c, { 0xa0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3bf7, gbc.sp());
        EXPECT(0x101d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00ED
        gbc.setState(0x2b6d, 0x14be, 0x6770, 0x37aa, 0xf273, 0x8b3, 0x0, 0x0);
        gbc.writeMem(0x2b6d, { 0xa0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x14be, gbc.sp());
        EXPECT(0x2b6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00EE
        gbc.setState(0xdc51, 0xf6bd, 0x9a50, 0x9586, 0xd27, 0xe96c, 0x1, 0x1);
        gbc.writeMem(0xdc51, { 0xa0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf6bd, gbc.sp());
        EXPECT(0xdc52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xdc51));
        // A0 00EF
        gbc.setState(0xae04, 0x6c1e, 0xe50, 0xaf91, 0x8d61, 0xa298, 0x1, 0x1);
        gbc.writeMem(0xae04, { 0xa0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6c1e, gbc.sp());
        EXPECT(0xae05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xae04));
        // A0 00F0
        gbc.setState(0x1025, 0x5766, 0x2f10, 0xdb7b, 0x69e2, 0x8c38, 0x1, 0x0);
        gbc.writeMem(0x1025, { 0xa0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5766, gbc.sp());
        EXPECT(0x1026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00F1
        gbc.setState(0x8e45, 0xe500, 0xa80, 0xc151, 0x919b, 0xda09, 0x1, 0x1);
        gbc.writeMem(0x8e45, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe500, gbc.sp());
        EXPECT(0x8e46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8e45));
        // A0 00F2
        gbc.setState(0xea6d, 0x9a3c, 0xc140, 0xf8e7, 0xc19c, 0x4c97, 0x0, 0x1);
        gbc.writeMem(0xea6d, { 0xa0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9a3c, gbc.sp());
        EXPECT(0xea6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xea6d));
        // A0 00F3
        gbc.setState(0x58f6, 0xf932, 0xddd0, 0x837e, 0xd6f9, 0x69d7, 0x1, 0x0);
        gbc.writeMem(0x58f6, { 0xa0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf932, gbc.sp());
        EXPECT(0x58f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00F5
        gbc.setState(0x55fe, 0x448b, 0x48f0, 0x5f26, 0xaabe, 0x4cd9, 0x1, 0x0);
        gbc.writeMem(0x55fe, { 0xa0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x448b, gbc.sp());
        EXPECT(0x55ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00F6
        gbc.setState(0x5fff, 0x3f9c, 0x8f20, 0xcb15, 0x9fd6, 0xab9c, 0x1, 0x0);
        gbc.writeMem(0x5fff, { 0xa0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3f9c, gbc.sp());
        EXPECT(0x6000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00F7
        gbc.setState(0xaa7a, 0x79b3, 0x55f0, 0xfcff, 0x8f93, 0xc073, 0x0, 0x0);
        gbc.writeMem(0xaa7a, { 0xa0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x79b3, gbc.sp());
        EXPECT(0xaa7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xaa7a));
        // A0 00F8
        gbc.setState(0x2ef7, 0xf87b, 0x71a0, 0x2b44, 0xa2cd, 0xb589, 0x1, 0x1);
        gbc.writeMem(0x2ef7, { 0xa0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf87b, gbc.sp());
        EXPECT(0x2ef8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00F9
        gbc.setState(0x88c1, 0x15df, 0x82a0, 0x6e38, 0xfd4c, 0x2d8c, 0x1, 0x1);
        gbc.writeMem(0x88c1, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x15df, gbc.sp());
        EXPECT(0x88c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x88c1));
        // A0 00FC
        gbc.setState(0xd5ac, 0x2aa0, 0x6bf0, 0x704, 0xca0a, 0x64a5, 0x1, 0x1);
        gbc.writeMem(0xd5ac, { 0xa0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2aa0, gbc.sp());
        EXPECT(0xd5ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd5ac));
        // A0 00FD
        gbc.setState(0x69ab, 0xf40, 0x97e0, 0x17c1, 0x35c7, 0x2f6b, 0x1, 0x1);
        gbc.writeMem(0x69ab, { 0xa0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf40, gbc.sp());
        EXPECT(0x69ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 00FE
        gbc.setState(0x9a04, 0xc471, 0x29b0, 0x8bf2, 0x28ab, 0x7d84, 0x1, 0x1);
        gbc.writeMem(0x9a04, { 0xa0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc471, gbc.sp());
        EXPECT(0x9a05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9a04));
        // A0 00FF
        gbc.setState(0x57d7, 0x4b4d, 0xdb70, 0xbc38, 0xbcaa, 0x2595, 0x1, 0x1);
        gbc.writeMem(0x57d7, { 0xa0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4b4d, gbc.sp());
        EXPECT(0x57d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0101
        gbc.setState(0x5fff, 0x824b, 0x9150, 0x2def, 0x4e53, 0xbab7, 0x0, 0x0);
        gbc.writeMem(0x5fff, { 0xa0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x824b, gbc.sp());
        EXPECT(0x6000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0102
        gbc.setState(0x429c, 0x2ca7, 0xab20, 0x3eb, 0x7cb6, 0x9ce7, 0x1, 0x1);
        gbc.writeMem(0x429c, { 0xa0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2ca7, gbc.sp());
        EXPECT(0x429d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0103
        gbc.setState(0x6fb, 0x21f1, 0xafb0, 0xca3f, 0x4a0a, 0xae73, 0x0, 0x0);
        gbc.writeMem(0x6fb, { 0xa0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x21f1, gbc.sp());
        EXPECT(0x6fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0104
        gbc.setState(0xa883, 0x5952, 0x3730, 0x6acd, 0x3747, 0xfce4, 0x1, 0x1);
        gbc.writeMem(0xa883, { 0xa0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5952, gbc.sp());
        EXPECT(0xa884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa883));
        // A0 0105
        gbc.setState(0x4a40, 0x7a55, 0xa290, 0xec2b, 0x90af, 0xc4cd, 0x0, 0x0);
        gbc.writeMem(0x4a40, { 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7a55, gbc.sp());
        EXPECT(0x4a41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0106
        gbc.setState(0xb2d2, 0x2593, 0x8560, 0x6ca2, 0xdbd8, 0xb063, 0x0, 0x0);
        gbc.writeMem(0xb2d2, { 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2593, gbc.sp());
        EXPECT(0xb2d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb2d2));
        // A0 0107
        gbc.setState(0xa460, 0xf0b, 0x5540, 0xad63, 0x3e62, 0x3445, 0x1, 0x1);
        gbc.writeMem(0xa460, { 0xa0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf0b, gbc.sp());
        EXPECT(0xa461, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa460));
        // A0 0108
        gbc.setState(0x4c52, 0xc6c1, 0x6e10, 0xebd3, 0x1fbd, 0xa5e2, 0x1, 0x0);
        gbc.writeMem(0x4c52, { 0xa0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc6c1, gbc.sp());
        EXPECT(0x4c53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0109
        gbc.setState(0xe121, 0x7b4f, 0x6630, 0xf15d, 0xd2b5, 0x88f4, 0x0, 0x0);
        gbc.writeMem(0xe121, { 0xa0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7b4f, gbc.sp());
        EXPECT(0xe122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe121));
        // A0 010A
        gbc.setState(0xb7d9, 0xfa9d, 0xd720, 0xb540, 0x5969, 0xfc2d, 0x0, 0x0);
        gbc.writeMem(0xb7d9, { 0xa0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xfa9d, gbc.sp());
        EXPECT(0xb7da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb7d9));
        // A0 010B
        gbc.setState(0x2ffa, 0x50f9, 0xd680, 0x5374, 0x1a7a, 0x5b89, 0x0, 0x1);
        gbc.writeMem(0x2ffa, { 0xa0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x50f9, gbc.sp());
        EXPECT(0x2ffb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 010C
        gbc.setState(0x1088, 0x243b, 0x8b0, 0xa95d, 0xc146, 0xad9f, 0x1, 0x1);
        gbc.writeMem(0x1088, { 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x243b, gbc.sp());
        EXPECT(0x1089, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 010D
        gbc.setState(0x84e7, 0x9177, 0xce70, 0x9215, 0xdf69, 0xc357, 0x0, 0x0);
        gbc.writeMem(0x84e7, { 0xa0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9177, gbc.sp());
        EXPECT(0x84e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x84e7));
        // A0 010E
        gbc.setState(0x520f, 0xcdcc, 0x7d50, 0xe6bb, 0xfdf7, 0xe558, 0x0, 0x0);
        gbc.writeMem(0x520f, { 0xa0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xcdcc, gbc.sp());
        EXPECT(0x5210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 010F
        gbc.setState(0x1c6b, 0x43a3, 0xe4e0, 0xb8f5, 0xf099, 0xba8b, 0x0, 0x1);
        gbc.writeMem(0x1c6b, { 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x43a3, gbc.sp());
        EXPECT(0x1c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0110
        gbc.setState(0x502, 0xba7a, 0x2c0, 0x2e4e, 0xf6e1, 0x4ada, 0x0, 0x1);
        gbc.writeMem(0x502, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xba7a, gbc.sp());
        EXPECT(0x503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0111
        gbc.setState(0xb40d, 0xc7ef, 0x7100, 0x218e, 0x64db, 0x458f, 0x0, 0x1);
        gbc.writeMem(0xb40d, { 0xa0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc7ef, gbc.sp());
        EXPECT(0xb40e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb40d));
        // A0 0112
        gbc.setState(0xc9a1, 0x78a8, 0x2fc0, 0x1f2, 0x5624, 0xe076, 0x1, 0x1);
        gbc.writeMem(0xc9a1, { 0xa0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x78a8, gbc.sp());
        EXPECT(0xc9a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc9a1));
        // A0 0113
        gbc.setState(0x2257, 0x1a23, 0xb110, 0x9b72, 0x70db, 0xec0b, 0x1, 0x1);
        gbc.writeMem(0x2257, { 0xa0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1a23, gbc.sp());
        EXPECT(0x2258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0114
        gbc.setState(0x4842, 0x5ded, 0xa620, 0x46c5, 0x200a, 0x6806, 0x0, 0x1);
        gbc.writeMem(0x4842, { 0xa0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5ded, gbc.sp());
        EXPECT(0x4843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0115
        gbc.setState(0x6420, 0xd62f, 0xb020, 0xf707, 0x1380, 0xd21b, 0x0, 0x0);
        gbc.writeMem(0x6420, { 0xa0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd62f, gbc.sp());
        EXPECT(0x6421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0116
        gbc.setState(0xb031, 0xa5d3, 0x2b0, 0x3bb7, 0x9f2f, 0xc210, 0x1, 0x0);
        gbc.writeMem(0xb031, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa5d3, gbc.sp());
        EXPECT(0xb032, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb031));
        // A0 0117
        gbc.setState(0x8099, 0x5c66, 0x77c0, 0x9b8, 0x7fd7, 0x786, 0x0, 0x1);
        gbc.writeMem(0x8099, { 0xa0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5c66, gbc.sp());
        EXPECT(0x809a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8099));
        // A0 0118
        gbc.setState(0x7cb5, 0xfbaa, 0xb270, 0x5a3e, 0x703f, 0x5d49, 0x0, 0x1);
        gbc.writeMem(0x7cb5, { 0xa0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xfbaa, gbc.sp());
        EXPECT(0x7cb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0119
        gbc.setState(0x21b7, 0xab4e, 0x5660, 0x790d, 0x3732, 0xeafb, 0x1, 0x0);
        gbc.writeMem(0x21b7, { 0xa0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xab4e, gbc.sp());
        EXPECT(0x21b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 011A
        gbc.setState(0xa4e1, 0xf869, 0x1930, 0xa8b8, 0x9444, 0x23aa, 0x0, 0x0);
        gbc.writeMem(0xa4e1, { 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf869, gbc.sp());
        EXPECT(0xa4e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa4e1));
        // A0 011B
        gbc.setState(0x863c, 0x2624, 0xdb90, 0x924c, 0xacb2, 0x667a, 0x1, 0x0);
        gbc.writeMem(0x863c, { 0xa0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2624, gbc.sp());
        EXPECT(0x863d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x863c));
        // A0 011C
        gbc.setState(0x997, 0xf73a, 0xe260, 0x1fde, 0xc3c0, 0xb974, 0x0, 0x0);
        gbc.writeMem(0x997, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf73a, gbc.sp());
        EXPECT(0x998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 011D
        gbc.setState(0x83e4, 0x7110, 0x5d00, 0x2911, 0x9b5f, 0xc225, 0x1, 0x0);
        gbc.writeMem(0x83e4, { 0xa0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7110, gbc.sp());
        EXPECT(0x83e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x83e4));
        // A0 011E
        gbc.setState(0x38ca, 0xcc69, 0x3810, 0xaee1, 0xb948, 0x8d9, 0x0, 0x1);
        gbc.writeMem(0x38ca, { 0xa0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xcc69, gbc.sp());
        EXPECT(0x38cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 011F
        gbc.setState(0xc24, 0xf741, 0x8f80, 0x2fe2, 0xf9ec, 0x7d5d, 0x0, 0x0);
        gbc.writeMem(0xc24, { 0xa0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf741, gbc.sp());
        EXPECT(0xc25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0120
        gbc.setState(0x4f9b, 0x179f, 0xcae0, 0xb713, 0x945, 0x341c, 0x0, 0x1);
        gbc.writeMem(0x4f9b, { 0xa0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x179f, gbc.sp());
        EXPECT(0x4f9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0121
        gbc.setState(0xba20, 0x6050, 0x7250, 0xd087, 0x54fc, 0xbadd, 0x0, 0x1);
        gbc.writeMem(0xba20, { 0xa0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6050, gbc.sp());
        EXPECT(0xba21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xba20));
        // A0 0122
        gbc.setState(0x7725, 0x3b11, 0xad60, 0x7e4, 0xe09c, 0xe4a6, 0x0, 0x0);
        gbc.writeMem(0x7725, { 0xa0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3b11, gbc.sp());
        EXPECT(0x7726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0123
        gbc.setState(0x3a91, 0xaa65, 0x28a0, 0xa27f, 0x924f, 0xed38, 0x0, 0x0);
        gbc.writeMem(0x3a91, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xaa65, gbc.sp());
        EXPECT(0x3a92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0124
        gbc.setState(0xcbc9, 0x63d2, 0xe680, 0xb1f5, 0xccc3, 0xff7d, 0x1, 0x0);
        gbc.writeMem(0xcbc9, { 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x63d2, gbc.sp());
        EXPECT(0xcbca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xcbc9));
        // A0 0125
        gbc.setState(0xc9bf, 0x38fd, 0x11a0, 0x8474, 0x990a, 0x40ef, 0x0, 0x0);
        gbc.writeMem(0xc9bf, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x38fd, gbc.sp());
        EXPECT(0xc9c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc9bf));
        // A0 0126
        gbc.setState(0xa547, 0x33dc, 0xeb40, 0xf514, 0xf943, 0x29ce, 0x0, 0x0);
        gbc.writeMem(0xa547, { 0xa0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x33dc, gbc.sp());
        EXPECT(0xa548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa547));
        // A0 0127
        gbc.setState(0x874a, 0xee20, 0xcc0, 0x3f7d, 0x363, 0xb54c, 0x0, 0x0);
        gbc.writeMem(0x874a, { 0xa0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xee20, gbc.sp());
        EXPECT(0x874b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x874a));
        // A0 0128
        gbc.setState(0xc76c, 0x7581, 0xcfc0, 0x3b66, 0x2be, 0x2e23, 0x0, 0x0);
        gbc.writeMem(0xc76c, { 0xa0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7581, gbc.sp());
        EXPECT(0xc76d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc76c));
        // A0 0129
        gbc.setState(0x1abb, 0xd47c, 0x1060, 0xcb6b, 0xf66, 0x2278, 0x1, 0x1);
        gbc.writeMem(0x1abb, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd47c, gbc.sp());
        EXPECT(0x1abc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 012A
        gbc.setState(0x16bd, 0x988e, 0x8770, 0x86a, 0x12d9, 0x616b, 0x1, 0x0);
        gbc.writeMem(0x16bd, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x988e, gbc.sp());
        EXPECT(0x16be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 012B
        gbc.setState(0xa87c, 0x2a3f, 0x440, 0x1e7, 0x41c, 0x7e72, 0x1, 0x1);
        gbc.writeMem(0xa87c, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2a3f, gbc.sp());
        EXPECT(0xa87d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa87c));
        // A0 012C
        gbc.setState(0xc0f, 0x646a, 0x6af0, 0x1679, 0x2ad7, 0xc14d, 0x0, 0x1);
        gbc.writeMem(0xc0f, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x646a, gbc.sp());
        EXPECT(0xc10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 012D
        gbc.setState(0x2209, 0x9791, 0x4f80, 0x751a, 0x6037, 0x19eb, 0x0, 0x1);
        gbc.writeMem(0x2209, { 0xa0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9791, gbc.sp());
        EXPECT(0x220a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 012E
        gbc.setState(0x5e13, 0xbfbb, 0xab00, 0xf639, 0xa96a, 0x481f, 0x1, 0x1);
        gbc.writeMem(0x5e13, { 0xa0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xbfbb, gbc.sp());
        EXPECT(0x5e14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 012F
        gbc.setState(0xa454, 0xa9c1, 0x3d90, 0x97ae, 0x5b74, 0xb213, 0x1, 0x1);
        gbc.writeMem(0xa454, { 0xa0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa9c1, gbc.sp());
        EXPECT(0xa455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa454));
        // A0 0130
        gbc.setState(0x5cf3, 0xd35e, 0x9660, 0x9921, 0xeeb2, 0x48fa, 0x0, 0x0);
        gbc.writeMem(0x5cf3, { 0xa0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd35e, gbc.sp());
        EXPECT(0x5cf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0131
        gbc.setState(0xd06a, 0x7b5, 0xc680, 0xf393, 0xc73f, 0x433c, 0x1, 0x1);
        gbc.writeMem(0xd06a, { 0xa0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7b5, gbc.sp());
        EXPECT(0xd06b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd06a));
        // A0 0132
        gbc.setState(0x2312, 0xe276, 0xcf60, 0xd034, 0x4967, 0xea48, 0x1, 0x0);
        gbc.writeMem(0x2312, { 0xa0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe276, gbc.sp());
        EXPECT(0x2313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0133
        gbc.setState(0x5d5e, 0xc460, 0x4710, 0x1c0d, 0x7131, 0x851f, 0x0, 0x1);
        gbc.writeMem(0x5d5e, { 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc460, gbc.sp());
        EXPECT(0x5d5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0134
        gbc.setState(0x331a, 0xe040, 0x4210, 0xbd2c, 0x22e8, 0x73eb, 0x1, 0x0);
        gbc.writeMem(0x331a, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe040, gbc.sp());
        EXPECT(0x331b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0135
        gbc.setState(0x71c2, 0xe1ee, 0xaaf0, 0xd751, 0xd472, 0x1a5d, 0x1, 0x1);
        gbc.writeMem(0x71c2, { 0xa0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe1ee, gbc.sp());
        EXPECT(0x71c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0136
        gbc.setState(0x6e82, 0x1e71, 0xb630, 0xe4d7, 0xfb27, 0x7d81, 0x1, 0x0);
        gbc.writeMem(0x6e82, { 0xa0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1e71, gbc.sp());
        EXPECT(0x6e83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0137
        gbc.setState(0x8d88, 0x9276, 0x42e0, 0xbdbf, 0xa933, 0xe4fe, 0x0, 0x0);
        gbc.writeMem(0x8d88, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9276, gbc.sp());
        EXPECT(0x8d89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8d88));
        // A0 0138
        gbc.setState(0x2152, 0xd07c, 0x200, 0xa53d, 0xeec, 0x1cee, 0x1, 0x1);
        gbc.writeMem(0x2152, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd07c, gbc.sp());
        EXPECT(0x2153, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0139
        gbc.setState(0xd74e, 0xc589, 0x9510, 0x7b9, 0x1dcd, 0x116d, 0x1, 0x1);
        gbc.writeMem(0xd74e, { 0xa0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc589, gbc.sp());
        EXPECT(0xd74f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd74e));
        // A0 013A
        gbc.setState(0x2ad, 0xb036, 0x8510, 0xe250, 0xfab4, 0x1dcf, 0x1, 0x1);
        gbc.writeMem(0x2ad, { 0xa0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb036, gbc.sp());
        EXPECT(0x2ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 013B
        gbc.setState(0xe1cd, 0x2dd0, 0xdbf0, 0x1183, 0x2ae6, 0x9aaf, 0x0, 0x1);
        gbc.writeMem(0xe1cd, { 0xa0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2dd0, gbc.sp());
        EXPECT(0xe1ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe1cd));
        // A0 013C
        gbc.setState(0x1226, 0x7818, 0xe000, 0x616, 0x545d, 0x93a1, 0x0, 0x1);
        gbc.writeMem(0x1226, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7818, gbc.sp());
        EXPECT(0x1227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 013D
        gbc.setState(0xe0ec, 0xd2cf, 0x85c0, 0x2e61, 0x807a, 0x9945, 0x1, 0x0);
        gbc.writeMem(0xe0ec, { 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd2cf, gbc.sp());
        EXPECT(0xe0ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe0ec));
        // A0 013E
        gbc.setState(0xa069, 0x2947, 0xf940, 0x5453, 0xb59f, 0xb408, 0x1, 0x1);
        gbc.writeMem(0xa069, { 0xa0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2947, gbc.sp());
        EXPECT(0xa06a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa069));
        // A0 013F
        gbc.setState(0xb9d7, 0xb37e, 0x7060, 0xea2c, 0x430f, 0x676e, 0x1, 0x0);
        gbc.writeMem(0xb9d7, { 0xa0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb37e, gbc.sp());
        EXPECT(0xb9d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb9d7));
        // A0 0140
        gbc.setState(0xb401, 0x1502, 0xfce0, 0x6074, 0xc88b, 0x7c4a, 0x0, 0x1);
        gbc.writeMem(0xb401, { 0xa0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1502, gbc.sp());
        EXPECT(0xb402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb401));
        // A0 0141
        gbc.setState(0x2a8b, 0x42e, 0x7240, 0x5062, 0xc150, 0xe86f, 0x0, 0x1);
        gbc.writeMem(0x2a8b, { 0xa0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x42e, gbc.sp());
        EXPECT(0x2a8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0142
        gbc.setState(0xab00, 0x2d4f, 0x2e30, 0x3240, 0x21b, 0x7857, 0x0, 0x1);
        gbc.writeMem(0xab00, { 0xa0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2d4f, gbc.sp());
        EXPECT(0xab01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xab00));
        // A0 0144
        gbc.setState(0xdf70, 0xcf70, 0x87b0, 0x52a5, 0xfacc, 0x5bbc, 0x1, 0x1);
        gbc.writeMem(0xdf70, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xcf70, gbc.sp());
        EXPECT(0xdf71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xdf70));
        // A0 0145
        gbc.setState(0x901c, 0xbd89, 0xf700, 0x1223, 0x3bf1, 0x6ba6, 0x1, 0x1);
        gbc.writeMem(0x901c, { 0xa0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xbd89, gbc.sp());
        EXPECT(0x901d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x901c));
        // A0 0146
        gbc.setState(0xca33, 0x7d38, 0xe950, 0xf263, 0x1753, 0xc8a2, 0x1, 0x1);
        gbc.writeMem(0xca33, { 0xa0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7d38, gbc.sp());
        EXPECT(0xca34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xca33));
        // A0 0147
        gbc.setState(0xab30, 0x469, 0x8810, 0x3c7f, 0x776f, 0xabea, 0x0, 0x1);
        gbc.writeMem(0xab30, { 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x469, gbc.sp());
        EXPECT(0xab31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xab30));
        // A0 0149
        gbc.setState(0xce25, 0xae77, 0x50f0, 0xda23, 0xfba5, 0x9e76, 0x1, 0x0);
        gbc.writeMem(0xce25, { 0xa0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xae77, gbc.sp());
        EXPECT(0xce26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xce25));
        // A0 014A
        gbc.setState(0xd3f0, 0x240, 0x4010, 0xb65a, 0x9805, 0x91dc, 0x1, 0x1);
        gbc.writeMem(0xd3f0, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x240, gbc.sp());
        EXPECT(0xd3f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd3f0));
        // A0 014B
        gbc.setState(0x5dcb, 0x6ead, 0xc4d0, 0x8abc, 0xf8db, 0x323b, 0x1, 0x1);
        gbc.writeMem(0x5dcb, { 0xa0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6ead, gbc.sp());
        EXPECT(0x5dcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 014C
        gbc.setState(0xc8bf, 0xcf7e, 0xf880, 0xc5c1, 0xbab5, 0x2a73, 0x1, 0x0);
        gbc.writeMem(0xc8bf, { 0xa0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xcf7e, gbc.sp());
        EXPECT(0xc8c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc8bf));
        // A0 014E
        gbc.setState(0x1ed, 0x6ac4, 0x2270, 0xd2f9, 0xdbca, 0xfea5, 0x1, 0x1);
        gbc.writeMem(0x1ed, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6ac4, gbc.sp());
        EXPECT(0x1ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 014F
        gbc.setState(0x9ba5, 0xb01b, 0x5200, 0x7c15, 0xea3e, 0x1d60, 0x1, 0x0);
        gbc.writeMem(0x9ba5, { 0xa0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb01b, gbc.sp());
        EXPECT(0x9ba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9ba5));
        // A0 0150
        gbc.setState(0xaa8b, 0xcac4, 0xa850, 0x46d7, 0x9971, 0xc700, 0x0, 0x1);
        gbc.writeMem(0xaa8b, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xcac4, gbc.sp());
        EXPECT(0xaa8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xaa8b));
        // A0 0152
        gbc.setState(0xe46b, 0x4d00, 0xa750, 0xb042, 0xfb34, 0xc71f, 0x0, 0x0);
        gbc.writeMem(0xe46b, { 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4d00, gbc.sp());
        EXPECT(0xe46c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe46b));
        // A0 0153
        gbc.setState(0xd254, 0x73c, 0xd620, 0x1e7f, 0xa72d, 0x1aad, 0x1, 0x1);
        gbc.writeMem(0xd254, { 0xa0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x73c, gbc.sp());
        EXPECT(0xd255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd254));
        // A0 0154
        gbc.setState(0x5091, 0x2596, 0x1e60, 0xd885, 0x25b5, 0xf1a0, 0x1, 0x1);
        gbc.writeMem(0x5091, { 0xa0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2596, gbc.sp());
        EXPECT(0x5092, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0155
        gbc.setState(0x48a3, 0x4654, 0x9430, 0x1f54, 0x634a, 0x4c4f, 0x1, 0x1);
        gbc.writeMem(0x48a3, { 0xa0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4654, gbc.sp());
        EXPECT(0x48a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0156
        gbc.setState(0x7142, 0xd264, 0x2320, 0x60e1, 0x904b, 0x4cd7, 0x0, 0x0);
        gbc.writeMem(0x7142, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd264, gbc.sp());
        EXPECT(0x7143, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0157
        gbc.setState(0x7258, 0x95f7, 0xe860, 0x53c4, 0xf134, 0xc045, 0x0, 0x1);
        gbc.writeMem(0x7258, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x95f7, gbc.sp());
        EXPECT(0x7259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0158
        gbc.setState(0xb8f2, 0xa149, 0xdcc0, 0x1a53, 0x2d8f, 0xb6da, 0x0, 0x1);
        gbc.writeMem(0xb8f2, { 0xa0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa149, gbc.sp());
        EXPECT(0xb8f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb8f2));
        // A0 0159
        gbc.setState(0xbe7b, 0x2bab, 0x23b0, 0x346c, 0x9934, 0x7d74, 0x1, 0x1);
        gbc.writeMem(0xbe7b, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2bab, gbc.sp());
        EXPECT(0xbe7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xbe7b));
        // A0 015A
        gbc.setState(0x81db, 0xb25a, 0x3460, 0x140a, 0xe003, 0xaaa5, 0x0, 0x1);
        gbc.writeMem(0x81db, { 0xa0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb25a, gbc.sp());
        EXPECT(0x81dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x81db));
        // A0 015B
        gbc.setState(0x41b1, 0xbe22, 0x6d30, 0x2a21, 0x9ad7, 0xd939, 0x0, 0x0);
        gbc.writeMem(0x41b1, { 0xa0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xbe22, gbc.sp());
        EXPECT(0x41b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 015C
        gbc.setState(0x598c, 0x908f, 0xf770, 0x1f5, 0x2940, 0x292a, 0x1, 0x1);
        gbc.writeMem(0x598c, { 0xa0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x908f, gbc.sp());
        EXPECT(0x598d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 015D
        gbc.setState(0x1c3, 0x26c5, 0xeda0, 0x4c73, 0xa84e, 0x417b, 0x0, 0x1);
        gbc.writeMem(0x1c3, { 0xa0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x26c5, gbc.sp());
        EXPECT(0x1c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 015E
        gbc.setState(0xc31e, 0x9d4, 0x2fd0, 0x9e5b, 0xab9b, 0xf34e, 0x0, 0x0);
        gbc.writeMem(0xc31e, { 0xa0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9d4, gbc.sp());
        EXPECT(0xc31f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc31e));
        // A0 015F
        gbc.setState(0xac74, 0xe19c, 0x3830, 0x98d1, 0xb611, 0xbaab, 0x0, 0x1);
        gbc.writeMem(0xac74, { 0xa0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe19c, gbc.sp());
        EXPECT(0xac75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xac74));
        // A0 0160
        gbc.setState(0xea61, 0x8898, 0x7790, 0x61db, 0xdbe6, 0xd947, 0x1, 0x1);
        gbc.writeMem(0xea61, { 0xa0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8898, gbc.sp());
        EXPECT(0xea62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xea61));
        // A0 0161
        gbc.setState(0xbe58, 0x9c24, 0xf380, 0x3bca, 0x2a43, 0x90d8, 0x0, 0x0);
        gbc.writeMem(0xbe58, { 0xa0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x9c24, gbc.sp());
        EXPECT(0xbe59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xbe58));
        // A0 0162
        gbc.setState(0x5b50, 0x67c, 0xc490, 0xb202, 0x58de, 0x635a, 0x1, 0x0);
        gbc.writeMem(0x5b50, { 0xa0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x67c, gbc.sp());
        EXPECT(0x5b51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0163
        gbc.setState(0x2084, 0x819b, 0x9bb0, 0x13f2, 0xa25d, 0xcd4c, 0x1, 0x0);
        gbc.writeMem(0x2084, { 0xa0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x819b, gbc.sp());
        EXPECT(0x2085, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0164
        gbc.setState(0x12d1, 0x9b3f, 0xeee0, 0x782, 0xb0de, 0x646f, 0x0, 0x1);
        gbc.writeMem(0x12d1, { 0xa0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9b3f, gbc.sp());
        EXPECT(0x12d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0165
        gbc.setState(0x7bbb, 0xb310, 0x2530, 0x56e, 0xd526, 0x9d9a, 0x1, 0x0);
        gbc.writeMem(0x7bbb, { 0xa0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb310, gbc.sp());
        EXPECT(0x7bbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0166
        gbc.setState(0x5536, 0x1a14, 0x11f0, 0xd361, 0x7d67, 0x1e11, 0x1, 0x1);
        gbc.writeMem(0x5536, { 0xa0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1a14, gbc.sp());
        EXPECT(0x5537, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0167
        gbc.setState(0x618, 0xc7ed, 0xe990, 0x8cd0, 0x854f, 0x8b4b, 0x1, 0x0);
        gbc.writeMem(0x618, { 0xa0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc7ed, gbc.sp());
        EXPECT(0x619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0168
        gbc.setState(0xad89, 0x347f, 0xf8a0, 0x838b, 0x9c8e, 0xc89a, 0x1, 0x1);
        gbc.writeMem(0xad89, { 0xa0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x347f, gbc.sp());
        EXPECT(0xad8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xad89));
        // A0 0169
        gbc.setState(0x8a57, 0xdf57, 0xccb0, 0x3bb1, 0xc906, 0x4f98, 0x0, 0x0);
        gbc.writeMem(0x8a57, { 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xdf57, gbc.sp());
        EXPECT(0x8a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8a57));
        // A0 016A
        gbc.setState(0xdc09, 0xb0c6, 0xc550, 0x692a, 0xe9d8, 0x11c1, 0x1, 0x0);
        gbc.writeMem(0xdc09, { 0xa0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb0c6, gbc.sp());
        EXPECT(0xdc0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xdc09));
        // A0 016B
        gbc.setState(0x4c60, 0x9e4a, 0x1ed0, 0x1109, 0x349c, 0xa8c2, 0x1, 0x1);
        gbc.writeMem(0x4c60, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9e4a, gbc.sp());
        EXPECT(0x4c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 016C
        gbc.setState(0x9f33, 0x2a7e, 0x77a0, 0x884f, 0x5d40, 0x7749, 0x0, 0x0);
        gbc.writeMem(0x9f33, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2a7e, gbc.sp());
        EXPECT(0x9f34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9f33));
        // A0 016D
        gbc.setState(0x31a3, 0x1542, 0x67d0, 0x9c4d, 0x560d, 0x6a13, 0x1, 0x1);
        gbc.writeMem(0x31a3, { 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1542, gbc.sp());
        EXPECT(0x31a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 016E
        gbc.setState(0x12ba, 0xaef3, 0xa240, 0xa8a4, 0xff49, 0x5ca9, 0x1, 0x1);
        gbc.writeMem(0x12ba, { 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xaef3, gbc.sp());
        EXPECT(0x12bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 016F
        gbc.setState(0xebde, 0x528b, 0xe5f0, 0x81ab, 0x3c83, 0x64d9, 0x0, 0x0);
        gbc.writeMem(0xebde, { 0xa0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x528b, gbc.sp());
        EXPECT(0xebdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xebde));
        // A0 0170
        gbc.setState(0x26cf, 0xf2a8, 0x5100, 0x6df2, 0x6d17, 0xae76, 0x0, 0x0);
        gbc.writeMem(0x26cf, { 0xa0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf2a8, gbc.sp());
        EXPECT(0x26d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0171
        gbc.setState(0xaa48, 0x84e1, 0x7e10, 0x7950, 0x192d, 0x12c1, 0x1, 0x1);
        gbc.writeMem(0xaa48, { 0xa0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x84e1, gbc.sp());
        EXPECT(0xaa49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xaa48));
        // A0 0172
        gbc.setState(0x8da1, 0xf705, 0x18e0, 0x9140, 0xc07e, 0xfa50, 0x1, 0x0);
        gbc.writeMem(0x8da1, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf705, gbc.sp());
        EXPECT(0x8da2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8da1));
        // A0 0173
        gbc.setState(0x2e8c, 0xd0fa, 0xf030, 0x437c, 0xd8a2, 0xb215, 0x1, 0x0);
        gbc.writeMem(0x2e8c, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd0fa, gbc.sp());
        EXPECT(0x2e8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0174
        gbc.setState(0x8e15, 0x2c2f, 0x2c70, 0x725e, 0xde56, 0xb1ed, 0x1, 0x0);
        gbc.writeMem(0x8e15, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2c2f, gbc.sp());
        EXPECT(0x8e16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8e15));
        // A0 0175
        gbc.setState(0x33ce, 0x677e, 0x5d20, 0xef6d, 0x3539, 0x797e, 0x1, 0x1);
        gbc.writeMem(0x33ce, { 0xa0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x677e, gbc.sp());
        EXPECT(0x33cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0176
        gbc.setState(0xb4d6, 0x1a3c, 0x1fb0, 0x9ff2, 0x1df4, 0x25d0, 0x1, 0x0);
        gbc.writeMem(0xb4d6, { 0xa0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1a3c, gbc.sp());
        EXPECT(0xb4d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb4d6));
        // A0 0177
        gbc.setState(0xd942, 0xfbba, 0x45f0, 0x6da5, 0x4ee, 0x21f4, 0x0, 0x0);
        gbc.writeMem(0xd942, { 0xa0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xfbba, gbc.sp());
        EXPECT(0xd943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd942));
        // A0 0178
        gbc.setState(0x83e9, 0x8efa, 0x3320, 0x2e7d, 0xdf, 0x11f1, 0x1, 0x1);
        gbc.writeMem(0x83e9, { 0xa0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8efa, gbc.sp());
        EXPECT(0x83ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x83e9));
        // A0 0179
        gbc.setState(0x9b4b, 0xca08, 0x7200, 0x2d77, 0xb2fe, 0xf93, 0x1, 0x0);
        gbc.writeMem(0x9b4b, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xca08, gbc.sp());
        EXPECT(0x9b4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9b4b));
        // A0 017A
        gbc.setState(0x721e, 0x296a, 0x16f0, 0x5b8, 0xa1a7, 0xc376, 0x1, 0x0);
        gbc.writeMem(0x721e, { 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x296a, gbc.sp());
        EXPECT(0x721f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 017B
        gbc.setState(0x8a7, 0xf8c7, 0x5bf0, 0x2206, 0x9985, 0x42f1, 0x0, 0x0);
        gbc.writeMem(0x8a7, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf8c7, gbc.sp());
        EXPECT(0x8a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 017C
        gbc.setState(0x13cb, 0x72e1, 0x1580, 0xc591, 0x8c26, 0x506b, 0x1, 0x1);
        gbc.writeMem(0x13cb, { 0xa0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x72e1, gbc.sp());
        EXPECT(0x13cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 017D
        gbc.setState(0xcebb, 0xafab, 0x7a20, 0xbbf3, 0x2a4, 0x2667, 0x1, 0x0);
        gbc.writeMem(0xcebb, { 0xa0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xafab, gbc.sp());
        EXPECT(0xcebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xcebb));
        // A0 017E
        gbc.setState(0x37cd, 0x36ac, 0xefb0, 0xc138, 0xe391, 0x15a9, 0x0, 0x1);
        gbc.writeMem(0x37cd, { 0xa0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x36ac, gbc.sp());
        EXPECT(0x37ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 017F
        gbc.setState(0xc811, 0xe3a5, 0xaa50, 0x2197, 0xe4ab, 0xe263, 0x1, 0x1);
        gbc.writeMem(0xc811, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe3a5, gbc.sp());
        EXPECT(0xc812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc811));
        // A0 0181
        gbc.setState(0x5291, 0xdde2, 0x4000, 0x5f42, 0x674e, 0x5fa8, 0x1, 0x1);
        gbc.writeMem(0x5291, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xdde2, gbc.sp());
        EXPECT(0x5292, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0182
        gbc.setState(0xa9aa, 0x99fd, 0xb260, 0xcc5f, 0xf543, 0x2c99, 0x0, 0x0);
        gbc.writeMem(0xa9aa, { 0xa0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x99fd, gbc.sp());
        EXPECT(0xa9ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa9aa));
        // A0 0183
        gbc.setState(0x31e3, 0x2232, 0x5390, 0xec6, 0x104c, 0x70be, 0x1, 0x1);
        gbc.writeMem(0x31e3, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2232, gbc.sp());
        EXPECT(0x31e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0184
        gbc.setState(0xea0c, 0x726e, 0xf240, 0x23e8, 0x4e9b, 0xf2fa, 0x1, 0x1);
        gbc.writeMem(0xea0c, { 0xa0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x726e, gbc.sp());
        EXPECT(0xea0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xea0c));
        // A0 0185
        gbc.setState(0x6b6b, 0xab54, 0x41e0, 0x3217, 0xd897, 0x627e, 0x0, 0x1);
        gbc.writeMem(0x6b6b, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xab54, gbc.sp());
        EXPECT(0x6b6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0186
        gbc.setState(0x1a39, 0xe7ad, 0x3230, 0x4e16, 0xf2ac, 0x7c53, 0x1, 0x0);
        gbc.writeMem(0x1a39, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe7ad, gbc.sp());
        EXPECT(0x1a3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0187
        gbc.setState(0xc1e2, 0xe5a3, 0x5c20, 0xaf3b, 0x95a3, 0xce24, 0x1, 0x0);
        gbc.writeMem(0xc1e2, { 0xa0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe5a3, gbc.sp());
        EXPECT(0xc1e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc1e2));
        // A0 0188
        gbc.setState(0xed49, 0x3e31, 0xc150, 0x7d8c, 0x2f61, 0x755a, 0x0, 0x0);
        gbc.writeMem(0xed49, { 0xa0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3e31, gbc.sp());
        EXPECT(0xed4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xed49));
        // A0 0189
        gbc.setState(0x4f6c, 0x5d20, 0x4b80, 0x7604, 0xe9e5, 0xcee2, 0x0, 0x0);
        gbc.writeMem(0x4f6c, { 0xa0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5d20, gbc.sp());
        EXPECT(0x4f6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 018A
        gbc.setState(0x8633, 0xd613, 0x9b70, 0x6fd6, 0x9057, 0x1b7e, 0x1, 0x1);
        gbc.writeMem(0x8633, { 0xa0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd613, gbc.sp());
        EXPECT(0x8634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8633));
        // A0 018B
        gbc.setState(0xea4e, 0xca8d, 0x1e40, 0x7d47, 0xd350, 0xf1e, 0x1, 0x0);
        gbc.writeMem(0xea4e, { 0xa0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xca8d, gbc.sp());
        EXPECT(0xea4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xea4e));
        // A0 018C
        gbc.setState(0x9e51, 0x211b, 0x3920, 0x566e, 0x6509, 0x5d40, 0x0, 0x1);
        gbc.writeMem(0x9e51, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x211b, gbc.sp());
        EXPECT(0x9e52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9e51));
        // A0 018D
        gbc.setState(0xd465, 0x9194, 0x2e90, 0x7904, 0xe7df, 0xeca2, 0x1, 0x0);
        gbc.writeMem(0xd465, { 0xa0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9194, gbc.sp());
        EXPECT(0xd466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd465));
        // A0 018E
        gbc.setState(0xbe8c, 0x105b, 0x5890, 0x65f, 0x1315, 0xaa46, 0x1, 0x1);
        gbc.writeMem(0xbe8c, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x105b, gbc.sp());
        EXPECT(0xbe8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xbe8c));
        // A0 018F
        gbc.setState(0xcd17, 0xc0b5, 0xc700, 0x2835, 0x6a29, 0x1ad9, 0x0, 0x0);
        gbc.writeMem(0xcd17, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc0b5, gbc.sp());
        EXPECT(0xcd18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xcd17));
        // A0 0190
        gbc.setState(0x332a, 0x6d4f, 0xc400, 0x94a9, 0xef36, 0x41ce, 0x0, 0x1);
        gbc.writeMem(0x332a, { 0xa0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6d4f, gbc.sp());
        EXPECT(0x332b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0191
        gbc.setState(0x2f9d, 0x27c2, 0x94c0, 0xd393, 0x1649, 0x1c4e, 0x1, 0x0);
        gbc.writeMem(0x2f9d, { 0xa0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x27c2, gbc.sp());
        EXPECT(0x2f9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0192
        gbc.setState(0x5a7d, 0x45f2, 0xaeb0, 0x722b, 0x65a5, 0x37f8, 0x0, 0x0);
        gbc.writeMem(0x5a7d, { 0xa0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x45f2, gbc.sp());
        EXPECT(0x5a7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0193
        gbc.setState(0xa63, 0xcb5f, 0x1970, 0xe432, 0x6f27, 0xe9ed, 0x0, 0x1);
        gbc.writeMem(0xa63, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xcb5f, gbc.sp());
        EXPECT(0xa64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0194
        gbc.setState(0x603c, 0x98cd, 0x12f0, 0xce1b, 0xfca0, 0xc3db, 0x0, 0x1);
        gbc.writeMem(0x603c, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x98cd, gbc.sp());
        EXPECT(0x603d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0195
        gbc.setState(0x76c2, 0x5062, 0x1670, 0x31cb, 0x4fd3, 0x5e1f, 0x1, 0x0);
        gbc.writeMem(0x76c2, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5062, gbc.sp());
        EXPECT(0x76c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0196
        gbc.setState(0x44f, 0x46c3, 0x7470, 0x5cf, 0xe3a0, 0xdbdd, 0x1, 0x1);
        gbc.writeMem(0x44f, { 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x46c3, gbc.sp());
        EXPECT(0x450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0197
        gbc.setState(0xcb2a, 0x2bbd, 0x9950, 0x92c5, 0xc98d, 0x1d39, 0x1, 0x1);
        gbc.writeMem(0xcb2a, { 0xa0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2bbd, gbc.sp());
        EXPECT(0xcb2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xcb2a));
        // A0 0198
        gbc.setState(0xb1b2, 0xd89a, 0x4930, 0xbeb8, 0xa00, 0x49b7, 0x0, 0x0);
        gbc.writeMem(0xb1b2, { 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd89a, gbc.sp());
        EXPECT(0xb1b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb1b2));
        // A0 0199
        gbc.setState(0x52a8, 0xa08b, 0x3170, 0xc98, 0x80f3, 0xa57b, 0x1, 0x0);
        gbc.writeMem(0x52a8, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa08b, gbc.sp());
        EXPECT(0x52a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 019A
        gbc.setState(0xdc27, 0xfd85, 0x6fb0, 0x9599, 0xed20, 0x681b, 0x0, 0x1);
        gbc.writeMem(0xdc27, { 0xa0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xfd85, gbc.sp());
        EXPECT(0xdc28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xdc27));
        // A0 019C
        gbc.setState(0x7038, 0x2f38, 0xb0f0, 0xb8dc, 0x8f82, 0x796f, 0x0, 0x1);
        gbc.writeMem(0x7038, { 0xa0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2f38, gbc.sp());
        EXPECT(0x7039, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 019D
        gbc.setState(0xb3b4, 0xe2f4, 0x42b0, 0x32ca, 0x9447, 0x4481, 0x1, 0x0);
        gbc.writeMem(0xb3b4, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe2f4, gbc.sp());
        EXPECT(0xb3b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb3b4));
        // A0 019E
        gbc.setState(0x828d, 0x4bc1, 0xbf60, 0x1e97, 0xe57a, 0xf4b0, 0x1, 0x1);
        gbc.writeMem(0x828d, { 0xa0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4bc1, gbc.sp());
        EXPECT(0x828e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x828d));
        // A0 019F
        gbc.setState(0x5bbb, 0x3c46, 0xff90, 0x301f, 0x87bb, 0x3b5c, 0x1, 0x1);
        gbc.writeMem(0x5bbb, { 0xa0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3c46, gbc.sp());
        EXPECT(0x5bbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01A2
        gbc.setState(0x8e72, 0x5297, 0x24e0, 0x69a2, 0xb7e5, 0x71c6, 0x1, 0x0);
        gbc.writeMem(0x8e72, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5297, gbc.sp());
        EXPECT(0x8e73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8e72));
        // A0 01A3
        gbc.setState(0x741a, 0xd3e3, 0x9eb0, 0x4537, 0x589f, 0xf156, 0x0, 0x1);
        gbc.writeMem(0x741a, { 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd3e3, gbc.sp());
        EXPECT(0x741b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01A4
        gbc.setState(0x2f59, 0xb0d9, 0x2990, 0x3fa2, 0xbde4, 0xad1b, 0x1, 0x1);
        gbc.writeMem(0x2f59, { 0xa0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb0d9, gbc.sp());
        EXPECT(0x2f5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01A5
        gbc.setState(0xbb92, 0x8d5a, 0xbc90, 0xfcc0, 0x65b6, 0x7558, 0x1, 0x1);
        gbc.writeMem(0xbb92, { 0xa0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8d5a, gbc.sp());
        EXPECT(0xbb93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xbb92));
        // A0 01A6
        gbc.setState(0x1818, 0xedae, 0x4080, 0xc8b8, 0xe8b0, 0x12c7, 0x1, 0x1);
        gbc.writeMem(0x1818, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xedae, gbc.sp());
        EXPECT(0x1819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01A7
        gbc.setState(0xba11, 0x55e0, 0xe0c0, 0xa95d, 0xd764, 0x73aa, 0x0, 0x0);
        gbc.writeMem(0xba11, { 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x55e0, gbc.sp());
        EXPECT(0xba12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xba11));
        // A0 01A8
        gbc.setState(0x7eed, 0x4872, 0x6b50, 0xde93, 0x3710, 0xc465, 0x0, 0x1);
        gbc.writeMem(0x7eed, { 0xa0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4872, gbc.sp());
        EXPECT(0x7eee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01A9
        gbc.setState(0x449b, 0xb728, 0x9b00, 0x4df8, 0x5b0b, 0xa13, 0x1, 0x1);
        gbc.writeMem(0x449b, { 0xa0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb728, gbc.sp());
        EXPECT(0x449c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01AA
        gbc.setState(0x64b9, 0xec38, 0xa630, 0x1fbc, 0x5da1, 0xdb65, 0x0, 0x0);
        gbc.writeMem(0x64b9, { 0xa0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xec38, gbc.sp());
        EXPECT(0x64ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01AB
        gbc.setState(0xce09, 0x9048, 0xb7c0, 0x527b, 0xbe9a, 0xeff2, 0x1, 0x1);
        gbc.writeMem(0xce09, { 0xa0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9048, gbc.sp());
        EXPECT(0xce0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xce09));
        // A0 01AC
        gbc.setState(0x66b3, 0xefab, 0xd500, 0xb8ee, 0xc05b, 0xf32a, 0x1, 0x0);
        gbc.writeMem(0x66b3, { 0xa0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xefab, gbc.sp());
        EXPECT(0x66b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01AD
        gbc.setState(0xba09, 0x372, 0xd090, 0xe468, 0x1cf4, 0x5533, 0x0, 0x1);
        gbc.writeMem(0xba09, { 0xa0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x372, gbc.sp());
        EXPECT(0xba0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xba09));
        // A0 01AE
        gbc.setState(0xa7e3, 0xb330, 0xd670, 0xbedf, 0xe5b, 0xac75, 0x0, 0x0);
        gbc.writeMem(0xa7e3, { 0xa0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb330, gbc.sp());
        EXPECT(0xa7e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa7e3));
        // A0 01AF
        gbc.setState(0x83e2, 0x48b2, 0xa20, 0x4417, 0xf05f, 0x57c3, 0x1, 0x1);
        gbc.writeMem(0x83e2, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x48b2, gbc.sp());
        EXPECT(0x83e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x83e2));
        // A0 01B0
        gbc.setState(0x726c, 0x13eb, 0x7b0, 0xbf1c, 0x635b, 0x68f0, 0x0, 0x0);
        gbc.writeMem(0x726c, { 0xa0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x13eb, gbc.sp());
        EXPECT(0x726d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01B1
        gbc.setState(0x7488, 0x4ea, 0xe40, 0x638b, 0x5a23, 0xa97b, 0x1, 0x0);
        gbc.writeMem(0x7488, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4ea, gbc.sp());
        EXPECT(0x7489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01B2
        gbc.setState(0xc456, 0xd7a6, 0x2e80, 0x4b86, 0x4a13, 0x2c51, 0x1, 0x1);
        gbc.writeMem(0xc456, { 0xa0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd7a6, gbc.sp());
        EXPECT(0xc457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc456));
        // A0 01B3
        gbc.setState(0xb2e6, 0xf119, 0xf6c0, 0xc83d, 0x8e1f, 0x5101, 0x0, 0x0);
        gbc.writeMem(0xb2e6, { 0xa0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf119, gbc.sp());
        EXPECT(0xb2e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb2e6));
        // A0 01B4
        gbc.setState(0x5477, 0x323f, 0xbc80, 0xc0c3, 0x613b, 0xa484, 0x0, 0x1);
        gbc.writeMem(0x5477, { 0xa0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x323f, gbc.sp());
        EXPECT(0x5478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01B5
        gbc.setState(0x551d, 0x67e6, 0x30e0, 0x2759, 0x2b34, 0x6328, 0x1, 0x1);
        gbc.writeMem(0x551d, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x67e6, gbc.sp());
        EXPECT(0x551e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01B6
        gbc.setState(0xcb2, 0x618c, 0x9710, 0x18c, 0x77f7, 0x8eab, 0x0, 0x0);
        gbc.writeMem(0xcb2, { 0xa0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x618c, gbc.sp());
        EXPECT(0xcb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01B8
        gbc.setState(0x8abb, 0xd1a7, 0xf560, 0x1253, 0xc37c, 0x3dfa, 0x0, 0x1);
        gbc.writeMem(0x8abb, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd1a7, gbc.sp());
        EXPECT(0x8abc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8abb));
        // A0 01B9
        gbc.setState(0xaef4, 0xf4b9, 0xb5c0, 0x8239, 0xf7cd, 0x8298, 0x1, 0x1);
        gbc.writeMem(0xaef4, { 0xa0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf4b9, gbc.sp());
        EXPECT(0xaef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xaef4));
        // A0 01BA
        gbc.setState(0x4e66, 0x2308, 0x3090, 0x35da, 0xbce, 0xa9a2, 0x0, 0x0);
        gbc.writeMem(0x4e66, { 0xa0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2308, gbc.sp());
        EXPECT(0x4e67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01BB
        gbc.setState(0x9ec5, 0xd2f, 0x1ad0, 0x8129, 0xe2c9, 0x7763, 0x0, 0x1);
        gbc.writeMem(0x9ec5, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd2f, gbc.sp());
        EXPECT(0x9ec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9ec5));
        // A0 01BC
        gbc.setState(0x7e1b, 0x9ca9, 0x40a0, 0xcd6, 0xf48c, 0x4c29, 0x0, 0x0);
        gbc.writeMem(0x7e1b, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9ca9, gbc.sp());
        EXPECT(0x7e1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01BD
        gbc.setState(0xca99, 0xf3fd, 0x3060, 0x24bb, 0x9cd, 0xfad2, 0x0, 0x1);
        gbc.writeMem(0xca99, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf3fd, gbc.sp());
        EXPECT(0xca9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xca99));
        // A0 01BF
        gbc.setState(0xa9a, 0xc97e, 0xff20, 0x1b6e, 0xd174, 0xf5e0, 0x0, 0x1);
        gbc.writeMem(0xa9a, { 0xa0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc97e, gbc.sp());
        EXPECT(0xa9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01C0
        gbc.setState(0x981, 0x89d4, 0x2780, 0x1144, 0xbe4, 0xfe70, 0x0, 0x0);
        gbc.writeMem(0x981, { 0xa0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x89d4, gbc.sp());
        EXPECT(0x982, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01C1
        gbc.setState(0xb89a, 0x1532, 0xe1c0, 0x1c1a, 0xf517, 0xc0f7, 0x1, 0x0);
        gbc.writeMem(0xb89a, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1532, gbc.sp());
        EXPECT(0xb89b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb89a));
        // A0 01C2
        gbc.setState(0x84dc, 0x1410, 0xf570, 0x44dd, 0xece, 0xc5b4, 0x1, 0x0);
        gbc.writeMem(0x84dc, { 0xa0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1410, gbc.sp());
        EXPECT(0x84dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x84dc));
        // A0 01C3
        gbc.setState(0xc6d7, 0x41ee, 0x67d0, 0x2145, 0x7820, 0x996d, 0x0, 0x0);
        gbc.writeMem(0xc6d7, { 0xa0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x41ee, gbc.sp());
        EXPECT(0xc6d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc6d7));
        // A0 01C4
        gbc.setState(0x6969, 0x45f8, 0x90a0, 0xf74f, 0x682f, 0x784f, 0x0, 0x1);
        gbc.writeMem(0x6969, { 0xa0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x45f8, gbc.sp());
        EXPECT(0x696a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01C5
        gbc.setState(0x24c2, 0xa473, 0xd600, 0xfbc7, 0xec7c, 0x491b, 0x1, 0x0);
        gbc.writeMem(0x24c2, { 0xa0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa473, gbc.sp());
        EXPECT(0x24c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01C6
        gbc.setState(0xbed1, 0x7d4e, 0xd080, 0x5f99, 0x907d, 0xfed5, 0x0, 0x0);
        gbc.writeMem(0xbed1, { 0xa0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7d4e, gbc.sp());
        EXPECT(0xbed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xbed1));
        // A0 01C7
        gbc.setState(0x9771, 0x695c, 0x9970, 0x7709, 0xf980, 0xc436, 0x0, 0x0);
        gbc.writeMem(0x9771, { 0xa0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x695c, gbc.sp());
        EXPECT(0x9772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9771));
        // A0 01C8
        gbc.setState(0xb1ab, 0xd95a, 0x3f10, 0x7776, 0xf6c7, 0x2b50, 0x0, 0x1);
        gbc.writeMem(0xb1ab, { 0xa0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd95a, gbc.sp());
        EXPECT(0xb1ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb1ab));
        // A0 01C9
        gbc.setState(0xfc5, 0x4, 0xdc50, 0xe35e, 0x78a6, 0x5af, 0x0, 0x1);
        gbc.writeMem(0xfc5, { 0xa0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4, gbc.sp());
        EXPECT(0xfc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01CA
        gbc.setState(0x10cb, 0xbce8, 0x93f0, 0xecad, 0x83f3, 0x1962, 0x1, 0x1);
        gbc.writeMem(0x10cb, { 0xa0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xbce8, gbc.sp());
        EXPECT(0x10cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01CB
        gbc.setState(0xe741, 0x39d4, 0x2820, 0xba30, 0x1710, 0x6ec8, 0x0, 0x1);
        gbc.writeMem(0xe741, { 0xa0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x39d4, gbc.sp());
        EXPECT(0xe742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe741));
        // A0 01CC
        gbc.setState(0xb662, 0x10e9, 0xf8b0, 0xae46, 0x1b50, 0x26a6, 0x1, 0x0);
        gbc.writeMem(0xb662, { 0xa0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x10e9, gbc.sp());
        EXPECT(0xb663, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb662));
        // A0 01CD
        gbc.setState(0xd9ec, 0x146f, 0xc8b0, 0x1c, 0xb17d, 0x627d, 0x1, 0x1);
        gbc.writeMem(0xd9ec, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x146f, gbc.sp());
        EXPECT(0xd9ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd9ec));
        // A0 01CE
        gbc.setState(0x9c22, 0x57c, 0xf910, 0x98de, 0x8f92, 0x13e8, 0x1, 0x0);
        gbc.writeMem(0x9c22, { 0xa0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x57c, gbc.sp());
        EXPECT(0x9c23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9c22));
        // A0 01CF
        gbc.setState(0x343b, 0xfba5, 0x7740, 0x9b3, 0x4a93, 0x5dcc, 0x0, 0x0);
        gbc.writeMem(0x343b, { 0xa0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xfba5, gbc.sp());
        EXPECT(0x343c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01D0
        gbc.setState(0x697c, 0x2155, 0x6390, 0xdc9a, 0xc2d4, 0xf7b3, 0x0, 0x0);
        gbc.writeMem(0x697c, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2155, gbc.sp());
        EXPECT(0x697d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01D1
        gbc.setState(0xea61, 0x4b87, 0x24e0, 0x1d07, 0xcfdc, 0x2661, 0x0, 0x1);
        gbc.writeMem(0xea61, { 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4b87, gbc.sp());
        EXPECT(0xea62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xea61));
        // A0 01D2
        gbc.setState(0x2643, 0x8013, 0xde60, 0xe28e, 0xdf1, 0x8fd6, 0x1, 0x1);
        gbc.writeMem(0x2643, { 0xa0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8013, gbc.sp());
        EXPECT(0x2644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01D3
        gbc.setState(0xd52, 0xb07, 0x5710, 0x8b93, 0x521a, 0xed7a, 0x1, 0x1);
        gbc.writeMem(0xd52, { 0xa0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb07, gbc.sp());
        EXPECT(0xd53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01D4
        gbc.setState(0x8e10, 0x4296, 0x8420, 0x6f4e, 0xd1dc, 0xfbda, 0x0, 0x1);
        gbc.writeMem(0x8e10, { 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4296, gbc.sp());
        EXPECT(0x8e11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8e10));
        // A0 01D5
        gbc.setState(0x8f26, 0xed75, 0x5480, 0xa19d, 0x59d1, 0x2ffb, 0x0, 0x0);
        gbc.writeMem(0x8f26, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xed75, gbc.sp());
        EXPECT(0x8f27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8f26));
        // A0 01D6
        gbc.setState(0xae30, 0x805d, 0x5f20, 0xff2a, 0xf641, 0xe8c1, 0x1, 0x1);
        gbc.writeMem(0xae30, { 0xa0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x805d, gbc.sp());
        EXPECT(0xae31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xae30));
        // A0 01D7
        gbc.setState(0x91ff, 0xbfcf, 0xa170, 0x8fb9, 0x5d33, 0x99e1, 0x0, 0x0);
        gbc.writeMem(0x91ff, { 0xa0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xbfcf, gbc.sp());
        EXPECT(0x9200, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x91ff));
        // A0 01D8
        gbc.setState(0x98d1, 0x1c0d, 0xfc40, 0x9050, 0x30e9, 0xd029, 0x1, 0x0);
        gbc.writeMem(0x98d1, { 0xa0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1c0d, gbc.sp());
        EXPECT(0x98d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x98d1));
        // A0 01D9
        gbc.setState(0xcfe8, 0x14aa, 0x95f0, 0x61b2, 0xa854, 0x760, 0x1, 0x0);
        gbc.writeMem(0xcfe8, { 0xa0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x14aa, gbc.sp());
        EXPECT(0xcfe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xcfe8));
        // A0 01DA
        gbc.setState(0x813, 0x2f69, 0xfbc0, 0xc694, 0x289, 0xf20e, 0x1, 0x0);
        gbc.writeMem(0x813, { 0xa0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2f69, gbc.sp());
        EXPECT(0x814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01DB
        gbc.setState(0x314c, 0x9bfa, 0x2fe0, 0x2db2, 0x3d18, 0xe19a, 0x1, 0x1);
        gbc.writeMem(0x314c, { 0xa0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9bfa, gbc.sp());
        EXPECT(0x314d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01DC
        gbc.setState(0x63a4, 0x8248, 0x9fb0, 0x1c1c, 0xf641, 0x7fc0, 0x1, 0x1);
        gbc.writeMem(0x63a4, { 0xa0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8248, gbc.sp());
        EXPECT(0x63a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01DD
        gbc.setState(0x611, 0xd4d8, 0xae40, 0x4de2, 0x85ab, 0x3927, 0x0, 0x1);
        gbc.writeMem(0x611, { 0xa0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd4d8, gbc.sp());
        EXPECT(0x612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01DE
        gbc.setState(0x1155, 0xb15e, 0x7b40, 0x6e67, 0x603c, 0x79c6, 0x0, 0x1);
        gbc.writeMem(0x1155, { 0xa0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb15e, gbc.sp());
        EXPECT(0x1156, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01DF
        gbc.setState(0x8655, 0xd4b2, 0x6ee0, 0xa64b, 0x566, 0x36ce, 0x1, 0x0);
        gbc.writeMem(0x8655, { 0xa0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd4b2, gbc.sp());
        EXPECT(0x8656, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8655));
        // A0 01E0
        gbc.setState(0xdafa, 0x2bd, 0xf660, 0xd3c4, 0xbfaa, 0x7024, 0x1, 0x0);
        gbc.writeMem(0xdafa, { 0xa0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2bd, gbc.sp());
        EXPECT(0xdafb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xdafa));
        // A0 01E1
        gbc.setState(0x717b, 0xee86, 0xca80, 0xd724, 0x77c1, 0xe20b, 0x1, 0x0);
        gbc.writeMem(0x717b, { 0xa0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xee86, gbc.sp());
        EXPECT(0x717c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01E2
        gbc.setState(0x78b6, 0xcc21, 0xd280, 0x5e7a, 0xb488, 0x464f, 0x1, 0x0);
        gbc.writeMem(0x78b6, { 0xa0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xcc21, gbc.sp());
        EXPECT(0x78b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01E3
        gbc.setState(0x6503, 0x7f18, 0x8ef0, 0xe00, 0x7338, 0xa83d, 0x0, 0x1);
        gbc.writeMem(0x6503, { 0xa0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7f18, gbc.sp());
        EXPECT(0x6504, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01E4
        gbc.setState(0x65ac, 0x12f6, 0x1510, 0x464a, 0x8a58, 0x2184, 0x0, 0x0);
        gbc.writeMem(0x65ac, { 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x12f6, gbc.sp());
        EXPECT(0x65ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01E5
        gbc.setState(0x1d78, 0xca15, 0x55a0, 0x9e63, 0x424a, 0xdd27, 0x1, 0x1);
        gbc.writeMem(0x1d78, { 0xa0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xca15, gbc.sp());
        EXPECT(0x1d79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01E6
        gbc.setState(0xdfb3, 0xecd8, 0xdd30, 0x81aa, 0x9352, 0x702c, 0x1, 0x1);
        gbc.writeMem(0xdfb3, { 0xa0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xecd8, gbc.sp());
        EXPECT(0xdfb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xdfb3));
        // A0 01E7
        gbc.setState(0xc57a, 0x827b, 0xdca0, 0xbfbe, 0x10d1, 0xd61f, 0x0, 0x0);
        gbc.writeMem(0xc57a, { 0xa0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x827b, gbc.sp());
        EXPECT(0xc57b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc57a));
        // A0 01E8
        gbc.setState(0xd5fa, 0xb44d, 0x3e10, 0x893e, 0xfac, 0x88d5, 0x1, 0x1);
        gbc.writeMem(0xd5fa, { 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb44d, gbc.sp());
        EXPECT(0xd5fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd5fa));
        // A0 01E9
        gbc.setState(0xe633, 0x7a74, 0x3160, 0x2535, 0x3bbe, 0x5a1a, 0x0, 0x0);
        gbc.writeMem(0xe633, { 0xa0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7a74, gbc.sp());
        EXPECT(0xe634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe633));
        // A0 01EA
        gbc.setState(0x7abe, 0x43cc, 0x8b60, 0xf4c4, 0x9751, 0xb429, 0x1, 0x0);
        gbc.writeMem(0x7abe, { 0xa0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x43cc, gbc.sp());
        EXPECT(0x7abf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01EB
        gbc.setState(0x9853, 0xda04, 0x9450, 0x73f2, 0xf12, 0x4d85, 0x1, 0x1);
        gbc.writeMem(0x9853, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xda04, gbc.sp());
        EXPECT(0x9854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9853));
        // A0 01EC
        gbc.setState(0x2174, 0xa975, 0x7d00, 0xd209, 0xba60, 0xc66a, 0x0, 0x1);
        gbc.writeMem(0x2174, { 0xa0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa975, gbc.sp());
        EXPECT(0x2175, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01EE
        gbc.setState(0x268d, 0x834b, 0x9c90, 0xb947, 0x8cf2, 0x909a, 0x1, 0x0);
        gbc.writeMem(0x268d, { 0xa0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x834b, gbc.sp());
        EXPECT(0x268e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01EF
        gbc.setState(0x4e0a, 0xc840, 0x1340, 0x8aef, 0x6acf, 0x2b71, 0x0, 0x0);
        gbc.writeMem(0x4e0a, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc840, gbc.sp());
        EXPECT(0x4e0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01F0
        gbc.setState(0xed6d, 0x3b4f, 0xcda0, 0xe710, 0x465d, 0x7ec1, 0x1, 0x0);
        gbc.writeMem(0xed6d, { 0xa0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3b4f, gbc.sp());
        EXPECT(0xed6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xed6d));
        // A0 01F1
        gbc.setState(0x534f, 0x9690, 0xebe0, 0xdbc8, 0xc1e8, 0x7a84, 0x0, 0x0);
        gbc.writeMem(0x534f, { 0xa0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9690, gbc.sp());
        EXPECT(0x5350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01F2
        gbc.setState(0x7082, 0x9095, 0x9760, 0x34fd, 0xda88, 0xd479, 0x1, 0x1);
        gbc.writeMem(0x7082, { 0xa0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9095, gbc.sp());
        EXPECT(0x7083, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01F4
        gbc.setState(0x5779, 0x17bb, 0x78c0, 0xca85, 0xa626, 0x4d2b, 0x0, 0x0);
        gbc.writeMem(0x5779, { 0xa0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x17bb, gbc.sp());
        EXPECT(0x577a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01F6
        gbc.setState(0x17ae, 0x4be6, 0x6420, 0xfbca, 0x55b1, 0x7a24, 0x0, 0x0);
        gbc.writeMem(0x17ae, { 0xa0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4be6, gbc.sp());
        EXPECT(0x17af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01F7
        gbc.setState(0x4f5a, 0xe514, 0xf7d0, 0x7fe2, 0x2c36, 0xc34, 0x1, 0x0);
        gbc.writeMem(0x4f5a, { 0xa0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe514, gbc.sp());
        EXPECT(0x4f5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01F8
        gbc.setState(0x6342, 0xc79a, 0xd8e0, 0x195f, 0x4da9, 0xa779, 0x1, 0x0);
        gbc.writeMem(0x6342, { 0xa0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc79a, gbc.sp());
        EXPECT(0x6343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01F9
        gbc.setState(0xac31, 0xd04c, 0xe1c0, 0x7831, 0xfcc6, 0xe46a, 0x0, 0x0);
        gbc.writeMem(0xac31, { 0xa0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd04c, gbc.sp());
        EXPECT(0xac32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xac31));
        // A0 01FA
        gbc.setState(0x931f, 0xab53, 0xc040, 0x523a, 0x702a, 0xfbcd, 0x0, 0x1);
        gbc.writeMem(0x931f, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xab53, gbc.sp());
        EXPECT(0x9320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x931f));
        // A0 01FB
        gbc.setState(0xa6fc, 0xcb95, 0x5510, 0xc258, 0x9d5e, 0x8a62, 0x1, 0x1);
        gbc.writeMem(0xa6fc, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xcb95, gbc.sp());
        EXPECT(0xa6fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa6fc));
        // A0 01FC
        gbc.setState(0x1e19, 0x2cd, 0x4660, 0xcf8a, 0xbb47, 0x62ee, 0x0, 0x0);
        gbc.writeMem(0x1e19, { 0xa0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2cd, gbc.sp());
        EXPECT(0x1e1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 01FD
        gbc.setState(0x900d, 0x7b52, 0xd560, 0x1947, 0xe86, 0x4e3b, 0x0, 0x1);
        gbc.writeMem(0x900d, { 0xa0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7b52, gbc.sp());
        EXPECT(0x900e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x900d));
        // A0 01FE
        gbc.setState(0xb46a, 0xfdd4, 0x52a0, 0xe348, 0x2fbe, 0x1c5f, 0x1, 0x1);
        gbc.writeMem(0xb46a, { 0xa0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xfdd4, gbc.sp());
        EXPECT(0xb46b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb46a));
        // A0 0200
        gbc.setState(0x76e1, 0xc982, 0x3ae0, 0xb07d, 0xf5b6, 0xc5ac, 0x0, 0x1);
        gbc.writeMem(0x76e1, { 0xa0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc982, gbc.sp());
        EXPECT(0x76e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0201
        gbc.setState(0x9cdb, 0xb797, 0x7860, 0xbeea, 0xa239, 0x5937, 0x1, 0x1);
        gbc.writeMem(0x9cdb, { 0xa0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb797, gbc.sp());
        EXPECT(0x9cdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9cdb));
        // A0 0202
        gbc.setState(0x4d58, 0xee8b, 0xa8d0, 0x8910, 0xa7c0, 0x6f5c, 0x1, 0x1);
        gbc.writeMem(0x4d58, { 0xa0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xee8b, gbc.sp());
        EXPECT(0x4d59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0203
        gbc.setState(0x990, 0x361e, 0x1ff0, 0x3827, 0x6469, 0xe120, 0x1, 0x0);
        gbc.writeMem(0x990, { 0xa0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x361e, gbc.sp());
        EXPECT(0x991, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0204
        gbc.setState(0xb53e, 0x6538, 0xc180, 0x3ea3, 0x23bc, 0xa03c, 0x1, 0x0);
        gbc.writeMem(0xb53e, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6538, gbc.sp());
        EXPECT(0xb53f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb53e));
        // A0 0205
        gbc.setState(0x5392, 0xbf98, 0xdcf0, 0x2d6d, 0x5593, 0x843f, 0x1, 0x1);
        gbc.writeMem(0x5392, { 0xa0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbf98, gbc.sp());
        EXPECT(0x5393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0206
        gbc.setState(0x9fc3, 0xffe9, 0xed70, 0x53c3, 0xd0da, 0x26c6, 0x0, 0x1);
        gbc.writeMem(0x9fc3, { 0xa0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xffe9, gbc.sp());
        EXPECT(0x9fc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9fc3));
        // A0 0207
        gbc.setState(0x109a, 0xe6b4, 0xed10, 0xc3d5, 0x6a6e, 0xbfb0, 0x0, 0x1);
        gbc.writeMem(0x109a, { 0xa0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe6b4, gbc.sp());
        EXPECT(0x109b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0208
        gbc.setState(0x3c8b, 0x4bea, 0x7520, 0xb75e, 0xc7f9, 0x9f00, 0x0, 0x1);
        gbc.writeMem(0x3c8b, { 0xa0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4bea, gbc.sp());
        EXPECT(0x3c8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0209
        gbc.setState(0x720a, 0x2b0, 0x32e0, 0xa446, 0xbe73, 0x9e4a, 0x0, 0x0);
        gbc.writeMem(0x720a, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2b0, gbc.sp());
        EXPECT(0x720b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 020A
        gbc.setState(0x4c82, 0x21cd, 0x4eb0, 0xe2f0, 0x32e4, 0x38e6, 0x1, 0x0);
        gbc.writeMem(0x4c82, { 0xa0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x21cd, gbc.sp());
        EXPECT(0x4c83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 020B
        gbc.setState(0x9ec3, 0x76b8, 0x5fd0, 0xeb04, 0xbc31, 0x69dc, 0x0, 0x0);
        gbc.writeMem(0x9ec3, { 0xa0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x76b8, gbc.sp());
        EXPECT(0x9ec4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9ec3));
        // A0 020C
        gbc.setState(0x6867, 0x1cae, 0xd770, 0xef2d, 0xa868, 0x8ea4, 0x1, 0x0);
        gbc.writeMem(0x6867, { 0xa0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1cae, gbc.sp());
        EXPECT(0x6868, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 020D
        gbc.setState(0x1d2c, 0xc67d, 0x66c0, 0x5580, 0x413, 0xef46, 0x1, 0x1);
        gbc.writeMem(0x1d2c, { 0xa0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc67d, gbc.sp());
        EXPECT(0x1d2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 020E
        gbc.setState(0xea4c, 0xc6fc, 0x9cb0, 0xa645, 0xbbd3, 0x715a, 0x0, 0x0);
        gbc.writeMem(0xea4c, { 0xa0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc6fc, gbc.sp());
        EXPECT(0xea4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xea4c));
        // A0 0210
        gbc.setState(0x7750, 0x6913, 0x60b0, 0x5a21, 0xc9f4, 0xe9b6, 0x1, 0x0);
        gbc.writeMem(0x7750, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6913, gbc.sp());
        EXPECT(0x7751, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0211
        gbc.setState(0x50ac, 0xa5e0, 0xf5c0, 0xeadc, 0x2ec2, 0xb224, 0x0, 0x1);
        gbc.writeMem(0x50ac, { 0xa0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa5e0, gbc.sp());
        EXPECT(0x50ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0212
        gbc.setState(0x8f2e, 0xeb97, 0xabc0, 0x8a4, 0xadee, 0x2b96, 0x1, 0x0);
        gbc.writeMem(0x8f2e, { 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xeb97, gbc.sp());
        EXPECT(0x8f2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8f2e));
        // A0 0213
        gbc.setState(0x49bd, 0x131b, 0xcc0, 0xb1ef, 0xc84f, 0xa5bc, 0x1, 0x0);
        gbc.writeMem(0x49bd, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x131b, gbc.sp());
        EXPECT(0x49be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0214
        gbc.setState(0xf44, 0x84f6, 0x8920, 0x3089, 0xfe0f, 0xa418, 0x1, 0x1);
        gbc.writeMem(0xf44, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x84f6, gbc.sp());
        EXPECT(0xf45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0215
        gbc.setState(0xd7f9, 0x1cb8, 0x7600, 0xe315, 0x1fa8, 0x8c54, 0x0, 0x0);
        gbc.writeMem(0xd7f9, { 0xa0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1cb8, gbc.sp());
        EXPECT(0xd7fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd7f9));
        // A0 0216
        gbc.setState(0xed90, 0x292b, 0x2270, 0x7dff, 0x8857, 0x8338, 0x1, 0x0);
        gbc.writeMem(0xed90, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x292b, gbc.sp());
        EXPECT(0xed91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xed90));
        // A0 0217
        gbc.setState(0xc42e, 0xc8be, 0x7fa0, 0xfd5d, 0xd3a1, 0x8683, 0x1, 0x1);
        gbc.writeMem(0xc42e, { 0xa0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc8be, gbc.sp());
        EXPECT(0xc42f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc42e));
        // A0 0218
        gbc.setState(0x6157, 0xcb56, 0x7190, 0xa1cb, 0x2e35, 0x2a6b, 0x1, 0x1);
        gbc.writeMem(0x6157, { 0xa0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xcb56, gbc.sp());
        EXPECT(0x6158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0219
        gbc.setState(0x3532, 0xee8c, 0x2f20, 0x3316, 0x801f, 0x8cef, 0x1, 0x1);
        gbc.writeMem(0x3532, { 0xa0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xee8c, gbc.sp());
        EXPECT(0x3533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 021A
        gbc.setState(0x6d14, 0x7152, 0x4c60, 0xdfc9, 0xc912, 0x80c3, 0x0, 0x0);
        gbc.writeMem(0x6d14, { 0xa0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7152, gbc.sp());
        EXPECT(0x6d15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 021B
        gbc.setState(0x98af, 0x3a5, 0x3700, 0x5863, 0xc8ee, 0xb68b, 0x1, 0x1);
        gbc.writeMem(0x98af, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3a5, gbc.sp());
        EXPECT(0x98b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x98af));
        // A0 021C
        gbc.setState(0x69c1, 0x4c49, 0x15c0, 0x14f9, 0x948f, 0xa908, 0x0, 0x0);
        gbc.writeMem(0x69c1, { 0xa0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4c49, gbc.sp());
        EXPECT(0x69c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 021D
        gbc.setState(0xb52a, 0x91b9, 0xd900, 0xbb20, 0x7fb9, 0x47ec, 0x1, 0x1);
        gbc.writeMem(0xb52a, { 0xa0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x91b9, gbc.sp());
        EXPECT(0xb52b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb52a));
        // A0 021E
        gbc.setState(0x6b3c, 0xd388, 0x36c0, 0xd64f, 0x91a6, 0x3f35, 0x0, 0x0);
        gbc.writeMem(0x6b3c, { 0xa0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd388, gbc.sp());
        EXPECT(0x6b3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 021F
        gbc.setState(0x98af, 0x5d5c, 0xd590, 0x6fef, 0x7915, 0xedf9, 0x0, 0x0);
        gbc.writeMem(0x98af, { 0xa0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5d5c, gbc.sp());
        EXPECT(0x98b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x98af));
        // A0 0220
        gbc.setState(0xe5eb, 0xe471, 0xcb0, 0xc876, 0xb443, 0x2795, 0x0, 0x1);
        gbc.writeMem(0xe5eb, { 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe471, gbc.sp());
        EXPECT(0xe5ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe5eb));
        // A0 0221
        gbc.setState(0x3f09, 0xe582, 0x970, 0x8920, 0xc9b6, 0x79d6, 0x1, 0x0);
        gbc.writeMem(0x3f09, { 0xa0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe582, gbc.sp());
        EXPECT(0x3f0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0223
        gbc.setState(0x6dbd, 0x1a95, 0x4ef0, 0xc968, 0x7b4, 0x9934, 0x1, 0x1);
        gbc.writeMem(0x6dbd, { 0xa0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1a95, gbc.sp());
        EXPECT(0x6dbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0224
        gbc.setState(0x8885, 0x24ac, 0x70e0, 0x90b3, 0x1cfe, 0xac9a, 0x0, 0x0);
        gbc.writeMem(0x8885, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x24ac, gbc.sp());
        EXPECT(0x8886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8885));
        // A0 0225
        gbc.setState(0x9986, 0x32ba, 0xd340, 0xadfa, 0x9676, 0x14e0, 0x0, 0x1);
        gbc.writeMem(0x9986, { 0xa0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x32ba, gbc.sp());
        EXPECT(0x9987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9986));
        // A0 0226
        gbc.setState(0x993d, 0x8e44, 0xccf0, 0x2bd5, 0x841f, 0xee59, 0x0, 0x1);
        gbc.writeMem(0x993d, { 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8e44, gbc.sp());
        EXPECT(0x993e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x993d));
        // A0 0227
        gbc.setState(0x535, 0x6a2, 0x4e60, 0x2fbf, 0x3c6d, 0x3fad, 0x1, 0x0);
        gbc.writeMem(0x535, { 0xa0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6a2, gbc.sp());
        EXPECT(0x536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0228
        gbc.setState(0x17ba, 0xc85a, 0x720, 0x5266, 0xa9df, 0x74e2, 0x1, 0x0);
        gbc.writeMem(0x17ba, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc85a, gbc.sp());
        EXPECT(0x17bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0229
        gbc.setState(0x5e9a, 0x372e, 0x3420, 0x52e6, 0x3dd0, 0x21c3, 0x0, 0x1);
        gbc.writeMem(0x5e9a, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x372e, gbc.sp());
        EXPECT(0x5e9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 022A
        gbc.setState(0x21ce, 0x36c9, 0xd6d0, 0x33df, 0x422a, 0x4145, 0x1, 0x0);
        gbc.writeMem(0x21ce, { 0xa0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x36c9, gbc.sp());
        EXPECT(0x21cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 022B
        gbc.setState(0x69e5, 0x5b13, 0xc6e0, 0x3d9b, 0x687e, 0xd712, 0x0, 0x0);
        gbc.writeMem(0x69e5, { 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5b13, gbc.sp());
        EXPECT(0x69e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 022C
        gbc.setState(0xe198, 0x429c, 0xe9c0, 0xfaa5, 0xbcd, 0x2858, 0x0, 0x1);
        gbc.writeMem(0xe198, { 0xa0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x429c, gbc.sp());
        EXPECT(0xe199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe198));
        // A0 022D
        gbc.setState(0x9386, 0x68f4, 0x6f60, 0x7bf7, 0xdeb, 0x3e5f, 0x0, 0x1);
        gbc.writeMem(0x9386, { 0xa0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x68f4, gbc.sp());
        EXPECT(0x9387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9386));
        // A0 022F
        gbc.setState(0x2d08, 0x3ca3, 0x2680, 0xd1b6, 0x1386, 0xd243, 0x1, 0x1);
        gbc.writeMem(0x2d08, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3ca3, gbc.sp());
        EXPECT(0x2d09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0230
        gbc.setState(0x3e47, 0x933f, 0xdc20, 0x2caf, 0x5e28, 0xbac8, 0x0, 0x0);
        gbc.writeMem(0x3e47, { 0xa0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x933f, gbc.sp());
        EXPECT(0x3e48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0231
        gbc.setState(0x2dd, 0x8aba, 0xf450, 0x6022, 0xcd50, 0x6cb6, 0x0, 0x1);
        gbc.writeMem(0x2dd, { 0xa0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8aba, gbc.sp());
        EXPECT(0x2de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0232
        gbc.setState(0xc90c, 0x16e, 0xe970, 0xd030, 0x78b8, 0x8aad, 0x1, 0x0);
        gbc.writeMem(0xc90c, { 0xa0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x16e, gbc.sp());
        EXPECT(0xc90d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc90c));
        // A0 0233
        gbc.setState(0x94c5, 0x535f, 0x2f10, 0x57ad, 0x145b, 0xdbd, 0x1, 0x1);
        gbc.writeMem(0x94c5, { 0xa0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x535f, gbc.sp());
        EXPECT(0x94c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x94c5));
        // A0 0234
        gbc.setState(0xfa, 0x9b27, 0x1590, 0x8cd7, 0x1e3a, 0x5d86, 0x1, 0x0);
        gbc.writeMem(0xfa, { 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9b27, gbc.sp());
        EXPECT(0xfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0235
        gbc.setState(0xd192, 0xa46d, 0x8a90, 0xd13d, 0x82dd, 0xe0ef, 0x0, 0x1);
        gbc.writeMem(0xd192, { 0xa0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa46d, gbc.sp());
        EXPECT(0xd193, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd192));
        // A0 0236
        gbc.setState(0x3841, 0xca42, 0x1df0, 0x812e, 0x44ff, 0x298d, 0x0, 0x1);
        gbc.writeMem(0x3841, { 0xa0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xca42, gbc.sp());
        EXPECT(0x3842, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0237
        gbc.setState(0x933c, 0x8269, 0x2100, 0xde0a, 0x4fe8, 0x51ac, 0x1, 0x1);
        gbc.writeMem(0x933c, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8269, gbc.sp());
        EXPECT(0x933d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x933c));
        // A0 0238
        gbc.setState(0x28d7, 0x5593, 0xd400, 0x5778, 0x6a88, 0x6278, 0x0, 0x0);
        gbc.writeMem(0x28d7, { 0xa0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5593, gbc.sp());
        EXPECT(0x28d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0239
        gbc.setState(0xc7af, 0xe048, 0x18b0, 0xd929, 0xf127, 0xee79, 0x0, 0x1);
        gbc.writeMem(0xc7af, { 0xa0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe048, gbc.sp());
        EXPECT(0xc7b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc7af));
        // A0 023A
        gbc.setState(0x31d7, 0x164f, 0x2c50, 0xdf92, 0xed8a, 0xc2b, 0x1, 0x0);
        gbc.writeMem(0x31d7, { 0xa0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x164f, gbc.sp());
        EXPECT(0x31d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 023B
        gbc.setState(0xbbe4, 0x32cc, 0x28d0, 0xa8d1, 0x76cd, 0x9f86, 0x0, 0x1);
        gbc.writeMem(0xbbe4, { 0xa0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x32cc, gbc.sp());
        EXPECT(0xbbe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xbbe4));
        // A0 023C
        gbc.setState(0xcd8, 0xc26c, 0x8d20, 0x1c11, 0xf321, 0x7525, 0x0, 0x1);
        gbc.writeMem(0xcd8, { 0xa0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc26c, gbc.sp());
        EXPECT(0xcd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 023D
        gbc.setState(0x8f38, 0x6c88, 0xaf20, 0x72e5, 0x780e, 0x4e35, 0x0, 0x1);
        gbc.writeMem(0x8f38, { 0xa0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6c88, gbc.sp());
        EXPECT(0x8f39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8f38));
        // A0 023E
        gbc.setState(0x18b2, 0x5df9, 0x9fa0, 0x1d07, 0x99eb, 0xe864, 0x1, 0x0);
        gbc.writeMem(0x18b2, { 0xa0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5df9, gbc.sp());
        EXPECT(0x18b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 023F
        gbc.setState(0x9553, 0x96f7, 0x59a0, 0xa61a, 0xd237, 0xfde, 0x0, 0x1);
        gbc.writeMem(0x9553, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x96f7, gbc.sp());
        EXPECT(0x9554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9553));
        // A0 0240
        gbc.setState(0x3393, 0x7bff, 0x2c80, 0x11aa, 0x28ae, 0x3db6, 0x0, 0x1);
        gbc.writeMem(0x3393, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7bff, gbc.sp());
        EXPECT(0x3394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0241
        gbc.setState(0xa4c4, 0x9f56, 0x8fe0, 0x55e0, 0x139f, 0x27b6, 0x1, 0x0);
        gbc.writeMem(0xa4c4, { 0xa0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9f56, gbc.sp());
        EXPECT(0xa4c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa4c4));
        // A0 0242
        gbc.setState(0x4823, 0x798b, 0x6410, 0xfff3, 0xf6e2, 0x568c, 0x1, 0x0);
        gbc.writeMem(0x4823, { 0xa0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x798b, gbc.sp());
        EXPECT(0x4824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0243
        gbc.setState(0x2a64, 0x9fec, 0xf410, 0xc870, 0xf522, 0x5c84, 0x1, 0x1);
        gbc.writeMem(0x2a64, { 0xa0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9fec, gbc.sp());
        EXPECT(0x2a65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0244
        gbc.setState(0x994e, 0x14f8, 0x28f0, 0x7312, 0xef7, 0x3f25, 0x1, 0x1);
        gbc.writeMem(0x994e, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x14f8, gbc.sp());
        EXPECT(0x994f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x994e));
        // A0 0245
        gbc.setState(0x1bd6, 0x5040, 0x3e50, 0x53c0, 0x8cfc, 0x1260, 0x0, 0x0);
        gbc.writeMem(0x1bd6, { 0xa0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5040, gbc.sp());
        EXPECT(0x1bd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0247
        gbc.setState(0xb6b5, 0xdae2, 0xcbf0, 0xcae1, 0x7e1c, 0xd420, 0x1, 0x1);
        gbc.writeMem(0xb6b5, { 0xa0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xdae2, gbc.sp());
        EXPECT(0xb6b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb6b5));
        // A0 0248
        gbc.setState(0xcc24, 0xbaa9, 0xce00, 0x99ad, 0x7089, 0xb630, 0x1, 0x1);
        gbc.writeMem(0xcc24, { 0xa0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbaa9, gbc.sp());
        EXPECT(0xcc25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xcc24));
        // A0 0249
        gbc.setState(0xe8a7, 0x1f1b, 0xc660, 0xd673, 0x670a, 0x93f0, 0x1, 0x0);
        gbc.writeMem(0xe8a7, { 0xa0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1f1b, gbc.sp());
        EXPECT(0xe8a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe8a7));
        // A0 024A
        gbc.setState(0x1e87, 0x7f1, 0x6c20, 0x8c55, 0xe992, 0xe304, 0x1, 0x1);
        gbc.writeMem(0x1e87, { 0xa0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7f1, gbc.sp());
        EXPECT(0x1e88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 024B
        gbc.setState(0x4982, 0x1c45, 0x210, 0xdad6, 0x511, 0x84d7, 0x0, 0x0);
        gbc.writeMem(0x4982, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1c45, gbc.sp());
        EXPECT(0x4983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 024C
        gbc.setState(0xba27, 0x81e0, 0x8e60, 0xa52c, 0x6cde, 0xacda, 0x1, 0x1);
        gbc.writeMem(0xba27, { 0xa0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x81e0, gbc.sp());
        EXPECT(0xba28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xba27));
        // A0 024D
        gbc.setState(0x6893, 0x6c86, 0x5c00, 0xb750, 0x3798, 0x6ee9, 0x0, 0x1);
        gbc.writeMem(0x6893, { 0xa0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6c86, gbc.sp());
        EXPECT(0x6894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 024E
        gbc.setState(0x4be5, 0x5890, 0x2a60, 0x7470, 0x4cf4, 0x5064, 0x0, 0x1);
        gbc.writeMem(0x4be5, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5890, gbc.sp());
        EXPECT(0x4be6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 024F
        gbc.setState(0xde5f, 0x2385, 0xb420, 0xf4eb, 0xccda, 0xe6a8, 0x1, 0x1);
        gbc.writeMem(0xde5f, { 0xa0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2385, gbc.sp());
        EXPECT(0xde60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xde5f));
        // A0 0250
        gbc.setState(0x4b20, 0x598e, 0xe7d0, 0xfa9e, 0xcba4, 0xe517, 0x1, 0x1);
        gbc.writeMem(0x4b20, { 0xa0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x598e, gbc.sp());
        EXPECT(0x4b21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0252
        gbc.setState(0x3252, 0xf99b, 0x1720, 0x5692, 0xcefa, 0x82c6, 0x1, 0x1);
        gbc.writeMem(0x3252, { 0xa0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf99b, gbc.sp());
        EXPECT(0x3253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0253
        gbc.setState(0x4559, 0x55fd, 0x1350, 0xb333, 0xf2f1, 0x5b17, 0x0, 0x1);
        gbc.writeMem(0x4559, { 0xa0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x55fd, gbc.sp());
        EXPECT(0x455a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0254
        gbc.setState(0x137e, 0x248e, 0x75c0, 0x7e4, 0x4f03, 0x589e, 0x1, 0x0);
        gbc.writeMem(0x137e, { 0xa0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x248e, gbc.sp());
        EXPECT(0x137f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0255
        gbc.setState(0x6257, 0xb293, 0xb8f0, 0xa7c8, 0x1113, 0x5d79, 0x0, 0x0);
        gbc.writeMem(0x6257, { 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb293, gbc.sp());
        EXPECT(0x6258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0256
        gbc.setState(0xa931, 0xe0ca, 0x7000, 0xdd82, 0x30b8, 0x5de3, 0x0, 0x0);
        gbc.writeMem(0xa931, { 0xa0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe0ca, gbc.sp());
        EXPECT(0xa932, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa931));
        // A0 0257
        gbc.setState(0x603d, 0x1822, 0x86d0, 0xae21, 0x11f3, 0x3ff2, 0x0, 0x0);
        gbc.writeMem(0x603d, { 0xa0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1822, gbc.sp());
        EXPECT(0x603e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0258
        gbc.setState(0x3a11, 0xc28b, 0x45a0, 0x57b5, 0xd69f, 0x4ee9, 0x0, 0x0);
        gbc.writeMem(0x3a11, { 0xa0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc28b, gbc.sp());
        EXPECT(0x3a12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0259
        gbc.setState(0xcead, 0x684d, 0x68b0, 0x571c, 0xd54a, 0x775f, 0x1, 0x0);
        gbc.writeMem(0xcead, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x684d, gbc.sp());
        EXPECT(0xceae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xcead));
        // A0 025A
        gbc.setState(0x8463, 0x3524, 0x9fe0, 0x2dd9, 0x3937, 0xd126, 0x1, 0x0);
        gbc.writeMem(0x8463, { 0xa0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3524, gbc.sp());
        EXPECT(0x8464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8463));
        // A0 025B
        gbc.setState(0xb2c8, 0xb4f3, 0x4cf0, 0x7936, 0x5a43, 0x94b2, 0x0, 0x0);
        gbc.writeMem(0xb2c8, { 0xa0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb4f3, gbc.sp());
        EXPECT(0xb2c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb2c8));
        // A0 025C
        gbc.setState(0x2ba3, 0xdfec, 0x7400, 0xb413, 0x9eb4, 0x99b4, 0x1, 0x1);
        gbc.writeMem(0x2ba3, { 0xa0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xdfec, gbc.sp());
        EXPECT(0x2ba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 025D
        gbc.setState(0xe71c, 0x908f, 0x5ac0, 0xf701, 0xfe8, 0xe7f0, 0x1, 0x1);
        gbc.writeMem(0xe71c, { 0xa0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x908f, gbc.sp());
        EXPECT(0xe71d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe71c));
        // A0 025E
        gbc.setState(0xa3e4, 0x423f, 0x1580, 0x1396, 0x50f7, 0x4da9, 0x1, 0x1);
        gbc.writeMem(0xa3e4, { 0xa0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x423f, gbc.sp());
        EXPECT(0xa3e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa3e4));
        // A0 025F
        gbc.setState(0x6fd9, 0x642f, 0xa690, 0x21c5, 0xd14c, 0xe0e5, 0x1, 0x1);
        gbc.writeMem(0x6fd9, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x642f, gbc.sp());
        EXPECT(0x6fda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0260
        gbc.setState(0x9764, 0x4ff8, 0xcac0, 0xd16f, 0xcb6c, 0x9e87, 0x0, 0x0);
        gbc.writeMem(0x9764, { 0xa0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4ff8, gbc.sp());
        EXPECT(0x9765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9764));
        // A0 0261
        gbc.setState(0xa3b2, 0xaf2b, 0x90b0, 0xa9e7, 0xbe24, 0xffde, 0x0, 0x0);
        gbc.writeMem(0xa3b2, { 0xa0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xaf2b, gbc.sp());
        EXPECT(0xa3b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa3b2));
        // A0 0262
        gbc.setState(0x37d2, 0xda4f, 0x2000, 0x8bd8, 0x7876, 0xd801, 0x1, 0x1);
        gbc.writeMem(0x37d2, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xda4f, gbc.sp());
        EXPECT(0x37d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0263
        gbc.setState(0x8c2c, 0x28fa, 0xe490, 0xd59a, 0xbd9b, 0x3c4d, 0x0, 0x1);
        gbc.writeMem(0x8c2c, { 0xa0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x28fa, gbc.sp());
        EXPECT(0x8c2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8c2c));
        // A0 0265
        gbc.setState(0x8350, 0xbcfb, 0xa9d0, 0xa24e, 0x2562, 0x409f, 0x0, 0x0);
        gbc.writeMem(0x8350, { 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xbcfb, gbc.sp());
        EXPECT(0x8351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8350));
        // A0 0266
        gbc.setState(0x5471, 0x6343, 0x6360, 0x9a0d, 0x6d7a, 0x2d9e, 0x1, 0x1);
        gbc.writeMem(0x5471, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6343, gbc.sp());
        EXPECT(0x5472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0267
        gbc.setState(0x369d, 0xa1f6, 0x4f50, 0x3b92, 0xf408, 0xe3b9, 0x1, 0x1);
        gbc.writeMem(0x369d, { 0xa0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa1f6, gbc.sp());
        EXPECT(0x369e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0268
        gbc.setState(0x95a4, 0x223a, 0x7870, 0x6b9b, 0x3c51, 0xc2ec, 0x1, 0x0);
        gbc.writeMem(0x95a4, { 0xa0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x223a, gbc.sp());
        EXPECT(0x95a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x95a4));
        // A0 0269
        gbc.setState(0x6a21, 0x8108, 0x3220, 0x8d42, 0x17c1, 0x2a58, 0x1, 0x1);
        gbc.writeMem(0x6a21, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8108, gbc.sp());
        EXPECT(0x6a22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 026B
        gbc.setState(0xcda4, 0xc806, 0x87c0, 0x60d6, 0xd5fc, 0xa9c1, 0x1, 0x1);
        gbc.writeMem(0xcda4, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc806, gbc.sp());
        EXPECT(0xcda5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xcda4));
        // A0 026C
        gbc.setState(0x3a60, 0xee0c, 0xdfe0, 0x6868, 0x6d80, 0x4433, 0x1, 0x0);
        gbc.writeMem(0x3a60, { 0xa0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xee0c, gbc.sp());
        EXPECT(0x3a61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 026D
        gbc.setState(0x5606, 0x21bb, 0x9790, 0xef77, 0xca2e, 0xae6a, 0x1, 0x0);
        gbc.writeMem(0x5606, { 0xa0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x21bb, gbc.sp());
        EXPECT(0x5607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 026E
        gbc.setState(0x2e35, 0x32d9, 0x3630, 0x7f50, 0x81a3, 0xd027, 0x0, 0x0);
        gbc.writeMem(0x2e35, { 0xa0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x32d9, gbc.sp());
        EXPECT(0x2e36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 026F
        gbc.setState(0x18d5, 0x4c83, 0x2cc0, 0x4bcf, 0xba65, 0xbc1f, 0x0, 0x0);
        gbc.writeMem(0x18d5, { 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4c83, gbc.sp());
        EXPECT(0x18d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0270
        gbc.setState(0x9027, 0x9aff, 0xe610, 0xf665, 0x9e4d, 0x48ac, 0x0, 0x0);
        gbc.writeMem(0x9027, { 0xa0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9aff, gbc.sp());
        EXPECT(0x9028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9027));
        // A0 0271
        gbc.setState(0x7e56, 0xb0af, 0x8550, 0x4fcc, 0xdaa5, 0xa76f, 0x1, 0x0);
        gbc.writeMem(0x7e56, { 0xa0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb0af, gbc.sp());
        EXPECT(0x7e57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0272
        gbc.setState(0xca17, 0xe172, 0x9990, 0x888e, 0x95b, 0x7bb2, 0x1, 0x1);
        gbc.writeMem(0xca17, { 0xa0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe172, gbc.sp());
        EXPECT(0xca18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xca17));
        // A0 0273
        gbc.setState(0x74e0, 0x2726, 0x4010, 0xe341, 0x1c9c, 0xd75b, 0x0, 0x1);
        gbc.writeMem(0x74e0, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2726, gbc.sp());
        EXPECT(0x74e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0274
        gbc.setState(0xba57, 0xf5e2, 0xd3b0, 0x8fb3, 0xead3, 0x8220, 0x0, 0x1);
        gbc.writeMem(0xba57, { 0xa0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf5e2, gbc.sp());
        EXPECT(0xba58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xba57));
        // A0 0275
        gbc.setState(0xe908, 0x9234, 0xc3d0, 0xb8e9, 0x8826, 0xfd98, 0x1, 0x1);
        gbc.writeMem(0xe908, { 0xa0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9234, gbc.sp());
        EXPECT(0xe909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe908));
        // A0 0276
        gbc.setState(0x4012, 0xcb4b, 0x6040, 0x58c2, 0x89cc, 0x739, 0x0, 0x0);
        gbc.writeMem(0x4012, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xcb4b, gbc.sp());
        EXPECT(0x4013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0277
        gbc.setState(0x6cfe, 0x75f3, 0x39b0, 0xae18, 0xe0c2, 0xa75d, 0x1, 0x1);
        gbc.writeMem(0x6cfe, { 0xa0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x75f3, gbc.sp());
        EXPECT(0x6cff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0278
        gbc.setState(0x55a0, 0x4060, 0x5d0, 0x8eeb, 0x5f92, 0x7351, 0x0, 0x1);
        gbc.writeMem(0x55a0, { 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4060, gbc.sp());
        EXPECT(0x55a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0279
        gbc.setState(0x9e07, 0xfa2d, 0xc200, 0x3e41, 0x38e5, 0xec6f, 0x1, 0x0);
        gbc.writeMem(0x9e07, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xfa2d, gbc.sp());
        EXPECT(0x9e08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9e07));
        // A0 027A
        gbc.setState(0xc8dd, 0x85b2, 0xe490, 0xefbc, 0xe1b9, 0x22b3, 0x0, 0x0);
        gbc.writeMem(0xc8dd, { 0xa0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x85b2, gbc.sp());
        EXPECT(0xc8de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc8dd));
        // A0 027C
        gbc.setState(0xc560, 0x183c, 0x4420, 0x4193, 0xaff0, 0x3d84, 0x0, 0x0);
        gbc.writeMem(0xc560, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x183c, gbc.sp());
        EXPECT(0xc561, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc560));
        // A0 027D
        gbc.setState(0xb43c, 0x6b83, 0x7c50, 0x8fec, 0x7a2d, 0x25, 0x0, 0x1);
        gbc.writeMem(0xb43c, { 0xa0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6b83, gbc.sp());
        EXPECT(0xb43d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb43c));
        // A0 027E
        gbc.setState(0x834a, 0x4726, 0x53e0, 0xc40d, 0x35ad, 0xd427, 0x0, 0x1);
        gbc.writeMem(0x834a, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4726, gbc.sp());
        EXPECT(0x834b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x834a));
        // A0 027F
        gbc.setState(0x821d, 0x1da7, 0x47f0, 0xd8e6, 0x3e8f, 0xdf0c, 0x1, 0x1);
        gbc.writeMem(0x821d, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1da7, gbc.sp());
        EXPECT(0x821e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x821d));
        // A0 0280
        gbc.setState(0xaccb, 0x8def, 0x3e90, 0xccf, 0x38d5, 0xaab4, 0x1, 0x1);
        gbc.writeMem(0xaccb, { 0xa0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8def, gbc.sp());
        EXPECT(0xaccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xaccb));
        // A0 0281
        gbc.setState(0x812d, 0xb79d, 0x6910, 0x224, 0x787f, 0xb5b0, 0x0, 0x0);
        gbc.writeMem(0x812d, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb79d, gbc.sp());
        EXPECT(0x812e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x812d));
        // A0 0282
        gbc.setState(0x15d7, 0x94e7, 0x4c20, 0x88be, 0x58e8, 0xdc1f, 0x1, 0x1);
        gbc.writeMem(0x15d7, { 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x94e7, gbc.sp());
        EXPECT(0x15d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0283
        gbc.setState(0x459f, 0xda78, 0x9720, 0xc1c3, 0x5ac9, 0xa119, 0x0, 0x0);
        gbc.writeMem(0x459f, { 0xa0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xda78, gbc.sp());
        EXPECT(0x45a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0284
        gbc.setState(0xb95c, 0x445c, 0xfbf0, 0x7d54, 0xf645, 0xad40, 0x1, 0x1);
        gbc.writeMem(0xb95c, { 0xa0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x445c, gbc.sp());
        EXPECT(0xb95d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb95c));
        // A0 0285
        gbc.setState(0x3303, 0xb14b, 0xd3d0, 0x4ac9, 0x8a54, 0x9513, 0x1, 0x1);
        gbc.writeMem(0x3303, { 0xa0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb14b, gbc.sp());
        EXPECT(0x3304, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0286
        gbc.setState(0x73a4, 0x311d, 0x1f10, 0x28b2, 0x188c, 0x2bd1, 0x1, 0x1);
        gbc.writeMem(0x73a4, { 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x311d, gbc.sp());
        EXPECT(0x73a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0287
        gbc.setState(0x4c32, 0x1380, 0xbc90, 0x72cf, 0x6ec, 0xec48, 0x1, 0x1);
        gbc.writeMem(0x4c32, { 0xa0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1380, gbc.sp());
        EXPECT(0x4c33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0288
        gbc.setState(0x95be, 0x23ea, 0x7910, 0x1cc2, 0xccb5, 0x6826, 0x0, 0x1);
        gbc.writeMem(0x95be, { 0xa0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x23ea, gbc.sp());
        EXPECT(0x95bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x95be));
        // A0 0289
        gbc.setState(0xd099, 0x8bce, 0xb030, 0x9075, 0x1b0c, 0x9ed, 0x0, 0x1);
        gbc.writeMem(0xd099, { 0xa0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8bce, gbc.sp());
        EXPECT(0xd09a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd099));
        // A0 028A
        gbc.setState(0x238e, 0x1bbb, 0x7540, 0xcd9b, 0xf516, 0x9af5, 0x0, 0x1);
        gbc.writeMem(0x238e, { 0xa0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1bbb, gbc.sp());
        EXPECT(0x238f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 028B
        gbc.setState(0x195c, 0x19ef, 0x2f60, 0x20a, 0xb66, 0x3de0, 0x1, 0x0);
        gbc.writeMem(0x195c, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x19ef, gbc.sp());
        EXPECT(0x195d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 028C
        gbc.setState(0x8d57, 0xd763, 0x7470, 0xcedd, 0x1411, 0xf6ca, 0x0, 0x0);
        gbc.writeMem(0x8d57, { 0xa0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd763, gbc.sp());
        EXPECT(0x8d58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8d57));
        // A0 028D
        gbc.setState(0xc9e3, 0x5f9f, 0x8bc0, 0x1c50, 0x952e, 0x6606, 0x1, 0x1);
        gbc.writeMem(0xc9e3, { 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5f9f, gbc.sp());
        EXPECT(0xc9e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc9e3));
        // A0 028E
        gbc.setState(0x27db, 0x17bb, 0xbbd0, 0xf934, 0x4797, 0x6fd2, 0x1, 0x0);
        gbc.writeMem(0x27db, { 0xa0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x17bb, gbc.sp());
        EXPECT(0x27dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 028F
        gbc.setState(0xb11d, 0xb4fe, 0xfb40, 0x2ca4, 0xa10b, 0x94f6, 0x0, 0x1);
        gbc.writeMem(0xb11d, { 0xa0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb4fe, gbc.sp());
        EXPECT(0xb11e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb11d));
        // A0 0291
        gbc.setState(0xa5cd, 0x85c0, 0xa330, 0xbda2, 0x45a2, 0xe05, 0x0, 0x1);
        gbc.writeMem(0xa5cd, { 0xa0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x85c0, gbc.sp());
        EXPECT(0xa5ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa5cd));
        // A0 0292
        gbc.setState(0xec02, 0xa017, 0x9dd0, 0x787b, 0x9646, 0xd01d, 0x1, 0x0);
        gbc.writeMem(0xec02, { 0xa0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa017, gbc.sp());
        EXPECT(0xec03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xec02));
        // A0 0293
        gbc.setState(0x74c2, 0xd00a, 0x8540, 0x3e15, 0xaf41, 0xbc4d, 0x0, 0x0);
        gbc.writeMem(0x74c2, { 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd00a, gbc.sp());
        EXPECT(0x74c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0294
        gbc.setState(0xbedd, 0xd5b1, 0x93c0, 0xa0e6, 0xbbb6, 0x3c9e, 0x0, 0x0);
        gbc.writeMem(0xbedd, { 0xa0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd5b1, gbc.sp());
        EXPECT(0xbede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xbedd));
        // A0 0295
        gbc.setState(0x3fa7, 0xd0e7, 0x8fb0, 0x4de8, 0xe147, 0x85ff, 0x1, 0x0);
        gbc.writeMem(0x3fa7, { 0xa0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd0e7, gbc.sp());
        EXPECT(0x3fa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0296
        gbc.setState(0x7dbe, 0x64de, 0xfa50, 0xd88c, 0xc70f, 0xfd10, 0x1, 0x1);
        gbc.writeMem(0x7dbe, { 0xa0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x64de, gbc.sp());
        EXPECT(0x7dbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0297
        gbc.setState(0xe8c, 0xa26f, 0x42d0, 0x2ca9, 0x2c9e, 0xffb8, 0x1, 0x0);
        gbc.writeMem(0xe8c, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa26f, gbc.sp());
        EXPECT(0xe8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0298
        gbc.setState(0xa6b, 0x9d74, 0xa9f0, 0x328a, 0xfd53, 0x6eb2, 0x0, 0x0);
        gbc.writeMem(0xa6b, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9d74, gbc.sp());
        EXPECT(0xa6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0299
        gbc.setState(0xd1ee, 0x1bcf, 0xef00, 0x40e4, 0x7ad9, 0x5a28, 0x0, 0x0);
        gbc.writeMem(0xd1ee, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1bcf, gbc.sp());
        EXPECT(0xd1ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd1ee));
        // A0 029A
        gbc.setState(0x9066, 0xb2f3, 0x5a30, 0xb170, 0xbded, 0x48a, 0x1, 0x0);
        gbc.writeMem(0x9066, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb2f3, gbc.sp());
        EXPECT(0x9067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9066));
        // A0 029B
        gbc.setState(0xb07, 0x42d4, 0x2640, 0x96e, 0xba03, 0x9a61, 0x0, 0x0);
        gbc.writeMem(0xb07, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x42d4, gbc.sp());
        EXPECT(0xb08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 029C
        gbc.setState(0x61ec, 0x5a63, 0x7e00, 0x6457, 0xdcaa, 0xfc8e, 0x1, 0x1);
        gbc.writeMem(0x61ec, { 0xa0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5a63, gbc.sp());
        EXPECT(0x61ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 029D
        gbc.setState(0x8b3b, 0xedf4, 0xb0c0, 0x15ed, 0x2b69, 0x3bd9, 0x1, 0x0);
        gbc.writeMem(0x8b3b, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xedf4, gbc.sp());
        EXPECT(0x8b3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8b3b));
        // A0 029E
        gbc.setState(0x8132, 0xe7b, 0x5920, 0xc6df, 0xf19d, 0x62de, 0x0, 0x0);
        gbc.writeMem(0x8132, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe7b, gbc.sp());
        EXPECT(0x8133, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8132));
        // A0 029F
        gbc.setState(0x63b6, 0x4c20, 0xbde0, 0x9c65, 0x3a49, 0xc5d2, 0x1, 0x1);
        gbc.writeMem(0x63b6, { 0xa0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4c20, gbc.sp());
        EXPECT(0x63b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02A0
        gbc.setState(0x21b3, 0xb0ed, 0x9be0, 0x9209, 0xd6ac, 0x3072, 0x1, 0x1);
        gbc.writeMem(0x21b3, { 0xa0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb0ed, gbc.sp());
        EXPECT(0x21b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02A1
        gbc.setState(0x6648, 0x4f4c, 0x2730, 0xab2b, 0x5ec8, 0x1ad8, 0x1, 0x0);
        gbc.writeMem(0x6648, { 0xa0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4f4c, gbc.sp());
        EXPECT(0x6649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02A2
        gbc.setState(0x7740, 0x4a77, 0xe2c0, 0x38, 0x49bb, 0xaa07, 0x1, 0x0);
        gbc.writeMem(0x7740, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4a77, gbc.sp());
        EXPECT(0x7741, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02A3
        gbc.setState(0x81ff, 0xfc32, 0x43f0, 0x6859, 0x2313, 0xfc22, 0x1, 0x0);
        gbc.writeMem(0x81ff, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xfc32, gbc.sp());
        EXPECT(0x8200, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x81ff));
        // A0 02A4
        gbc.setState(0xe6f8, 0xdc70, 0x9780, 0x4cf9, 0x4c18, 0xb0ca, 0x1, 0x0);
        gbc.writeMem(0xe6f8, { 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xdc70, gbc.sp());
        EXPECT(0xe6f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe6f8));
        // A0 02A5
        gbc.setState(0x19c4, 0x442b, 0x49d0, 0x2f32, 0x8fa4, 0xa1bc, 0x1, 0x0);
        gbc.writeMem(0x19c4, { 0xa0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x442b, gbc.sp());
        EXPECT(0x19c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02A6
        gbc.setState(0xbe1e, 0x36fc, 0xe9f0, 0x9f2f, 0xfb6d, 0xab1, 0x1, 0x1);
        gbc.writeMem(0xbe1e, { 0xa0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x36fc, gbc.sp());
        EXPECT(0xbe1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xbe1e));
        // A0 02A7
        gbc.setState(0xcdc, 0x398b, 0x9200, 0x5c06, 0x19ce, 0xe057, 0x1, 0x0);
        gbc.writeMem(0xcdc, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x398b, gbc.sp());
        EXPECT(0xcdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02A8
        gbc.setState(0x1190, 0xbd3f, 0xa9c0, 0x3c55, 0xe9b5, 0xcfc4, 0x0, 0x0);
        gbc.writeMem(0x1190, { 0xa0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xbd3f, gbc.sp());
        EXPECT(0x1191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02A9
        gbc.setState(0xa08f, 0xbf27, 0x7070, 0x3963, 0x8a59, 0x8cf6, 0x0, 0x0);
        gbc.writeMem(0xa08f, { 0xa0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xbf27, gbc.sp());
        EXPECT(0xa090, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa08f));
        // A0 02AA
        gbc.setState(0x953, 0x2984, 0x2440, 0x5f68, 0x6c6e, 0xa263, 0x0, 0x0);
        gbc.writeMem(0x953, { 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2984, gbc.sp());
        EXPECT(0x954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02AB
        gbc.setState(0xc742, 0x5b56, 0xbc90, 0xd62a, 0xba3a, 0xf294, 0x0, 0x1);
        gbc.writeMem(0xc742, { 0xa0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5b56, gbc.sp());
        EXPECT(0xc743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc742));
        // A0 02AC
        gbc.setState(0xaa5, 0x6a61, 0xa6c0, 0x346a, 0x1b83, 0xf1d2, 0x1, 0x1);
        gbc.writeMem(0xaa5, { 0xa0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6a61, gbc.sp());
        EXPECT(0xaa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02AD
        gbc.setState(0xa901, 0xc219, 0xfe90, 0x8286, 0xd796, 0x39f2, 0x1, 0x1);
        gbc.writeMem(0xa901, { 0xa0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc219, gbc.sp());
        EXPECT(0xa902, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa901));
        // A0 02AF
        gbc.setState(0x2f87, 0x259b, 0x84d0, 0xe993, 0xb617, 0x4dad, 0x0, 0x1);
        gbc.writeMem(0x2f87, { 0xa0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x259b, gbc.sp());
        EXPECT(0x2f88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02B0
        gbc.setState(0xce82, 0xd67b, 0xe980, 0x8eba, 0x7607, 0xf6f2, 0x0, 0x0);
        gbc.writeMem(0xce82, { 0xa0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd67b, gbc.sp());
        EXPECT(0xce83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xce82));
        // A0 02B2
        gbc.setState(0x7337, 0xbd98, 0xb7d0, 0xe04b, 0x259f, 0x646e, 0x0, 0x0);
        gbc.writeMem(0x7337, { 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xbd98, gbc.sp());
        EXPECT(0x7338, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02B3
        gbc.setState(0x7af5, 0x2b91, 0x5880, 0xd4ec, 0x82d2, 0x666b, 0x1, 0x0);
        gbc.writeMem(0x7af5, { 0xa0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2b91, gbc.sp());
        EXPECT(0x7af6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02B4
        gbc.setState(0x5b98, 0x3d65, 0x2ce0, 0x66ab, 0x9fa2, 0x8e7f, 0x0, 0x0);
        gbc.writeMem(0x5b98, { 0xa0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3d65, gbc.sp());
        EXPECT(0x5b99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02B5
        gbc.setState(0x371d, 0x30dc, 0xccd0, 0x91f3, 0xfdc4, 0x47c4, 0x0, 0x1);
        gbc.writeMem(0x371d, { 0xa0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x30dc, gbc.sp());
        EXPECT(0x371e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02B6
        gbc.setState(0xab55, 0xe3cc, 0xa9e0, 0x3e07, 0x5dcd, 0x645b, 0x0, 0x1);
        gbc.writeMem(0xab55, { 0xa0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe3cc, gbc.sp());
        EXPECT(0xab56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xab55));
        // A0 02B7
        gbc.setState(0xd90c, 0xbbcd, 0x1770, 0x824e, 0xe4fb, 0x7689, 0x0, 0x1);
        gbc.writeMem(0xd90c, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xbbcd, gbc.sp());
        EXPECT(0xd90d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd90c));
        // A0 02B8
        gbc.setState(0xaa6d, 0xf554, 0x3b70, 0x4c7d, 0xdf2a, 0xaf5a, 0x0, 0x1);
        gbc.writeMem(0xaa6d, { 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf554, gbc.sp());
        EXPECT(0xaa6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xaa6d));
        // A0 02B9
        gbc.setState(0x6f55, 0xcd73, 0xa8d0, 0xb849, 0x1bd1, 0xff58, 0x1, 0x0);
        gbc.writeMem(0x6f55, { 0xa0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xcd73, gbc.sp());
        EXPECT(0x6f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02BA
        gbc.setState(0xad12, 0x2cb3, 0x2eb0, 0xe5ba, 0xbf8f, 0x4a87, 0x1, 0x1);
        gbc.writeMem(0xad12, { 0xa0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2cb3, gbc.sp());
        EXPECT(0xad13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xad12));
        // A0 02BB
        gbc.setState(0xe21d, 0xfd3e, 0x1f30, 0x6934, 0x4e4e, 0xbf69, 0x1, 0x0);
        gbc.writeMem(0xe21d, { 0xa0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xfd3e, gbc.sp());
        EXPECT(0xe21e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe21d));
        // A0 02BC
        gbc.setState(0x1de1, 0xc541, 0x1e90, 0x4d6, 0x706b, 0xfac5, 0x0, 0x1);
        gbc.writeMem(0x1de1, { 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc541, gbc.sp());
        EXPECT(0x1de2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02BD
        gbc.setState(0xdaa0, 0x7106, 0xe060, 0xdb24, 0xd294, 0x57bf, 0x1, 0x1);
        gbc.writeMem(0xdaa0, { 0xa0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7106, gbc.sp());
        EXPECT(0xdaa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xdaa0));
        // A0 02BE
        gbc.setState(0x8ec6, 0x3eaf, 0x8e60, 0xf9f1, 0x9a22, 0x7e79, 0x1, 0x0);
        gbc.writeMem(0x8ec6, { 0xa0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3eaf, gbc.sp());
        EXPECT(0x8ec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8ec6));
        // A0 02BF
        gbc.setState(0x972c, 0x8f41, 0xf110, 0xc35a, 0x8b25, 0x5fe9, 0x0, 0x1);
        gbc.writeMem(0x972c, { 0xa0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8f41, gbc.sp());
        EXPECT(0x972d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x972c));
        // A0 02C0
        gbc.setState(0xdd0c, 0xca98, 0x4ff0, 0xfa0a, 0x4d78, 0xc6ed, 0x0, 0x0);
        gbc.writeMem(0xdd0c, { 0xa0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xca98, gbc.sp());
        EXPECT(0xdd0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xdd0c));
        // A0 02C1
        gbc.setState(0x3dfa, 0xf73f, 0x8be0, 0x29db, 0xa511, 0xec53, 0x1, 0x0);
        gbc.writeMem(0x3dfa, { 0xa0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf73f, gbc.sp());
        EXPECT(0x3dfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02C2
        gbc.setState(0x26bb, 0xde4e, 0xc8f0, 0xb0f1, 0x4ce2, 0x5240, 0x0, 0x1);
        gbc.writeMem(0x26bb, { 0xa0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xde4e, gbc.sp());
        EXPECT(0x26bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02C3
        gbc.setState(0x8500, 0xb797, 0xab0, 0x8d9a, 0x804e, 0xa4c9, 0x1, 0x1);
        gbc.writeMem(0x8500, { 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb797, gbc.sp());
        EXPECT(0x8501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8500));
        // A0 02C4
        gbc.setState(0x2793, 0x83c8, 0xe120, 0x5b7e, 0xb71d, 0xf7c, 0x1, 0x1);
        gbc.writeMem(0x2793, { 0xa0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x83c8, gbc.sp());
        EXPECT(0x2794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02C5
        gbc.setState(0x301b, 0x5150, 0x66f0, 0x19c7, 0x7e56, 0x3814, 0x1, 0x0);
        gbc.writeMem(0x301b, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5150, gbc.sp());
        EXPECT(0x301c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02C6
        gbc.setState(0x7f23, 0x3bee, 0x2a90, 0x327, 0xd9f4, 0xd799, 0x0, 0x1);
        gbc.writeMem(0x7f23, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3bee, gbc.sp());
        EXPECT(0x7f24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02C7
        gbc.setState(0x7827, 0x5d70, 0x8e50, 0x8df9, 0x7e8c, 0x8bc7, 0x1, 0x0);
        gbc.writeMem(0x7827, { 0xa0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5d70, gbc.sp());
        EXPECT(0x7828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02C8
        gbc.setState(0x4747, 0x786c, 0x31b0, 0x1f10, 0xdddd, 0x3fdb, 0x1, 0x0);
        gbc.writeMem(0x4747, { 0xa0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x786c, gbc.sp());
        EXPECT(0x4748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02C9
        gbc.setState(0xcafc, 0x8d1f, 0xb2f0, 0x450, 0xe273, 0x8025, 0x0, 0x1);
        gbc.writeMem(0xcafc, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8d1f, gbc.sp());
        EXPECT(0xcafd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xcafc));
        // A0 02CA
        gbc.setState(0x6903, 0x32ed, 0xf2b0, 0x7ddc, 0xa2ce, 0xd2db, 0x0, 0x1);
        gbc.writeMem(0x6903, { 0xa0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x32ed, gbc.sp());
        EXPECT(0x6904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02CB
        gbc.setState(0xcb5d, 0x812, 0xcbb0, 0x1af8, 0xd23b, 0x2570, 0x0, 0x0);
        gbc.writeMem(0xcb5d, { 0xa0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x812, gbc.sp());
        EXPECT(0xcb5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xcb5d));
        // A0 02CC
        gbc.setState(0xbb4, 0x55e6, 0xb4c0, 0x7efd, 0xd912, 0xe0b0, 0x1, 0x1);
        gbc.writeMem(0xbb4, { 0xa0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x55e6, gbc.sp());
        EXPECT(0xbb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02CD
        gbc.setState(0x2ecc, 0x77e1, 0x4820, 0xc6df, 0x968a, 0x2bcf, 0x1, 0x1);
        gbc.writeMem(0x2ecc, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x77e1, gbc.sp());
        EXPECT(0x2ecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02CE
        gbc.setState(0x5a75, 0x1e02, 0xa230, 0xea19, 0x78b9, 0x7d31, 0x0, 0x1);
        gbc.writeMem(0x5a75, { 0xa0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1e02, gbc.sp());
        EXPECT(0x5a76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02CF
        gbc.setState(0xc878, 0x25e7, 0xb410, 0xbaee, 0x1ae9, 0xd21e, 0x0, 0x1);
        gbc.writeMem(0xc878, { 0xa0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x25e7, gbc.sp());
        EXPECT(0xc879, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc878));
        // A0 02D0
        gbc.setState(0xa4cd, 0xaab, 0xbe40, 0x972a, 0x6ae5, 0x96b2, 0x0, 0x0);
        gbc.writeMem(0xa4cd, { 0xa0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xaab, gbc.sp());
        EXPECT(0xa4ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa4cd));
        // A0 02D1
        gbc.setState(0xc9ab, 0x6204, 0xa750, 0x24a9, 0x541d, 0x92bf, 0x0, 0x1);
        gbc.writeMem(0xc9ab, { 0xa0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6204, gbc.sp());
        EXPECT(0xc9ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc9ab));
        // A0 02D2
        gbc.setState(0x8d23, 0x21c2, 0x9a10, 0x75cb, 0xf114, 0x70cf, 0x1, 0x1);
        gbc.writeMem(0x8d23, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x21c2, gbc.sp());
        EXPECT(0x8d24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8d23));
        // A0 02D3
        gbc.setState(0xacfc, 0x5076, 0x2ac0, 0x8c51, 0xae59, 0x1434, 0x1, 0x0);
        gbc.writeMem(0xacfc, { 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5076, gbc.sp());
        EXPECT(0xacfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xacfc));
        // A0 02D4
        gbc.setState(0x4928, 0x2e86, 0xb40, 0xe521, 0xb709, 0xbdd3, 0x0, 0x1);
        gbc.writeMem(0x4928, { 0xa0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2e86, gbc.sp());
        EXPECT(0x4929, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02D5
        gbc.setState(0x5a63, 0x36d3, 0xf10, 0x1d8e, 0x59b, 0xc871, 0x0, 0x0);
        gbc.writeMem(0x5a63, { 0xa0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x36d3, gbc.sp());
        EXPECT(0x5a64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02D6
        gbc.setState(0xebf, 0x7914, 0xf570, 0x8414, 0xed30, 0x200, 0x1, 0x0);
        gbc.writeMem(0xebf, { 0xa0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7914, gbc.sp());
        EXPECT(0xec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02D7
        gbc.setState(0xd06c, 0x9cd1, 0xda30, 0x2541, 0x9ede, 0xb3ae, 0x1, 0x0);
        gbc.writeMem(0xd06c, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9cd1, gbc.sp());
        EXPECT(0xd06d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd06c));
        // A0 02D8
        gbc.setState(0x2364, 0x9273, 0xfc70, 0xf442, 0xb0a7, 0xa3b1, 0x0, 0x0);
        gbc.writeMem(0x2364, { 0xa0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9273, gbc.sp());
        EXPECT(0x2365, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02D9
        gbc.setState(0x42be, 0xe963, 0xaa60, 0x775a, 0x9f0d, 0xfcfc, 0x1, 0x1);
        gbc.writeMem(0x42be, { 0xa0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe963, gbc.sp());
        EXPECT(0x42bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02DA
        gbc.setState(0x5786, 0x3a95, 0xfe00, 0x7d45, 0xeaac, 0xadfd, 0x1, 0x1);
        gbc.writeMem(0x5786, { 0xa0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3a95, gbc.sp());
        EXPECT(0x5787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02DB
        gbc.setState(0x1017, 0x2587, 0xdab0, 0x9c19, 0x7d6d, 0xe1b9, 0x0, 0x0);
        gbc.writeMem(0x1017, { 0xa0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2587, gbc.sp());
        EXPECT(0x1018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02DC
        gbc.setState(0xe32, 0xb896, 0x4100, 0xd3ad, 0x5e6d, 0xb324, 0x0, 0x0);
        gbc.writeMem(0xe32, { 0xa0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb896, gbc.sp());
        EXPECT(0xe33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02DD
        gbc.setState(0xef0d, 0xd020, 0x54e0, 0xd639, 0x926e, 0x132, 0x0, 0x1);
        gbc.writeMem(0xef0d, { 0xa0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd020, gbc.sp());
        EXPECT(0xef0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xef0d));
        // A0 02DE
        gbc.setState(0xa443, 0x7109, 0x39e0, 0x6ba6, 0x5603, 0x98e4, 0x0, 0x0);
        gbc.writeMem(0xa443, { 0xa0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7109, gbc.sp());
        EXPECT(0xa444, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa443));
        // A0 02DF
        gbc.setState(0x82e6, 0x97af, 0xdbc0, 0xf3f9, 0x6d48, 0xc16a, 0x0, 0x0);
        gbc.writeMem(0x82e6, { 0xa0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x97af, gbc.sp());
        EXPECT(0x82e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x82e6));
        // A0 02E0
        gbc.setState(0x2660, 0xf5e, 0xbd60, 0x5b05, 0xa1c3, 0x28bc, 0x0, 0x0);
        gbc.writeMem(0x2660, { 0xa0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf5e, gbc.sp());
        EXPECT(0x2661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02E1
        gbc.setState(0x5d8b, 0x7718, 0x1240, 0xf4de, 0xa3d8, 0xe8da, 0x1, 0x0);
        gbc.writeMem(0x5d8b, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7718, gbc.sp());
        EXPECT(0x5d8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02E2
        gbc.setState(0x5cde, 0xebc8, 0x7c70, 0xadec, 0x7068, 0x69ff, 0x0, 0x1);
        gbc.writeMem(0x5cde, { 0xa0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xebc8, gbc.sp());
        EXPECT(0x5cdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02E3
        gbc.setState(0x79f4, 0xa324, 0x3220, 0x196b, 0x9f4d, 0x1f19, 0x0, 0x0);
        gbc.writeMem(0x79f4, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa324, gbc.sp());
        EXPECT(0x79f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02E4
        gbc.setState(0xe5d9, 0x5176, 0x8b20, 0x6146, 0x6512, 0x5d2e, 0x1, 0x1);
        gbc.writeMem(0xe5d9, { 0xa0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5176, gbc.sp());
        EXPECT(0xe5da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe5d9));
        // A0 02E5
        gbc.setState(0xa4f4, 0xb613, 0x8330, 0xd37e, 0x5e6e, 0x27bd, 0x0, 0x0);
        gbc.writeMem(0xa4f4, { 0xa0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb613, gbc.sp());
        EXPECT(0xa4f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa4f4));
        // A0 02E6
        gbc.setState(0xed25, 0x8fe4, 0xaf50, 0x1099, 0xc8a5, 0x9036, 0x0, 0x1);
        gbc.writeMem(0xed25, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8fe4, gbc.sp());
        EXPECT(0xed26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xed25));
        // A0 02E7
        gbc.setState(0x440e, 0xedcd, 0xd6d0, 0x6297, 0x349c, 0xf1c5, 0x0, 0x0);
        gbc.writeMem(0x440e, { 0xa0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xedcd, gbc.sp());
        EXPECT(0x440f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02E8
        gbc.setState(0x7950, 0x37cd, 0x4380, 0x9ae5, 0xd151, 0xbd60, 0x0, 0x0);
        gbc.writeMem(0x7950, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x37cd, gbc.sp());
        EXPECT(0x7951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02E9
        gbc.setState(0x6857, 0xd810, 0x38d0, 0xc1a1, 0x4da1, 0x82b3, 0x0, 0x0);
        gbc.writeMem(0x6857, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd810, gbc.sp());
        EXPECT(0x6858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02EA
        gbc.setState(0xa4a6, 0xf78b, 0x6d60, 0x63d3, 0x9c0b, 0x4103, 0x1, 0x0);
        gbc.writeMem(0xa4a6, { 0xa0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf78b, gbc.sp());
        EXPECT(0xa4a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa4a6));
        // A0 02EB
        gbc.setState(0xb315, 0x85d, 0x2520, 0x1f2e, 0x8c2, 0x4a90, 0x0, 0x1);
        gbc.writeMem(0xb315, { 0xa0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x85d, gbc.sp());
        EXPECT(0xb316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb315));
        // A0 02EC
        gbc.setState(0xb077, 0xcb42, 0x42f0, 0x469a, 0x7f7c, 0x8676, 0x0, 0x0);
        gbc.writeMem(0xb077, { 0xa0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xcb42, gbc.sp());
        EXPECT(0xb078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb077));
        // A0 02ED
        gbc.setState(0xa4e2, 0x34b7, 0x36a0, 0x50fa, 0xd6b8, 0x8db3, 0x0, 0x0);
        gbc.writeMem(0xa4e2, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x34b7, gbc.sp());
        EXPECT(0xa4e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa4e2));
        // A0 02EE
        gbc.setState(0x5627, 0xcc3, 0x79d0, 0xb235, 0x3789, 0x5ea0, 0x0, 0x1);
        gbc.writeMem(0x5627, { 0xa0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xcc3, gbc.sp());
        EXPECT(0x5628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02EF
        gbc.setState(0xeea6, 0x786d, 0x3170, 0x9c5d, 0x3373, 0x23a5, 0x0, 0x1);
        gbc.writeMem(0xeea6, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x786d, gbc.sp());
        EXPECT(0xeea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xeea6));
        // A0 02F3
        gbc.setState(0xb5ff, 0x20d5, 0xae10, 0x2c4, 0x9bcc, 0x7eb7, 0x1, 0x1);
        gbc.writeMem(0xb5ff, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x20d5, gbc.sp());
        EXPECT(0xb600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb5ff));
        // A0 02F4
        gbc.setState(0x3c9, 0x7348, 0x7580, 0xbcec, 0x6faa, 0x7679, 0x0, 0x0);
        gbc.writeMem(0x3c9, { 0xa0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7348, gbc.sp());
        EXPECT(0x3ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02F5
        gbc.setState(0xbe43, 0x7a47, 0x6fb0, 0xcda3, 0x2d7d, 0x3bc2, 0x1, 0x0);
        gbc.writeMem(0xbe43, { 0xa0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7a47, gbc.sp());
        EXPECT(0xbe44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xbe43));
        // A0 02F6
        gbc.setState(0x5aba, 0xd624, 0x39e0, 0xe4c6, 0xf805, 0x399d, 0x1, 0x1);
        gbc.writeMem(0x5aba, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd624, gbc.sp());
        EXPECT(0x5abb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02F7
        gbc.setState(0x6c84, 0xfda1, 0x8960, 0xfbcb, 0x818c, 0x20ab, 0x0, 0x0);
        gbc.writeMem(0x6c84, { 0xa0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xfda1, gbc.sp());
        EXPECT(0x6c85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02F8
        gbc.setState(0xd207, 0x4a47, 0x3e00, 0x2ac8, 0xe3f7, 0x14a7, 0x1, 0x0);
        gbc.writeMem(0xd207, { 0xa0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4a47, gbc.sp());
        EXPECT(0xd208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd207));
        // A0 02F9
        gbc.setState(0xa247, 0x7d1a, 0x7270, 0x1072, 0x7a5d, 0xae28, 0x1, 0x0);
        gbc.writeMem(0xa247, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7d1a, gbc.sp());
        EXPECT(0xa248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa247));
        // A0 02FA
        gbc.setState(0xb6f1, 0x4556, 0x9460, 0x4a4, 0xe5ee, 0xb617, 0x1, 0x0);
        gbc.writeMem(0xb6f1, { 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4556, gbc.sp());
        EXPECT(0xb6f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb6f1));
        // A0 02FB
        gbc.setState(0x669a, 0xd5b6, 0xa640, 0x534, 0x6289, 0x7c59, 0x1, 0x1);
        gbc.writeMem(0x669a, { 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd5b6, gbc.sp());
        EXPECT(0x669b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 02FC
        gbc.setState(0xd39b, 0xa50f, 0x75e0, 0xc0fc, 0x7b9e, 0x76e7, 0x1, 0x1);
        gbc.writeMem(0xd39b, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa50f, gbc.sp());
        EXPECT(0xd39c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd39b));
        // A0 02FD
        gbc.setState(0x8669, 0x906d, 0x6e40, 0xa43b, 0x3799, 0x780b, 0x1, 0x1);
        gbc.writeMem(0x8669, { 0xa0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x906d, gbc.sp());
        EXPECT(0x866a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8669));
        // A0 02FE
        gbc.setState(0xbc74, 0x2c7a, 0x6100, 0xb4dd, 0x51c5, 0xcc43, 0x0, 0x1);
        gbc.writeMem(0xbc74, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2c7a, gbc.sp());
        EXPECT(0xbc75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xbc74));
        // A0 02FF
        gbc.setState(0xe16e, 0x7eb7, 0xab00, 0xb8e8, 0xdb52, 0xc233, 0x0, 0x0);
        gbc.writeMem(0xe16e, { 0xa0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7eb7, gbc.sp());
        EXPECT(0xe16f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe16e));
        // A0 0300
        gbc.setState(0x4b32, 0xaa9f, 0x2500, 0x58db, 0xcfbf, 0x68a4, 0x1, 0x0);
        gbc.writeMem(0x4b32, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xaa9f, gbc.sp());
        EXPECT(0x4b33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0301
        gbc.setState(0x9fc0, 0x9719, 0x3500, 0xc0a2, 0x8f33, 0xabc2, 0x1, 0x1);
        gbc.writeMem(0x9fc0, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9719, gbc.sp());
        EXPECT(0x9fc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9fc0));
        // A0 0302
        gbc.setState(0xcebb, 0x849e, 0x1700, 0xa7a3, 0x608d, 0x970d, 0x1, 0x1);
        gbc.writeMem(0xcebb, { 0xa0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x849e, gbc.sp());
        EXPECT(0xcebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xcebb));
        // A0 0303
        gbc.setState(0xe914, 0x8da1, 0xa580, 0xc9c0, 0xf979, 0x423c, 0x0, 0x1);
        gbc.writeMem(0xe914, { 0xa0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8da1, gbc.sp());
        EXPECT(0xe915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe914));
        // A0 0304
        gbc.setState(0x8ec6, 0x8b24, 0x68a0, 0x6940, 0xb6f5, 0xa22e, 0x1, 0x0);
        gbc.writeMem(0x8ec6, { 0xa0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8b24, gbc.sp());
        EXPECT(0x8ec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8ec6));
        // A0 0305
        gbc.setState(0xa7f3, 0x5cbd, 0x9790, 0xf4c, 0xa59b, 0x9fca, 0x1, 0x1);
        gbc.writeMem(0xa7f3, { 0xa0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5cbd, gbc.sp());
        EXPECT(0xa7f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa7f3));
        // A0 0306
        gbc.setState(0x67e3, 0xa9f5, 0x70a0, 0xea55, 0x370, 0x38ce, 0x0, 0x1);
        gbc.writeMem(0x67e3, { 0xa0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa9f5, gbc.sp());
        EXPECT(0x67e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0307
        gbc.setState(0x5a2f, 0xe1c5, 0x4820, 0x8be3, 0xa40e, 0xf1db, 0x1, 0x1);
        gbc.writeMem(0x5a2f, { 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe1c5, gbc.sp());
        EXPECT(0x5a30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0308
        gbc.setState(0x8bf7, 0x25e3, 0x24d0, 0xd40d, 0xb7b2, 0x964c, 0x0, 0x0);
        gbc.writeMem(0x8bf7, { 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x25e3, gbc.sp());
        EXPECT(0x8bf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8bf7));
        // A0 0309
        gbc.setState(0xb33d, 0x9044, 0x4f20, 0xbed9, 0x161b, 0x4b2a, 0x0, 0x0);
        gbc.writeMem(0xb33d, { 0xa0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9044, gbc.sp());
        EXPECT(0xb33e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb33d));
        // A0 030A
        gbc.setState(0xc5bd, 0xfec6, 0x70e0, 0xd56, 0xe4c6, 0xb887, 0x1, 0x0);
        gbc.writeMem(0xc5bd, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xfec6, gbc.sp());
        EXPECT(0xc5be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc5bd));
        // A0 030B
        gbc.setState(0xdb21, 0x97f9, 0x6650, 0x2081, 0xc759, 0x74eb, 0x1, 0x0);
        gbc.writeMem(0xdb21, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x97f9, gbc.sp());
        EXPECT(0xdb22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xdb21));
        // A0 030C
        gbc.setState(0x3a2e, 0x9f0, 0xa7a0, 0xbb9a, 0xe609, 0x69db, 0x1, 0x0);
        gbc.writeMem(0x3a2e, { 0xa0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9f0, gbc.sp());
        EXPECT(0x3a2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 030D
        gbc.setState(0x4185, 0xc3b2, 0x83d0, 0xce1c, 0x16cf, 0x4f0f, 0x0, 0x1);
        gbc.writeMem(0x4185, { 0xa0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc3b2, gbc.sp());
        EXPECT(0x4186, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 030E
        gbc.setState(0x20d9, 0xe1e5, 0x49e0, 0xc0f1, 0xbdb6, 0x50af, 0x0, 0x0);
        gbc.writeMem(0x20d9, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe1e5, gbc.sp());
        EXPECT(0x20da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 030F
        gbc.setState(0xb83e, 0x5059, 0xcf00, 0xfa9b, 0xc74, 0xe763, 0x0, 0x0);
        gbc.writeMem(0xb83e, { 0xa0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5059, gbc.sp());
        EXPECT(0xb83f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb83e));
        // A0 0310
        gbc.setState(0x7ee2, 0x895f, 0xd8a0, 0x4973, 0x5bf9, 0xf0d9, 0x0, 0x0);
        gbc.writeMem(0x7ee2, { 0xa0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x895f, gbc.sp());
        EXPECT(0x7ee3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0311
        gbc.setState(0xb620, 0xf554, 0xe0e0, 0x7bc5, 0x87ee, 0x5ca3, 0x1, 0x1);
        gbc.writeMem(0xb620, { 0xa0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf554, gbc.sp());
        EXPECT(0xb621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb620));
        // A0 0312
        gbc.setState(0xafb5, 0xbb6d, 0x9260, 0x36a, 0xe17c, 0xd595, 0x0, 0x1);
        gbc.writeMem(0xafb5, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xbb6d, gbc.sp());
        EXPECT(0xafb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xafb5));
        // A0 0313
        gbc.setState(0xe10a, 0xcebe, 0xfa90, 0xd685, 0x98d, 0xf6d3, 0x0, 0x1);
        gbc.writeMem(0xe10a, { 0xa0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xcebe, gbc.sp());
        EXPECT(0xe10b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe10a));
        // A0 0316
        gbc.setState(0x906d, 0xaac8, 0xe6f0, 0xdf9c, 0xc1cd, 0xfa28, 0x0, 0x0);
        gbc.writeMem(0x906d, { 0xa0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xaac8, gbc.sp());
        EXPECT(0x906e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x906d));
        // A0 0318
        gbc.setState(0x3676, 0x5500, 0x4770, 0x8b61, 0x4eb, 0x3b44, 0x1, 0x0);
        gbc.writeMem(0x3676, { 0xa0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5500, gbc.sp());
        EXPECT(0x3677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 031A
        gbc.setState(0xcced, 0x9487, 0x4aa0, 0xcd0e, 0x7fa6, 0x7082, 0x0, 0x0);
        gbc.writeMem(0xcced, { 0xa0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9487, gbc.sp());
        EXPECT(0xccee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xcced));
        // A0 031B
        gbc.setState(0xe51d, 0xe59f, 0x99a0, 0x5408, 0xc683, 0x9dc3, 0x1, 0x1);
        gbc.writeMem(0xe51d, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe59f, gbc.sp());
        EXPECT(0xe51e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe51d));
        // A0 031C
        gbc.setState(0x81f5, 0x80b7, 0x1720, 0x7f03, 0x27a1, 0x80f8, 0x1, 0x0);
        gbc.writeMem(0x81f5, { 0xa0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x80b7, gbc.sp());
        EXPECT(0x81f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x81f5));
        // A0 031D
        gbc.setState(0xa30f, 0x17d8, 0xc3d0, 0x44a0, 0x1124, 0xab8e, 0x0, 0x1);
        gbc.writeMem(0xa30f, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x17d8, gbc.sp());
        EXPECT(0xa310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa30f));
        // A0 031E
        gbc.setState(0x55d4, 0xed1e, 0x8fe0, 0xa34d, 0x9424, 0xb3e8, 0x0, 0x0);
        gbc.writeMem(0x55d4, { 0xa0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xed1e, gbc.sp());
        EXPECT(0x55d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 031F
        gbc.setState(0xbc48, 0x8b4c, 0x3340, 0x9c29, 0x41c9, 0x5ab0, 0x0, 0x1);
        gbc.writeMem(0xbc48, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8b4c, gbc.sp());
        EXPECT(0xbc49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xbc48));
        // A0 0320
        gbc.setState(0x88a5, 0x49b1, 0x13b0, 0xf66b, 0x8f8e, 0x953b, 0x1, 0x0);
        gbc.writeMem(0x88a5, { 0xa0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x49b1, gbc.sp());
        EXPECT(0x88a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x88a5));
        // A0 0321
        gbc.setState(0x3ffd, 0xc77f, 0xb4d0, 0xc5c2, 0xe89a, 0x1830, 0x0, 0x1);
        gbc.writeMem(0x3ffd, { 0xa0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc77f, gbc.sp());
        EXPECT(0x3ffe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0322
        gbc.setState(0x13ed, 0xdef3, 0xfba0, 0x2be8, 0x14c9, 0xac9a, 0x0, 0x0);
        gbc.writeMem(0x13ed, { 0xa0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xdef3, gbc.sp());
        EXPECT(0x13ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0323
        gbc.setState(0x9e00, 0xbeff, 0x3640, 0x835d, 0x130e, 0x6920, 0x0, 0x0);
        gbc.writeMem(0x9e00, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xbeff, gbc.sp());
        EXPECT(0x9e01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9e00));
        // A0 0324
        gbc.setState(0x2d44, 0x3950, 0x200, 0x2c7e, 0x1f07, 0xd5a0, 0x1, 0x0);
        gbc.writeMem(0x2d44, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3950, gbc.sp());
        EXPECT(0x2d45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0325
        gbc.setState(0x3a6c, 0x8c67, 0x2d10, 0x478b, 0x5c1c, 0xb69, 0x1, 0x1);
        gbc.writeMem(0x3a6c, { 0xa0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8c67, gbc.sp());
        EXPECT(0x3a6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0326
        gbc.setState(0x894e, 0x1bd6, 0xaae0, 0x180f, 0xacff, 0xc39c, 0x0, 0x1);
        gbc.writeMem(0x894e, { 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1bd6, gbc.sp());
        EXPECT(0x894f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x894e));
        // A0 0327
        gbc.setState(0xd3c1, 0x1984, 0x4c70, 0xf60e, 0xf915, 0x5ac3, 0x1, 0x1);
        gbc.writeMem(0xd3c1, { 0xa0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1984, gbc.sp());
        EXPECT(0xd3c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd3c1));
        // A0 0328
        gbc.setState(0x1b13, 0xea7d, 0xba70, 0xd01f, 0x233, 0xc05c, 0x1, 0x0);
        gbc.writeMem(0x1b13, { 0xa0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xea7d, gbc.sp());
        EXPECT(0x1b14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0329
        gbc.setState(0x8a77, 0x430f, 0xf4c0, 0x2c5e, 0xf7, 0xa4e, 0x0, 0x1);
        gbc.writeMem(0x8a77, { 0xa0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x430f, gbc.sp());
        EXPECT(0x8a78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8a77));
        // A0 032A
        gbc.setState(0xc2aa, 0x2a36, 0x36d0, 0xdcf9, 0x625b, 0xbdfb, 0x0, 0x1);
        gbc.writeMem(0xc2aa, { 0xa0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2a36, gbc.sp());
        EXPECT(0xc2ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc2aa));
        // A0 032B
        gbc.setState(0x4eaf, 0xffc1, 0xcc30, 0x5933, 0xf4d2, 0x9b2, 0x0, 0x0);
        gbc.writeMem(0x4eaf, { 0xa0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xffc1, gbc.sp());
        EXPECT(0x4eb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 032C
        gbc.setState(0x1476, 0xef32, 0x7ea0, 0x96bc, 0x60ff, 0x6fa1, 0x1, 0x1);
        gbc.writeMem(0x1476, { 0xa0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xef32, gbc.sp());
        EXPECT(0x1477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 032E
        gbc.setState(0x8d87, 0x46b4, 0x8e20, 0x735, 0xc510, 0xe5c1, 0x1, 0x0);
        gbc.writeMem(0x8d87, { 0xa0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x46b4, gbc.sp());
        EXPECT(0x8d88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8d87));
        // A0 032F
        gbc.setState(0xcb4d, 0x519c, 0xae70, 0x54, 0xf3bd, 0xb6cb, 0x1, 0x1);
        gbc.writeMem(0xcb4d, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x519c, gbc.sp());
        EXPECT(0xcb4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xcb4d));
        // A0 0330
        gbc.setState(0x5120, 0x154a, 0xa370, 0x9821, 0x29c7, 0x43a1, 0x0, 0x1);
        gbc.writeMem(0x5120, { 0xa0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x154a, gbc.sp());
        EXPECT(0x5121, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0331
        gbc.setState(0x5135, 0x8485, 0x6d60, 0x8251, 0xa831, 0xb6c3, 0x1, 0x0);
        gbc.writeMem(0x5135, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8485, gbc.sp());
        EXPECT(0x5136, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0332
        gbc.setState(0x4e44, 0xe321, 0x8c70, 0x9c8a, 0xca9c, 0x35c6, 0x1, 0x1);
        gbc.writeMem(0x4e44, { 0xa0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe321, gbc.sp());
        EXPECT(0x4e45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0334
        gbc.setState(0x2f92, 0x66b6, 0x48c0, 0xf35f, 0x3060, 0x14e, 0x1, 0x0);
        gbc.writeMem(0x2f92, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x66b6, gbc.sp());
        EXPECT(0x2f93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0335
        gbc.setState(0xa5df, 0xfbf0, 0x83d0, 0xe5ea, 0xe3dd, 0xdc32, 0x0, 0x0);
        gbc.writeMem(0xa5df, { 0xa0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xfbf0, gbc.sp());
        EXPECT(0xa5e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa5df));
        // A0 0336
        gbc.setState(0xe530, 0x2cbf, 0xbf30, 0x3791, 0x4027, 0xf44d, 0x0, 0x1);
        gbc.writeMem(0xe530, { 0xa0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2cbf, gbc.sp());
        EXPECT(0xe531, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe530));
        // A0 0337
        gbc.setState(0xef37, 0x2565, 0x36c0, 0x82b4, 0xc7e0, 0xa642, 0x0, 0x1);
        gbc.writeMem(0xef37, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2565, gbc.sp());
        EXPECT(0xef38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xef37));
        // A0 0338
        gbc.setState(0x2815, 0xac0b, 0x9290, 0x7fac, 0x744b, 0xe836, 0x0, 0x0);
        gbc.writeMem(0x2815, { 0xa0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xac0b, gbc.sp());
        EXPECT(0x2816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0339
        gbc.setState(0xabd5, 0x4bc9, 0x3b20, 0x30c7, 0x4be4, 0x6f5e, 0x0, 0x0);
        gbc.writeMem(0xabd5, { 0xa0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4bc9, gbc.sp());
        EXPECT(0xabd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xabd5));
        // A0 033A
        gbc.setState(0xc1a4, 0x4515, 0xdab0, 0x5d30, 0xac06, 0x7811, 0x1, 0x0);
        gbc.writeMem(0xc1a4, { 0xa0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4515, gbc.sp());
        EXPECT(0xc1a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc1a4));
        // A0 033B
        gbc.setState(0x7f5c, 0x4dea, 0x540, 0x8cf, 0x3124, 0x99e3, 0x1, 0x1);
        gbc.writeMem(0x7f5c, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4dea, gbc.sp());
        EXPECT(0x7f5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 033C
        gbc.setState(0x59b7, 0x2a26, 0x4310, 0xb6cf, 0x8759, 0xc88f, 0x0, 0x1);
        gbc.writeMem(0x59b7, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2a26, gbc.sp());
        EXPECT(0x59b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 033D
        gbc.setState(0xd558, 0x6166, 0xb0f0, 0xcb27, 0x1d6a, 0xffc3, 0x0, 0x0);
        gbc.writeMem(0xd558, { 0xa0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6166, gbc.sp());
        EXPECT(0xd559, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd558));
        // A0 033E
        gbc.setState(0x95dd, 0x4b12, 0x7c90, 0x7081, 0xa946, 0x8ccc, 0x0, 0x0);
        gbc.writeMem(0x95dd, { 0xa0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4b12, gbc.sp());
        EXPECT(0x95de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x95dd));
        // A0 033F
        gbc.setState(0xb48f, 0x2605, 0xf9d0, 0x93fe, 0xc7c4, 0x5d0f, 0x0, 0x0);
        gbc.writeMem(0xb48f, { 0xa0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2605, gbc.sp());
        EXPECT(0xb490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb48f));
        // A0 0340
        gbc.setState(0xb4ba, 0x5557, 0xf370, 0xf447, 0xcaeb, 0x890f, 0x0, 0x0);
        gbc.writeMem(0xb4ba, { 0xa0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5557, gbc.sp());
        EXPECT(0xb4bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb4ba));
        // A0 0341
        gbc.setState(0x2cb9, 0x2a51, 0x110, 0x3a2, 0xee2f, 0x838a, 0x0, 0x0);
        gbc.writeMem(0x2cb9, { 0xa0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2a51, gbc.sp());
        EXPECT(0x2cba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0342
        gbc.setState(0x5108, 0xf024, 0xa080, 0xfb87, 0xede3, 0x9ce4, 0x0, 0x1);
        gbc.writeMem(0x5108, { 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf024, gbc.sp());
        EXPECT(0x5109, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0343
        gbc.setState(0xc078, 0x5726, 0xa1c0, 0xfcdf, 0x6b80, 0x61ce, 0x1, 0x0);
        gbc.writeMem(0xc078, { 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5726, gbc.sp());
        EXPECT(0xc079, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc078));
        // A0 0345
        gbc.setState(0xdb6e, 0x98b0, 0x6200, 0xfd43, 0x58f6, 0x711e, 0x1, 0x0);
        gbc.writeMem(0xdb6e, { 0xa0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x98b0, gbc.sp());
        EXPECT(0xdb6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xdb6e));
        // A0 0346
        gbc.setState(0x65f8, 0x206d, 0x1300, 0xae55, 0x4d00, 0xc9e5, 0x1, 0x1);
        gbc.writeMem(0x65f8, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x206d, gbc.sp());
        EXPECT(0x65f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0347
        gbc.setState(0x1c27, 0xd9f6, 0xee10, 0xf38e, 0xe2f2, 0x25c8, 0x1, 0x1);
        gbc.writeMem(0x1c27, { 0xa0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd9f6, gbc.sp());
        EXPECT(0x1c28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0348
        gbc.setState(0x2a6d, 0xf63d, 0x5870, 0x5e45, 0xaf44, 0xfb01, 0x0, 0x0);
        gbc.writeMem(0x2a6d, { 0xa0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf63d, gbc.sp());
        EXPECT(0x2a6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0349
        gbc.setState(0x5679, 0xb5f4, 0x4270, 0x9091, 0x5748, 0xca6f, 0x1, 0x0);
        gbc.writeMem(0x5679, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb5f4, gbc.sp());
        EXPECT(0x567a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 034A
        gbc.setState(0xcff1, 0x2b6a, 0x8a50, 0x2090, 0xecd4, 0xd7ec, 0x1, 0x0);
        gbc.writeMem(0xcff1, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2b6a, gbc.sp());
        EXPECT(0xcff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xcff1));
        // A0 034B
        gbc.setState(0x36a3, 0xbb47, 0x1fe0, 0x26f8, 0xff46, 0xc412, 0x1, 0x1);
        gbc.writeMem(0x36a3, { 0xa0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbb47, gbc.sp());
        EXPECT(0x36a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 034C
        gbc.setState(0xc45c, 0x279f, 0x2b60, 0x2b14, 0x88e7, 0x17d5, 0x0, 0x0);
        gbc.writeMem(0xc45c, { 0xa0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x279f, gbc.sp());
        EXPECT(0xc45d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc45c));
        // A0 034D
        gbc.setState(0x77c4, 0x2189, 0x49d0, 0x4e9d, 0x9af, 0xf84a, 0x0, 0x0);
        gbc.writeMem(0x77c4, { 0xa0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2189, gbc.sp());
        EXPECT(0x77c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 034E
        gbc.setState(0x6e99, 0x1c20, 0x2420, 0xc42, 0xf79d, 0x8e8f, 0x1, 0x0);
        gbc.writeMem(0x6e99, { 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1c20, gbc.sp());
        EXPECT(0x6e9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 034F
        gbc.setState(0xbb2d, 0xf534, 0xde70, 0x95b8, 0x2ad9, 0x7531, 0x0, 0x1);
        gbc.writeMem(0xbb2d, { 0xa0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf534, gbc.sp());
        EXPECT(0xbb2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xbb2d));
        // A0 0350
        gbc.setState(0x6c3b, 0x5d7d, 0x9a00, 0xf753, 0x7173, 0xf906, 0x1, 0x0);
        gbc.writeMem(0x6c3b, { 0xa0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5d7d, gbc.sp());
        EXPECT(0x6c3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0351
        gbc.setState(0x97d9, 0x4fcc, 0xd7f0, 0xdb7e, 0xae45, 0xfc2d, 0x1, 0x0);
        gbc.writeMem(0x97d9, { 0xa0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4fcc, gbc.sp());
        EXPECT(0x97da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x97d9));
        // A0 0352
        gbc.setState(0x8a68, 0x3938, 0x91a0, 0xd988, 0x3814, 0xc782, 0x1, 0x1);
        gbc.writeMem(0x8a68, { 0xa0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3938, gbc.sp());
        EXPECT(0x8a69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8a68));
        // A0 0353
        gbc.setState(0x7bac, 0xccce, 0xbc10, 0x976c, 0xbe6, 0x3aea, 0x0, 0x0);
        gbc.writeMem(0x7bac, { 0xa0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xccce, gbc.sp());
        EXPECT(0x7bad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0354
        gbc.setState(0x28af, 0x4949, 0x6c90, 0x6884, 0x16d, 0xaf73, 0x0, 0x0);
        gbc.writeMem(0x28af, { 0xa0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4949, gbc.sp());
        EXPECT(0x28b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0355
        gbc.setState(0x15ca, 0xa727, 0xff70, 0xf901, 0x5961, 0x5ade, 0x0, 0x1);
        gbc.writeMem(0x15ca, { 0xa0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa727, gbc.sp());
        EXPECT(0x15cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0356
        gbc.setState(0xbcd0, 0x26dc, 0x2160, 0x1faa, 0xbae1, 0xec0d, 0x1, 0x1);
        gbc.writeMem(0xbcd0, { 0xa0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x26dc, gbc.sp());
        EXPECT(0xbcd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xbcd0));
        // A0 0357
        gbc.setState(0xae6, 0xa84e, 0x6d90, 0x7d37, 0xa824, 0xd2cf, 0x1, 0x1);
        gbc.writeMem(0xae6, { 0xa0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa84e, gbc.sp());
        EXPECT(0xae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0358
        gbc.setState(0xdf95, 0x702a, 0x6050, 0x1cdd, 0x972a, 0xa15, 0x1, 0x1);
        gbc.writeMem(0xdf95, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x702a, gbc.sp());
        EXPECT(0xdf96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xdf95));
        // A0 0359
        gbc.setState(0xd579, 0xa0e5, 0xc390, 0x65df, 0xa70, 0xb798, 0x1, 0x1);
        gbc.writeMem(0xd579, { 0xa0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa0e5, gbc.sp());
        EXPECT(0xd57a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd579));
        // A0 035A
        gbc.setState(0x9ebd, 0xd0fa, 0x5e90, 0x7e7e, 0x1ce9, 0x8852, 0x1, 0x1);
        gbc.writeMem(0x9ebd, { 0xa0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd0fa, gbc.sp());
        EXPECT(0x9ebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9ebd));
        // A0 035B
        gbc.setState(0xeacf, 0xd908, 0x72a0, 0x79fe, 0x6fba, 0x3da7, 0x1, 0x1);
        gbc.writeMem(0xeacf, { 0xa0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd908, gbc.sp());
        EXPECT(0xead0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xeacf));
        // A0 035C
        gbc.setState(0xa9ad, 0x76b9, 0x9860, 0x7c6d, 0x1a7f, 0x47fc, 0x0, 0x0);
        gbc.writeMem(0xa9ad, { 0xa0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x76b9, gbc.sp());
        EXPECT(0xa9ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa9ad));
        // A0 035D
        gbc.setState(0x44e6, 0x5684, 0x8880, 0x46e5, 0x518, 0x241a, 0x0, 0x0);
        gbc.writeMem(0x44e6, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5684, gbc.sp());
        EXPECT(0x44e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 035E
        gbc.setState(0xd39d, 0x639a, 0x2ac0, 0xc92f, 0x33dc, 0x29b9, 0x0, 0x1);
        gbc.writeMem(0xd39d, { 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x639a, gbc.sp());
        EXPECT(0xd39e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd39d));
        // A0 035F
        gbc.setState(0xde17, 0x37a0, 0x2fe0, 0x395e, 0x3bde, 0x7fc0, 0x1, 0x0);
        gbc.writeMem(0xde17, { 0xa0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x37a0, gbc.sp());
        EXPECT(0xde18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xde17));
        // A0 0360
        gbc.setState(0xa66b, 0x218c, 0x7890, 0x7030, 0x50bd, 0x6d9a, 0x1, 0x0);
        gbc.writeMem(0xa66b, { 0xa0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x218c, gbc.sp());
        EXPECT(0xa66c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa66b));
        // A0 0361
        gbc.setState(0xa574, 0x9c7a, 0x7400, 0x6f41, 0x57a3, 0x88ce, 0x1, 0x1);
        gbc.writeMem(0xa574, { 0xa0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9c7a, gbc.sp());
        EXPECT(0xa575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa574));
        // A0 0362
        gbc.setState(0xbc9f, 0xab6d, 0x83f0, 0xaab0, 0xc796, 0xa8f6, 0x1, 0x1);
        gbc.writeMem(0xbc9f, { 0xa0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xab6d, gbc.sp());
        EXPECT(0xbca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xbc9f));
        // A0 0363
        gbc.setState(0xae85, 0xf23f, 0x8aa0, 0xb86d, 0xf4c8, 0x16bd, 0x1, 0x1);
        gbc.writeMem(0xae85, { 0xa0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf23f, gbc.sp());
        EXPECT(0xae86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xae85));
        // A0 0364
        gbc.setState(0x829b, 0x7dc6, 0x3980, 0xc379, 0xd198, 0xb2b7, 0x1, 0x0);
        gbc.writeMem(0x829b, { 0xa0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7dc6, gbc.sp());
        EXPECT(0x829c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x829b));
        // A0 0365
        gbc.setState(0x9353, 0x96ba, 0x7490, 0xaaab, 0x3b10, 0x58a3, 0x1, 0x1);
        gbc.writeMem(0x9353, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x96ba, gbc.sp());
        EXPECT(0x9354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9353));
        // A0 0366
        gbc.setState(0x884e, 0x403c, 0x86c0, 0xc470, 0x24bd, 0xb4b9, 0x1, 0x0);
        gbc.writeMem(0x884e, { 0xa0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x403c, gbc.sp());
        EXPECT(0x884f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x884e));
        // A0 0367
        gbc.setState(0x8df5, 0x2833, 0xe820, 0xcd4e, 0x3aa, 0x8e2d, 0x0, 0x0);
        gbc.writeMem(0x8df5, { 0xa0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2833, gbc.sp());
        EXPECT(0x8df6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8df5));
        // A0 0368
        gbc.setState(0xc7ea, 0x8c05, 0x5040, 0x8d43, 0x2d44, 0x76e3, 0x0, 0x1);
        gbc.writeMem(0xc7ea, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8c05, gbc.sp());
        EXPECT(0xc7eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc7ea));
        // A0 0369
        gbc.setState(0x18f, 0x2b2, 0xfd0, 0x344b, 0x78d2, 0x8451, 0x1, 0x0);
        gbc.writeMem(0x18f, { 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2b2, gbc.sp());
        EXPECT(0x190, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 036A
        gbc.setState(0xb09c, 0xd560, 0xae50, 0x36f4, 0xa2c6, 0xde2d, 0x1, 0x0);
        gbc.writeMem(0xb09c, { 0xa0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd560, gbc.sp());
        EXPECT(0xb09d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb09c));
        // A0 036B
        gbc.setState(0x8293, 0x82a3, 0xf940, 0xb44b, 0x5448, 0x829c, 0x0, 0x1);
        gbc.writeMem(0x8293, { 0xa0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x82a3, gbc.sp());
        EXPECT(0x8294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8293));
        // A0 036C
        gbc.setState(0xc22d, 0x5e84, 0xc830, 0x283d, 0x133d, 0x8c8b, 0x1, 0x0);
        gbc.writeMem(0xc22d, { 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5e84, gbc.sp());
        EXPECT(0xc22e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc22d));
        // A0 036D
        gbc.setState(0xc1d6, 0x3004, 0xba00, 0xe235, 0xc326, 0xd9ee, 0x1, 0x0);
        gbc.writeMem(0xc1d6, { 0xa0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3004, gbc.sp());
        EXPECT(0xc1d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc1d6));
        // A0 036E
        gbc.setState(0x2b74, 0xdf49, 0xe410, 0xa25d, 0x755, 0x6430, 0x1, 0x1);
        gbc.writeMem(0x2b74, { 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xdf49, gbc.sp());
        EXPECT(0x2b75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 036F
        gbc.setState(0xaf58, 0xa4d2, 0x8640, 0x668e, 0x8aa0, 0xaf7b, 0x1, 0x0);
        gbc.writeMem(0xaf58, { 0xa0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa4d2, gbc.sp());
        EXPECT(0xaf59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xaf58));
        // A0 0370
        gbc.setState(0x8df1, 0x1bc8, 0x6880, 0xf5dc, 0xddbd, 0x3b3d, 0x1, 0x0);
        gbc.writeMem(0x8df1, { 0xa0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1bc8, gbc.sp());
        EXPECT(0x8df2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8df1));
        // A0 0371
        gbc.setState(0xe5d4, 0x337f, 0x6b0, 0x63c9, 0x6e17, 0xe8b6, 0x0, 0x1);
        gbc.writeMem(0xe5d4, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x337f, gbc.sp());
        EXPECT(0xe5d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe5d4));
        // A0 0372
        gbc.setState(0xe7b8, 0x5036, 0x5080, 0x7dfa, 0xdd2e, 0x3822, 0x0, 0x1);
        gbc.writeMem(0xe7b8, { 0xa0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5036, gbc.sp());
        EXPECT(0xe7b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe7b8));
        // A0 0373
        gbc.setState(0xdf32, 0xbca2, 0x6840, 0x284c, 0xb926, 0xbcab, 0x1, 0x1);
        gbc.writeMem(0xdf32, { 0xa0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbca2, gbc.sp());
        EXPECT(0xdf33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xdf32));
        // A0 0374
        gbc.setState(0x49ae, 0x852, 0x50b0, 0xf698, 0xa4d9, 0xf6db, 0x1, 0x0);
        gbc.writeMem(0x49ae, { 0xa0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x852, gbc.sp());
        EXPECT(0x49af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0375
        gbc.setState(0xa2db, 0x4894, 0xff50, 0x6634, 0x50ba, 0xc1c3, 0x0, 0x1);
        gbc.writeMem(0xa2db, { 0xa0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4894, gbc.sp());
        EXPECT(0xa2dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa2db));
        // A0 0376
        gbc.setState(0x6fd2, 0x351c, 0xf100, 0xaefe, 0xa815, 0x878b, 0x1, 0x0);
        gbc.writeMem(0x6fd2, { 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x351c, gbc.sp());
        EXPECT(0x6fd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0377
        gbc.setState(0x18da, 0x5f93, 0x5540, 0x840b, 0x45d7, 0x185c, 0x1, 0x0);
        gbc.writeMem(0x18da, { 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5f93, gbc.sp());
        EXPECT(0x18db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0378
        gbc.setState(0x67b2, 0xa312, 0xc620, 0x560f, 0xd8b7, 0x8857, 0x0, 0x1);
        gbc.writeMem(0x67b2, { 0xa0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa312, gbc.sp());
        EXPECT(0x67b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0379
        gbc.setState(0x5e9c, 0xc77a, 0xdc00, 0x9623, 0x34b7, 0xb0e0, 0x0, 0x1);
        gbc.writeMem(0x5e9c, { 0xa0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc77a, gbc.sp());
        EXPECT(0x5e9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 037A
        gbc.setState(0xe429, 0x209c, 0xffd0, 0x180a, 0xb823, 0xc0af, 0x0, 0x1);
        gbc.writeMem(0xe429, { 0xa0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x209c, gbc.sp());
        EXPECT(0xe42a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe429));
        // A0 037B
        gbc.setState(0x22a0, 0x9a2b, 0x1330, 0x85bf, 0x1886, 0x12df, 0x0, 0x0);
        gbc.writeMem(0x22a0, { 0xa0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9a2b, gbc.sp());
        EXPECT(0x22a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 037C
        gbc.setState(0xea25, 0x20b7, 0x1380, 0x7e7d, 0xc003, 0xe345, 0x0, 0x0);
        gbc.writeMem(0xea25, { 0xa0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x20b7, gbc.sp());
        EXPECT(0xea26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xea25));
        // A0 037D
        gbc.setState(0x53ec, 0x2fc9, 0xe380, 0xa3e, 0x4387, 0x7415, 0x0, 0x0);
        gbc.writeMem(0x53ec, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2fc9, gbc.sp());
        EXPECT(0x53ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 037E
        gbc.setState(0x363, 0xade1, 0x3a70, 0x7a9, 0x41d5, 0xa876, 0x0, 0x1);
        gbc.writeMem(0x363, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xade1, gbc.sp());
        EXPECT(0x364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 037F
        gbc.setState(0x5408, 0x3f8, 0x1e90, 0x62d3, 0x62e3, 0x644c, 0x1, 0x1);
        gbc.writeMem(0x5408, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3f8, gbc.sp());
        EXPECT(0x5409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0381
        gbc.setState(0x9947, 0x6c7c, 0xf120, 0x7a4d, 0x3de9, 0xb452, 0x0, 0x1);
        gbc.writeMem(0x9947, { 0xa0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6c7c, gbc.sp());
        EXPECT(0x9948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9947));
        // A0 0382
        gbc.setState(0x39f7, 0x48b4, 0x90d0, 0x736e, 0xff58, 0x12fd, 0x0, 0x0);
        gbc.writeMem(0x39f7, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x48b4, gbc.sp());
        EXPECT(0x39f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0383
        gbc.setState(0x75e1, 0xc8ed, 0x30, 0x4a8f, 0x8f5f, 0xaf55, 0x1, 0x0);
        gbc.writeMem(0x75e1, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc8ed, gbc.sp());
        EXPECT(0x75e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0384
        gbc.setState(0xee65, 0xf4cb, 0x9130, 0xbcff, 0xe520, 0x50e3, 0x0, 0x0);
        gbc.writeMem(0xee65, { 0xa0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf4cb, gbc.sp());
        EXPECT(0xee66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xee65));
        // A0 0385
        gbc.setState(0x9116, 0x8295, 0x4400, 0x3c4c, 0xeccf, 0x2924, 0x0, 0x0);
        gbc.writeMem(0x9116, { 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8295, gbc.sp());
        EXPECT(0x9117, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9116));
        // A0 0386
        gbc.setState(0xc9e5, 0x2b0b, 0x4120, 0x3b90, 0xa52d, 0x7076, 0x0, 0x0);
        gbc.writeMem(0xc9e5, { 0xa0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2b0b, gbc.sp());
        EXPECT(0xc9e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc9e5));
        // A0 0387
        gbc.setState(0x5859, 0x48fe, 0xebf0, 0x86d1, 0x482d, 0x48f9, 0x1, 0x0);
        gbc.writeMem(0x5859, { 0xa0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x48fe, gbc.sp());
        EXPECT(0x585a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0388
        gbc.setState(0xa2bf, 0xe907, 0xf210, 0x1d0f, 0x9646, 0x360b, 0x0, 0x1);
        gbc.writeMem(0xa2bf, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe907, gbc.sp());
        EXPECT(0xa2c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa2bf));
        // A0 0389
        gbc.setState(0xafa4, 0x8cf5, 0x1fc0, 0x62c, 0xa3a7, 0xc892, 0x0, 0x0);
        gbc.writeMem(0xafa4, { 0xa0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x8cf5, gbc.sp());
        EXPECT(0xafa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xafa4));
        // A0 038A
        gbc.setState(0xd99a, 0xecbd, 0x68f0, 0xb14a, 0x1386, 0x39d3, 0x0, 0x1);
        gbc.writeMem(0xd99a, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xecbd, gbc.sp());
        EXPECT(0xd99b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd99a));
        // A0 038B
        gbc.setState(0x1adf, 0x801a, 0xc8e0, 0x75bc, 0x9ee6, 0x4d7e, 0x1, 0x1);
        gbc.writeMem(0x1adf, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x801a, gbc.sp());
        EXPECT(0x1ae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 038C
        gbc.setState(0x916e, 0x79be, 0x7a40, 0x2cc9, 0xfc14, 0xf212, 0x1, 0x0);
        gbc.writeMem(0x916e, { 0xa0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x79be, gbc.sp());
        EXPECT(0x916f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x916e));
        // A0 038D
        gbc.setState(0x3bb7, 0xe69, 0xca50, 0x6cb4, 0x1532, 0xbd48, 0x1, 0x0);
        gbc.writeMem(0x3bb7, { 0xa0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe69, gbc.sp());
        EXPECT(0x3bb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 038E
        gbc.setState(0xc28f, 0x8ef2, 0x62f0, 0x21ef, 0xdc8f, 0x677e, 0x1, 0x0);
        gbc.writeMem(0xc28f, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8ef2, gbc.sp());
        EXPECT(0xc290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc28f));
        // A0 038F
        gbc.setState(0x5d68, 0xdfbe, 0xe600, 0x9708, 0x6775, 0x3590, 0x0, 0x0);
        gbc.writeMem(0x5d68, { 0xa0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xdfbe, gbc.sp());
        EXPECT(0x5d69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0390
        gbc.setState(0xf3b, 0xf452, 0x21f0, 0xb416, 0xf1f9, 0xf0fd, 0x0, 0x1);
        gbc.writeMem(0xf3b, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf452, gbc.sp());
        EXPECT(0xf3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0391
        gbc.setState(0x6faa, 0xad83, 0xdb60, 0xf72, 0x2066, 0x7655, 0x0, 0x1);
        gbc.writeMem(0x6faa, { 0xa0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xad83, gbc.sp());
        EXPECT(0x6fab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0392
        gbc.setState(0x8a0e, 0x28b6, 0x70d0, 0xcaf7, 0xc211, 0xc09b, 0x1, 0x1);
        gbc.writeMem(0x8a0e, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x28b6, gbc.sp());
        EXPECT(0x8a0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8a0e));
        // A0 0393
        gbc.setState(0x62a6, 0x9dc4, 0x5530, 0xa44d, 0xb5bc, 0xad9a, 0x1, 0x0);
        gbc.writeMem(0x62a6, { 0xa0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9dc4, gbc.sp());
        EXPECT(0x62a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0394
        gbc.setState(0xc0f9, 0x85f, 0xd010, 0xbc2f, 0x2822, 0xf555, 0x1, 0x0);
        gbc.writeMem(0xc0f9, { 0xa0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x85f, gbc.sp());
        EXPECT(0xc0fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc0f9));
        // A0 0395
        gbc.setState(0x9c4c, 0xae5d, 0x1290, 0x2b4d, 0x380d, 0x48f4, 0x0, 0x0);
        gbc.writeMem(0x9c4c, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xae5d, gbc.sp());
        EXPECT(0x9c4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9c4c));
        // A0 0396
        gbc.setState(0x85df, 0xff65, 0xa500, 0xcc61, 0x48bb, 0x49e7, 0x1, 0x0);
        gbc.writeMem(0x85df, { 0xa0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xff65, gbc.sp());
        EXPECT(0x85e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x85df));
        // A0 0397
        gbc.setState(0x5988, 0x1dc3, 0x4c10, 0xfe4d, 0x5757, 0xabe0, 0x0, 0x0);
        gbc.writeMem(0x5988, { 0xa0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1dc3, gbc.sp());
        EXPECT(0x5989, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 0398
        gbc.setState(0xb952, 0x76df, 0xc3f0, 0xfe2e, 0x353f, 0x193a, 0x0, 0x1);
        gbc.writeMem(0xb952, { 0xa0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x76df, gbc.sp());
        EXPECT(0xb953, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb952));
        // A0 0399
        gbc.setState(0x6223, 0xe83c, 0x7e60, 0xec9f, 0xae3b, 0xef60, 0x0, 0x0);
        gbc.writeMem(0x6223, { 0xa0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe83c, gbc.sp());
        EXPECT(0x6224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 039A
        gbc.setState(0x3780, 0x172, 0xb4e0, 0xea24, 0x4e5c, 0xbf6b, 0x0, 0x1);
        gbc.writeMem(0x3780, { 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x172, gbc.sp());
        EXPECT(0x3781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 039B
        gbc.setState(0x74ca, 0x4d39, 0x44d0, 0xd620, 0x47ae, 0x3928, 0x0, 0x1);
        gbc.writeMem(0x74ca, { 0xa0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4d39, gbc.sp());
        EXPECT(0x74cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 039C
        gbc.setState(0xcded, 0x367a, 0x40, 0x2c62, 0x2ef8, 0x4153, 0x1, 0x0);
        gbc.writeMem(0xcded, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x367a, gbc.sp());
        EXPECT(0xcdee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xcded));
        // A0 039D
        gbc.setState(0xdb16, 0x7b45, 0x8520, 0xfb04, 0x29af, 0x5781, 0x1, 0x1);
        gbc.writeMem(0xdb16, { 0xa0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7b45, gbc.sp());
        EXPECT(0xdb17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xdb16));
        // A0 039E
        gbc.setState(0xcdcb, 0x4c0c, 0xc3e0, 0x32f0, 0x3aa7, 0xeea5, 0x0, 0x1);
        gbc.writeMem(0xcdcb, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4c0c, gbc.sp());
        EXPECT(0xcdcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xcdcb));
        // A0 039F
        gbc.setState(0x7898, 0xaf00, 0xd20, 0xa27e, 0xf9d4, 0xe7d, 0x1, 0x0);
        gbc.writeMem(0x7898, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xaf00, gbc.sp());
        EXPECT(0x7899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03A0
        gbc.setState(0xa0a0, 0x8599, 0xd8f0, 0xd511, 0xf049, 0xb230, 0x0, 0x0);
        gbc.writeMem(0xa0a0, { 0xa0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8599, gbc.sp());
        EXPECT(0xa0a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa0a0));
        // A0 03A2
        gbc.setState(0x7541, 0x5176, 0x3750, 0xd032, 0x5602, 0xff49, 0x1, 0x0);
        gbc.writeMem(0x7541, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5176, gbc.sp());
        EXPECT(0x7542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03A3
        gbc.setState(0x2925, 0xe33a, 0x8450, 0x2a97, 0x565f, 0x4ab5, 0x0, 0x0);
        gbc.writeMem(0x2925, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe33a, gbc.sp());
        EXPECT(0x2926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03A5
        gbc.setState(0xebc5, 0xeabf, 0x6de0, 0x3ca1, 0x1e6a, 0xe6a, 0x1, 0x1);
        gbc.writeMem(0xebc5, { 0xa0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xeabf, gbc.sp());
        EXPECT(0xebc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xebc5));
        // A0 03A6
        gbc.setState(0x4ac6, 0x9c02, 0xb4e0, 0x5f9b, 0x399a, 0x956c, 0x1, 0x0);
        gbc.writeMem(0x4ac6, { 0xa0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9c02, gbc.sp());
        EXPECT(0x4ac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03A7
        gbc.setState(0xd1d2, 0xbc5, 0xb460, 0xb14b, 0x58, 0x7194, 0x1, 0x1);
        gbc.writeMem(0xd1d2, { 0xa0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbc5, gbc.sp());
        EXPECT(0xd1d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd1d2));
        // A0 03A8
        gbc.setState(0x6733, 0x7c4b, 0xd140, 0x9b8c, 0x614c, 0xded7, 0x0, 0x1);
        gbc.writeMem(0x6733, { 0xa0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7c4b, gbc.sp());
        EXPECT(0x6734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03A9
        gbc.setState(0x216f, 0x12ea, 0xf460, 0xced0, 0xa645, 0x3478, 0x0, 0x0);
        gbc.writeMem(0x216f, { 0xa0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x12ea, gbc.sp());
        EXPECT(0x2170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03AA
        gbc.setState(0xad8d, 0x78f7, 0xf510, 0x6f07, 0x2aa, 0xdb2f, 0x0, 0x0);
        gbc.writeMem(0xad8d, { 0xa0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x78f7, gbc.sp());
        EXPECT(0xad8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xad8d));
        // A0 03AC
        gbc.setState(0x26b0, 0x6f4e, 0x9150, 0xf712, 0xbabe, 0xd019, 0x0, 0x1);
        gbc.writeMem(0x26b0, { 0xa0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6f4e, gbc.sp());
        EXPECT(0x26b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03AD
        gbc.setState(0x69e6, 0x17f2, 0xd5f0, 0xc6c2, 0x5153, 0x7d0e, 0x0, 0x0);
        gbc.writeMem(0x69e6, { 0xa0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x17f2, gbc.sp());
        EXPECT(0x69e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03AE
        gbc.setState(0xa145, 0xab9, 0x8810, 0x78bc, 0x8603, 0xadb8, 0x1, 0x0);
        gbc.writeMem(0xa145, { 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xab9, gbc.sp());
        EXPECT(0xa146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa145));
        // A0 03AF
        gbc.setState(0x7ee5, 0xa259, 0x32a0, 0x4dba, 0x5e65, 0xbd6d, 0x1, 0x0);
        gbc.writeMem(0x7ee5, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa259, gbc.sp());
        EXPECT(0x7ee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03B0
        gbc.setState(0x9201, 0x6a70, 0xe0e0, 0xcfd, 0x8b6, 0x7e7a, 0x1, 0x0);
        gbc.writeMem(0x9201, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6a70, gbc.sp());
        EXPECT(0x9202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9201));
        // A0 03B1
        gbc.setState(0x7d26, 0xa8a7, 0xf580, 0xdad3, 0x774a, 0x7557, 0x1, 0x0);
        gbc.writeMem(0x7d26, { 0xa0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa8a7, gbc.sp());
        EXPECT(0x7d27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03B3
        gbc.setState(0xb10f, 0x4017, 0xe6d0, 0x2022, 0x256b, 0xe43a, 0x0, 0x1);
        gbc.writeMem(0xb10f, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4017, gbc.sp());
        EXPECT(0xb110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb10f));
        // A0 03B4
        gbc.setState(0x7d26, 0xde5a, 0x1f30, 0x791e, 0x7f27, 0x6d1d, 0x1, 0x0);
        gbc.writeMem(0x7d26, { 0xa0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xde5a, gbc.sp());
        EXPECT(0x7d27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03B5
        gbc.setState(0x3459, 0x4fc3, 0xd0d0, 0x45c8, 0xebf9, 0x173a, 0x1, 0x1);
        gbc.writeMem(0x3459, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4fc3, gbc.sp());
        EXPECT(0x345a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03B6
        gbc.setState(0x18c5, 0xf5de, 0x1a80, 0x43a9, 0x2023, 0x7bdb, 0x0, 0x0);
        gbc.writeMem(0x18c5, { 0xa0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf5de, gbc.sp());
        EXPECT(0x18c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03B7
        gbc.setState(0xdb82, 0xc9c4, 0x370, 0x6894, 0x2a97, 0xb8fc, 0x0, 0x0);
        gbc.writeMem(0xdb82, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc9c4, gbc.sp());
        EXPECT(0xdb83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xdb82));
        // A0 03B8
        gbc.setState(0x68f, 0xfffe, 0xeae0, 0xba74, 0x6a85, 0xc530, 0x0, 0x0);
        gbc.writeMem(0x68f, { 0xa0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xfffe, gbc.sp());
        EXPECT(0x690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03B9
        gbc.setState(0x6245, 0x5ab6, 0x7b20, 0x1410, 0x37fb, 0x7cb6, 0x0, 0x0);
        gbc.writeMem(0x6245, { 0xa0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5ab6, gbc.sp());
        EXPECT(0x6246, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03BA
        gbc.setState(0x90d8, 0xc486, 0x1d80, 0xcc29, 0x9159, 0x1f7d, 0x0, 0x0);
        gbc.writeMem(0x90d8, { 0xa0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc486, gbc.sp());
        EXPECT(0x90d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x90d8));
        // A0 03BB
        gbc.setState(0x90f4, 0xd0a0, 0xb510, 0x1f70, 0x7506, 0x8053, 0x0, 0x0);
        gbc.writeMem(0x90f4, { 0xa0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd0a0, gbc.sp());
        EXPECT(0x90f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x90f4));
        // A0 03BC
        gbc.setState(0xbf0e, 0x9312, 0x8e50, 0xbc2, 0x89ef, 0xc25a, 0x0, 0x0);
        gbc.writeMem(0xbf0e, { 0xa0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9312, gbc.sp());
        EXPECT(0xbf0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xbf0e));
        // A0 03BD
        gbc.setState(0x852e, 0xea0e, 0x73d0, 0xb72a, 0xe56f, 0xcdb, 0x1, 0x0);
        gbc.writeMem(0x852e, { 0xa0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xea0e, gbc.sp());
        EXPECT(0x852f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x852e));
        // A0 03BE
        gbc.setState(0xd35b, 0xc99e, 0x4c50, 0xb138, 0x8b45, 0x5f1f, 0x1, 0x1);
        gbc.writeMem(0xd35b, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc99e, gbc.sp());
        EXPECT(0xd35c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd35b));
        // A0 03BF
        gbc.setState(0x7242, 0xf7cb, 0xb4b0, 0x6962, 0x1cf, 0x4d32, 0x0, 0x1);
        gbc.writeMem(0x7242, { 0xa0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf7cb, gbc.sp());
        EXPECT(0x7243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03C0
        gbc.setState(0xa385, 0x6a4, 0x7be0, 0x2e3d, 0xcef2, 0x7fa4, 0x0, 0x1);
        gbc.writeMem(0xa385, { 0xa0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6a4, gbc.sp());
        EXPECT(0xa386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa385));
        // A0 03C1
        gbc.setState(0x691d, 0x1b0d, 0x37c0, 0x4baf, 0xcdbe, 0x285f, 0x0, 0x0);
        gbc.writeMem(0x691d, { 0xa0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1b0d, gbc.sp());
        EXPECT(0x691e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03C2
        gbc.setState(0x5817, 0x4d, 0xcc00, 0xc770, 0x9c27, 0xcb77, 0x1, 0x0);
        gbc.writeMem(0x5817, { 0xa0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4d, gbc.sp());
        EXPECT(0x5818, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03C4
        gbc.setState(0xafa9, 0xc50, 0x62c0, 0xdd72, 0xc721, 0xf95, 0x1, 0x1);
        gbc.writeMem(0xafa9, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc50, gbc.sp());
        EXPECT(0xafaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xafa9));
        // A0 03C5
        gbc.setState(0xb8e8, 0x8216, 0x9d30, 0xb799, 0xec2c, 0xf1a6, 0x0, 0x1);
        gbc.writeMem(0xb8e8, { 0xa0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8216, gbc.sp());
        EXPECT(0xb8e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb8e8));
        // A0 03C6
        gbc.setState(0xbe98, 0x6873, 0xe190, 0xa9b1, 0xb04b, 0xa0e4, 0x0, 0x0);
        gbc.writeMem(0xbe98, { 0xa0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6873, gbc.sp());
        EXPECT(0xbe99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xbe98));
        // A0 03C7
        gbc.setState(0x95ea, 0xeadb, 0xce30, 0xd616, 0x21f6, 0xf92, 0x1, 0x0);
        gbc.writeMem(0x95ea, { 0xa0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xeadb, gbc.sp());
        EXPECT(0x95eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x95ea));
        // A0 03C8
        gbc.setState(0xd263, 0x5c33, 0x9980, 0x1dc0, 0xbf73, 0xc32, 0x0, 0x0);
        gbc.writeMem(0xd263, { 0xa0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5c33, gbc.sp());
        EXPECT(0xd264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd263));
        // A0 03C9
        gbc.setState(0xc7bd, 0x30f2, 0x8310, 0xd308, 0xaaa5, 0xa431, 0x1, 0x1);
        gbc.writeMem(0xc7bd, { 0xa0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x30f2, gbc.sp());
        EXPECT(0xc7be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc7bd));
        // A0 03CA
        gbc.setState(0xa4c5, 0xd606, 0x5fa0, 0x91ae, 0x2bd4, 0xc6ad, 0x1, 0x1);
        gbc.writeMem(0xa4c5, { 0xa0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd606, gbc.sp());
        EXPECT(0xa4c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa4c5));
        // A0 03CB
        gbc.setState(0x4d22, 0xb05d, 0xba90, 0xdd97, 0xc977, 0xbaf6, 0x1, 0x0);
        gbc.writeMem(0x4d22, { 0xa0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb05d, gbc.sp());
        EXPECT(0x4d23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03CC
        gbc.setState(0xef35, 0x8bf, 0x2610, 0x8029, 0x9b53, 0x5a74, 0x1, 0x1);
        gbc.writeMem(0xef35, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8bf, gbc.sp());
        EXPECT(0xef36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xef35));
        // A0 03CD
        gbc.setState(0x599c, 0x31bc, 0x1790, 0x33d5, 0xa19c, 0x494b, 0x1, 0x0);
        gbc.writeMem(0x599c, { 0xa0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x31bc, gbc.sp());
        EXPECT(0x599d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03CF
        gbc.setState(0x2861, 0x2e88, 0x1060, 0x8fd9, 0x8465, 0x1dfd, 0x0, 0x0);
        gbc.writeMem(0x2861, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2e88, gbc.sp());
        EXPECT(0x2862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03D0
        gbc.setState(0xe8ba, 0x3f75, 0x6f70, 0x158e, 0xa492, 0xd1ab, 0x0, 0x1);
        gbc.writeMem(0xe8ba, { 0xa0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3f75, gbc.sp());
        EXPECT(0xe8bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe8ba));
        // A0 03D1
        gbc.setState(0xb431, 0x9b34, 0xfa0, 0x2e03, 0x5c8c, 0x1020, 0x1, 0x1);
        gbc.writeMem(0xb431, { 0xa0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9b34, gbc.sp());
        EXPECT(0xb432, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb431));
        // A0 03D2
        gbc.setState(0xcf64, 0x2917, 0x1c60, 0x6ac6, 0xc556, 0xd6ad, 0x1, 0x0);
        gbc.writeMem(0xcf64, { 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2917, gbc.sp());
        EXPECT(0xcf65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xcf64));
        // A0 03D3
        gbc.setState(0x6e19, 0x281d, 0xa4d0, 0x2f30, 0x1c87, 0x434d, 0x1, 0x0);
        gbc.writeMem(0x6e19, { 0xa0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x281d, gbc.sp());
        EXPECT(0x6e1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03D5
        gbc.setState(0xa084, 0xc1fb, 0x4e10, 0xc742, 0x764e, 0xac0, 0x0, 0x0);
        gbc.writeMem(0xa084, { 0xa0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc1fb, gbc.sp());
        EXPECT(0xa085, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa084));
        // A0 03D6
        gbc.setState(0xe25, 0x8ce4, 0x2b40, 0x1312, 0x3dfa, 0x7ada, 0x1, 0x1);
        gbc.writeMem(0xe25, { 0xa0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8ce4, gbc.sp());
        EXPECT(0xe26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03D7
        gbc.setState(0x2d80, 0x2d05, 0x9690, 0x60f, 0x564e, 0x84bd, 0x1, 0x0);
        gbc.writeMem(0x2d80, { 0xa0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2d05, gbc.sp());
        EXPECT(0x2d81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03D8
        gbc.setState(0x7ba9, 0xa66d, 0x3490, 0xe57f, 0x5417, 0x483b, 0x0, 0x1);
        gbc.writeMem(0x7ba9, { 0xa0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa66d, gbc.sp());
        EXPECT(0x7baa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03D9
        gbc.setState(0xce36, 0xf87f, 0x3ec0, 0x691b, 0x4625, 0x8b07, 0x1, 0x0);
        gbc.writeMem(0xce36, { 0xa0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf87f, gbc.sp());
        EXPECT(0xce37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xce36));
        // A0 03DA
        gbc.setState(0xe5ce, 0x9375, 0x4770, 0xca82, 0x9105, 0x1dce, 0x1, 0x0);
        gbc.writeMem(0xe5ce, { 0xa0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9375, gbc.sp());
        EXPECT(0xe5cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe5ce));
        // A0 03DB
        gbc.setState(0x2aff, 0x84cf, 0x8f60, 0x88e5, 0x7450, 0x247b, 0x1, 0x1);
        gbc.writeMem(0x2aff, { 0xa0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x84cf, gbc.sp());
        EXPECT(0x2b00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03DC
        gbc.setState(0xc763, 0x7d0, 0xf930, 0xa5d, 0xeddf, 0x3428, 0x0, 0x1);
        gbc.writeMem(0xc763, { 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7d0, gbc.sp());
        EXPECT(0xc764, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc763));
        // A0 03DD
        gbc.setState(0x120f, 0xb81b, 0x49c0, 0xf45d, 0x29c8, 0xee86, 0x1, 0x1);
        gbc.writeMem(0x120f, { 0xa0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb81b, gbc.sp());
        EXPECT(0x1210, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03DE
        gbc.setState(0x356d, 0x1e21, 0xe0f0, 0x7989, 0x3e2f, 0xd9ac, 0x1, 0x1);
        gbc.writeMem(0x356d, { 0xa0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1e21, gbc.sp());
        EXPECT(0x356e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03DF
        gbc.setState(0x671e, 0x46f6, 0x71c0, 0xd83e, 0x61e0, 0x130a, 0x1, 0x1);
        gbc.writeMem(0x671e, { 0xa0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x46f6, gbc.sp());
        EXPECT(0x671f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03E0
        gbc.setState(0xc3b8, 0x84cc, 0x6100, 0xcde3, 0x7191, 0x5be7, 0x1, 0x0);
        gbc.writeMem(0xc3b8, { 0xa0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x84cc, gbc.sp());
        EXPECT(0xc3b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc3b8));
        // A0 03E1
        gbc.setState(0x1582, 0x5795, 0x1be0, 0xcf00, 0x589c, 0x4181, 0x0, 0x1);
        gbc.writeMem(0x1582, { 0xa0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x5795, gbc.sp());
        EXPECT(0x1583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03E2
        gbc.setState(0xdb1e, 0xc518, 0xf240, 0x3ff0, 0x981b, 0x8c1f, 0x0, 0x0);
        gbc.writeMem(0xdb1e, { 0xa0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc518, gbc.sp());
        EXPECT(0xdb1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xdb1e));
        // A0 03E3
        gbc.setState(0x4436, 0xb813, 0x8860, 0x584a, 0xcb2d, 0xd857, 0x0, 0x0);
        gbc.writeMem(0x4436, { 0xa0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb813, gbc.sp());
        EXPECT(0x4437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03E4
        gbc.setState(0xceee, 0x40c9, 0xd9d0, 0xfe9, 0xfd5f, 0x6c3d, 0x1, 0x1);
        gbc.writeMem(0xceee, { 0xa0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x40c9, gbc.sp());
        EXPECT(0xceef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xceee));
        // A0 03E5
        gbc.setState(0x58fa, 0x7c2a, 0x7f90, 0xed59, 0xc05a, 0xfb10, 0x1, 0x0);
        gbc.writeMem(0x58fa, { 0xa0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7c2a, gbc.sp());
        EXPECT(0x58fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A0 03E6
        gbc.setState(0xc5db, 0xbddc, 0x5050, 0x9d, 0xd48e, 0xe3dc, 0x1, 0x1);
        gbc.writeMem(0xc5db, { 0xa0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xbddc, gbc.sp());
        EXPECT(0xc5dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc5db));
        // A0 03E7
        gbc.setState(0xc114, 0xfd16, 0x43c0, 0xbda2, 0x47e4, 0xaba4, 0x1, 0x1);
        gbc.writeMem(0xc114, { 0xa0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xfd16, gbc.sp());
        EXPECT(0xc115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc114));
    }
