    TEST(gbcemu, opcode_cb_01) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 01 0000
        gbc.setState(0x99f8, 0x4c30, 0xf150, 0x94d3, 0xfe29, 0xdfe0, 0x1, 0x0);
        gbc.writeMem(0x99f8, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4c30, gbc.sp());
        EXPECT(0x99fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99f8));
        EXPECT(0x1, gbc.readMem(0x99f9));
        // CB 01 0001
        gbc.setState(0xddd4, 0x4a26, 0x6b30, 0xfdf2, 0xc418, 0xd622, 0x1, 0x0);
        gbc.writeMem(0xddd4, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4a26, gbc.sp());
        EXPECT(0xddd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddd4));
        EXPECT(0x1, gbc.readMem(0xddd5));
        // CB 01 0002
        gbc.setState(0xdcf9, 0x88d4, 0xaf40, 0xed27, 0x14f0, 0x33f5, 0x0, 0x1);
        gbc.writeMem(0xdcf9, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x88d4, gbc.sp());
        EXPECT(0xdcfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcf9));
        EXPECT(0x1, gbc.readMem(0xdcfa));
        // CB 01 0003
        gbc.setState(0xb8c, 0x844e, 0xe1b0, 0x9103, 0x4b39, 0x7c12, 0x0, 0x0);
        gbc.writeMem(0xb8c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x844e, gbc.sp());
        EXPECT(0xb8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0004
        gbc.setState(0x6f8, 0x8ea8, 0xecd0, 0xcc9, 0xb69a, 0x6896, 0x0, 0x1);
        gbc.writeMem(0x6f8, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8ea8, gbc.sp());
        EXPECT(0x6fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0005
        gbc.setState(0x8153, 0x3f15, 0x9df0, 0x22a6, 0x732f, 0x704d, 0x1, 0x0);
        gbc.writeMem(0x8153, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3f15, gbc.sp());
        EXPECT(0x8155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8153));
        EXPECT(0x1, gbc.readMem(0x8154));
        // CB 01 0006
        gbc.setState(0xb151, 0xb3a, 0x9670, 0xf3d9, 0x6c79, 0x265f, 0x1, 0x1);
        gbc.writeMem(0xb151, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb3a, gbc.sp());
        EXPECT(0xb153, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb151));
        EXPECT(0x1, gbc.readMem(0xb152));
        // CB 01 0007
        gbc.setState(0xd78a, 0x552c, 0x3ba0, 0xdc42, 0x7e53, 0xb533, 0x1, 0x0);
        gbc.writeMem(0xd78a, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x552c, gbc.sp());
        EXPECT(0xd78c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd78a));
        EXPECT(0x1, gbc.readMem(0xd78b));
        // CB 01 0008
        gbc.setState(0x27b1, 0xbdb0, 0xcaa0, 0x9be6, 0xeff6, 0xe219, 0x1, 0x1);
        gbc.writeMem(0x27b1, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xbdb0, gbc.sp());
        EXPECT(0x27b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 000A
        gbc.setState(0x5963, 0x1bd0, 0xc9a0, 0x244a, 0xe80f, 0x85eb, 0x1, 0x1);
        gbc.writeMem(0x5963, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1bd0, gbc.sp());
        EXPECT(0x5965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 000B
        gbc.setState(0x54ab, 0x9436, 0x5fd0, 0x4923, 0x2009, 0xa0ea, 0x1, 0x1);
        gbc.writeMem(0x54ab, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9436, gbc.sp());
        EXPECT(0x54ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 000C
        gbc.setState(0xa496, 0x9b88, 0x8e30, 0x7086, 0x63c6, 0x218e, 0x0, 0x0);
        gbc.writeMem(0xa496, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9b88, gbc.sp());
        EXPECT(0xa498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa496));
        EXPECT(0x1, gbc.readMem(0xa497));
        // CB 01 000D
        gbc.setState(0x1bd0, 0xd33e, 0xf850, 0x6cbe, 0x1034, 0xd9b0, 0x0, 0x0);
        gbc.writeMem(0x1bd0, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd33e, gbc.sp());
        EXPECT(0x1bd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 000E
        gbc.setState(0xde80, 0xa10e, 0x89c0, 0xce3, 0x8027, 0xcf0a, 0x1, 0x0);
        gbc.writeMem(0xde80, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa10e, gbc.sp());
        EXPECT(0xde82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde80));
        EXPECT(0x1, gbc.readMem(0xde81));
        // CB 01 000F
        gbc.setState(0x2cbf, 0x7631, 0x22c0, 0x56f, 0xa819, 0x38c3, 0x1, 0x1);
        gbc.writeMem(0x2cbf, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7631, gbc.sp());
        EXPECT(0x2cc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0010
        gbc.setState(0x7726, 0x3fcf, 0x3940, 0xe177, 0x6d13, 0x502d, 0x1, 0x1);
        gbc.writeMem(0x7726, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3fcf, gbc.sp());
        EXPECT(0x7728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0011
        gbc.setState(0x6397, 0xca94, 0x74f0, 0xc560, 0xac9b, 0xfb1b, 0x0, 0x0);
        gbc.writeMem(0x6397, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xca94, gbc.sp());
        EXPECT(0x6399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0012
        gbc.setState(0x4696, 0x4898, 0xd150, 0x9ad7, 0xf3c4, 0xc9d7, 0x1, 0x1);
        gbc.writeMem(0x4696, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4898, gbc.sp());
        EXPECT(0x4698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0013
        gbc.setState(0x5061, 0xc044, 0x12d0, 0xcd37, 0xc025, 0x998e, 0x1, 0x1);
        gbc.writeMem(0x5061, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc044, gbc.sp());
        EXPECT(0x5063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0014
        gbc.setState(0x1e64, 0xb315, 0x1620, 0x1c0b, 0x4d27, 0x6e05, 0x1, 0x1);
        gbc.writeMem(0x1e64, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb315, gbc.sp());
        EXPECT(0x1e66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0015
        gbc.setState(0xe25d, 0x40f2, 0x4b10, 0xd0e3, 0xfb1e, 0xf238, 0x1, 0x0);
        gbc.writeMem(0xe25d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x40f2, gbc.sp());
        EXPECT(0xe25f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe25d));
        EXPECT(0x1, gbc.readMem(0xe25e));
        // CB 01 0016
        gbc.setState(0x514b, 0x35f5, 0xf140, 0xa260, 0x89dd, 0x9e2c, 0x1, 0x0);
        gbc.writeMem(0x514b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x35f5, gbc.sp());
        EXPECT(0x514d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0017
        gbc.setState(0xd74d, 0xf967, 0xa100, 0x5d5e, 0x9e97, 0x5bd, 0x1, 0x0);
        gbc.writeMem(0xd74d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf967, gbc.sp());
        EXPECT(0xd74f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd74d));
        EXPECT(0x1, gbc.readMem(0xd74e));
        // CB 01 0018
        gbc.setState(0x5708, 0x8b4f, 0x7640, 0x8366, 0x4235, 0xb139, 0x0, 0x1);
        gbc.writeMem(0x5708, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8b4f, gbc.sp());
        EXPECT(0x570a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0019
        gbc.setState(0xa988, 0x48cb, 0x8050, 0x4bab, 0xc49e, 0x9a2d, 0x0, 0x1);
        gbc.writeMem(0xa988, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x48cb, gbc.sp());
        EXPECT(0xa98a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa988));
        EXPECT(0x1, gbc.readMem(0xa989));
        // CB 01 001A
        gbc.setState(0x8090, 0x130b, 0x6b40, 0xb123, 0xe731, 0x4655, 0x0, 0x1);
        gbc.writeMem(0x8090, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x130b, gbc.sp());
        EXPECT(0x8092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8090));
        EXPECT(0x1, gbc.readMem(0x8091));
        // CB 01 001B
        gbc.setState(0xcf6f, 0x8a8, 0x2800, 0xf8cb, 0x1fd5, 0x9e74, 0x1, 0x1);
        gbc.writeMem(0xcf6f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8a8, gbc.sp());
        EXPECT(0xcf71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf6f));
        EXPECT(0x1, gbc.readMem(0xcf70));
        // CB 01 001D
        gbc.setState(0xde1e, 0xd48d, 0xdd20, 0xbaae, 0x25ee, 0x2a0a, 0x0, 0x1);
        gbc.writeMem(0xde1e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd48d, gbc.sp());
        EXPECT(0xde20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde1e));
        EXPECT(0x1, gbc.readMem(0xde1f));
        // CB 01 001E
        gbc.setState(0x2ce6, 0x22d, 0xba00, 0x9b99, 0x124d, 0xdbec, 0x0, 0x1);
        gbc.writeMem(0x2ce6, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x22d, gbc.sp());
        EXPECT(0x2ce8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 001F
        gbc.setState(0x6f95, 0xf826, 0x2270, 0xf70c, 0x92e9, 0x5d53, 0x0, 0x1);
        gbc.writeMem(0x6f95, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf826, gbc.sp());
        EXPECT(0x6f97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0020
        gbc.setState(0x341c, 0xff54, 0x9630, 0x6568, 0xebbc, 0xb8f6, 0x0, 0x1);
        gbc.writeMem(0x341c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xff54, gbc.sp());
        EXPECT(0x341e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0021
        gbc.setState(0x5397, 0x5298, 0xa700, 0x1e38, 0xb165, 0xd1d9, 0x1, 0x0);
        gbc.writeMem(0x5397, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5298, gbc.sp());
        EXPECT(0x5399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0022
        gbc.setState(0x4673, 0x3874, 0xf970, 0x9746, 0xfd62, 0x7127, 0x1, 0x0);
        gbc.writeMem(0x4673, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3874, gbc.sp());
        EXPECT(0x4675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0024
        gbc.setState(0xc6c1, 0xc540, 0x6330, 0xa593, 0x5a5d, 0x5b68, 0x1, 0x0);
        gbc.writeMem(0xc6c1, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc540, gbc.sp());
        EXPECT(0xc6c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6c1));
        EXPECT(0x1, gbc.readMem(0xc6c2));
        // CB 01 0025
        gbc.setState(0x274b, 0x6711, 0xeaf0, 0x5c40, 0xd579, 0x457c, 0x1, 0x0);
        gbc.writeMem(0x274b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6711, gbc.sp());
        EXPECT(0x274d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0026
        gbc.setState(0xe886, 0xe7ba, 0x2de0, 0x2f0c, 0x6c3b, 0xedc0, 0x0, 0x1);
        gbc.writeMem(0xe886, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe7ba, gbc.sp());
        EXPECT(0xe888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe886));
        EXPECT(0x1, gbc.readMem(0xe887));
        // CB 01 0027
        gbc.setState(0xb3e0, 0x2c09, 0xf060, 0x18ac, 0xf327, 0x8a80, 0x0, 0x1);
        gbc.writeMem(0xb3e0, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2c09, gbc.sp());
        EXPECT(0xb3e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3e0));
        EXPECT(0x1, gbc.readMem(0xb3e1));
        // CB 01 0028
        gbc.setState(0x4a13, 0xa445, 0xd310, 0x9cf2, 0x9009, 0xb2a0, 0x0, 0x0);
        gbc.writeMem(0x4a13, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa445, gbc.sp());
        EXPECT(0x4a15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0029
        gbc.setState(0x7059, 0x3c11, 0x3620, 0x1865, 0x332, 0x9444, 0x0, 0x1);
        gbc.writeMem(0x7059, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3c11, gbc.sp());
        EXPECT(0x705b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 002A
        gbc.setState(0x1a5, 0xc157, 0xacd0, 0x19d1, 0x173d, 0xd96c, 0x1, 0x1);
        gbc.writeMem(0x1a5, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc157, gbc.sp());
        EXPECT(0x1a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 002B
        gbc.setState(0x650f, 0x4add, 0x5590, 0x96dc, 0x3522, 0x8746, 0x0, 0x0);
        gbc.writeMem(0x650f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4add, gbc.sp());
        EXPECT(0x6511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 002C
        gbc.setState(0x8679, 0xbf7e, 0x35d0, 0x646d, 0x7e5e, 0x9f64, 0x0, 0x1);
        gbc.writeMem(0x8679, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xbf7e, gbc.sp());
        EXPECT(0x867b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8679));
        EXPECT(0x1, gbc.readMem(0x867a));
        // CB 01 002D
        gbc.setState(0xa281, 0x23e3, 0x5e70, 0x6090, 0xf5d5, 0x34c1, 0x1, 0x1);
        gbc.writeMem(0xa281, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x23e3, gbc.sp());
        EXPECT(0xa283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa281));
        EXPECT(0x1, gbc.readMem(0xa282));
        // CB 01 002E
        gbc.setState(0xd39a, 0xfcdb, 0x4430, 0x612a, 0x1575, 0x55b4, 0x0, 0x1);
        gbc.writeMem(0xd39a, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xfcdb, gbc.sp());
        EXPECT(0xd39c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd39a));
        EXPECT(0x1, gbc.readMem(0xd39b));
        // CB 01 002F
        gbc.setState(0x6763, 0x926b, 0x670, 0x6d3f, 0xa8ff, 0x21d9, 0x1, 0x1);
        gbc.writeMem(0x6763, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x926b, gbc.sp());
        EXPECT(0x6765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0030
        gbc.setState(0xe517, 0xd9b6, 0xc00, 0x295b, 0x7509, 0xa051, 0x0, 0x1);
        gbc.writeMem(0xe517, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd9b6, gbc.sp());
        EXPECT(0xe519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe517));
        EXPECT(0x1, gbc.readMem(0xe518));
        // CB 01 0031
        gbc.setState(0x4be8, 0xd701, 0x5aa0, 0xbd36, 0x743, 0x8e47, 0x1, 0x1);
        gbc.writeMem(0x4be8, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd701, gbc.sp());
        EXPECT(0x4bea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0032
        gbc.setState(0x64f6, 0x78b0, 0xf770, 0x67f6, 0xcd94, 0x2dc8, 0x0, 0x1);
        gbc.writeMem(0x64f6, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x78b0, gbc.sp());
        EXPECT(0x64f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0033
        gbc.setState(0xdfd, 0x399, 0xb50, 0xa345, 0x1392, 0x27b9, 0x1, 0x1);
        gbc.writeMem(0xdfd, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x399, gbc.sp());
        EXPECT(0xdff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0034
        gbc.setState(0xe7db, 0x1c50, 0x50c0, 0x2790, 0xdcd5, 0xfcc, 0x1, 0x0);
        gbc.writeMem(0xe7db, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1c50, gbc.sp());
        EXPECT(0xe7dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7db));
        EXPECT(0x1, gbc.readMem(0xe7dc));
        // CB 01 0035
        gbc.setState(0x7e8e, 0x4f7e, 0xc9b0, 0xff42, 0x631, 0xdbb, 0x0, 0x0);
        gbc.writeMem(0x7e8e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4f7e, gbc.sp());
        EXPECT(0x7e90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0036
        gbc.setState(0x3115, 0x4913, 0x83b0, 0xa744, 0xde64, 0x7357, 0x0, 0x0);
        gbc.writeMem(0x3115, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4913, gbc.sp());
        EXPECT(0x3117, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0037
        gbc.setState(0x848a, 0xe822, 0x54e0, 0xd9b4, 0x394, 0x5699, 0x0, 0x1);
        gbc.writeMem(0x848a, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe822, gbc.sp());
        EXPECT(0x848c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x848a));
        EXPECT(0x1, gbc.readMem(0x848b));
        // CB 01 0038
        gbc.setState(0xdb24, 0x1981, 0xfea0, 0xef4a, 0x3211, 0x6e39, 0x1, 0x0);
        gbc.writeMem(0xdb24, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1981, gbc.sp());
        EXPECT(0xdb26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb24));
        EXPECT(0x1, gbc.readMem(0xdb25));
        // CB 01 003A
        gbc.setState(0xb5ce, 0x9257, 0xfff0, 0x32fb, 0xa962, 0x849d, 0x0, 0x0);
        gbc.writeMem(0xb5ce, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9257, gbc.sp());
        EXPECT(0xb5d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ce));
        EXPECT(0x1, gbc.readMem(0xb5cf));
        // CB 01 003B
        gbc.setState(0xaed3, 0x57e, 0xcfb0, 0x1807, 0x80e3, 0x3b0c, 0x0, 0x0);
        gbc.writeMem(0xaed3, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x57e, gbc.sp());
        EXPECT(0xaed5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaed3));
        EXPECT(0x1, gbc.readMem(0xaed4));
        // CB 01 003C
        gbc.setState(0xa055, 0x3d20, 0x1e30, 0xbf7, 0x5a02, 0x9ed0, 0x0, 0x1);
        gbc.writeMem(0xa055, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3d20, gbc.sp());
        EXPECT(0xa057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa055));
        EXPECT(0x1, gbc.readMem(0xa056));
        // CB 01 003D
        gbc.setState(0x2099, 0x2e0b, 0xe1b0, 0xfcca, 0x1c74, 0x9729, 0x0, 0x1);
        gbc.writeMem(0x2099, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2e0b, gbc.sp());
        EXPECT(0x209b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 003E
        gbc.setState(0x68b8, 0x546c, 0x5a10, 0x95f4, 0x2a51, 0xe9e1, 0x0, 0x0);
        gbc.writeMem(0x68b8, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x546c, gbc.sp());
        EXPECT(0x68ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 003F
        gbc.setState(0xbd78, 0x2f27, 0x2770, 0x5243, 0xad38, 0xb6d, 0x1, 0x1);
        gbc.writeMem(0xbd78, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2f27, gbc.sp());
        EXPECT(0xbd7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd78));
        EXPECT(0x1, gbc.readMem(0xbd79));
        // CB 01 0040
        gbc.setState(0xb3bc, 0x4bf2, 0x6d40, 0x7edf, 0xc629, 0x9953, 0x1, 0x1);
        gbc.writeMem(0xb3bc, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4bf2, gbc.sp());
        EXPECT(0xb3be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3bc));
        EXPECT(0x1, gbc.readMem(0xb3bd));
        // CB 01 0041
        gbc.setState(0x8c68, 0xb35d, 0x5930, 0x66ca, 0x1b5e, 0xbf7d, 0x0, 0x1);
        gbc.writeMem(0x8c68, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb35d, gbc.sp());
        EXPECT(0x8c6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c68));
        EXPECT(0x1, gbc.readMem(0x8c69));
        // CB 01 0042
        gbc.setState(0xb3d6, 0x152d, 0x2020, 0x9f87, 0xd9db, 0x8731, 0x1, 0x0);
        gbc.writeMem(0xb3d6, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x152d, gbc.sp());
        EXPECT(0xb3d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d6));
        EXPECT(0x1, gbc.readMem(0xb3d7));
        // CB 01 0043
        gbc.setState(0x571, 0x544d, 0x9440, 0x2648, 0x3698, 0x791e, 0x0, 0x0);
        gbc.writeMem(0x571, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x544d, gbc.sp());
        EXPECT(0x573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0044
        gbc.setState(0xa368, 0x4e8c, 0x32f0, 0x2f5d, 0x3b7b, 0x49c0, 0x1, 0x0);
        gbc.writeMem(0xa368, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4e8c, gbc.sp());
        EXPECT(0xa36a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa368));
        EXPECT(0x1, gbc.readMem(0xa369));
        // CB 01 0045
        gbc.setState(0x7366, 0xa61d, 0x2a40, 0x3334, 0x6626, 0xeb38, 0x0, 0x1);
        gbc.writeMem(0x7366, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa61d, gbc.sp());
        EXPECT(0x7368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0046
        gbc.setState(0xaa2c, 0xf024, 0x2e30, 0xd60f, 0x2909, 0x28d7, 0x0, 0x1);
        gbc.writeMem(0xaa2c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf024, gbc.sp());
        EXPECT(0xaa2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa2c));
        EXPECT(0x1, gbc.readMem(0xaa2d));
        // CB 01 0047
        gbc.setState(0xdb9c, 0xff93, 0x3710, 0x19d2, 0xc08b, 0x851a, 0x1, 0x0);
        gbc.writeMem(0xdb9c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xff93, gbc.sp());
        EXPECT(0xdb9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb9c));
        EXPECT(0x1, gbc.readMem(0xdb9d));
        // CB 01 0048
        gbc.setState(0x12e7, 0x92b5, 0xbf70, 0x1cf6, 0xd75f, 0x6dd8, 0x0, 0x0);
        gbc.writeMem(0x12e7, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x92b5, gbc.sp());
        EXPECT(0x12e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 004A
        gbc.setState(0xb3d6, 0x2df0, 0x2900, 0xfb75, 0x37cf, 0x18dd, 0x0, 0x1);
        gbc.writeMem(0xb3d6, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2df0, gbc.sp());
        EXPECT(0xb3d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d6));
        EXPECT(0x1, gbc.readMem(0xb3d7));
        // CB 01 004B
        gbc.setState(0xab9e, 0xafc9, 0xa740, 0x272e, 0x74c6, 0xda33, 0x1, 0x0);
        gbc.writeMem(0xab9e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xafc9, gbc.sp());
        EXPECT(0xaba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab9e));
        EXPECT(0x1, gbc.readMem(0xab9f));
        // CB 01 004C
        gbc.setState(0x4632, 0xcb1b, 0xa530, 0x7a9c, 0xa8f5, 0xe0b, 0x1, 0x1);
        gbc.writeMem(0x4632, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xcb1b, gbc.sp());
        EXPECT(0x4634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 004D
        gbc.setState(0x7ed5, 0x620f, 0x1530, 0xfa0b, 0xd47a, 0x9075, 0x0, 0x1);
        gbc.writeMem(0x7ed5, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x620f, gbc.sp());
        EXPECT(0x7ed7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 004E
        gbc.setState(0x7930, 0x6b6a, 0x5880, 0xe1f5, 0x6b36, 0x9de7, 0x0, 0x1);
        gbc.writeMem(0x7930, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6b6a, gbc.sp());
        EXPECT(0x7932, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 004F
        gbc.setState(0x503b, 0xb99b, 0xc260, 0x9223, 0x738b, 0xc064, 0x1, 0x1);
        gbc.writeMem(0x503b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb99b, gbc.sp());
        EXPECT(0x503d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0050
        gbc.setState(0xb813, 0x47b8, 0xf6f0, 0x8731, 0x377, 0x1f49, 0x1, 0x0);
        gbc.writeMem(0xb813, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x47b8, gbc.sp());
        EXPECT(0xb815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb813));
        EXPECT(0x1, gbc.readMem(0xb814));
        // CB 01 0051
        gbc.setState(0x225a, 0xadea, 0xa80, 0x467e, 0x5237, 0x719b, 0x0, 0x0);
        gbc.writeMem(0x225a, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xadea, gbc.sp());
        EXPECT(0x225c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0052
        gbc.setState(0x9180, 0x1497, 0xa5a0, 0xd2d9, 0xe8aa, 0x9814, 0x1, 0x1);
        gbc.writeMem(0x9180, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1497, gbc.sp());
        EXPECT(0x9182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9180));
        EXPECT(0x1, gbc.readMem(0x9181));
        // CB 01 0053
        gbc.setState(0x6d7d, 0x7c49, 0x8d30, 0xe74f, 0x80d2, 0x31f3, 0x0, 0x0);
        gbc.writeMem(0x6d7d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7c49, gbc.sp());
        EXPECT(0x6d7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0054
        gbc.setState(0xabb6, 0x235c, 0xd0c0, 0x8691, 0x6f4, 0x5835, 0x0, 0x0);
        gbc.writeMem(0xabb6, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x235c, gbc.sp());
        EXPECT(0xabb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabb6));
        EXPECT(0x1, gbc.readMem(0xabb7));
        // CB 01 0055
        gbc.setState(0xb066, 0x6572, 0xa1c0, 0xf9ac, 0xcd0d, 0x7e1d, 0x0, 0x0);
        gbc.writeMem(0xb066, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6572, gbc.sp());
        EXPECT(0xb068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb066));
        EXPECT(0x1, gbc.readMem(0xb067));
        // CB 01 0056
        gbc.setState(0x44bf, 0x618d, 0xf270, 0x119e, 0x915e, 0xd85, 0x0, 0x1);
        gbc.writeMem(0x44bf, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x618d, gbc.sp());
        EXPECT(0x44c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0057
        gbc.setState(0x9859, 0x7325, 0x28a0, 0x59e5, 0xa054, 0x5585, 0x1, 0x0);
        gbc.writeMem(0x9859, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7325, gbc.sp());
        EXPECT(0x985b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9859));
        EXPECT(0x1, gbc.readMem(0x985a));
        // CB 01 0058
        gbc.setState(0xec82, 0xb2f7, 0xe840, 0xeeb3, 0x74e0, 0x8efb, 0x0, 0x1);
        gbc.writeMem(0xec82, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb2f7, gbc.sp());
        EXPECT(0xec84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec82));
        EXPECT(0x1, gbc.readMem(0xec83));
        // CB 01 0059
        gbc.setState(0x76dd, 0xfb91, 0x6d50, 0xc5ab, 0x1f48, 0xd5dd, 0x0, 0x1);
        gbc.writeMem(0x76dd, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xfb91, gbc.sp());
        EXPECT(0x76df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 005A
        gbc.setState(0xc390, 0x43c6, 0xabc0, 0xdd74, 0xb0c5, 0xb89a, 0x1, 0x1);
        gbc.writeMem(0xc390, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x43c6, gbc.sp());
        EXPECT(0xc392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc390));
        EXPECT(0x1, gbc.readMem(0xc391));
        // CB 01 005B
        gbc.setState(0xb088, 0xac77, 0x3300, 0xeb05, 0x1dd1, 0x4b98, 0x1, 0x1);
        gbc.writeMem(0xb088, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xac77, gbc.sp());
        EXPECT(0xb08a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb088));
        EXPECT(0x1, gbc.readMem(0xb089));
        // CB 01 005C
        gbc.setState(0x7a6f, 0xe8b8, 0xb270, 0xbc11, 0x5318, 0x61b7, 0x0, 0x0);
        gbc.writeMem(0x7a6f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe8b8, gbc.sp());
        EXPECT(0x7a71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 005D
        gbc.setState(0x74c6, 0x6903, 0xcb10, 0x3dfa, 0xee55, 0x676b, 0x0, 0x0);
        gbc.writeMem(0x74c6, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6903, gbc.sp());
        EXPECT(0x74c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 005E
        gbc.setState(0xe996, 0xdab6, 0x82c0, 0x57bf, 0xbb4, 0x5f5a, 0x1, 0x1);
        gbc.writeMem(0xe996, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xdab6, gbc.sp());
        EXPECT(0xe998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe996));
        EXPECT(0x1, gbc.readMem(0xe997));
        // CB 01 005F
        gbc.setState(0x9967, 0xdcb7, 0x6ee0, 0x6702, 0xba3f, 0x781c, 0x1, 0x1);
        gbc.writeMem(0x9967, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xdcb7, gbc.sp());
        EXPECT(0x9969, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9967));
        EXPECT(0x1, gbc.readMem(0x9968));
        // CB 01 0060
        gbc.setState(0x168, 0x5ce9, 0x47d0, 0xa352, 0x3a41, 0xd55c, 0x0, 0x0);
        gbc.writeMem(0x168, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5ce9, gbc.sp());
        EXPECT(0x16a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0061
        gbc.setState(0x2f5e, 0xc066, 0xebe0, 0x3bff, 0x6738, 0xcd87, 0x1, 0x0);
        gbc.writeMem(0x2f5e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc066, gbc.sp());
        EXPECT(0x2f60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0062
        gbc.setState(0xbe7d, 0x9fa1, 0x90b0, 0x9e0f, 0x8176, 0xdd7f, 0x1, 0x0);
        gbc.writeMem(0xbe7d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9fa1, gbc.sp());
        EXPECT(0xbe7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe7d));
        EXPECT(0x1, gbc.readMem(0xbe7e));
        // CB 01 0063
        gbc.setState(0x9f14, 0x9e05, 0x3250, 0x5025, 0x5ba4, 0x8285, 0x1, 0x0);
        gbc.writeMem(0x9f14, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9e05, gbc.sp());
        EXPECT(0x9f16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f14));
        EXPECT(0x1, gbc.readMem(0x9f15));
        // CB 01 0064
        gbc.setState(0xcc51, 0x73d0, 0x3600, 0xc649, 0x16b3, 0xf2d1, 0x1, 0x1);
        gbc.writeMem(0xcc51, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x73d0, gbc.sp());
        EXPECT(0xcc53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc51));
        EXPECT(0x1, gbc.readMem(0xcc52));
        // CB 01 0065
        gbc.setState(0x768c, 0x9140, 0x3c0, 0xe062, 0xdcc1, 0xcf9f, 0x1, 0x1);
        gbc.writeMem(0x768c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9140, gbc.sp());
        EXPECT(0x768e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0066
        gbc.setState(0x7b78, 0x2570, 0x65e0, 0x1f95, 0xaf4, 0xd3c6, 0x0, 0x1);
        gbc.writeMem(0x7b78, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2570, gbc.sp());
        EXPECT(0x7b7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0067
        gbc.setState(0x3719, 0x70a7, 0x1090, 0xcae9, 0x600b, 0xed61, 0x0, 0x1);
        gbc.writeMem(0x3719, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x70a7, gbc.sp());
        EXPECT(0x371b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0068
        gbc.setState(0x2e0f, 0xa05d, 0x9580, 0x3180, 0xea73, 0x88dc, 0x0, 0x0);
        gbc.writeMem(0x2e0f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa05d, gbc.sp());
        EXPECT(0x2e11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0069
        gbc.setState(0x4518, 0xde3e, 0x7fd0, 0xe140, 0x4c5c, 0xfb4, 0x1, 0x0);
        gbc.writeMem(0x4518, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xde3e, gbc.sp());
        EXPECT(0x451a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 006A
        gbc.setState(0xca9c, 0x84e6, 0xa870, 0x4c57, 0x30b9, 0xd041, 0x0, 0x0);
        gbc.writeMem(0xca9c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x84e6, gbc.sp());
        EXPECT(0xca9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca9c));
        EXPECT(0x1, gbc.readMem(0xca9d));
        // CB 01 006B
        gbc.setState(0xa1d5, 0x817f, 0xc640, 0xbf18, 0x55a6, 0x53c1, 0x0, 0x0);
        gbc.writeMem(0xa1d5, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x817f, gbc.sp());
        EXPECT(0xa1d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1d5));
        EXPECT(0x1, gbc.readMem(0xa1d6));
        // CB 01 006C
        gbc.setState(0xcbc2, 0xc098, 0xe160, 0x685c, 0x129c, 0x2642, 0x0, 0x1);
        gbc.writeMem(0xcbc2, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc098, gbc.sp());
        EXPECT(0xcbc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbc2));
        EXPECT(0x1, gbc.readMem(0xcbc3));
        // CB 01 006D
        gbc.setState(0x36d0, 0x9439, 0x1750, 0x1ee9, 0xfc23, 0x68dc, 0x0, 0x0);
        gbc.writeMem(0x36d0, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9439, gbc.sp());
        EXPECT(0x36d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 006E
        gbc.setState(0x6598, 0xadb6, 0xe610, 0xe44a, 0xe2ef, 0xa5a1, 0x0, 0x1);
        gbc.writeMem(0x6598, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xadb6, gbc.sp());
        EXPECT(0x659a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 006F
        gbc.setState(0x1e7e, 0x7e98, 0x9fe0, 0x2cf2, 0xe7f4, 0xc3e9, 0x1, 0x1);
        gbc.writeMem(0x1e7e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7e98, gbc.sp());
        EXPECT(0x1e80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0070
        gbc.setState(0xc61, 0x15d8, 0x88e0, 0xe6ee, 0x99, 0x48c4, 0x1, 0x1);
        gbc.writeMem(0xc61, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x15d8, gbc.sp());
        EXPECT(0xc63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0071
        gbc.setState(0xf08, 0x2d6a, 0x6530, 0xe5df, 0x2f2, 0x7790, 0x1, 0x0);
        gbc.writeMem(0xf08, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2d6a, gbc.sp());
        EXPECT(0xf0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0072
        gbc.setState(0xf63, 0x4d7a, 0xfff0, 0x95e1, 0xe734, 0x72f9, 0x1, 0x0);
        gbc.writeMem(0xf63, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4d7a, gbc.sp());
        EXPECT(0xf65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0073
        gbc.setState(0x7416, 0x5029, 0xce40, 0x5270, 0x4ec9, 0x4c87, 0x0, 0x0);
        gbc.writeMem(0x7416, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5029, gbc.sp());
        EXPECT(0x7418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0074
        gbc.setState(0xb594, 0x9720, 0x61a0, 0x1124, 0x3c4c, 0xf369, 0x0, 0x1);
        gbc.writeMem(0xb594, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9720, gbc.sp());
        EXPECT(0xb596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb594));
        EXPECT(0x1, gbc.readMem(0xb595));
        // CB 01 0075
        gbc.setState(0x24bd, 0x42f7, 0xf880, 0xab83, 0x84a2, 0x5fc8, 0x0, 0x1);
        gbc.writeMem(0x24bd, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x42f7, gbc.sp());
        EXPECT(0x24bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0076
        gbc.setState(0x5077, 0x56b2, 0x5b40, 0x8acd, 0xc0d4, 0x178d, 0x1, 0x1);
        gbc.writeMem(0x5077, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x56b2, gbc.sp());
        EXPECT(0x5079, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0077
        gbc.setState(0x20a6, 0x1d6d, 0xdb90, 0x15d6, 0x8675, 0x915e, 0x1, 0x1);
        gbc.writeMem(0x20a6, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1d6d, gbc.sp());
        EXPECT(0x20a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0078
        gbc.setState(0x1986, 0x63df, 0xc150, 0x604b, 0xd290, 0xe88c, 0x0, 0x0);
        gbc.writeMem(0x1986, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x63df, gbc.sp());
        EXPECT(0x1988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0079
        gbc.setState(0xbec3, 0xf731, 0xca90, 0xf26a, 0xa940, 0xcd80, 0x1, 0x1);
        gbc.writeMem(0xbec3, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf731, gbc.sp());
        EXPECT(0xbec5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbec3));
        EXPECT(0x1, gbc.readMem(0xbec4));
        // CB 01 007A
        gbc.setState(0x961d, 0x3b3a, 0x56c0, 0xdcb3, 0x773c, 0x15fa, 0x1, 0x0);
        gbc.writeMem(0x961d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3b3a, gbc.sp());
        EXPECT(0x961f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x961d));
        EXPECT(0x1, gbc.readMem(0x961e));
        // CB 01 007B
        gbc.setState(0xce09, 0x30e2, 0x50c0, 0xef37, 0x550c, 0xc96d, 0x1, 0x1);
        gbc.writeMem(0xce09, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x30e2, gbc.sp());
        EXPECT(0xce0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce09));
        EXPECT(0x1, gbc.readMem(0xce0a));
        // CB 01 007C
        gbc.setState(0x1c96, 0x1c38, 0xc920, 0x70d3, 0xd2c6, 0x6102, 0x1, 0x1);
        gbc.writeMem(0x1c96, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1c38, gbc.sp());
        EXPECT(0x1c98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 007D
        gbc.setState(0x3bc5, 0xe7c4, 0xdae0, 0x6bd5, 0x4d5e, 0x29a4, 0x0, 0x0);
        gbc.writeMem(0x3bc5, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe7c4, gbc.sp());
        EXPECT(0x3bc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 007E
        gbc.setState(0x1718, 0xe79a, 0x11b0, 0x1dd8, 0xb4de, 0x68fe, 0x0, 0x0);
        gbc.writeMem(0x1718, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe79a, gbc.sp());
        EXPECT(0x171a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 007F
        gbc.setState(0x9f07, 0xd2e8, 0x3a10, 0xdd74, 0x6ad8, 0x2eb7, 0x0, 0x1);
        gbc.writeMem(0x9f07, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd2e8, gbc.sp());
        EXPECT(0x9f09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f07));
        EXPECT(0x1, gbc.readMem(0x9f08));
        // CB 01 0080
        gbc.setState(0x10b5, 0x8add, 0x4110, 0x1554, 0x5fde, 0x50d9, 0x1, 0x1);
        gbc.writeMem(0x10b5, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8add, gbc.sp());
        EXPECT(0x10b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0081
        gbc.setState(0xa80, 0x9056, 0xc1a0, 0x78d3, 0x8dc3, 0xd9ff, 0x1, 0x1);
        gbc.writeMem(0xa80, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9056, gbc.sp());
        EXPECT(0xa82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0083
        gbc.setState(0x496b, 0xe2e1, 0xba70, 0x73d3, 0xbe3, 0xa3f0, 0x0, 0x1);
        gbc.writeMem(0x496b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe2e1, gbc.sp());
        EXPECT(0x496d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0084
        gbc.setState(0x7b5e, 0x1b46, 0xb2b0, 0xa93c, 0x1704, 0x69df, 0x0, 0x1);
        gbc.writeMem(0x7b5e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1b46, gbc.sp());
        EXPECT(0x7b60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0085
        gbc.setState(0x8074, 0xd6da, 0x64f0, 0xcf57, 0x46e2, 0xfcf4, 0x1, 0x0);
        gbc.writeMem(0x8074, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd6da, gbc.sp());
        EXPECT(0x8076, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8074));
        EXPECT(0x1, gbc.readMem(0x8075));
        // CB 01 0086
        gbc.setState(0xb5cc, 0xf4b, 0x77c0, 0xa7e3, 0xf650, 0x864a, 0x0, 0x1);
        gbc.writeMem(0xb5cc, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf4b, gbc.sp());
        EXPECT(0xb5ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5cc));
        EXPECT(0x1, gbc.readMem(0xb5cd));
        // CB 01 0087
        gbc.setState(0x3793, 0x89c0, 0x8440, 0xe44b, 0xc551, 0x4a10, 0x0, 0x0);
        gbc.writeMem(0x3793, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x89c0, gbc.sp());
        EXPECT(0x3795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0088
        gbc.setState(0x5d27, 0x4d0e, 0xeb0, 0x1622, 0xfd1a, 0x1d97, 0x1, 0x1);
        gbc.writeMem(0x5d27, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4d0e, gbc.sp());
        EXPECT(0x5d29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0089
        gbc.setState(0x3ad3, 0xb1d1, 0xf9e0, 0xd88a, 0xfba, 0x69dd, 0x1, 0x0);
        gbc.writeMem(0x3ad3, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb1d1, gbc.sp());
        EXPECT(0x3ad5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 008A
        gbc.setState(0xe8b4, 0x854d, 0x3600, 0xf22f, 0x49fb, 0xe0ed, 0x0, 0x1);
        gbc.writeMem(0xe8b4, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x854d, gbc.sp());
        EXPECT(0xe8b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8b4));
        EXPECT(0x1, gbc.readMem(0xe8b5));
        // CB 01 008B
        gbc.setState(0xd240, 0xb09c, 0x3b20, 0x2832, 0xd0b6, 0x2304, 0x0, 0x1);
        gbc.writeMem(0xd240, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb09c, gbc.sp());
        EXPECT(0xd242, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd240));
        EXPECT(0x1, gbc.readMem(0xd241));
        // CB 01 008D
        gbc.setState(0x985e, 0x6c09, 0xec30, 0x86b4, 0xefdf, 0x2845, 0x1, 0x0);
        gbc.writeMem(0x985e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6c09, gbc.sp());
        EXPECT(0x9860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x985e));
        EXPECT(0x1, gbc.readMem(0x985f));
        // CB 01 008E
        gbc.setState(0x6e5c, 0xa121, 0x7fa0, 0xb203, 0x2791, 0x85c4, 0x0, 0x0);
        gbc.writeMem(0x6e5c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa121, gbc.sp());
        EXPECT(0x6e5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 008F
        gbc.setState(0x80e7, 0xf2c2, 0xb5f0, 0xcd96, 0x8601, 0x7b2f, 0x0, 0x0);
        gbc.writeMem(0x80e7, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf2c2, gbc.sp());
        EXPECT(0x80e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e7));
        EXPECT(0x1, gbc.readMem(0x80e8));
        // CB 01 0090
        gbc.setState(0xc089, 0x83de, 0x8e40, 0xea5e, 0x6c7b, 0x660, 0x0, 0x1);
        gbc.writeMem(0xc089, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x83de, gbc.sp());
        EXPECT(0xc08b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc089));
        EXPECT(0x1, gbc.readMem(0xc08a));
        // CB 01 0091
        gbc.setState(0x5fb3, 0x6868, 0xad40, 0x86d1, 0x818e, 0xc10f, 0x1, 0x0);
        gbc.writeMem(0x5fb3, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6868, gbc.sp());
        EXPECT(0x5fb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0092
        gbc.setState(0x564d, 0xff66, 0xcb90, 0x6e4e, 0x9725, 0x3a1b, 0x1, 0x0);
        gbc.writeMem(0x564d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xff66, gbc.sp());
        EXPECT(0x564f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0093
        gbc.setState(0x5e6f, 0x49ae, 0xcbb0, 0x94d4, 0x553e, 0x826, 0x1, 0x0);
        gbc.writeMem(0x5e6f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x49ae, gbc.sp());
        EXPECT(0x5e71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0094
        gbc.setState(0x2085, 0x3ec7, 0x740, 0x2951, 0x6583, 0xec1d, 0x0, 0x1);
        gbc.writeMem(0x2085, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3ec7, gbc.sp());
        EXPECT(0x2087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0095
        gbc.setState(0xa46a, 0xb543, 0xae0, 0xd47a, 0x9dab, 0x8ae1, 0x0, 0x1);
        gbc.writeMem(0xa46a, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb543, gbc.sp());
        EXPECT(0xa46c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa46a));
        EXPECT(0x1, gbc.readMem(0xa46b));
        // CB 01 0096
        gbc.setState(0xb2d8, 0xe235, 0x5c00, 0x154, 0x4cba, 0x1818, 0x1, 0x1);
        gbc.writeMem(0xb2d8, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe235, gbc.sp());
        EXPECT(0xb2da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2d8));
        EXPECT(0x1, gbc.readMem(0xb2d9));
        // CB 01 0097
        gbc.setState(0xe4c8, 0xe7d7, 0xef50, 0xa335, 0xfe2, 0xcd32, 0x0, 0x0);
        gbc.writeMem(0xe4c8, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe7d7, gbc.sp());
        EXPECT(0xe4ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4c8));
        EXPECT(0x1, gbc.readMem(0xe4c9));
        // CB 01 0098
        gbc.setState(0x2e16, 0xaabf, 0x8f60, 0xf4a5, 0x1b05, 0x2856, 0x0, 0x0);
        gbc.writeMem(0x2e16, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xaabf, gbc.sp());
        EXPECT(0x2e18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0099
        gbc.setState(0x8c58, 0xf902, 0xbda0, 0x29a8, 0x7d70, 0xb511, 0x1, 0x1);
        gbc.writeMem(0x8c58, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf902, gbc.sp());
        EXPECT(0x8c5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c58));
        EXPECT(0x1, gbc.readMem(0x8c59));
        // CB 01 009A
        gbc.setState(0x43b6, 0x8426, 0x34e0, 0xf258, 0x66c5, 0xb1cc, 0x1, 0x0);
        gbc.writeMem(0x43b6, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8426, gbc.sp());
        EXPECT(0x43b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 009C
        gbc.setState(0xd565, 0xafaa, 0x9c00, 0xa14c, 0x41e8, 0xf598, 0x0, 0x1);
        gbc.writeMem(0xd565, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xafaa, gbc.sp());
        EXPECT(0xd567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd565));
        EXPECT(0x1, gbc.readMem(0xd566));
        // CB 01 009D
        gbc.setState(0xa3e3, 0x25b9, 0x6570, 0xe6fa, 0xd342, 0xa0ca, 0x0, 0x0);
        gbc.writeMem(0xa3e3, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x25b9, gbc.sp());
        EXPECT(0xa3e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3e3));
        EXPECT(0x1, gbc.readMem(0xa3e4));
        // CB 01 009E
        gbc.setState(0xe2a4, 0x5fa9, 0x7510, 0x99c, 0xf186, 0xbcac, 0x1, 0x0);
        gbc.writeMem(0xe2a4, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5fa9, gbc.sp());
        EXPECT(0xe2a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2a4));
        EXPECT(0x1, gbc.readMem(0xe2a5));
        // CB 01 009F
        gbc.setState(0x885a, 0x75cc, 0xcb20, 0xf714, 0xd8ae, 0x172, 0x0, 0x1);
        gbc.writeMem(0x885a, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x75cc, gbc.sp());
        EXPECT(0x885c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x885a));
        EXPECT(0x1, gbc.readMem(0x885b));
        // CB 01 00A0
        gbc.setState(0xc27e, 0x7a15, 0x73e0, 0x37ff, 0x3e7d, 0xcc21, 0x0, 0x0);
        gbc.writeMem(0xc27e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7a15, gbc.sp());
        EXPECT(0xc280, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc27e));
        EXPECT(0x1, gbc.readMem(0xc27f));
        // CB 01 00A1
        gbc.setState(0x3c22, 0x4f91, 0x1220, 0x75b2, 0xbfe9, 0x64cf, 0x1, 0x1);
        gbc.writeMem(0x3c22, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4f91, gbc.sp());
        EXPECT(0x3c24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 00A2
        gbc.setState(0x98e0, 0xb40c, 0x3780, 0x8cd1, 0x7284, 0x6c7, 0x1, 0x0);
        gbc.writeMem(0x98e0, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb40c, gbc.sp());
        EXPECT(0x98e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98e0));
        EXPECT(0x1, gbc.readMem(0x98e1));
        // CB 01 00A3
        gbc.setState(0x1514, 0x125b, 0xf590, 0xf28f, 0x8527, 0x7000, 0x1, 0x0);
        gbc.writeMem(0x1514, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x125b, gbc.sp());
        EXPECT(0x1516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 00A4
        gbc.setState(0x9cf7, 0xc3e8, 0x6ff0, 0x3a1, 0x7254, 0x3676, 0x1, 0x1);
        gbc.writeMem(0x9cf7, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc3e8, gbc.sp());
        EXPECT(0x9cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cf7));
        EXPECT(0x1, gbc.readMem(0x9cf8));
        // CB 01 00A5
        gbc.setState(0xa2c6, 0x633f, 0xfaa0, 0xd61c, 0x8816, 0x238d, 0x0, 0x0);
        gbc.writeMem(0xa2c6, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x633f, gbc.sp());
        EXPECT(0xa2c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2c6));
        EXPECT(0x1, gbc.readMem(0xa2c7));
        // CB 01 00A6
        gbc.setState(0x9978, 0x9055, 0xd970, 0x2837, 0x81d6, 0x3b43, 0x0, 0x0);
        gbc.writeMem(0x9978, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9055, gbc.sp());
        EXPECT(0x997a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9978));
        EXPECT(0x1, gbc.readMem(0x9979));
        // CB 01 00A7
        gbc.setState(0x9d78, 0xd323, 0x7c20, 0x9c3a, 0xadaa, 0x6e15, 0x0, 0x0);
        gbc.writeMem(0x9d78, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd323, gbc.sp());
        EXPECT(0x9d7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d78));
        EXPECT(0x1, gbc.readMem(0x9d79));
        // CB 01 00A8
        gbc.setState(0x40b4, 0x1a64, 0x3f70, 0x8acf, 0x92b5, 0x7c33, 0x1, 0x0);
        gbc.writeMem(0x40b4, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1a64, gbc.sp());
        EXPECT(0x40b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 00A9
        gbc.setState(0xa4b7, 0xe270, 0xae50, 0x1f65, 0xa774, 0x6294, 0x0, 0x1);
        gbc.writeMem(0xa4b7, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe270, gbc.sp());
        EXPECT(0xa4b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4b7));
        EXPECT(0x1, gbc.readMem(0xa4b8));
        // CB 01 00AA
        gbc.setState(0x54d3, 0x3a04, 0x5180, 0x713c, 0x8683, 0xb386, 0x1, 0x0);
        gbc.writeMem(0x54d3, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3a04, gbc.sp());
        EXPECT(0x54d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 00AB
        gbc.setState(0x288e, 0x756, 0x6ed0, 0x7ca5, 0xfb08, 0xec1c, 0x1, 0x0);
        gbc.writeMem(0x288e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x756, gbc.sp());
        EXPECT(0x2890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 00AC
        gbc.setState(0x35c3, 0xd285, 0xa580, 0x30a6, 0x3a39, 0x6ed8, 0x0, 0x0);
        gbc.writeMem(0x35c3, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd285, gbc.sp());
        EXPECT(0x35c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 00AD
        gbc.setState(0x7ca4, 0x44f3, 0xbba0, 0x446b, 0x2a79, 0xb607, 0x1, 0x0);
        gbc.writeMem(0x7ca4, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x44f3, gbc.sp());
        EXPECT(0x7ca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 00AE
        gbc.setState(0xe5d6, 0x969e, 0x2f30, 0xd55c, 0xbb8b, 0x45f1, 0x1, 0x0);
        gbc.writeMem(0xe5d6, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x969e, gbc.sp());
        EXPECT(0xe5d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5d6));
        EXPECT(0x1, gbc.readMem(0xe5d7));
        // CB 01 00AF
        gbc.setState(0x3017, 0x6051, 0xfb00, 0xf09a, 0x32d4, 0xa801, 0x1, 0x0);
        gbc.writeMem(0x3017, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6051, gbc.sp());
        EXPECT(0x3019, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 00B0
        gbc.setState(0x7ee5, 0x2952, 0xb2b0, 0x6c3e, 0x6b23, 0xd709, 0x0, 0x0);
        gbc.writeMem(0x7ee5, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2952, gbc.sp());
        EXPECT(0x7ee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 00B1
        gbc.setState(0x1529, 0xbcb1, 0x4f80, 0xbe99, 0xfe44, 0xc88a, 0x1, 0x0);
        gbc.writeMem(0x1529, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xbcb1, gbc.sp());
        EXPECT(0x152b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 00B2
        gbc.setState(0x6592, 0xac52, 0x2940, 0x511a, 0xf354, 0x60ea, 0x0, 0x1);
        gbc.writeMem(0x6592, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xac52, gbc.sp());
        EXPECT(0x6594, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 00B3
        gbc.setState(0x1213, 0xf076, 0xa3d0, 0x63e7, 0xac9, 0xee60, 0x0, 0x0);
        gbc.writeMem(0x1213, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf076, gbc.sp());
        EXPECT(0x1215, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 00B4
        gbc.setState(0xe61, 0xdcaa, 0x2ee0, 0xfcbe, 0xcd65, 0xdcd2, 0x1, 0x0);
        gbc.writeMem(0xe61, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xdcaa, gbc.sp());
        EXPECT(0xe63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 00B5
        gbc.setState(0xf2b, 0x9f79, 0xc460, 0x2bb3, 0xa2cf, 0x33b9, 0x1, 0x0);
        gbc.writeMem(0xf2b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9f79, gbc.sp());
        EXPECT(0xf2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 00B6
        gbc.setState(0x7792, 0x48ef, 0x2c30, 0x5f51, 0xeece, 0x7151, 0x0, 0x1);
        gbc.writeMem(0x7792, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x48ef, gbc.sp());
        EXPECT(0x7794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 00B7
        gbc.setState(0x116a, 0xf0e4, 0xd3c0, 0x752d, 0x3da8, 0x36a, 0x1, 0x0);
        gbc.writeMem(0x116a, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf0e4, gbc.sp());
        EXPECT(0x116c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 00B8
        gbc.setState(0x4f42, 0xb8aa, 0xa370, 0x3d46, 0x2cdc, 0xed9, 0x0, 0x0);
        gbc.writeMem(0x4f42, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb8aa, gbc.sp());
        EXPECT(0x4f44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 00B9
        gbc.setState(0x336, 0xc4ef, 0xaad0, 0x5820, 0x1091, 0x76d6, 0x0, 0x1);
        gbc.writeMem(0x336, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc4ef, gbc.sp());
        EXPECT(0x338, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 00BA
        gbc.setState(0x86c1, 0xcc13, 0x4f60, 0x4ea5, 0x20df, 0xe465, 0x0, 0x0);
        gbc.writeMem(0x86c1, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xcc13, gbc.sp());
        EXPECT(0x86c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86c1));
        EXPECT(0x1, gbc.readMem(0x86c2));
        // CB 01 00BB
        gbc.setState(0x6599, 0xfb69, 0x6ee0, 0x4bf, 0xf02b, 0xbce4, 0x0, 0x1);
        gbc.writeMem(0x6599, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xfb69, gbc.sp());
        EXPECT(0x659b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 00BC
        gbc.setState(0x37a5, 0xbdd1, 0x200, 0x2bb6, 0xff2f, 0x3238, 0x1, 0x0);
        gbc.writeMem(0x37a5, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xbdd1, gbc.sp());
        EXPECT(0x37a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 00BD
        gbc.setState(0xe01b, 0x346f, 0x64c0, 0x4bc9, 0x91fb, 0x1c9a, 0x0, 0x1);
        gbc.writeMem(0xe01b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x346f, gbc.sp());
        EXPECT(0xe01d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe01b));
        EXPECT(0x1, gbc.readMem(0xe01c));
        // CB 01 00BE
        gbc.setState(0x21b3, 0x837d, 0x75a0, 0x8c34, 0x9dcb, 0xecd4, 0x1, 0x1);
        gbc.writeMem(0x21b3, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x837d, gbc.sp());
        EXPECT(0x21b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 00C0
        gbc.setState(0x4db1, 0x5b58, 0xaff0, 0xad23, 0x6e6b, 0x19e1, 0x1, 0x1);
        gbc.writeMem(0x4db1, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5b58, gbc.sp());
        EXPECT(0x4db3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 00C1
        gbc.setState(0x7db, 0x1fc, 0x9690, 0x4727, 0x89f0, 0x21d0, 0x1, 0x0);
        gbc.writeMem(0x7db, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1fc, gbc.sp());
        EXPECT(0x7dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 00C2
        gbc.setState(0x2cff, 0x92dc, 0xa040, 0x8632, 0x3fd5, 0xfe62, 0x0, 0x1);
        gbc.writeMem(0x2cff, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x92dc, gbc.sp());
        EXPECT(0x2d01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 00C3
        gbc.setState(0x614e, 0x48f0, 0x8700, 0xd4c3, 0x805, 0x2961, 0x0, 0x1);
        gbc.writeMem(0x614e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x48f0, gbc.sp());
        EXPECT(0x6150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 00C4
        gbc.setState(0x58ad, 0x8b10, 0xcce0, 0x415d, 0x82ff, 0x62a0, 0x1, 0x0);
        gbc.writeMem(0x58ad, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8b10, gbc.sp());
        EXPECT(0x58af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 00C5
        gbc.setState(0x46ff, 0x158a, 0x3020, 0xa065, 0x9886, 0x5abf, 0x1, 0x1);
        gbc.writeMem(0x46ff, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x158a, gbc.sp());
        EXPECT(0x4701, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 00C6
        gbc.setState(0x713f, 0x39ff, 0xd550, 0x92c2, 0x10d8, 0x4e90, 0x1, 0x1);
        gbc.writeMem(0x713f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x39ff, gbc.sp());
        EXPECT(0x7141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 00C7
        gbc.setState(0xba84, 0x38aa, 0x43c0, 0x90b0, 0xbec0, 0x35a4, 0x1, 0x1);
        gbc.writeMem(0xba84, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x38aa, gbc.sp());
        EXPECT(0xba86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba84));
        EXPECT(0x1, gbc.readMem(0xba85));
        // CB 01 00C9
        gbc.setState(0xc7d2, 0x695a, 0xfa90, 0xa26a, 0x3d77, 0x7a53, 0x1, 0x1);
        gbc.writeMem(0xc7d2, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x695a, gbc.sp());
        EXPECT(0xc7d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7d2));
        EXPECT(0x1, gbc.readMem(0xc7d3));
        // CB 01 00CA
        gbc.setState(0xce73, 0x7dbc, 0x790, 0x2ac6, 0x4a0a, 0x78f0, 0x1, 0x1);
        gbc.writeMem(0xce73, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7dbc, gbc.sp());
        EXPECT(0xce75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce73));
        EXPECT(0x1, gbc.readMem(0xce74));
        // CB 01 00CB
        gbc.setState(0x2b39, 0xd9d6, 0x93b0, 0x2f51, 0x9722, 0xb034, 0x0, 0x1);
        gbc.writeMem(0x2b39, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd9d6, gbc.sp());
        EXPECT(0x2b3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 00CC
        gbc.setState(0x39c7, 0x7993, 0x4460, 0xf199, 0xfd9f, 0xd138, 0x1, 0x0);
        gbc.writeMem(0x39c7, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7993, gbc.sp());
        EXPECT(0x39c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 00CD
        gbc.setState(0xc284, 0xed35, 0xd3a0, 0xf229, 0x8939, 0x6f02, 0x1, 0x0);
        gbc.writeMem(0xc284, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xed35, gbc.sp());
        EXPECT(0xc286, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc284));
        EXPECT(0x1, gbc.readMem(0xc285));
        // CB 01 00CE
        gbc.setState(0x4f2e, 0xc61f, 0x9e10, 0x3b10, 0xd84a, 0x80a4, 0x1, 0x1);
        gbc.writeMem(0x4f2e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc61f, gbc.sp());
        EXPECT(0x4f30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 00CF
        gbc.setState(0x6a6e, 0x3719, 0x27e0, 0x2f75, 0xe32a, 0x920b, 0x0, 0x0);
        gbc.writeMem(0x6a6e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3719, gbc.sp());
        EXPECT(0x6a70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 00D0
        gbc.setState(0xda31, 0xd1ad, 0xd1a0, 0x21dd, 0x3f3f, 0x9cd2, 0x0, 0x1);
        gbc.writeMem(0xda31, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd1ad, gbc.sp());
        EXPECT(0xda33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda31));
        EXPECT(0x1, gbc.readMem(0xda32));
        // CB 01 00D1
        gbc.setState(0x315f, 0x9fa6, 0xbd10, 0x8318, 0xb4a7, 0x28ee, 0x0, 0x0);
        gbc.writeMem(0x315f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9fa6, gbc.sp());
        EXPECT(0x3161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 00D2
        gbc.setState(0x1162, 0x5a03, 0x410, 0x1739, 0x2f49, 0xdf28, 0x0, 0x1);
        gbc.writeMem(0x1162, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5a03, gbc.sp());
        EXPECT(0x1164, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 00D4
        gbc.setState(0x4729, 0x55ff, 0x1ea0, 0xf765, 0xd55, 0x47ef, 0x0, 0x1);
        gbc.writeMem(0x4729, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x55ff, gbc.sp());
        EXPECT(0x472b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 00D5
        gbc.setState(0x9173, 0x3f0f, 0x5ad0, 0xf15a, 0xecd, 0x46c2, 0x0, 0x1);
        gbc.writeMem(0x9173, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3f0f, gbc.sp());
        EXPECT(0x9175, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9173));
        EXPECT(0x1, gbc.readMem(0x9174));
        // CB 01 00D7
        gbc.setState(0x8e39, 0x7ef5, 0xa1c0, 0x5910, 0x95b3, 0xf5b1, 0x1, 0x0);
        gbc.writeMem(0x8e39, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7ef5, gbc.sp());
        EXPECT(0x8e3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e39));
        EXPECT(0x1, gbc.readMem(0x8e3a));
        // CB 01 00D8
        gbc.setState(0xd01c, 0x3fd3, 0xcba0, 0xe159, 0xc7e9, 0xef2f, 0x1, 0x0);
        gbc.writeMem(0xd01c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3fd3, gbc.sp());
        EXPECT(0xd01e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd01c));
        EXPECT(0x1, gbc.readMem(0xd01d));
        // CB 01 00D9
        gbc.setState(0x3471, 0x925e, 0x1540, 0xda40, 0x6d0b, 0x94d5, 0x1, 0x0);
        gbc.writeMem(0x3471, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x925e, gbc.sp());
        EXPECT(0x3473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 00DA
        gbc.setState(0xcaf0, 0x3e3a, 0x2bc0, 0x563d, 0x22c8, 0xa084, 0x1, 0x1);
        gbc.writeMem(0xcaf0, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3e3a, gbc.sp());
        EXPECT(0xcaf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaf0));
        EXPECT(0x1, gbc.readMem(0xcaf1));
        // CB 01 00DB
        gbc.setState(0xd45c, 0xf1d5, 0x9f90, 0xd605, 0xb891, 0xba66, 0x1, 0x1);
        gbc.writeMem(0xd45c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf1d5, gbc.sp());
        EXPECT(0xd45e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd45c));
        EXPECT(0x1, gbc.readMem(0xd45d));
        // CB 01 00DE
        gbc.setState(0xd2f, 0x99d3, 0xffc0, 0xc8fe, 0x629c, 0x463a, 0x0, 0x0);
        gbc.writeMem(0xd2f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x99d3, gbc.sp());
        EXPECT(0xd31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 00DF
        gbc.setState(0x1332, 0xbd27, 0xe310, 0x564, 0x651, 0xdcf4, 0x1, 0x0);
        gbc.writeMem(0x1332, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xbd27, gbc.sp());
        EXPECT(0x1334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 00E0
        gbc.setState(0xd49d, 0xa586, 0x3af0, 0x252e, 0xd825, 0xce92, 0x1, 0x0);
        gbc.writeMem(0xd49d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa586, gbc.sp());
        EXPECT(0xd49f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd49d));
        EXPECT(0x1, gbc.readMem(0xd49e));
        // CB 01 00E1
        gbc.setState(0x62b9, 0x6173, 0x2910, 0xe779, 0xca7e, 0x4ae8, 0x0, 0x1);
        gbc.writeMem(0x62b9, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6173, gbc.sp());
        EXPECT(0x62bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 00E2
        gbc.setState(0xc828, 0xa40b, 0x85f0, 0x3a45, 0x47e4, 0xe0c4, 0x1, 0x0);
        gbc.writeMem(0xc828, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa40b, gbc.sp());
        EXPECT(0xc82a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc828));
        EXPECT(0x1, gbc.readMem(0xc829));
        // CB 01 00E3
        gbc.setState(0x15eb, 0xb726, 0xfba0, 0x84f5, 0x604b, 0xd47e, 0x1, 0x1);
        gbc.writeMem(0x15eb, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb726, gbc.sp());
        EXPECT(0x15ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 00E4
        gbc.setState(0x5f68, 0x9eaf, 0x6150, 0x3515, 0x5f5b, 0xbd0e, 0x0, 0x0);
        gbc.writeMem(0x5f68, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9eaf, gbc.sp());
        EXPECT(0x5f6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 00E5
        gbc.setState(0xbc9c, 0x2523, 0x3100, 0x651c, 0xb6b9, 0x286e, 0x1, 0x1);
        gbc.writeMem(0xbc9c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2523, gbc.sp());
        EXPECT(0xbc9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc9c));
        EXPECT(0x1, gbc.readMem(0xbc9d));
        // CB 01 00E6
        gbc.setState(0x5b24, 0xbce9, 0x40, 0x5e52, 0x350b, 0xa8f5, 0x0, 0x1);
        gbc.writeMem(0x5b24, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbce9, gbc.sp());
        EXPECT(0x5b26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 00E7
        gbc.setState(0x971b, 0x6a71, 0x43b0, 0xfe16, 0x170d, 0xc476, 0x0, 0x1);
        gbc.writeMem(0x971b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6a71, gbc.sp());
        EXPECT(0x971d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x971b));
        EXPECT(0x1, gbc.readMem(0x971c));
        // CB 01 00E8
        gbc.setState(0x2110, 0x494c, 0x170, 0xbeae, 0x2c91, 0x6336, 0x1, 0x0);
        gbc.writeMem(0x2110, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x494c, gbc.sp());
        EXPECT(0x2112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 00E9
        gbc.setState(0xa452, 0xb59e, 0x2c10, 0x3d, 0xace5, 0x26a5, 0x1, 0x0);
        gbc.writeMem(0xa452, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb59e, gbc.sp());
        EXPECT(0xa454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa452));
        EXPECT(0x1, gbc.readMem(0xa453));
        // CB 01 00EA
        gbc.setState(0xee0c, 0x39b5, 0xc7f0, 0x4e55, 0xb727, 0xd5cd, 0x1, 0x0);
        gbc.writeMem(0xee0c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x39b5, gbc.sp());
        EXPECT(0xee0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee0c));
        EXPECT(0x1, gbc.readMem(0xee0d));
        // CB 01 00EB
        gbc.setState(0x7d0d, 0x581c, 0x3de0, 0x61c5, 0xc685, 0x453c, 0x0, 0x1);
        gbc.writeMem(0x7d0d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x581c, gbc.sp());
        EXPECT(0x7d0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 00EC
        gbc.setState(0x4b12, 0xf04d, 0xe40, 0xa0fe, 0x67f1, 0xdc4f, 0x0, 0x0);
        gbc.writeMem(0x4b12, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf04d, gbc.sp());
        EXPECT(0x4b14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 00ED
        gbc.setState(0xd9f2, 0xab1d, 0x8ef0, 0x66eb, 0xef5d, 0x49a8, 0x1, 0x0);
        gbc.writeMem(0xd9f2, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xab1d, gbc.sp());
        EXPECT(0xd9f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9f2));
        EXPECT(0x1, gbc.readMem(0xd9f3));
        // CB 01 00EE
        gbc.setState(0xd952, 0x2111, 0x2500, 0x77da, 0x2afd, 0xc0c1, 0x1, 0x0);
        gbc.writeMem(0xd952, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2111, gbc.sp());
        EXPECT(0xd954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd952));
        EXPECT(0x1, gbc.readMem(0xd953));
        // CB 01 00EF
        gbc.setState(0x6d55, 0xe853, 0xdc40, 0xe58, 0x82e0, 0xc0cc, 0x1, 0x1);
        gbc.writeMem(0x6d55, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe853, gbc.sp());
        EXPECT(0x6d57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 00F0
        gbc.setState(0x6e89, 0xc0c4, 0xc130, 0x41eb, 0xc275, 0x4929, 0x0, 0x0);
        gbc.writeMem(0x6e89, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc0c4, gbc.sp());
        EXPECT(0x6e8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 00F1
        gbc.setState(0x650d, 0xf3f0, 0xdbb0, 0x6d4, 0x8d3f, 0x3dc2, 0x1, 0x1);
        gbc.writeMem(0x650d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf3f0, gbc.sp());
        EXPECT(0x650f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 00F2
        gbc.setState(0x1717, 0xeaa6, 0x92f0, 0xbab5, 0xd6d8, 0x4bac, 0x1, 0x0);
        gbc.writeMem(0x1717, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xeaa6, gbc.sp());
        EXPECT(0x1719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 00F3
        gbc.setState(0x1f10, 0xdae4, 0x1d30, 0xf5f1, 0xee73, 0xd0d1, 0x1, 0x0);
        gbc.writeMem(0x1f10, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xdae4, gbc.sp());
        EXPECT(0x1f12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 00F4
        gbc.setState(0x2356, 0x264, 0xeb00, 0x52d1, 0x5e4a, 0x2de1, 0x1, 0x1);
        gbc.writeMem(0x2356, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x264, gbc.sp());
        EXPECT(0x2358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 00F5
        gbc.setState(0x27b2, 0xadfc, 0xd8e0, 0xfed5, 0x71d9, 0xf96c, 0x1, 0x1);
        gbc.writeMem(0x27b2, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xadfc, gbc.sp());
        EXPECT(0x27b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 00F7
        gbc.setState(0x9b06, 0xb2c0, 0x58a0, 0x5a26, 0xfee, 0x785c, 0x0, 0x0);
        gbc.writeMem(0x9b06, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb2c0, gbc.sp());
        EXPECT(0x9b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b06));
        EXPECT(0x1, gbc.readMem(0x9b07));
        // CB 01 00F8
        gbc.setState(0x397a, 0xa14b, 0x3dc0, 0x6aae, 0xa6fa, 0x965d, 0x0, 0x0);
        gbc.writeMem(0x397a, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa14b, gbc.sp());
        EXPECT(0x397c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 00F9
        gbc.setState(0x60ba, 0x89fc, 0x5fa0, 0xf7af, 0x1413, 0x6bd2, 0x1, 0x0);
        gbc.writeMem(0x60ba, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x89fc, gbc.sp());
        EXPECT(0x60bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 00FA
        gbc.setState(0x498c, 0x82f6, 0xdc00, 0x983e, 0x652c, 0x635f, 0x0, 0x0);
        gbc.writeMem(0x498c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x82f6, gbc.sp());
        EXPECT(0x498e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 00FB
        gbc.setState(0xcba3, 0xd7c7, 0x8ae0, 0x71aa, 0x80b0, 0xfcb6, 0x0, 0x0);
        gbc.writeMem(0xcba3, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd7c7, gbc.sp());
        EXPECT(0xcba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcba3));
        EXPECT(0x1, gbc.readMem(0xcba4));
        // CB 01 00FC
        gbc.setState(0x93d1, 0xe355, 0x8a90, 0xf4b9, 0x92ec, 0xf21, 0x1, 0x0);
        gbc.writeMem(0x93d1, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe355, gbc.sp());
        EXPECT(0x93d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93d1));
        EXPECT(0x1, gbc.readMem(0x93d2));
        // CB 01 00FD
        gbc.setState(0xa897, 0x1c9d, 0x53a0, 0xa884, 0xb9fe, 0x593e, 0x1, 0x0);
        gbc.writeMem(0xa897, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1c9d, gbc.sp());
        EXPECT(0xa899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa897));
        EXPECT(0x1, gbc.readMem(0xa898));
        // CB 01 00FE
        gbc.setState(0x3a9f, 0x316b, 0xbfc0, 0xb55a, 0xdf19, 0x89a4, 0x0, 0x1);
        gbc.writeMem(0x3a9f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x316b, gbc.sp());
        EXPECT(0x3aa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 00FF
        gbc.setState(0x95cf, 0x1b9f, 0xdad0, 0xb243, 0xe0a1, 0xedbe, 0x1, 0x0);
        gbc.writeMem(0x95cf, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1b9f, gbc.sp());
        EXPECT(0x95d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95cf));
        EXPECT(0x1, gbc.readMem(0x95d0));
        // CB 01 0100
        gbc.setState(0xa337, 0x4360, 0xc820, 0xc79, 0xaa67, 0xbf9d, 0x0, 0x1);
        gbc.writeMem(0xa337, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4360, gbc.sp());
        EXPECT(0xa339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa337));
        EXPECT(0x1, gbc.readMem(0xa338));
        // CB 01 0102
        gbc.setState(0x1b3d, 0xf985, 0x85d0, 0xd721, 0x5285, 0x8360, 0x0, 0x1);
        gbc.writeMem(0x1b3d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf985, gbc.sp());
        EXPECT(0x1b3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0103
        gbc.setState(0x306a, 0x474f, 0xd4f0, 0x5597, 0xbe98, 0x236b, 0x0, 0x1);
        gbc.writeMem(0x306a, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x474f, gbc.sp());
        EXPECT(0x306c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0104
        gbc.setState(0x77d4, 0x9611, 0x7400, 0x7f57, 0x7411, 0x28b5, 0x1, 0x0);
        gbc.writeMem(0x77d4, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9611, gbc.sp());
        EXPECT(0x77d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0105
        gbc.setState(0x73ae, 0x499d, 0x9000, 0xbfdc, 0x5c95, 0x32c0, 0x1, 0x0);
        gbc.writeMem(0x73ae, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x499d, gbc.sp());
        EXPECT(0x73b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0106
        gbc.setState(0xca22, 0x3ecb, 0x4f20, 0x4df1, 0xb837, 0x802e, 0x0, 0x0);
        gbc.writeMem(0xca22, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3ecb, gbc.sp());
        EXPECT(0xca24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca22));
        EXPECT(0x1, gbc.readMem(0xca23));
        // CB 01 0107
        gbc.setState(0x9bce, 0x8f0e, 0xbcf0, 0x356a, 0x71bf, 0xe94, 0x0, 0x1);
        gbc.writeMem(0x9bce, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8f0e, gbc.sp());
        EXPECT(0x9bd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bce));
        EXPECT(0x1, gbc.readMem(0x9bcf));
        // CB 01 0108
        gbc.setState(0xacac, 0x1441, 0x5970, 0x9a9a, 0x640c, 0xa561, 0x1, 0x0);
        gbc.writeMem(0xacac, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1441, gbc.sp());
        EXPECT(0xacae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacac));
        EXPECT(0x1, gbc.readMem(0xacad));
        // CB 01 0109
        gbc.setState(0x9dd5, 0x7ed6, 0x8210, 0x2c9c, 0x9872, 0xe679, 0x1, 0x1);
        gbc.writeMem(0x9dd5, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7ed6, gbc.sp());
        EXPECT(0x9dd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dd5));
        EXPECT(0x1, gbc.readMem(0x9dd6));
        // CB 01 010A
        gbc.setState(0xff9, 0xaf3, 0x5e60, 0xb9fc, 0x48ae, 0xdd74, 0x0, 0x0);
        gbc.writeMem(0xff9, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xaf3, gbc.sp());
        EXPECT(0xffb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 010B
        gbc.setState(0xe9a0, 0x4da2, 0xb210, 0xa2d1, 0x3718, 0x7f24, 0x1, 0x0);
        gbc.writeMem(0xe9a0, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4da2, gbc.sp());
        EXPECT(0xe9a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9a0));
        EXPECT(0x1, gbc.readMem(0xe9a1));
        // CB 01 010C
        gbc.setState(0xad0e, 0x5fd8, 0x2960, 0x46e9, 0xb2ef, 0x1a75, 0x0, 0x0);
        gbc.writeMem(0xad0e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5fd8, gbc.sp());
        EXPECT(0xad10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad0e));
        EXPECT(0x1, gbc.readMem(0xad0f));
        // CB 01 010D
        gbc.setState(0x10c8, 0x76bb, 0x5280, 0x3779, 0xfe02, 0xa6cb, 0x0, 0x1);
        gbc.writeMem(0x10c8, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x76bb, gbc.sp());
        EXPECT(0x10ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 010E
        gbc.setState(0x724c, 0x2d2a, 0x1f60, 0x3465, 0xd7e3, 0x2239, 0x1, 0x0);
        gbc.writeMem(0x724c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2d2a, gbc.sp());
        EXPECT(0x724e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 010F
        gbc.setState(0x6408, 0x3128, 0x7630, 0x12d1, 0xe165, 0xf86d, 0x1, 0x0);
        gbc.writeMem(0x6408, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3128, gbc.sp());
        EXPECT(0x640a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0111
        gbc.setState(0xc1a7, 0xf63f, 0x6d00, 0x68d6, 0x60e4, 0x7ebc, 0x0, 0x0);
        gbc.writeMem(0xc1a7, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf63f, gbc.sp());
        EXPECT(0xc1a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1a7));
        EXPECT(0x1, gbc.readMem(0xc1a8));
        // CB 01 0112
        gbc.setState(0x6992, 0x9825, 0xdd50, 0xcc51, 0x8a9a, 0x6f, 0x0, 0x0);
        gbc.writeMem(0x6992, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9825, gbc.sp());
        EXPECT(0x6994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0113
        gbc.setState(0x1ef0, 0xc013, 0x8dc0, 0xf3cd, 0x9864, 0x8337, 0x0, 0x1);
        gbc.writeMem(0x1ef0, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc013, gbc.sp());
        EXPECT(0x1ef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0114
        gbc.setState(0xaa70, 0x2667, 0xc600, 0x79ba, 0xf91c, 0xf206, 0x0, 0x1);
        gbc.writeMem(0xaa70, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2667, gbc.sp());
        EXPECT(0xaa72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa70));
        EXPECT(0x1, gbc.readMem(0xaa71));
        // CB 01 0115
        gbc.setState(0xbdb0, 0x5d08, 0x8ae0, 0x6b93, 0x9647, 0xd22b, 0x0, 0x0);
        gbc.writeMem(0xbdb0, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5d08, gbc.sp());
        EXPECT(0xbdb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb0));
        EXPECT(0x1, gbc.readMem(0xbdb1));
        // CB 01 0117
        gbc.setState(0x66a9, 0x2921, 0x8240, 0x4e0a, 0xa8f6, 0x70af, 0x1, 0x1);
        gbc.writeMem(0x66a9, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2921, gbc.sp());
        EXPECT(0x66ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0118
        gbc.setState(0x314e, 0x9129, 0x450, 0x3211, 0xd908, 0x4f19, 0x1, 0x1);
        gbc.writeMem(0x314e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9129, gbc.sp());
        EXPECT(0x3150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0119
        gbc.setState(0xb46f, 0x38a2, 0x9ec0, 0x9531, 0x44a0, 0x74cc, 0x0, 0x1);
        gbc.writeMem(0xb46f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x38a2, gbc.sp());
        EXPECT(0xb471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb46f));
        EXPECT(0x1, gbc.readMem(0xb470));
        // CB 01 011A
        gbc.setState(0x5071, 0x400d, 0x68b0, 0x22f0, 0x7d44, 0x3d82, 0x1, 0x0);
        gbc.writeMem(0x5071, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x400d, gbc.sp());
        EXPECT(0x5073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 011B
        gbc.setState(0xa156, 0x5a11, 0xadc0, 0x1e71, 0xd066, 0x6043, 0x1, 0x0);
        gbc.writeMem(0xa156, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5a11, gbc.sp());
        EXPECT(0xa158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa156));
        EXPECT(0x1, gbc.readMem(0xa157));
        // CB 01 011C
        gbc.setState(0x94cb, 0xa3bd, 0x2d0, 0x954d, 0xffc8, 0x92d0, 0x0, 0x0);
        gbc.writeMem(0x94cb, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa3bd, gbc.sp());
        EXPECT(0x94cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94cb));
        EXPECT(0x1, gbc.readMem(0x94cc));
        // CB 01 011D
        gbc.setState(0xd3de, 0x1f04, 0x5a30, 0xa14a, 0xe778, 0xf6bf, 0x1, 0x1);
        gbc.writeMem(0xd3de, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1f04, gbc.sp());
        EXPECT(0xd3e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3de));
        EXPECT(0x1, gbc.readMem(0xd3df));
        // CB 01 011E
        gbc.setState(0xc078, 0x91a7, 0x56d0, 0xf000, 0x9b17, 0x9280, 0x0, 0x1);
        gbc.writeMem(0xc078, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x91a7, gbc.sp());
        EXPECT(0xc07a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc078));
        EXPECT(0x1, gbc.readMem(0xc079));
        // CB 01 011F
        gbc.setState(0x149c, 0x8816, 0x7860, 0xc03a, 0xde52, 0xcaf8, 0x1, 0x1);
        gbc.writeMem(0x149c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8816, gbc.sp());
        EXPECT(0x149e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0121
        gbc.setState(0xe9de, 0x3232, 0xfed0, 0x1519, 0x3358, 0x66e7, 0x0, 0x0);
        gbc.writeMem(0xe9de, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3232, gbc.sp());
        EXPECT(0xe9e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9de));
        EXPECT(0x1, gbc.readMem(0xe9df));
        // CB 01 0122
        gbc.setState(0xd0fa, 0xf879, 0xd4d0, 0x805a, 0xd1ef, 0x84f7, 0x1, 0x0);
        gbc.writeMem(0xd0fa, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf879, gbc.sp());
        EXPECT(0xd0fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0fa));
        EXPECT(0x1, gbc.readMem(0xd0fb));
        // CB 01 0123
        gbc.setState(0x1be7, 0x1295, 0xa250, 0xf1c, 0xf56f, 0xb138, 0x1, 0x0);
        gbc.writeMem(0x1be7, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1295, gbc.sp());
        EXPECT(0x1be9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0124
        gbc.setState(0x647e, 0xef58, 0xc410, 0x7856, 0xf6ed, 0x572, 0x1, 0x0);
        gbc.writeMem(0x647e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xef58, gbc.sp());
        EXPECT(0x6480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0125
        gbc.setState(0xa765, 0x744, 0xc2c0, 0xf236, 0xe979, 0x6caf, 0x0, 0x0);
        gbc.writeMem(0xa765, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x744, gbc.sp());
        EXPECT(0xa767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa765));
        EXPECT(0x1, gbc.readMem(0xa766));
        // CB 01 0126
        gbc.setState(0x43e4, 0xcebc, 0xa610, 0x8470, 0xbbc5, 0x5308, 0x0, 0x1);
        gbc.writeMem(0x43e4, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xcebc, gbc.sp());
        EXPECT(0x43e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0127
        gbc.setState(0x5b1, 0x9d14, 0xfae0, 0xdfc3, 0x535b, 0x7b1c, 0x0, 0x0);
        gbc.writeMem(0x5b1, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9d14, gbc.sp());
        EXPECT(0x5b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0128
        gbc.setState(0x8cc, 0x31e4, 0x2aa0, 0xda72, 0xe1d2, 0x2c1b, 0x0, 0x0);
        gbc.writeMem(0x8cc, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x31e4, gbc.sp());
        EXPECT(0x8ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0129
        gbc.setState(0x3701, 0x9321, 0x55f0, 0xcf9f, 0x6c82, 0xdbf8, 0x0, 0x1);
        gbc.writeMem(0x3701, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9321, gbc.sp());
        EXPECT(0x3703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 012A
        gbc.setState(0xcd7, 0xdbc1, 0xbbe0, 0xf45, 0xc02e, 0x4a3a, 0x1, 0x0);
        gbc.writeMem(0xcd7, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xdbc1, gbc.sp());
        EXPECT(0xcd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 012B
        gbc.setState(0x3b31, 0xcc83, 0xee70, 0xf6e5, 0x1c69, 0xc48, 0x0, 0x1);
        gbc.writeMem(0x3b31, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xcc83, gbc.sp());
        EXPECT(0x3b33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 012D
        gbc.setState(0x88b2, 0x77f4, 0x6f20, 0x1c83, 0xabd4, 0xa017, 0x1, 0x0);
        gbc.writeMem(0x88b2, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x77f4, gbc.sp());
        EXPECT(0x88b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88b2));
        EXPECT(0x1, gbc.readMem(0x88b3));
        // CB 01 012E
        gbc.setState(0x7249, 0x9cc3, 0x86f0, 0x7684, 0xe665, 0xdedf, 0x1, 0x1);
        gbc.writeMem(0x7249, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9cc3, gbc.sp());
        EXPECT(0x724b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 012F
        gbc.setState(0x5805, 0x380e, 0xc220, 0x7f17, 0x7af2, 0xd5a6, 0x0, 0x1);
        gbc.writeMem(0x5805, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x380e, gbc.sp());
        EXPECT(0x5807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0130
        gbc.setState(0x64a2, 0x3845, 0xe810, 0x6bc2, 0x88b7, 0x9d39, 0x0, 0x0);
        gbc.writeMem(0x64a2, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3845, gbc.sp());
        EXPECT(0x64a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0131
        gbc.setState(0x278, 0xd925, 0xe1d0, 0x143d, 0xb3dd, 0xd30d, 0x1, 0x1);
        gbc.writeMem(0x278, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd925, gbc.sp());
        EXPECT(0x27a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0132
        gbc.setState(0x77f6, 0xd2e2, 0xd320, 0x337a, 0x7db4, 0x2dbf, 0x1, 0x0);
        gbc.writeMem(0x77f6, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd2e2, gbc.sp());
        EXPECT(0x77f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0134
        gbc.setState(0xa43e, 0x4724, 0x3970, 0x88bf, 0x4085, 0x69f8, 0x0, 0x0);
        gbc.writeMem(0xa43e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4724, gbc.sp());
        EXPECT(0xa440, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa43e));
        EXPECT(0x1, gbc.readMem(0xa43f));
        // CB 01 0135
        gbc.setState(0x2eea, 0xc9c5, 0xfaa0, 0x457a, 0x588a, 0xb44a, 0x0, 0x0);
        gbc.writeMem(0x2eea, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc9c5, gbc.sp());
        EXPECT(0x2eec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0136
        gbc.setState(0x7c2f, 0xab0e, 0x2130, 0xeb9d, 0xfdef, 0x353, 0x1, 0x0);
        gbc.writeMem(0x7c2f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xab0e, gbc.sp());
        EXPECT(0x7c31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0137
        gbc.setState(0xc174, 0xfd9e, 0x8630, 0xda8d, 0xd79, 0x48b3, 0x0, 0x0);
        gbc.writeMem(0xc174, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xfd9e, gbc.sp());
        EXPECT(0xc176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc174));
        EXPECT(0x1, gbc.readMem(0xc175));
        // CB 01 0138
        gbc.setState(0x7dc0, 0x7e26, 0x55c0, 0xae6f, 0xa686, 0xae75, 0x1, 0x1);
        gbc.writeMem(0x7dc0, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7e26, gbc.sp());
        EXPECT(0x7dc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0139
        gbc.setState(0x5162, 0x56c2, 0x7120, 0x2c66, 0x1175, 0xd8ef, 0x1, 0x1);
        gbc.writeMem(0x5162, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x56c2, gbc.sp());
        EXPECT(0x5164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 013A
        gbc.setState(0xe8d6, 0x24e6, 0xc990, 0x3006, 0xa615, 0xfe90, 0x0, 0x0);
        gbc.writeMem(0xe8d6, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x24e6, gbc.sp());
        EXPECT(0xe8d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8d6));
        EXPECT(0x1, gbc.readMem(0xe8d7));
        // CB 01 013B
        gbc.setState(0x476b, 0x85f7, 0xa7e0, 0x4625, 0xb322, 0x4e85, 0x1, 0x0);
        gbc.writeMem(0x476b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x85f7, gbc.sp());
        EXPECT(0x476d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 013C
        gbc.setState(0x2427, 0x9d45, 0x1b60, 0x77a5, 0x5fa9, 0xf8c9, 0x0, 0x0);
        gbc.writeMem(0x2427, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9d45, gbc.sp());
        EXPECT(0x2429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 013D
        gbc.setState(0x42ef, 0x7044, 0x6f50, 0xf807, 0x3f49, 0x9c4d, 0x0, 0x1);
        gbc.writeMem(0x42ef, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7044, gbc.sp());
        EXPECT(0x42f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 013E
        gbc.setState(0x404f, 0x8c2c, 0x2220, 0x29a7, 0xd8e8, 0xcbad, 0x1, 0x0);
        gbc.writeMem(0x404f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8c2c, gbc.sp());
        EXPECT(0x4051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 013F
        gbc.setState(0x8c4a, 0x1309, 0xa1d0, 0x51a9, 0xa58b, 0xa15f, 0x1, 0x0);
        gbc.writeMem(0x8c4a, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1309, gbc.sp());
        EXPECT(0x8c4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c4a));
        EXPECT(0x1, gbc.readMem(0x8c4b));
        // CB 01 0140
        gbc.setState(0xe512, 0xc6cb, 0x57b0, 0x976, 0xeb6c, 0xba40, 0x0, 0x1);
        gbc.writeMem(0xe512, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc6cb, gbc.sp());
        EXPECT(0xe514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe512));
        EXPECT(0x1, gbc.readMem(0xe513));
        // CB 01 0141
        gbc.setState(0x6e7f, 0x528b, 0x2f90, 0xe524, 0xe9b1, 0x6957, 0x1, 0x1);
        gbc.writeMem(0x6e7f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x528b, gbc.sp());
        EXPECT(0x6e81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0142
        gbc.setState(0xe99e, 0x966e, 0x7ba0, 0x176c, 0x31ed, 0x5281, 0x0, 0x1);
        gbc.writeMem(0xe99e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x966e, gbc.sp());
        EXPECT(0xe9a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe99e));
        EXPECT(0x1, gbc.readMem(0xe99f));
        // CB 01 0143
        gbc.setState(0x693, 0x85db, 0x56c0, 0x2177, 0x6003, 0xfad1, 0x0, 0x1);
        gbc.writeMem(0x693, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x85db, gbc.sp());
        EXPECT(0x695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0145
        gbc.setState(0x89e5, 0x1de3, 0xe7c0, 0x47aa, 0xec7d, 0xf685, 0x1, 0x0);
        gbc.writeMem(0x89e5, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1de3, gbc.sp());
        EXPECT(0x89e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89e5));
        EXPECT(0x1, gbc.readMem(0x89e6));
        // CB 01 0146
        gbc.setState(0x6488, 0xd361, 0xa320, 0x8ebe, 0x2901, 0xbda8, 0x0, 0x0);
        gbc.writeMem(0x6488, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd361, gbc.sp());
        EXPECT(0x648a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0147
        gbc.setState(0x161e, 0x75f9, 0xa530, 0x4075, 0xcd82, 0x7d98, 0x1, 0x0);
        gbc.writeMem(0x161e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x75f9, gbc.sp());
        EXPECT(0x1620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0148
        gbc.setState(0xbc38, 0x4d38, 0x6dc0, 0xc845, 0x8e84, 0xc581, 0x0, 0x0);
        gbc.writeMem(0xbc38, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4d38, gbc.sp());
        EXPECT(0xbc3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc38));
        EXPECT(0x1, gbc.readMem(0xbc39));
        // CB 01 0149
        gbc.setState(0x7b24, 0xad8d, 0x3dd0, 0x47ff, 0x2a27, 0x8d89, 0x1, 0x1);
        gbc.writeMem(0x7b24, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xad8d, gbc.sp());
        EXPECT(0x7b26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 014A
        gbc.setState(0xe7f6, 0x61c6, 0x7c70, 0x41ab, 0xccbd, 0xb5d4, 0x0, 0x1);
        gbc.writeMem(0xe7f6, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x61c6, gbc.sp());
        EXPECT(0xe7f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7f6));
        EXPECT(0x1, gbc.readMem(0xe7f7));
        // CB 01 014B
        gbc.setState(0xd8b5, 0x7f36, 0x25b0, 0x7699, 0x8cf2, 0xe6fd, 0x0, 0x1);
        gbc.writeMem(0xd8b5, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7f36, gbc.sp());
        EXPECT(0xd8b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8b5));
        EXPECT(0x1, gbc.readMem(0xd8b6));
        // CB 01 014C
        gbc.setState(0x6863, 0x2d5f, 0xfd90, 0xba68, 0xd6c4, 0x475d, 0x1, 0x1);
        gbc.writeMem(0x6863, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2d5f, gbc.sp());
        EXPECT(0x6865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 014D
        gbc.setState(0x6653, 0x6be6, 0x4760, 0x4d50, 0x693e, 0x40f4, 0x1, 0x0);
        gbc.writeMem(0x6653, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6be6, gbc.sp());
        EXPECT(0x6655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 014E
        gbc.setState(0x2714, 0x939a, 0xcc30, 0x435c, 0x59a9, 0x9199, 0x1, 0x1);
        gbc.writeMem(0x2714, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x939a, gbc.sp());
        EXPECT(0x2716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 014F
        gbc.setState(0xede, 0x50d0, 0x9b0, 0x653a, 0x393e, 0xb84e, 0x1, 0x0);
        gbc.writeMem(0xede, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x50d0, gbc.sp());
        EXPECT(0xee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0150
        gbc.setState(0x22dd, 0xf36e, 0x5c40, 0xc8b1, 0xc2de, 0x3e88, 0x1, 0x0);
        gbc.writeMem(0x22dd, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf36e, gbc.sp());
        EXPECT(0x22df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0151
        gbc.setState(0x1dd2, 0x9e4e, 0xe780, 0x19b, 0x5a53, 0x1d3e, 0x0, 0x1);
        gbc.writeMem(0x1dd2, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9e4e, gbc.sp());
        EXPECT(0x1dd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0152
        gbc.setState(0x6c62, 0x7ef6, 0x3800, 0x34ee, 0xfc02, 0xa5bb, 0x0, 0x1);
        gbc.writeMem(0x6c62, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7ef6, gbc.sp());
        EXPECT(0x6c64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0153
        gbc.setState(0x7de4, 0x5b9e, 0xc580, 0x3418, 0x36cd, 0x8d24, 0x1, 0x1);
        gbc.writeMem(0x7de4, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5b9e, gbc.sp());
        EXPECT(0x7de6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0154
        gbc.setState(0xcbb4, 0x8829, 0x3750, 0xc8c3, 0xb122, 0x9dd5, 0x0, 0x0);
        gbc.writeMem(0xcbb4, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8829, gbc.sp());
        EXPECT(0xcbb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbb4));
        EXPECT(0x1, gbc.readMem(0xcbb5));
        // CB 01 0155
        gbc.setState(0x1a2e, 0xc72d, 0x8760, 0x4287, 0x90f8, 0xa883, 0x1, 0x0);
        gbc.writeMem(0x1a2e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc72d, gbc.sp());
        EXPECT(0x1a30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0157
        gbc.setState(0xe6f5, 0xff32, 0xb2d0, 0xc96c, 0x8c47, 0xdb67, 0x0, 0x0);
        gbc.writeMem(0xe6f5, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xff32, gbc.sp());
        EXPECT(0xe6f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6f5));
        EXPECT(0x1, gbc.readMem(0xe6f6));
        // CB 01 0158
        gbc.setState(0x26b0, 0x1da8, 0xf470, 0x3a04, 0x8535, 0x8f3b, 0x0, 0x1);
        gbc.writeMem(0x26b0, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1da8, gbc.sp());
        EXPECT(0x26b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0159
        gbc.setState(0x48a9, 0x41d8, 0xab70, 0x9de1, 0x6258, 0x18c9, 0x1, 0x0);
        gbc.writeMem(0x48a9, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x41d8, gbc.sp());
        EXPECT(0x48ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 015A
        gbc.setState(0xd635, 0x4fb0, 0xb970, 0x20f0, 0xfea4, 0xcc07, 0x0, 0x1);
        gbc.writeMem(0xd635, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4fb0, gbc.sp());
        EXPECT(0xd637, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd635));
        EXPECT(0x1, gbc.readMem(0xd636));
        // CB 01 015B
        gbc.setState(0x1653, 0xc0c5, 0x7880, 0x3734, 0xcc36, 0x50de, 0x1, 0x1);
        gbc.writeMem(0x1653, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc0c5, gbc.sp());
        EXPECT(0x1655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 015C
        gbc.setState(0xd17c, 0x4bf1, 0x9b10, 0x18f7, 0x4a9c, 0x6c59, 0x0, 0x0);
        gbc.writeMem(0xd17c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4bf1, gbc.sp());
        EXPECT(0xd17e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd17c));
        EXPECT(0x1, gbc.readMem(0xd17d));
        // CB 01 015D
        gbc.setState(0x21f, 0xfb89, 0x4140, 0xa6fb, 0xa434, 0xbca, 0x1, 0x0);
        gbc.writeMem(0x21f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xfb89, gbc.sp());
        EXPECT(0x221, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 015E
        gbc.setState(0x79c2, 0x8fc3, 0x1340, 0x46f3, 0x75ad, 0x3930, 0x1, 0x0);
        gbc.writeMem(0x79c2, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8fc3, gbc.sp());
        EXPECT(0x79c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 015F
        gbc.setState(0x8285, 0xb7c2, 0x2c00, 0x8a11, 0x4853, 0x153c, 0x1, 0x0);
        gbc.writeMem(0x8285, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb7c2, gbc.sp());
        EXPECT(0x8287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8285));
        EXPECT(0x1, gbc.readMem(0x8286));
        // CB 01 0160
        gbc.setState(0xfa5, 0x48c4, 0xeea0, 0x3ff7, 0x330, 0x8a0f, 0x0, 0x0);
        gbc.writeMem(0xfa5, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x48c4, gbc.sp());
        EXPECT(0xfa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0161
        gbc.setState(0x41be, 0xce36, 0xe3e0, 0x63c1, 0x9c70, 0x4bdd, 0x0, 0x0);
        gbc.writeMem(0x41be, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xce36, gbc.sp());
        EXPECT(0x41c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0162
        gbc.setState(0x5858, 0x61da, 0xc9f0, 0xc3d2, 0xc5ca, 0x971b, 0x1, 0x1);
        gbc.writeMem(0x5858, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x61da, gbc.sp());
        EXPECT(0x585a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0163
        gbc.setState(0xddb0, 0x5841, 0xc130, 0x1d63, 0xb9a, 0x7cfe, 0x1, 0x1);
        gbc.writeMem(0xddb0, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5841, gbc.sp());
        EXPECT(0xddb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddb0));
        EXPECT(0x1, gbc.readMem(0xddb1));
        // CB 01 0164
        gbc.setState(0xa89d, 0xa34f, 0xa4a0, 0x6ad3, 0x92d3, 0x176, 0x1, 0x1);
        gbc.writeMem(0xa89d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa34f, gbc.sp());
        EXPECT(0xa89f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa89d));
        EXPECT(0x1, gbc.readMem(0xa89e));
        // CB 01 0165
        gbc.setState(0x25ea, 0xff1d, 0xfdf0, 0xcfd9, 0x8ab, 0x14e9, 0x0, 0x0);
        gbc.writeMem(0x25ea, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xff1d, gbc.sp());
        EXPECT(0x25ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0166
        gbc.setState(0x1419, 0xacc7, 0x3590, 0x2cc4, 0x889c, 0x9bb0, 0x0, 0x0);
        gbc.writeMem(0x1419, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xacc7, gbc.sp());
        EXPECT(0x141b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0167
        gbc.setState(0xea5d, 0xb063, 0x5f0, 0x5a38, 0x327c, 0xe458, 0x1, 0x0);
        gbc.writeMem(0xea5d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb063, gbc.sp());
        EXPECT(0xea5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea5d));
        EXPECT(0x1, gbc.readMem(0xea5e));
        // CB 01 0168
        gbc.setState(0x436e, 0xbb60, 0xa5b0, 0x6694, 0xc379, 0xa67b, 0x1, 0x1);
        gbc.writeMem(0x436e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbb60, gbc.sp());
        EXPECT(0x4370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 016A
        gbc.setState(0x16ea, 0x9eea, 0x7530, 0xaf33, 0xdba8, 0xd1f9, 0x1, 0x1);
        gbc.writeMem(0x16ea, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9eea, gbc.sp());
        EXPECT(0x16ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 016C
        gbc.setState(0x4c06, 0xaa64, 0x4f20, 0x2e2c, 0xd4e, 0xdbc, 0x0, 0x0);
        gbc.writeMem(0x4c06, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xaa64, gbc.sp());
        EXPECT(0x4c08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 016D
        gbc.setState(0x2948, 0xa901, 0x95a0, 0x4124, 0xa8ce, 0x3557, 0x0, 0x0);
        gbc.writeMem(0x2948, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa901, gbc.sp());
        EXPECT(0x294a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 016E
        gbc.setState(0x1fb4, 0x32ba, 0x7f0, 0x4274, 0xa133, 0x4534, 0x1, 0x0);
        gbc.writeMem(0x1fb4, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x32ba, gbc.sp());
        EXPECT(0x1fb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 016F
        gbc.setState(0xca0f, 0x3a73, 0xcfb0, 0x61ba, 0xbfe9, 0x602d, 0x0, 0x0);
        gbc.writeMem(0xca0f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3a73, gbc.sp());
        EXPECT(0xca11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca0f));
        EXPECT(0x1, gbc.readMem(0xca10));
        // CB 01 0170
        gbc.setState(0x84f9, 0x382d, 0xad80, 0xc5a3, 0x2fb0, 0x12ec, 0x1, 0x0);
        gbc.writeMem(0x84f9, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x382d, gbc.sp());
        EXPECT(0x84fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84f9));
        EXPECT(0x1, gbc.readMem(0x84fa));
        // CB 01 0171
        gbc.setState(0xe8b6, 0x6c33, 0xf240, 0xc1c4, 0x16f6, 0x29ef, 0x1, 0x1);
        gbc.writeMem(0xe8b6, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6c33, gbc.sp());
        EXPECT(0xe8b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8b6));
        EXPECT(0x1, gbc.readMem(0xe8b7));
        // CB 01 0172
        gbc.setState(0x5b77, 0x5305, 0x87a0, 0x1d50, 0x6146, 0xbc39, 0x1, 0x0);
        gbc.writeMem(0x5b77, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5305, gbc.sp());
        EXPECT(0x5b79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0173
        gbc.setState(0xd29d, 0x4a97, 0x2c10, 0x155c, 0xa1e6, 0xb6c2, 0x0, 0x1);
        gbc.writeMem(0xd29d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4a97, gbc.sp());
        EXPECT(0xd29f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd29d));
        EXPECT(0x1, gbc.readMem(0xd29e));
        // CB 01 0174
        gbc.setState(0xd592, 0xbdc5, 0x7d50, 0x9763, 0x7078, 0xb01b, 0x1, 0x0);
        gbc.writeMem(0xd592, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xbdc5, gbc.sp());
        EXPECT(0xd594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd592));
        EXPECT(0x1, gbc.readMem(0xd593));
        // CB 01 0175
        gbc.setState(0x3573, 0x2a81, 0xd7b0, 0xcac9, 0x41ae, 0x2d61, 0x1, 0x1);
        gbc.writeMem(0x3573, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2a81, gbc.sp());
        EXPECT(0x3575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0176
        gbc.setState(0xa776, 0x60e7, 0xde30, 0x9bc3, 0x8b12, 0x51dd, 0x0, 0x1);
        gbc.writeMem(0xa776, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x60e7, gbc.sp());
        EXPECT(0xa778, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa776));
        EXPECT(0x1, gbc.readMem(0xa777));
        // CB 01 0177
        gbc.setState(0xebc, 0xc0c2, 0x52b0, 0x16d4, 0x2624, 0x5c3a, 0x0, 0x1);
        gbc.writeMem(0xebc, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc0c2, gbc.sp());
        EXPECT(0xebe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0178
        gbc.setState(0x580c, 0x1819, 0x5ff0, 0x1f4e, 0x2466, 0x3e61, 0x1, 0x1);
        gbc.writeMem(0x580c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1819, gbc.sp());
        EXPECT(0x580e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0179
        gbc.setState(0x4e09, 0x1251, 0x1a20, 0x78d1, 0x3863, 0x6213, 0x1, 0x0);
        gbc.writeMem(0x4e09, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1251, gbc.sp());
        EXPECT(0x4e0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 017B
        gbc.setState(0xcd73, 0xde83, 0x6db0, 0xa4bd, 0x86a4, 0x1f81, 0x1, 0x1);
        gbc.writeMem(0xcd73, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xde83, gbc.sp());
        EXPECT(0xcd75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd73));
        EXPECT(0x1, gbc.readMem(0xcd74));
        // CB 01 017C
        gbc.setState(0x492b, 0xac15, 0x5520, 0x6dc9, 0x15c9, 0xd7ab, 0x1, 0x1);
        gbc.writeMem(0x492b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xac15, gbc.sp());
        EXPECT(0x492d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 017D
        gbc.setState(0x190d, 0x10fe, 0x5e70, 0x7cd6, 0x3ae8, 0x42d5, 0x1, 0x1);
        gbc.writeMem(0x190d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x10fe, gbc.sp());
        EXPECT(0x190f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 017E
        gbc.setState(0xe429, 0xa9b, 0x860, 0xa629, 0x6b87, 0xa78f, 0x0, 0x0);
        gbc.writeMem(0xe429, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa9b, gbc.sp());
        EXPECT(0xe42b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe429));
        EXPECT(0x1, gbc.readMem(0xe42a));
        // CB 01 0180
        gbc.setState(0x476f, 0x3aeb, 0x4620, 0x4380, 0x88e9, 0xb111, 0x1, 0x0);
        gbc.writeMem(0x476f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3aeb, gbc.sp());
        EXPECT(0x4771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0181
        gbc.setState(0xa131, 0xe5a1, 0xc620, 0xca7a, 0x382e, 0xe3a1, 0x0, 0x0);
        gbc.writeMem(0xa131, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe5a1, gbc.sp());
        EXPECT(0xa133, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa131));
        EXPECT(0x1, gbc.readMem(0xa132));
        // CB 01 0183
        gbc.setState(0xa5fe, 0xf9f3, 0x8700, 0xcc76, 0x3b7e, 0xa43e, 0x0, 0x0);
        gbc.writeMem(0xa5fe, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf9f3, gbc.sp());
        EXPECT(0xa600, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5fe));
        EXPECT(0x1, gbc.readMem(0xa5ff));
        // CB 01 0184
        gbc.setState(0x7ffa, 0x2eb, 0x40a0, 0x55ed, 0x48e1, 0x192f, 0x0, 0x1);
        gbc.writeMem(0x7ffa, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2eb, gbc.sp());
        EXPECT(0x7ffc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0185
        gbc.setState(0x6432, 0xac0, 0x2a90, 0x8f98, 0x9960, 0x9331, 0x0, 0x0);
        gbc.writeMem(0x6432, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xac0, gbc.sp());
        EXPECT(0x6434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0186
        gbc.setState(0xc5d4, 0xe7fd, 0xdab0, 0x86cc, 0x7d56, 0x4c2d, 0x1, 0x1);
        gbc.writeMem(0xc5d4, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe7fd, gbc.sp());
        EXPECT(0xc5d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5d4));
        EXPECT(0x1, gbc.readMem(0xc5d5));
        // CB 01 0187
        gbc.setState(0xcc55, 0xbd57, 0x4da0, 0x46d4, 0xb07a, 0x613c, 0x0, 0x0);
        gbc.writeMem(0xcc55, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xbd57, gbc.sp());
        EXPECT(0xcc57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc55));
        EXPECT(0x1, gbc.readMem(0xcc56));
        // CB 01 0188
        gbc.setState(0xb619, 0x2d4e, 0xd3e0, 0xd6f7, 0xeae, 0x1bc6, 0x1, 0x1);
        gbc.writeMem(0xb619, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2d4e, gbc.sp());
        EXPECT(0xb61b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb619));
        EXPECT(0x1, gbc.readMem(0xb61a));
        // CB 01 0189
        gbc.setState(0xdf7c, 0xa432, 0xdb30, 0x91b, 0x703e, 0x84ee, 0x1, 0x0);
        gbc.writeMem(0xdf7c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa432, gbc.sp());
        EXPECT(0xdf7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf7c));
        EXPECT(0x1, gbc.readMem(0xdf7d));
        // CB 01 018A
        gbc.setState(0xa177, 0xf5, 0x2530, 0xa37c, 0x98df, 0x5d03, 0x0, 0x1);
        gbc.writeMem(0xa177, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf5, gbc.sp());
        EXPECT(0xa179, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa177));
        EXPECT(0x1, gbc.readMem(0xa178));
        // CB 01 018C
        gbc.setState(0x8824, 0x6063, 0xe850, 0xdc5, 0x9537, 0x6c67, 0x0, 0x0);
        gbc.writeMem(0x8824, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6063, gbc.sp());
        EXPECT(0x8826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8824));
        EXPECT(0x1, gbc.readMem(0x8825));
        // CB 01 018D
        gbc.setState(0x7fcc, 0x7f0a, 0xfd30, 0xda6d, 0x4124, 0x9013, 0x1, 0x1);
        gbc.writeMem(0x7fcc, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7f0a, gbc.sp());
        EXPECT(0x7fce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 018E
        gbc.setState(0xe879, 0x3000, 0xcf60, 0x8e7f, 0x53b2, 0xdfd6, 0x1, 0x0);
        gbc.writeMem(0xe879, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3000, gbc.sp());
        EXPECT(0xe87b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe879));
        EXPECT(0x1, gbc.readMem(0xe87a));
        // CB 01 018F
        gbc.setState(0xddf9, 0x7019, 0xc970, 0x8c6d, 0x4454, 0xe6d1, 0x1, 0x1);
        gbc.writeMem(0xddf9, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7019, gbc.sp());
        EXPECT(0xddfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddf9));
        EXPECT(0x1, gbc.readMem(0xddfa));
        // CB 01 0190
        gbc.setState(0x74ec, 0xcf8a, 0x16c0, 0x768b, 0x796e, 0x6f1a, 0x1, 0x0);
        gbc.writeMem(0x74ec, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xcf8a, gbc.sp());
        EXPECT(0x74ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0191
        gbc.setState(0x55b8, 0x43, 0x3cc0, 0xe8cf, 0xce5a, 0x3e09, 0x0, 0x0);
        gbc.writeMem(0x55b8, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x43, gbc.sp());
        EXPECT(0x55ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0192
        gbc.setState(0xa681, 0x5e32, 0xfcc0, 0xe968, 0x2ce7, 0x596b, 0x1, 0x0);
        gbc.writeMem(0xa681, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5e32, gbc.sp());
        EXPECT(0xa683, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa681));
        EXPECT(0x1, gbc.readMem(0xa682));
        // CB 01 0193
        gbc.setState(0xdfd8, 0xdf05, 0xdff0, 0xfadb, 0xc084, 0xb1fa, 0x1, 0x0);
        gbc.writeMem(0xdfd8, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xdf05, gbc.sp());
        EXPECT(0xdfda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfd8));
        EXPECT(0x1, gbc.readMem(0xdfd9));
        // CB 01 0194
        gbc.setState(0x3e29, 0x45de, 0xc760, 0x57a5, 0x6212, 0xf8be, 0x1, 0x1);
        gbc.writeMem(0x3e29, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x45de, gbc.sp());
        EXPECT(0x3e2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0196
        gbc.setState(0x2375, 0x14d1, 0x9ac0, 0x592a, 0xb499, 0x1a40, 0x1, 0x1);
        gbc.writeMem(0x2375, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x14d1, gbc.sp());
        EXPECT(0x2377, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0197
        gbc.setState(0xddcb, 0x1ef5, 0x15b0, 0xeb48, 0x2863, 0x54ad, 0x0, 0x0);
        gbc.writeMem(0xddcb, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1ef5, gbc.sp());
        EXPECT(0xddcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddcb));
        EXPECT(0x1, gbc.readMem(0xddcc));
        // CB 01 0198
        gbc.setState(0x485, 0xa9f9, 0xd350, 0x5fd6, 0xb2e7, 0x965f, 0x1, 0x1);
        gbc.writeMem(0x485, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa9f9, gbc.sp());
        EXPECT(0x487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0199
        gbc.setState(0xe4f3, 0xb72f, 0x3580, 0xb0c0, 0x3b8f, 0xa808, 0x0, 0x1);
        gbc.writeMem(0xe4f3, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb72f, gbc.sp());
        EXPECT(0xe4f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4f3));
        EXPECT(0x1, gbc.readMem(0xe4f4));
        // CB 01 019A
        gbc.setState(0xb81f, 0xf99a, 0x3d0, 0x129e, 0x1d13, 0x125c, 0x1, 0x0);
        gbc.writeMem(0xb81f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf99a, gbc.sp());
        EXPECT(0xb821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb81f));
        EXPECT(0x1, gbc.readMem(0xb820));
        // CB 01 019B
        gbc.setState(0xc97f, 0x22e9, 0x89c0, 0x27a2, 0x15fa, 0x8a27, 0x1, 0x1);
        gbc.writeMem(0xc97f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x22e9, gbc.sp());
        EXPECT(0xc981, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc97f));
        EXPECT(0x1, gbc.readMem(0xc980));
        // CB 01 019C
        gbc.setState(0x1fb2, 0x629e, 0xf320, 0xc0db, 0xd99b, 0xce28, 0x1, 0x1);
        gbc.writeMem(0x1fb2, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x629e, gbc.sp());
        EXPECT(0x1fb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 019E
        gbc.setState(0x8104, 0x9def, 0x2a0, 0x213a, 0x5997, 0xf514, 0x1, 0x1);
        gbc.writeMem(0x8104, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9def, gbc.sp());
        EXPECT(0x8106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8104));
        EXPECT(0x1, gbc.readMem(0x8105));
        // CB 01 019F
        gbc.setState(0xbe60, 0x5cdb, 0xcb00, 0xcc6c, 0xd93, 0x1260, 0x0, 0x0);
        gbc.writeMem(0xbe60, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5cdb, gbc.sp());
        EXPECT(0xbe62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe60));
        EXPECT(0x1, gbc.readMem(0xbe61));
        // CB 01 01A0
        gbc.setState(0x21df, 0xce96, 0xc1f0, 0x1ea3, 0x8d86, 0x64a8, 0x0, 0x0);
        gbc.writeMem(0x21df, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xce96, gbc.sp());
        EXPECT(0x21e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 01A1
        gbc.setState(0x8738, 0x7909, 0xa710, 0x72da, 0x105b, 0x71c, 0x1, 0x1);
        gbc.writeMem(0x8738, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7909, gbc.sp());
        EXPECT(0x873a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8738));
        EXPECT(0x1, gbc.readMem(0x8739));
        // CB 01 01A2
        gbc.setState(0xd169, 0xb171, 0x4160, 0xff57, 0xbaea, 0xfa3e, 0x1, 0x1);
        gbc.writeMem(0xd169, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb171, gbc.sp());
        EXPECT(0xd16b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd169));
        EXPECT(0x1, gbc.readMem(0xd16a));
        // CB 01 01A3
        gbc.setState(0xd6d9, 0xc377, 0x9a80, 0x6da7, 0x7f14, 0x5351, 0x0, 0x1);
        gbc.writeMem(0xd6d9, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc377, gbc.sp());
        EXPECT(0xd6db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6d9));
        EXPECT(0x1, gbc.readMem(0xd6da));
        // CB 01 01A4
        gbc.setState(0x4f34, 0xf217, 0x4eb0, 0xc12b, 0x61ff, 0xe10d, 0x1, 0x0);
        gbc.writeMem(0x4f34, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf217, gbc.sp());
        EXPECT(0x4f36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 01A5
        gbc.setState(0x31d9, 0x7371, 0x8d10, 0x5c56, 0x3d6c, 0xcdaa, 0x1, 0x1);
        gbc.writeMem(0x31d9, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7371, gbc.sp());
        EXPECT(0x31db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 01A6
        gbc.setState(0x4f3e, 0xbaba, 0x5b90, 0x83d3, 0x24ca, 0xf4cf, 0x0, 0x1);
        gbc.writeMem(0x4f3e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xbaba, gbc.sp());
        EXPECT(0x4f40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 01A7
        gbc.setState(0x9275, 0x7981, 0x2d40, 0x7298, 0xa6be, 0x145b, 0x1, 0x1);
        gbc.writeMem(0x9275, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7981, gbc.sp());
        EXPECT(0x9277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9275));
        EXPECT(0x1, gbc.readMem(0x9276));
        // CB 01 01A8
        gbc.setState(0x2980, 0xda95, 0xd8e0, 0xeb3c, 0xcd83, 0x473b, 0x1, 0x1);
        gbc.writeMem(0x2980, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xda95, gbc.sp());
        EXPECT(0x2982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 01A9
        gbc.setState(0x3721, 0x17c1, 0x4540, 0xf746, 0x62a1, 0x3bc1, 0x1, 0x0);
        gbc.writeMem(0x3721, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x17c1, gbc.sp());
        EXPECT(0x3723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 01AA
        gbc.setState(0xa35e, 0x95c6, 0xcb70, 0x7cd5, 0xf7b2, 0xa10a, 0x1, 0x0);
        gbc.writeMem(0xa35e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x95c6, gbc.sp());
        EXPECT(0xa360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa35e));
        EXPECT(0x1, gbc.readMem(0xa35f));
        // CB 01 01AB
        gbc.setState(0x3822, 0x767c, 0xf20, 0x52, 0x1f52, 0x8c76, 0x0, 0x1);
        gbc.writeMem(0x3822, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x767c, gbc.sp());
        EXPECT(0x3824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 01AC
        gbc.setState(0x8a2a, 0x10cc, 0xab90, 0xbc83, 0xb743, 0x8ec7, 0x0, 0x0);
        gbc.writeMem(0x8a2a, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x10cc, gbc.sp());
        EXPECT(0x8a2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a2a));
        EXPECT(0x1, gbc.readMem(0x8a2b));
        // CB 01 01AD
        gbc.setState(0xab29, 0x295e, 0xead0, 0x67f3, 0x3413, 0xa2c7, 0x0, 0x1);
        gbc.writeMem(0xab29, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x295e, gbc.sp());
        EXPECT(0xab2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab29));
        EXPECT(0x1, gbc.readMem(0xab2a));
        // CB 01 01AE
        gbc.setState(0xa3ca, 0x1d9d, 0xeb60, 0x8e1d, 0x6f52, 0x682f, 0x0, 0x0);
        gbc.writeMem(0xa3ca, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1d9d, gbc.sp());
        EXPECT(0xa3cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ca));
        EXPECT(0x1, gbc.readMem(0xa3cb));
        // CB 01 01AF
        gbc.setState(0x662a, 0x6bbe, 0x4fb0, 0xc1d3, 0x36c5, 0xb33b, 0x0, 0x1);
        gbc.writeMem(0x662a, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6bbe, gbc.sp());
        EXPECT(0x662c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 01B0
        gbc.setState(0xc8a8, 0xef4, 0x9310, 0xd53e, 0xb34c, 0x89d8, 0x0, 0x0);
        gbc.writeMem(0xc8a8, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xef4, gbc.sp());
        EXPECT(0xc8aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8a8));
        EXPECT(0x1, gbc.readMem(0xc8a9));
        // CB 01 01B1
        gbc.setState(0xefe5, 0x63b9, 0xac10, 0x7e3, 0x638e, 0xa65a, 0x1, 0x0);
        gbc.writeMem(0xefe5, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x63b9, gbc.sp());
        EXPECT(0xefe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefe5));
        EXPECT(0x1, gbc.readMem(0xefe6));
        // CB 01 01B2
        gbc.setState(0x6f9d, 0x4095, 0xf100, 0x9faa, 0x2baf, 0x8dc1, 0x1, 0x0);
        gbc.writeMem(0x6f9d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4095, gbc.sp());
        EXPECT(0x6f9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 01B3
        gbc.setState(0x4079, 0xe9c5, 0x8b50, 0x48b, 0x4460, 0x5226, 0x1, 0x1);
        gbc.writeMem(0x4079, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe9c5, gbc.sp());
        EXPECT(0x407b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 01B4
        gbc.setState(0x33, 0x31b3, 0x7ae0, 0x8662, 0xafde, 0x9b78, 0x1, 0x1);
        gbc.writeMem(0x33, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x31b3, gbc.sp());
        EXPECT(0x35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 01B5
        gbc.setState(0x3018, 0xcb2f, 0x7580, 0xc053, 0xc616, 0xa9dd, 0x0, 0x0);
        gbc.writeMem(0x3018, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xcb2f, gbc.sp());
        EXPECT(0x301a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 01B6
        gbc.setState(0x4f40, 0x7837, 0x2970, 0x643f, 0x383b, 0x9cac, 0x1, 0x1);
        gbc.writeMem(0x4f40, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7837, gbc.sp());
        EXPECT(0x4f42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 01B7
        gbc.setState(0xe23c, 0x63dc, 0x3300, 0x1201, 0xada2, 0xd90a, 0x1, 0x0);
        gbc.writeMem(0xe23c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x63dc, gbc.sp());
        EXPECT(0xe23e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe23c));
        EXPECT(0x1, gbc.readMem(0xe23d));
        // CB 01 01B8
        gbc.setState(0xad46, 0x8296, 0x6870, 0xebe5, 0x62ee, 0x71d2, 0x0, 0x0);
        gbc.writeMem(0xad46, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8296, gbc.sp());
        EXPECT(0xad48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad46));
        EXPECT(0x1, gbc.readMem(0xad47));
        // CB 01 01B9
        gbc.setState(0x1fd2, 0x94f2, 0x2aa0, 0xb287, 0x9e0b, 0xc9d4, 0x0, 0x1);
        gbc.writeMem(0x1fd2, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x94f2, gbc.sp());
        EXPECT(0x1fd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 01BA
        gbc.setState(0x28e2, 0x6728, 0x9000, 0x1097, 0xd139, 0xcc2, 0x0, 0x0);
        gbc.writeMem(0x28e2, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6728, gbc.sp());
        EXPECT(0x28e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 01BB
        gbc.setState(0x4f00, 0x3c83, 0x81d0, 0x97a, 0xb67c, 0x8fda, 0x1, 0x1);
        gbc.writeMem(0x4f00, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3c83, gbc.sp());
        EXPECT(0x4f02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 01BC
        gbc.setState(0xb398, 0xc793, 0xb470, 0x8b48, 0xef15, 0xa04c, 0x0, 0x1);
        gbc.writeMem(0xb398, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc793, gbc.sp());
        EXPECT(0xb39a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb398));
        EXPECT(0x1, gbc.readMem(0xb399));
        // CB 01 01BD
        gbc.setState(0xb43a, 0x5d43, 0x4620, 0xcfe0, 0x98b, 0xf705, 0x0, 0x1);
        gbc.writeMem(0xb43a, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5d43, gbc.sp());
        EXPECT(0xb43c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb43a));
        EXPECT(0x1, gbc.readMem(0xb43b));
        // CB 01 01BE
        gbc.setState(0x323f, 0xd39e, 0xe060, 0xdddc, 0xf6b8, 0xea0f, 0x0, 0x1);
        gbc.writeMem(0x323f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd39e, gbc.sp());
        EXPECT(0x3241, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 01BF
        gbc.setState(0xb37f, 0x7cf9, 0x1340, 0x3aa5, 0xa720, 0xeebc, 0x1, 0x1);
        gbc.writeMem(0xb37f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7cf9, gbc.sp());
        EXPECT(0xb381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb37f));
        EXPECT(0x1, gbc.readMem(0xb380));
        // CB 01 01C1
        gbc.setState(0x8304, 0xe440, 0xfdd0, 0x18e2, 0x5b95, 0x1462, 0x0, 0x1);
        gbc.writeMem(0x8304, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe440, gbc.sp());
        EXPECT(0x8306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8304));
        EXPECT(0x1, gbc.readMem(0x8305));
        // CB 01 01C2
        gbc.setState(0x628f, 0xee33, 0xafb0, 0x2c68, 0x4df5, 0xb33d, 0x1, 0x1);
        gbc.writeMem(0x628f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xee33, gbc.sp());
        EXPECT(0x6291, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 01C3
        gbc.setState(0x8bca, 0x6b04, 0x1d30, 0x1c5f, 0xe6f1, 0xd805, 0x1, 0x1);
        gbc.writeMem(0x8bca, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6b04, gbc.sp());
        EXPECT(0x8bcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bca));
        EXPECT(0x1, gbc.readMem(0x8bcb));
        // CB 01 01C4
        gbc.setState(0x798, 0x6c43, 0x6ab0, 0xee78, 0xd063, 0xe085, 0x0, 0x0);
        gbc.writeMem(0x798, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6c43, gbc.sp());
        EXPECT(0x79a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 01C5
        gbc.setState(0x970b, 0x11d8, 0x2e60, 0x1009, 0x2378, 0x42dd, 0x1, 0x1);
        gbc.writeMem(0x970b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x11d8, gbc.sp());
        EXPECT(0x970d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x970b));
        EXPECT(0x1, gbc.readMem(0x970c));
        // CB 01 01C6
        gbc.setState(0xb5cb, 0x7cd2, 0x1aa0, 0xd68a, 0x5f05, 0x3779, 0x0, 0x1);
        gbc.writeMem(0xb5cb, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7cd2, gbc.sp());
        EXPECT(0xb5cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5cb));
        EXPECT(0x1, gbc.readMem(0xb5cc));
        // CB 01 01C7
        gbc.setState(0xe7ee, 0xc427, 0x2e00, 0x5ce3, 0x3c7c, 0xfb59, 0x1, 0x0);
        gbc.writeMem(0xe7ee, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc427, gbc.sp());
        EXPECT(0xe7f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7ee));
        EXPECT(0x1, gbc.readMem(0xe7ef));
        // CB 01 01C8
        gbc.setState(0x29b8, 0x6e97, 0x7f50, 0x567, 0xe535, 0xbe91, 0x0, 0x0);
        gbc.writeMem(0x29b8, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6e97, gbc.sp());
        EXPECT(0x29ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 01C9
        gbc.setState(0x98ea, 0x7b50, 0xf870, 0xd07c, 0x78aa, 0x45cf, 0x0, 0x1);
        gbc.writeMem(0x98ea, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7b50, gbc.sp());
        EXPECT(0x98ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98ea));
        EXPECT(0x1, gbc.readMem(0x98eb));
        // CB 01 01CA
        gbc.setState(0xc38, 0x57c1, 0x8940, 0x3421, 0x16ce, 0xcd2a, 0x1, 0x0);
        gbc.writeMem(0xc38, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x57c1, gbc.sp());
        EXPECT(0xc3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 01CB
        gbc.setState(0xceeb, 0x98da, 0x8230, 0x8c83, 0xcce6, 0xfe89, 0x1, 0x1);
        gbc.writeMem(0xceeb, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x98da, gbc.sp());
        EXPECT(0xceed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceeb));
        EXPECT(0x1, gbc.readMem(0xceec));
        // CB 01 01CC
        gbc.setState(0xcd60, 0x1d4e, 0x22e0, 0x830b, 0xf267, 0x86ea, 0x1, 0x0);
        gbc.writeMem(0xcd60, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1d4e, gbc.sp());
        EXPECT(0xcd62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd60));
        EXPECT(0x1, gbc.readMem(0xcd61));
        // CB 01 01CE
        gbc.setState(0x1764, 0x54db, 0x3d90, 0x9293, 0x9f65, 0x3272, 0x0, 0x0);
        gbc.writeMem(0x1764, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x54db, gbc.sp());
        EXPECT(0x1766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 01CF
        gbc.setState(0xdab9, 0xb8f5, 0x9f90, 0xea27, 0x259a, 0x5821, 0x0, 0x1);
        gbc.writeMem(0xdab9, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb8f5, gbc.sp());
        EXPECT(0xdabb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdab9));
        EXPECT(0x1, gbc.readMem(0xdaba));
        // CB 01 01D0
        gbc.setState(0x218f, 0xd53d, 0xa790, 0x93ca, 0x5be5, 0x27da, 0x1, 0x0);
        gbc.writeMem(0x218f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd53d, gbc.sp());
        EXPECT(0x2191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 01D1
        gbc.setState(0xebf8, 0x3f67, 0xc890, 0x7883, 0x988d, 0x8983, 0x1, 0x1);
        gbc.writeMem(0xebf8, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3f67, gbc.sp());
        EXPECT(0xebfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebf8));
        EXPECT(0x1, gbc.readMem(0xebf9));
        // CB 01 01D2
        gbc.setState(0x604b, 0xfdca, 0x3c70, 0xe330, 0x630, 0x307, 0x0, 0x0);
        gbc.writeMem(0x604b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xfdca, gbc.sp());
        EXPECT(0x604d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 01D3
        gbc.setState(0x19d4, 0xf289, 0x890, 0x5ec8, 0xc372, 0x498b, 0x0, 0x0);
        gbc.writeMem(0x19d4, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf289, gbc.sp());
        EXPECT(0x19d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 01D5
        gbc.setState(0xe4f3, 0xbef0, 0x15b0, 0x4fac, 0x4411, 0x7dfb, 0x1, 0x1);
        gbc.writeMem(0xe4f3, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xbef0, gbc.sp());
        EXPECT(0xe4f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4f3));
        EXPECT(0x1, gbc.readMem(0xe4f4));
        // CB 01 01D6
        gbc.setState(0x3ce8, 0xe5f7, 0x8330, 0xa811, 0x34ed, 0x4b84, 0x1, 0x1);
        gbc.writeMem(0x3ce8, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe5f7, gbc.sp());
        EXPECT(0x3cea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 01D8
        gbc.setState(0x420d, 0x44d1, 0xfa20, 0xaf63, 0x9573, 0xebcd, 0x1, 0x0);
        gbc.writeMem(0x420d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x44d1, gbc.sp());
        EXPECT(0x420f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 01D9
        gbc.setState(0x9592, 0x775b, 0x3c60, 0x5c1d, 0xeb1c, 0x76bd, 0x0, 0x1);
        gbc.writeMem(0x9592, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x775b, gbc.sp());
        EXPECT(0x9594, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9592));
        EXPECT(0x1, gbc.readMem(0x9593));
        // CB 01 01DA
        gbc.setState(0x7eaa, 0x2d19, 0x8350, 0x72d5, 0x2e8, 0x4a6d, 0x1, 0x0);
        gbc.writeMem(0x7eaa, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2d19, gbc.sp());
        EXPECT(0x7eac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 01DB
        gbc.setState(0x26be, 0x70c4, 0xd1c0, 0x3652, 0xf435, 0x4c0d, 0x1, 0x1);
        gbc.writeMem(0x26be, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x70c4, gbc.sp());
        EXPECT(0x26c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 01DC
        gbc.setState(0x8e4d, 0xf34a, 0x760, 0xf058, 0x1be3, 0x646f, 0x1, 0x0);
        gbc.writeMem(0x8e4d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf34a, gbc.sp());
        EXPECT(0x8e4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e4d));
        EXPECT(0x1, gbc.readMem(0x8e4e));
        // CB 01 01DD
        gbc.setState(0x529a, 0xa525, 0x1370, 0x1701, 0xae9b, 0xdf73, 0x0, 0x1);
        gbc.writeMem(0x529a, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa525, gbc.sp());
        EXPECT(0x529c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 01DE
        gbc.setState(0x3ad6, 0xa102, 0xd640, 0x1b12, 0xc5f5, 0x150f, 0x0, 0x1);
        gbc.writeMem(0x3ad6, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa102, gbc.sp());
        EXPECT(0x3ad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 01DF
        gbc.setState(0x9c86, 0x6b65, 0xbd0, 0xc78a, 0x32d, 0xac88, 0x1, 0x1);
        gbc.writeMem(0x9c86, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6b65, gbc.sp());
        EXPECT(0x9c88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c86));
        EXPECT(0x1, gbc.readMem(0x9c87));
        // CB 01 01E0
        gbc.setState(0xd471, 0x5f8d, 0xffd0, 0x1662, 0xca4, 0x7583, 0x1, 0x1);
        gbc.writeMem(0xd471, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5f8d, gbc.sp());
        EXPECT(0xd473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd471));
        EXPECT(0x1, gbc.readMem(0xd472));
        // CB 01 01E2
        gbc.setState(0xacde, 0xc3b7, 0x6950, 0x8c8f, 0xa499, 0x1d17, 0x1, 0x0);
        gbc.writeMem(0xacde, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc3b7, gbc.sp());
        EXPECT(0xace0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacde));
        EXPECT(0x1, gbc.readMem(0xacdf));
        // CB 01 01E3
        gbc.setState(0xa6f4, 0x4ed6, 0x8c00, 0x8c8d, 0x424b, 0x4553, 0x0, 0x0);
        gbc.writeMem(0xa6f4, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4ed6, gbc.sp());
        EXPECT(0xa6f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6f4));
        EXPECT(0x1, gbc.readMem(0xa6f5));
        // CB 01 01E4
        gbc.setState(0x8d4, 0xe374, 0xf2e0, 0x1b68, 0x4588, 0x39a0, 0x1, 0x1);
        gbc.writeMem(0x8d4, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe374, gbc.sp());
        EXPECT(0x8d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 01E5
        gbc.setState(0x9c1f, 0xbab4, 0xad80, 0xa7ea, 0x7345, 0x95e8, 0x0, 0x0);
        gbc.writeMem(0x9c1f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xbab4, gbc.sp());
        EXPECT(0x9c21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c1f));
        EXPECT(0x1, gbc.readMem(0x9c20));
        // CB 01 01E6
        gbc.setState(0x601e, 0x1e27, 0xc1f0, 0xb83f, 0x4862, 0x9722, 0x1, 0x1);
        gbc.writeMem(0x601e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1e27, gbc.sp());
        EXPECT(0x6020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 01E8
        gbc.setState(0x548, 0xcd83, 0x2a10, 0x4166, 0x2c24, 0xf2f1, 0x1, 0x0);
        gbc.writeMem(0x548, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xcd83, gbc.sp());
        EXPECT(0x54a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 01E9
        gbc.setState(0x1909, 0xb1a0, 0x5470, 0xdb95, 0xb62e, 0x90e7, 0x1, 0x0);
        gbc.writeMem(0x1909, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb1a0, gbc.sp());
        EXPECT(0x190b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 01EA
        gbc.setState(0xbca2, 0xe0bb, 0xacb0, 0xb793, 0x53de, 0x8161, 0x1, 0x0);
        gbc.writeMem(0xbca2, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe0bb, gbc.sp());
        EXPECT(0xbca4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbca2));
        EXPECT(0x1, gbc.readMem(0xbca3));
        // CB 01 01EB
        gbc.setState(0x555f, 0xfac5, 0x250, 0x213, 0xefb2, 0x93da, 0x0, 0x0);
        gbc.writeMem(0x555f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xfac5, gbc.sp());
        EXPECT(0x5561, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 01EC
        gbc.setState(0xb17a, 0x8ba9, 0xd160, 0x1af9, 0x2bab, 0xafbe, 0x1, 0x0);
        gbc.writeMem(0xb17a, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8ba9, gbc.sp());
        EXPECT(0xb17c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb17a));
        EXPECT(0x1, gbc.readMem(0xb17b));
        // CB 01 01ED
        gbc.setState(0x7eb7, 0x645b, 0xabd0, 0xa13e, 0x63e5, 0x9ef6, 0x0, 0x1);
        gbc.writeMem(0x7eb7, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x645b, gbc.sp());
        EXPECT(0x7eb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 01EE
        gbc.setState(0x9345, 0xf6e0, 0xae40, 0xb2c9, 0xfd5e, 0x209, 0x1, 0x1);
        gbc.writeMem(0x9345, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf6e0, gbc.sp());
        EXPECT(0x9347, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9345));
        EXPECT(0x1, gbc.readMem(0x9346));
        // CB 01 01EF
        gbc.setState(0xe902, 0x27f6, 0xf310, 0x4f81, 0xbbd2, 0x1dbb, 0x0, 0x0);
        gbc.writeMem(0xe902, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x27f6, gbc.sp());
        EXPECT(0xe904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe902));
        EXPECT(0x1, gbc.readMem(0xe903));
        // CB 01 01F0
        gbc.setState(0x1c26, 0x4eec, 0x9d00, 0xb2eb, 0x50c5, 0xda48, 0x1, 0x1);
        gbc.writeMem(0x1c26, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4eec, gbc.sp());
        EXPECT(0x1c28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 01F1
        gbc.setState(0x7912, 0xc3e5, 0xc00, 0xc9a2, 0x6a24, 0x51e0, 0x0, 0x1);
        gbc.writeMem(0x7912, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc3e5, gbc.sp());
        EXPECT(0x7914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 01F2
        gbc.setState(0xa534, 0x6798, 0x8cd0, 0x83db, 0xd4b3, 0x44d8, 0x1, 0x0);
        gbc.writeMem(0xa534, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6798, gbc.sp());
        EXPECT(0xa536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa534));
        EXPECT(0x1, gbc.readMem(0xa535));
        // CB 01 01F3
        gbc.setState(0x9572, 0x1e39, 0x8230, 0x598f, 0x57d, 0xf0fb, 0x0, 0x1);
        gbc.writeMem(0x9572, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1e39, gbc.sp());
        EXPECT(0x9574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9572));
        EXPECT(0x1, gbc.readMem(0x9573));
        // CB 01 01F4
        gbc.setState(0x6dec, 0x757f, 0xedf0, 0x1b35, 0x34af, 0x84cc, 0x0, 0x0);
        gbc.writeMem(0x6dec, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x757f, gbc.sp());
        EXPECT(0x6dee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 01F5
        gbc.setState(0x4a05, 0xabd8, 0xf90, 0x61b4, 0x922, 0x781d, 0x0, 0x1);
        gbc.writeMem(0x4a05, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xabd8, gbc.sp());
        EXPECT(0x4a07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 01F6
        gbc.setState(0x6a20, 0xc723, 0xabc0, 0x9aef, 0x48eb, 0x8f6d, 0x0, 0x0);
        gbc.writeMem(0x6a20, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc723, gbc.sp());
        EXPECT(0x6a22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 01F7
        gbc.setState(0x1973, 0x7f9c, 0xcdb0, 0x32ab, 0xfe14, 0x3ef0, 0x0, 0x1);
        gbc.writeMem(0x1973, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7f9c, gbc.sp());
        EXPECT(0x1975, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 01F8
        gbc.setState(0x460b, 0x8988, 0x4700, 0x2cf4, 0x4b41, 0xdbba, 0x0, 0x0);
        gbc.writeMem(0x460b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8988, gbc.sp());
        EXPECT(0x460d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 01F9
        gbc.setState(0x3e8d, 0x1e48, 0x6980, 0xe91, 0x78b1, 0x9cd6, 0x1, 0x1);
        gbc.writeMem(0x3e8d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1e48, gbc.sp());
        EXPECT(0x3e8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 01FB
        gbc.setState(0xd3f8, 0xb211, 0xf910, 0xc2af, 0xfb6a, 0x3d1f, 0x0, 0x1);
        gbc.writeMem(0xd3f8, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb211, gbc.sp());
        EXPECT(0xd3fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3f8));
        EXPECT(0x1, gbc.readMem(0xd3f9));
        // CB 01 01FC
        gbc.setState(0x883b, 0x3732, 0x8b0, 0x1d0, 0xda4, 0x4f52, 0x0, 0x1);
        gbc.writeMem(0x883b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3732, gbc.sp());
        EXPECT(0x883d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x883b));
        EXPECT(0x1, gbc.readMem(0x883c));
        // CB 01 01FD
        gbc.setState(0x313d, 0xce87, 0x93a0, 0x31bf, 0x4511, 0x9976, 0x1, 0x0);
        gbc.writeMem(0x313d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xce87, gbc.sp());
        EXPECT(0x313f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 01FE
        gbc.setState(0x763f, 0x3bb, 0x2290, 0xc10e, 0xd85b, 0x958b, 0x0, 0x0);
        gbc.writeMem(0x763f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3bb, gbc.sp());
        EXPECT(0x7641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 01FF
        gbc.setState(0x58f6, 0x6e19, 0xe8a0, 0x7d28, 0x3c2b, 0x20a9, 0x1, 0x0);
        gbc.writeMem(0x58f6, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6e19, gbc.sp());
        EXPECT(0x58f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0200
        gbc.setState(0x3210, 0x82be, 0x2f90, 0x8559, 0x59db, 0xe414, 0x1, 0x0);
        gbc.writeMem(0x3210, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x82be, gbc.sp());
        EXPECT(0x3212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0201
        gbc.setState(0x5daf, 0x78a5, 0x2580, 0x74ff, 0x6bfb, 0x2935, 0x1, 0x1);
        gbc.writeMem(0x5daf, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x78a5, gbc.sp());
        EXPECT(0x5db1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0202
        gbc.setState(0xd1bd, 0xefa2, 0xfc30, 0x2c1f, 0xea4e, 0x10d1, 0x0, 0x1);
        gbc.writeMem(0xd1bd, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xefa2, gbc.sp());
        EXPECT(0xd1bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1bd));
        EXPECT(0x1, gbc.readMem(0xd1be));
        // CB 01 0203
        gbc.setState(0xc23d, 0x62ee, 0xab20, 0x1f10, 0x69b2, 0xb1de, 0x0, 0x0);
        gbc.writeMem(0xc23d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x62ee, gbc.sp());
        EXPECT(0xc23f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc23d));
        EXPECT(0x1, gbc.readMem(0xc23e));
        // CB 01 0204
        gbc.setState(0x485, 0x4c54, 0x1290, 0x41c6, 0x8e06, 0x497c, 0x0, 0x0);
        gbc.writeMem(0x485, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4c54, gbc.sp());
        EXPECT(0x487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0205
        gbc.setState(0x2a68, 0x8099, 0x3e30, 0x5a71, 0x17bb, 0xc5e0, 0x0, 0x0);
        gbc.writeMem(0x2a68, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8099, gbc.sp());
        EXPECT(0x2a6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0206
        gbc.setState(0xe396, 0x7b8e, 0x5b80, 0xe803, 0x86c, 0x656a, 0x0, 0x0);
        gbc.writeMem(0xe396, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7b8e, gbc.sp());
        EXPECT(0xe398, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe396));
        EXPECT(0x1, gbc.readMem(0xe397));
        // CB 01 0207
        gbc.setState(0x4f95, 0xbb32, 0xe0f0, 0xd6f9, 0x96ac, 0xc1dc, 0x1, 0x1);
        gbc.writeMem(0x4f95, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xbb32, gbc.sp());
        EXPECT(0x4f97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0208
        gbc.setState(0x19b1, 0x5750, 0xf8f0, 0x4968, 0x7756, 0xf978, 0x0, 0x1);
        gbc.writeMem(0x19b1, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5750, gbc.sp());
        EXPECT(0x19b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0209
        gbc.setState(0x6f34, 0xddbf, 0xcde0, 0x9f75, 0xc572, 0xbc29, 0x1, 0x1);
        gbc.writeMem(0x6f34, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xddbf, gbc.sp());
        EXPECT(0x6f36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 020A
        gbc.setState(0x4626, 0x3668, 0x4d60, 0x58fe, 0x6f67, 0x5259, 0x1, 0x0);
        gbc.writeMem(0x4626, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3668, gbc.sp());
        EXPECT(0x4628, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 020B
        gbc.setState(0x8bf9, 0xd717, 0xc1d0, 0x2e62, 0x7186, 0xf96d, 0x0, 0x1);
        gbc.writeMem(0x8bf9, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd717, gbc.sp());
        EXPECT(0x8bfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bf9));
        EXPECT(0x1, gbc.readMem(0x8bfa));
        // CB 01 020D
        gbc.setState(0xc25d, 0x3f1f, 0xe5e0, 0x6471, 0x87, 0xd912, 0x0, 0x0);
        gbc.writeMem(0xc25d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3f1f, gbc.sp());
        EXPECT(0xc25f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc25d));
        EXPECT(0x1, gbc.readMem(0xc25e));
        // CB 01 020E
        gbc.setState(0x4c9a, 0xf020, 0x4320, 0x18bc, 0x56a6, 0xca44, 0x0, 0x0);
        gbc.writeMem(0x4c9a, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf020, gbc.sp());
        EXPECT(0x4c9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 020F
        gbc.setState(0x1e08, 0x36b9, 0x7e10, 0xc485, 0xd1fc, 0x1ad7, 0x0, 0x1);
        gbc.writeMem(0x1e08, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x36b9, gbc.sp());
        EXPECT(0x1e0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0210
        gbc.setState(0x7bb0, 0xd966, 0xf650, 0x293e, 0x2d2b, 0xc279, 0x0, 0x1);
        gbc.writeMem(0x7bb0, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd966, gbc.sp());
        EXPECT(0x7bb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0211
        gbc.setState(0xc24d, 0x2d5e, 0x1380, 0x146f, 0xf906, 0xb870, 0x0, 0x0);
        gbc.writeMem(0xc24d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2d5e, gbc.sp());
        EXPECT(0xc24f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc24d));
        EXPECT(0x1, gbc.readMem(0xc24e));
        // CB 01 0212
        gbc.setState(0x8df8, 0xd478, 0x9ec0, 0x2bb3, 0xccd2, 0x62f2, 0x0, 0x0);
        gbc.writeMem(0x8df8, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd478, gbc.sp());
        EXPECT(0x8dfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8df8));
        EXPECT(0x1, gbc.readMem(0x8df9));
        // CB 01 0213
        gbc.setState(0x3d0f, 0x64a7, 0x6070, 0x2f18, 0x9365, 0xfef6, 0x1, 0x0);
        gbc.writeMem(0x3d0f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x64a7, gbc.sp());
        EXPECT(0x3d11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0215
        gbc.setState(0x20a7, 0x8d8, 0xa650, 0x281b, 0x1c59, 0x5129, 0x0, 0x1);
        gbc.writeMem(0x20a7, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8d8, gbc.sp());
        EXPECT(0x20a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0216
        gbc.setState(0x2ac3, 0xcae7, 0xf110, 0x2fa6, 0xe32d, 0x69d5, 0x0, 0x0);
        gbc.writeMem(0x2ac3, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xcae7, gbc.sp());
        EXPECT(0x2ac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0217
        gbc.setState(0x9180, 0x4af6, 0x3b10, 0xef8d, 0xb92c, 0xf3bd, 0x0, 0x1);
        gbc.writeMem(0x9180, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4af6, gbc.sp());
        EXPECT(0x9182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9180));
        EXPECT(0x1, gbc.readMem(0x9181));
        // CB 01 0218
        gbc.setState(0xbb43, 0xb2d2, 0xe1a0, 0xcaa6, 0x79bc, 0x5d7c, 0x0, 0x0);
        gbc.writeMem(0xbb43, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb2d2, gbc.sp());
        EXPECT(0xbb45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb43));
        EXPECT(0x1, gbc.readMem(0xbb44));
        // CB 01 0219
        gbc.setState(0xe318, 0x5dff, 0x3cf0, 0xcf3d, 0x483c, 0x7cbe, 0x0, 0x1);
        gbc.writeMem(0xe318, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5dff, gbc.sp());
        EXPECT(0xe31a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe318));
        EXPECT(0x1, gbc.readMem(0xe319));
        // CB 01 021A
        gbc.setState(0x29ff, 0x890d, 0x5de0, 0x81bf, 0xe3a0, 0x648d, 0x1, 0x0);
        gbc.writeMem(0x29ff, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x890d, gbc.sp());
        EXPECT(0x2a01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 021B
        gbc.setState(0x99ce, 0x2b5a, 0x19b0, 0x8e6b, 0x3d79, 0x162e, 0x1, 0x1);
        gbc.writeMem(0x99ce, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2b5a, gbc.sp());
        EXPECT(0x99d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99ce));
        EXPECT(0x1, gbc.readMem(0x99cf));
        // CB 01 021C
        gbc.setState(0xb856, 0x9e69, 0xb8c0, 0xf345, 0x8d12, 0x8f52, 0x0, 0x1);
        gbc.writeMem(0xb856, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9e69, gbc.sp());
        EXPECT(0xb858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb856));
        EXPECT(0x1, gbc.readMem(0xb857));
        // CB 01 021D
        gbc.setState(0x9c8a, 0xa415, 0x8130, 0x15ee, 0x8296, 0x645b, 0x1, 0x1);
        gbc.writeMem(0x9c8a, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa415, gbc.sp());
        EXPECT(0x9c8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c8a));
        EXPECT(0x1, gbc.readMem(0x9c8b));
        // CB 01 021F
        gbc.setState(0x3b1d, 0x538e, 0x3ee0, 0xd9f2, 0xa0f2, 0x609b, 0x1, 0x1);
        gbc.writeMem(0x3b1d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x538e, gbc.sp());
        EXPECT(0x3b1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0220
        gbc.setState(0x17c9, 0xf5f3, 0xc2f0, 0xf39b, 0x9930, 0xf808, 0x1, 0x0);
        gbc.writeMem(0x17c9, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf5f3, gbc.sp());
        EXPECT(0x17cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0221
        gbc.setState(0xeb78, 0x7729, 0x1b70, 0xc8ec, 0x70e6, 0x595e, 0x0, 0x0);
        gbc.writeMem(0xeb78, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7729, gbc.sp());
        EXPECT(0xeb7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb78));
        EXPECT(0x1, gbc.readMem(0xeb79));
        // CB 01 0223
        gbc.setState(0xca45, 0x583a, 0xb8c0, 0x7e88, 0x774c, 0x93a0, 0x1, 0x0);
        gbc.writeMem(0xca45, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x583a, gbc.sp());
        EXPECT(0xca47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca45));
        EXPECT(0x1, gbc.readMem(0xca46));
        // CB 01 0224
        gbc.setState(0x6266, 0x2ea4, 0xe190, 0x7b0e, 0xf369, 0x425e, 0x0, 0x0);
        gbc.writeMem(0x6266, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2ea4, gbc.sp());
        EXPECT(0x6268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0225
        gbc.setState(0xe5d3, 0x9578, 0x23a0, 0xc722, 0x9c5, 0x8687, 0x0, 0x1);
        gbc.writeMem(0xe5d3, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9578, gbc.sp());
        EXPECT(0xe5d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5d3));
        EXPECT(0x1, gbc.readMem(0xe5d4));
        // CB 01 0226
        gbc.setState(0xbc4b, 0x333b, 0xec30, 0xc9f3, 0xfc09, 0x9077, 0x1, 0x1);
        gbc.writeMem(0xbc4b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x333b, gbc.sp());
        EXPECT(0xbc4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc4b));
        EXPECT(0x1, gbc.readMem(0xbc4c));
        // CB 01 0227
        gbc.setState(0xb26f, 0xcb28, 0x7590, 0x36f9, 0x8a36, 0xa51c, 0x1, 0x1);
        gbc.writeMem(0xb26f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xcb28, gbc.sp());
        EXPECT(0xb271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb26f));
        EXPECT(0x1, gbc.readMem(0xb270));
        // CB 01 0228
        gbc.setState(0xa85d, 0x4427, 0xc870, 0x4357, 0x24e7, 0xc1bd, 0x0, 0x0);
        gbc.writeMem(0xa85d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4427, gbc.sp());
        EXPECT(0xa85f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa85d));
        EXPECT(0x1, gbc.readMem(0xa85e));
        // CB 01 0229
        gbc.setState(0x6cc0, 0x6ccd, 0x2cc0, 0xa104, 0x1a68, 0x2f23, 0x1, 0x1);
        gbc.writeMem(0x6cc0, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6ccd, gbc.sp());
        EXPECT(0x6cc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 022A
        gbc.setState(0x5f65, 0xb42a, 0x260, 0xc12b, 0xc02b, 0x8ef6, 0x1, 0x1);
        gbc.writeMem(0x5f65, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb42a, gbc.sp());
        EXPECT(0x5f67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 022B
        gbc.setState(0x6c33, 0x19e, 0x1a50, 0x5f62, 0xde2d, 0xec2b, 0x1, 0x0);
        gbc.writeMem(0x6c33, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x19e, gbc.sp());
        EXPECT(0x6c35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 022C
        gbc.setState(0x9760, 0x6463, 0xc4b0, 0xc934, 0x7566, 0x257a, 0x0, 0x0);
        gbc.writeMem(0x9760, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6463, gbc.sp());
        EXPECT(0x9762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9760));
        EXPECT(0x1, gbc.readMem(0x9761));
        // CB 01 022D
        gbc.setState(0x3226, 0x72d3, 0xdf50, 0xc146, 0x80c0, 0xe4e0, 0x0, 0x1);
        gbc.writeMem(0x3226, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x72d3, gbc.sp());
        EXPECT(0x3228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 022E
        gbc.setState(0xcf37, 0xf2bd, 0xbaf0, 0x470f, 0x2ab8, 0xae9, 0x0, 0x0);
        gbc.writeMem(0xcf37, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf2bd, gbc.sp());
        EXPECT(0xcf39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf37));
        EXPECT(0x1, gbc.readMem(0xcf38));
        // CB 01 022F
        gbc.setState(0x7a1f, 0x5488, 0xa50, 0x2361, 0x2c84, 0x6e37, 0x0, 0x0);
        gbc.writeMem(0x7a1f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5488, gbc.sp());
        EXPECT(0x7a21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0230
        gbc.setState(0x3911, 0x144e, 0x7960, 0xd8a, 0x54ba, 0x78d4, 0x0, 0x1);
        gbc.writeMem(0x3911, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x144e, gbc.sp());
        EXPECT(0x3913, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0231
        gbc.setState(0xb84e, 0x662, 0x1220, 0xa51, 0xf5af, 0x7625, 0x1, 0x0);
        gbc.writeMem(0xb84e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x662, gbc.sp());
        EXPECT(0xb850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb84e));
        EXPECT(0x1, gbc.readMem(0xb84f));
        // CB 01 0232
        gbc.setState(0x80e0, 0xbd7f, 0xad80, 0xa1fc, 0xc485, 0x2f37, 0x0, 0x1);
        gbc.writeMem(0x80e0, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xbd7f, gbc.sp());
        EXPECT(0x80e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e0));
        EXPECT(0x1, gbc.readMem(0x80e1));
        // CB 01 0233
        gbc.setState(0x5910, 0x374a, 0x4430, 0xaa26, 0xb804, 0x9dfe, 0x1, 0x0);
        gbc.writeMem(0x5910, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x374a, gbc.sp());
        EXPECT(0x5912, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0234
        gbc.setState(0x452, 0x66a7, 0xaa90, 0xcffe, 0xcd12, 0x40d4, 0x1, 0x0);
        gbc.writeMem(0x452, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x66a7, gbc.sp());
        EXPECT(0x454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0235
        gbc.setState(0x8367, 0xe7b5, 0xbec0, 0x4a85, 0x5e4a, 0xfee, 0x0, 0x0);
        gbc.writeMem(0x8367, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe7b5, gbc.sp());
        EXPECT(0x8369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8367));
        EXPECT(0x1, gbc.readMem(0x8368));
        // CB 01 0236
        gbc.setState(0x881e, 0x6396, 0xc3b0, 0x2344, 0x70a9, 0xf377, 0x0, 0x0);
        gbc.writeMem(0x881e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6396, gbc.sp());
        EXPECT(0x8820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x881e));
        EXPECT(0x1, gbc.readMem(0x881f));
        // CB 01 0237
        gbc.setState(0xebb5, 0xe00d, 0x6a40, 0xbb50, 0xbe10, 0xf980, 0x0, 0x0);
        gbc.writeMem(0xebb5, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe00d, gbc.sp());
        EXPECT(0xebb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebb5));
        EXPECT(0x1, gbc.readMem(0xebb6));
        // CB 01 0238
        gbc.setState(0x8444, 0x4a4e, 0x9700, 0x3e23, 0x2754, 0x300d, 0x1, 0x0);
        gbc.writeMem(0x8444, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4a4e, gbc.sp());
        EXPECT(0x8446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8444));
        EXPECT(0x1, gbc.readMem(0x8445));
        // CB 01 0239
        gbc.setState(0xdae8, 0x69f8, 0x4000, 0x5ae3, 0x9485, 0x3be0, 0x0, 0x0);
        gbc.writeMem(0xdae8, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x69f8, gbc.sp());
        EXPECT(0xdaea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdae8));
        EXPECT(0x1, gbc.readMem(0xdae9));
        // CB 01 023B
        gbc.setState(0xcbde, 0x3bbd, 0xf100, 0xb801, 0xb7b2, 0xe79a, 0x1, 0x0);
        gbc.writeMem(0xcbde, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3bbd, gbc.sp());
        EXPECT(0xcbe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbde));
        EXPECT(0x1, gbc.readMem(0xcbdf));
        // CB 01 023C
        gbc.setState(0x8049, 0xd556, 0xd1b0, 0xa6bc, 0x96d2, 0x594b, 0x0, 0x0);
        gbc.writeMem(0x8049, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd556, gbc.sp());
        EXPECT(0x804b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8049));
        EXPECT(0x1, gbc.readMem(0x804a));
        // CB 01 023D
        gbc.setState(0x6618, 0xc819, 0x230, 0x9e15, 0x484, 0x9a49, 0x0, 0x1);
        gbc.writeMem(0x6618, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc819, gbc.sp());
        EXPECT(0x661a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 023E
        gbc.setState(0x2ca8, 0x522f, 0xb980, 0xee8d, 0x6db5, 0x9ccb, 0x0, 0x0);
        gbc.writeMem(0x2ca8, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x522f, gbc.sp());
        EXPECT(0x2caa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 023F
        gbc.setState(0xcdc0, 0xd5e0, 0xc840, 0xc499, 0x773c, 0x7151, 0x1, 0x0);
        gbc.writeMem(0xcdc0, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd5e0, gbc.sp());
        EXPECT(0xcdc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdc0));
        EXPECT(0x1, gbc.readMem(0xcdc1));
        // CB 01 0240
        gbc.setState(0xa50f, 0x8de8, 0x6f50, 0xb206, 0xf203, 0xc33a, 0x1, 0x1);
        gbc.writeMem(0xa50f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8de8, gbc.sp());
        EXPECT(0xa511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa50f));
        EXPECT(0x1, gbc.readMem(0xa510));
        // CB 01 0241
        gbc.setState(0x76fe, 0x84eb, 0x6440, 0x1b91, 0xcd77, 0xb315, 0x1, 0x0);
        gbc.writeMem(0x76fe, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x84eb, gbc.sp());
        EXPECT(0x7700, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0242
        gbc.setState(0xed2, 0x5d3a, 0x9830, 0x9db9, 0x81b0, 0x3951, 0x0, 0x0);
        gbc.writeMem(0xed2, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5d3a, gbc.sp());
        EXPECT(0xed4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0243
        gbc.setState(0xd93d, 0x8c54, 0xe640, 0xc1cb, 0x88a5, 0xc377, 0x0, 0x1);
        gbc.writeMem(0xd93d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8c54, gbc.sp());
        EXPECT(0xd93f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd93d));
        EXPECT(0x1, gbc.readMem(0xd93e));
        // CB 01 0244
        gbc.setState(0xd205, 0x5f8a, 0x42e0, 0xa9e1, 0xdc38, 0x854c, 0x1, 0x0);
        gbc.writeMem(0xd205, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5f8a, gbc.sp());
        EXPECT(0xd207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd205));
        EXPECT(0x1, gbc.readMem(0xd206));
        // CB 01 0245
        gbc.setState(0x2a6e, 0x782a, 0x3590, 0x2f1e, 0xac94, 0x913c, 0x0, 0x0);
        gbc.writeMem(0x2a6e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x782a, gbc.sp());
        EXPECT(0x2a70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0246
        gbc.setState(0xb2d7, 0xd1fa, 0x4940, 0xd5e8, 0xfacb, 0x6a6a, 0x0, 0x1);
        gbc.writeMem(0xb2d7, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd1fa, gbc.sp());
        EXPECT(0xb2d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2d7));
        EXPECT(0x1, gbc.readMem(0xb2d8));
        // CB 01 0247
        gbc.setState(0x724b, 0x10e3, 0xb0, 0xc3a8, 0xa440, 0x6d74, 0x1, 0x0);
        gbc.writeMem(0x724b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x10e3, gbc.sp());
        EXPECT(0x724d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0248
        gbc.setState(0x496c, 0xd988, 0x8800, 0xdee9, 0x3d6e, 0x974, 0x0, 0x0);
        gbc.writeMem(0x496c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd988, gbc.sp());
        EXPECT(0x496e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0249
        gbc.setState(0x580e, 0x3d31, 0xc730, 0x79cd, 0x7ddd, 0x374, 0x0, 0x0);
        gbc.writeMem(0x580e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3d31, gbc.sp());
        EXPECT(0x5810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 024A
        gbc.setState(0xcca0, 0x9444, 0x7fc0, 0x5b09, 0xc558, 0xa5e5, 0x0, 0x1);
        gbc.writeMem(0xcca0, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9444, gbc.sp());
        EXPECT(0xcca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcca0));
        EXPECT(0x1, gbc.readMem(0xcca1));
        // CB 01 024C
        gbc.setState(0x602a, 0x9aeb, 0x2da0, 0xbf43, 0x5ddf, 0xcb23, 0x0, 0x0);
        gbc.writeMem(0x602a, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9aeb, gbc.sp());
        EXPECT(0x602c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 024D
        gbc.setState(0x4789, 0xed74, 0xa9f0, 0xbda9, 0xc0c3, 0x8979, 0x0, 0x1);
        gbc.writeMem(0x4789, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xed74, gbc.sp());
        EXPECT(0x478b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 024E
        gbc.setState(0x5bd8, 0x888a, 0x31c0, 0x649b, 0x2e6b, 0xca3, 0x1, 0x0);
        gbc.writeMem(0x5bd8, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x888a, gbc.sp());
        EXPECT(0x5bda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 024F
        gbc.setState(0xeb67, 0x2082, 0x6050, 0x4a06, 0x75b7, 0xd885, 0x1, 0x1);
        gbc.writeMem(0xeb67, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2082, gbc.sp());
        EXPECT(0xeb69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb67));
        EXPECT(0x1, gbc.readMem(0xeb68));
        // CB 01 0250
        gbc.setState(0x84d7, 0x1e49, 0xcf00, 0xf579, 0x6477, 0x998a, 0x0, 0x1);
        gbc.writeMem(0x84d7, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1e49, gbc.sp());
        EXPECT(0x84d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84d7));
        EXPECT(0x1, gbc.readMem(0x84d8));
        // CB 01 0251
        gbc.setState(0x7ab2, 0x1d73, 0xcf90, 0x30a2, 0xfd05, 0x3864, 0x0, 0x0);
        gbc.writeMem(0x7ab2, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1d73, gbc.sp());
        EXPECT(0x7ab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0252
        gbc.setState(0x3b0a, 0x935c, 0x7150, 0x3899, 0xf3b9, 0x8208, 0x1, 0x1);
        gbc.writeMem(0x3b0a, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x935c, gbc.sp());
        EXPECT(0x3b0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0253
        gbc.setState(0xdf59, 0x231a, 0xc0a0, 0xe31b, 0xbbc9, 0x4118, 0x1, 0x0);
        gbc.writeMem(0xdf59, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x231a, gbc.sp());
        EXPECT(0xdf5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf59));
        EXPECT(0x1, gbc.readMem(0xdf5a));
        // CB 01 0254
        gbc.setState(0x92f2, 0x2e6c, 0x8ca0, 0xdaf4, 0x515f, 0x5c87, 0x1, 0x0);
        gbc.writeMem(0x92f2, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2e6c, gbc.sp());
        EXPECT(0x92f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92f2));
        EXPECT(0x1, gbc.readMem(0x92f3));
        // CB 01 0255
        gbc.setState(0xe163, 0xa909, 0xfc10, 0x3f0f, 0x5783, 0x514c, 0x1, 0x1);
        gbc.writeMem(0xe163, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa909, gbc.sp());
        EXPECT(0xe165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe163));
        EXPECT(0x1, gbc.readMem(0xe164));
        // CB 01 0256
        gbc.setState(0xded5, 0xadb8, 0x7ec0, 0x262e, 0xe17a, 0x3a33, 0x1, 0x0);
        gbc.writeMem(0xded5, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xadb8, gbc.sp());
        EXPECT(0xded7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xded5));
        EXPECT(0x1, gbc.readMem(0xded6));
        // CB 01 0257
        gbc.setState(0x979a, 0xbf16, 0x6f10, 0x8e0e, 0x68cb, 0xdc3, 0x1, 0x1);
        gbc.writeMem(0x979a, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xbf16, gbc.sp());
        EXPECT(0x979c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x979a));
        EXPECT(0x1, gbc.readMem(0x979b));
        // CB 01 0258
        gbc.setState(0xa828, 0xa20d, 0xb9e0, 0x365c, 0xfcb9, 0x253d, 0x1, 0x0);
        gbc.writeMem(0xa828, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa20d, gbc.sp());
        EXPECT(0xa82a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa828));
        EXPECT(0x1, gbc.readMem(0xa829));
        // CB 01 0259
        gbc.setState(0x9b85, 0x7e67, 0xfa40, 0x7b1b, 0xab80, 0x1e99, 0x1, 0x0);
        gbc.writeMem(0x9b85, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7e67, gbc.sp());
        EXPECT(0x9b87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b85));
        EXPECT(0x1, gbc.readMem(0x9b86));
        // CB 01 025A
        gbc.setState(0x737d, 0x9afe, 0x7710, 0xb4e5, 0x5617, 0xd2a4, 0x1, 0x1);
        gbc.writeMem(0x737d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9afe, gbc.sp());
        EXPECT(0x737f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 025B
        gbc.setState(0xdcdc, 0x7279, 0x5db0, 0xe58c, 0x78af, 0x595e, 0x0, 0x1);
        gbc.writeMem(0xdcdc, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7279, gbc.sp());
        EXPECT(0xdcde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcdc));
        EXPECT(0x1, gbc.readMem(0xdcdd));
        // CB 01 025C
        gbc.setState(0x25b1, 0xd71, 0x7720, 0xf937, 0x9167, 0x1fee, 0x1, 0x1);
        gbc.writeMem(0x25b1, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd71, gbc.sp());
        EXPECT(0x25b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 025D
        gbc.setState(0x505e, 0xc674, 0x5660, 0x94de, 0xc875, 0xeee0, 0x1, 0x0);
        gbc.writeMem(0x505e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc674, gbc.sp());
        EXPECT(0x5060, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 025E
        gbc.setState(0x646e, 0xef43, 0x87b0, 0xee2c, 0x810f, 0x566, 0x0, 0x0);
        gbc.writeMem(0x646e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xef43, gbc.sp());
        EXPECT(0x6470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 025F
        gbc.setState(0x6a74, 0x105f, 0x35b0, 0x1bb3, 0x645b, 0x54c3, 0x1, 0x1);
        gbc.writeMem(0x6a74, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x105f, gbc.sp());
        EXPECT(0x6a76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0260
        gbc.setState(0x48dc, 0xad8d, 0x5ca0, 0x803f, 0x6874, 0x3733, 0x0, 0x0);
        gbc.writeMem(0x48dc, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xad8d, gbc.sp());
        EXPECT(0x48de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0261
        gbc.setState(0x76d6, 0xa18c, 0x2510, 0x298f, 0xb19b, 0x9c6c, 0x1, 0x0);
        gbc.writeMem(0x76d6, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa18c, gbc.sp());
        EXPECT(0x76d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0262
        gbc.setState(0xd2cf, 0x480f, 0x2560, 0xea08, 0x1bf2, 0x3d68, 0x1, 0x1);
        gbc.writeMem(0xd2cf, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x480f, gbc.sp());
        EXPECT(0xd2d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2cf));
        EXPECT(0x1, gbc.readMem(0xd2d0));
        // CB 01 0263
        gbc.setState(0x8335, 0xae54, 0xaf80, 0xe29f, 0xa7e, 0x39c5, 0x1, 0x0);
        gbc.writeMem(0x8335, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xae54, gbc.sp());
        EXPECT(0x8337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8335));
        EXPECT(0x1, gbc.readMem(0x8336));
        // CB 01 0264
        gbc.setState(0xd60a, 0xa0df, 0xc070, 0xa236, 0x9ae3, 0xd91c, 0x0, 0x0);
        gbc.writeMem(0xd60a, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa0df, gbc.sp());
        EXPECT(0xd60c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd60a));
        EXPECT(0x1, gbc.readMem(0xd60b));
        // CB 01 0265
        gbc.setState(0x33c8, 0xb993, 0xf650, 0xdffe, 0x4d84, 0xc7ee, 0x0, 0x0);
        gbc.writeMem(0x33c8, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb993, gbc.sp());
        EXPECT(0x33ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0266
        gbc.setState(0xd810, 0x790d, 0x2880, 0xb7ef, 0x7206, 0x2957, 0x1, 0x0);
        gbc.writeMem(0xd810, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x790d, gbc.sp());
        EXPECT(0xd812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd810));
        EXPECT(0x1, gbc.readMem(0xd811));
        // CB 01 0267
        gbc.setState(0xbfad, 0x6cb6, 0xfd40, 0xb9bb, 0xe810, 0x450a, 0x0, 0x1);
        gbc.writeMem(0xbfad, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6cb6, gbc.sp());
        EXPECT(0xbfaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfad));
        EXPECT(0x1, gbc.readMem(0xbfae));
        // CB 01 0268
        gbc.setState(0x2d03, 0xbd90, 0xf980, 0x4a3b, 0x58e3, 0x2f78, 0x0, 0x1);
        gbc.writeMem(0x2d03, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xbd90, gbc.sp());
        EXPECT(0x2d05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0269
        gbc.setState(0xef3f, 0x742e, 0xa940, 0x1670, 0x9ded, 0xe486, 0x0, 0x1);
        gbc.writeMem(0xef3f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x742e, gbc.sp());
        EXPECT(0xef41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef3f));
        EXPECT(0x1, gbc.readMem(0xef40));
        // CB 01 026A
        gbc.setState(0xe3c6, 0x5df, 0xeb90, 0x54a8, 0x2f0b, 0xb1d5, 0x1, 0x1);
        gbc.writeMem(0xe3c6, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5df, gbc.sp());
        EXPECT(0xe3c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3c6));
        EXPECT(0x1, gbc.readMem(0xe3c7));
        // CB 01 026B
        gbc.setState(0x2b69, 0xd9a2, 0x9ec0, 0xf34c, 0xc3c8, 0xa93d, 0x1, 0x0);
        gbc.writeMem(0x2b69, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd9a2, gbc.sp());
        EXPECT(0x2b6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 026C
        gbc.setState(0x1a39, 0x630f, 0x1b00, 0xc015, 0xf564, 0x5764, 0x0, 0x0);
        gbc.writeMem(0x1a39, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x630f, gbc.sp());
        EXPECT(0x1a3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 026D
        gbc.setState(0xf6, 0x11e1, 0x1f70, 0x1fc0, 0xe778, 0xc37b, 0x0, 0x1);
        gbc.writeMem(0xf6, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x11e1, gbc.sp());
        EXPECT(0xf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 026E
        gbc.setState(0x5e92, 0xd200, 0xeb20, 0xe692, 0x8ed1, 0xae1d, 0x0, 0x1);
        gbc.writeMem(0x5e92, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd200, gbc.sp());
        EXPECT(0x5e94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0270
        gbc.setState(0x8441, 0xcc75, 0x58d0, 0x6428, 0xb255, 0x656e, 0x1, 0x1);
        gbc.writeMem(0x8441, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xcc75, gbc.sp());
        EXPECT(0x8443, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8441));
        EXPECT(0x1, gbc.readMem(0x8442));
        // CB 01 0271
        gbc.setState(0xb236, 0x72ff, 0x2900, 0x2cea, 0x9b63, 0xddbd, 0x1, 0x0);
        gbc.writeMem(0xb236, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x72ff, gbc.sp());
        EXPECT(0xb238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb236));
        EXPECT(0x1, gbc.readMem(0xb237));
        // CB 01 0272
        gbc.setState(0x4903, 0x2fde, 0x8980, 0xa770, 0x3c29, 0xeb82, 0x1, 0x1);
        gbc.writeMem(0x4903, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2fde, gbc.sp());
        EXPECT(0x4905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0273
        gbc.setState(0x2164, 0x5b1e, 0xdbe0, 0xe1ac, 0xb461, 0x751e, 0x0, 0x0);
        gbc.writeMem(0x2164, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5b1e, gbc.sp());
        EXPECT(0x2166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0274
        gbc.setState(0x359c, 0xcf56, 0x6a00, 0x70, 0x94c8, 0x7920, 0x0, 0x1);
        gbc.writeMem(0x359c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xcf56, gbc.sp());
        EXPECT(0x359e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0275
        gbc.setState(0xc06e, 0xbbb4, 0xfb70, 0x3166, 0xb181, 0xfb2d, 0x1, 0x0);
        gbc.writeMem(0xc06e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbbb4, gbc.sp());
        EXPECT(0xc070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc06e));
        EXPECT(0x1, gbc.readMem(0xc06f));
        // CB 01 0276
        gbc.setState(0x4b2b, 0x3ed3, 0xa530, 0x78c7, 0xc60b, 0x91f0, 0x1, 0x1);
        gbc.writeMem(0x4b2b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3ed3, gbc.sp());
        EXPECT(0x4b2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0277
        gbc.setState(0x6048, 0x3bea, 0xde00, 0x44d, 0x3575, 0x9952, 0x1, 0x1);
        gbc.writeMem(0x6048, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3bea, gbc.sp());
        EXPECT(0x604a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0278
        gbc.setState(0x6e7f, 0xeac4, 0xec70, 0xdb38, 0x4149, 0x39cf, 0x1, 0x1);
        gbc.writeMem(0x6e7f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xeac4, gbc.sp());
        EXPECT(0x6e81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0279
        gbc.setState(0xd009, 0x73b7, 0x1a60, 0x9c6f, 0x94cc, 0xb72d, 0x0, 0x1);
        gbc.writeMem(0xd009, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x73b7, gbc.sp());
        EXPECT(0xd00b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd009));
        EXPECT(0x1, gbc.readMem(0xd00a));
        // CB 01 027A
        gbc.setState(0x133, 0x60cd, 0xa3a0, 0x9937, 0x9a5c, 0x906, 0x1, 0x1);
        gbc.writeMem(0x133, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x60cd, gbc.sp());
        EXPECT(0x135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 027B
        gbc.setState(0x9e93, 0xb63a, 0x420, 0xe80f, 0xf815, 0x1cfd, 0x1, 0x0);
        gbc.writeMem(0x9e93, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb63a, gbc.sp());
        EXPECT(0x9e95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e93));
        EXPECT(0x1, gbc.readMem(0x9e94));
        // CB 01 027C
        gbc.setState(0xae8b, 0x2123, 0x5f40, 0x12e9, 0xcc4, 0x269e, 0x0, 0x1);
        gbc.writeMem(0xae8b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2123, gbc.sp());
        EXPECT(0xae8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae8b));
        EXPECT(0x1, gbc.readMem(0xae8c));
        // CB 01 027D
        gbc.setState(0x5ae2, 0x1b2b, 0x1180, 0xae43, 0x7617, 0x334f, 0x0, 0x1);
        gbc.writeMem(0x5ae2, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1b2b, gbc.sp());
        EXPECT(0x5ae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 027E
        gbc.setState(0x2f96, 0x7d16, 0x4a60, 0xf7bb, 0xde57, 0x3b, 0x0, 0x0);
        gbc.writeMem(0x2f96, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7d16, gbc.sp());
        EXPECT(0x2f98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 027F
        gbc.setState(0x28d4, 0x9fd6, 0x9040, 0x62fe, 0xf21, 0xdc4a, 0x1, 0x0);
        gbc.writeMem(0x28d4, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9fd6, gbc.sp());
        EXPECT(0x28d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0280
        gbc.setState(0xd109, 0xa2c0, 0xef20, 0x59b1, 0x2938, 0x4764, 0x1, 0x1);
        gbc.writeMem(0xd109, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa2c0, gbc.sp());
        EXPECT(0xd10b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd109));
        EXPECT(0x1, gbc.readMem(0xd10a));
        // CB 01 0281
        gbc.setState(0x63cd, 0xfc73, 0x35a0, 0xb155, 0x736, 0x7c30, 0x1, 0x1);
        gbc.writeMem(0x63cd, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xfc73, gbc.sp());
        EXPECT(0x63cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0282
        gbc.setState(0x81d6, 0x55da, 0xde10, 0xaff6, 0x39cc, 0x4d60, 0x0, 0x1);
        gbc.writeMem(0x81d6, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x55da, gbc.sp());
        EXPECT(0x81d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81d6));
        EXPECT(0x1, gbc.readMem(0x81d7));
        // CB 01 0283
        gbc.setState(0x26ea, 0xdf77, 0x9260, 0x35f6, 0x2f07, 0xaade, 0x0, 0x1);
        gbc.writeMem(0x26ea, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xdf77, gbc.sp());
        EXPECT(0x26ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0284
        gbc.setState(0x10de, 0xd3fb, 0x7780, 0xd932, 0xaac5, 0xb4aa, 0x1, 0x0);
        gbc.writeMem(0x10de, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd3fb, gbc.sp());
        EXPECT(0x10e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0285
        gbc.setState(0x8c3d, 0xec0d, 0x7510, 0x5e05, 0xd6c8, 0xdc97, 0x0, 0x0);
        gbc.writeMem(0x8c3d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xec0d, gbc.sp());
        EXPECT(0x8c3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c3d));
        EXPECT(0x1, gbc.readMem(0x8c3e));
        // CB 01 0287
        gbc.setState(0x779b, 0xfcc2, 0x1a60, 0x5ca7, 0x3b8b, 0xfa44, 0x1, 0x0);
        gbc.writeMem(0x779b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xfcc2, gbc.sp());
        EXPECT(0x779d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0288
        gbc.setState(0xee5e, 0xc8e8, 0x110, 0x4fbe, 0xa6eb, 0x95f7, 0x0, 0x0);
        gbc.writeMem(0xee5e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc8e8, gbc.sp());
        EXPECT(0xee60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee5e));
        EXPECT(0x1, gbc.readMem(0xee5f));
        // CB 01 0289
        gbc.setState(0x3f3c, 0xc50f, 0x7610, 0xd7bb, 0x430, 0xc950, 0x0, 0x1);
        gbc.writeMem(0x3f3c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc50f, gbc.sp());
        EXPECT(0x3f3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 028A
        gbc.setState(0x4abb, 0xc750, 0x27c0, 0xffd3, 0x3d54, 0xdf76, 0x0, 0x0);
        gbc.writeMem(0x4abb, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc750, gbc.sp());
        EXPECT(0x4abd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 028B
        gbc.setState(0xa49f, 0x8794, 0xf870, 0xf78d, 0x3c68, 0x3c76, 0x1, 0x0);
        gbc.writeMem(0xa49f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8794, gbc.sp());
        EXPECT(0xa4a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa49f));
        EXPECT(0x1, gbc.readMem(0xa4a0));
        // CB 01 028C
        gbc.setState(0x5e08, 0x54e8, 0x100, 0xf78, 0x317f, 0x4ac4, 0x1, 0x1);
        gbc.writeMem(0x5e08, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x54e8, gbc.sp());
        EXPECT(0x5e0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 028D
        gbc.setState(0xdb1a, 0xa197, 0x5620, 0xb202, 0xbe73, 0xc3ec, 0x0, 0x1);
        gbc.writeMem(0xdb1a, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa197, gbc.sp());
        EXPECT(0xdb1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb1a));
        EXPECT(0x1, gbc.readMem(0xdb1b));
        // CB 01 028E
        gbc.setState(0xc975, 0xe1bd, 0xb780, 0x126, 0xa161, 0x6971, 0x1, 0x0);
        gbc.writeMem(0xc975, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe1bd, gbc.sp());
        EXPECT(0xc977, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc975));
        EXPECT(0x1, gbc.readMem(0xc976));
        // CB 01 028F
        gbc.setState(0xbf47, 0xc3ef, 0xa910, 0xcaa1, 0xaa36, 0x3ea0, 0x0, 0x1);
        gbc.writeMem(0xbf47, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc3ef, gbc.sp());
        EXPECT(0xbf49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf47));
        EXPECT(0x1, gbc.readMem(0xbf48));
        // CB 01 0290
        gbc.setState(0x807, 0x9c19, 0xf4a0, 0xd1ed, 0xbbd5, 0x717c, 0x0, 0x1);
        gbc.writeMem(0x807, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9c19, gbc.sp());
        EXPECT(0x809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0292
        gbc.setState(0xdb19, 0x3494, 0xc00, 0x96ff, 0xb1da, 0xae9d, 0x0, 0x0);
        gbc.writeMem(0xdb19, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3494, gbc.sp());
        EXPECT(0xdb1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb19));
        EXPECT(0x1, gbc.readMem(0xdb1a));
        // CB 01 0294
        gbc.setState(0x9d0d, 0x6e54, 0x8690, 0x2916, 0xac1a, 0x37fa, 0x0, 0x1);
        gbc.writeMem(0x9d0d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6e54, gbc.sp());
        EXPECT(0x9d0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d0d));
        EXPECT(0x1, gbc.readMem(0x9d0e));
        // CB 01 0295
        gbc.setState(0xec4c, 0x929f, 0x9fa0, 0x8257, 0x8bda, 0xa830, 0x0, 0x0);
        gbc.writeMem(0xec4c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x929f, gbc.sp());
        EXPECT(0xec4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec4c));
        EXPECT(0x1, gbc.readMem(0xec4d));
        // CB 01 0296
        gbc.setState(0x115d, 0x7c80, 0x150, 0x4b96, 0x39a, 0xac76, 0x1, 0x0);
        gbc.writeMem(0x115d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7c80, gbc.sp());
        EXPECT(0x115f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0297
        gbc.setState(0xc7d8, 0x6d62, 0x5970, 0x89b5, 0x5c06, 0xb910, 0x1, 0x0);
        gbc.writeMem(0xc7d8, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6d62, gbc.sp());
        EXPECT(0xc7da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7d8));
        EXPECT(0x1, gbc.readMem(0xc7d9));
        // CB 01 0298
        gbc.setState(0x765a, 0xff89, 0xc30, 0x3a60, 0xa9e0, 0x1e91, 0x1, 0x1);
        gbc.writeMem(0x765a, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xff89, gbc.sp());
        EXPECT(0x765c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0299
        gbc.setState(0xc379, 0x16c0, 0x530, 0x195b, 0x47bc, 0x92dc, 0x1, 0x0);
        gbc.writeMem(0xc379, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x16c0, gbc.sp());
        EXPECT(0xc37b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc379));
        EXPECT(0x1, gbc.readMem(0xc37a));
        // CB 01 029A
        gbc.setState(0x1d, 0x4b67, 0xcbe0, 0x74f5, 0x2d58, 0xc2ce, 0x1, 0x0);
        gbc.writeMem(0x1d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4b67, gbc.sp());
        EXPECT(0x1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 029B
        gbc.setState(0x1823, 0x281d, 0x6ee0, 0x688a, 0x8ace, 0x1e42, 0x0, 0x1);
        gbc.writeMem(0x1823, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x281d, gbc.sp());
        EXPECT(0x1825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 029C
        gbc.setState(0x2ce8, 0x4960, 0x1380, 0x3073, 0xe7e5, 0x429c, 0x0, 0x0);
        gbc.writeMem(0x2ce8, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4960, gbc.sp());
        EXPECT(0x2cea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 029D
        gbc.setState(0x3c1e, 0xe8f, 0x98f0, 0x2dd3, 0x797d, 0xb0df, 0x0, 0x0);
        gbc.writeMem(0x3c1e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe8f, gbc.sp());
        EXPECT(0x3c20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 029E
        gbc.setState(0x717d, 0x5ae, 0xe7a0, 0xd2ae, 0x1088, 0x11ad, 0x1, 0x1);
        gbc.writeMem(0x717d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5ae, gbc.sp());
        EXPECT(0x717f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 029F
        gbc.setState(0x69b8, 0xd844, 0xc700, 0xaaf6, 0x4c18, 0xa52b, 0x0, 0x0);
        gbc.writeMem(0x69b8, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd844, gbc.sp());
        EXPECT(0x69ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 02A0
        gbc.setState(0x821c, 0xc986, 0x5df0, 0xd95, 0xecd1, 0xe9e4, 0x0, 0x0);
        gbc.writeMem(0x821c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc986, gbc.sp());
        EXPECT(0x821e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x821c));
        EXPECT(0x1, gbc.readMem(0x821d));
        // CB 01 02A1
        gbc.setState(0x1c, 0x638a, 0x74f0, 0xb02a, 0x863d, 0xb39c, 0x0, 0x1);
        gbc.writeMem(0x1c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x638a, gbc.sp());
        EXPECT(0x1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 02A2
        gbc.setState(0x1b8b, 0xb353, 0x8630, 0xbab6, 0xe38, 0xa3ec, 0x0, 0x0);
        gbc.writeMem(0x1b8b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb353, gbc.sp());
        EXPECT(0x1b8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 02A3
        gbc.setState(0xd0dc, 0x4746, 0x3d90, 0xa72a, 0x4d78, 0xd919, 0x0, 0x0);
        gbc.writeMem(0xd0dc, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4746, gbc.sp());
        EXPECT(0xd0de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0dc));
        EXPECT(0x1, gbc.readMem(0xd0dd));
        // CB 01 02A4
        gbc.setState(0x771, 0x471a, 0x95b0, 0x3495, 0x869, 0xb9d9, 0x1, 0x1);
        gbc.writeMem(0x771, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x471a, gbc.sp());
        EXPECT(0x773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 02A6
        gbc.setState(0xce0e, 0x70e, 0x88e0, 0x1e7d, 0x6f01, 0x98ec, 0x0, 0x1);
        gbc.writeMem(0xce0e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x70e, gbc.sp());
        EXPECT(0xce10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce0e));
        EXPECT(0x1, gbc.readMem(0xce0f));
        // CB 01 02A8
        gbc.setState(0x5a2, 0x69e8, 0x2a20, 0x2ba6, 0x6826, 0xc8fa, 0x0, 0x1);
        gbc.writeMem(0x5a2, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x69e8, gbc.sp());
        EXPECT(0x5a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 02A9
        gbc.setState(0x4b8a, 0x9a14, 0xbb20, 0xb54b, 0x7961, 0xd305, 0x1, 0x1);
        gbc.writeMem(0x4b8a, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9a14, gbc.sp());
        EXPECT(0x4b8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 02AA
        gbc.setState(0x36ed, 0xb51e, 0xf650, 0x266d, 0x1545, 0xdfd0, 0x1, 0x0);
        gbc.writeMem(0x36ed, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb51e, gbc.sp());
        EXPECT(0x36ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 02AB
        gbc.setState(0x2ab1, 0x8a8d, 0x1d40, 0xbbc5, 0x537d, 0xf89c, 0x0, 0x0);
        gbc.writeMem(0x2ab1, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8a8d, gbc.sp());
        EXPECT(0x2ab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 02AC
        gbc.setState(0xa057, 0x985b, 0xa0d0, 0x6954, 0x3fd1, 0xe528, 0x1, 0x1);
        gbc.writeMem(0xa057, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x985b, gbc.sp());
        EXPECT(0xa059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa057));
        EXPECT(0x1, gbc.readMem(0xa058));
        // CB 01 02AD
        gbc.setState(0xcba, 0xab63, 0x6160, 0xa5a, 0x6676, 0x47bf, 0x1, 0x0);
        gbc.writeMem(0xcba, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xab63, gbc.sp());
        EXPECT(0xcbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 02AE
        gbc.setState(0x7e4, 0xb835, 0x8340, 0x3eb9, 0x84ae, 0xa520, 0x0, 0x1);
        gbc.writeMem(0x7e4, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb835, gbc.sp());
        EXPECT(0x7e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 02AF
        gbc.setState(0x7e51, 0xd4da, 0xa480, 0x3e39, 0xb6f1, 0x29ff, 0x0, 0x1);
        gbc.writeMem(0x7e51, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd4da, gbc.sp());
        EXPECT(0x7e53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 02B0
        gbc.setState(0x2986, 0x685c, 0xb420, 0x8311, 0xa72b, 0xa286, 0x0, 0x1);
        gbc.writeMem(0x2986, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x685c, gbc.sp());
        EXPECT(0x2988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 02B1
        gbc.setState(0x35a6, 0x2aa6, 0x4950, 0x7f52, 0xab0, 0xab86, 0x0, 0x1);
        gbc.writeMem(0x35a6, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2aa6, gbc.sp());
        EXPECT(0x35a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 02B2
        gbc.setState(0x1f98, 0x8429, 0xe170, 0x1f92, 0x2ecb, 0x893e, 0x1, 0x0);
        gbc.writeMem(0x1f98, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8429, gbc.sp());
        EXPECT(0x1f9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 02B3
        gbc.setState(0xdb84, 0xdae6, 0x1af0, 0x88a0, 0xf58c, 0x72f4, 0x0, 0x0);
        gbc.writeMem(0xdb84, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xdae6, gbc.sp());
        EXPECT(0xdb86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb84));
        EXPECT(0x1, gbc.readMem(0xdb85));
        // CB 01 02B4
        gbc.setState(0x483f, 0xc603, 0xcca0, 0xfb47, 0xff4c, 0x9fc9, 0x1, 0x0);
        gbc.writeMem(0x483f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc603, gbc.sp());
        EXPECT(0x4841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 02B5
        gbc.setState(0xce93, 0x63ff, 0x8f50, 0xa569, 0xd23e, 0x277e, 0x0, 0x1);
        gbc.writeMem(0xce93, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x63ff, gbc.sp());
        EXPECT(0xce95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce93));
        EXPECT(0x1, gbc.readMem(0xce94));
        // CB 01 02B6
        gbc.setState(0x3bf9, 0x9c96, 0x6fc0, 0xf7cb, 0x49e4, 0xaca0, 0x1, 0x0);
        gbc.writeMem(0x3bf9, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9c96, gbc.sp());
        EXPECT(0x3bfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 02B7
        gbc.setState(0x5af4, 0xae8d, 0x750, 0x524f, 0x308a, 0xc115, 0x1, 0x0);
        gbc.writeMem(0x5af4, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xae8d, gbc.sp());
        EXPECT(0x5af6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 02B8
        gbc.setState(0x2968, 0x7261, 0x1a50, 0xc682, 0xe42, 0xe46c, 0x1, 0x1);
        gbc.writeMem(0x2968, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7261, gbc.sp());
        EXPECT(0x296a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 02B9
        gbc.setState(0x4d21, 0x5311, 0x6040, 0xae90, 0xb5b, 0x8158, 0x1, 0x1);
        gbc.writeMem(0x4d21, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5311, gbc.sp());
        EXPECT(0x4d23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 02BA
        gbc.setState(0xc0ae, 0x26d3, 0x460, 0x9f01, 0xabce, 0xc2bd, 0x0, 0x0);
        gbc.writeMem(0xc0ae, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x26d3, gbc.sp());
        EXPECT(0xc0b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ae));
        EXPECT(0x1, gbc.readMem(0xc0af));
        // CB 01 02BB
        gbc.setState(0xd32d, 0xa862, 0x3990, 0x8fb9, 0xb7b9, 0xef98, 0x0, 0x0);
        gbc.writeMem(0xd32d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa862, gbc.sp());
        EXPECT(0xd32f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd32d));
        EXPECT(0x1, gbc.readMem(0xd32e));
        // CB 01 02BC
        gbc.setState(0x9c7c, 0x2c3f, 0x2240, 0x2b22, 0x7e55, 0x1774, 0x0, 0x0);
        gbc.writeMem(0x9c7c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2c3f, gbc.sp());
        EXPECT(0x9c7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c7c));
        EXPECT(0x1, gbc.readMem(0x9c7d));
        // CB 01 02BD
        gbc.setState(0xee4, 0x57f, 0xc8d0, 0xadb, 0xdbbd, 0x1274, 0x0, 0x1);
        gbc.writeMem(0xee4, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x57f, gbc.sp());
        EXPECT(0xee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 02BE
        gbc.setState(0x9f87, 0x40d6, 0x1f80, 0x1b88, 0xda18, 0xf485, 0x1, 0x1);
        gbc.writeMem(0x9f87, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x40d6, gbc.sp());
        EXPECT(0x9f89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f87));
        EXPECT(0x1, gbc.readMem(0x9f88));
        // CB 01 02C0
        gbc.setState(0x1a77, 0xc747, 0x4e20, 0xaacc, 0xf452, 0xca12, 0x1, 0x1);
        gbc.writeMem(0x1a77, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc747, gbc.sp());
        EXPECT(0x1a79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 02C1
        gbc.setState(0xd01, 0x7b7b, 0xfe90, 0xeb9d, 0xdcea, 0x79f1, 0x1, 0x1);
        gbc.writeMem(0xd01, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7b7b, gbc.sp());
        EXPECT(0xd03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 02C2
        gbc.setState(0x2f40, 0xcfcc, 0xfb60, 0xc9b5, 0x657d, 0xc36d, 0x0, 0x0);
        gbc.writeMem(0x2f40, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xcfcc, gbc.sp());
        EXPECT(0x2f42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 02C3
        gbc.setState(0x4dea, 0xd46, 0xb80, 0x8bc0, 0xa0, 0xff6, 0x0, 0x0);
        gbc.writeMem(0x4dea, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd46, gbc.sp());
        EXPECT(0x4dec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 02C4
        gbc.setState(0xa30f, 0x4b37, 0x98f0, 0xfff9, 0xdbed, 0xb10b, 0x0, 0x1);
        gbc.writeMem(0xa30f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4b37, gbc.sp());
        EXPECT(0xa311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa30f));
        EXPECT(0x1, gbc.readMem(0xa310));
        // CB 01 02C5
        gbc.setState(0xda39, 0x1381, 0x5700, 0x5b6e, 0xdab5, 0x635b, 0x1, 0x1);
        gbc.writeMem(0xda39, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1381, gbc.sp());
        EXPECT(0xda3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda39));
        EXPECT(0x1, gbc.readMem(0xda3a));
        // CB 01 02C6
        gbc.setState(0xaa8b, 0x916b, 0x6720, 0x1cfa, 0xb6e7, 0x67f2, 0x0, 0x0);
        gbc.writeMem(0xaa8b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x916b, gbc.sp());
        EXPECT(0xaa8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa8b));
        EXPECT(0x1, gbc.readMem(0xaa8c));
        // CB 01 02C7
        gbc.setState(0xaf02, 0xfe7a, 0x2420, 0x9598, 0xf741, 0x6485, 0x0, 0x0);
        gbc.writeMem(0xaf02, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xfe7a, gbc.sp());
        EXPECT(0xaf04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf02));
        EXPECT(0x1, gbc.readMem(0xaf03));
        // CB 01 02C8
        gbc.setState(0xd0dd, 0xb35, 0x14d0, 0x55a8, 0x8eab, 0x9323, 0x0, 0x1);
        gbc.writeMem(0xd0dd, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb35, gbc.sp());
        EXPECT(0xd0df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0dd));
        EXPECT(0x1, gbc.readMem(0xd0de));
        // CB 01 02C9
        gbc.setState(0xd698, 0xee1d, 0x8920, 0xc9bf, 0xf9a, 0x9dc0, 0x1, 0x0);
        gbc.writeMem(0xd698, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xee1d, gbc.sp());
        EXPECT(0xd69a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd698));
        EXPECT(0x1, gbc.readMem(0xd699));
        // CB 01 02CA
        gbc.setState(0x5d3e, 0xb86a, 0x75c0, 0xb228, 0x309a, 0xfe73, 0x0, 0x0);
        gbc.writeMem(0x5d3e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb86a, gbc.sp());
        EXPECT(0x5d40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 02CB
        gbc.setState(0x62af, 0xa824, 0x2830, 0xf5a4, 0xdb03, 0x701, 0x1, 0x1);
        gbc.writeMem(0x62af, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa824, gbc.sp());
        EXPECT(0x62b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 02CC
        gbc.setState(0xe03c, 0x24ee, 0xd9c0, 0x4823, 0xfc4, 0xeed2, 0x1, 0x1);
        gbc.writeMem(0xe03c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x24ee, gbc.sp());
        EXPECT(0xe03e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe03c));
        EXPECT(0x1, gbc.readMem(0xe03d));
        // CB 01 02CD
        gbc.setState(0x153b, 0xf8af, 0xdbc0, 0x8796, 0xdba2, 0xca2a, 0x0, 0x0);
        gbc.writeMem(0x153b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf8af, gbc.sp());
        EXPECT(0x153d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 02CE
        gbc.setState(0xcb02, 0x4d2d, 0xa00, 0x1240, 0xf036, 0xbaac, 0x0, 0x0);
        gbc.writeMem(0xcb02, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4d2d, gbc.sp());
        EXPECT(0xcb04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb02));
        EXPECT(0x1, gbc.readMem(0xcb03));
        // CB 01 02CF
        gbc.setState(0x2b85, 0xf11e, 0x9160, 0x179f, 0xcab9, 0xf317, 0x1, 0x0);
        gbc.writeMem(0x2b85, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf11e, gbc.sp());
        EXPECT(0x2b87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 02D0
        gbc.setState(0x43ce, 0x87ff, 0xcfe0, 0xd02f, 0x255d, 0x6b21, 0x1, 0x1);
        gbc.writeMem(0x43ce, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x87ff, gbc.sp());
        EXPECT(0x43d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 02D1
        gbc.setState(0xaad9, 0x74e, 0xb430, 0x4bc9, 0x573c, 0x7298, 0x0, 0x1);
        gbc.writeMem(0xaad9, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x74e, gbc.sp());
        EXPECT(0xaadb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaad9));
        EXPECT(0x1, gbc.readMem(0xaada));
        // CB 01 02D5
        gbc.setState(0xda9e, 0xba39, 0xf050, 0xc78f, 0x2c9e, 0xd0a2, 0x1, 0x1);
        gbc.writeMem(0xda9e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xba39, gbc.sp());
        EXPECT(0xdaa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda9e));
        EXPECT(0x1, gbc.readMem(0xda9f));
        // CB 01 02D6
        gbc.setState(0x45c9, 0xd8e4, 0x4380, 0x36e4, 0x91e3, 0xe048, 0x1, 0x1);
        gbc.writeMem(0x45c9, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd8e4, gbc.sp());
        EXPECT(0x45cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 02D7
        gbc.setState(0xd406, 0x97c4, 0xf20, 0x2775, 0x67ae, 0xcc88, 0x1, 0x1);
        gbc.writeMem(0xd406, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x97c4, gbc.sp());
        EXPECT(0xd408, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd406));
        EXPECT(0x1, gbc.readMem(0xd407));
        // CB 01 02D8
        gbc.setState(0xe18, 0x5043, 0xb130, 0xed61, 0x99a5, 0x8006, 0x1, 0x0);
        gbc.writeMem(0xe18, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5043, gbc.sp());
        EXPECT(0xe1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 02D9
        gbc.setState(0x4170, 0xd00c, 0xbb30, 0xc755, 0x87e, 0xfd5d, 0x1, 0x1);
        gbc.writeMem(0x4170, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd00c, gbc.sp());
        EXPECT(0x4172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 02DB
        gbc.setState(0x5016, 0xfbe7, 0x51e0, 0x8110, 0xf9c6, 0x4d5a, 0x1, 0x1);
        gbc.writeMem(0x5016, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfbe7, gbc.sp());
        EXPECT(0x5018, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 02DC
        gbc.setState(0xe390, 0x6a0c, 0xb8d0, 0x3e7c, 0x2efb, 0x4ec1, 0x1, 0x1);
        gbc.writeMem(0xe390, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6a0c, gbc.sp());
        EXPECT(0xe392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe390));
        EXPECT(0x1, gbc.readMem(0xe391));
        // CB 01 02DD
        gbc.setState(0xcbb2, 0xc929, 0x34c0, 0xe8d7, 0x8fbb, 0xa38e, 0x0, 0x1);
        gbc.writeMem(0xcbb2, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc929, gbc.sp());
        EXPECT(0xcbb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbb2));
        EXPECT(0x1, gbc.readMem(0xcbb3));
        // CB 01 02DE
        gbc.setState(0x7c71, 0x66f1, 0x5110, 0x68c0, 0x80e4, 0x9c3c, 0x0, 0x1);
        gbc.writeMem(0x7c71, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x66f1, gbc.sp());
        EXPECT(0x7c73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 02DF
        gbc.setState(0xd26c, 0xc234, 0x8630, 0xa71a, 0xecca, 0xda40, 0x0, 0x0);
        gbc.writeMem(0xd26c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc234, gbc.sp());
        EXPECT(0xd26e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd26c));
        EXPECT(0x1, gbc.readMem(0xd26d));
        // CB 01 02E0
        gbc.setState(0x53bb, 0x27e3, 0xba00, 0x59bc, 0x4205, 0x61e4, 0x0, 0x0);
        gbc.writeMem(0x53bb, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x27e3, gbc.sp());
        EXPECT(0x53bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 02E1
        gbc.setState(0x70f4, 0xc4a6, 0x72e0, 0xa215, 0x70bd, 0xe36a, 0x1, 0x0);
        gbc.writeMem(0x70f4, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc4a6, gbc.sp());
        EXPECT(0x70f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 02E2
        gbc.setState(0xdb05, 0x1aeb, 0x83a0, 0xc11b, 0x592b, 0xc966, 0x0, 0x1);
        gbc.writeMem(0xdb05, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1aeb, gbc.sp());
        EXPECT(0xdb07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb05));
        EXPECT(0x1, gbc.readMem(0xdb06));
        // CB 01 02E3
        gbc.setState(0xd1f7, 0x5278, 0xf270, 0xe3a1, 0xd43d, 0xe447, 0x0, 0x0);
        gbc.writeMem(0xd1f7, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5278, gbc.sp());
        EXPECT(0xd1f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1f7));
        EXPECT(0x1, gbc.readMem(0xd1f8));
        // CB 01 02E4
        gbc.setState(0x6302, 0x50ff, 0xa790, 0x54cb, 0x8cc2, 0xcd9b, 0x0, 0x0);
        gbc.writeMem(0x6302, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x50ff, gbc.sp());
        EXPECT(0x6304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 02E5
        gbc.setState(0x48e4, 0xcee6, 0x2600, 0x2121, 0x7de5, 0xa03e, 0x0, 0x1);
        gbc.writeMem(0x48e4, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xcee6, gbc.sp());
        EXPECT(0x48e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 02E6
        gbc.setState(0x1aec, 0xd7ff, 0x9fb0, 0xc6aa, 0xcaa1, 0x6338, 0x1, 0x1);
        gbc.writeMem(0x1aec, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd7ff, gbc.sp());
        EXPECT(0x1aee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 02E7
        gbc.setState(0x760f, 0xf600, 0x9a90, 0x4bb6, 0xca93, 0x315c, 0x0, 0x0);
        gbc.writeMem(0x760f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf600, gbc.sp());
        EXPECT(0x7611, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 02E8
        gbc.setState(0xeff9, 0xf7ba, 0x4df0, 0x73ab, 0xdfbb, 0xe45e, 0x1, 0x1);
        gbc.writeMem(0xeff9, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf7ba, gbc.sp());
        EXPECT(0xeffb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeff9));
        EXPECT(0x1, gbc.readMem(0xeffa));
        // CB 01 02E9
        gbc.setState(0xd425, 0x245f, 0xd00, 0x7679, 0x5198, 0xbd61, 0x0, 0x1);
        gbc.writeMem(0xd425, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x245f, gbc.sp());
        EXPECT(0xd427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd425));
        EXPECT(0x1, gbc.readMem(0xd426));
        // CB 01 02EA
        gbc.setState(0x6d5b, 0x8644, 0x9940, 0x492a, 0xab0d, 0x8e29, 0x1, 0x1);
        gbc.writeMem(0x6d5b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8644, gbc.sp());
        EXPECT(0x6d5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 02EB
        gbc.setState(0x3d1b, 0xcaf1, 0xa320, 0xfe05, 0xe1ae, 0x52b, 0x0, 0x0);
        gbc.writeMem(0x3d1b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xcaf1, gbc.sp());
        EXPECT(0x3d1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 02EC
        gbc.setState(0xd50c, 0xbd2b, 0x99f0, 0x3b47, 0xe4a1, 0xfdb9, 0x0, 0x1);
        gbc.writeMem(0xd50c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbd2b, gbc.sp());
        EXPECT(0xd50e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd50c));
        EXPECT(0x1, gbc.readMem(0xd50d));
        // CB 01 02ED
        gbc.setState(0x66da, 0xcf3c, 0xf270, 0x4903, 0x99f8, 0xd510, 0x1, 0x1);
        gbc.writeMem(0x66da, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcf3c, gbc.sp());
        EXPECT(0x66dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 02EE
        gbc.setState(0x617b, 0x2e0b, 0xc20, 0xaa0d, 0x7e17, 0xff39, 0x1, 0x0);
        gbc.writeMem(0x617b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2e0b, gbc.sp());
        EXPECT(0x617d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 02EF
        gbc.setState(0xd6d, 0x78fb, 0x9dd0, 0x78b0, 0x99d, 0xb4c0, 0x0, 0x0);
        gbc.writeMem(0xd6d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x78fb, gbc.sp());
        EXPECT(0xd6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 02F0
        gbc.setState(0x5f53, 0x2b6d, 0x53f0, 0x9bf8, 0xf77c, 0xa0c9, 0x1, 0x1);
        gbc.writeMem(0x5f53, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2b6d, gbc.sp());
        EXPECT(0x5f55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 02F1
        gbc.setState(0x15f0, 0xb9e9, 0xbb60, 0x9264, 0x5fcc, 0x1322, 0x1, 0x1);
        gbc.writeMem(0x15f0, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb9e9, gbc.sp());
        EXPECT(0x15f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 02F3
        gbc.setState(0x43d1, 0x639b, 0x55a0, 0x6048, 0xe9ca, 0xa34, 0x1, 0x1);
        gbc.writeMem(0x43d1, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x639b, gbc.sp());
        EXPECT(0x43d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 02F4
        gbc.setState(0xe2b3, 0xa993, 0xefb0, 0xca1c, 0xcb10, 0x9f09, 0x0, 0x1);
        gbc.writeMem(0xe2b3, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa993, gbc.sp());
        EXPECT(0xe2b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2b3));
        EXPECT(0x1, gbc.readMem(0xe2b4));
        // CB 01 02F5
        gbc.setState(0x84e1, 0x8853, 0x1580, 0x959b, 0x87d8, 0xd374, 0x1, 0x0);
        gbc.writeMem(0x84e1, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8853, gbc.sp());
        EXPECT(0x84e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84e1));
        EXPECT(0x1, gbc.readMem(0x84e2));
        // CB 01 02F6
        gbc.setState(0x57dd, 0xbc19, 0xfdb0, 0x836d, 0x4513, 0x6d4f, 0x0, 0x0);
        gbc.writeMem(0x57dd, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xbc19, gbc.sp());
        EXPECT(0x57df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 02F7
        gbc.setState(0xecf3, 0xca5f, 0x41f0, 0x7798, 0xb459, 0x57bc, 0x1, 0x1);
        gbc.writeMem(0xecf3, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xca5f, gbc.sp());
        EXPECT(0xecf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecf3));
        EXPECT(0x1, gbc.readMem(0xecf4));
        // CB 01 02F8
        gbc.setState(0x50bb, 0x6e4c, 0x81f0, 0x41f3, 0x1d95, 0xf9c6, 0x1, 0x0);
        gbc.writeMem(0x50bb, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6e4c, gbc.sp());
        EXPECT(0x50bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 02F9
        gbc.setState(0x999c, 0x8fd2, 0x6b50, 0xf804, 0x957c, 0x374b, 0x1, 0x1);
        gbc.writeMem(0x999c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8fd2, gbc.sp());
        EXPECT(0x999e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x999c));
        EXPECT(0x1, gbc.readMem(0x999d));
        // CB 01 02FA
        gbc.setState(0xbf8e, 0xe441, 0x3b20, 0x244c, 0x15f2, 0xf1aa, 0x1, 0x1);
        gbc.writeMem(0xbf8e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe441, gbc.sp());
        EXPECT(0xbf90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf8e));
        EXPECT(0x1, gbc.readMem(0xbf8f));
        // CB 01 02FB
        gbc.setState(0xc210, 0x552f, 0xe830, 0xbe0c, 0xe37a, 0xc828, 0x1, 0x1);
        gbc.writeMem(0xc210, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x552f, gbc.sp());
        EXPECT(0xc212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc210));
        EXPECT(0x1, gbc.readMem(0xc211));
        // CB 01 02FC
        gbc.setState(0x42c7, 0xc356, 0x8a90, 0xfb0, 0x1011, 0xf6, 0x0, 0x1);
        gbc.writeMem(0x42c7, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc356, gbc.sp());
        EXPECT(0x42c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 02FD
        gbc.setState(0xbcc9, 0x23b4, 0x9c60, 0xde14, 0x18da, 0xd9cc, 0x1, 0x0);
        gbc.writeMem(0xbcc9, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x23b4, gbc.sp());
        EXPECT(0xbccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcc9));
        EXPECT(0x1, gbc.readMem(0xbcca));
        // CB 01 02FE
        gbc.setState(0x101, 0x7211, 0xd7c0, 0xb81f, 0xbd40, 0x373b, 0x0, 0x1);
        gbc.writeMem(0x101, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7211, gbc.sp());
        EXPECT(0x103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 02FF
        gbc.setState(0xb4f2, 0x4e58, 0x3d0, 0xd49d, 0x141f, 0xe9a4, 0x0, 0x0);
        gbc.writeMem(0xb4f2, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4e58, gbc.sp());
        EXPECT(0xb4f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4f2));
        EXPECT(0x1, gbc.readMem(0xb4f3));
        // CB 01 0300
        gbc.setState(0x2e29, 0x223, 0xc3a0, 0x4968, 0x5485, 0xadfd, 0x0, 0x0);
        gbc.writeMem(0x2e29, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x223, gbc.sp());
        EXPECT(0x2e2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0301
        gbc.setState(0x160c, 0xdfe2, 0x910, 0x8521, 0x93a9, 0x6f90, 0x1, 0x1);
        gbc.writeMem(0x160c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xdfe2, gbc.sp());
        EXPECT(0x160e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0302
        gbc.setState(0x771e, 0x6e2f, 0xffe0, 0xb3d8, 0x58b7, 0x58fc, 0x1, 0x0);
        gbc.writeMem(0x771e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6e2f, gbc.sp());
        EXPECT(0x7720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0303
        gbc.setState(0x7e23, 0xdc49, 0xbed0, 0xfc9, 0xea04, 0xc1ef, 0x1, 0x0);
        gbc.writeMem(0x7e23, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xdc49, gbc.sp());
        EXPECT(0x7e25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0304
        gbc.setState(0x44c9, 0x2bde, 0x4c70, 0x64ef, 0x7005, 0xbf6b, 0x1, 0x1);
        gbc.writeMem(0x44c9, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2bde, gbc.sp());
        EXPECT(0x44cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0305
        gbc.setState(0xca7d, 0xd409, 0x4120, 0x492e, 0xe61f, 0x989c, 0x0, 0x1);
        gbc.writeMem(0xca7d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd409, gbc.sp());
        EXPECT(0xca7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca7d));
        EXPECT(0x1, gbc.readMem(0xca7e));
        // CB 01 0306
        gbc.setState(0x65e6, 0x782d, 0xbfd0, 0x8141, 0x30c, 0x842f, 0x0, 0x1);
        gbc.writeMem(0x65e6, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x782d, gbc.sp());
        EXPECT(0x65e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0307
        gbc.setState(0x818e, 0x4b94, 0xa1c0, 0xb199, 0x1076, 0xfd67, 0x1, 0x0);
        gbc.writeMem(0x818e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4b94, gbc.sp());
        EXPECT(0x8190, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x818e));
        EXPECT(0x1, gbc.readMem(0x818f));
        // CB 01 0308
        gbc.setState(0x374b, 0x71a2, 0xce70, 0x5413, 0xa914, 0xd528, 0x0, 0x1);
        gbc.writeMem(0x374b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x71a2, gbc.sp());
        EXPECT(0x374d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0309
        gbc.setState(0x704b, 0xd859, 0x7a80, 0xa0aa, 0xc76c, 0xfd60, 0x0, 0x0);
        gbc.writeMem(0x704b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd859, gbc.sp());
        EXPECT(0x704d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 030A
        gbc.setState(0xb23d, 0x3d24, 0x47e0, 0x8bd1, 0x6268, 0xcf91, 0x1, 0x1);
        gbc.writeMem(0xb23d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3d24, gbc.sp());
        EXPECT(0xb23f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb23d));
        EXPECT(0x1, gbc.readMem(0xb23e));
        // CB 01 030B
        gbc.setState(0x8f23, 0xfe68, 0x36b0, 0xc3ae, 0x61ae, 0x88f9, 0x0, 0x0);
        gbc.writeMem(0x8f23, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfe68, gbc.sp());
        EXPECT(0x8f25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f23));
        EXPECT(0x1, gbc.readMem(0x8f24));
        // CB 01 030C
        gbc.setState(0xa185, 0x398b, 0x98e0, 0x1cc2, 0xc01f, 0x1225, 0x1, 0x0);
        gbc.writeMem(0xa185, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x398b, gbc.sp());
        EXPECT(0xa187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa185));
        EXPECT(0x1, gbc.readMem(0xa186));
        // CB 01 030D
        gbc.setState(0x871e, 0x7cc7, 0x4d30, 0x4aee, 0x562b, 0x35ff, 0x1, 0x1);
        gbc.writeMem(0x871e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7cc7, gbc.sp());
        EXPECT(0x8720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x871e));
        EXPECT(0x1, gbc.readMem(0x871f));
        // CB 01 030E
        gbc.setState(0xda81, 0xd65e, 0x8580, 0x9a9e, 0xda09, 0x6061, 0x1, 0x1);
        gbc.writeMem(0xda81, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd65e, gbc.sp());
        EXPECT(0xda83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda81));
        EXPECT(0x1, gbc.readMem(0xda82));
        // CB 01 030F
        gbc.setState(0x3a55, 0x7b58, 0x3920, 0x4ff8, 0xe255, 0x6117, 0x1, 0x0);
        gbc.writeMem(0x3a55, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7b58, gbc.sp());
        EXPECT(0x3a57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0310
        gbc.setState(0xee57, 0x45c8, 0xb300, 0x7735, 0xc088, 0x94d6, 0x0, 0x0);
        gbc.writeMem(0xee57, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x45c8, gbc.sp());
        EXPECT(0xee59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee57));
        EXPECT(0x1, gbc.readMem(0xee58));
        // CB 01 0311
        gbc.setState(0xc173, 0xd42a, 0x8540, 0xf864, 0x7e98, 0x1046, 0x1, 0x0);
        gbc.writeMem(0xc173, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd42a, gbc.sp());
        EXPECT(0xc175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc173));
        EXPECT(0x1, gbc.readMem(0xc174));
        // CB 01 0312
        gbc.setState(0xa496, 0x1b01, 0x82f0, 0xdf6e, 0xca3e, 0xb377, 0x0, 0x1);
        gbc.writeMem(0xa496, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1b01, gbc.sp());
        EXPECT(0xa498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa496));
        EXPECT(0x1, gbc.readMem(0xa497));
        // CB 01 0313
        gbc.setState(0x7e98, 0xf7b7, 0x7be0, 0x2b2c, 0x77c5, 0xe8d2, 0x0, 0x1);
        gbc.writeMem(0x7e98, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf7b7, gbc.sp());
        EXPECT(0x7e9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0314
        gbc.setState(0x2ed4, 0x8dca, 0xb540, 0xf40c, 0x32e2, 0x9abd, 0x0, 0x0);
        gbc.writeMem(0x2ed4, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8dca, gbc.sp());
        EXPECT(0x2ed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0315
        gbc.setState(0xe3d6, 0x5d49, 0x1f90, 0x1135, 0xfd6e, 0xe798, 0x0, 0x1);
        gbc.writeMem(0xe3d6, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5d49, gbc.sp());
        EXPECT(0xe3d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3d6));
        EXPECT(0x1, gbc.readMem(0xe3d7));
        // CB 01 0316
        gbc.setState(0xac07, 0xa68d, 0x81b0, 0xf350, 0xf4f4, 0xfa85, 0x0, 0x0);
        gbc.writeMem(0xac07, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa68d, gbc.sp());
        EXPECT(0xac09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac07));
        EXPECT(0x1, gbc.readMem(0xac08));
        // CB 01 0317
        gbc.setState(0xe7ce, 0x232f, 0x9500, 0x67b4, 0x4a09, 0x58d8, 0x0, 0x1);
        gbc.writeMem(0xe7ce, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x232f, gbc.sp());
        EXPECT(0xe7d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7ce));
        EXPECT(0x1, gbc.readMem(0xe7cf));
        // CB 01 0318
        gbc.setState(0xc06, 0xb4fb, 0x7180, 0x423c, 0x5e51, 0x8afa, 0x1, 0x0);
        gbc.writeMem(0xc06, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb4fb, gbc.sp());
        EXPECT(0xc08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0319
        gbc.setState(0x1267, 0x3e69, 0x6ad0, 0x4, 0x7bf5, 0x1ef8, 0x0, 0x1);
        gbc.writeMem(0x1267, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3e69, gbc.sp());
        EXPECT(0x1269, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 031A
        gbc.setState(0xe56b, 0xa606, 0xb420, 0x2e36, 0xfff4, 0x11df, 0x1, 0x0);
        gbc.writeMem(0xe56b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa606, gbc.sp());
        EXPECT(0xe56d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe56b));
        EXPECT(0x1, gbc.readMem(0xe56c));
        // CB 01 031B
        gbc.setState(0xce4, 0xf396, 0x44a0, 0x21d3, 0x6e72, 0xd4c, 0x0, 0x0);
        gbc.writeMem(0xce4, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf396, gbc.sp());
        EXPECT(0xce6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 031D
        gbc.setState(0x30a1, 0xc319, 0x48f0, 0xeadf, 0xa9fc, 0x13f9, 0x0, 0x0);
        gbc.writeMem(0x30a1, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc319, gbc.sp());
        EXPECT(0x30a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 031E
        gbc.setState(0xb5db, 0x60db, 0xebf0, 0x1906, 0x153, 0x3ab5, 0x0, 0x0);
        gbc.writeMem(0xb5db, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x60db, gbc.sp());
        EXPECT(0xb5dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5db));
        EXPECT(0x1, gbc.readMem(0xb5dc));
        // CB 01 031F
        gbc.setState(0x4f32, 0xff11, 0x37f0, 0x582c, 0x3b8, 0xd70, 0x1, 0x1);
        gbc.writeMem(0x4f32, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xff11, gbc.sp());
        EXPECT(0x4f34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0321
        gbc.setState(0x1f51, 0xcc63, 0xc590, 0x129a, 0xe407, 0x1e2b, 0x1, 0x1);
        gbc.writeMem(0x1f51, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xcc63, gbc.sp());
        EXPECT(0x1f53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0322
        gbc.setState(0x41d1, 0x63c1, 0xc090, 0x1c30, 0x3dfa, 0x8ac2, 0x1, 0x0);
        gbc.writeMem(0x41d1, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x63c1, gbc.sp());
        EXPECT(0x41d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0323
        gbc.setState(0x3cf9, 0x2a25, 0x30a0, 0x7e2, 0xfe7d, 0x27c1, 0x0, 0x0);
        gbc.writeMem(0x3cf9, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2a25, gbc.sp());
        EXPECT(0x3cfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0324
        gbc.setState(0xa5ff, 0xd9b3, 0xc030, 0x16ad, 0x3b6c, 0x7cbd, 0x1, 0x1);
        gbc.writeMem(0xa5ff, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd9b3, gbc.sp());
        EXPECT(0xa601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ff));
        EXPECT(0x1, gbc.readMem(0xa600));
        // CB 01 0325
        gbc.setState(0xda15, 0x42cd, 0xe750, 0x5c9f, 0xc910, 0x4872, 0x1, 0x1);
        gbc.writeMem(0xda15, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x42cd, gbc.sp());
        EXPECT(0xda17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda15));
        EXPECT(0x1, gbc.readMem(0xda16));
        // CB 01 0326
        gbc.setState(0x927a, 0x53d4, 0x2ef0, 0xd615, 0xa47b, 0x6c47, 0x0, 0x1);
        gbc.writeMem(0x927a, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x53d4, gbc.sp());
        EXPECT(0x927c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x927a));
        EXPECT(0x1, gbc.readMem(0x927b));
        // CB 01 0327
        gbc.setState(0x7a0d, 0xd89, 0x5e90, 0x4076, 0x7b1e, 0xa8ef, 0x0, 0x1);
        gbc.writeMem(0x7a0d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd89, gbc.sp());
        EXPECT(0x7a0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0328
        gbc.setState(0x7ce0, 0x5cfe, 0xbe30, 0xd5a1, 0xf064, 0xe146, 0x1, 0x0);
        gbc.writeMem(0x7ce0, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5cfe, gbc.sp());
        EXPECT(0x7ce2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0329
        gbc.setState(0x43f6, 0x6f3b, 0x93c0, 0xa44d, 0x1084, 0x6ece, 0x1, 0x1);
        gbc.writeMem(0x43f6, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6f3b, gbc.sp());
        EXPECT(0x43f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 032A
        gbc.setState(0x57cc, 0x3cd7, 0x3b00, 0xf423, 0x2a6, 0x7912, 0x0, 0x1);
        gbc.writeMem(0x57cc, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3cd7, gbc.sp());
        EXPECT(0x57ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 032B
        gbc.setState(0xc62b, 0xc787, 0x4ab0, 0x5b41, 0x6611, 0xcf2d, 0x0, 0x1);
        gbc.writeMem(0xc62b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc787, gbc.sp());
        EXPECT(0xc62d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc62b));
        EXPECT(0x1, gbc.readMem(0xc62c));
        // CB 01 032C
        gbc.setState(0x775e, 0x30f4, 0x9160, 0xc049, 0x5ad4, 0x5355, 0x1, 0x1);
        gbc.writeMem(0x775e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x30f4, gbc.sp());
        EXPECT(0x7760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 032D
        gbc.setState(0x426f, 0xdc0d, 0xb140, 0xb3a6, 0x8003, 0xb20a, 0x0, 0x1);
        gbc.writeMem(0x426f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xdc0d, gbc.sp());
        EXPECT(0x4271, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 032E
        gbc.setState(0xd649, 0xd218, 0x7130, 0xd66c, 0x7b5f, 0xe3ea, 0x0, 0x0);
        gbc.writeMem(0xd649, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd218, gbc.sp());
        EXPECT(0xd64b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd649));
        EXPECT(0x1, gbc.readMem(0xd64a));
        // CB 01 032F
        gbc.setState(0x9a99, 0x390b, 0x1ed0, 0x6d4f, 0x336, 0xfd7a, 0x1, 0x0);
        gbc.writeMem(0x9a99, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x390b, gbc.sp());
        EXPECT(0x9a9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a99));
        EXPECT(0x1, gbc.readMem(0x9a9a));
        // CB 01 0330
        gbc.setState(0x5b1d, 0x7cec, 0x5480, 0x4898, 0xc7f8, 0xa5e, 0x0, 0x1);
        gbc.writeMem(0x5b1d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7cec, gbc.sp());
        EXPECT(0x5b1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0331
        gbc.setState(0x472f, 0x205, 0xa60, 0xf91f, 0xd1dd, 0x80cf, 0x0, 0x1);
        gbc.writeMem(0x472f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x205, gbc.sp());
        EXPECT(0x4731, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0332
        gbc.setState(0x4355, 0x482d, 0xec80, 0x90d3, 0xc2ca, 0x4a15, 0x1, 0x0);
        gbc.writeMem(0x4355, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x482d, gbc.sp());
        EXPECT(0x4357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0333
        gbc.setState(0x37be, 0x47f0, 0x9fd0, 0x737f, 0xe471, 0x6f3d, 0x0, 0x0);
        gbc.writeMem(0x37be, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x47f0, gbc.sp());
        EXPECT(0x37c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0334
        gbc.setState(0x3c1d, 0xe97b, 0x1240, 0xf64b, 0x9aa2, 0x383e, 0x1, 0x1);
        gbc.writeMem(0x3c1d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe97b, gbc.sp());
        EXPECT(0x3c1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0335
        gbc.setState(0x5903, 0x49b5, 0x5c40, 0x6937, 0x9904, 0x355, 0x1, 0x0);
        gbc.writeMem(0x5903, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x49b5, gbc.sp());
        EXPECT(0x5905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0336
        gbc.setState(0x64c4, 0xbe7c, 0x86b0, 0x4be5, 0x9c54, 0xf456, 0x1, 0x0);
        gbc.writeMem(0x64c4, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xbe7c, gbc.sp());
        EXPECT(0x64c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0337
        gbc.setState(0xa6d0, 0x7389, 0xc9a0, 0xcdbc, 0xd02d, 0x393e, 0x1, 0x0);
        gbc.writeMem(0xa6d0, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7389, gbc.sp());
        EXPECT(0xa6d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6d0));
        EXPECT(0x1, gbc.readMem(0xa6d1));
        // CB 01 0338
        gbc.setState(0xdeb2, 0x3bc, 0xfc70, 0xb3cc, 0x336f, 0x1375, 0x0, 0x0);
        gbc.writeMem(0xdeb2, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3bc, gbc.sp());
        EXPECT(0xdeb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeb2));
        EXPECT(0x1, gbc.readMem(0xdeb3));
        // CB 01 0339
        gbc.setState(0xd478, 0x2edf, 0xabd0, 0x51fc, 0xd74e, 0x1bc9, 0x0, 0x1);
        gbc.writeMem(0xd478, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2edf, gbc.sp());
        EXPECT(0xd47a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd478));
        EXPECT(0x1, gbc.readMem(0xd479));
        // CB 01 033A
        gbc.setState(0x7c37, 0x7ec0, 0xec70, 0x7acf, 0x9a0, 0xfb02, 0x0, 0x0);
        gbc.writeMem(0x7c37, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7ec0, gbc.sp());
        EXPECT(0x7c39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 033B
        gbc.setState(0x36, 0x42d6, 0x4b20, 0x95e2, 0xa045, 0x9002, 0x1, 0x1);
        gbc.writeMem(0x36, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x42d6, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 033C
        gbc.setState(0xb2b9, 0xb58e, 0x2640, 0xd275, 0x39f2, 0x6a1d, 0x1, 0x0);
        gbc.writeMem(0xb2b9, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb58e, gbc.sp());
        EXPECT(0xb2bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2b9));
        EXPECT(0x1, gbc.readMem(0xb2ba));
        // CB 01 033D
        gbc.setState(0x240d, 0xf735, 0x86f0, 0xf5cf, 0xcf15, 0x4cca, 0x1, 0x1);
        gbc.writeMem(0x240d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf735, gbc.sp());
        EXPECT(0x240f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 033E
        gbc.setState(0x6e2, 0xca09, 0xc140, 0xf3bb, 0x91f2, 0x5aa6, 0x1, 0x1);
        gbc.writeMem(0x6e2, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xca09, gbc.sp());
        EXPECT(0x6e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0340
        gbc.setState(0x2ae8, 0xc040, 0x8b10, 0x1a7e, 0xa94a, 0xa24e, 0x1, 0x0);
        gbc.writeMem(0x2ae8, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc040, gbc.sp());
        EXPECT(0x2aea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0341
        gbc.setState(0x2557, 0xd1f7, 0xf250, 0x7ee2, 0xedb4, 0x667, 0x1, 0x1);
        gbc.writeMem(0x2557, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd1f7, gbc.sp());
        EXPECT(0x2559, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0342
        gbc.setState(0x8cf9, 0xd49f, 0xa4c0, 0x154c, 0xd5ff, 0xbd0, 0x1, 0x1);
        gbc.writeMem(0x8cf9, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd49f, gbc.sp());
        EXPECT(0x8cfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cf9));
        EXPECT(0x1, gbc.readMem(0x8cfa));
        // CB 01 0343
        gbc.setState(0x56d9, 0x72e2, 0x1f60, 0x896a, 0x24a2, 0xbb0d, 0x0, 0x0);
        gbc.writeMem(0x56d9, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x72e2, gbc.sp());
        EXPECT(0x56db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0345
        gbc.setState(0x89de, 0xc043, 0xda70, 0xab1c, 0xddc3, 0xe96, 0x1, 0x1);
        gbc.writeMem(0x89de, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc043, gbc.sp());
        EXPECT(0x89e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89de));
        EXPECT(0x1, gbc.readMem(0x89df));
        // CB 01 0346
        gbc.setState(0x3e54, 0x914f, 0x6870, 0xc3d2, 0x74f3, 0x9e61, 0x1, 0x1);
        gbc.writeMem(0x3e54, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x914f, gbc.sp());
        EXPECT(0x3e56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0348
        gbc.setState(0xeda3, 0xb542, 0xd310, 0x63b8, 0x3711, 0xee04, 0x1, 0x0);
        gbc.writeMem(0xeda3, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb542, gbc.sp());
        EXPECT(0xeda5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeda3));
        EXPECT(0x1, gbc.readMem(0xeda4));
        // CB 01 0349
        gbc.setState(0x35d0, 0x45f0, 0x5ed0, 0xe009, 0xe81e, 0x2bea, 0x0, 0x0);
        gbc.writeMem(0x35d0, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x45f0, gbc.sp());
        EXPECT(0x35d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 034A
        gbc.setState(0x2948, 0x3e39, 0xd240, 0xc278, 0x2c09, 0xfb2a, 0x1, 0x1);
        gbc.writeMem(0x2948, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3e39, gbc.sp());
        EXPECT(0x294a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 034C
        gbc.setState(0x874c, 0x1a95, 0x7a90, 0x7bb, 0xded1, 0x7709, 0x0, 0x0);
        gbc.writeMem(0x874c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1a95, gbc.sp());
        EXPECT(0x874e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x874c));
        EXPECT(0x1, gbc.readMem(0x874d));
        // CB 01 034D
        gbc.setState(0xecc3, 0x8132, 0x9da0, 0xc845, 0xc943, 0x47c3, 0x1, 0x0);
        gbc.writeMem(0xecc3, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8132, gbc.sp());
        EXPECT(0xecc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecc3));
        EXPECT(0x1, gbc.readMem(0xecc4));
        // CB 01 034E
        gbc.setState(0xa253, 0x41cb, 0x6830, 0x4da4, 0x981f, 0x54eb, 0x0, 0x1);
        gbc.writeMem(0xa253, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x41cb, gbc.sp());
        EXPECT(0xa255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa253));
        EXPECT(0x1, gbc.readMem(0xa254));
        // CB 01 034F
        gbc.setState(0xd8f4, 0x6738, 0xb2b0, 0xb41f, 0xba2f, 0x30f8, 0x0, 0x1);
        gbc.writeMem(0xd8f4, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6738, gbc.sp());
        EXPECT(0xd8f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8f4));
        EXPECT(0x1, gbc.readMem(0xd8f5));
        // CB 01 0350
        gbc.setState(0x295, 0x956b, 0x18b0, 0x35be, 0xdf87, 0x332d, 0x1, 0x1);
        gbc.writeMem(0x295, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x956b, gbc.sp());
        EXPECT(0x297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0351
        gbc.setState(0xec23, 0x21c6, 0x1bd0, 0xf439, 0x7ed2, 0x3389, 0x0, 0x0);
        gbc.writeMem(0xec23, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x21c6, gbc.sp());
        EXPECT(0xec25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec23));
        EXPECT(0x1, gbc.readMem(0xec24));
        // CB 01 0352
        gbc.setState(0xe0ee, 0x86f4, 0x5760, 0xbe29, 0x3784, 0x87ee, 0x1, 0x0);
        gbc.writeMem(0xe0ee, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x86f4, gbc.sp());
        EXPECT(0xe0f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ee));
        EXPECT(0x1, gbc.readMem(0xe0ef));
        // CB 01 0353
        gbc.setState(0xb5b8, 0xc3f4, 0xd640, 0x6053, 0xc77d, 0xde26, 0x0, 0x0);
        gbc.writeMem(0xb5b8, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc3f4, gbc.sp());
        EXPECT(0xb5ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5b8));
        EXPECT(0x1, gbc.readMem(0xb5b9));
        // CB 01 0354
        gbc.setState(0x3c8a, 0xddf8, 0x59a0, 0x8de9, 0xd46b, 0x77e4, 0x0, 0x0);
        gbc.writeMem(0x3c8a, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xddf8, gbc.sp());
        EXPECT(0x3c8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0355
        gbc.setState(0x294f, 0x11e5, 0xdf80, 0x7ccb, 0xea2a, 0xda03, 0x0, 0x1);
        gbc.writeMem(0x294f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x11e5, gbc.sp());
        EXPECT(0x2951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0356
        gbc.setState(0xc50b, 0x24ec, 0x9840, 0x9575, 0xdd73, 0x5b08, 0x1, 0x1);
        gbc.writeMem(0xc50b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x24ec, gbc.sp());
        EXPECT(0xc50d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc50b));
        EXPECT(0x1, gbc.readMem(0xc50c));
        // CB 01 0357
        gbc.setState(0x1618, 0x16eb, 0x3d60, 0xa3e7, 0xf9d3, 0x5d72, 0x1, 0x0);
        gbc.writeMem(0x1618, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x16eb, gbc.sp());
        EXPECT(0x161a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0358
        gbc.setState(0x7c55, 0xacf1, 0x5de0, 0xd669, 0xabef, 0x6612, 0x0, 0x1);
        gbc.writeMem(0x7c55, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xacf1, gbc.sp());
        EXPECT(0x7c57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0359
        gbc.setState(0xde02, 0x8aef, 0x3a0, 0x9c4f, 0x90fc, 0x38e1, 0x0, 0x1);
        gbc.writeMem(0xde02, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8aef, gbc.sp());
        EXPECT(0xde04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde02));
        EXPECT(0x1, gbc.readMem(0xde03));
        // CB 01 035A
        gbc.setState(0x7354, 0x75b2, 0x9760, 0x42b1, 0x5c3b, 0x9dc1, 0x0, 0x1);
        gbc.writeMem(0x7354, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x75b2, gbc.sp());
        EXPECT(0x7356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 035B
        gbc.setState(0xba70, 0xc788, 0x77c0, 0xde43, 0x9d4d, 0x66c8, 0x0, 0x1);
        gbc.writeMem(0xba70, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc788, gbc.sp());
        EXPECT(0xba72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba70));
        EXPECT(0x1, gbc.readMem(0xba71));
        // CB 01 035C
        gbc.setState(0x65a1, 0x924f, 0x67f0, 0x4576, 0xdd2b, 0xb4d3, 0x1, 0x0);
        gbc.writeMem(0x65a1, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x924f, gbc.sp());
        EXPECT(0x65a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 035D
        gbc.setState(0x4050, 0x9fad, 0x5010, 0x4528, 0x7bc5, 0x827, 0x1, 0x0);
        gbc.writeMem(0x4050, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9fad, gbc.sp());
        EXPECT(0x4052, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 035E
        gbc.setState(0xb2ea, 0xbb7e, 0xd470, 0xf74b, 0x8dbc, 0xe652, 0x0, 0x1);
        gbc.writeMem(0xb2ea, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xbb7e, gbc.sp());
        EXPECT(0xb2ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2ea));
        EXPECT(0x1, gbc.readMem(0xb2eb));
        // CB 01 035F
        gbc.setState(0x8fbf, 0x8b0f, 0xf940, 0x9868, 0xde8f, 0xcd35, 0x1, 0x1);
        gbc.writeMem(0x8fbf, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8b0f, gbc.sp());
        EXPECT(0x8fc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fbf));
        EXPECT(0x1, gbc.readMem(0x8fc0));
        // CB 01 0360
        gbc.setState(0x6721, 0x4fe1, 0xf870, 0x158e, 0x224b, 0x6b77, 0x0, 0x1);
        gbc.writeMem(0x6721, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4fe1, gbc.sp());
        EXPECT(0x6723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0361
        gbc.setState(0x1586, 0xb183, 0xde10, 0x6a0f, 0x5b8, 0xb0b, 0x0, 0x0);
        gbc.writeMem(0x1586, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb183, gbc.sp());
        EXPECT(0x1588, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0362
        gbc.setState(0xa9b2, 0x5511, 0x8c70, 0xfe06, 0xd5dd, 0xd9a, 0x1, 0x0);
        gbc.writeMem(0xa9b2, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5511, gbc.sp());
        EXPECT(0xa9b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9b2));
        EXPECT(0x1, gbc.readMem(0xa9b3));
        // CB 01 0363
        gbc.setState(0x7d22, 0xa66, 0x8fd0, 0x473a, 0xba84, 0xebe9, 0x1, 0x0);
        gbc.writeMem(0x7d22, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa66, gbc.sp());
        EXPECT(0x7d24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0364
        gbc.setState(0xb8dd, 0x7ace, 0xe420, 0xdc80, 0xc18b, 0x56c7, 0x1, 0x0);
        gbc.writeMem(0xb8dd, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7ace, gbc.sp());
        EXPECT(0xb8df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8dd));
        EXPECT(0x1, gbc.readMem(0xb8de));
        // CB 01 0365
        gbc.setState(0x4c3c, 0x218, 0x8040, 0xfab7, 0x1caf, 0x1e3c, 0x1, 0x0);
        gbc.writeMem(0x4c3c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x218, gbc.sp());
        EXPECT(0x4c3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0366
        gbc.setState(0x9fd, 0x1486, 0x9590, 0xdff, 0xb765, 0x6fd0, 0x0, 0x1);
        gbc.writeMem(0x9fd, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1486, gbc.sp());
        EXPECT(0x9ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0367
        gbc.setState(0xd6ea, 0xb963, 0x7f20, 0xfd8e, 0x84e9, 0x1236, 0x1, 0x0);
        gbc.writeMem(0xd6ea, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb963, gbc.sp());
        EXPECT(0xd6ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6ea));
        EXPECT(0x1, gbc.readMem(0xd6eb));
        // CB 01 0368
        gbc.setState(0x9915, 0xefbb, 0xe230, 0xb7b, 0x1990, 0xbe7c, 0x0, 0x1);
        gbc.writeMem(0x9915, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xefbb, gbc.sp());
        EXPECT(0x9917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9915));
        EXPECT(0x1, gbc.readMem(0x9916));
        // CB 01 0369
        gbc.setState(0xc462, 0x98bb, 0xce10, 0x7218, 0x1db4, 0x409a, 0x1, 0x0);
        gbc.writeMem(0xc462, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x98bb, gbc.sp());
        EXPECT(0xc464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc462));
        EXPECT(0x1, gbc.readMem(0xc463));
        // CB 01 036A
        gbc.setState(0xe84c, 0x5da3, 0x9e80, 0xdbc1, 0x7f47, 0x4d9b, 0x0, 0x1);
        gbc.writeMem(0xe84c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5da3, gbc.sp());
        EXPECT(0xe84e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe84c));
        EXPECT(0x1, gbc.readMem(0xe84d));
        // CB 01 036B
        gbc.setState(0xacd9, 0xc247, 0xab10, 0xe0c8, 0x7009, 0xec7f, 0x0, 0x1);
        gbc.writeMem(0xacd9, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc247, gbc.sp());
        EXPECT(0xacdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacd9));
        EXPECT(0x1, gbc.readMem(0xacda));
        // CB 01 036C
        gbc.setState(0xbc92, 0xdc27, 0x3630, 0x3a91, 0xd90d, 0xf551, 0x0, 0x0);
        gbc.writeMem(0xbc92, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xdc27, gbc.sp());
        EXPECT(0xbc94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc92));
        EXPECT(0x1, gbc.readMem(0xbc93));
        // CB 01 036D
        gbc.setState(0x2ae6, 0xfd1b, 0x9b90, 0x3632, 0xfe3e, 0xe181, 0x1, 0x0);
        gbc.writeMem(0x2ae6, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xfd1b, gbc.sp());
        EXPECT(0x2ae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 036E
        gbc.setState(0x8f72, 0x6ad1, 0x2a0, 0x953c, 0xe484, 0xffb8, 0x0, 0x1);
        gbc.writeMem(0x8f72, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6ad1, gbc.sp());
        EXPECT(0x8f74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f72));
        EXPECT(0x1, gbc.readMem(0x8f73));
        // CB 01 036F
        gbc.setState(0xc67d, 0xe1d1, 0x75e0, 0x56f5, 0xd640, 0x418e, 0x0, 0x1);
        gbc.writeMem(0xc67d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe1d1, gbc.sp());
        EXPECT(0xc67f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc67d));
        EXPECT(0x1, gbc.readMem(0xc67e));
        // CB 01 0370
        gbc.setState(0x9969, 0x8af3, 0xc350, 0x7af0, 0x6e59, 0xb9c8, 0x1, 0x0);
        gbc.writeMem(0x9969, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8af3, gbc.sp());
        EXPECT(0x996b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9969));
        EXPECT(0x1, gbc.readMem(0x996a));
        // CB 01 0371
        gbc.setState(0xef10, 0x8e2f, 0xe4d0, 0x114f, 0x9501, 0x5911, 0x0, 0x0);
        gbc.writeMem(0xef10, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8e2f, gbc.sp());
        EXPECT(0xef12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef10));
        EXPECT(0x1, gbc.readMem(0xef11));
        // CB 01 0372
        gbc.setState(0x4a18, 0xc31d, 0x2a50, 0xa369, 0xd650, 0x8fd5, 0x1, 0x0);
        gbc.writeMem(0x4a18, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc31d, gbc.sp());
        EXPECT(0x4a1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0373
        gbc.setState(0x7516, 0xa6d6, 0x440, 0x32db, 0x48b9, 0xcb35, 0x1, 0x0);
        gbc.writeMem(0x7516, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa6d6, gbc.sp());
        EXPECT(0x7518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0374
        gbc.setState(0x59a3, 0x29a3, 0x1430, 0x1bde, 0x28d4, 0x2d80, 0x1, 0x1);
        gbc.writeMem(0x59a3, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x29a3, gbc.sp());
        EXPECT(0x59a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0375
        gbc.setState(0x2754, 0x3c39, 0x4f60, 0x6a5a, 0xabaa, 0xcf96, 0x1, 0x0);
        gbc.writeMem(0x2754, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3c39, gbc.sp());
        EXPECT(0x2756, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0376
        gbc.setState(0x60e6, 0x1a11, 0x9030, 0x998, 0x76bc, 0x859d, 0x0, 0x0);
        gbc.writeMem(0x60e6, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1a11, gbc.sp());
        EXPECT(0x60e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0377
        gbc.setState(0x8643, 0x37a7, 0xd3f0, 0xf14b, 0x77bf, 0x7865, 0x0, 0x1);
        gbc.writeMem(0x8643, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x37a7, gbc.sp());
        EXPECT(0x8645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8643));
        EXPECT(0x1, gbc.readMem(0x8644));
        // CB 01 0378
        gbc.setState(0xec54, 0xb27b, 0x4350, 0x6ce0, 0x1050, 0xdcc6, 0x1, 0x0);
        gbc.writeMem(0xec54, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb27b, gbc.sp());
        EXPECT(0xec56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec54));
        EXPECT(0x1, gbc.readMem(0xec55));
        // CB 01 0379
        gbc.setState(0xc0cd, 0x5d8c, 0x76f0, 0x7e6b, 0xbb39, 0x4aae, 0x1, 0x1);
        gbc.writeMem(0xc0cd, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5d8c, gbc.sp());
        EXPECT(0xc0cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0cd));
        EXPECT(0x1, gbc.readMem(0xc0ce));
        // CB 01 037A
        gbc.setState(0x2921, 0xb34a, 0x7d0, 0xde62, 0x53c, 0xa1d5, 0x1, 0x0);
        gbc.writeMem(0x2921, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb34a, gbc.sp());
        EXPECT(0x2923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 037B
        gbc.setState(0x163b, 0xf195, 0xa8a0, 0xef0d, 0x2c93, 0x5b5f, 0x1, 0x0);
        gbc.writeMem(0x163b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf195, gbc.sp());
        EXPECT(0x163d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 037C
        gbc.setState(0x4452, 0x9e96, 0x9420, 0x752d, 0xfaf9, 0x7ab4, 0x0, 0x0);
        gbc.writeMem(0x4452, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9e96, gbc.sp());
        EXPECT(0x4454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 037D
        gbc.setState(0xc15c, 0x1ca2, 0x640, 0xf5ce, 0xe0f, 0x53b1, 0x1, 0x1);
        gbc.writeMem(0xc15c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1ca2, gbc.sp());
        EXPECT(0xc15e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc15c));
        EXPECT(0x1, gbc.readMem(0xc15d));
        // CB 01 037E
        gbc.setState(0x9a66, 0x108c, 0x8b50, 0x6e2e, 0xcee5, 0x8d60, 0x1, 0x0);
        gbc.writeMem(0x9a66, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x108c, gbc.sp());
        EXPECT(0x9a68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a66));
        EXPECT(0x1, gbc.readMem(0x9a67));
        // CB 01 037F
        gbc.setState(0xd852, 0x3ff8, 0x69f0, 0xeec7, 0x87a6, 0x38e8, 0x0, 0x0);
        gbc.writeMem(0xd852, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3ff8, gbc.sp());
        EXPECT(0xd854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd852));
        EXPECT(0x1, gbc.readMem(0xd853));
        // CB 01 0380
        gbc.setState(0x800, 0xa73c, 0x7fc0, 0xf601, 0x18e4, 0xc2d9, 0x0, 0x1);
        gbc.writeMem(0x800, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa73c, gbc.sp());
        EXPECT(0x802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0381
        gbc.setState(0xd432, 0x586e, 0x5db0, 0xc321, 0xde91, 0x11ef, 0x1, 0x0);
        gbc.writeMem(0xd432, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x586e, gbc.sp());
        EXPECT(0xd434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd432));
        EXPECT(0x1, gbc.readMem(0xd433));
        // CB 01 0382
        gbc.setState(0xca1d, 0x37e, 0x9540, 0xdbed, 0x7982, 0x9071, 0x0, 0x0);
        gbc.writeMem(0xca1d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x37e, gbc.sp());
        EXPECT(0xca1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca1d));
        EXPECT(0x1, gbc.readMem(0xca1e));
        // CB 01 0383
        gbc.setState(0x5237, 0x9a1d, 0x1c50, 0xb7ef, 0xd008, 0xf7da, 0x1, 0x0);
        gbc.writeMem(0x5237, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9a1d, gbc.sp());
        EXPECT(0x5239, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0384
        gbc.setState(0x2110, 0x774d, 0x9bb0, 0xbb63, 0x2250, 0xd9f3, 0x0, 0x1);
        gbc.writeMem(0x2110, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x774d, gbc.sp());
        EXPECT(0x2112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0385
        gbc.setState(0x45ff, 0xbc0, 0xffc0, 0x30b9, 0xe0a4, 0xbc19, 0x1, 0x1);
        gbc.writeMem(0x45ff, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xbc0, gbc.sp());
        EXPECT(0x4601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0386
        gbc.setState(0x8a11, 0x6135, 0x6430, 0xb80b, 0x9fbd, 0x8273, 0x0, 0x1);
        gbc.writeMem(0x8a11, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6135, gbc.sp());
        EXPECT(0x8a13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a11));
        EXPECT(0x1, gbc.readMem(0x8a12));
        // CB 01 0387
        gbc.setState(0x2d3, 0x5767, 0xd9c0, 0xae92, 0x7ec2, 0xb6a5, 0x0, 0x0);
        gbc.writeMem(0x2d3, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5767, gbc.sp());
        EXPECT(0x2d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0388
        gbc.setState(0xea6e, 0x9d08, 0x9d00, 0x1595, 0x657, 0xdaa7, 0x0, 0x1);
        gbc.writeMem(0xea6e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9d08, gbc.sp());
        EXPECT(0xea70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea6e));
        EXPECT(0x1, gbc.readMem(0xea6f));
        // CB 01 0389
        gbc.setState(0x773d, 0xb96e, 0x4b00, 0x2e20, 0x1660, 0xd57b, 0x1, 0x1);
        gbc.writeMem(0x773d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb96e, gbc.sp());
        EXPECT(0x773f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 038A
        gbc.setState(0xccf8, 0x1a7, 0x8230, 0x222d, 0x1278, 0xf7bc, 0x0, 0x1);
        gbc.writeMem(0xccf8, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1a7, gbc.sp());
        EXPECT(0xccfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccf8));
        EXPECT(0x1, gbc.readMem(0xccf9));
        // CB 01 038B
        gbc.setState(0x6ecc, 0x1834, 0x94b0, 0xa72, 0x2f36, 0x9b33, 0x0, 0x0);
        gbc.writeMem(0x6ecc, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1834, gbc.sp());
        EXPECT(0x6ece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 038C
        gbc.setState(0x149e, 0x78c9, 0x76d0, 0xa87b, 0x118f, 0x653c, 0x1, 0x0);
        gbc.writeMem(0x149e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x78c9, gbc.sp());
        EXPECT(0x14a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 038D
        gbc.setState(0x41d2, 0xaae6, 0x5800, 0x8254, 0xd858, 0x68e4, 0x1, 0x1);
        gbc.writeMem(0x41d2, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xaae6, gbc.sp());
        EXPECT(0x41d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 038E
        gbc.setState(0x3741, 0x928e, 0x4ae0, 0x42c3, 0xa48, 0xc151, 0x1, 0x0);
        gbc.writeMem(0x3741, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x928e, gbc.sp());
        EXPECT(0x3743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 038F
        gbc.setState(0x96ac, 0xab70, 0x49f0, 0x5daa, 0x4a95, 0xad59, 0x0, 0x1);
        gbc.writeMem(0x96ac, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xab70, gbc.sp());
        EXPECT(0x96ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ac));
        EXPECT(0x1, gbc.readMem(0x96ad));
        // CB 01 0390
        gbc.setState(0x5b47, 0xd8d4, 0xd2c0, 0xcd1c, 0x2eaf, 0x55bd, 0x1, 0x0);
        gbc.writeMem(0x5b47, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd8d4, gbc.sp());
        EXPECT(0x5b49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0391
        gbc.setState(0x93bd, 0x384c, 0xba90, 0xd72a, 0xc30c, 0xa1ff, 0x0, 0x0);
        gbc.writeMem(0x93bd, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x384c, gbc.sp());
        EXPECT(0x93bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93bd));
        EXPECT(0x1, gbc.readMem(0x93be));
        // CB 01 0392
        gbc.setState(0xda6b, 0x3dac, 0xbe70, 0x6863, 0x81a9, 0x36c8, 0x1, 0x1);
        gbc.writeMem(0xda6b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3dac, gbc.sp());
        EXPECT(0xda6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda6b));
        EXPECT(0x1, gbc.readMem(0xda6c));
        // CB 01 0393
        gbc.setState(0xb35e, 0xe6df, 0x910, 0x9a49, 0x529e, 0xee95, 0x0, 0x0);
        gbc.writeMem(0xb35e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe6df, gbc.sp());
        EXPECT(0xb360, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb35e));
        EXPECT(0x1, gbc.readMem(0xb35f));
        // CB 01 0394
        gbc.setState(0x172d, 0xb9c2, 0xd20, 0xd758, 0x438b, 0x598a, 0x1, 0x0);
        gbc.writeMem(0x172d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb9c2, gbc.sp());
        EXPECT(0x172f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0395
        gbc.setState(0x5d51, 0x66b0, 0x6c90, 0x62af, 0x91ed, 0xc5c9, 0x0, 0x0);
        gbc.writeMem(0x5d51, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x66b0, gbc.sp());
        EXPECT(0x5d53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0396
        gbc.setState(0x362, 0x58b4, 0xf8c0, 0xcffc, 0x883f, 0xd5e4, 0x1, 0x0);
        gbc.writeMem(0x362, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x58b4, gbc.sp());
        EXPECT(0x364, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 0397
        gbc.setState(0x668f, 0xc574, 0x2cb0, 0x8804, 0x6e3f, 0x8393, 0x1, 0x1);
        gbc.writeMem(0x668f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc574, gbc.sp());
        EXPECT(0x6691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0398
        gbc.setState(0x868, 0xa4b2, 0x41b0, 0x9375, 0x163f, 0x53ce, 0x0, 0x1);
        gbc.writeMem(0x868, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa4b2, gbc.sp());
        EXPECT(0x86a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 0399
        gbc.setState(0x531d, 0x5dc4, 0x10e0, 0x3d31, 0xb71c, 0xfc8e, 0x0, 0x1);
        gbc.writeMem(0x531d, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5dc4, gbc.sp());
        EXPECT(0x531f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 039A
        gbc.setState(0x5ac8, 0x539f, 0xf430, 0x7b6, 0x1d7e, 0xc8ae, 0x0, 0x0);
        gbc.writeMem(0x5ac8, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x539f, gbc.sp());
        EXPECT(0x5aca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 039B
        gbc.setState(0x281f, 0xa734, 0xa630, 0x8732, 0x60df, 0xf2d6, 0x1, 0x0);
        gbc.writeMem(0x281f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa734, gbc.sp());
        EXPECT(0x2821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 039C
        gbc.setState(0xede6, 0x8f31, 0x5470, 0xc5d9, 0xa423, 0x359c, 0x0, 0x1);
        gbc.writeMem(0xede6, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8f31, gbc.sp());
        EXPECT(0xede8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xede6));
        EXPECT(0x1, gbc.readMem(0xede7));
        // CB 01 039D
        gbc.setState(0x3e61, 0xddd5, 0xd5b0, 0xbe91, 0x618c, 0xdb3b, 0x0, 0x1);
        gbc.writeMem(0x3e61, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xddd5, gbc.sp());
        EXPECT(0x3e63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 039E
        gbc.setState(0xd158, 0x630d, 0x7770, 0x6048, 0xacc8, 0xf9ac, 0x0, 0x0);
        gbc.writeMem(0xd158, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x630d, gbc.sp());
        EXPECT(0xd15a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd158));
        EXPECT(0x1, gbc.readMem(0xd159));
        // CB 01 039F
        gbc.setState(0x4018, 0xaac2, 0xe400, 0x8d92, 0x76b9, 0xc115, 0x1, 0x1);
        gbc.writeMem(0x4018, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xaac2, gbc.sp());
        EXPECT(0x401a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 03A0
        gbc.setState(0x9c16, 0xb263, 0x9e80, 0xe0d5, 0xe9c0, 0x5138, 0x0, 0x1);
        gbc.writeMem(0x9c16, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb263, gbc.sp());
        EXPECT(0x9c18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c16));
        EXPECT(0x1, gbc.readMem(0x9c17));
        // CB 01 03A1
        gbc.setState(0x632e, 0xf32d, 0x5e90, 0xb9c2, 0xcba5, 0x5dab, 0x1, 0x1);
        gbc.writeMem(0x632e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf32d, gbc.sp());
        EXPECT(0x6330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 03A2
        gbc.setState(0x364, 0x391c, 0x2ba0, 0xe6a, 0x8c67, 0x7c60, 0x0, 0x1);
        gbc.writeMem(0x364, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x391c, gbc.sp());
        EXPECT(0x366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 03A3
        gbc.setState(0x3e4c, 0xc8d3, 0x5e10, 0x6366, 0xe38e, 0x72f5, 0x0, 0x0);
        gbc.writeMem(0x3e4c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc8d3, gbc.sp());
        EXPECT(0x3e4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 03A4
        gbc.setState(0xaaf2, 0x4aa5, 0xdba0, 0xaf6a, 0xedfa, 0xa6f3, 0x0, 0x1);
        gbc.writeMem(0xaaf2, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4aa5, gbc.sp());
        EXPECT(0xaaf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaf2));
        EXPECT(0x1, gbc.readMem(0xaaf3));
        // CB 01 03A5
        gbc.setState(0x2a2e, 0x547e, 0xc7d0, 0x50a3, 0x8031, 0xba20, 0x1, 0x1);
        gbc.writeMem(0x2a2e, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x547e, gbc.sp());
        EXPECT(0x2a30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 03A6
        gbc.setState(0xef97, 0x6d6b, 0xa7c0, 0x3981, 0x466d, 0xfe9e, 0x1, 0x1);
        gbc.writeMem(0xef97, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6d6b, gbc.sp());
        EXPECT(0xef99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef97));
        EXPECT(0x1, gbc.readMem(0xef98));
        // CB 01 03A7
        gbc.setState(0xbddf, 0xc043, 0x21b0, 0x638f, 0xf598, 0x37f6, 0x1, 0x1);
        gbc.writeMem(0xbddf, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc043, gbc.sp());
        EXPECT(0xbde1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbddf));
        EXPECT(0x1, gbc.readMem(0xbde0));
        // CB 01 03A8
        gbc.setState(0x7899, 0xac24, 0xa510, 0x6290, 0xc11d, 0xeb95, 0x1, 0x1);
        gbc.writeMem(0x7899, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xac24, gbc.sp());
        EXPECT(0x789b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 03A9
        gbc.setState(0x3241, 0xf829, 0xdb80, 0x6d99, 0x2d3e, 0xc370, 0x0, 0x0);
        gbc.writeMem(0x3241, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf829, gbc.sp());
        EXPECT(0x3243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 03AA
        gbc.setState(0x6895, 0x4f4b, 0x7c80, 0x581a, 0xc823, 0x2072, 0x0, 0x0);
        gbc.writeMem(0x6895, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4f4b, gbc.sp());
        EXPECT(0x6897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 03AB
        gbc.setState(0x1900, 0xd5eb, 0xd7f0, 0xa139, 0x7eac, 0x38b4, 0x0, 0x0);
        gbc.writeMem(0x1900, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd5eb, gbc.sp());
        EXPECT(0x1902, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 03AC
        gbc.setState(0x3a69, 0x51a2, 0xc3c0, 0xdda4, 0x1b6, 0xf36, 0x1, 0x1);
        gbc.writeMem(0x3a69, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x51a2, gbc.sp());
        EXPECT(0x3a6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 03AD
        gbc.setState(0x287c, 0xfd48, 0x2bb0, 0xf7f3, 0x93b6, 0x243f, 0x0, 0x0);
        gbc.writeMem(0x287c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xfd48, gbc.sp());
        EXPECT(0x287e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 03AE
        gbc.setState(0x5728, 0xf29, 0x5e10, 0x6371, 0xcc61, 0xa290, 0x0, 0x0);
        gbc.writeMem(0x5728, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf29, gbc.sp());
        EXPECT(0x572a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 03AF
        gbc.setState(0x8689, 0xa9d0, 0x9c10, 0xc85f, 0x6942, 0x7d09, 0x0, 0x1);
        gbc.writeMem(0x8689, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa9d0, gbc.sp());
        EXPECT(0x868b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8689));
        EXPECT(0x1, gbc.readMem(0x868a));
        // CB 01 03B0
        gbc.setState(0xcd19, 0xbce8, 0x5b50, 0xead2, 0xc39f, 0x7e37, 0x1, 0x1);
        gbc.writeMem(0xcd19, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xbce8, gbc.sp());
        EXPECT(0xcd1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd19));
        EXPECT(0x1, gbc.readMem(0xcd1a));
        // CB 01 03B1
        gbc.setState(0xdcc8, 0xf0d9, 0x1870, 0x65d, 0xf96f, 0xf25d, 0x1, 0x0);
        gbc.writeMem(0xdcc8, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf0d9, gbc.sp());
        EXPECT(0xdcca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcc8));
        EXPECT(0x1, gbc.readMem(0xdcc9));
        // CB 01 03B2
        gbc.setState(0x2eb9, 0x1b64, 0x7180, 0xce90, 0xf21, 0xbeec, 0x1, 0x0);
        gbc.writeMem(0x2eb9, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1b64, gbc.sp());
        EXPECT(0x2ebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 03B3
        gbc.setState(0xd48f, 0x1ee, 0x6890, 0xb85a, 0xa4a4, 0x5e56, 0x0, 0x1);
        gbc.writeMem(0xd48f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1ee, gbc.sp());
        EXPECT(0xd491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd48f));
        EXPECT(0x1, gbc.readMem(0xd490));
        // CB 01 03B4
        gbc.setState(0xd02a, 0x29d6, 0xf1d0, 0xf43e, 0x1514, 0xd60a, 0x0, 0x0);
        gbc.writeMem(0xd02a, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x29d6, gbc.sp());
        EXPECT(0xd02c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd02a));
        EXPECT(0x1, gbc.readMem(0xd02b));
        // CB 01 03B5
        gbc.setState(0x6399, 0x54f2, 0xd740, 0xa878, 0xd43, 0xb611, 0x1, 0x1);
        gbc.writeMem(0x6399, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x54f2, gbc.sp());
        EXPECT(0x639b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 03B6
        gbc.setState(0x551a, 0x774a, 0xe1e0, 0xe129, 0xae2b, 0xc2f, 0x0, 0x0);
        gbc.writeMem(0x551a, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x774a, gbc.sp());
        EXPECT(0x551c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 03B7
        gbc.setState(0x286c, 0x9032, 0x65c0, 0x63c9, 0x848, 0xd6cf, 0x0, 0x1);
        gbc.writeMem(0x286c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9032, gbc.sp());
        EXPECT(0x286e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 03B8
        gbc.setState(0xbfe9, 0x3cfb, 0x7410, 0x8a5d, 0x22d8, 0x934c, 0x1, 0x0);
        gbc.writeMem(0xbfe9, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3cfb, gbc.sp());
        EXPECT(0xbfeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfe9));
        EXPECT(0x1, gbc.readMem(0xbfea));
        // CB 01 03B9
        gbc.setState(0x97a2, 0xb128, 0x1b0, 0x87d8, 0x929d, 0xbda3, 0x1, 0x1);
        gbc.writeMem(0x97a2, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb128, gbc.sp());
        EXPECT(0x97a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97a2));
        EXPECT(0x1, gbc.readMem(0x97a3));
        // CB 01 03BA
        gbc.setState(0x19ee, 0x6422, 0x9db0, 0xbb9, 0x2c35, 0x8ae3, 0x1, 0x1);
        gbc.writeMem(0x19ee, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6422, gbc.sp());
        EXPECT(0x19f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 03BB
        gbc.setState(0x3668, 0x5d2a, 0xa2b0, 0xe73e, 0x19e7, 0x388b, 0x0, 0x1);
        gbc.writeMem(0x3668, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5d2a, gbc.sp());
        EXPECT(0x366a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 03BD
        gbc.setState(0xb375, 0xed69, 0xddf0, 0x96f1, 0xa38f, 0xe702, 0x1, 0x1);
        gbc.writeMem(0xb375, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xed69, gbc.sp());
        EXPECT(0xb377, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb375));
        EXPECT(0x1, gbc.readMem(0xb376));
        // CB 01 03BE
        gbc.setState(0x925f, 0x2dd2, 0x91e0, 0x4c71, 0x6e23, 0x2003, 0x1, 0x0);
        gbc.writeMem(0x925f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2dd2, gbc.sp());
        EXPECT(0x9261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x925f));
        EXPECT(0x1, gbc.readMem(0x9260));
        // CB 01 03BF
        gbc.setState(0x10cd, 0xe2a4, 0x1990, 0x89c5, 0xcf8c, 0x268d, 0x1, 0x0);
        gbc.writeMem(0x10cd, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe2a4, gbc.sp());
        EXPECT(0x10cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 03C0
        gbc.setState(0x964a, 0xa525, 0x5e70, 0xce8d, 0x1e1, 0x39, 0x1, 0x1);
        gbc.writeMem(0x964a, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa525, gbc.sp());
        EXPECT(0x964c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x964a));
        EXPECT(0x1, gbc.readMem(0x964b));
        // CB 01 03C1
        gbc.setState(0x3b78, 0x9ab3, 0x4460, 0xe860, 0x52ae, 0x612c, 0x0, 0x0);
        gbc.writeMem(0x3b78, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9ab3, gbc.sp());
        EXPECT(0x3b7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 03C2
        gbc.setState(0xbe35, 0x2b02, 0x6170, 0x4a7c, 0xf6f8, 0xb334, 0x1, 0x1);
        gbc.writeMem(0xbe35, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2b02, gbc.sp());
        EXPECT(0xbe37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe35));
        EXPECT(0x1, gbc.readMem(0xbe36));
        // CB 01 03C3
        gbc.setState(0xd320, 0xab20, 0x9c10, 0x99e5, 0x8ac, 0xc047, 0x0, 0x0);
        gbc.writeMem(0xd320, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xab20, gbc.sp());
        EXPECT(0xd322, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd320));
        EXPECT(0x1, gbc.readMem(0xd321));
        // CB 01 03C4
        gbc.setState(0xebde, 0xe516, 0x6070, 0xbac2, 0x7260, 0x8760, 0x1, 0x1);
        gbc.writeMem(0xebde, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe516, gbc.sp());
        EXPECT(0xebe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebde));
        EXPECT(0x1, gbc.readMem(0xebdf));
        // CB 01 03C5
        gbc.setState(0xca27, 0x7cf3, 0x7020, 0x921f, 0x3df5, 0x20bd, 0x1, 0x1);
        gbc.writeMem(0xca27, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7cf3, gbc.sp());
        EXPECT(0xca29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca27));
        EXPECT(0x1, gbc.readMem(0xca28));
        // CB 01 03C6
        gbc.setState(0xdd2a, 0x9b7d, 0x9a90, 0x7a28, 0x204c, 0x4838, 0x1, 0x0);
        gbc.writeMem(0xdd2a, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9b7d, gbc.sp());
        EXPECT(0xdd2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd2a));
        EXPECT(0x1, gbc.readMem(0xdd2b));
        // CB 01 03C7
        gbc.setState(0xd32f, 0xa7df, 0x8a0, 0x90c8, 0x69eb, 0x312f, 0x1, 0x1);
        gbc.writeMem(0xd32f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa7df, gbc.sp());
        EXPECT(0xd331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd32f));
        EXPECT(0x1, gbc.readMem(0xd330));
        // CB 01 03C8
        gbc.setState(0x14a9, 0x82b2, 0x93c0, 0x5514, 0x52c9, 0x16ba, 0x1, 0x0);
        gbc.writeMem(0x14a9, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x82b2, gbc.sp());
        EXPECT(0x14ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 03C9
        gbc.setState(0x58f0, 0x1e61, 0x27a0, 0xa1c, 0x2294, 0x258c, 0x1, 0x0);
        gbc.writeMem(0x58f0, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1e61, gbc.sp());
        EXPECT(0x58f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 03CA
        gbc.setState(0x787c, 0x63f, 0x7d60, 0xd720, 0x7902, 0xa635, 0x0, 0x0);
        gbc.writeMem(0x787c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x63f, gbc.sp());
        EXPECT(0x787e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 03CB
        gbc.setState(0x3362, 0xd74e, 0xd560, 0x4202, 0x6cf5, 0x88e4, 0x0, 0x1);
        gbc.writeMem(0x3362, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd74e, gbc.sp());
        EXPECT(0x3364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 03CC
        gbc.setState(0x5be6, 0xe56d, 0x3750, 0xd84b, 0x5bfc, 0x9bf4, 0x0, 0x1);
        gbc.writeMem(0x5be6, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe56d, gbc.sp());
        EXPECT(0x5be8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 03CD
        gbc.setState(0xe876, 0xcfce, 0x7fc0, 0x44e6, 0x36fa, 0xbac9, 0x0, 0x1);
        gbc.writeMem(0xe876, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xcfce, gbc.sp());
        EXPECT(0xe878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe876));
        EXPECT(0x1, gbc.readMem(0xe877));
        // CB 01 03CE
        gbc.setState(0x8781, 0x310, 0x31f0, 0x5ff8, 0xbb20, 0xdb99, 0x0, 0x1);
        gbc.writeMem(0x8781, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x310, gbc.sp());
        EXPECT(0x8783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8781));
        EXPECT(0x1, gbc.readMem(0x8782));
        // CB 01 03CF
        gbc.setState(0x1203, 0x4094, 0xa20, 0x96cd, 0x76ce, 0x6189, 0x1, 0x1);
        gbc.writeMem(0x1203, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4094, gbc.sp());
        EXPECT(0x1205, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 03D0
        gbc.setState(0xe31c, 0xb0e1, 0x5ea0, 0x6c95, 0x84d2, 0x9fdf, 0x0, 0x0);
        gbc.writeMem(0xe31c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb0e1, gbc.sp());
        EXPECT(0xe31e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe31c));
        EXPECT(0x1, gbc.readMem(0xe31d));
        // CB 01 03D1
        gbc.setState(0xb1e0, 0x81e6, 0x2870, 0x75ab, 0x6429, 0x557, 0x0, 0x0);
        gbc.writeMem(0xb1e0, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x81e6, gbc.sp());
        EXPECT(0xb1e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1e0));
        EXPECT(0x1, gbc.readMem(0xb1e1));
        // CB 01 03D2
        gbc.setState(0x8ccb, 0x760a, 0x9640, 0xb7f2, 0x937f, 0x6756, 0x0, 0x1);
        gbc.writeMem(0x8ccb, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x760a, gbc.sp());
        EXPECT(0x8ccd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ccb));
        EXPECT(0x1, gbc.readMem(0x8ccc));
        // CB 01 03D3
        gbc.setState(0xb035, 0xd506, 0xf4b0, 0xb31e, 0xd1a9, 0x7798, 0x1, 0x1);
        gbc.writeMem(0xb035, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd506, gbc.sp());
        EXPECT(0xb037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb035));
        EXPECT(0x1, gbc.readMem(0xb036));
        // CB 01 03D4
        gbc.setState(0x93e0, 0x8939, 0x7dd0, 0xb327, 0x397e, 0x21d, 0x0, 0x0);
        gbc.writeMem(0x93e0, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8939, gbc.sp());
        EXPECT(0x93e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93e0));
        EXPECT(0x1, gbc.readMem(0x93e1));
        // CB 01 03D5
        gbc.setState(0x2563, 0x260, 0x5540, 0x7018, 0x3e6a, 0x89cb, 0x1, 0x1);
        gbc.writeMem(0x2563, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x260, gbc.sp());
        EXPECT(0x2565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 03D6
        gbc.setState(0x6f8c, 0xc513, 0x7060, 0xb0db, 0x9c22, 0x5a7e, 0x1, 0x1);
        gbc.writeMem(0x6f8c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc513, gbc.sp());
        EXPECT(0x6f8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 03D7
        gbc.setState(0x93a1, 0x3db1, 0x3070, 0xe983, 0x338f, 0x4b06, 0x0, 0x0);
        gbc.writeMem(0x93a1, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3db1, gbc.sp());
        EXPECT(0x93a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93a1));
        EXPECT(0x1, gbc.readMem(0x93a2));
        // CB 01 03D8
        gbc.setState(0x93ac, 0x6ab4, 0x8320, 0xeb3d, 0x7a8e, 0xa06a, 0x1, 0x1);
        gbc.writeMem(0x93ac, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6ab4, gbc.sp());
        EXPECT(0x93ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93ac));
        EXPECT(0x1, gbc.readMem(0x93ad));
        // CB 01 03DA
        gbc.setState(0x707f, 0xebd, 0x1890, 0x903c, 0xc860, 0x7067, 0x0, 0x1);
        gbc.writeMem(0x707f, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xebd, gbc.sp());
        EXPECT(0x7081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 03DB
        gbc.setState(0xe013, 0xc77, 0xd60, 0x3bc0, 0xc6bd, 0x3290, 0x0, 0x0);
        gbc.writeMem(0xe013, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc77, gbc.sp());
        EXPECT(0xe015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe013));
        EXPECT(0x1, gbc.readMem(0xe014));
        // CB 01 03DC
        gbc.setState(0x8368, 0xb189, 0xf7f0, 0x850f, 0xd46c, 0xc73d, 0x0, 0x1);
        gbc.writeMem(0x8368, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb189, gbc.sp());
        EXPECT(0x836a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8368));
        EXPECT(0x1, gbc.readMem(0x8369));
        // CB 01 03DE
        gbc.setState(0x86c3, 0x1ae8, 0xbb60, 0x1ce2, 0x97b4, 0xf057, 0x1, 0x1);
        gbc.writeMem(0x86c3, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1ae8, gbc.sp());
        EXPECT(0x86c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86c3));
        EXPECT(0x1, gbc.readMem(0x86c4));
        // CB 01 03DF
        gbc.setState(0x382c, 0xfb11, 0x170, 0x7431, 0xf75f, 0xb590, 0x0, 0x0);
        gbc.writeMem(0x382c, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xfb11, gbc.sp());
        EXPECT(0x382e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 03E0
        gbc.setState(0x2e4b, 0x7aef, 0x4110, 0x597d, 0xf989, 0x7f35, 0x0, 0x1);
        gbc.writeMem(0x2e4b, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7aef, gbc.sp());
        EXPECT(0x2e4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 03E1
        gbc.setState(0xb982, 0xb5a, 0x3e20, 0xb1b, 0xd9a1, 0x1490, 0x1, 0x0);
        gbc.writeMem(0xb982, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb5a, gbc.sp());
        EXPECT(0xb984, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb982));
        EXPECT(0x1, gbc.readMem(0xb983));
        // CB 01 03E2
        gbc.setState(0x2f54, 0x2694, 0x33e0, 0x5314, 0xb7c2, 0xc599, 0x0, 0x1);
        gbc.writeMem(0x2f54, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2694, gbc.sp());
        EXPECT(0x2f56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 01 03E3
        gbc.setState(0xcd69, 0xe997, 0x9a00, 0xc37f, 0xd3c4, 0x362a, 0x0, 0x0);
        gbc.writeMem(0xcd69, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe997, gbc.sp());
        EXPECT(0xcd6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd69));
        EXPECT(0x1, gbc.readMem(0xcd6a));
        // CB 01 03E4
        gbc.setState(0x7a32, 0xe720, 0x78a0, 0x98f0, 0x1b3d, 0x6786, 0x0, 0x0);
        gbc.writeMem(0x7a32, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe720, gbc.sp());
        EXPECT(0x7a34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 03E5
        gbc.setState(0xd2e6, 0xb833, 0xfad0, 0xc238, 0xbfaf, 0xb4c9, 0x0, 0x1);
        gbc.writeMem(0xd2e6, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb833, gbc.sp());
        EXPECT(0xd2e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2e6));
        EXPECT(0x1, gbc.readMem(0xd2e7));
        // CB 01 03E6
        gbc.setState(0x2528, 0x9e58, 0x35a0, 0x56a6, 0xd485, 0x3766, 0x0, 0x0);
        gbc.writeMem(0x2528, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9e58, gbc.sp());
        EXPECT(0x252a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 01 03E7
        gbc.setState(0xd3f1, 0x3049, 0xbb40, 0x5f36, 0x810c, 0xe54a, 0x1, 0x0);
        gbc.writeMem(0xd3f1, { 0xcb, 0x1 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3049, gbc.sp());
        EXPECT(0xd3f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3f1));
        EXPECT(0x1, gbc.readMem(0xd3f2));
    }
