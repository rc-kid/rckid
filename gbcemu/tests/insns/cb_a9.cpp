#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_a9)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_a9) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB A9 0000
        gbc.setState(0xe7f2, 0xd320, 0x19b0, 0xb7ad, 0x9085, 0xf83, 0x0, 0x0);
        gbc.writeMem(0xe7f2, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd320);
        EXPECT(gbc.pc(), 0xe7f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7f2), 0xcb);
        EXPECT(gbc.readMem(0xe7f3), 0xa9);
        // CB A9 0001
        gbc.setState(0x2fad, 0x3341, 0xc90, 0x90e5, 0x55f4, 0x9f4c, 0x1, 0x1);
        gbc.writeMem(0x2fad, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x3341);
        EXPECT(gbc.pc(), 0x2faf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0002
        gbc.setState(0x90d6, 0x3128, 0x1450, 0x7109, 0x30d7, 0x7d64, 0x1, 0x1);
        gbc.writeMem(0x90d6, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x3128);
        EXPECT(gbc.pc(), 0x90d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90d6), 0xcb);
        EXPECT(gbc.readMem(0x90d7), 0xa9);
        // CB A9 0003
        gbc.setState(0xc5f7, 0x7c6d, 0x9cc0, 0x6fa9, 0xbec1, 0xb0b6, 0x1, 0x1);
        gbc.writeMem(0xc5f7, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7c6d);
        EXPECT(gbc.pc(), 0xc5f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5f7), 0xcb);
        EXPECT(gbc.readMem(0xc5f8), 0xa9);
        // CB A9 0004
        gbc.setState(0xce9, 0x5719, 0x7610, 0xe39a, 0x8018, 0x8753, 0x0, 0x1);
        gbc.writeMem(0xce9, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5719);
        EXPECT(gbc.pc(), 0xceb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0005
        gbc.setState(0x7ec3, 0x8698, 0x3890, 0xd773, 0xc6dd, 0x3130, 0x1, 0x0);
        gbc.writeMem(0x7ec3, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x8698);
        EXPECT(gbc.pc(), 0x7ec5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0006
        gbc.setState(0x8ffb, 0xed19, 0x6190, 0xdc4b, 0x32c2, 0xf36, 0x0, 0x0);
        gbc.writeMem(0x8ffb, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xed19);
        EXPECT(gbc.pc(), 0x8ffd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ffb), 0xcb);
        EXPECT(gbc.readMem(0x8ffc), 0xa9);
        // CB A9 0007
        gbc.setState(0x1214, 0x35f1, 0x9220, 0x6b3a, 0xe088, 0x9393, 0x0, 0x1);
        gbc.writeMem(0x1214, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x35f1);
        EXPECT(gbc.pc(), 0x1216);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0008
        gbc.setState(0x4c61, 0xf9fc, 0xe9b0, 0xf178, 0x4545, 0x953e, 0x0, 0x1);
        gbc.writeMem(0x4c61, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xf9fc);
        EXPECT(gbc.pc(), 0x4c63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0009
        gbc.setState(0x80d2, 0x9654, 0x11b0, 0x2a8f, 0xaf2a, 0x5823, 0x0, 0x1);
        gbc.writeMem(0x80d2, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x9654);
        EXPECT(gbc.pc(), 0x80d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80d2), 0xcb);
        EXPECT(gbc.readMem(0x80d3), 0xa9);
        // CB A9 000A
        gbc.setState(0xe68e, 0xd1b8, 0x5fb0, 0x1c74, 0xf3f7, 0x312b, 0x0, 0x0);
        gbc.writeMem(0xe68e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xd1b8);
        EXPECT(gbc.pc(), 0xe690);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe68e), 0xcb);
        EXPECT(gbc.readMem(0xe68f), 0xa9);
        // CB A9 000B
        gbc.setState(0x8c2e, 0x3a52, 0x14c0, 0xce19, 0xed3b, 0x8632, 0x1, 0x1);
        gbc.writeMem(0x8c2e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x3a52);
        EXPECT(gbc.pc(), 0x8c30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c2e), 0xcb);
        EXPECT(gbc.readMem(0x8c2f), 0xa9);
        // CB A9 000C
        gbc.setState(0x18a6, 0xdcd2, 0x9370, 0x5701, 0x489, 0x9293, 0x1, 0x0);
        gbc.writeMem(0x18a6, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xdcd2);
        EXPECT(gbc.pc(), 0x18a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 000D
        gbc.setState(0x74, 0x568a, 0x31b0, 0xd9d5, 0x514e, 0x975e, 0x0, 0x1);
        gbc.writeMem(0x74, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x568a);
        EXPECT(gbc.pc(), 0x76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 000E
        gbc.setState(0xddd2, 0x8465, 0x9510, 0xc033, 0x1e4c, 0xfae8, 0x0, 0x1);
        gbc.writeMem(0xddd2, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x8465);
        EXPECT(gbc.pc(), 0xddd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddd2), 0xcb);
        EXPECT(gbc.readMem(0xddd3), 0xa9);
        // CB A9 000F
        gbc.setState(0x203a, 0xa922, 0x240, 0x1fb2, 0x7a9e, 0xe3ce, 0x0, 0x0);
        gbc.writeMem(0x203a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xa922);
        EXPECT(gbc.pc(), 0x203c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0010
        gbc.setState(0x50bb, 0xf7a, 0x110, 0xf84b, 0x3de0, 0xf6fd, 0x0, 0x1);
        gbc.writeMem(0x50bb, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xf7a);
        EXPECT(gbc.pc(), 0x50bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0011
        gbc.setState(0xb1a1, 0x6c42, 0x6820, 0xf29d, 0x8c7c, 0xf04d, 0x1, 0x1);
        gbc.writeMem(0xb1a1, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x6c42);
        EXPECT(gbc.pc(), 0xb1a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1a1), 0xcb);
        EXPECT(gbc.readMem(0xb1a2), 0xa9);
        // CB A9 0012
        gbc.setState(0x162f, 0x5536, 0xc910, 0xed7a, 0x936b, 0x36c5, 0x0, 0x0);
        gbc.writeMem(0x162f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x5536);
        EXPECT(gbc.pc(), 0x1631);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0013
        gbc.setState(0x37c0, 0x7bb7, 0xbd40, 0xf3a8, 0x1660, 0x408f, 0x1, 0x0);
        gbc.writeMem(0x37c0, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x7bb7);
        EXPECT(gbc.pc(), 0x37c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0014
        gbc.setState(0x148e, 0x16de, 0x5b60, 0xfc62, 0x24c2, 0xdf9, 0x0, 0x1);
        gbc.writeMem(0x148e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x16de);
        EXPECT(gbc.pc(), 0x1490);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0015
        gbc.setState(0xbf85, 0x53a3, 0x31f0, 0x43bf, 0xa371, 0x135f, 0x0, 0x0);
        gbc.writeMem(0xbf85, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x53a3);
        EXPECT(gbc.pc(), 0xbf87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf85), 0xcb);
        EXPECT(gbc.readMem(0xbf86), 0xa9);
        // CB A9 0016
        gbc.setState(0x2744, 0x16ec, 0x8020, 0x88ee, 0x6052, 0xd388, 0x0, 0x1);
        gbc.writeMem(0x2744, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x16ec);
        EXPECT(gbc.pc(), 0x2746);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0017
        gbc.setState(0x1bae, 0x5005, 0x2580, 0xb96a, 0x4ec5, 0xd1e5, 0x1, 0x0);
        gbc.writeMem(0x1bae, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x5005);
        EXPECT(gbc.pc(), 0x1bb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0018
        gbc.setState(0x8acf, 0x9e6f, 0x5260, 0x7a0b, 0x6014, 0xa82d, 0x1, 0x1);
        gbc.writeMem(0x8acf, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x9e6f);
        EXPECT(gbc.pc(), 0x8ad1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8acf), 0xcb);
        EXPECT(gbc.readMem(0x8ad0), 0xa9);
        // CB A9 0019
        gbc.setState(0x2599, 0x7484, 0xd50, 0x986e, 0xad09, 0x12f5, 0x0, 0x0);
        gbc.writeMem(0x2599, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x7484);
        EXPECT(gbc.pc(), 0x259b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 001A
        gbc.setState(0xc6e6, 0x1bac, 0x3b00, 0xa9e0, 0xf117, 0xf9e9, 0x1, 0x0);
        gbc.writeMem(0xc6e6, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x1bac);
        EXPECT(gbc.pc(), 0xc6e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6e6), 0xcb);
        EXPECT(gbc.readMem(0xc6e7), 0xa9);
        // CB A9 001B
        gbc.setState(0x1f66, 0x965, 0x5b20, 0x5fd2, 0x6c30, 0x42df, 0x1, 0x0);
        gbc.writeMem(0x1f66, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x965);
        EXPECT(gbc.pc(), 0x1f68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 001C
        gbc.setState(0xb1aa, 0xccd6, 0x1b20, 0x7ec4, 0x570a, 0x3f4d, 0x1, 0x0);
        gbc.writeMem(0xb1aa, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xccd6);
        EXPECT(gbc.pc(), 0xb1ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1aa), 0xcb);
        EXPECT(gbc.readMem(0xb1ab), 0xa9);
        // CB A9 001D
        gbc.setState(0x7c22, 0x8b02, 0xe650, 0xfa4d, 0x9e08, 0xa120, 0x1, 0x0);
        gbc.writeMem(0x7c22, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x8b02);
        EXPECT(gbc.pc(), 0x7c24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 001E
        gbc.setState(0x2d50, 0x6f3f, 0xac40, 0x5072, 0xc6ee, 0xd1a4, 0x1, 0x1);
        gbc.writeMem(0x2d50, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x6f3f);
        EXPECT(gbc.pc(), 0x2d52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 001F
        gbc.setState(0x95e1, 0x1a9c, 0x2020, 0x534f, 0x4266, 0xcb85, 0x1, 0x0);
        gbc.writeMem(0x95e1, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x1a9c);
        EXPECT(gbc.pc(), 0x95e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95e1), 0xcb);
        EXPECT(gbc.readMem(0x95e2), 0xa9);
        // CB A9 0020
        gbc.setState(0xc8ec, 0xf70d, 0x3d20, 0xce57, 0x74d4, 0x7873, 0x1, 0x1);
        gbc.writeMem(0xc8ec, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xf70d);
        EXPECT(gbc.pc(), 0xc8ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8ec), 0xcb);
        EXPECT(gbc.readMem(0xc8ed), 0xa9);
        // CB A9 0021
        gbc.setState(0x92e5, 0xc354, 0x1d50, 0x9e38, 0x6475, 0xae85, 0x0, 0x1);
        gbc.writeMem(0x92e5, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xc354);
        EXPECT(gbc.pc(), 0x92e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92e5), 0xcb);
        EXPECT(gbc.readMem(0x92e6), 0xa9);
        // CB A9 0022
        gbc.setState(0x4460, 0x4dd5, 0x1080, 0xc4ec, 0xc316, 0xdbbc, 0x0, 0x1);
        gbc.writeMem(0x4460, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x4dd5);
        EXPECT(gbc.pc(), 0x4462);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0023
        gbc.setState(0x3e5, 0xc09d, 0x7a40, 0xa241, 0x5c92, 0x3587, 0x0, 0x0);
        gbc.writeMem(0x3e5, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xc09d);
        EXPECT(gbc.pc(), 0x3e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0024
        gbc.setState(0x5ad5, 0xee81, 0xb840, 0xab0d, 0x715b, 0x8857, 0x1, 0x0);
        gbc.writeMem(0x5ad5, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xee81);
        EXPECT(gbc.pc(), 0x5ad7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0025
        gbc.setState(0xb163, 0x5254, 0x9e80, 0x4dbd, 0x4f82, 0xddd9, 0x1, 0x1);
        gbc.writeMem(0xb163, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x5254);
        EXPECT(gbc.pc(), 0xb165);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb163), 0xcb);
        EXPECT(gbc.readMem(0xb164), 0xa9);
        // CB A9 0026
        gbc.setState(0x33ad, 0x2fb3, 0x1d60, 0x5466, 0x625b, 0xd714, 0x0, 0x1);
        gbc.writeMem(0x33ad, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x2fb3);
        EXPECT(gbc.pc(), 0x33af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0027
        gbc.setState(0xe42f, 0xdc37, 0x6330, 0xde82, 0xfdf4, 0xd26a, 0x0, 0x1);
        gbc.writeMem(0xe42f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xdc37);
        EXPECT(gbc.pc(), 0xe431);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe42f), 0xcb);
        EXPECT(gbc.readMem(0xe430), 0xa9);
        // CB A9 0028
        gbc.setState(0x1e06, 0xfe3e, 0x7980, 0xf115, 0x5d91, 0xb59d, 0x0, 0x0);
        gbc.writeMem(0x1e06, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xfe3e);
        EXPECT(gbc.pc(), 0x1e08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0029
        gbc.setState(0x8df9, 0x872e, 0xa380, 0xbc63, 0x6360, 0xf25e, 0x1, 0x1);
        gbc.writeMem(0x8df9, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x872e);
        EXPECT(gbc.pc(), 0x8dfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8df9), 0xcb);
        EXPECT(gbc.readMem(0x8dfa), 0xa9);
        // CB A9 002A
        gbc.setState(0x2fd, 0x4a01, 0xab90, 0x2d41, 0x44e8, 0x24c8, 0x1, 0x1);
        gbc.writeMem(0x2fd, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x4a01);
        EXPECT(gbc.pc(), 0x2ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 002B
        gbc.setState(0xd32c, 0x385a, 0xe9f0, 0x9c83, 0x70cd, 0x2080, 0x1, 0x0);
        gbc.writeMem(0xd32c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x385a);
        EXPECT(gbc.pc(), 0xd32e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd32c), 0xcb);
        EXPECT(gbc.readMem(0xd32d), 0xa9);
        // CB A9 002C
        gbc.setState(0x5aee, 0x35fd, 0xf5e0, 0xb624, 0x8b3d, 0xad09, 0x0, 0x0);
        gbc.writeMem(0x5aee, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x35fd);
        EXPECT(gbc.pc(), 0x5af0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 002D
        gbc.setState(0xef21, 0x42cd, 0x5560, 0x573a, 0x5ef0, 0x6134, 0x0, 0x1);
        gbc.writeMem(0xef21, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x42cd);
        EXPECT(gbc.pc(), 0xef23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef21), 0xcb);
        EXPECT(gbc.readMem(0xef22), 0xa9);
        // CB A9 002E
        gbc.setState(0xbd41, 0x6d61, 0x1b00, 0xe4df, 0xdd7d, 0x1e28, 0x0, 0x1);
        gbc.writeMem(0xbd41, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x6d61);
        EXPECT(gbc.pc(), 0xbd43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd41), 0xcb);
        EXPECT(gbc.readMem(0xbd42), 0xa9);
        // CB A9 002F
        gbc.setState(0x3d85, 0x3f37, 0x1d60, 0xdaa4, 0xc0c0, 0xc4ec, 0x0, 0x0);
        gbc.writeMem(0x3d85, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x3f37);
        EXPECT(gbc.pc(), 0x3d87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0030
        gbc.setState(0xd888, 0xd77c, 0x1470, 0x73d4, 0x4d5a, 0x17de, 0x0, 0x1);
        gbc.writeMem(0xd888, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xd77c);
        EXPECT(gbc.pc(), 0xd88a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd888), 0xcb);
        EXPECT(gbc.readMem(0xd889), 0xa9);
        // CB A9 0031
        gbc.setState(0xb1f6, 0xcca4, 0x2890, 0x54e4, 0x329b, 0x7b04, 0x1, 0x0);
        gbc.writeMem(0xb1f6, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xcca4);
        EXPECT(gbc.pc(), 0xb1f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1f6), 0xcb);
        EXPECT(gbc.readMem(0xb1f7), 0xa9);
        // CB A9 0032
        gbc.setState(0x223e, 0x625a, 0x3210, 0x4fc5, 0x263b, 0xf112, 0x0, 0x1);
        gbc.writeMem(0x223e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x625a);
        EXPECT(gbc.pc(), 0x2240);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0033
        gbc.setState(0x6b55, 0x1d5c, 0x6740, 0x4cc1, 0xdec4, 0xffb7, 0x0, 0x0);
        gbc.writeMem(0x6b55, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x1d5c);
        EXPECT(gbc.pc(), 0x6b57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0034
        gbc.setState(0xc4f7, 0x63b4, 0xb520, 0xdaad, 0x1fd0, 0xd2e5, 0x0, 0x1);
        gbc.writeMem(0xc4f7, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x63b4);
        EXPECT(gbc.pc(), 0xc4f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4f7), 0xcb);
        EXPECT(gbc.readMem(0xc4f8), 0xa9);
        // CB A9 0035
        gbc.setState(0x2e15, 0x30e4, 0x7fa0, 0xbe7b, 0xc507, 0x22ce, 0x1, 0x0);
        gbc.writeMem(0x2e15, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x30e4);
        EXPECT(gbc.pc(), 0x2e17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0036
        gbc.setState(0x2ea3, 0x8c28, 0x23f0, 0xf30a, 0x7144, 0xe90c, 0x1, 0x0);
        gbc.writeMem(0x2ea3, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x8c28);
        EXPECT(gbc.pc(), 0x2ea5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0038
        gbc.setState(0x74a6, 0xff91, 0x2230, 0x5a65, 0xf6f6, 0x4621, 0x0, 0x0);
        gbc.writeMem(0x74a6, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xff91);
        EXPECT(gbc.pc(), 0x74a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0039
        gbc.setState(0xd269, 0xc673, 0xe170, 0x6168, 0x3ebd, 0xa38, 0x1, 0x1);
        gbc.writeMem(0xd269, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xc673);
        EXPECT(gbc.pc(), 0xd26b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd269), 0xcb);
        EXPECT(gbc.readMem(0xd26a), 0xa9);
        // CB A9 003A
        gbc.setState(0x8882, 0x1b7f, 0x5360, 0x7817, 0x451d, 0x2430, 0x0, 0x1);
        gbc.writeMem(0x8882, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x1b7f);
        EXPECT(gbc.pc(), 0x8884);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8882), 0xcb);
        EXPECT(gbc.readMem(0x8883), 0xa9);
        // CB A9 003B
        gbc.setState(0x7d6f, 0x463a, 0x6080, 0x3131, 0x806, 0xdd04, 0x1, 0x0);
        gbc.writeMem(0x7d6f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x463a);
        EXPECT(gbc.pc(), 0x7d71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 003C
        gbc.setState(0xc54, 0xafc4, 0x7b10, 0x43aa, 0x8786, 0x7e7, 0x1, 0x0);
        gbc.writeMem(0xc54, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xafc4);
        EXPECT(gbc.pc(), 0xc56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 003D
        gbc.setState(0x2e1e, 0x6b0f, 0xdf80, 0x2fa2, 0xe273, 0x3c63, 0x0, 0x0);
        gbc.writeMem(0x2e1e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x6b0f);
        EXPECT(gbc.pc(), 0x2e20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 003E
        gbc.setState(0xc64d, 0xf620, 0x1bd0, 0x245d, 0x6060, 0xbb6b, 0x1, 0x0);
        gbc.writeMem(0xc64d, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xf620);
        EXPECT(gbc.pc(), 0xc64f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc64d), 0xcb);
        EXPECT(gbc.readMem(0xc64e), 0xa9);
        // CB A9 003F
        gbc.setState(0xccd9, 0x2c1c, 0xc80, 0xfc6a, 0xe2b6, 0x2dd, 0x0, 0x0);
        gbc.writeMem(0xccd9, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x2c1c);
        EXPECT(gbc.pc(), 0xccdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccd9), 0xcb);
        EXPECT(gbc.readMem(0xccda), 0xa9);
        // CB A9 0040
        gbc.setState(0xdd70, 0x3ca6, 0xd320, 0x8138, 0xe889, 0xa30, 0x0, 0x0);
        gbc.writeMem(0xdd70, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x3ca6);
        EXPECT(gbc.pc(), 0xdd72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd70), 0xcb);
        EXPECT(gbc.readMem(0xdd71), 0xa9);
        // CB A9 0041
        gbc.setState(0xad6f, 0x92ef, 0xd650, 0xf6d7, 0x413d, 0x8f02, 0x0, 0x0);
        gbc.writeMem(0xad6f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x92ef);
        EXPECT(gbc.pc(), 0xad71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad6f), 0xcb);
        EXPECT(gbc.readMem(0xad70), 0xa9);
        // CB A9 0042
        gbc.setState(0x7caf, 0xc01b, 0xea70, 0x5b27, 0x9868, 0xddfe, 0x0, 0x1);
        gbc.writeMem(0x7caf, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc01b);
        EXPECT(gbc.pc(), 0x7cb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0043
        gbc.setState(0x84da, 0x1d5a, 0xc280, 0xedb1, 0x753f, 0x343a, 0x0, 0x0);
        gbc.writeMem(0x84da, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x1d5a);
        EXPECT(gbc.pc(), 0x84dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84da), 0xcb);
        EXPECT(gbc.readMem(0x84db), 0xa9);
        // CB A9 0044
        gbc.setState(0x9d0a, 0x2fc0, 0x9a30, 0x93a5, 0x973f, 0x35e8, 0x0, 0x0);
        gbc.writeMem(0x9d0a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x2fc0);
        EXPECT(gbc.pc(), 0x9d0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d0a), 0xcb);
        EXPECT(gbc.readMem(0x9d0b), 0xa9);
        // CB A9 0045
        gbc.setState(0x9f65, 0x8f73, 0x29f0, 0xa04a, 0x39df, 0xd67e, 0x0, 0x1);
        gbc.writeMem(0x9f65, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x8f73);
        EXPECT(gbc.pc(), 0x9f67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f65), 0xcb);
        EXPECT(gbc.readMem(0x9f66), 0xa9);
        // CB A9 0046
        gbc.setState(0x1b6d, 0x1241, 0x3270, 0xfa87, 0xff1f, 0xf281, 0x1, 0x0);
        gbc.writeMem(0x1b6d, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x1241);
        EXPECT(gbc.pc(), 0x1b6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0047
        gbc.setState(0x2517, 0x2ff9, 0x9620, 0x8a0a, 0x2906, 0xba00, 0x1, 0x0);
        gbc.writeMem(0x2517, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x2ff9);
        EXPECT(gbc.pc(), 0x2519);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0048
        gbc.setState(0x3a19, 0xa225, 0x1470, 0x21cc, 0xf0a2, 0x4b9, 0x0, 0x1);
        gbc.writeMem(0x3a19, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xa225);
        EXPECT(gbc.pc(), 0x3a1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0049
        gbc.setState(0x2335, 0xb06f, 0xc5d0, 0xc1e1, 0xe21d, 0x45e5, 0x1, 0x1);
        gbc.writeMem(0x2335, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xb06f);
        EXPECT(gbc.pc(), 0x2337);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 004A
        gbc.setState(0x3205, 0x3bcd, 0x82d0, 0x31b4, 0x64c1, 0x1f57, 0x0, 0x0);
        gbc.writeMem(0x3205, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x3bcd);
        EXPECT(gbc.pc(), 0x3207);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 004B
        gbc.setState(0xaeb9, 0xf891, 0x8320, 0x2432, 0x49ab, 0xccf7, 0x1, 0x0);
        gbc.writeMem(0xaeb9, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xf891);
        EXPECT(gbc.pc(), 0xaebb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeb9), 0xcb);
        EXPECT(gbc.readMem(0xaeba), 0xa9);
        // CB A9 004C
        gbc.setState(0x546e, 0x75a3, 0x1040, 0xc456, 0x63bd, 0x3843, 0x1, 0x1);
        gbc.writeMem(0x546e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x75a3);
        EXPECT(gbc.pc(), 0x5470);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 004E
        gbc.setState(0x7b87, 0xbd8f, 0xb3a0, 0x23d8, 0xeac0, 0xe074, 0x0, 0x0);
        gbc.writeMem(0x7b87, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xbd8f);
        EXPECT(gbc.pc(), 0x7b89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 004F
        gbc.setState(0xb7fe, 0x2154, 0x5b10, 0x1a38, 0xed08, 0xd192, 0x0, 0x1);
        gbc.writeMem(0xb7fe, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2154);
        EXPECT(gbc.pc(), 0xb800);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7fe), 0xcb);
        EXPECT(gbc.readMem(0xb7ff), 0xa9);
        // CB A9 0050
        gbc.setState(0x9579, 0xeec6, 0xaf40, 0xdceb, 0xf7a9, 0xec20, 0x0, 0x0);
        gbc.writeMem(0x9579, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xeec6);
        EXPECT(gbc.pc(), 0x957b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9579), 0xcb);
        EXPECT(gbc.readMem(0x957a), 0xa9);
        // CB A9 0051
        gbc.setState(0x3711, 0xb6b2, 0x9430, 0x2473, 0x1077, 0x428f, 0x1, 0x1);
        gbc.writeMem(0x3711, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xb6b2);
        EXPECT(gbc.pc(), 0x3713);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0052
        gbc.setState(0x8a4d, 0x811c, 0xcaa0, 0x58eb, 0xc87e, 0xbb4c, 0x0, 0x1);
        gbc.writeMem(0x8a4d, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x811c);
        EXPECT(gbc.pc(), 0x8a4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a4d), 0xcb);
        EXPECT(gbc.readMem(0x8a4e), 0xa9);
        // CB A9 0053
        gbc.setState(0x74fa, 0x7bff, 0x9740, 0x144a, 0xae96, 0x808a, 0x1, 0x1);
        gbc.writeMem(0x74fa, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7bff);
        EXPECT(gbc.pc(), 0x74fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0054
        gbc.setState(0x3b0a, 0x1937, 0x4380, 0xa3bf, 0xa35c, 0x4f61, 0x1, 0x0);
        gbc.writeMem(0x3b0a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x1937);
        EXPECT(gbc.pc(), 0x3b0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0055
        gbc.setState(0x6fed, 0x9853, 0xb370, 0xebe5, 0x3b7c, 0x4ced, 0x1, 0x1);
        gbc.writeMem(0x6fed, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9853);
        EXPECT(gbc.pc(), 0x6fef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0056
        gbc.setState(0x7e65, 0xbaf9, 0x70d0, 0x5d17, 0x5dd0, 0xc5db, 0x0, 0x1);
        gbc.writeMem(0x7e65, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xbaf9);
        EXPECT(gbc.pc(), 0x7e67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0057
        gbc.setState(0x7b59, 0x1d98, 0xd630, 0x55cf, 0x298d, 0x2d40, 0x1, 0x0);
        gbc.writeMem(0x7b59, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1d98);
        EXPECT(gbc.pc(), 0x7b5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0058
        gbc.setState(0x7dd, 0x6a9a, 0x5ed0, 0xbde5, 0x452c, 0xe291, 0x0, 0x0);
        gbc.writeMem(0x7dd, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x6a9a);
        EXPECT(gbc.pc(), 0x7df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0059
        gbc.setState(0x6f9c, 0x1a8c, 0xa1f0, 0xa422, 0xcbf6, 0x2981, 0x1, 0x0);
        gbc.writeMem(0x6f9c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x1a8c);
        EXPECT(gbc.pc(), 0x6f9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 005A
        gbc.setState(0xc323, 0x451e, 0xccb0, 0xd095, 0x1adb, 0x7181, 0x1, 0x1);
        gbc.writeMem(0xc323, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x451e);
        EXPECT(gbc.pc(), 0xc325);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc323), 0xcb);
        EXPECT(gbc.readMem(0xc324), 0xa9);
        // CB A9 005B
        gbc.setState(0xdf27, 0x5779, 0xf5f0, 0xebf0, 0x6461, 0xb5c3, 0x1, 0x1);
        gbc.writeMem(0xdf27, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x5779);
        EXPECT(gbc.pc(), 0xdf29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf27), 0xcb);
        EXPECT(gbc.readMem(0xdf28), 0xa9);
        // CB A9 005C
        gbc.setState(0x10a5, 0x94d5, 0xfd40, 0x78cd, 0xe1f4, 0xac69, 0x0, 0x0);
        gbc.writeMem(0x10a5, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x94d5);
        EXPECT(gbc.pc(), 0x10a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 005D
        gbc.setState(0x4f7e, 0x3bc1, 0x73c0, 0x900c, 0x761f, 0x90d6, 0x0, 0x0);
        gbc.writeMem(0x4f7e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x3bc1);
        EXPECT(gbc.pc(), 0x4f80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 005F
        gbc.setState(0x6ef2, 0x7094, 0xc8b0, 0x53d6, 0xc556, 0x7a3b, 0x0, 0x0);
        gbc.writeMem(0x6ef2, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x7094);
        EXPECT(gbc.pc(), 0x6ef4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0060
        gbc.setState(0xb6f3, 0x86eb, 0x100, 0xc239, 0x5963, 0xc925, 0x0, 0x1);
        gbc.writeMem(0xb6f3, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x86eb);
        EXPECT(gbc.pc(), 0xb6f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6f3), 0xcb);
        EXPECT(gbc.readMem(0xb6f4), 0xa9);
        // CB A9 0061
        gbc.setState(0xa3e6, 0x5b4a, 0x8b80, 0x601f, 0x6922, 0x588e, 0x0, 0x0);
        gbc.writeMem(0xa3e6, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x5b4a);
        EXPECT(gbc.pc(), 0xa3e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3e6), 0xcb);
        EXPECT(gbc.readMem(0xa3e7), 0xa9);
        // CB A9 0062
        gbc.setState(0x95ed, 0x7591, 0xa090, 0x558c, 0x7ef3, 0x2a7e, 0x1, 0x0);
        gbc.writeMem(0x95ed, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x7591);
        EXPECT(gbc.pc(), 0x95ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95ed), 0xcb);
        EXPECT(gbc.readMem(0x95ee), 0xa9);
        // CB A9 0063
        gbc.setState(0x8e82, 0x1392, 0xbe20, 0xf442, 0xad91, 0x9276, 0x1, 0x0);
        gbc.writeMem(0x8e82, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x1392);
        EXPECT(gbc.pc(), 0x8e84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e82), 0xcb);
        EXPECT(gbc.readMem(0x8e83), 0xa9);
        // CB A9 0064
        gbc.setState(0xb4e8, 0xbc89, 0xac50, 0x7334, 0xaed8, 0xc17c, 0x0, 0x0);
        gbc.writeMem(0xb4e8, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xbc89);
        EXPECT(gbc.pc(), 0xb4ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4e8), 0xcb);
        EXPECT(gbc.readMem(0xb4e9), 0xa9);
        // CB A9 0065
        gbc.setState(0xca4, 0xedb5, 0xca60, 0xb102, 0x40bc, 0x8a10, 0x0, 0x0);
        gbc.writeMem(0xca4, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xedb5);
        EXPECT(gbc.pc(), 0xca6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0066
        gbc.setState(0x9ba2, 0xfe78, 0x74b0, 0x6e72, 0x74bd, 0x56b, 0x1, 0x0);
        gbc.writeMem(0x9ba2, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xfe78);
        EXPECT(gbc.pc(), 0x9ba4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ba2), 0xcb);
        EXPECT(gbc.readMem(0x9ba3), 0xa9);
        // CB A9 0067
        gbc.setState(0x534, 0xb21a, 0x2100, 0xfb46, 0xa2ea, 0x5980, 0x1, 0x1);
        gbc.writeMem(0x534, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xb21a);
        EXPECT(gbc.pc(), 0x536);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0068
        gbc.setState(0xc494, 0x1044, 0x2a10, 0xcd6, 0x6c59, 0x8b08, 0x1, 0x0);
        gbc.writeMem(0xc494, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x1044);
        EXPECT(gbc.pc(), 0xc496);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc494), 0xcb);
        EXPECT(gbc.readMem(0xc495), 0xa9);
        // CB A9 0069
        gbc.setState(0x474f, 0x5ecb, 0x5fb0, 0x394e, 0x5c22, 0xa0a9, 0x1, 0x0);
        gbc.writeMem(0x474f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x5ecb);
        EXPECT(gbc.pc(), 0x4751);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 006A
        gbc.setState(0xceb6, 0x689d, 0x6170, 0xe3f6, 0xf92f, 0xa496, 0x0, 0x0);
        gbc.writeMem(0xceb6, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x689d);
        EXPECT(gbc.pc(), 0xceb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceb6), 0xcb);
        EXPECT(gbc.readMem(0xceb7), 0xa9);
        // CB A9 006B
        gbc.setState(0x5dc7, 0x7548, 0xd920, 0xb3d7, 0x1aff, 0x489d, 0x0, 0x0);
        gbc.writeMem(0x5dc7, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x7548);
        EXPECT(gbc.pc(), 0x5dc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 006C
        gbc.setState(0x78f, 0xca8b, 0xce00, 0xfd0b, 0x2d32, 0x5231, 0x1, 0x0);
        gbc.writeMem(0x78f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xca8b);
        EXPECT(gbc.pc(), 0x791);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 006D
        gbc.setState(0x8a30, 0x5155, 0x5fd0, 0x3c5, 0xf0ed, 0x6c91, 0x1, 0x1);
        gbc.writeMem(0x8a30, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x5155);
        EXPECT(gbc.pc(), 0x8a32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a30), 0xcb);
        EXPECT(gbc.readMem(0x8a31), 0xa9);
        // CB A9 006E
        gbc.setState(0x70e1, 0x950d, 0x7450, 0xb748, 0x75e9, 0x4052, 0x1, 0x0);
        gbc.writeMem(0x70e1, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x950d);
        EXPECT(gbc.pc(), 0x70e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 006F
        gbc.setState(0x6cff, 0xd5be, 0x2f50, 0xacec, 0xce54, 0xba9c, 0x0, 0x0);
        gbc.writeMem(0x6cff, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd5be);
        EXPECT(gbc.pc(), 0x6d01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0070
        gbc.setState(0x8ba6, 0x66a2, 0xb570, 0x4a69, 0xd234, 0xf1ea, 0x0, 0x1);
        gbc.writeMem(0x8ba6, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x66a2);
        EXPECT(gbc.pc(), 0x8ba8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ba6), 0xcb);
        EXPECT(gbc.readMem(0x8ba7), 0xa9);
        // CB A9 0071
        gbc.setState(0x8f68, 0x5a40, 0x53c0, 0xa928, 0x3cc6, 0x3966, 0x0, 0x0);
        gbc.writeMem(0x8f68, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x5a40);
        EXPECT(gbc.pc(), 0x8f6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f68), 0xcb);
        EXPECT(gbc.readMem(0x8f69), 0xa9);
        // CB A9 0072
        gbc.setState(0xda89, 0xef44, 0x4320, 0x3721, 0x3b90, 0xb5ef, 0x1, 0x1);
        gbc.writeMem(0xda89, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xef44);
        EXPECT(gbc.pc(), 0xda8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda89), 0xcb);
        EXPECT(gbc.readMem(0xda8a), 0xa9);
        // CB A9 0073
        gbc.setState(0xe331, 0x3363, 0x7d30, 0x8746, 0x9e05, 0x6cf2, 0x1, 0x0);
        gbc.writeMem(0xe331, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x3363);
        EXPECT(gbc.pc(), 0xe333);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe331), 0xcb);
        EXPECT(gbc.readMem(0xe332), 0xa9);
        // CB A9 0074
        gbc.setState(0xd9a, 0x9a7e, 0x50b0, 0x7ddd, 0x456f, 0x1ba4, 0x1, 0x1);
        gbc.writeMem(0xd9a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x9a7e);
        EXPECT(gbc.pc(), 0xd9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0076
        gbc.setState(0xa316, 0xf9dd, 0x8620, 0xa809, 0x6ef9, 0x3e76, 0x0, 0x1);
        gbc.writeMem(0xa316, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xf9dd);
        EXPECT(gbc.pc(), 0xa318);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa316), 0xcb);
        EXPECT(gbc.readMem(0xa317), 0xa9);
        // CB A9 0077
        gbc.setState(0x2ca9, 0xa499, 0xaef0, 0x5d59, 0x2bfb, 0xb9a6, 0x1, 0x1);
        gbc.writeMem(0x2ca9, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xa499);
        EXPECT(gbc.pc(), 0x2cab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0078
        gbc.setState(0x4255, 0xd106, 0xf030, 0xac9d, 0x488, 0xe339, 0x1, 0x1);
        gbc.writeMem(0x4255, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd106);
        EXPECT(gbc.pc(), 0x4257);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0079
        gbc.setState(0x746c, 0xfa4e, 0xbf10, 0x17f2, 0x6c43, 0xcb7, 0x0, 0x0);
        gbc.writeMem(0x746c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xfa4e);
        EXPECT(gbc.pc(), 0x746e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 007A
        gbc.setState(0xe119, 0x7f75, 0x10b0, 0x1851, 0x8f4, 0xca83, 0x0, 0x0);
        gbc.writeMem(0xe119, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x7f75);
        EXPECT(gbc.pc(), 0xe11b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe119), 0xcb);
        EXPECT(gbc.readMem(0xe11a), 0xa9);
        // CB A9 007B
        gbc.setState(0x341, 0x8db, 0xe830, 0x24cf, 0x51eb, 0xfc4, 0x1, 0x1);
        gbc.writeMem(0x341, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8db);
        EXPECT(gbc.pc(), 0x343);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 007C
        gbc.setState(0x4811, 0x2eec, 0x6320, 0x540f, 0xae2e, 0x343c, 0x0, 0x0);
        gbc.writeMem(0x4811, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2eec);
        EXPECT(gbc.pc(), 0x4813);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 007D
        gbc.setState(0x3965, 0xdeb0, 0xe380, 0x3bc5, 0x92cd, 0xe744, 0x0, 0x0);
        gbc.writeMem(0x3965, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xdeb0);
        EXPECT(gbc.pc(), 0x3967);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 007E
        gbc.setState(0x7ea4, 0xbcb6, 0x47c0, 0x8888, 0x5a4c, 0x35a5, 0x0, 0x0);
        gbc.writeMem(0x7ea4, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xbcb6);
        EXPECT(gbc.pc(), 0x7ea6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 007F
        gbc.setState(0x8aab, 0xb66d, 0x7320, 0xa036, 0xf429, 0xf0a4, 0x1, 0x0);
        gbc.writeMem(0x8aab, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xb66d);
        EXPECT(gbc.pc(), 0x8aad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aab), 0xcb);
        EXPECT(gbc.readMem(0x8aac), 0xa9);
        // CB A9 0080
        gbc.setState(0x25f7, 0x28f1, 0x1220, 0x8b7, 0xf8c1, 0x5aff, 0x0, 0x0);
        gbc.writeMem(0x25f7, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x28f1);
        EXPECT(gbc.pc(), 0x25f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0083
        gbc.setState(0xb01d, 0xb527, 0xb6e0, 0x4268, 0x7604, 0x69e5, 0x0, 0x0);
        gbc.writeMem(0xb01d, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xb527);
        EXPECT(gbc.pc(), 0xb01f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb01d), 0xcb);
        EXPECT(gbc.readMem(0xb01e), 0xa9);
        // CB A9 0084
        gbc.setState(0xd71f, 0xc29, 0xd480, 0x5983, 0x8284, 0xbb02, 0x1, 0x0);
        gbc.writeMem(0xd71f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc29);
        EXPECT(gbc.pc(), 0xd721);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd71f), 0xcb);
        EXPECT(gbc.readMem(0xd720), 0xa9);
        // CB A9 0085
        gbc.setState(0x5492, 0x52f3, 0x3f50, 0xee35, 0x44a4, 0x3117, 0x0, 0x0);
        gbc.writeMem(0x5492, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x52f3);
        EXPECT(gbc.pc(), 0x5494);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0086
        gbc.setState(0xde8d, 0xf64d, 0x58a0, 0x7825, 0x9e17, 0x730b, 0x1, 0x0);
        gbc.writeMem(0xde8d, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xf64d);
        EXPECT(gbc.pc(), 0xde8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde8d), 0xcb);
        EXPECT(gbc.readMem(0xde8e), 0xa9);
        // CB A9 0087
        gbc.setState(0xb665, 0x3978, 0x3790, 0x232a, 0x1766, 0xd7ee, 0x0, 0x0);
        gbc.writeMem(0xb665, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x3978);
        EXPECT(gbc.pc(), 0xb667);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb665), 0xcb);
        EXPECT(gbc.readMem(0xb666), 0xa9);
        // CB A9 0088
        gbc.setState(0x83cc, 0x487f, 0xf010, 0x1dee, 0xc0ac, 0x1303, 0x1, 0x0);
        gbc.writeMem(0x83cc, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x487f);
        EXPECT(gbc.pc(), 0x83ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83cc), 0xcb);
        EXPECT(gbc.readMem(0x83cd), 0xa9);
        // CB A9 0089
        gbc.setState(0x755f, 0xaa60, 0xa720, 0x3537, 0x796, 0x5ea7, 0x0, 0x1);
        gbc.writeMem(0x755f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xaa60);
        EXPECT(gbc.pc(), 0x7561);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 008A
        gbc.setState(0x3925, 0xa320, 0xb870, 0x8b4f, 0xfd8e, 0x4e7f, 0x0, 0x1);
        gbc.writeMem(0x3925, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xa320);
        EXPECT(gbc.pc(), 0x3927);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 008B
        gbc.setState(0x3e30, 0xb185, 0x8d40, 0xc68, 0x88af, 0xb7cb, 0x0, 0x1);
        gbc.writeMem(0x3e30, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xb185);
        EXPECT(gbc.pc(), 0x3e32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 008C
        gbc.setState(0xc225, 0x12b, 0x2010, 0xfaab, 0x426, 0xd20b, 0x1, 0x1);
        gbc.writeMem(0xc225, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x12b);
        EXPECT(gbc.pc(), 0xc227);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc225), 0xcb);
        EXPECT(gbc.readMem(0xc226), 0xa9);
        // CB A9 008D
        gbc.setState(0x9fbe, 0x9a25, 0x1760, 0x7d29, 0x3740, 0x95c9, 0x1, 0x0);
        gbc.writeMem(0x9fbe, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x9a25);
        EXPECT(gbc.pc(), 0x9fc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fbe), 0xcb);
        EXPECT(gbc.readMem(0x9fbf), 0xa9);
        // CB A9 008E
        gbc.setState(0x2acb, 0x1b19, 0xbe00, 0xfc4a, 0x3a6d, 0x76d4, 0x0, 0x0);
        gbc.writeMem(0x2acb, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x1b19);
        EXPECT(gbc.pc(), 0x2acd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 008F
        gbc.setState(0xdf1e, 0xce99, 0xf10, 0x2a97, 0x2550, 0x4ffd, 0x1, 0x1);
        gbc.writeMem(0xdf1e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xce99);
        EXPECT(gbc.pc(), 0xdf20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf1e), 0xcb);
        EXPECT(gbc.readMem(0xdf1f), 0xa9);
        // CB A9 0090
        gbc.setState(0x11f, 0x48e5, 0x7e0, 0x21c, 0x2011, 0xbdc5, 0x1, 0x0);
        gbc.writeMem(0x11f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x48e5);
        EXPECT(gbc.pc(), 0x121);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0091
        gbc.setState(0x1ac4, 0x8c22, 0x1850, 0xb804, 0x9eae, 0x11e, 0x0, 0x0);
        gbc.writeMem(0x1ac4, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x8c22);
        EXPECT(gbc.pc(), 0x1ac6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0092
        gbc.setState(0x7355, 0xfd91, 0xef80, 0x2df4, 0x5d8b, 0xa247, 0x1, 0x1);
        gbc.writeMem(0x7355, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xfd91);
        EXPECT(gbc.pc(), 0x7357);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0094
        gbc.setState(0xc3d0, 0x5fe4, 0xc110, 0x4a0a, 0xe149, 0xc124, 0x0, 0x0);
        gbc.writeMem(0xc3d0, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x5fe4);
        EXPECT(gbc.pc(), 0xc3d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3d0), 0xcb);
        EXPECT(gbc.readMem(0xc3d1), 0xa9);
        // CB A9 0095
        gbc.setState(0x9472, 0x1952, 0xb210, 0xd465, 0xa51, 0xaaf4, 0x1, 0x0);
        gbc.writeMem(0x9472, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x1952);
        EXPECT(gbc.pc(), 0x9474);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9472), 0xcb);
        EXPECT(gbc.readMem(0x9473), 0xa9);
        // CB A9 0096
        gbc.setState(0x1434, 0x355d, 0x5d80, 0x4815, 0xb81f, 0x1cbd, 0x1, 0x1);
        gbc.writeMem(0x1434, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x355d);
        EXPECT(gbc.pc(), 0x1436);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0097
        gbc.setState(0x5ca, 0xe1c1, 0x6360, 0x5a, 0x6ba2, 0x6731, 0x1, 0x1);
        gbc.writeMem(0x5ca, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xe1c1);
        EXPECT(gbc.pc(), 0x5cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0098
        gbc.setState(0xe055, 0x238c, 0x5e70, 0x6b5e, 0x65ad, 0xbf1f, 0x0, 0x1);
        gbc.writeMem(0xe055, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x238c);
        EXPECT(gbc.pc(), 0xe057);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe055), 0xcb);
        EXPECT(gbc.readMem(0xe056), 0xa9);
        // CB A9 0099
        gbc.setState(0xab8a, 0xd6a5, 0x1d50, 0x6615, 0xb052, 0x972f, 0x1, 0x1);
        gbc.writeMem(0xab8a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xd6a5);
        EXPECT(gbc.pc(), 0xab8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab8a), 0xcb);
        EXPECT(gbc.readMem(0xab8b), 0xa9);
        // CB A9 009A
        gbc.setState(0xdfcb, 0x2776, 0xd9f0, 0xb328, 0x38aa, 0xc3a2, 0x1, 0x0);
        gbc.writeMem(0xdfcb, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x2776);
        EXPECT(gbc.pc(), 0xdfcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfcb), 0xcb);
        EXPECT(gbc.readMem(0xdfcc), 0xa9);
        // CB A9 009C
        gbc.setState(0x6901, 0x6111, 0x2e00, 0x30ac, 0x45e7, 0x6fbb, 0x0, 0x0);
        gbc.writeMem(0x6901, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x6111);
        EXPECT(gbc.pc(), 0x6903);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 009E
        gbc.setState(0xc34e, 0xc381, 0x6f90, 0xbe4f, 0x1a75, 0x23e6, 0x1, 0x1);
        gbc.writeMem(0xc34e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xc381);
        EXPECT(gbc.pc(), 0xc350);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc34e), 0xcb);
        EXPECT(gbc.readMem(0xc34f), 0xa9);
        // CB A9 009F
        gbc.setState(0xcab, 0xd539, 0xc3d0, 0xf48d, 0xdfd4, 0x6041, 0x0, 0x1);
        gbc.writeMem(0xcab, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xd539);
        EXPECT(gbc.pc(), 0xcad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 00A0
        gbc.setState(0x1fb, 0xfecb, 0x53f0, 0xd37c, 0xdd3d, 0xaf6, 0x0, 0x0);
        gbc.writeMem(0x1fb, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xfecb);
        EXPECT(gbc.pc(), 0x1fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 00A1
        gbc.setState(0xd5bc, 0x1c35, 0x1550, 0xb9a3, 0xfd0d, 0x68d0, 0x0, 0x0);
        gbc.writeMem(0xd5bc, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x1c35);
        EXPECT(gbc.pc(), 0xd5be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5bc), 0xcb);
        EXPECT(gbc.readMem(0xd5bd), 0xa9);
        // CB A9 00A2
        gbc.setState(0xdce5, 0xbf17, 0x2a0, 0x11c, 0x618b, 0x21d8, 0x1, 0x1);
        gbc.writeMem(0xdce5, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xbf17);
        EXPECT(gbc.pc(), 0xdce7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdce5), 0xcb);
        EXPECT(gbc.readMem(0xdce6), 0xa9);
        // CB A9 00A3
        gbc.setState(0x773a, 0x5da2, 0xaaa0, 0xad64, 0xfd87, 0xd3c2, 0x1, 0x1);
        gbc.writeMem(0x773a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5da2);
        EXPECT(gbc.pc(), 0x773c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 00A4
        gbc.setState(0x388b, 0x1e61, 0x7ae0, 0xb23f, 0x8b38, 0xa66b, 0x0, 0x1);
        gbc.writeMem(0x388b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x1e61);
        EXPECT(gbc.pc(), 0x388d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 00A5
        gbc.setState(0xa8b8, 0x36, 0x72e0, 0xdef2, 0x5a98, 0xafed, 0x0, 0x0);
        gbc.writeMem(0xa8b8, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x36);
        EXPECT(gbc.pc(), 0xa8ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8b8), 0xcb);
        EXPECT(gbc.readMem(0xa8b9), 0xa9);
        // CB A9 00A6
        gbc.setState(0x895c, 0xa85f, 0xc540, 0xf754, 0xf413, 0xcc23, 0x0, 0x0);
        gbc.writeMem(0x895c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xa85f);
        EXPECT(gbc.pc(), 0x895e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x895c), 0xcb);
        EXPECT(gbc.readMem(0x895d), 0xa9);
        // CB A9 00A7
        gbc.setState(0xcccc, 0xddde, 0x90c0, 0x4840, 0x85d7, 0x1075, 0x1, 0x0);
        gbc.writeMem(0xcccc, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xddde);
        EXPECT(gbc.pc(), 0xccce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcccc), 0xcb);
        EXPECT(gbc.readMem(0xcccd), 0xa9);
        // CB A9 00A8
        gbc.setState(0xe1d7, 0xb7a6, 0x69f0, 0x4011, 0x6893, 0xaebc, 0x0, 0x1);
        gbc.writeMem(0xe1d7, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xb7a6);
        EXPECT(gbc.pc(), 0xe1d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1d7), 0xcb);
        EXPECT(gbc.readMem(0xe1d8), 0xa9);
        // CB A9 00AA
        gbc.setState(0xc50d, 0x897e, 0x4db0, 0xefd6, 0xff64, 0x3909, 0x1, 0x1);
        gbc.writeMem(0xc50d, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x897e);
        EXPECT(gbc.pc(), 0xc50f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc50d), 0xcb);
        EXPECT(gbc.readMem(0xc50e), 0xa9);
        // CB A9 00AB
        gbc.setState(0xc4e5, 0xd41e, 0x6a50, 0xa4d1, 0x2a83, 0xf76b, 0x0, 0x1);
        gbc.writeMem(0xc4e5, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xd41e);
        EXPECT(gbc.pc(), 0xc4e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4e5), 0xcb);
        EXPECT(gbc.readMem(0xc4e6), 0xa9);
        // CB A9 00AC
        gbc.setState(0xc073, 0xa70b, 0x3bb0, 0x3d17, 0xbde0, 0x542c, 0x0, 0x0);
        gbc.writeMem(0xc073, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa70b);
        EXPECT(gbc.pc(), 0xc075);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc073), 0xcb);
        EXPECT(gbc.readMem(0xc074), 0xa9);
        // CB A9 00AD
        gbc.setState(0xac9c, 0x738d, 0xe20, 0xef6b, 0x9fdd, 0x4662, 0x0, 0x0);
        gbc.writeMem(0xac9c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x738d);
        EXPECT(gbc.pc(), 0xac9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac9c), 0xcb);
        EXPECT(gbc.readMem(0xac9d), 0xa9);
        // CB A9 00AE
        gbc.setState(0x597c, 0xa62a, 0x7f00, 0xa270, 0x419a, 0x898, 0x0, 0x0);
        gbc.writeMem(0x597c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xa62a);
        EXPECT(gbc.pc(), 0x597e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 00AF
        gbc.setState(0x4223, 0x25d6, 0x4320, 0x1de0, 0x98d8, 0x48ab, 0x0, 0x0);
        gbc.writeMem(0x4223, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x25d6);
        EXPECT(gbc.pc(), 0x4225);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 00B0
        gbc.setState(0xe079, 0xbea4, 0xa5b0, 0x81dd, 0x3eeb, 0x34fb, 0x0, 0x1);
        gbc.writeMem(0xe079, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xbea4);
        EXPECT(gbc.pc(), 0xe07b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe079), 0xcb);
        EXPECT(gbc.readMem(0xe07a), 0xa9);
        // CB A9 00B1
        gbc.setState(0x7e4, 0x10c, 0x8190, 0xbbe6, 0x83f, 0xf230, 0x1, 0x1);
        gbc.writeMem(0x7e4, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x10c);
        EXPECT(gbc.pc(), 0x7e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 00B2
        gbc.setState(0x50ff, 0xcbfc, 0xf1c0, 0x19a6, 0xcc2c, 0x4945, 0x1, 0x1);
        gbc.writeMem(0x50ff, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xcbfc);
        EXPECT(gbc.pc(), 0x5101);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 00B3
        gbc.setState(0xa820, 0x1040, 0x13f0, 0xe403, 0xc226, 0x80ad, 0x1, 0x0);
        gbc.writeMem(0xa820, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x1040);
        EXPECT(gbc.pc(), 0xa822);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa820), 0xcb);
        EXPECT(gbc.readMem(0xa821), 0xa9);
        // CB A9 00B4
        gbc.setState(0xd02, 0x9f1, 0xe4b0, 0xfe45, 0x7f40, 0xcfde, 0x1, 0x1);
        gbc.writeMem(0xd02, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x9f1);
        EXPECT(gbc.pc(), 0xd04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 00B5
        gbc.setState(0xda04, 0x4118, 0x4d0, 0x7190, 0xb4d6, 0x1759, 0x0, 0x1);
        gbc.writeMem(0xda04, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x4118);
        EXPECT(gbc.pc(), 0xda06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda04), 0xcb);
        EXPECT(gbc.readMem(0xda05), 0xa9);
        // CB A9 00B6
        gbc.setState(0x7955, 0xd950, 0x1000, 0xbf19, 0x52f9, 0x94e4, 0x0, 0x0);
        gbc.writeMem(0x7955, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xd950);
        EXPECT(gbc.pc(), 0x7957);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 00B7
        gbc.setState(0x836d, 0x46eb, 0x8580, 0x6f7a, 0x82aa, 0x12bd, 0x0, 0x1);
        gbc.writeMem(0x836d, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x46eb);
        EXPECT(gbc.pc(), 0x836f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x836d), 0xcb);
        EXPECT(gbc.readMem(0x836e), 0xa9);
        // CB A9 00B8
        gbc.setState(0x9eef, 0xe69e, 0xc0e0, 0x9fe9, 0x63c3, 0x373, 0x1, 0x1);
        gbc.writeMem(0x9eef, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe69e);
        EXPECT(gbc.pc(), 0x9ef1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eef), 0xcb);
        EXPECT(gbc.readMem(0x9ef0), 0xa9);
        // CB A9 00B9
        gbc.setState(0x7730, 0x85d3, 0xe790, 0x2c5f, 0x548b, 0x749b, 0x0, 0x1);
        gbc.writeMem(0x7730, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x85d3);
        EXPECT(gbc.pc(), 0x7732);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 00BA
        gbc.setState(0xa9d, 0xb849, 0x2d0, 0xde2c, 0x1082, 0x7f3f, 0x1, 0x1);
        gbc.writeMem(0xa9d, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb849);
        EXPECT(gbc.pc(), 0xa9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 00BB
        gbc.setState(0x857e, 0xf9f9, 0x3a70, 0x2dbc, 0x56c4, 0xcdad, 0x1, 0x0);
        gbc.writeMem(0x857e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xf9f9);
        EXPECT(gbc.pc(), 0x8580);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x857e), 0xcb);
        EXPECT(gbc.readMem(0x857f), 0xa9);
        // CB A9 00BC
        gbc.setState(0x6600, 0x2ee3, 0xa090, 0x3c95, 0xf372, 0xe496, 0x0, 0x1);
        gbc.writeMem(0x6600, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x2ee3);
        EXPECT(gbc.pc(), 0x6602);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 00BD
        gbc.setState(0xaedd, 0x687d, 0x49f0, 0x3afc, 0xd2e1, 0x4d8d, 0x0, 0x1);
        gbc.writeMem(0xaedd, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x687d);
        EXPECT(gbc.pc(), 0xaedf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaedd), 0xcb);
        EXPECT(gbc.readMem(0xaede), 0xa9);
        // CB A9 00BF
        gbc.setState(0x5f4f, 0x5eed, 0x4300, 0x3427, 0xe153, 0xf7ca, 0x0, 0x1);
        gbc.writeMem(0x5f4f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x5eed);
        EXPECT(gbc.pc(), 0x5f51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 00C0
        gbc.setState(0xe3fe, 0x7f7b, 0xdf50, 0xd602, 0x5abd, 0xf0dd, 0x1, 0x1);
        gbc.writeMem(0xe3fe, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x7f7b);
        EXPECT(gbc.pc(), 0xe400);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3fe), 0xcb);
        EXPECT(gbc.readMem(0xe3ff), 0xa9);
        // CB A9 00C1
        gbc.setState(0xaf65, 0xd88d, 0xbd70, 0xfbd9, 0x95a2, 0x80f1, 0x0, 0x0);
        gbc.writeMem(0xaf65, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xd88d);
        EXPECT(gbc.pc(), 0xaf67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf65), 0xcb);
        EXPECT(gbc.readMem(0xaf66), 0xa9);
        // CB A9 00C2
        gbc.setState(0x5909, 0xa20c, 0xea10, 0x1eb1, 0xc33c, 0xf19e, 0x0, 0x1);
        gbc.writeMem(0x5909, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa20c);
        EXPECT(gbc.pc(), 0x590b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 00C3
        gbc.setState(0xb4ba, 0xbf03, 0xca20, 0xa3c2, 0xa363, 0x55cb, 0x1, 0x0);
        gbc.writeMem(0xb4ba, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xbf03);
        EXPECT(gbc.pc(), 0xb4bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4ba), 0xcb);
        EXPECT(gbc.readMem(0xb4bb), 0xa9);
        // CB A9 00C4
        gbc.setState(0x58a2, 0x59dc, 0x1880, 0xbb80, 0x9a2a, 0x488b, 0x1, 0x0);
        gbc.writeMem(0x58a2, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x59dc);
        EXPECT(gbc.pc(), 0x58a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 00C5
        gbc.setState(0x3184, 0xe899, 0xfb70, 0xe2f9, 0xf9e9, 0x41e6, 0x0, 0x0);
        gbc.writeMem(0x3184, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xe899);
        EXPECT(gbc.pc(), 0x3186);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 00C6
        gbc.setState(0xaea7, 0xdec6, 0xa9a0, 0xc2bf, 0x5dcc, 0xbb67, 0x1, 0x0);
        gbc.writeMem(0xaea7, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xdec6);
        EXPECT(gbc.pc(), 0xaea9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaea7), 0xcb);
        EXPECT(gbc.readMem(0xaea8), 0xa9);
        // CB A9 00C7
        gbc.setState(0xa43c, 0xe02c, 0x6fe0, 0xef00, 0xb98c, 0x14b4, 0x1, 0x1);
        gbc.writeMem(0xa43c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xe02c);
        EXPECT(gbc.pc(), 0xa43e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa43c), 0xcb);
        EXPECT(gbc.readMem(0xa43d), 0xa9);
        // CB A9 00C8
        gbc.setState(0xd2d8, 0x814c, 0x4830, 0xe863, 0x295e, 0x1056, 0x1, 0x0);
        gbc.writeMem(0xd2d8, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x814c);
        EXPECT(gbc.pc(), 0xd2da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2d8), 0xcb);
        EXPECT(gbc.readMem(0xd2d9), 0xa9);
        // CB A9 00C9
        gbc.setState(0xe19e, 0xcf1d, 0x4680, 0xf84e, 0x3723, 0x7e19, 0x1, 0x1);
        gbc.writeMem(0xe19e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xcf1d);
        EXPECT(gbc.pc(), 0xe1a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe19e), 0xcb);
        EXPECT(gbc.readMem(0xe19f), 0xa9);
        // CB A9 00CA
        gbc.setState(0xb079, 0x8fee, 0xed00, 0x81cd, 0x186a, 0x864e, 0x1, 0x1);
        gbc.writeMem(0xb079, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x8fee);
        EXPECT(gbc.pc(), 0xb07b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb079), 0xcb);
        EXPECT(gbc.readMem(0xb07a), 0xa9);
        // CB A9 00CB
        gbc.setState(0x45ae, 0xecd0, 0xfce0, 0xa49d, 0x4667, 0x8d1, 0x1, 0x0);
        gbc.writeMem(0x45ae, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xecd0);
        EXPECT(gbc.pc(), 0x45b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 00CC
        gbc.setState(0x7a5, 0xe6bb, 0xd6b0, 0xf2c2, 0x10c0, 0x140d, 0x0, 0x0);
        gbc.writeMem(0x7a5, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xe6bb);
        EXPECT(gbc.pc(), 0x7a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 00CD
        gbc.setState(0xdc9a, 0xb268, 0xebd0, 0x8ba6, 0x7f73, 0x4e93, 0x1, 0x0);
        gbc.writeMem(0xdc9a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb268);
        EXPECT(gbc.pc(), 0xdc9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc9a), 0xcb);
        EXPECT(gbc.readMem(0xdc9b), 0xa9);
        // CB A9 00CE
        gbc.setState(0xef22, 0xfd5b, 0x13f0, 0x201c, 0xf58a, 0x7d77, 0x0, 0x1);
        gbc.writeMem(0xef22, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xfd5b);
        EXPECT(gbc.pc(), 0xef24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef22), 0xcb);
        EXPECT(gbc.readMem(0xef23), 0xa9);
        // CB A9 00CF
        gbc.setState(0xe349, 0xf99f, 0xbde0, 0x8249, 0xfe48, 0x9909, 0x1, 0x1);
        gbc.writeMem(0xe349, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf99f);
        EXPECT(gbc.pc(), 0xe34b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe349), 0xcb);
        EXPECT(gbc.readMem(0xe34a), 0xa9);
        // CB A9 00D0
        gbc.setState(0x9fde, 0x6f78, 0x7810, 0x2b75, 0x7ab6, 0x8679, 0x1, 0x1);
        gbc.writeMem(0x9fde, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x6f78);
        EXPECT(gbc.pc(), 0x9fe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fde), 0xcb);
        EXPECT(gbc.readMem(0x9fdf), 0xa9);
        // CB A9 00D1
        gbc.setState(0x91e5, 0x1491, 0xac90, 0xae4, 0xc4df, 0x75ae, 0x1, 0x1);
        gbc.writeMem(0x91e5, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x1491);
        EXPECT(gbc.pc(), 0x91e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91e5), 0xcb);
        EXPECT(gbc.readMem(0x91e6), 0xa9);
        // CB A9 00D2
        gbc.setState(0xda66, 0x46dd, 0x4f0, 0x3ad0, 0xcba9, 0xff47, 0x0, 0x0);
        gbc.writeMem(0xda66, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x46dd);
        EXPECT(gbc.pc(), 0xda68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda66), 0xcb);
        EXPECT(gbc.readMem(0xda67), 0xa9);
        // CB A9 00D3
        gbc.setState(0xb8d0, 0x2e96, 0x59d0, 0xbe28, 0x268b, 0x4858, 0x0, 0x1);
        gbc.writeMem(0xb8d0, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x2e96);
        EXPECT(gbc.pc(), 0xb8d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8d0), 0xcb);
        EXPECT(gbc.readMem(0xb8d1), 0xa9);
        // CB A9 00D4
        gbc.setState(0x8161, 0xea0e, 0x32c0, 0xdaa1, 0x4f4, 0x94db, 0x0, 0x0);
        gbc.writeMem(0x8161, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xea0e);
        EXPECT(gbc.pc(), 0x8163);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8161), 0xcb);
        EXPECT(gbc.readMem(0x8162), 0xa9);
        // CB A9 00D5
        gbc.setState(0xbed3, 0x1a7f, 0xe040, 0xe578, 0xd898, 0x84ce, 0x1, 0x0);
        gbc.writeMem(0xbed3, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x1a7f);
        EXPECT(gbc.pc(), 0xbed5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbed3), 0xcb);
        EXPECT(gbc.readMem(0xbed4), 0xa9);
        // CB A9 00D6
        gbc.setState(0xb798, 0x33cc, 0x0, 0x53ef, 0xd0c5, 0xd935, 0x1, 0x0);
        gbc.writeMem(0xb798, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x33cc);
        EXPECT(gbc.pc(), 0xb79a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb798), 0xcb);
        EXPECT(gbc.readMem(0xb799), 0xa9);
        // CB A9 00D7
        gbc.setState(0x80ee, 0xe4cb, 0xd050, 0x65ac, 0x9d58, 0xfc09, 0x0, 0x0);
        gbc.writeMem(0x80ee, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xe4cb);
        EXPECT(gbc.pc(), 0x80f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80ee), 0xcb);
        EXPECT(gbc.readMem(0x80ef), 0xa9);
        // CB A9 00D8
        gbc.setState(0x9508, 0x5ff0, 0x5990, 0x8bc0, 0xca7b, 0x873, 0x0, 0x1);
        gbc.writeMem(0x9508, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x5ff0);
        EXPECT(gbc.pc(), 0x950a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9508), 0xcb);
        EXPECT(gbc.readMem(0x9509), 0xa9);
        // CB A9 00D9
        gbc.setState(0x1460, 0xa097, 0xee10, 0xf740, 0xccf4, 0x4962, 0x1, 0x0);
        gbc.writeMem(0x1460, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xa097);
        EXPECT(gbc.pc(), 0x1462);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 00DA
        gbc.setState(0x998b, 0x6161, 0xdcc0, 0xfd6, 0x58bd, 0x998b, 0x0, 0x1);
        gbc.writeMem(0x998b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x6161);
        EXPECT(gbc.pc(), 0x998d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x998b), 0xcb);
        EXPECT(gbc.readMem(0x998c), 0xa9);
        // CB A9 00DB
        gbc.setState(0x2360, 0xade4, 0x9cb0, 0x6694, 0x84c, 0x49d0, 0x1, 0x1);
        gbc.writeMem(0x2360, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xade4);
        EXPECT(gbc.pc(), 0x2362);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 00DC
        gbc.setState(0x15ea, 0xfacc, 0xd40, 0xae27, 0xcaa3, 0x38f7, 0x0, 0x1);
        gbc.writeMem(0x15ea, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xfacc);
        EXPECT(gbc.pc(), 0x15ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 00DD
        gbc.setState(0x7a0e, 0xe75f, 0x2120, 0xd6cf, 0xf363, 0xa5ee, 0x0, 0x0);
        gbc.writeMem(0x7a0e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xe75f);
        EXPECT(gbc.pc(), 0x7a10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 00DE
        gbc.setState(0x256c, 0xab83, 0xb7e0, 0x994d, 0x405, 0xe135, 0x0, 0x0);
        gbc.writeMem(0x256c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xab83);
        EXPECT(gbc.pc(), 0x256e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 00DF
        gbc.setState(0x3992, 0x68b1, 0x14e0, 0xa8fd, 0xbda5, 0x7b91, 0x0, 0x0);
        gbc.writeMem(0x3992, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x68b1);
        EXPECT(gbc.pc(), 0x3994);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 00E0
        gbc.setState(0x7f80, 0x563c, 0xd0a0, 0x51e6, 0x8aa7, 0xdc5, 0x1, 0x0);
        gbc.writeMem(0x7f80, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x563c);
        EXPECT(gbc.pc(), 0x7f82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 00E1
        gbc.setState(0x73b7, 0x60b4, 0x5020, 0x758f, 0x5eb5, 0x4915, 0x1, 0x0);
        gbc.writeMem(0x73b7, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x60b4);
        EXPECT(gbc.pc(), 0x73b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 00E2
        gbc.setState(0xcef6, 0x2593, 0xbe20, 0xb89c, 0xeca1, 0xb4a0, 0x0, 0x1);
        gbc.writeMem(0xcef6, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x2593);
        EXPECT(gbc.pc(), 0xcef8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcef6), 0xcb);
        EXPECT(gbc.readMem(0xcef7), 0xa9);
        // CB A9 00E3
        gbc.setState(0xe80d, 0x34d0, 0xab30, 0x7228, 0x237e, 0x53b9, 0x0, 0x0);
        gbc.writeMem(0xe80d, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x34d0);
        EXPECT(gbc.pc(), 0xe80f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe80d), 0xcb);
        EXPECT(gbc.readMem(0xe80e), 0xa9);
        // CB A9 00E4
        gbc.setState(0x8e35, 0xe7cd, 0x7f50, 0x53d8, 0x3c6e, 0x1603, 0x1, 0x0);
        gbc.writeMem(0x8e35, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xe7cd);
        EXPECT(gbc.pc(), 0x8e37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e35), 0xcb);
        EXPECT(gbc.readMem(0x8e36), 0xa9);
        // CB A9 00E5
        gbc.setState(0x16f4, 0x4f86, 0xbc0, 0xed86, 0x8009, 0x82a0, 0x1, 0x0);
        gbc.writeMem(0x16f4, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x4f86);
        EXPECT(gbc.pc(), 0x16f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 00E6
        gbc.setState(0xdbde, 0x181b, 0xc960, 0xa2b9, 0x7b75, 0x962e, 0x0, 0x1);
        gbc.writeMem(0xdbde, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x181b);
        EXPECT(gbc.pc(), 0xdbe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbde), 0xcb);
        EXPECT(gbc.readMem(0xdbdf), 0xa9);
        // CB A9 00E7
        gbc.setState(0xea34, 0x4beb, 0x54a0, 0xf6ee, 0x2539, 0x3c27, 0x0, 0x1);
        gbc.writeMem(0xea34, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x4beb);
        EXPECT(gbc.pc(), 0xea36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea34), 0xcb);
        EXPECT(gbc.readMem(0xea35), 0xa9);
        // CB A9 00E8
        gbc.setState(0x3a6b, 0xc95b, 0x4b70, 0xc1d1, 0x6efb, 0x3e39, 0x1, 0x1);
        gbc.writeMem(0x3a6b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xc95b);
        EXPECT(gbc.pc(), 0x3a6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 00E9
        gbc.setState(0xac71, 0x2abf, 0x6fe0, 0xffde, 0x1451, 0x1171, 0x0, 0x1);
        gbc.writeMem(0xac71, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x2abf);
        EXPECT(gbc.pc(), 0xac73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac71), 0xcb);
        EXPECT(gbc.readMem(0xac72), 0xa9);
        // CB A9 00EC
        gbc.setState(0x1468, 0x1828, 0xe0f0, 0x5b4d, 0x963f, 0x3220, 0x1, 0x0);
        gbc.writeMem(0x1468, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x1828);
        EXPECT(gbc.pc(), 0x146a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 00ED
        gbc.setState(0x9c82, 0x16a3, 0x8250, 0xd3ec, 0xb872, 0x4c2b, 0x1, 0x1);
        gbc.writeMem(0x9c82, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x16a3);
        EXPECT(gbc.pc(), 0x9c84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c82), 0xcb);
        EXPECT(gbc.readMem(0x9c83), 0xa9);
        // CB A9 00EE
        gbc.setState(0xc6ea, 0xb335, 0x2ec0, 0xc9ba, 0xe531, 0x2949, 0x1, 0x1);
        gbc.writeMem(0xc6ea, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xb335);
        EXPECT(gbc.pc(), 0xc6ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6ea), 0xcb);
        EXPECT(gbc.readMem(0xc6eb), 0xa9);
        // CB A9 00EF
        gbc.setState(0x51fd, 0xd901, 0x1bd0, 0xb8ab, 0x198a, 0xdc87, 0x1, 0x1);
        gbc.writeMem(0x51fd, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xd901);
        EXPECT(gbc.pc(), 0x51ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 00F0
        gbc.setState(0x8bd5, 0xd622, 0x6370, 0xc154, 0xf565, 0x4380, 0x1, 0x1);
        gbc.writeMem(0x8bd5, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xd622);
        EXPECT(gbc.pc(), 0x8bd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bd5), 0xcb);
        EXPECT(gbc.readMem(0x8bd6), 0xa9);
        // CB A9 00F1
        gbc.setState(0x5828, 0xbe0, 0x2880, 0x7232, 0xc490, 0xc3a7, 0x1, 0x0);
        gbc.writeMem(0x5828, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xbe0);
        EXPECT(gbc.pc(), 0x582a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 00F2
        gbc.setState(0xb43a, 0x2559, 0xda50, 0xaae9, 0xe4d8, 0x67c9, 0x1, 0x1);
        gbc.writeMem(0xb43a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x2559);
        EXPECT(gbc.pc(), 0xb43c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb43a), 0xcb);
        EXPECT(gbc.readMem(0xb43b), 0xa9);
        // CB A9 00F4
        gbc.setState(0xae20, 0x3aeb, 0xac40, 0xd636, 0xcf32, 0x963f, 0x0, 0x1);
        gbc.writeMem(0xae20, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x3aeb);
        EXPECT(gbc.pc(), 0xae22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae20), 0xcb);
        EXPECT(gbc.readMem(0xae21), 0xa9);
        // CB A9 00F5
        gbc.setState(0x180c, 0x86f7, 0x8700, 0x1189, 0xb621, 0xf666, 0x0, 0x1);
        gbc.writeMem(0x180c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x86f7);
        EXPECT(gbc.pc(), 0x180e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 00F7
        gbc.setState(0x853f, 0xd15d, 0x8540, 0x5708, 0x3f3d, 0xc918, 0x1, 0x0);
        gbc.writeMem(0x853f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd15d);
        EXPECT(gbc.pc(), 0x8541);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x853f), 0xcb);
        EXPECT(gbc.readMem(0x8540), 0xa9);
        // CB A9 00F8
        gbc.setState(0xaecf, 0x7759, 0x9740, 0x1ba8, 0xd094, 0xe01, 0x0, 0x0);
        gbc.writeMem(0xaecf, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x7759);
        EXPECT(gbc.pc(), 0xaed1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaecf), 0xcb);
        EXPECT(gbc.readMem(0xaed0), 0xa9);
        // CB A9 00F9
        gbc.setState(0xc45b, 0xfedc, 0xeb20, 0xd7a7, 0x4e76, 0x9ca0, 0x1, 0x1);
        gbc.writeMem(0xc45b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xfedc);
        EXPECT(gbc.pc(), 0xc45d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc45b), 0xcb);
        EXPECT(gbc.readMem(0xc45c), 0xa9);
        // CB A9 00FA
        gbc.setState(0xe9ce, 0x44c6, 0xc9c0, 0x4527, 0xca68, 0x3a8d, 0x1, 0x1);
        gbc.writeMem(0xe9ce, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x44c6);
        EXPECT(gbc.pc(), 0xe9d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ce), 0xcb);
        EXPECT(gbc.readMem(0xe9cf), 0xa9);
        // CB A9 00FB
        gbc.setState(0x5983, 0xafdd, 0x37d0, 0x3c1a, 0xda75, 0x89c2, 0x1, 0x0);
        gbc.writeMem(0x5983, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xafdd);
        EXPECT(gbc.pc(), 0x5985);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 00FC
        gbc.setState(0x37ac, 0x4904, 0x8d80, 0xb768, 0xa845, 0xace3, 0x1, 0x0);
        gbc.writeMem(0x37ac, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x4904);
        EXPECT(gbc.pc(), 0x37ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 00FD
        gbc.setState(0x4675, 0xa2df, 0xd50, 0xd3a6, 0xdde8, 0xae9c, 0x0, 0x0);
        gbc.writeMem(0x4675, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xa2df);
        EXPECT(gbc.pc(), 0x4677);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 00FE
        gbc.setState(0x2191, 0xa12, 0x6260, 0xa408, 0xbbb3, 0xa782, 0x1, 0x1);
        gbc.writeMem(0x2191, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xa12);
        EXPECT(gbc.pc(), 0x2193);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 00FF
        gbc.setState(0x587d, 0xe703, 0x32a0, 0x61f7, 0x377d, 0xa143, 0x0, 0x0);
        gbc.writeMem(0x587d, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xe703);
        EXPECT(gbc.pc(), 0x587f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0100
        gbc.setState(0x39fb, 0x3239, 0x7a50, 0x5ff6, 0x1cfc, 0x9260, 0x0, 0x0);
        gbc.writeMem(0x39fb, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x3239);
        EXPECT(gbc.pc(), 0x39fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0101
        gbc.setState(0xa724, 0x7fad, 0x81c0, 0x8433, 0x2ef2, 0xd2fd, 0x1, 0x0);
        gbc.writeMem(0xa724, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x7fad);
        EXPECT(gbc.pc(), 0xa726);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa724), 0xcb);
        EXPECT(gbc.readMem(0xa725), 0xa9);
        // CB A9 0102
        gbc.setState(0xb284, 0x3415, 0x1540, 0x7310, 0x1c, 0x7eeb, 0x1, 0x0);
        gbc.writeMem(0xb284, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x3415);
        EXPECT(gbc.pc(), 0xb286);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb284), 0xcb);
        EXPECT(gbc.readMem(0xb285), 0xa9);
        // CB A9 0104
        gbc.setState(0xc47e, 0x3d82, 0x5fd0, 0xeebb, 0x7ccc, 0x496e, 0x0, 0x1);
        gbc.writeMem(0xc47e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x3d82);
        EXPECT(gbc.pc(), 0xc480);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc47e), 0xcb);
        EXPECT(gbc.readMem(0xc47f), 0xa9);
        // CB A9 0105
        gbc.setState(0x5f2e, 0x4b31, 0x3580, 0xe3f, 0x3df6, 0x9e3, 0x1, 0x0);
        gbc.writeMem(0x5f2e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x4b31);
        EXPECT(gbc.pc(), 0x5f30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0106
        gbc.setState(0x44a2, 0x14a7, 0xcb40, 0x1ca4, 0xc5f5, 0x6760, 0x1, 0x1);
        gbc.writeMem(0x44a2, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x14a7);
        EXPECT(gbc.pc(), 0x44a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0107
        gbc.setState(0x2ce, 0xc74a, 0xc170, 0x3ae4, 0x74af, 0x3710, 0x0, 0x1);
        gbc.writeMem(0x2ce, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xc74a);
        EXPECT(gbc.pc(), 0x2d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0108
        gbc.setState(0xb488, 0x3a7e, 0x97e0, 0x15c3, 0x17fc, 0x747a, 0x1, 0x0);
        gbc.writeMem(0xb488, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x3a7e);
        EXPECT(gbc.pc(), 0xb48a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb488), 0xcb);
        EXPECT(gbc.readMem(0xb489), 0xa9);
        // CB A9 0109
        gbc.setState(0xc410, 0x82a1, 0x8a10, 0x89f1, 0xe836, 0x741, 0x0, 0x0);
        gbc.writeMem(0xc410, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x82a1);
        EXPECT(gbc.pc(), 0xc412);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc410), 0xcb);
        EXPECT(gbc.readMem(0xc411), 0xa9);
        // CB A9 010B
        gbc.setState(0x91bb, 0x36d8, 0x37c0, 0x6c09, 0xb039, 0x78f3, 0x1, 0x0);
        gbc.writeMem(0x91bb, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x36d8);
        EXPECT(gbc.pc(), 0x91bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91bb), 0xcb);
        EXPECT(gbc.readMem(0x91bc), 0xa9);
        // CB A9 010C
        gbc.setState(0x6000, 0x6eb7, 0x8d40, 0x88b2, 0xe046, 0x9905, 0x1, 0x0);
        gbc.writeMem(0x6000, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x6eb7);
        EXPECT(gbc.pc(), 0x6002);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 010D
        gbc.setState(0x4a1e, 0x1b56, 0x49a0, 0xd5cc, 0x196f, 0xad08, 0x1, 0x1);
        gbc.writeMem(0x4a1e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x1b56);
        EXPECT(gbc.pc(), 0x4a20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 010E
        gbc.setState(0x65fc, 0x2392, 0x7b70, 0x17bb, 0xd76f, 0x6404, 0x1, 0x0);
        gbc.writeMem(0x65fc, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x2392);
        EXPECT(gbc.pc(), 0x65fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 010F
        gbc.setState(0xb74, 0x4321, 0xa310, 0x6308, 0x3ce7, 0x160b, 0x0, 0x0);
        gbc.writeMem(0xb74, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x4321);
        EXPECT(gbc.pc(), 0xb76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0110
        gbc.setState(0xd95, 0x8557, 0x1690, 0xeceb, 0x543d, 0x9524, 0x1, 0x0);
        gbc.writeMem(0xd95, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8557);
        EXPECT(gbc.pc(), 0xd97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0111
        gbc.setState(0x7d77, 0xe85, 0x160, 0x3531, 0x6d69, 0x95c0, 0x1, 0x0);
        gbc.writeMem(0x7d77, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xe85);
        EXPECT(gbc.pc(), 0x7d79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0112
        gbc.setState(0x60d7, 0x7cb2, 0x62e0, 0x4ca3, 0xfcc9, 0xd72b, 0x0, 0x0);
        gbc.writeMem(0x60d7, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x7cb2);
        EXPECT(gbc.pc(), 0x60d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0113
        gbc.setState(0x315, 0xe29c, 0xa3e0, 0x9574, 0x2d8f, 0xf22c, 0x1, 0x0);
        gbc.writeMem(0x315, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe29c);
        EXPECT(gbc.pc(), 0x317);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0114
        gbc.setState(0xc7fe, 0x6630, 0x1f20, 0xad26, 0x190, 0x971b, 0x1, 0x0);
        gbc.writeMem(0xc7fe, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6630);
        EXPECT(gbc.pc(), 0xc800);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7fe), 0xcb);
        EXPECT(gbc.readMem(0xc7ff), 0xa9);
        // CB A9 0115
        gbc.setState(0x8712, 0x314, 0xe870, 0xe2c6, 0x443d, 0x1015, 0x1, 0x0);
        gbc.writeMem(0x8712, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x314);
        EXPECT(gbc.pc(), 0x8714);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8712), 0xcb);
        EXPECT(gbc.readMem(0x8713), 0xa9);
        // CB A9 0116
        gbc.setState(0x24a8, 0x431b, 0x3920, 0xe5a9, 0xb52e, 0x8fd5, 0x0, 0x0);
        gbc.writeMem(0x24a8, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x431b);
        EXPECT(gbc.pc(), 0x24aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0117
        gbc.setState(0x434, 0xfbf1, 0xb4d0, 0x3872, 0x7c3c, 0xb6be, 0x0, 0x1);
        gbc.writeMem(0x434, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xfbf1);
        EXPECT(gbc.pc(), 0x436);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0118
        gbc.setState(0x468e, 0x9491, 0x4e80, 0xf077, 0x1ce1, 0x8a93, 0x0, 0x1);
        gbc.writeMem(0x468e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x9491);
        EXPECT(gbc.pc(), 0x4690);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0119
        gbc.setState(0xd49b, 0x927f, 0xb510, 0xb8ca, 0x4408, 0x733e, 0x1, 0x0);
        gbc.writeMem(0xd49b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x927f);
        EXPECT(gbc.pc(), 0xd49d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd49b), 0xcb);
        EXPECT(gbc.readMem(0xd49c), 0xa9);
        // CB A9 011A
        gbc.setState(0x54c8, 0xb7bb, 0xa10, 0xa05d, 0x7de2, 0xf07, 0x0, 0x1);
        gbc.writeMem(0x54c8, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb7bb);
        EXPECT(gbc.pc(), 0x54ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 011B
        gbc.setState(0x5be0, 0x2209, 0x40d0, 0xf37f, 0x436e, 0x6030, 0x1, 0x0);
        gbc.writeMem(0x5be0, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2209);
        EXPECT(gbc.pc(), 0x5be2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 011C
        gbc.setState(0xd445, 0xba, 0x5140, 0x7fd5, 0x48ea, 0x3c03, 0x1, 0x0);
        gbc.writeMem(0xd445, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xba);
        EXPECT(gbc.pc(), 0xd447);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd445), 0xcb);
        EXPECT(gbc.readMem(0xd446), 0xa9);
        // CB A9 011D
        gbc.setState(0x5f8b, 0xf815, 0x54e0, 0x4d09, 0x3f28, 0xe11d, 0x1, 0x1);
        gbc.writeMem(0x5f8b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xf815);
        EXPECT(gbc.pc(), 0x5f8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 011E
        gbc.setState(0x8e2f, 0x5fed, 0xb7d0, 0x9025, 0xe0bb, 0x313f, 0x0, 0x1);
        gbc.writeMem(0x8e2f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x5fed);
        EXPECT(gbc.pc(), 0x8e31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e2f), 0xcb);
        EXPECT(gbc.readMem(0x8e30), 0xa9);
        // CB A9 011F
        gbc.setState(0x2d6a, 0x1307, 0xebc0, 0x86cc, 0xbb90, 0x565c, 0x1, 0x1);
        gbc.writeMem(0x2d6a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x1307);
        EXPECT(gbc.pc(), 0x2d6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0120
        gbc.setState(0x32f7, 0x7fc1, 0x5170, 0xc9aa, 0xf35, 0xb574, 0x0, 0x1);
        gbc.writeMem(0x32f7, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x7fc1);
        EXPECT(gbc.pc(), 0x32f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0121
        gbc.setState(0xbd74, 0xc863, 0xe7a0, 0x4285, 0xcb74, 0xcc47, 0x0, 0x1);
        gbc.writeMem(0xbd74, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xc863);
        EXPECT(gbc.pc(), 0xbd76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd74), 0xcb);
        EXPECT(gbc.readMem(0xbd75), 0xa9);
        // CB A9 0122
        gbc.setState(0x5a50, 0xc919, 0xd490, 0xc28f, 0x20af, 0x7b58, 0x0, 0x1);
        gbc.writeMem(0x5a50, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc919);
        EXPECT(gbc.pc(), 0x5a52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0123
        gbc.setState(0xacae, 0x7695, 0xb2f0, 0xd16a, 0xb18c, 0x1e3, 0x0, 0x1);
        gbc.writeMem(0xacae, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x7695);
        EXPECT(gbc.pc(), 0xacb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacae), 0xcb);
        EXPECT(gbc.readMem(0xacaf), 0xa9);
        // CB A9 0124
        gbc.setState(0xd8d0, 0xab35, 0xbb70, 0x1a8d, 0xfe94, 0xe505, 0x1, 0x0);
        gbc.writeMem(0xd8d0, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xab35);
        EXPECT(gbc.pc(), 0xd8d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8d0), 0xcb);
        EXPECT(gbc.readMem(0xd8d1), 0xa9);
        // CB A9 0125
        gbc.setState(0x89be, 0xa674, 0x14e0, 0x3c60, 0x4112, 0x602a, 0x1, 0x0);
        gbc.writeMem(0x89be, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xa674);
        EXPECT(gbc.pc(), 0x89c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89be), 0xcb);
        EXPECT(gbc.readMem(0x89bf), 0xa9);
        // CB A9 0128
        gbc.setState(0x8e83, 0x1e7c, 0xcc30, 0xa7b9, 0xeb, 0xd004, 0x0, 0x0);
        gbc.writeMem(0x8e83, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x1e7c);
        EXPECT(gbc.pc(), 0x8e85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e83), 0xcb);
        EXPECT(gbc.readMem(0x8e84), 0xa9);
        // CB A9 0129
        gbc.setState(0x1bce, 0x3d5d, 0x5780, 0x8d2d, 0xb5c, 0x59a, 0x1, 0x0);
        gbc.writeMem(0x1bce, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x3d5d);
        EXPECT(gbc.pc(), 0x1bd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 012A
        gbc.setState(0x1a33, 0xed95, 0x7c60, 0xc88d, 0xd892, 0x4f76, 0x1, 0x1);
        gbc.writeMem(0x1a33, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xed95);
        EXPECT(gbc.pc(), 0x1a35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 012B
        gbc.setState(0xd89c, 0x8e36, 0x3ae0, 0x8b96, 0x9368, 0x9e47, 0x1, 0x0);
        gbc.writeMem(0xd89c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x8e36);
        EXPECT(gbc.pc(), 0xd89e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd89c), 0xcb);
        EXPECT(gbc.readMem(0xd89d), 0xa9);
        // CB A9 012C
        gbc.setState(0xc4c9, 0xd235, 0xf660, 0x9fb9, 0xcde4, 0x8aa9, 0x1, 0x0);
        gbc.writeMem(0xc4c9, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xd235);
        EXPECT(gbc.pc(), 0xc4cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4c9), 0xcb);
        EXPECT(gbc.readMem(0xc4ca), 0xa9);
        // CB A9 012D
        gbc.setState(0x67e0, 0x6e0f, 0xf950, 0x5c8, 0xaa43, 0x7a52, 0x1, 0x0);
        gbc.writeMem(0x67e0, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x6e0f);
        EXPECT(gbc.pc(), 0x67e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 012E
        gbc.setState(0xa2f6, 0xa064, 0x4b50, 0xbd8d, 0x80d6, 0x5f68, 0x0, 0x0);
        gbc.writeMem(0xa2f6, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xa064);
        EXPECT(gbc.pc(), 0xa2f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2f6), 0xcb);
        EXPECT(gbc.readMem(0xa2f7), 0xa9);
        // CB A9 012F
        gbc.setState(0xd2dd, 0x8ad1, 0x2fb0, 0x2a60, 0xedbe, 0x3b2c, 0x1, 0x1);
        gbc.writeMem(0xd2dd, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x8ad1);
        EXPECT(gbc.pc(), 0xd2df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2dd), 0xcb);
        EXPECT(gbc.readMem(0xd2de), 0xa9);
        // CB A9 0130
        gbc.setState(0x1, 0x8d74, 0xf7e0, 0x7c4f, 0xf2aa, 0xb796, 0x0, 0x1);
        gbc.writeMem(0x1, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x8d74);
        EXPECT(gbc.pc(), 0x3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0131
        gbc.setState(0x6bb2, 0x9ea5, 0x7c0, 0x510b, 0x490b, 0xb849, 0x0, 0x1);
        gbc.writeMem(0x6bb2, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x9ea5);
        EXPECT(gbc.pc(), 0x6bb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0132
        gbc.setState(0x9e4d, 0x97a8, 0x2c70, 0x5ac1, 0xbf19, 0x3855, 0x0, 0x0);
        gbc.writeMem(0x9e4d, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x97a8);
        EXPECT(gbc.pc(), 0x9e4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e4d), 0xcb);
        EXPECT(gbc.readMem(0x9e4e), 0xa9);
        // CB A9 0133
        gbc.setState(0xae1, 0x1ff0, 0x1cc0, 0x908b, 0xbcf6, 0x3f54, 0x1, 0x1);
        gbc.writeMem(0xae1, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x1ff0);
        EXPECT(gbc.pc(), 0xae3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0134
        gbc.setState(0xd250, 0xa5de, 0xbab0, 0x1818, 0xb6ed, 0xa3f9, 0x0, 0x0);
        gbc.writeMem(0xd250, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xa5de);
        EXPECT(gbc.pc(), 0xd252);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd250), 0xcb);
        EXPECT(gbc.readMem(0xd251), 0xa9);
        // CB A9 0135
        gbc.setState(0xcc57, 0xc8f2, 0x1360, 0x61b8, 0xaf4d, 0xa542, 0x0, 0x1);
        gbc.writeMem(0xcc57, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xc8f2);
        EXPECT(gbc.pc(), 0xcc59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc57), 0xcb);
        EXPECT(gbc.readMem(0xcc58), 0xa9);
        // CB A9 0136
        gbc.setState(0x60c3, 0xbe92, 0x1980, 0xda24, 0x5732, 0x7ea4, 0x0, 0x0);
        gbc.writeMem(0x60c3, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xbe92);
        EXPECT(gbc.pc(), 0x60c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0137
        gbc.setState(0x5176, 0xf3ae, 0xb780, 0xb66d, 0x55b1, 0xb713, 0x0, 0x0);
        gbc.writeMem(0x5176, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf3ae);
        EXPECT(gbc.pc(), 0x5178);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0138
        gbc.setState(0xbd7f, 0xfcf7, 0xc2a0, 0x472d, 0x214f, 0xf565, 0x1, 0x0);
        gbc.writeMem(0xbd7f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xfcf7);
        EXPECT(gbc.pc(), 0xbd81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd7f), 0xcb);
        EXPECT(gbc.readMem(0xbd80), 0xa9);
        // CB A9 0139
        gbc.setState(0x50c4, 0x1047, 0xf950, 0xde59, 0x8b49, 0x50f4, 0x1, 0x1);
        gbc.writeMem(0x50c4, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x1047);
        EXPECT(gbc.pc(), 0x50c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 013A
        gbc.setState(0x7a6e, 0x19dd, 0xe170, 0xaba, 0x6c8e, 0xc28a, 0x0, 0x0);
        gbc.writeMem(0x7a6e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x19dd);
        EXPECT(gbc.pc(), 0x7a70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 013B
        gbc.setState(0xbc3f, 0x699f, 0xa4d0, 0xd50, 0x81f, 0x8796, 0x1, 0x1);
        gbc.writeMem(0xbc3f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x699f);
        EXPECT(gbc.pc(), 0xbc41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc3f), 0xcb);
        EXPECT(gbc.readMem(0xbc40), 0xa9);
        // CB A9 013C
        gbc.setState(0x665f, 0x907d, 0x29d0, 0xc481, 0xcde7, 0x915e, 0x1, 0x1);
        gbc.writeMem(0x665f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x907d);
        EXPECT(gbc.pc(), 0x6661);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 013D
        gbc.setState(0x2892, 0x92ac, 0x40d0, 0x5cd5, 0x8397, 0x975d, 0x1, 0x0);
        gbc.writeMem(0x2892, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x92ac);
        EXPECT(gbc.pc(), 0x2894);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 013E
        gbc.setState(0xe73a, 0xbf2f, 0x41e0, 0x790b, 0x32b1, 0x8a4e, 0x1, 0x1);
        gbc.writeMem(0xe73a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xbf2f);
        EXPECT(gbc.pc(), 0xe73c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe73a), 0xcb);
        EXPECT(gbc.readMem(0xe73b), 0xa9);
        // CB A9 013F
        gbc.setState(0x144b, 0xb034, 0x7540, 0x1d08, 0x80c0, 0x55d, 0x1, 0x0);
        gbc.writeMem(0x144b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb034);
        EXPECT(gbc.pc(), 0x144d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0140
        gbc.setState(0x1c57, 0xfbf8, 0x2bf0, 0xa0da, 0x5d50, 0xe5e1, 0x1, 0x1);
        gbc.writeMem(0x1c57, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xfbf8);
        EXPECT(gbc.pc(), 0x1c59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0141
        gbc.setState(0x73e4, 0x5c57, 0x1950, 0xef1e, 0xc8d5, 0x8552, 0x1, 0x1);
        gbc.writeMem(0x73e4, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x5c57);
        EXPECT(gbc.pc(), 0x73e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0142
        gbc.setState(0xd97b, 0x7408, 0x7750, 0x49fc, 0x460d, 0x9d99, 0x1, 0x0);
        gbc.writeMem(0xd97b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x7408);
        EXPECT(gbc.pc(), 0xd97d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd97b), 0xcb);
        EXPECT(gbc.readMem(0xd97c), 0xa9);
        // CB A9 0143
        gbc.setState(0xf05, 0x94f, 0x2390, 0xcb94, 0x5281, 0xd64, 0x0, 0x1);
        gbc.writeMem(0xf05, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x94f);
        EXPECT(gbc.pc(), 0xf07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0144
        gbc.setState(0x6979, 0x355e, 0x1820, 0x622a, 0x48e8, 0x9709, 0x0, 0x0);
        gbc.writeMem(0x6979, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x355e);
        EXPECT(gbc.pc(), 0x697b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0145
        gbc.setState(0xe3dc, 0x37d8, 0x3060, 0x3626, 0x9a0b, 0xad6e, 0x0, 0x1);
        gbc.writeMem(0xe3dc, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x37d8);
        EXPECT(gbc.pc(), 0xe3de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3dc), 0xcb);
        EXPECT(gbc.readMem(0xe3dd), 0xa9);
        // CB A9 0146
        gbc.setState(0x50af, 0x67dc, 0x77a0, 0x771d, 0x3268, 0xa4dc, 0x0, 0x0);
        gbc.writeMem(0x50af, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x67dc);
        EXPECT(gbc.pc(), 0x50b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0148
        gbc.setState(0x7d07, 0xfa70, 0x4460, 0x4910, 0x5179, 0x6cfa, 0x0, 0x1);
        gbc.writeMem(0x7d07, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xfa70);
        EXPECT(gbc.pc(), 0x7d09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0149
        gbc.setState(0x5e17, 0x58fc, 0xef60, 0x82de, 0xc375, 0x96a6, 0x0, 0x0);
        gbc.writeMem(0x5e17, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x58fc);
        EXPECT(gbc.pc(), 0x5e19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 014A
        gbc.setState(0xd0c, 0x66e8, 0x3610, 0x7592, 0xd6c4, 0x4d3e, 0x1, 0x1);
        gbc.writeMem(0xd0c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x66e8);
        EXPECT(gbc.pc(), 0xd0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 014B
        gbc.setState(0x955a, 0xeb56, 0x1bb0, 0x461c, 0xad0b, 0x2485, 0x0, 0x0);
        gbc.writeMem(0x955a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xeb56);
        EXPECT(gbc.pc(), 0x955c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x955a), 0xcb);
        EXPECT(gbc.readMem(0x955b), 0xa9);
        // CB A9 014C
        gbc.setState(0xcf7e, 0x33c9, 0xc490, 0xacd7, 0xeeb2, 0x85a9, 0x1, 0x1);
        gbc.writeMem(0xcf7e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x33c9);
        EXPECT(gbc.pc(), 0xcf80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf7e), 0xcb);
        EXPECT(gbc.readMem(0xcf7f), 0xa9);
        // CB A9 014D
        gbc.setState(0x40b7, 0x7510, 0x29d0, 0x4435, 0xf1ee, 0x43e0, 0x1, 0x1);
        gbc.writeMem(0x40b7, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x7510);
        EXPECT(gbc.pc(), 0x40b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 014E
        gbc.setState(0x5a1f, 0x8498, 0x7a10, 0x89bc, 0xfcf8, 0x5207, 0x0, 0x0);
        gbc.writeMem(0x5a1f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x8498);
        EXPECT(gbc.pc(), 0x5a21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 014F
        gbc.setState(0x654d, 0x1502, 0xf1e0, 0x9f, 0x781d, 0x7366, 0x0, 0x0);
        gbc.writeMem(0x654d, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x1502);
        EXPECT(gbc.pc(), 0x654f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0150
        gbc.setState(0xb3da, 0x9995, 0xb20, 0xf699, 0xd526, 0x3ca7, 0x0, 0x0);
        gbc.writeMem(0xb3da, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x9995);
        EXPECT(gbc.pc(), 0xb3dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3da), 0xcb);
        EXPECT(gbc.readMem(0xb3db), 0xa9);
        // CB A9 0151
        gbc.setState(0xb483, 0x6349, 0xb220, 0x518, 0x684e, 0x63f7, 0x0, 0x1);
        gbc.writeMem(0xb483, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6349);
        EXPECT(gbc.pc(), 0xb485);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb483), 0xcb);
        EXPECT(gbc.readMem(0xb484), 0xa9);
        // CB A9 0152
        gbc.setState(0xb5dc, 0xe1f3, 0xcdd0, 0x2aa0, 0xaf4a, 0xfda0, 0x0, 0x1);
        gbc.writeMem(0xb5dc, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xe1f3);
        EXPECT(gbc.pc(), 0xb5de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5dc), 0xcb);
        EXPECT(gbc.readMem(0xb5dd), 0xa9);
        // CB A9 0155
        gbc.setState(0xd8f0, 0xc4, 0x18a0, 0x9793, 0x64b5, 0xbd3a, 0x1, 0x0);
        gbc.writeMem(0xd8f0, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc4);
        EXPECT(gbc.pc(), 0xd8f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8f0), 0xcb);
        EXPECT(gbc.readMem(0xd8f1), 0xa9);
        // CB A9 0156
        gbc.setState(0x4629, 0x4a58, 0xed10, 0x73bd, 0x33e5, 0x2c3, 0x1, 0x0);
        gbc.writeMem(0x4629, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x4a58);
        EXPECT(gbc.pc(), 0x462b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0157
        gbc.setState(0xa87b, 0xc880, 0xd290, 0x9b86, 0x9414, 0xb2ad, 0x1, 0x0);
        gbc.writeMem(0xa87b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc880);
        EXPECT(gbc.pc(), 0xa87d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa87b), 0xcb);
        EXPECT(gbc.readMem(0xa87c), 0xa9);
        // CB A9 0158
        gbc.setState(0x7f49, 0x9b34, 0xdb70, 0x2906, 0xc375, 0x1bba, 0x1, 0x1);
        gbc.writeMem(0x7f49, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x9b34);
        EXPECT(gbc.pc(), 0x7f4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0159
        gbc.setState(0xb5b0, 0x373f, 0xe530, 0xe4ec, 0x45a8, 0xfda6, 0x0, 0x1);
        gbc.writeMem(0xb5b0, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x373f);
        EXPECT(gbc.pc(), 0xb5b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5b0), 0xcb);
        EXPECT(gbc.readMem(0xb5b1), 0xa9);
        // CB A9 015A
        gbc.setState(0x6ac7, 0xf865, 0x15c0, 0x4f33, 0xf91b, 0x32f8, 0x1, 0x1);
        gbc.writeMem(0x6ac7, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf865);
        EXPECT(gbc.pc(), 0x6ac9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 015B
        gbc.setState(0xb9b6, 0x2ce6, 0xecf0, 0x7bee, 0xa3f0, 0x968a, 0x0, 0x1);
        gbc.writeMem(0xb9b6, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x2ce6);
        EXPECT(gbc.pc(), 0xb9b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9b6), 0xcb);
        EXPECT(gbc.readMem(0xb9b7), 0xa9);
        // CB A9 015D
        gbc.setState(0xb454, 0xbe82, 0x78b0, 0x1a0e, 0xc940, 0x9a70, 0x1, 0x1);
        gbc.writeMem(0xb454, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xbe82);
        EXPECT(gbc.pc(), 0xb456);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb454), 0xcb);
        EXPECT(gbc.readMem(0xb455), 0xa9);
        // CB A9 015E
        gbc.setState(0x4fc7, 0x659d, 0xf6f0, 0x476f, 0x1736, 0x5613, 0x0, 0x1);
        gbc.writeMem(0x4fc7, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x659d);
        EXPECT(gbc.pc(), 0x4fc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 015F
        gbc.setState(0xe124, 0x1cef, 0xfa90, 0x26de, 0xd257, 0x38db, 0x1, 0x0);
        gbc.writeMem(0xe124, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x1cef);
        EXPECT(gbc.pc(), 0xe126);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe124), 0xcb);
        EXPECT(gbc.readMem(0xe125), 0xa9);
        // CB A9 0160
        gbc.setState(0x730a, 0x6667, 0xfad0, 0xabef, 0xd5bc, 0xd45c, 0x1, 0x1);
        gbc.writeMem(0x730a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x6667);
        EXPECT(gbc.pc(), 0x730c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0161
        gbc.setState(0x8f5e, 0xbfd6, 0x4840, 0xbee6, 0xbfad, 0x67e5, 0x1, 0x1);
        gbc.writeMem(0x8f5e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xbfd6);
        EXPECT(gbc.pc(), 0x8f60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f5e), 0xcb);
        EXPECT(gbc.readMem(0x8f5f), 0xa9);
        // CB A9 0162
        gbc.setState(0x184, 0x4aaa, 0xb1a0, 0xc597, 0xfce3, 0x3acd, 0x0, 0x0);
        gbc.writeMem(0x184, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x4aaa);
        EXPECT(gbc.pc(), 0x186);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0163
        gbc.setState(0xa9c1, 0x8aba, 0x94d0, 0x61a3, 0x58c5, 0x7f81, 0x1, 0x1);
        gbc.writeMem(0xa9c1, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x8aba);
        EXPECT(gbc.pc(), 0xa9c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9c1), 0xcb);
        EXPECT(gbc.readMem(0xa9c2), 0xa9);
        // CB A9 0164
        gbc.setState(0xb896, 0x5de, 0x550, 0x5600, 0xf43a, 0x81a7, 0x0, 0x0);
        gbc.writeMem(0xb896, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x5de);
        EXPECT(gbc.pc(), 0xb898);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb896), 0xcb);
        EXPECT(gbc.readMem(0xb897), 0xa9);
        // CB A9 0165
        gbc.setState(0x3c05, 0xc4fa, 0xd330, 0x76bc, 0x652a, 0x2d2c, 0x0, 0x1);
        gbc.writeMem(0x3c05, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xc4fa);
        EXPECT(gbc.pc(), 0x3c07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0166
        gbc.setState(0x934d, 0xaca7, 0x5a20, 0xddb7, 0x22ce, 0x2378, 0x1, 0x0);
        gbc.writeMem(0x934d, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xaca7);
        EXPECT(gbc.pc(), 0x934f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x934d), 0xcb);
        EXPECT(gbc.readMem(0x934e), 0xa9);
        // CB A9 0167
        gbc.setState(0x46d, 0x68d6, 0x2b70, 0x4674, 0xab2c, 0xa68c, 0x1, 0x0);
        gbc.writeMem(0x46d, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x68d6);
        EXPECT(gbc.pc(), 0x46f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0168
        gbc.setState(0xcdac, 0xf559, 0xd2f0, 0x7248, 0xfeab, 0xa90b, 0x0, 0x1);
        gbc.writeMem(0xcdac, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xf559);
        EXPECT(gbc.pc(), 0xcdae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdac), 0xcb);
        EXPECT(gbc.readMem(0xcdad), 0xa9);
        // CB A9 0169
        gbc.setState(0xe828, 0x76dd, 0xd730, 0xb31, 0x267a, 0x24be, 0x1, 0x1);
        gbc.writeMem(0xe828, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x76dd);
        EXPECT(gbc.pc(), 0xe82a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe828), 0xcb);
        EXPECT(gbc.readMem(0xe829), 0xa9);
        // CB A9 016A
        gbc.setState(0x7d08, 0x0, 0xa270, 0x5bc7, 0x5aca, 0xe9c6, 0x0, 0x1);
        gbc.writeMem(0x7d08, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x0);
        EXPECT(gbc.pc(), 0x7d0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 016B
        gbc.setState(0x2749, 0x40e6, 0xa40, 0xdeda, 0x7adb, 0x2379, 0x0, 0x1);
        gbc.writeMem(0x2749, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x40e6);
        EXPECT(gbc.pc(), 0x274b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 016C
        gbc.setState(0x48dd, 0xd606, 0x4270, 0xaedb, 0xd826, 0x97b8, 0x0, 0x0);
        gbc.writeMem(0x48dd, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd606);
        EXPECT(gbc.pc(), 0x48df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 016E
        gbc.setState(0x2264, 0x19a0, 0x5260, 0x761b, 0xc899, 0xcc3c, 0x1, 0x0);
        gbc.writeMem(0x2264, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x19a0);
        EXPECT(gbc.pc(), 0x2266);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 016F
        gbc.setState(0x9fbf, 0x2bab, 0xce30, 0xfe56, 0x8849, 0x2efb, 0x0, 0x0);
        gbc.writeMem(0x9fbf, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x2bab);
        EXPECT(gbc.pc(), 0x9fc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fbf), 0xcb);
        EXPECT(gbc.readMem(0x9fc0), 0xa9);
        // CB A9 0170
        gbc.setState(0xa485, 0x68dd, 0xae00, 0xa730, 0xc0df, 0x5ac2, 0x1, 0x1);
        gbc.writeMem(0xa485, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x68dd);
        EXPECT(gbc.pc(), 0xa487);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa485), 0xcb);
        EXPECT(gbc.readMem(0xa486), 0xa9);
        // CB A9 0171
        gbc.setState(0x55c7, 0xf0dc, 0x9b10, 0xf264, 0x83d2, 0xd614, 0x1, 0x0);
        gbc.writeMem(0x55c7, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xf0dc);
        EXPECT(gbc.pc(), 0x55c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0172
        gbc.setState(0x322a, 0xb47e, 0x5f00, 0xc4de, 0x4e7d, 0xac2d, 0x1, 0x1);
        gbc.writeMem(0x322a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xb47e);
        EXPECT(gbc.pc(), 0x322c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0173
        gbc.setState(0xa77f, 0x7172, 0xaac0, 0x43d1, 0x8f8e, 0x2244, 0x1, 0x0);
        gbc.writeMem(0xa77f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x7172);
        EXPECT(gbc.pc(), 0xa781);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa77f), 0xcb);
        EXPECT(gbc.readMem(0xa780), 0xa9);
        // CB A9 0174
        gbc.setState(0x3e7a, 0x62a, 0x71f0, 0x8dc, 0x118e, 0x5452, 0x0, 0x0);
        gbc.writeMem(0x3e7a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x62a);
        EXPECT(gbc.pc(), 0x3e7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0175
        gbc.setState(0xd183, 0x2829, 0xde0, 0xcfa3, 0xe8f5, 0x6caa, 0x1, 0x1);
        gbc.writeMem(0xd183, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x2829);
        EXPECT(gbc.pc(), 0xd185);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd183), 0xcb);
        EXPECT(gbc.readMem(0xd184), 0xa9);
        // CB A9 0177
        gbc.setState(0x5d82, 0xc44a, 0x2b70, 0x303f, 0xe0b1, 0xb282, 0x0, 0x0);
        gbc.writeMem(0x5d82, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xc44a);
        EXPECT(gbc.pc(), 0x5d84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 017A
        gbc.setState(0x676f, 0xb52e, 0xee60, 0x2a38, 0x5e19, 0x7ec2, 0x0, 0x1);
        gbc.writeMem(0x676f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xb52e);
        EXPECT(gbc.pc(), 0x6771);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 017B
        gbc.setState(0xcedb, 0x83f2, 0xa3a0, 0xe029, 0x37a9, 0xa55c, 0x0, 0x1);
        gbc.writeMem(0xcedb, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x83f2);
        EXPECT(gbc.pc(), 0xcedd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcedb), 0xcb);
        EXPECT(gbc.readMem(0xcedc), 0xa9);
        // CB A9 017C
        gbc.setState(0x9dcf, 0x6993, 0xfc10, 0x155f, 0x949d, 0x2b57, 0x1, 0x1);
        gbc.writeMem(0x9dcf, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x6993);
        EXPECT(gbc.pc(), 0x9dd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dcf), 0xcb);
        EXPECT(gbc.readMem(0x9dd0), 0xa9);
        // CB A9 017D
        gbc.setState(0x180a, 0x84ac, 0x5460, 0xaef, 0xfdd2, 0xf83f, 0x1, 0x1);
        gbc.writeMem(0x180a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x84ac);
        EXPECT(gbc.pc(), 0x180c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 017E
        gbc.setState(0x8499, 0xca4b, 0xb080, 0x92c0, 0xaf2a, 0x9cb3, 0x0, 0x1);
        gbc.writeMem(0x8499, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xca4b);
        EXPECT(gbc.pc(), 0x849b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8499), 0xcb);
        EXPECT(gbc.readMem(0x849a), 0xa9);
        // CB A9 017F
        gbc.setState(0xc215, 0x3673, 0xd740, 0xead1, 0xcde4, 0x7cce, 0x0, 0x1);
        gbc.writeMem(0xc215, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x3673);
        EXPECT(gbc.pc(), 0xc217);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc215), 0xcb);
        EXPECT(gbc.readMem(0xc216), 0xa9);
        // CB A9 0180
        gbc.setState(0xe314, 0x2d98, 0x7010, 0x8c00, 0x7a15, 0xdd13, 0x1, 0x0);
        gbc.writeMem(0xe314, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2d98);
        EXPECT(gbc.pc(), 0xe316);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe314), 0xcb);
        EXPECT(gbc.readMem(0xe315), 0xa9);
        // CB A9 0181
        gbc.setState(0x49df, 0x24c4, 0x4fb0, 0x144b, 0x7944, 0x82ad, 0x1, 0x0);
        gbc.writeMem(0x49df, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x24c4);
        EXPECT(gbc.pc(), 0x49e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0182
        gbc.setState(0xa968, 0x4f92, 0x10b0, 0x1f53, 0x2afd, 0x4265, 0x1, 0x0);
        gbc.writeMem(0xa968, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x4f92);
        EXPECT(gbc.pc(), 0xa96a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa968), 0xcb);
        EXPECT(gbc.readMem(0xa969), 0xa9);
        // CB A9 0184
        gbc.setState(0x1db4, 0x611a, 0xd200, 0xa7e9, 0x6486, 0x70b4, 0x0, 0x1);
        gbc.writeMem(0x1db4, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x611a);
        EXPECT(gbc.pc(), 0x1db6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0185
        gbc.setState(0x3701, 0x1739, 0x2ba0, 0xa363, 0x93a9, 0x9ea3, 0x1, 0x0);
        gbc.writeMem(0x3701, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x1739);
        EXPECT(gbc.pc(), 0x3703);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0186
        gbc.setState(0x77b4, 0xd47, 0xa100, 0x9c6f, 0x9981, 0x5f02, 0x0, 0x1);
        gbc.writeMem(0x77b4, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xd47);
        EXPECT(gbc.pc(), 0x77b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0187
        gbc.setState(0x7438, 0xd026, 0x9a50, 0x7af3, 0x9ad1, 0x5427, 0x1, 0x0);
        gbc.writeMem(0x7438, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xd026);
        EXPECT(gbc.pc(), 0x743a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0188
        gbc.setState(0x26eb, 0x5293, 0x1f0, 0xd9ea, 0x4953, 0x4c57, 0x1, 0x0);
        gbc.writeMem(0x26eb, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x5293);
        EXPECT(gbc.pc(), 0x26ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0189
        gbc.setState(0x3dd8, 0xcc71, 0x6bd0, 0x4e38, 0x8f58, 0xba52, 0x1, 0x0);
        gbc.writeMem(0x3dd8, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xcc71);
        EXPECT(gbc.pc(), 0x3dda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 018A
        gbc.setState(0x9290, 0xaba5, 0xbe90, 0x1230, 0xeac0, 0x1ec8, 0x0, 0x0);
        gbc.writeMem(0x9290, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xaba5);
        EXPECT(gbc.pc(), 0x9292);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9290), 0xcb);
        EXPECT(gbc.readMem(0x9291), 0xa9);
        // CB A9 018B
        gbc.setState(0x597d, 0xa9f7, 0x8b70, 0xb8eb, 0x5484, 0x71b8, 0x0, 0x0);
        gbc.writeMem(0x597d, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xa9f7);
        EXPECT(gbc.pc(), 0x597f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 018C
        gbc.setState(0x1a0, 0xf42f, 0xc7c0, 0xeacf, 0xa9b8, 0xcb1f, 0x1, 0x1);
        gbc.writeMem(0x1a0, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf42f);
        EXPECT(gbc.pc(), 0x1a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 018D
        gbc.setState(0x80b8, 0x29db, 0x5da0, 0xf034, 0xc2ae, 0xb9c, 0x1, 0x0);
        gbc.writeMem(0x80b8, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x29db);
        EXPECT(gbc.pc(), 0x80ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80b8), 0xcb);
        EXPECT(gbc.readMem(0x80b9), 0xa9);
        // CB A9 018E
        gbc.setState(0x8748, 0x8a07, 0x33e0, 0xdb37, 0x44bc, 0xea18, 0x1, 0x1);
        gbc.writeMem(0x8748, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8a07);
        EXPECT(gbc.pc(), 0x874a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8748), 0xcb);
        EXPECT(gbc.readMem(0x8749), 0xa9);
        // CB A9 018F
        gbc.setState(0xab6c, 0x2215, 0xe280, 0xe6d3, 0x72f9, 0x3c60, 0x0, 0x1);
        gbc.writeMem(0xab6c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2215);
        EXPECT(gbc.pc(), 0xab6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab6c), 0xcb);
        EXPECT(gbc.readMem(0xab6d), 0xa9);
        // CB A9 0190
        gbc.setState(0xb204, 0xc203, 0xaae0, 0x2db4, 0x9b28, 0xf26d, 0x1, 0x0);
        gbc.writeMem(0xb204, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xc203);
        EXPECT(gbc.pc(), 0xb206);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb204), 0xcb);
        EXPECT(gbc.readMem(0xb205), 0xa9);
        // CB A9 0191
        gbc.setState(0x4791, 0x5aed, 0x9a60, 0xc84e, 0xb499, 0x4361, 0x1, 0x1);
        gbc.writeMem(0x4791, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x5aed);
        EXPECT(gbc.pc(), 0x4793);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0192
        gbc.setState(0x8dd0, 0xc345, 0x7ec0, 0x454f, 0xda77, 0x9460, 0x0, 0x1);
        gbc.writeMem(0x8dd0, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xc345);
        EXPECT(gbc.pc(), 0x8dd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dd0), 0xcb);
        EXPECT(gbc.readMem(0x8dd1), 0xa9);
        // CB A9 0193
        gbc.setState(0xb6f, 0xfbc, 0x5270, 0x1e77, 0x24c4, 0xc879, 0x1, 0x1);
        gbc.writeMem(0xb6f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xfbc);
        EXPECT(gbc.pc(), 0xb71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0195
        gbc.setState(0xdcdf, 0xc9c8, 0xd170, 0x3a9e, 0xf925, 0xcee, 0x0, 0x1);
        gbc.writeMem(0xdcdf, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xc9c8);
        EXPECT(gbc.pc(), 0xdce1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcdf), 0xcb);
        EXPECT(gbc.readMem(0xdce0), 0xa9);
        // CB A9 0196
        gbc.setState(0x16dc, 0xc9d3, 0x1fa0, 0x327e, 0xb9ce, 0xfe21, 0x0, 0x1);
        gbc.writeMem(0x16dc, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xc9d3);
        EXPECT(gbc.pc(), 0x16de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0197
        gbc.setState(0xf5d, 0x158f, 0x6d00, 0x73b5, 0x2de, 0x3e77, 0x0, 0x0);
        gbc.writeMem(0xf5d, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x158f);
        EXPECT(gbc.pc(), 0xf5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0198
        gbc.setState(0x247f, 0xf90f, 0xf080, 0xca2a, 0x8b11, 0xd45, 0x1, 0x0);
        gbc.writeMem(0x247f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xf90f);
        EXPECT(gbc.pc(), 0x2481);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0199
        gbc.setState(0x7a12, 0x8d29, 0x8e90, 0xef0c, 0xd8a8, 0x95f, 0x1, 0x1);
        gbc.writeMem(0x7a12, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x8d29);
        EXPECT(gbc.pc(), 0x7a14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 019A
        gbc.setState(0xce7c, 0x2c8, 0xd760, 0xa138, 0xe781, 0x4b0b, 0x1, 0x1);
        gbc.writeMem(0xce7c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x2c8);
        EXPECT(gbc.pc(), 0xce7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce7c), 0xcb);
        EXPECT(gbc.readMem(0xce7d), 0xa9);
        // CB A9 019B
        gbc.setState(0x7ab4, 0x1cb1, 0x31a0, 0xab40, 0x900c, 0x2c42, 0x0, 0x0);
        gbc.writeMem(0x7ab4, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x1cb1);
        EXPECT(gbc.pc(), 0x7ab6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 019C
        gbc.setState(0x530a, 0x38ef, 0x7d80, 0xfdbc, 0x9203, 0x1ec7, 0x1, 0x0);
        gbc.writeMem(0x530a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x38ef);
        EXPECT(gbc.pc(), 0x530c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 019D
        gbc.setState(0xaff5, 0x3669, 0xbe70, 0x4826, 0xe0b9, 0x2bf0, 0x0, 0x0);
        gbc.writeMem(0xaff5, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x3669);
        EXPECT(gbc.pc(), 0xaff7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaff5), 0xcb);
        EXPECT(gbc.readMem(0xaff6), 0xa9);
        // CB A9 019E
        gbc.setState(0xcd80, 0x5025, 0xb1e0, 0x1a87, 0xb613, 0xe8c9, 0x0, 0x1);
        gbc.writeMem(0xcd80, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x5025);
        EXPECT(gbc.pc(), 0xcd82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd80), 0xcb);
        EXPECT(gbc.readMem(0xcd81), 0xa9);
        // CB A9 019F
        gbc.setState(0x4b79, 0x5872, 0x8550, 0xc67, 0x86f4, 0x69dc, 0x0, 0x1);
        gbc.writeMem(0x4b79, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5872);
        EXPECT(gbc.pc(), 0x4b7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 01A0
        gbc.setState(0x3420, 0xa2ed, 0x8fc0, 0xdfd, 0xee22, 0xb386, 0x0, 0x0);
        gbc.writeMem(0x3420, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xa2ed);
        EXPECT(gbc.pc(), 0x3422);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 01A1
        gbc.setState(0xa46e, 0x89ef, 0xf9d0, 0x2fb1, 0x4544, 0x5f26, 0x0, 0x0);
        gbc.writeMem(0xa46e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x89ef);
        EXPECT(gbc.pc(), 0xa470);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa46e), 0xcb);
        EXPECT(gbc.readMem(0xa46f), 0xa9);
        // CB A9 01A2
        gbc.setState(0x69d8, 0x2e75, 0x6620, 0x96e8, 0x8d23, 0x56fa, 0x1, 0x0);
        gbc.writeMem(0x69d8, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x2e75);
        EXPECT(gbc.pc(), 0x69da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 01A3
        gbc.setState(0xb0ea, 0xae73, 0x7630, 0x409, 0xf76d, 0xbc87, 0x1, 0x1);
        gbc.writeMem(0xb0ea, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xae73);
        EXPECT(gbc.pc(), 0xb0ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0ea), 0xcb);
        EXPECT(gbc.readMem(0xb0eb), 0xa9);
        // CB A9 01A4
        gbc.setState(0x5e32, 0xb68b, 0x3d0, 0x6caf, 0x5fc5, 0x5ea, 0x1, 0x1);
        gbc.writeMem(0x5e32, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb68b);
        EXPECT(gbc.pc(), 0x5e34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 01A5
        gbc.setState(0x2373, 0x4805, 0xd0b0, 0x2d11, 0x5095, 0x7d02, 0x1, 0x0);
        gbc.writeMem(0x2373, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x4805);
        EXPECT(gbc.pc(), 0x2375);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 01A6
        gbc.setState(0xc93b, 0xc2a6, 0x23c0, 0x4681, 0x83b2, 0xa8ee, 0x1, 0x0);
        gbc.writeMem(0xc93b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xc2a6);
        EXPECT(gbc.pc(), 0xc93d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc93b), 0xcb);
        EXPECT(gbc.readMem(0xc93c), 0xa9);
        // CB A9 01A7
        gbc.setState(0xecbd, 0x3958, 0x7f40, 0xc860, 0x40c6, 0x5108, 0x0, 0x1);
        gbc.writeMem(0xecbd, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x3958);
        EXPECT(gbc.pc(), 0xecbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecbd), 0xcb);
        EXPECT(gbc.readMem(0xecbe), 0xa9);
        // CB A9 01A8
        gbc.setState(0xab93, 0xed02, 0xecf0, 0x4a1, 0x8442, 0x85e3, 0x0, 0x0);
        gbc.writeMem(0xab93, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xed02);
        EXPECT(gbc.pc(), 0xab95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab93), 0xcb);
        EXPECT(gbc.readMem(0xab94), 0xa9);
        // CB A9 01A9
        gbc.setState(0x99f6, 0x53bc, 0xf3b0, 0x5dc, 0x8ae5, 0x52a2, 0x1, 0x0);
        gbc.writeMem(0x99f6, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x53bc);
        EXPECT(gbc.pc(), 0x99f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99f6), 0xcb);
        EXPECT(gbc.readMem(0x99f7), 0xa9);
        // CB A9 01AB
        gbc.setState(0x43be, 0x3cb2, 0x4b30, 0x175e, 0x1ba1, 0xaf1d, 0x0, 0x1);
        gbc.writeMem(0x43be, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x3cb2);
        EXPECT(gbc.pc(), 0x43c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 01AC
        gbc.setState(0x8c, 0x6817, 0x7350, 0xa84e, 0x252d, 0xd3c7, 0x0, 0x1);
        gbc.writeMem(0x8c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x6817);
        EXPECT(gbc.pc(), 0x8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 01AD
        gbc.setState(0x816f, 0x546a, 0x1310, 0xcb59, 0xc7b4, 0x196c, 0x1, 0x0);
        gbc.writeMem(0x816f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x546a);
        EXPECT(gbc.pc(), 0x8171);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x816f), 0xcb);
        EXPECT(gbc.readMem(0x8170), 0xa9);
        // CB A9 01AF
        gbc.setState(0x4828, 0x88cd, 0x7420, 0x8a2f, 0xac0d, 0x5960, 0x0, 0x0);
        gbc.writeMem(0x4828, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x88cd);
        EXPECT(gbc.pc(), 0x482a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 01B0
        gbc.setState(0x2ba8, 0x5d24, 0xb9e0, 0x517b, 0xaac9, 0xa85c, 0x0, 0x1);
        gbc.writeMem(0x2ba8, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x5d24);
        EXPECT(gbc.pc(), 0x2baa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 01B1
        gbc.setState(0x1248, 0x9a9e, 0xbb20, 0xf5ed, 0x89bb, 0x28a4, 0x0, 0x0);
        gbc.writeMem(0x1248, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x9a9e);
        EXPECT(gbc.pc(), 0x124a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 01B2
        gbc.setState(0xb569, 0x7532, 0xfae0, 0xed8b, 0x4df3, 0xd68f, 0x0, 0x1);
        gbc.writeMem(0xb569, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x7532);
        EXPECT(gbc.pc(), 0xb56b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb569), 0xcb);
        EXPECT(gbc.readMem(0xb56a), 0xa9);
        // CB A9 01B3
        gbc.setState(0x3e8e, 0xba0b, 0xff90, 0x9352, 0x4687, 0x795, 0x0, 0x1);
        gbc.writeMem(0x3e8e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xba0b);
        EXPECT(gbc.pc(), 0x3e90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 01B4
        gbc.setState(0x5a29, 0x46e5, 0xa400, 0x4335, 0xd2b3, 0xb9f8, 0x1, 0x1);
        gbc.writeMem(0x5a29, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x46e5);
        EXPECT(gbc.pc(), 0x5a2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 01B6
        gbc.setState(0x9f21, 0xc469, 0x1250, 0x4484, 0x18b5, 0xefdc, 0x0, 0x0);
        gbc.writeMem(0x9f21, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xc469);
        EXPECT(gbc.pc(), 0x9f23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f21), 0xcb);
        EXPECT(gbc.readMem(0x9f22), 0xa9);
        // CB A9 01B7
        gbc.setState(0x1823, 0x54ef, 0x3a20, 0xf151, 0x309, 0x929b, 0x1, 0x0);
        gbc.writeMem(0x1823, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x54ef);
        EXPECT(gbc.pc(), 0x1825);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 01B9
        gbc.setState(0x2e16, 0x21ce, 0xfa10, 0x8531, 0xa865, 0xcb9b, 0x1, 0x0);
        gbc.writeMem(0x2e16, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x21ce);
        EXPECT(gbc.pc(), 0x2e18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 01BA
        gbc.setState(0x78e9, 0x68aa, 0x2f90, 0x3398, 0x9615, 0x33c5, 0x1, 0x1);
        gbc.writeMem(0x78e9, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x68aa);
        EXPECT(gbc.pc(), 0x78eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 01BB
        gbc.setState(0x4b86, 0x13bf, 0x2570, 0xfde7, 0xe5f8, 0x6a66, 0x1, 0x0);
        gbc.writeMem(0x4b86, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x13bf);
        EXPECT(gbc.pc(), 0x4b88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 01BC
        gbc.setState(0xd573, 0xd36e, 0xf100, 0xebbd, 0x20cf, 0xf1cf, 0x0, 0x1);
        gbc.writeMem(0xd573, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xd36e);
        EXPECT(gbc.pc(), 0xd575);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd573), 0xcb);
        EXPECT(gbc.readMem(0xd574), 0xa9);
        // CB A9 01BD
        gbc.setState(0xf2d, 0x13e4, 0x71e0, 0xd9f8, 0x4d99, 0x8a49, 0x1, 0x0);
        gbc.writeMem(0xf2d, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x13e4);
        EXPECT(gbc.pc(), 0xf2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 01BE
        gbc.setState(0xe387, 0x5e08, 0xc970, 0xb741, 0xa27f, 0xb88b, 0x1, 0x1);
        gbc.writeMem(0xe387, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x5e08);
        EXPECT(gbc.pc(), 0xe389);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe387), 0xcb);
        EXPECT(gbc.readMem(0xe388), 0xa9);
        // CB A9 01BF
        gbc.setState(0xe1d0, 0xff11, 0x5ae0, 0xf2f6, 0xc12b, 0x75e4, 0x1, 0x0);
        gbc.writeMem(0xe1d0, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xff11);
        EXPECT(gbc.pc(), 0xe1d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1d0), 0xcb);
        EXPECT(gbc.readMem(0xe1d1), 0xa9);
        // CB A9 01C0
        gbc.setState(0x1b8c, 0x4980, 0x7860, 0xd4d6, 0x2936, 0x2cda, 0x0, 0x1);
        gbc.writeMem(0x1b8c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x4980);
        EXPECT(gbc.pc(), 0x1b8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 01C1
        gbc.setState(0x42e6, 0x795f, 0xd130, 0x10ac, 0x1def, 0x638e, 0x0, 0x1);
        gbc.writeMem(0x42e6, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x795f);
        EXPECT(gbc.pc(), 0x42e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 01C2
        gbc.setState(0x7464, 0xa853, 0xfcd0, 0xb927, 0xb031, 0x7423, 0x1, 0x1);
        gbc.writeMem(0x7464, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xa853);
        EXPECT(gbc.pc(), 0x7466);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 01C3
        gbc.setState(0xef3e, 0x742e, 0xba0, 0x53e5, 0xda33, 0x8d18, 0x1, 0x0);
        gbc.writeMem(0xef3e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x742e);
        EXPECT(gbc.pc(), 0xef40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef3e), 0xcb);
        EXPECT(gbc.readMem(0xef3f), 0xa9);
        // CB A9 01C4
        gbc.setState(0xbdcb, 0x29, 0x33b0, 0x7824, 0x95bd, 0x8ab9, 0x1, 0x0);
        gbc.writeMem(0xbdcb, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x29);
        EXPECT(gbc.pc(), 0xbdcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdcb), 0xcb);
        EXPECT(gbc.readMem(0xbdcc), 0xa9);
        // CB A9 01C6
        gbc.setState(0xc8d5, 0x934d, 0x9c70, 0xb8a3, 0xa07e, 0xa810, 0x0, 0x0);
        gbc.writeMem(0xc8d5, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x934d);
        EXPECT(gbc.pc(), 0xc8d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8d5), 0xcb);
        EXPECT(gbc.readMem(0xc8d6), 0xa9);
        // CB A9 01C7
        gbc.setState(0xe9e7, 0xb457, 0xf8c0, 0xe89c, 0x12f3, 0x582c, 0x0, 0x1);
        gbc.writeMem(0xe9e7, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xb457);
        EXPECT(gbc.pc(), 0xe9e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9e7), 0xcb);
        EXPECT(gbc.readMem(0xe9e8), 0xa9);
        // CB A9 01C8
        gbc.setState(0x2e33, 0xc3c0, 0x740, 0x1467, 0xa205, 0x6116, 0x0, 0x1);
        gbc.writeMem(0x2e33, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xc3c0);
        EXPECT(gbc.pc(), 0x2e35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 01CA
        gbc.setState(0x973f, 0xe9a6, 0x7240, 0xc9ca, 0xa085, 0x7eac, 0x1, 0x1);
        gbc.writeMem(0x973f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xe9a6);
        EXPECT(gbc.pc(), 0x9741);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x973f), 0xcb);
        EXPECT(gbc.readMem(0x9740), 0xa9);
        // CB A9 01CB
        gbc.setState(0x976c, 0x2391, 0xac60, 0x7a1b, 0xa6fd, 0x8faa, 0x0, 0x0);
        gbc.writeMem(0x976c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x2391);
        EXPECT(gbc.pc(), 0x976e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x976c), 0xcb);
        EXPECT(gbc.readMem(0x976d), 0xa9);
        // CB A9 01CC
        gbc.setState(0x7e08, 0xe610, 0xa220, 0x2f3d, 0x5e80, 0x5118, 0x0, 0x1);
        gbc.writeMem(0x7e08, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xe610);
        EXPECT(gbc.pc(), 0x7e0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 01CD
        gbc.setState(0x113e, 0x59fb, 0xc4c0, 0xa9d7, 0x8994, 0x5d81, 0x0, 0x1);
        gbc.writeMem(0x113e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x59fb);
        EXPECT(gbc.pc(), 0x1140);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 01CE
        gbc.setState(0xf87, 0x6bff, 0x5c80, 0x75c5, 0x86d4, 0xcbbd, 0x1, 0x0);
        gbc.writeMem(0xf87, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x6bff);
        EXPECT(gbc.pc(), 0xf89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 01CF
        gbc.setState(0xe179, 0x4855, 0xaec0, 0x7060, 0x92c1, 0x9862, 0x1, 0x0);
        gbc.writeMem(0xe179, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4855);
        EXPECT(gbc.pc(), 0xe17b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe179), 0xcb);
        EXPECT(gbc.readMem(0xe17a), 0xa9);
        // CB A9 01D0
        gbc.setState(0x577e, 0x79a0, 0xd6f0, 0xb09, 0x51a2, 0x8903, 0x1, 0x1);
        gbc.writeMem(0x577e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x79a0);
        EXPECT(gbc.pc(), 0x5780);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 01D1
        gbc.setState(0xc972, 0x6be6, 0xf5a0, 0xb874, 0x54be, 0xc9a4, 0x1, 0x1);
        gbc.writeMem(0xc972, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x6be6);
        EXPECT(gbc.pc(), 0xc974);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc972), 0xcb);
        EXPECT(gbc.readMem(0xc973), 0xa9);
        // CB A9 01D2
        gbc.setState(0x3301, 0x6f93, 0xd150, 0x3e63, 0x1c38, 0x9b91, 0x0, 0x1);
        gbc.writeMem(0x3301, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x6f93);
        EXPECT(gbc.pc(), 0x3303);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 01D3
        gbc.setState(0xd6f6, 0xc72c, 0x3650, 0x2ca2, 0x41cc, 0x663c, 0x1, 0x1);
        gbc.writeMem(0xd6f6, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xc72c);
        EXPECT(gbc.pc(), 0xd6f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6f6), 0xcb);
        EXPECT(gbc.readMem(0xd6f7), 0xa9);
        // CB A9 01D4
        gbc.setState(0x9738, 0x7d6d, 0x5210, 0xbb20, 0x46c9, 0x8e2a, 0x1, 0x1);
        gbc.writeMem(0x9738, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x7d6d);
        EXPECT(gbc.pc(), 0x973a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9738), 0xcb);
        EXPECT(gbc.readMem(0x9739), 0xa9);
        // CB A9 01D5
        gbc.setState(0x994c, 0xbb89, 0xd760, 0xf019, 0x8613, 0x8d33, 0x1, 0x1);
        gbc.writeMem(0x994c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xbb89);
        EXPECT(gbc.pc(), 0x994e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x994c), 0xcb);
        EXPECT(gbc.readMem(0x994d), 0xa9);
        // CB A9 01D6
        gbc.setState(0x775b, 0x4124, 0x21d0, 0xd217, 0xe195, 0xe05e, 0x0, 0x1);
        gbc.writeMem(0x775b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x4124);
        EXPECT(gbc.pc(), 0x775d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 01D7
        gbc.setState(0x3c79, 0xe08a, 0xcce0, 0x2cee, 0x1084, 0xfbd4, 0x0, 0x1);
        gbc.writeMem(0x3c79, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xe08a);
        EXPECT(gbc.pc(), 0x3c7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 01D8
        gbc.setState(0xdbab, 0xf13d, 0xa730, 0x6ea6, 0x31e0, 0xebcf, 0x1, 0x0);
        gbc.writeMem(0xdbab, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xf13d);
        EXPECT(gbc.pc(), 0xdbad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbab), 0xcb);
        EXPECT(gbc.readMem(0xdbac), 0xa9);
        // CB A9 01D9
        gbc.setState(0x7bb0, 0x1171, 0xbe50, 0x76eb, 0x4b0, 0x3289, 0x1, 0x0);
        gbc.writeMem(0x7bb0, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1171);
        EXPECT(gbc.pc(), 0x7bb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 01DA
        gbc.setState(0x9801, 0xca61, 0xb9e0, 0x2694, 0xc7f1, 0x2fdd, 0x1, 0x1);
        gbc.writeMem(0x9801, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xca61);
        EXPECT(gbc.pc(), 0x9803);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9801), 0xcb);
        EXPECT(gbc.readMem(0x9802), 0xa9);
        // CB A9 01DB
        gbc.setState(0x1b5c, 0x462, 0x2b70, 0x18f1, 0x38b9, 0x388e, 0x0, 0x1);
        gbc.writeMem(0x1b5c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x462);
        EXPECT(gbc.pc(), 0x1b5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 01DC
        gbc.setState(0x1b45, 0xcbcd, 0xaad0, 0x570d, 0x8038, 0xda01, 0x0, 0x1);
        gbc.writeMem(0x1b45, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xcbcd);
        EXPECT(gbc.pc(), 0x1b47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 01DE
        gbc.setState(0xb060, 0xedb9, 0x7600, 0x6c84, 0x2b31, 0xbce5, 0x0, 0x0);
        gbc.writeMem(0xb060, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xedb9);
        EXPECT(gbc.pc(), 0xb062);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb060), 0xcb);
        EXPECT(gbc.readMem(0xb061), 0xa9);
        // CB A9 01DF
        gbc.setState(0x4c7d, 0xb9af, 0x9510, 0xb6ee, 0x7c4f, 0x9c20, 0x1, 0x0);
        gbc.writeMem(0x4c7d, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xb9af);
        EXPECT(gbc.pc(), 0x4c7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 01E0
        gbc.setState(0x1cd2, 0x38a6, 0xc7a0, 0x166c, 0x4416, 0xc394, 0x1, 0x1);
        gbc.writeMem(0x1cd2, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x38a6);
        EXPECT(gbc.pc(), 0x1cd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 01E1
        gbc.setState(0xe794, 0x7f1, 0x2570, 0x4849, 0xb0ac, 0x4927, 0x0, 0x1);
        gbc.writeMem(0xe794, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x7f1);
        EXPECT(gbc.pc(), 0xe796);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe794), 0xcb);
        EXPECT(gbc.readMem(0xe795), 0xa9);
        // CB A9 01E2
        gbc.setState(0x44bd, 0x1ec, 0x68e0, 0x224f, 0x8bd, 0x6a6a, 0x1, 0x1);
        gbc.writeMem(0x44bd, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1ec);
        EXPECT(gbc.pc(), 0x44bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 01E3
        gbc.setState(0x7c14, 0x92e2, 0x86f0, 0xa72a, 0x304a, 0xcefe, 0x1, 0x1);
        gbc.writeMem(0x7c14, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x92e2);
        EXPECT(gbc.pc(), 0x7c16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 01E4
        gbc.setState(0x1e7, 0xe8, 0x8e0, 0xbf09, 0x55c7, 0x14de, 0x0, 0x0);
        gbc.writeMem(0x1e7, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xe8);
        EXPECT(gbc.pc(), 0x1e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 01E5
        gbc.setState(0x909c, 0xad9c, 0x8480, 0xb1b0, 0xe6e1, 0xb4b8, 0x1, 0x1);
        gbc.writeMem(0x909c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xad9c);
        EXPECT(gbc.pc(), 0x909e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x909c), 0xcb);
        EXPECT(gbc.readMem(0x909d), 0xa9);
        // CB A9 01E6
        gbc.setState(0x930d, 0x624f, 0xf7d0, 0xea3a, 0x2508, 0x9096, 0x0, 0x1);
        gbc.writeMem(0x930d, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x624f);
        EXPECT(gbc.pc(), 0x930f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x930d), 0xcb);
        EXPECT(gbc.readMem(0x930e), 0xa9);
        // CB A9 01E7
        gbc.setState(0x8c21, 0xb28c, 0x6670, 0x25d7, 0x7edf, 0x6c7a, 0x0, 0x1);
        gbc.writeMem(0x8c21, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb28c);
        EXPECT(gbc.pc(), 0x8c23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c21), 0xcb);
        EXPECT(gbc.readMem(0x8c22), 0xa9);
        // CB A9 01E8
        gbc.setState(0xe4b7, 0x268a, 0xb000, 0xac3, 0x6123, 0xf7f9, 0x0, 0x1);
        gbc.writeMem(0xe4b7, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x268a);
        EXPECT(gbc.pc(), 0xe4b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4b7), 0xcb);
        EXPECT(gbc.readMem(0xe4b8), 0xa9);
        // CB A9 01E9
        gbc.setState(0xd589, 0x1adc, 0xf060, 0x10b2, 0x23f6, 0x3890, 0x0, 0x1);
        gbc.writeMem(0xd589, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x1adc);
        EXPECT(gbc.pc(), 0xd58b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd589), 0xcb);
        EXPECT(gbc.readMem(0xd58a), 0xa9);
        // CB A9 01EA
        gbc.setState(0xdeaf, 0xe389, 0xc1f0, 0x3c54, 0x7bd3, 0x5bab, 0x1, 0x0);
        gbc.writeMem(0xdeaf, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe389);
        EXPECT(gbc.pc(), 0xdeb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeaf), 0xcb);
        EXPECT(gbc.readMem(0xdeb0), 0xa9);
        // CB A9 01EB
        gbc.setState(0x976, 0xeb66, 0xf830, 0x9975, 0xc538, 0xdb44, 0x0, 0x1);
        gbc.writeMem(0x976, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xeb66);
        EXPECT(gbc.pc(), 0x978);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 01EC
        gbc.setState(0xe15c, 0xb2ed, 0x9d00, 0x1bc4, 0xf8ed, 0x1bf9, 0x1, 0x0);
        gbc.writeMem(0xe15c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xb2ed);
        EXPECT(gbc.pc(), 0xe15e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe15c), 0xcb);
        EXPECT(gbc.readMem(0xe15d), 0xa9);
        // CB A9 01ED
        gbc.setState(0x152d, 0x6688, 0x1470, 0x12d1, 0xdbb2, 0x70a3, 0x1, 0x1);
        gbc.writeMem(0x152d, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6688);
        EXPECT(gbc.pc(), 0x152f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 01EE
        gbc.setState(0xba99, 0x9f45, 0x23b0, 0xbdd2, 0xcbab, 0x5f73, 0x0, 0x1);
        gbc.writeMem(0xba99, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x9f45);
        EXPECT(gbc.pc(), 0xba9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba99), 0xcb);
        EXPECT(gbc.readMem(0xba9a), 0xa9);
        // CB A9 01EF
        gbc.setState(0x8f3, 0x9648, 0x3050, 0x1439, 0xf5b6, 0xf589, 0x1, 0x1);
        gbc.writeMem(0x8f3, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x9648);
        EXPECT(gbc.pc(), 0x8f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 01F0
        gbc.setState(0x5112, 0xcdae, 0xa430, 0x1bcd, 0xb039, 0x216f, 0x0, 0x0);
        gbc.writeMem(0x5112, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xcdae);
        EXPECT(gbc.pc(), 0x5114);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 01F1
        gbc.setState(0x4b7a, 0xc716, 0xc0c0, 0xb38d, 0x9057, 0xf844, 0x1, 0x1);
        gbc.writeMem(0x4b7a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xc716);
        EXPECT(gbc.pc(), 0x4b7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 01F2
        gbc.setState(0xb04e, 0xf03a, 0x77a0, 0x6cb9, 0xf3dd, 0x8e82, 0x0, 0x0);
        gbc.writeMem(0xb04e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xf03a);
        EXPECT(gbc.pc(), 0xb050);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb04e), 0xcb);
        EXPECT(gbc.readMem(0xb04f), 0xa9);
        // CB A9 01F3
        gbc.setState(0xa88, 0x2f57, 0x6a60, 0x826c, 0xbb9, 0x6eda, 0x1, 0x0);
        gbc.writeMem(0xa88, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x2f57);
        EXPECT(gbc.pc(), 0xa8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 01F5
        gbc.setState(0x2f6a, 0x414, 0xe6b0, 0x96ca, 0x9731, 0x5399, 0x0, 0x0);
        gbc.writeMem(0x2f6a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x414);
        EXPECT(gbc.pc(), 0x2f6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 01F6
        gbc.setState(0xaedb, 0xc7d2, 0x69b0, 0x37a1, 0x2977, 0x73d, 0x1, 0x0);
        gbc.writeMem(0xaedb, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc7d2);
        EXPECT(gbc.pc(), 0xaedd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaedb), 0xcb);
        EXPECT(gbc.readMem(0xaedc), 0xa9);
        // CB A9 01F7
        gbc.setState(0x111c, 0x927f, 0x36a0, 0x21a1, 0xbee9, 0xbb3, 0x0, 0x0);
        gbc.writeMem(0x111c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x927f);
        EXPECT(gbc.pc(), 0x111e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 01F8
        gbc.setState(0xe27d, 0x2eb0, 0xd650, 0xbc98, 0xccc7, 0xab19, 0x0, 0x1);
        gbc.writeMem(0xe27d, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x2eb0);
        EXPECT(gbc.pc(), 0xe27f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe27d), 0xcb);
        EXPECT(gbc.readMem(0xe27e), 0xa9);
        // CB A9 01F9
        gbc.setState(0x572f, 0x6e13, 0x88d0, 0xdce1, 0xaa83, 0x63a8, 0x1, 0x0);
        gbc.writeMem(0x572f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x6e13);
        EXPECT(gbc.pc(), 0x5731);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 01FA
        gbc.setState(0x3498, 0x8cd8, 0xa960, 0x4978, 0x7f0c, 0x7966, 0x1, 0x0);
        gbc.writeMem(0x3498, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x8cd8);
        EXPECT(gbc.pc(), 0x349a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 01FB
        gbc.setState(0xc51b, 0xc896, 0x7880, 0x586b, 0x5a11, 0x8f55, 0x1, 0x1);
        gbc.writeMem(0xc51b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xc896);
        EXPECT(gbc.pc(), 0xc51d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc51b), 0xcb);
        EXPECT(gbc.readMem(0xc51c), 0xa9);
        // CB A9 01FD
        gbc.setState(0x4806, 0x15dc, 0x8f20, 0xf16f, 0x4fcf, 0xe5d3, 0x1, 0x1);
        gbc.writeMem(0x4806, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x15dc);
        EXPECT(gbc.pc(), 0x4808);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 01FE
        gbc.setState(0xea38, 0x2695, 0xf8e0, 0x69aa, 0x6ac, 0xaecd, 0x0, 0x1);
        gbc.writeMem(0xea38, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x2695);
        EXPECT(gbc.pc(), 0xea3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea38), 0xcb);
        EXPECT(gbc.readMem(0xea39), 0xa9);
        // CB A9 01FF
        gbc.setState(0xca86, 0xe4be, 0xd40, 0xbe58, 0xc66b, 0x8e2c, 0x0, 0x1);
        gbc.writeMem(0xca86, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe4be);
        EXPECT(gbc.pc(), 0xca88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca86), 0xcb);
        EXPECT(gbc.readMem(0xca87), 0xa9);
        // CB A9 0200
        gbc.setState(0x1fe1, 0x7f9d, 0x3030, 0x91e4, 0xe763, 0x9a38, 0x1, 0x1);
        gbc.writeMem(0x1fe1, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x7f9d);
        EXPECT(gbc.pc(), 0x1fe3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0201
        gbc.setState(0x1e24, 0xdb95, 0x83c0, 0x3c08, 0x7bd3, 0xff29, 0x0, 0x1);
        gbc.writeMem(0x1e24, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xdb95);
        EXPECT(gbc.pc(), 0x1e26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0202
        gbc.setState(0xd5ce, 0x63d7, 0x58a0, 0x8c30, 0x8480, 0xb27, 0x0, 0x1);
        gbc.writeMem(0xd5ce, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x63d7);
        EXPECT(gbc.pc(), 0xd5d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5ce), 0xcb);
        EXPECT(gbc.readMem(0xd5cf), 0xa9);
        // CB A9 0203
        gbc.setState(0x7c99, 0x1122, 0x3f80, 0xd96e, 0x5dde, 0x6f0d, 0x1, 0x1);
        gbc.writeMem(0x7c99, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x1122);
        EXPECT(gbc.pc(), 0x7c9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0204
        gbc.setState(0x708, 0x25f0, 0x30b0, 0x55a7, 0x565f, 0x7a19, 0x1, 0x0);
        gbc.writeMem(0x708, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x25f0);
        EXPECT(gbc.pc(), 0x70a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0205
        gbc.setState(0x3e32, 0x5c35, 0xfcb0, 0xe58f, 0xca45, 0x2ec8, 0x0, 0x0);
        gbc.writeMem(0x3e32, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x5c35);
        EXPECT(gbc.pc(), 0x3e34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0206
        gbc.setState(0xa04a, 0xc65d, 0x3910, 0xc69, 0xcf65, 0xae8c, 0x0, 0x0);
        gbc.writeMem(0xa04a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xc65d);
        EXPECT(gbc.pc(), 0xa04c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa04a), 0xcb);
        EXPECT(gbc.readMem(0xa04b), 0xa9);
        // CB A9 0207
        gbc.setState(0x6702, 0x4409, 0x8350, 0x4a42, 0x7a6a, 0xc171, 0x0, 0x1);
        gbc.writeMem(0x6702, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x4409);
        EXPECT(gbc.pc(), 0x6704);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0208
        gbc.setState(0x7915, 0x81cc, 0x5730, 0xbc75, 0x8229, 0x4bab, 0x1, 0x0);
        gbc.writeMem(0x7915, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x81cc);
        EXPECT(gbc.pc(), 0x7917);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0209
        gbc.setState(0x14af, 0x13a3, 0x9980, 0xd9e2, 0x92b6, 0xcf, 0x1, 0x0);
        gbc.writeMem(0x14af, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x13a3);
        EXPECT(gbc.pc(), 0x14b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 020A
        gbc.setState(0xbdc5, 0xab12, 0x6420, 0xa19a, 0x2308, 0x72cc, 0x1, 0x1);
        gbc.writeMem(0xbdc5, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xab12);
        EXPECT(gbc.pc(), 0xbdc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdc5), 0xcb);
        EXPECT(gbc.readMem(0xbdc6), 0xa9);
        // CB A9 020C
        gbc.setState(0xd385, 0x5dde, 0xead0, 0xca59, 0x9c8d, 0x1964, 0x0, 0x0);
        gbc.writeMem(0xd385, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x5dde);
        EXPECT(gbc.pc(), 0xd387);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd385), 0xcb);
        EXPECT(gbc.readMem(0xd386), 0xa9);
        // CB A9 020D
        gbc.setState(0x7a1a, 0x7e76, 0xa60, 0xb9e1, 0x4d93, 0x1e18, 0x1, 0x1);
        gbc.writeMem(0x7a1a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7e76);
        EXPECT(gbc.pc(), 0x7a1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 020E
        gbc.setState(0x74a1, 0x6619, 0x720, 0xa125, 0x2e3d, 0x3db3, 0x1, 0x1);
        gbc.writeMem(0x74a1, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x6619);
        EXPECT(gbc.pc(), 0x74a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 020F
        gbc.setState(0x4990, 0xe6d8, 0xeda0, 0xe138, 0x2820, 0xf243, 0x0, 0x0);
        gbc.writeMem(0x4990, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xe6d8);
        EXPECT(gbc.pc(), 0x4992);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0210
        gbc.setState(0x6e41, 0x25f1, 0x2310, 0x5d6d, 0x4772, 0xb9d7, 0x0, 0x1);
        gbc.writeMem(0x6e41, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x25f1);
        EXPECT(gbc.pc(), 0x6e43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0211
        gbc.setState(0xad12, 0xa8e7, 0x2a50, 0x4378, 0x6389, 0xe40f, 0x0, 0x1);
        gbc.writeMem(0xad12, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xa8e7);
        EXPECT(gbc.pc(), 0xad14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad12), 0xcb);
        EXPECT(gbc.readMem(0xad13), 0xa9);
        // CB A9 0212
        gbc.setState(0x9573, 0xf557, 0xa7a0, 0x29e5, 0xae19, 0x981, 0x1, 0x0);
        gbc.writeMem(0x9573, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xf557);
        EXPECT(gbc.pc(), 0x9575);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9573), 0xcb);
        EXPECT(gbc.readMem(0x9574), 0xa9);
        // CB A9 0213
        gbc.setState(0x26f8, 0x722, 0xec70, 0x86e7, 0xd2d0, 0x464f, 0x1, 0x0);
        gbc.writeMem(0x26f8, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x722);
        EXPECT(gbc.pc(), 0x26fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0214
        gbc.setState(0xcf7b, 0xade2, 0x5500, 0x85e8, 0x2a2b, 0xecc0, 0x1, 0x0);
        gbc.writeMem(0xcf7b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xade2);
        EXPECT(gbc.pc(), 0xcf7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf7b), 0xcb);
        EXPECT(gbc.readMem(0xcf7c), 0xa9);
        // CB A9 0215
        gbc.setState(0xb2f2, 0xd49b, 0xcbd0, 0x5a72, 0xf688, 0x50f7, 0x1, 0x0);
        gbc.writeMem(0xb2f2, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xd49b);
        EXPECT(gbc.pc(), 0xb2f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2f2), 0xcb);
        EXPECT(gbc.readMem(0xb2f3), 0xa9);
        // CB A9 0216
        gbc.setState(0xb789, 0xf793, 0xe00, 0x154c, 0x93ad, 0xa3f, 0x0, 0x0);
        gbc.writeMem(0xb789, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xf793);
        EXPECT(gbc.pc(), 0xb78b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb789), 0xcb);
        EXPECT(gbc.readMem(0xb78a), 0xa9);
        // CB A9 0217
        gbc.setState(0x65c0, 0xf79f, 0xc1e0, 0xc78, 0x776, 0xb9ef, 0x0, 0x0);
        gbc.writeMem(0x65c0, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xf79f);
        EXPECT(gbc.pc(), 0x65c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0218
        gbc.setState(0x76c9, 0x8d34, 0x3f80, 0xf7b0, 0x35c4, 0xbe24, 0x1, 0x0);
        gbc.writeMem(0x76c9, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8d34);
        EXPECT(gbc.pc(), 0x76cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0219
        gbc.setState(0x1c5e, 0xd8ed, 0xba30, 0xb9a7, 0x6c47, 0x23df, 0x0, 0x1);
        gbc.writeMem(0x1c5e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xd8ed);
        EXPECT(gbc.pc(), 0x1c60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 021A
        gbc.setState(0xda8c, 0xc2bb, 0x1140, 0xba09, 0x5692, 0x813f, 0x0, 0x0);
        gbc.writeMem(0xda8c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xc2bb);
        EXPECT(gbc.pc(), 0xda8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda8c), 0xcb);
        EXPECT(gbc.readMem(0xda8d), 0xa9);
        // CB A9 021B
        gbc.setState(0xc2b7, 0x3a1a, 0xcfb0, 0x1934, 0x69fe, 0xee9e, 0x0, 0x1);
        gbc.writeMem(0xc2b7, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x3a1a);
        EXPECT(gbc.pc(), 0xc2b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2b7), 0xcb);
        EXPECT(gbc.readMem(0xc2b8), 0xa9);
        // CB A9 021C
        gbc.setState(0x2a77, 0x2a44, 0x9d60, 0xa956, 0x4273, 0x4adb, 0x0, 0x0);
        gbc.writeMem(0x2a77, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x2a44);
        EXPECT(gbc.pc(), 0x2a79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 021D
        gbc.setState(0x8a2e, 0xc6, 0x1330, 0x92de, 0x26c7, 0x8dbb, 0x1, 0x1);
        gbc.writeMem(0x8a2e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xc6);
        EXPECT(gbc.pc(), 0x8a30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a2e), 0xcb);
        EXPECT(gbc.readMem(0x8a2f), 0xa9);
        // CB A9 021E
        gbc.setState(0x343f, 0xcca7, 0xd450, 0xdc2c, 0x2900, 0x92ba, 0x0, 0x0);
        gbc.writeMem(0x343f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xcca7);
        EXPECT(gbc.pc(), 0x3441);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 021F
        gbc.setState(0x9d3, 0xde02, 0xb090, 0x3a7c, 0xbf9e, 0xb3c2, 0x1, 0x0);
        gbc.writeMem(0x9d3, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xde02);
        EXPECT(gbc.pc(), 0x9d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0220
        gbc.setState(0x5d81, 0xbda, 0x4b80, 0xdc5a, 0xba97, 0xbe07, 0x1, 0x1);
        gbc.writeMem(0x5d81, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xbda);
        EXPECT(gbc.pc(), 0x5d83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0221
        gbc.setState(0xd36d, 0xd6c1, 0xdd90, 0xdf9f, 0x80e9, 0x7ed9, 0x1, 0x1);
        gbc.writeMem(0xd36d, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xd6c1);
        EXPECT(gbc.pc(), 0xd36f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd36d), 0xcb);
        EXPECT(gbc.readMem(0xd36e), 0xa9);
        // CB A9 0222
        gbc.setState(0x5b25, 0x4422, 0x8760, 0xeb1e, 0x914f, 0x4f9, 0x1, 0x1);
        gbc.writeMem(0x5b25, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x4422);
        EXPECT(gbc.pc(), 0x5b27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0223
        gbc.setState(0x447f, 0x605d, 0x4180, 0x215d, 0xa845, 0x8695, 0x1, 0x0);
        gbc.writeMem(0x447f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x605d);
        EXPECT(gbc.pc(), 0x4481);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0224
        gbc.setState(0x288a, 0x4da5, 0xfd20, 0xc886, 0xab6, 0x4afb, 0x0, 0x0);
        gbc.writeMem(0x288a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x4da5);
        EXPECT(gbc.pc(), 0x288c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0225
        gbc.setState(0xbfaa, 0xacf3, 0xecf0, 0x8c4f, 0x79e4, 0xe231, 0x0, 0x1);
        gbc.writeMem(0xbfaa, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xacf3);
        EXPECT(gbc.pc(), 0xbfac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfaa), 0xcb);
        EXPECT(gbc.readMem(0xbfab), 0xa9);
        // CB A9 0226
        gbc.setState(0x75f7, 0x3327, 0x5fa0, 0x7184, 0x6076, 0x644a, 0x0, 0x0);
        gbc.writeMem(0x75f7, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x3327);
        EXPECT(gbc.pc(), 0x75f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0227
        gbc.setState(0xd7f9, 0xf4fa, 0xdb70, 0x251e, 0xf2f3, 0x6430, 0x0, 0x0);
        gbc.writeMem(0xd7f9, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xf4fa);
        EXPECT(gbc.pc(), 0xd7fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7f9), 0xcb);
        EXPECT(gbc.readMem(0xd7fa), 0xa9);
        // CB A9 0229
        gbc.setState(0x2fbc, 0xd644, 0xb70, 0x2a49, 0x4d7a, 0x3c59, 0x1, 0x1);
        gbc.writeMem(0x2fbc, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xd644);
        EXPECT(gbc.pc(), 0x2fbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 022A
        gbc.setState(0x1029, 0x6a92, 0x2470, 0x4335, 0xd057, 0xc391, 0x1, 0x0);
        gbc.writeMem(0x1029, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x6a92);
        EXPECT(gbc.pc(), 0x102b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 022B
        gbc.setState(0x6649, 0x326, 0xf350, 0x57d3, 0xe42f, 0x3bed, 0x0, 0x1);
        gbc.writeMem(0x6649, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x326);
        EXPECT(gbc.pc(), 0x664b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 022C
        gbc.setState(0xd718, 0x7071, 0xfd10, 0x5862, 0xb8a8, 0xdd2a, 0x0, 0x0);
        gbc.writeMem(0xd718, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x7071);
        EXPECT(gbc.pc(), 0xd71a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd718), 0xcb);
        EXPECT(gbc.readMem(0xd719), 0xa9);
        // CB A9 022D
        gbc.setState(0xc0c2, 0x50c9, 0x24c0, 0x64, 0x167d, 0xdc73, 0x1, 0x0);
        gbc.writeMem(0xc0c2, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x50c9);
        EXPECT(gbc.pc(), 0xc0c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0c2), 0xcb);
        EXPECT(gbc.readMem(0xc0c3), 0xa9);
        // CB A9 022E
        gbc.setState(0x4ecc, 0xa27c, 0xec10, 0xa7f4, 0xd8c, 0x3172, 0x0, 0x0);
        gbc.writeMem(0x4ecc, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xa27c);
        EXPECT(gbc.pc(), 0x4ece);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 022F
        gbc.setState(0x2cc7, 0x292c, 0xe30, 0x9836, 0xa4f9, 0x5583, 0x1, 0x0);
        gbc.writeMem(0x2cc7, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x292c);
        EXPECT(gbc.pc(), 0x2cc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0230
        gbc.setState(0xbbe1, 0xe650, 0x5500, 0x9efa, 0x1664, 0x64aa, 0x1, 0x1);
        gbc.writeMem(0xbbe1, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe650);
        EXPECT(gbc.pc(), 0xbbe3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbe1), 0xcb);
        EXPECT(gbc.readMem(0xbbe2), 0xa9);
        // CB A9 0231
        gbc.setState(0xa735, 0x26ee, 0x4b30, 0xcd1f, 0x565c, 0x7276, 0x0, 0x1);
        gbc.writeMem(0xa735, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x26ee);
        EXPECT(gbc.pc(), 0xa737);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa735), 0xcb);
        EXPECT(gbc.readMem(0xa736), 0xa9);
        // CB A9 0232
        gbc.setState(0x885b, 0xfb4e, 0x1d80, 0xa685, 0xc4f6, 0xb6cc, 0x0, 0x1);
        gbc.writeMem(0x885b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xfb4e);
        EXPECT(gbc.pc(), 0x885d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x885b), 0xcb);
        EXPECT(gbc.readMem(0x885c), 0xa9);
        // CB A9 0233
        gbc.setState(0x2b4e, 0x3be0, 0xd780, 0xe679, 0xa1ec, 0xb1c8, 0x0, 0x1);
        gbc.writeMem(0x2b4e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x3be0);
        EXPECT(gbc.pc(), 0x2b50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0234
        gbc.setState(0xea4f, 0x76e3, 0x94f0, 0x1ba6, 0x8e5f, 0x9d80, 0x1, 0x0);
        gbc.writeMem(0xea4f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x76e3);
        EXPECT(gbc.pc(), 0xea51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea4f), 0xcb);
        EXPECT(gbc.readMem(0xea50), 0xa9);
        // CB A9 0235
        gbc.setState(0xd0a4, 0x30b4, 0x9280, 0x8cdd, 0xeacd, 0xf9cf, 0x0, 0x0);
        gbc.writeMem(0xd0a4, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x30b4);
        EXPECT(gbc.pc(), 0xd0a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0a4), 0xcb);
        EXPECT(gbc.readMem(0xd0a5), 0xa9);
        // CB A9 0236
        gbc.setState(0xb6be, 0x3538, 0x1530, 0x9fa7, 0xe320, 0x9434, 0x1, 0x0);
        gbc.writeMem(0xb6be, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3538);
        EXPECT(gbc.pc(), 0xb6c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6be), 0xcb);
        EXPECT(gbc.readMem(0xb6bf), 0xa9);
        // CB A9 0237
        gbc.setState(0x56ba, 0x2a22, 0x68f0, 0x9a14, 0x2fdd, 0xed96, 0x0, 0x0);
        gbc.writeMem(0x56ba, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x2a22);
        EXPECT(gbc.pc(), 0x56bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0238
        gbc.setState(0xedfd, 0x18e3, 0xfdc0, 0x7024, 0x57d5, 0xc419, 0x1, 0x0);
        gbc.writeMem(0xedfd, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x18e3);
        EXPECT(gbc.pc(), 0xedff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedfd), 0xcb);
        EXPECT(gbc.readMem(0xedfe), 0xa9);
        // CB A9 0239
        gbc.setState(0xa257, 0x6c27, 0xfb0, 0x7e78, 0xf5ba, 0x8d12, 0x0, 0x1);
        gbc.writeMem(0xa257, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x6c27);
        EXPECT(gbc.pc(), 0xa259);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa257), 0xcb);
        EXPECT(gbc.readMem(0xa258), 0xa9);
        // CB A9 023B
        gbc.setState(0x20b3, 0xd49c, 0x7900, 0x72c9, 0xf4eb, 0x385f, 0x1, 0x1);
        gbc.writeMem(0x20b3, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xd49c);
        EXPECT(gbc.pc(), 0x20b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 023D
        gbc.setState(0xaf12, 0x9db2, 0xa840, 0x3d1a, 0x2ef9, 0xce6a, 0x1, 0x0);
        gbc.writeMem(0xaf12, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x9db2);
        EXPECT(gbc.pc(), 0xaf14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf12), 0xcb);
        EXPECT(gbc.readMem(0xaf13), 0xa9);
        // CB A9 023E
        gbc.setState(0x377, 0xc89f, 0xbd70, 0xd338, 0x646e, 0x3cc, 0x0, 0x0);
        gbc.writeMem(0x377, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xc89f);
        EXPECT(gbc.pc(), 0x379);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 023F
        gbc.setState(0x1738, 0x7e4d, 0x9be0, 0x5756, 0x5ade, 0x97c6, 0x0, 0x1);
        gbc.writeMem(0x1738, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x7e4d);
        EXPECT(gbc.pc(), 0x173a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0240
        gbc.setState(0xd213, 0xea70, 0xeae0, 0x39c7, 0x87fe, 0x2d31, 0x0, 0x1);
        gbc.writeMem(0xd213, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xea70);
        EXPECT(gbc.pc(), 0xd215);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd213), 0xcb);
        EXPECT(gbc.readMem(0xd214), 0xa9);
        // CB A9 0241
        gbc.setState(0xdfbd, 0xd99a, 0x93b0, 0x6edb, 0x9ebf, 0xfb7a, 0x1, 0x1);
        gbc.writeMem(0xdfbd, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd99a);
        EXPECT(gbc.pc(), 0xdfbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfbd), 0xcb);
        EXPECT(gbc.readMem(0xdfbe), 0xa9);
        // CB A9 0242
        gbc.setState(0xdf13, 0x3b96, 0xda0, 0xd562, 0x56b8, 0xdea9, 0x0, 0x1);
        gbc.writeMem(0xdf13, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3b96);
        EXPECT(gbc.pc(), 0xdf15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf13), 0xcb);
        EXPECT(gbc.readMem(0xdf14), 0xa9);
        // CB A9 0243
        gbc.setState(0x22bc, 0x6406, 0xd5f0, 0xe272, 0xa865, 0x8395, 0x1, 0x0);
        gbc.writeMem(0x22bc, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x6406);
        EXPECT(gbc.pc(), 0x22be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0244
        gbc.setState(0x2b09, 0xa2c1, 0xafc0, 0x94e9, 0xd1ee, 0x1614, 0x0, 0x0);
        gbc.writeMem(0x2b09, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa2c1);
        EXPECT(gbc.pc(), 0x2b0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0245
        gbc.setState(0x37cb, 0x80bc, 0xaca0, 0x8910, 0xd879, 0x4460, 0x1, 0x0);
        gbc.writeMem(0x37cb, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x80bc);
        EXPECT(gbc.pc(), 0x37cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0246
        gbc.setState(0x87bb, 0x9743, 0xdca0, 0xb400, 0x4d58, 0x9369, 0x1, 0x1);
        gbc.writeMem(0x87bb, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x9743);
        EXPECT(gbc.pc(), 0x87bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87bb), 0xcb);
        EXPECT(gbc.readMem(0x87bc), 0xa9);
        // CB A9 0247
        gbc.setState(0xd55f, 0x2bf2, 0xe1a0, 0x30e9, 0xd5f2, 0x8f9b, 0x1, 0x1);
        gbc.writeMem(0xd55f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x2bf2);
        EXPECT(gbc.pc(), 0xd561);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd55f), 0xcb);
        EXPECT(gbc.readMem(0xd560), 0xa9);
        // CB A9 0248
        gbc.setState(0x6cc5, 0x7bee, 0x7500, 0x9b6c, 0x68b9, 0x6042, 0x0, 0x0);
        gbc.writeMem(0x6cc5, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x7bee);
        EXPECT(gbc.pc(), 0x6cc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0249
        gbc.setState(0x4b78, 0x6f56, 0x8e0, 0x35d0, 0x5c3a, 0xb158, 0x0, 0x0);
        gbc.writeMem(0x4b78, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6f56);
        EXPECT(gbc.pc(), 0x4b7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 024A
        gbc.setState(0xe8d7, 0x48b9, 0xd980, 0xbfbe, 0xcd13, 0x57f4, 0x0, 0x0);
        gbc.writeMem(0xe8d7, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x48b9);
        EXPECT(gbc.pc(), 0xe8d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8d7), 0xcb);
        EXPECT(gbc.readMem(0xe8d8), 0xa9);
        // CB A9 024B
        gbc.setState(0x581c, 0xa274, 0x2f0, 0x7be3, 0xb617, 0x31f7, 0x1, 0x1);
        gbc.writeMem(0x581c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xa274);
        EXPECT(gbc.pc(), 0x581e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 024C
        gbc.setState(0x4106, 0xe3ec, 0xf470, 0xe0e, 0xd261, 0x7c7a, 0x0, 0x0);
        gbc.writeMem(0x4106, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xe3ec);
        EXPECT(gbc.pc(), 0x4108);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 024D
        gbc.setState(0xec6b, 0x5757, 0xd050, 0xcb2f, 0x8095, 0x5418, 0x1, 0x1);
        gbc.writeMem(0xec6b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x5757);
        EXPECT(gbc.pc(), 0xec6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec6b), 0xcb);
        EXPECT(gbc.readMem(0xec6c), 0xa9);
        // CB A9 024E
        gbc.setState(0x210e, 0x45af, 0x7300, 0x8323, 0x4741, 0x3db6, 0x0, 0x1);
        gbc.writeMem(0x210e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x45af);
        EXPECT(gbc.pc(), 0x2110);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 024F
        gbc.setState(0xb79, 0xacfd, 0x50, 0x3990, 0xa94b, 0x393f, 0x0, 0x0);
        gbc.writeMem(0xb79, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xacfd);
        EXPECT(gbc.pc(), 0xb7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0250
        gbc.setState(0x2f, 0x410b, 0xc880, 0x5694, 0xc710, 0x6e47, 0x1, 0x1);
        gbc.writeMem(0x2f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x410b);
        EXPECT(gbc.pc(), 0x31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0251
        gbc.setState(0x3bee, 0x4963, 0x9650, 0x57cc, 0x3021, 0x799f, 0x0, 0x1);
        gbc.writeMem(0x3bee, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4963);
        EXPECT(gbc.pc(), 0x3bf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0252
        gbc.setState(0x94be, 0x8c99, 0xaa00, 0x386c, 0x28c3, 0x4075, 0x1, 0x1);
        gbc.writeMem(0x94be, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x8c99);
        EXPECT(gbc.pc(), 0x94c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94be), 0xcb);
        EXPECT(gbc.readMem(0x94bf), 0xa9);
        // CB A9 0253
        gbc.setState(0xaabd, 0x1a01, 0xb070, 0xccf8, 0x7421, 0x508b, 0x1, 0x1);
        gbc.writeMem(0xaabd, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x1a01);
        EXPECT(gbc.pc(), 0xaabf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaabd), 0xcb);
        EXPECT(gbc.readMem(0xaabe), 0xa9);
        // CB A9 0254
        gbc.setState(0x9d67, 0x594b, 0x8bc0, 0xa94e, 0x21bc, 0x2517, 0x0, 0x1);
        gbc.writeMem(0x9d67, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x594b);
        EXPECT(gbc.pc(), 0x9d69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d67), 0xcb);
        EXPECT(gbc.readMem(0x9d68), 0xa9);
        // CB A9 0255
        gbc.setState(0x9ce4, 0xad9a, 0x20b0, 0x4f9d, 0xc3f5, 0xb11c, 0x1, 0x1);
        gbc.writeMem(0x9ce4, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xad9a);
        EXPECT(gbc.pc(), 0x9ce6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ce4), 0xcb);
        EXPECT(gbc.readMem(0x9ce5), 0xa9);
        // CB A9 0256
        gbc.setState(0xeba, 0x5609, 0xa5e0, 0xd012, 0x14f4, 0x3a5e, 0x0, 0x0);
        gbc.writeMem(0xeba, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x5609);
        EXPECT(gbc.pc(), 0xebc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0257
        gbc.setState(0x8df3, 0x9607, 0x9410, 0xbd4e, 0xc06b, 0x2b8b, 0x1, 0x1);
        gbc.writeMem(0x8df3, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x9607);
        EXPECT(gbc.pc(), 0x8df5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8df3), 0xcb);
        EXPECT(gbc.readMem(0x8df4), 0xa9);
        // CB A9 0258
        gbc.setState(0x792, 0xaa71, 0xe5c0, 0x296, 0x6a8e, 0x27ca, 0x0, 0x0);
        gbc.writeMem(0x792, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xaa71);
        EXPECT(gbc.pc(), 0x794);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 025B
        gbc.setState(0x5809, 0xc1fe, 0x4c00, 0xc8d8, 0xb76f, 0x5072, 0x1, 0x1);
        gbc.writeMem(0x5809, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xc1fe);
        EXPECT(gbc.pc(), 0x580b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 025C
        gbc.setState(0xe8fc, 0xa707, 0x1e70, 0x6041, 0xb798, 0x5798, 0x1, 0x0);
        gbc.writeMem(0xe8fc, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xa707);
        EXPECT(gbc.pc(), 0xe8fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8fc), 0xcb);
        EXPECT(gbc.readMem(0xe8fd), 0xa9);
        // CB A9 025D
        gbc.setState(0x18b4, 0x8933, 0xc250, 0x3835, 0x78b8, 0x7604, 0x1, 0x0);
        gbc.writeMem(0x18b4, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x8933);
        EXPECT(gbc.pc(), 0x18b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 025E
        gbc.setState(0x1503, 0x22bf, 0x8080, 0xf1c, 0xa159, 0x2a5, 0x0, 0x1);
        gbc.writeMem(0x1503, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x22bf);
        EXPECT(gbc.pc(), 0x1505);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 025F
        gbc.setState(0xce1c, 0xf9fe, 0xfc0, 0x435b, 0xc05d, 0xcac5, 0x0, 0x1);
        gbc.writeMem(0xce1c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xf9fe);
        EXPECT(gbc.pc(), 0xce1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce1c), 0xcb);
        EXPECT(gbc.readMem(0xce1d), 0xa9);
        // CB A9 0260
        gbc.setState(0x2f5d, 0x2096, 0xa530, 0xd149, 0x7a05, 0xcf66, 0x1, 0x0);
        gbc.writeMem(0x2f5d, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x2096);
        EXPECT(gbc.pc(), 0x2f5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0262
        gbc.setState(0x5671, 0xa32b, 0xc7d0, 0x71b4, 0xc2c3, 0xed35, 0x1, 0x1);
        gbc.writeMem(0x5671, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xa32b);
        EXPECT(gbc.pc(), 0x5673);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0263
        gbc.setState(0xafc, 0xc730, 0x71c0, 0xadb8, 0x236f, 0x3c0e, 0x1, 0x0);
        gbc.writeMem(0xafc, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xc730);
        EXPECT(gbc.pc(), 0xafe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0264
        gbc.setState(0x1a7b, 0x658b, 0x56f0, 0xaf78, 0xa46d, 0xdbb6, 0x1, 0x1);
        gbc.writeMem(0x1a7b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x658b);
        EXPECT(gbc.pc(), 0x1a7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0265
        gbc.setState(0xb65f, 0xa292, 0xad0, 0xd563, 0x7f3a, 0x1618, 0x1, 0x0);
        gbc.writeMem(0xb65f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xa292);
        EXPECT(gbc.pc(), 0xb661);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb65f), 0xcb);
        EXPECT(gbc.readMem(0xb660), 0xa9);
        // CB A9 0266
        gbc.setState(0xa446, 0x978e, 0x5040, 0x82e2, 0x53eb, 0xe989, 0x1, 0x1);
        gbc.writeMem(0xa446, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x978e);
        EXPECT(gbc.pc(), 0xa448);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa446), 0xcb);
        EXPECT(gbc.readMem(0xa447), 0xa9);
        // CB A9 0267
        gbc.setState(0xd11, 0x9e0c, 0xf990, 0xf483, 0x4e51, 0xa067, 0x1, 0x0);
        gbc.writeMem(0xd11, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x9e0c);
        EXPECT(gbc.pc(), 0xd13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0268
        gbc.setState(0x5215, 0xde4, 0x8e40, 0x502a, 0xfaf6, 0xc3a5, 0x1, 0x1);
        gbc.writeMem(0x5215, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xde4);
        EXPECT(gbc.pc(), 0x5217);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0269
        gbc.setState(0x2dba, 0x3afb, 0x6990, 0x7f1e, 0x4486, 0xd52, 0x1, 0x1);
        gbc.writeMem(0x2dba, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x3afb);
        EXPECT(gbc.pc(), 0x2dbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 026A
        gbc.setState(0x6fac, 0x1d40, 0x7410, 0xa857, 0xb72, 0xdbdf, 0x0, 0x1);
        gbc.writeMem(0x6fac, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1d40);
        EXPECT(gbc.pc(), 0x6fae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 026B
        gbc.setState(0x4463, 0x7181, 0xbd10, 0x76cd, 0x8a8f, 0x75bf, 0x0, 0x0);
        gbc.writeMem(0x4463, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x7181);
        EXPECT(gbc.pc(), 0x4465);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 026C
        gbc.setState(0x12d1, 0x2122, 0x66f0, 0x4551, 0x6377, 0x58bf, 0x1, 0x1);
        gbc.writeMem(0x12d1, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x2122);
        EXPECT(gbc.pc(), 0x12d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 026D
        gbc.setState(0xd9a3, 0x376c, 0x8c60, 0xb748, 0xb358, 0xafd5, 0x0, 0x1);
        gbc.writeMem(0xd9a3, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x376c);
        EXPECT(gbc.pc(), 0xd9a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9a3), 0xcb);
        EXPECT(gbc.readMem(0xd9a4), 0xa9);
        // CB A9 026E
        gbc.setState(0x155c, 0xb55b, 0xdb40, 0xbd3d, 0xf496, 0x7c65, 0x0, 0x0);
        gbc.writeMem(0x155c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb55b);
        EXPECT(gbc.pc(), 0x155e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 026F
        gbc.setState(0xdeb, 0xf8c2, 0xa330, 0x9c37, 0x2fe3, 0xd7e0, 0x0, 0x0);
        gbc.writeMem(0xdeb, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xf8c2);
        EXPECT(gbc.pc(), 0xded);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0270
        gbc.setState(0xd811, 0x103c, 0x570, 0xe21f, 0x8bf3, 0x965f, 0x0, 0x0);
        gbc.writeMem(0xd811, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x103c);
        EXPECT(gbc.pc(), 0xd813);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd811), 0xcb);
        EXPECT(gbc.readMem(0xd812), 0xa9);
        // CB A9 0271
        gbc.setState(0xdcab, 0xeeb2, 0xb600, 0x986d, 0x2e6a, 0x7001, 0x0, 0x0);
        gbc.writeMem(0xdcab, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xeeb2);
        EXPECT(gbc.pc(), 0xdcad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcab), 0xcb);
        EXPECT(gbc.readMem(0xdcac), 0xa9);
        // CB A9 0272
        gbc.setState(0x70e9, 0x79c9, 0xf6f0, 0x374a, 0xb078, 0xc743, 0x0, 0x0);
        gbc.writeMem(0x70e9, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x79c9);
        EXPECT(gbc.pc(), 0x70eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0273
        gbc.setState(0x64cf, 0xd63, 0x9780, 0xfadd, 0x9d55, 0xac2, 0x1, 0x0);
        gbc.writeMem(0x64cf, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xd63);
        EXPECT(gbc.pc(), 0x64d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0274
        gbc.setState(0x56da, 0x6e6f, 0xe4d0, 0xceaa, 0xa977, 0x28fc, 0x0, 0x0);
        gbc.writeMem(0x56da, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x6e6f);
        EXPECT(gbc.pc(), 0x56dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0275
        gbc.setState(0xc41, 0x5fe, 0x6cb0, 0x7e14, 0xb201, 0xe760, 0x1, 0x0);
        gbc.writeMem(0xc41, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x5fe);
        EXPECT(gbc.pc(), 0xc43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0276
        gbc.setState(0xe3b6, 0xc983, 0x23d0, 0x67bc, 0x9ada, 0xc029, 0x0, 0x0);
        gbc.writeMem(0xe3b6, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xc983);
        EXPECT(gbc.pc(), 0xe3b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3b6), 0xcb);
        EXPECT(gbc.readMem(0xe3b7), 0xa9);
        // CB A9 0277
        gbc.setState(0x5e1f, 0x5705, 0xf1c0, 0xb580, 0x24b5, 0xc65c, 0x0, 0x1);
        gbc.writeMem(0x5e1f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x5705);
        EXPECT(gbc.pc(), 0x5e21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0278
        gbc.setState(0xd094, 0xbb06, 0x7d50, 0x7111, 0xb6ff, 0xa605, 0x1, 0x0);
        gbc.writeMem(0xd094, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xbb06);
        EXPECT(gbc.pc(), 0xd096);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd094), 0xcb);
        EXPECT(gbc.readMem(0xd095), 0xa9);
        // CB A9 0279
        gbc.setState(0xda80, 0x702d, 0xf750, 0xb86e, 0x3a0a, 0x109c, 0x1, 0x1);
        gbc.writeMem(0xda80, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x702d);
        EXPECT(gbc.pc(), 0xda82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda80), 0xcb);
        EXPECT(gbc.readMem(0xda81), 0xa9);
        // CB A9 027A
        gbc.setState(0xa9ab, 0xe1b6, 0x5fa0, 0xde01, 0x7c6, 0xbaed, 0x1, 0x1);
        gbc.writeMem(0xa9ab, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xe1b6);
        EXPECT(gbc.pc(), 0xa9ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9ab), 0xcb);
        EXPECT(gbc.readMem(0xa9ac), 0xa9);
        // CB A9 027B
        gbc.setState(0xd81f, 0x6f6f, 0xbe10, 0x2be1, 0xf7b6, 0x2f2d, 0x1, 0x0);
        gbc.writeMem(0xd81f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x6f6f);
        EXPECT(gbc.pc(), 0xd821);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd81f), 0xcb);
        EXPECT(gbc.readMem(0xd820), 0xa9);
        // CB A9 027C
        gbc.setState(0xb31e, 0x12f2, 0x39b0, 0xf30, 0x4c07, 0x797e, 0x1, 0x1);
        gbc.writeMem(0xb31e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x12f2);
        EXPECT(gbc.pc(), 0xb320);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb31e), 0xcb);
        EXPECT(gbc.readMem(0xb31f), 0xa9);
        // CB A9 027E
        gbc.setState(0x8412, 0x7fc6, 0x5de0, 0xab64, 0xe0fe, 0x3318, 0x1, 0x0);
        gbc.writeMem(0x8412, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7fc6);
        EXPECT(gbc.pc(), 0x8414);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8412), 0xcb);
        EXPECT(gbc.readMem(0x8413), 0xa9);
        // CB A9 027F
        gbc.setState(0x2eaf, 0x4913, 0xe40, 0x6457, 0x3ce7, 0xb389, 0x1, 0x0);
        gbc.writeMem(0x2eaf, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x4913);
        EXPECT(gbc.pc(), 0x2eb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0280
        gbc.setState(0xebaf, 0x8ebd, 0xc430, 0xe7fc, 0x3d37, 0x97fb, 0x0, 0x1);
        gbc.writeMem(0xebaf, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x8ebd);
        EXPECT(gbc.pc(), 0xebb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebaf), 0xcb);
        EXPECT(gbc.readMem(0xebb0), 0xa9);
        // CB A9 0281
        gbc.setState(0x909c, 0x29a4, 0x1e10, 0xf042, 0x1624, 0x3cca, 0x1, 0x0);
        gbc.writeMem(0x909c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x29a4);
        EXPECT(gbc.pc(), 0x909e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x909c), 0xcb);
        EXPECT(gbc.readMem(0x909d), 0xa9);
        // CB A9 0282
        gbc.setState(0x2740, 0xe034, 0xc800, 0xb8d0, 0x8f5f, 0xde31, 0x0, 0x1);
        gbc.writeMem(0x2740, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xe034);
        EXPECT(gbc.pc(), 0x2742);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0283
        gbc.setState(0x8315, 0x5858, 0x38e0, 0x8942, 0xa7cd, 0xd34c, 0x1, 0x0);
        gbc.writeMem(0x8315, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x5858);
        EXPECT(gbc.pc(), 0x8317);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8315), 0xcb);
        EXPECT(gbc.readMem(0x8316), 0xa9);
        // CB A9 0284
        gbc.setState(0xc693, 0xa2e6, 0xf4a0, 0xe8c1, 0xe383, 0xc38, 0x1, 0x1);
        gbc.writeMem(0xc693, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xa2e6);
        EXPECT(gbc.pc(), 0xc695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc693), 0xcb);
        EXPECT(gbc.readMem(0xc694), 0xa9);
        // CB A9 0285
        gbc.setState(0x2069, 0x7843, 0xb9c0, 0xfd64, 0x7729, 0x7be5, 0x1, 0x0);
        gbc.writeMem(0x2069, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x7843);
        EXPECT(gbc.pc(), 0x206b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0287
        gbc.setState(0x7e88, 0x3fbc, 0x9c80, 0x689d, 0xd7cd, 0x4f37, 0x1, 0x1);
        gbc.writeMem(0x7e88, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x3fbc);
        EXPECT(gbc.pc(), 0x7e8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0288
        gbc.setState(0x9d13, 0x463c, 0xf950, 0x4f56, 0xd547, 0x2a6e, 0x0, 0x1);
        gbc.writeMem(0x9d13, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x463c);
        EXPECT(gbc.pc(), 0x9d15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d13), 0xcb);
        EXPECT(gbc.readMem(0x9d14), 0xa9);
        // CB A9 0289
        gbc.setState(0x9b3c, 0xc319, 0x7650, 0x1263, 0x89c4, 0xbcaa, 0x1, 0x0);
        gbc.writeMem(0x9b3c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xc319);
        EXPECT(gbc.pc(), 0x9b3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b3c), 0xcb);
        EXPECT(gbc.readMem(0x9b3d), 0xa9);
        // CB A9 028A
        gbc.setState(0x5fc, 0xc7ad, 0xea0, 0x3db8, 0x6320, 0xa125, 0x0, 0x0);
        gbc.writeMem(0x5fc, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xc7ad);
        EXPECT(gbc.pc(), 0x5fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 028B
        gbc.setState(0xb289, 0x4846, 0xb810, 0x92c2, 0xbc47, 0xca07, 0x0, 0x1);
        gbc.writeMem(0xb289, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x4846);
        EXPECT(gbc.pc(), 0xb28b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb289), 0xcb);
        EXPECT(gbc.readMem(0xb28a), 0xa9);
        // CB A9 028C
        gbc.setState(0x4116, 0x8c4e, 0x8c60, 0xaf77, 0x9360, 0x3e93, 0x1, 0x0);
        gbc.writeMem(0x4116, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8c4e);
        EXPECT(gbc.pc(), 0x4118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 028E
        gbc.setState(0xd91f, 0x3bd9, 0x1dc0, 0x94e3, 0x5892, 0x5d83, 0x1, 0x1);
        gbc.writeMem(0xd91f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x3bd9);
        EXPECT(gbc.pc(), 0xd921);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd91f), 0xcb);
        EXPECT(gbc.readMem(0xd920), 0xa9);
        // CB A9 028F
        gbc.setState(0xa958, 0x1d4f, 0xc9e0, 0x8f68, 0xbf5a, 0x89f0, 0x1, 0x0);
        gbc.writeMem(0xa958, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x1d4f);
        EXPECT(gbc.pc(), 0xa95a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa958), 0xcb);
        EXPECT(gbc.readMem(0xa959), 0xa9);
        // CB A9 0290
        gbc.setState(0x97a1, 0x78be, 0x630, 0x510, 0xb77b, 0x3556, 0x0, 0x0);
        gbc.writeMem(0x97a1, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x78be);
        EXPECT(gbc.pc(), 0x97a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97a1), 0xcb);
        EXPECT(gbc.readMem(0x97a2), 0xa9);
        // CB A9 0292
        gbc.setState(0x5b71, 0xf50, 0x3130, 0xd550, 0x166, 0x99ac, 0x0, 0x1);
        gbc.writeMem(0x5b71, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xf50);
        EXPECT(gbc.pc(), 0x5b73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0293
        gbc.setState(0x9ddb, 0xf86e, 0xcb60, 0x7306, 0x3a69, 0x9fd7, 0x0, 0x0);
        gbc.writeMem(0x9ddb, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xf86e);
        EXPECT(gbc.pc(), 0x9ddd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ddb), 0xcb);
        EXPECT(gbc.readMem(0x9ddc), 0xa9);
        // CB A9 0294
        gbc.setState(0x822b, 0xf12c, 0x9fd0, 0xb0c9, 0xd384, 0xbe77, 0x1, 0x1);
        gbc.writeMem(0x822b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xf12c);
        EXPECT(gbc.pc(), 0x822d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x822b), 0xcb);
        EXPECT(gbc.readMem(0x822c), 0xa9);
        // CB A9 0295
        gbc.setState(0xa335, 0x597e, 0x6350, 0x2a4b, 0xf31a, 0x2d8e, 0x0, 0x1);
        gbc.writeMem(0xa335, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x597e);
        EXPECT(gbc.pc(), 0xa337);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa335), 0xcb);
        EXPECT(gbc.readMem(0xa336), 0xa9);
        // CB A9 0296
        gbc.setState(0x7142, 0xf1ce, 0xb1c0, 0x9a5f, 0xf08a, 0xaaa8, 0x1, 0x0);
        gbc.writeMem(0x7142, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xf1ce);
        EXPECT(gbc.pc(), 0x7144);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0297
        gbc.setState(0xd1d1, 0x1e94, 0xcb90, 0xf309, 0x736d, 0x5972, 0x0, 0x1);
        gbc.writeMem(0xd1d1, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x1e94);
        EXPECT(gbc.pc(), 0xd1d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1d1), 0xcb);
        EXPECT(gbc.readMem(0xd1d2), 0xa9);
        // CB A9 0298
        gbc.setState(0x86a9, 0x5b0f, 0xe2c0, 0xb2e9, 0xdc84, 0xc8c0, 0x1, 0x0);
        gbc.writeMem(0x86a9, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x5b0f);
        EXPECT(gbc.pc(), 0x86ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86a9), 0xcb);
        EXPECT(gbc.readMem(0x86aa), 0xa9);
        // CB A9 0299
        gbc.setState(0x526f, 0xb07e, 0x8090, 0x777f, 0x3c2a, 0xb2be, 0x0, 0x1);
        gbc.writeMem(0x526f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xb07e);
        EXPECT(gbc.pc(), 0x5271);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 029A
        gbc.setState(0xff8, 0x5e2, 0x7660, 0x3021, 0x98a9, 0x5514, 0x1, 0x0);
        gbc.writeMem(0xff8, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x5e2);
        EXPECT(gbc.pc(), 0xffa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 029B
        gbc.setState(0x93c6, 0x5926, 0x6740, 0xc82f, 0x1db0, 0x82cd, 0x0, 0x1);
        gbc.writeMem(0x93c6, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x5926);
        EXPECT(gbc.pc(), 0x93c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93c6), 0xcb);
        EXPECT(gbc.readMem(0x93c7), 0xa9);
        // CB A9 029C
        gbc.setState(0x7c11, 0xcb82, 0xd670, 0x20df, 0xb2cc, 0x7e33, 0x1, 0x0);
        gbc.writeMem(0x7c11, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xcb82);
        EXPECT(gbc.pc(), 0x7c13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 029D
        gbc.setState(0x9ff8, 0xe8d1, 0x6c0, 0xe76d, 0x90b8, 0x7c5, 0x0, 0x1);
        gbc.writeMem(0x9ff8, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xe8d1);
        EXPECT(gbc.pc(), 0x9ffa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ff8), 0xcb);
        EXPECT(gbc.readMem(0x9ff9), 0xa9);
        // CB A9 029E
        gbc.setState(0x2d97, 0xa063, 0x4c20, 0x603c, 0xd29e, 0x58a1, 0x0, 0x1);
        gbc.writeMem(0x2d97, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa063);
        EXPECT(gbc.pc(), 0x2d99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 029F
        gbc.setState(0xcc10, 0x88be, 0xd900, 0xcbc2, 0xf215, 0x9faa, 0x1, 0x1);
        gbc.writeMem(0xcc10, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x88be);
        EXPECT(gbc.pc(), 0xcc12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc10), 0xcb);
        EXPECT(gbc.readMem(0xcc11), 0xa9);
        // CB A9 02A1
        gbc.setState(0x6738, 0x733a, 0x93d0, 0xac76, 0xfaf, 0x3944, 0x1, 0x0);
        gbc.writeMem(0x6738, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x733a);
        EXPECT(gbc.pc(), 0x673a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 02A2
        gbc.setState(0x6143, 0x5945, 0x8d40, 0x3ba2, 0xaa3a, 0x2db2, 0x1, 0x0);
        gbc.writeMem(0x6143, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x5945);
        EXPECT(gbc.pc(), 0x6145);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 02A3
        gbc.setState(0x796b, 0xbec8, 0x890, 0x2f45, 0xf165, 0xaf94, 0x1, 0x0);
        gbc.writeMem(0x796b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xbec8);
        EXPECT(gbc.pc(), 0x796d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 02A4
        gbc.setState(0x8579, 0x75bf, 0x4400, 0xbf24, 0x21f1, 0x558, 0x1, 0x1);
        gbc.writeMem(0x8579, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x75bf);
        EXPECT(gbc.pc(), 0x857b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8579), 0xcb);
        EXPECT(gbc.readMem(0x857a), 0xa9);
        // CB A9 02A5
        gbc.setState(0x300, 0x607c, 0x6720, 0x1564, 0xb3a3, 0x5a2a, 0x0, 0x1);
        gbc.writeMem(0x300, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x607c);
        EXPECT(gbc.pc(), 0x302);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 02A6
        gbc.setState(0x7462, 0x974d, 0x11e0, 0xf2f4, 0xa61e, 0x3769, 0x1, 0x0);
        gbc.writeMem(0x7462, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x974d);
        EXPECT(gbc.pc(), 0x7464);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 02A7
        gbc.setState(0x5b04, 0xd98f, 0x76c0, 0x68cb, 0xc718, 0x56bc, 0x1, 0x0);
        gbc.writeMem(0x5b04, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xd98f);
        EXPECT(gbc.pc(), 0x5b06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 02A8
        gbc.setState(0x3062, 0xc582, 0x9860, 0x8f1b, 0xc6fd, 0xc515, 0x1, 0x1);
        gbc.writeMem(0x3062, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xc582);
        EXPECT(gbc.pc(), 0x3064);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 02A9
        gbc.setState(0xa4d6, 0x7406, 0xa450, 0x28f9, 0x858a, 0x99a4, 0x0, 0x1);
        gbc.writeMem(0xa4d6, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7406);
        EXPECT(gbc.pc(), 0xa4d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4d6), 0xcb);
        EXPECT(gbc.readMem(0xa4d7), 0xa9);
        // CB A9 02AA
        gbc.setState(0x2776, 0x6c3e, 0x1e90, 0x9335, 0xd6eb, 0xe79c, 0x0, 0x0);
        gbc.writeMem(0x2776, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6c3e);
        EXPECT(gbc.pc(), 0x2778);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 02AB
        gbc.setState(0x7797, 0xeaae, 0x12b0, 0xea54, 0x6a2e, 0x5b9b, 0x0, 0x0);
        gbc.writeMem(0x7797, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xeaae);
        EXPECT(gbc.pc(), 0x7799);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 02AC
        gbc.setState(0x2e10, 0xe02e, 0xbf10, 0xe298, 0xeb44, 0x9115, 0x0, 0x1);
        gbc.writeMem(0x2e10, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xe02e);
        EXPECT(gbc.pc(), 0x2e12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 02AD
        gbc.setState(0xc959, 0x11fd, 0x4910, 0xd5d7, 0x4594, 0xe238, 0x0, 0x0);
        gbc.writeMem(0xc959, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x11fd);
        EXPECT(gbc.pc(), 0xc95b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc959), 0xcb);
        EXPECT(gbc.readMem(0xc95a), 0xa9);
        // CB A9 02AE
        gbc.setState(0x3cd7, 0xd45a, 0xd600, 0xa6b7, 0xf3a8, 0xb236, 0x0, 0x1);
        gbc.writeMem(0x3cd7, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xd45a);
        EXPECT(gbc.pc(), 0x3cd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 02AF
        gbc.setState(0x27c8, 0xe3a4, 0xd240, 0x42de, 0x4a60, 0x3d52, 0x1, 0x0);
        gbc.writeMem(0x27c8, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe3a4);
        EXPECT(gbc.pc(), 0x27ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 02B0
        gbc.setState(0x92fd, 0xe7c4, 0xcfb0, 0xe70f, 0x778a, 0x513f, 0x0, 0x1);
        gbc.writeMem(0x92fd, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xe7c4);
        EXPECT(gbc.pc(), 0x92ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92fd), 0xcb);
        EXPECT(gbc.readMem(0x92fe), 0xa9);
        // CB A9 02B1
        gbc.setState(0xd608, 0x839f, 0xa170, 0x52af, 0x890c, 0x371b, 0x0, 0x0);
        gbc.writeMem(0xd608, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x839f);
        EXPECT(gbc.pc(), 0xd60a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd608), 0xcb);
        EXPECT(gbc.readMem(0xd609), 0xa9);
        // CB A9 02B2
        gbc.setState(0xbe4c, 0x383d, 0xb840, 0xd77a, 0x95bb, 0x1ab9, 0x0, 0x1);
        gbc.writeMem(0xbe4c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x383d);
        EXPECT(gbc.pc(), 0xbe4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe4c), 0xcb);
        EXPECT(gbc.readMem(0xbe4d), 0xa9);
        // CB A9 02B3
        gbc.setState(0x787c, 0x145d, 0x9b0, 0x6bf6, 0x219c, 0xca1e, 0x0, 0x1);
        gbc.writeMem(0x787c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x145d);
        EXPECT(gbc.pc(), 0x787e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 02B4
        gbc.setState(0x5463, 0x7db9, 0xe7f0, 0x7e6d, 0xfe9b, 0xba11, 0x1, 0x1);
        gbc.writeMem(0x5463, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x7db9);
        EXPECT(gbc.pc(), 0x5465);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 02B5
        gbc.setState(0x53d8, 0x6f13, 0xfd0, 0x2b9f, 0x62fe, 0x8f7, 0x0, 0x1);
        gbc.writeMem(0x53d8, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6f13);
        EXPECT(gbc.pc(), 0x53da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 02B8
        gbc.setState(0xc512, 0x7f92, 0xc10, 0x21e, 0xdfa2, 0x8de4, 0x1, 0x1);
        gbc.writeMem(0xc512, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7f92);
        EXPECT(gbc.pc(), 0xc514);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc512), 0xcb);
        EXPECT(gbc.readMem(0xc513), 0xa9);
        // CB A9 02B9
        gbc.setState(0x5e3a, 0x578a, 0x2f30, 0x30bd, 0x2488, 0x352f, 0x1, 0x1);
        gbc.writeMem(0x5e3a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x578a);
        EXPECT(gbc.pc(), 0x5e3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 02BA
        gbc.setState(0x992c, 0xdb29, 0x9b80, 0x6a1c, 0x67c5, 0x659b, 0x1, 0x0);
        gbc.writeMem(0x992c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xdb29);
        EXPECT(gbc.pc(), 0x992e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x992c), 0xcb);
        EXPECT(gbc.readMem(0x992d), 0xa9);
        // CB A9 02BB
        gbc.setState(0xaf9b, 0x8bc2, 0x19f0, 0x40d6, 0x4122, 0x7bb8, 0x1, 0x1);
        gbc.writeMem(0xaf9b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x8bc2);
        EXPECT(gbc.pc(), 0xaf9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf9b), 0xcb);
        EXPECT(gbc.readMem(0xaf9c), 0xa9);
        // CB A9 02BC
        gbc.setState(0x8702, 0x506e, 0x4520, 0x155e, 0x9c3e, 0x94d4, 0x1, 0x1);
        gbc.writeMem(0x8702, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x506e);
        EXPECT(gbc.pc(), 0x8704);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8702), 0xcb);
        EXPECT(gbc.readMem(0x8703), 0xa9);
        // CB A9 02BD
        gbc.setState(0x7dba, 0xf609, 0x3b30, 0x7b2, 0xfd, 0xbf00, 0x1, 0x0);
        gbc.writeMem(0x7dba, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xf609);
        EXPECT(gbc.pc(), 0x7dbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 02BE
        gbc.setState(0xc875, 0x7340, 0x140, 0x3387, 0x4587, 0x83e1, 0x1, 0x0);
        gbc.writeMem(0xc875, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x7340);
        EXPECT(gbc.pc(), 0xc877);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc875), 0xcb);
        EXPECT(gbc.readMem(0xc876), 0xa9);
        // CB A9 02BF
        gbc.setState(0x6961, 0xfad0, 0xba70, 0x46cd, 0xaa3d, 0x442a, 0x0, 0x1);
        gbc.writeMem(0x6961, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xfad0);
        EXPECT(gbc.pc(), 0x6963);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 02C0
        gbc.setState(0xe6d9, 0xacdc, 0x4e40, 0x6e5c, 0x92fb, 0x173a, 0x1, 0x1);
        gbc.writeMem(0xe6d9, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xacdc);
        EXPECT(gbc.pc(), 0xe6db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6d9), 0xcb);
        EXPECT(gbc.readMem(0xe6da), 0xa9);
        // CB A9 02C1
        gbc.setState(0x6f91, 0x13b3, 0x2910, 0x84e, 0x42bc, 0x531b, 0x1, 0x0);
        gbc.writeMem(0x6f91, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x13b3);
        EXPECT(gbc.pc(), 0x6f93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 02C2
        gbc.setState(0xe100, 0x3e23, 0x4e80, 0x96c1, 0x5d58, 0xe5b0, 0x0, 0x0);
        gbc.writeMem(0xe100, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x3e23);
        EXPECT(gbc.pc(), 0xe102);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe100), 0xcb);
        EXPECT(gbc.readMem(0xe101), 0xa9);
        // CB A9 02C3
        gbc.setState(0xa09c, 0xc637, 0xa720, 0x6597, 0xaf1, 0x728, 0x1, 0x0);
        gbc.writeMem(0xa09c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xc637);
        EXPECT(gbc.pc(), 0xa09e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa09c), 0xcb);
        EXPECT(gbc.readMem(0xa09d), 0xa9);
        // CB A9 02C4
        gbc.setState(0x7c2e, 0xe9a5, 0xf4c0, 0x21c7, 0xec24, 0x65a5, 0x0, 0x1);
        gbc.writeMem(0x7c2e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xe9a5);
        EXPECT(gbc.pc(), 0x7c30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 02C5
        gbc.setState(0xc783, 0xaaf8, 0xa540, 0xef12, 0xe46f, 0x9bfa, 0x1, 0x0);
        gbc.writeMem(0xc783, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xaaf8);
        EXPECT(gbc.pc(), 0xc785);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc783), 0xcb);
        EXPECT(gbc.readMem(0xc784), 0xa9);
        // CB A9 02C7
        gbc.setState(0x91da, 0x63ef, 0x5210, 0x537c, 0x40da, 0xdf36, 0x1, 0x0);
        gbc.writeMem(0x91da, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x63ef);
        EXPECT(gbc.pc(), 0x91dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91da), 0xcb);
        EXPECT(gbc.readMem(0x91db), 0xa9);
        // CB A9 02C9
        gbc.setState(0xccda, 0x1b85, 0xfd60, 0xca25, 0x91dd, 0x6612, 0x0, 0x0);
        gbc.writeMem(0xccda, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x1b85);
        EXPECT(gbc.pc(), 0xccdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccda), 0xcb);
        EXPECT(gbc.readMem(0xccdb), 0xa9);
        // CB A9 02CA
        gbc.setState(0xa4b5, 0xbdbf, 0x5a40, 0x26b0, 0x2814, 0x3863, 0x0, 0x0);
        gbc.writeMem(0xa4b5, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xbdbf);
        EXPECT(gbc.pc(), 0xa4b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4b5), 0xcb);
        EXPECT(gbc.readMem(0xa4b6), 0xa9);
        // CB A9 02CB
        gbc.setState(0x49e3, 0xe278, 0x7e10, 0x9ba, 0x2773, 0xc5d6, 0x0, 0x0);
        gbc.writeMem(0x49e3, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xe278);
        EXPECT(gbc.pc(), 0x49e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 02CC
        gbc.setState(0xd88f, 0x29b0, 0x7cb0, 0x1f6e, 0x3dcc, 0x61f3, 0x0, 0x1);
        gbc.writeMem(0xd88f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x29b0);
        EXPECT(gbc.pc(), 0xd891);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd88f), 0xcb);
        EXPECT(gbc.readMem(0xd890), 0xa9);
        // CB A9 02CD
        gbc.setState(0x89f4, 0xd872, 0xf690, 0x9e0c, 0x74f0, 0x4a6b, 0x0, 0x1);
        gbc.writeMem(0x89f4, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xd872);
        EXPECT(gbc.pc(), 0x89f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89f4), 0xcb);
        EXPECT(gbc.readMem(0x89f5), 0xa9);
        // CB A9 02CE
        gbc.setState(0xb34a, 0x84d0, 0x2580, 0x36be, 0xddf9, 0xb936, 0x1, 0x1);
        gbc.writeMem(0xb34a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x84d0);
        EXPECT(gbc.pc(), 0xb34c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb34a), 0xcb);
        EXPECT(gbc.readMem(0xb34b), 0xa9);
        // CB A9 02CF
        gbc.setState(0x9221, 0xc0be, 0x2c20, 0x275e, 0x7307, 0xceba, 0x1, 0x1);
        gbc.writeMem(0x9221, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xc0be);
        EXPECT(gbc.pc(), 0x9223);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9221), 0xcb);
        EXPECT(gbc.readMem(0x9222), 0xa9);
        // CB A9 02D0
        gbc.setState(0xe6be, 0x1c4e, 0x5f10, 0x3843, 0xc81a, 0x79a, 0x0, 0x0);
        gbc.writeMem(0xe6be, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x1c4e);
        EXPECT(gbc.pc(), 0xe6c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6be), 0xcb);
        EXPECT(gbc.readMem(0xe6bf), 0xa9);
        // CB A9 02D2
        gbc.setState(0xef23, 0xf708, 0xac50, 0x11dc, 0xf6af, 0xdddb, 0x0, 0x1);
        gbc.writeMem(0xef23, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xf708);
        EXPECT(gbc.pc(), 0xef25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef23), 0xcb);
        EXPECT(gbc.readMem(0xef24), 0xa9);
        // CB A9 02D3
        gbc.setState(0xc77b, 0x4cd8, 0xef90, 0xd5c8, 0xc836, 0xd626, 0x0, 0x1);
        gbc.writeMem(0xc77b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x4cd8);
        EXPECT(gbc.pc(), 0xc77d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc77b), 0xcb);
        EXPECT(gbc.readMem(0xc77c), 0xa9);
        // CB A9 02D4
        gbc.setState(0x45c3, 0x96cd, 0xb910, 0x340c, 0xb867, 0x7f2d, 0x0, 0x1);
        gbc.writeMem(0x45c3, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x96cd);
        EXPECT(gbc.pc(), 0x45c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 02D5
        gbc.setState(0x8a6, 0x4164, 0xb270, 0x9930, 0xc78d, 0xcb7a, 0x1, 0x1);
        gbc.writeMem(0x8a6, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x4164);
        EXPECT(gbc.pc(), 0x8a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 02D6
        gbc.setState(0xb9, 0xc41f, 0x9450, 0x1589, 0xe3a, 0x61e, 0x0, 0x0);
        gbc.writeMem(0xb9, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xc41f);
        EXPECT(gbc.pc(), 0xbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 02D7
        gbc.setState(0x2b03, 0x2def, 0x2d10, 0x9e15, 0xb424, 0xb789, 0x0, 0x1);
        gbc.writeMem(0x2b03, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x2def);
        EXPECT(gbc.pc(), 0x2b05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 02D8
        gbc.setState(0xd23a, 0xcf46, 0x4620, 0x185a, 0xa27a, 0x38c4, 0x0, 0x1);
        gbc.writeMem(0xd23a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xcf46);
        EXPECT(gbc.pc(), 0xd23c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd23a), 0xcb);
        EXPECT(gbc.readMem(0xd23b), 0xa9);
        // CB A9 02D9
        gbc.setState(0xc258, 0x4db0, 0xd9b0, 0x50ed, 0x82cd, 0xf29a, 0x0, 0x0);
        gbc.writeMem(0xc258, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x4db0);
        EXPECT(gbc.pc(), 0xc25a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc258), 0xcb);
        EXPECT(gbc.readMem(0xc259), 0xa9);
        // CB A9 02DA
        gbc.setState(0x50ae, 0x864b, 0x84b0, 0x6c65, 0x5ceb, 0x7039, 0x0, 0x1);
        gbc.writeMem(0x50ae, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x864b);
        EXPECT(gbc.pc(), 0x50b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 02DB
        gbc.setState(0x7667, 0x98bb, 0x3060, 0x5770, 0x6d73, 0xaa43, 0x1, 0x1);
        gbc.writeMem(0x7667, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x98bb);
        EXPECT(gbc.pc(), 0x7669);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 02DC
        gbc.setState(0x7797, 0x281e, 0x5a30, 0xb1ed, 0x8d, 0xc231, 0x0, 0x0);
        gbc.writeMem(0x7797, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x281e);
        EXPECT(gbc.pc(), 0x7799);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 02DD
        gbc.setState(0x386, 0x8b71, 0x4600, 0x293f, 0xce36, 0xd8, 0x0, 0x0);
        gbc.writeMem(0x386, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x8b71);
        EXPECT(gbc.pc(), 0x388);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 02DE
        gbc.setState(0x609a, 0xeb9, 0xc990, 0xcd27, 0xc99a, 0x2ab, 0x1, 0x1);
        gbc.writeMem(0x609a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xeb9);
        EXPECT(gbc.pc(), 0x609c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 02DF
        gbc.setState(0xb5a, 0x55ec, 0xc0e0, 0x790b, 0x44ce, 0x8d8, 0x1, 0x1);
        gbc.writeMem(0xb5a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x55ec);
        EXPECT(gbc.pc(), 0xb5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 02E0
        gbc.setState(0x322f, 0x24a4, 0x6420, 0x827e, 0xb735, 0x73d5, 0x0, 0x1);
        gbc.writeMem(0x322f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x24a4);
        EXPECT(gbc.pc(), 0x3231);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 02E1
        gbc.setState(0x91d2, 0x82ef, 0xc960, 0xcec1, 0xb51c, 0xb7c9, 0x0, 0x1);
        gbc.writeMem(0x91d2, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x82ef);
        EXPECT(gbc.pc(), 0x91d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91d2), 0xcb);
        EXPECT(gbc.readMem(0x91d3), 0xa9);
        // CB A9 02E2
        gbc.setState(0x2e5d, 0x477, 0x4210, 0x5d4a, 0x1b11, 0xe7cb, 0x1, 0x0);
        gbc.writeMem(0x2e5d, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x477);
        EXPECT(gbc.pc(), 0x2e5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 02E3
        gbc.setState(0xd21f, 0x9e48, 0xcaf0, 0xad50, 0xb654, 0x6106, 0x0, 0x0);
        gbc.writeMem(0xd21f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x9e48);
        EXPECT(gbc.pc(), 0xd221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd21f), 0xcb);
        EXPECT(gbc.readMem(0xd220), 0xa9);
        // CB A9 02E4
        gbc.setState(0xcc2, 0x1fa0, 0x3380, 0xa897, 0xf157, 0x6f78, 0x0, 0x0);
        gbc.writeMem(0xcc2, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x1fa0);
        EXPECT(gbc.pc(), 0xcc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 02E5
        gbc.setState(0xd23f, 0xcefb, 0xbf50, 0x4a3e, 0x6c1e, 0x8c5a, 0x0, 0x1);
        gbc.writeMem(0xd23f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xcefb);
        EXPECT(gbc.pc(), 0xd241);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd23f), 0xcb);
        EXPECT(gbc.readMem(0xd240), 0xa9);
        // CB A9 02E6
        gbc.setState(0x8d59, 0x8654, 0xdfd0, 0x4b4c, 0x38d1, 0xb800, 0x0, 0x0);
        gbc.writeMem(0x8d59, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x8654);
        EXPECT(gbc.pc(), 0x8d5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d59), 0xcb);
        EXPECT(gbc.readMem(0x8d5a), 0xa9);
        // CB A9 02E7
        gbc.setState(0x5e69, 0x1298, 0xa440, 0x6811, 0x3018, 0xa522, 0x1, 0x1);
        gbc.writeMem(0x5e69, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1298);
        EXPECT(gbc.pc(), 0x5e6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 02E8
        gbc.setState(0x5d16, 0x66f8, 0x2620, 0x38ea, 0x716f, 0x23ef, 0x1, 0x1);
        gbc.writeMem(0x5d16, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x66f8);
        EXPECT(gbc.pc(), 0x5d18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 02E9
        gbc.setState(0xd2a5, 0xa716, 0xa100, 0xbbdd, 0xddd, 0xc2f5, 0x1, 0x1);
        gbc.writeMem(0xd2a5, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa716);
        EXPECT(gbc.pc(), 0xd2a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2a5), 0xcb);
        EXPECT(gbc.readMem(0xd2a6), 0xa9);
        // CB A9 02EA
        gbc.setState(0x5251, 0xd54a, 0xe0a0, 0x1d67, 0xce7f, 0x278f, 0x1, 0x1);
        gbc.writeMem(0x5251, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xd54a);
        EXPECT(gbc.pc(), 0x5253);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 02EB
        gbc.setState(0x94f5, 0xa445, 0xf1c0, 0x8e83, 0xdf54, 0x4245, 0x0, 0x0);
        gbc.writeMem(0x94f5, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa445);
        EXPECT(gbc.pc(), 0x94f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94f5), 0xcb);
        EXPECT(gbc.readMem(0x94f6), 0xa9);
        // CB A9 02EC
        gbc.setState(0x4941, 0xdffd, 0xe440, 0x5a5c, 0xacb2, 0x886c, 0x0, 0x1);
        gbc.writeMem(0x4941, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xdffd);
        EXPECT(gbc.pc(), 0x4943);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 02ED
        gbc.setState(0x167f, 0x742b, 0x9960, 0xb50, 0xcde8, 0xd0b8, 0x1, 0x0);
        gbc.writeMem(0x167f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x742b);
        EXPECT(gbc.pc(), 0x1681);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 02EE
        gbc.setState(0xde4e, 0xd658, 0x8270, 0x96e, 0xfb77, 0x8306, 0x0, 0x0);
        gbc.writeMem(0xde4e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xd658);
        EXPECT(gbc.pc(), 0xde50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde4e), 0xcb);
        EXPECT(gbc.readMem(0xde4f), 0xa9);
        // CB A9 02EF
        gbc.setState(0x4698, 0x5a24, 0x4210, 0xbd36, 0xa69b, 0xc3ea, 0x0, 0x0);
        gbc.writeMem(0x4698, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x5a24);
        EXPECT(gbc.pc(), 0x469a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 02F0
        gbc.setState(0x819, 0x4fc5, 0xdf40, 0xc33e, 0x44d5, 0x7ed2, 0x1, 0x0);
        gbc.writeMem(0x819, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x4fc5);
        EXPECT(gbc.pc(), 0x81b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 02F1
        gbc.setState(0x867a, 0xdab3, 0xd230, 0x9f28, 0x9118, 0xe899, 0x0, 0x1);
        gbc.writeMem(0x867a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xdab3);
        EXPECT(gbc.pc(), 0x867c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x867a), 0xcb);
        EXPECT(gbc.readMem(0x867b), 0xa9);
        // CB A9 02F2
        gbc.setState(0x673c, 0x2e0, 0xed50, 0xd570, 0x8c9, 0x4463, 0x1, 0x0);
        gbc.writeMem(0x673c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x2e0);
        EXPECT(gbc.pc(), 0x673e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 02F3
        gbc.setState(0xba2c, 0x60bc, 0xf2e0, 0x3d39, 0xe121, 0xbe1c, 0x0, 0x0);
        gbc.writeMem(0xba2c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x60bc);
        EXPECT(gbc.pc(), 0xba2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba2c), 0xcb);
        EXPECT(gbc.readMem(0xba2d), 0xa9);
        // CB A9 02F4
        gbc.setState(0x9b, 0x9f58, 0xfff0, 0x9815, 0x67f7, 0x342c, 0x0, 0x1);
        gbc.writeMem(0x9b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x9f58);
        EXPECT(gbc.pc(), 0x9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 02F5
        gbc.setState(0xcfdf, 0xe74e, 0x9f50, 0xee6c, 0x10c4, 0xaf88, 0x1, 0x0);
        gbc.writeMem(0xcfdf, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe74e);
        EXPECT(gbc.pc(), 0xcfe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfdf), 0xcb);
        EXPECT(gbc.readMem(0xcfe0), 0xa9);
        // CB A9 02F6
        gbc.setState(0x6b77, 0x40fe, 0x9330, 0xc66e, 0xe8be, 0x2c19, 0x1, 0x0);
        gbc.writeMem(0x6b77, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x40fe);
        EXPECT(gbc.pc(), 0x6b79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 02F7
        gbc.setState(0x3c0c, 0x57c9, 0x4560, 0x6b8, 0x4d0b, 0xe017, 0x0, 0x0);
        gbc.writeMem(0x3c0c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x57c9);
        EXPECT(gbc.pc(), 0x3c0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 02F8
        gbc.setState(0x8d4c, 0x1dc1, 0xaa40, 0x3334, 0x5f44, 0x76dc, 0x0, 0x1);
        gbc.writeMem(0x8d4c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x1dc1);
        EXPECT(gbc.pc(), 0x8d4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d4c), 0xcb);
        EXPECT(gbc.readMem(0x8d4d), 0xa9);
        // CB A9 02F9
        gbc.setState(0x3704, 0x6bf6, 0x3f30, 0x3d34, 0x2b1, 0x5dd6, 0x1, 0x1);
        gbc.writeMem(0x3704, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x6bf6);
        EXPECT(gbc.pc(), 0x3706);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 02FA
        gbc.setState(0x1e6, 0x962c, 0x5300, 0x413b, 0x8a11, 0x8137, 0x0, 0x1);
        gbc.writeMem(0x1e6, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x962c);
        EXPECT(gbc.pc(), 0x1e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 02FB
        gbc.setState(0x6abb, 0x5bb2, 0x6110, 0xeec9, 0xd782, 0xb2ec, 0x0, 0x0);
        gbc.writeMem(0x6abb, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x5bb2);
        EXPECT(gbc.pc(), 0x6abd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 02FC
        gbc.setState(0x741a, 0x1dcd, 0xf770, 0x48cf, 0x3fdd, 0x6e21, 0x0, 0x1);
        gbc.writeMem(0x741a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x1dcd);
        EXPECT(gbc.pc(), 0x741c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 02FD
        gbc.setState(0xa87e, 0x89bf, 0x7160, 0x4ad2, 0xd63a, 0x75ac, 0x0, 0x1);
        gbc.writeMem(0xa87e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x89bf);
        EXPECT(gbc.pc(), 0xa880);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa87e), 0xcb);
        EXPECT(gbc.readMem(0xa87f), 0xa9);
        // CB A9 02FF
        gbc.setState(0x4ee2, 0xa11a, 0x6f50, 0x2099, 0x3dc6, 0x8f91, 0x1, 0x0);
        gbc.writeMem(0x4ee2, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xa11a);
        EXPECT(gbc.pc(), 0x4ee4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0300
        gbc.setState(0x6bdb, 0x57c5, 0xd290, 0x6b9b, 0x9a98, 0xb1f, 0x0, 0x1);
        gbc.writeMem(0x6bdb, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x57c5);
        EXPECT(gbc.pc(), 0x6bdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0301
        gbc.setState(0x819f, 0x2bb7, 0x5e0, 0x8df8, 0x396e, 0x482e, 0x1, 0x0);
        gbc.writeMem(0x819f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x2bb7);
        EXPECT(gbc.pc(), 0x81a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x819f), 0xcb);
        EXPECT(gbc.readMem(0x81a0), 0xa9);
        // CB A9 0302
        gbc.setState(0x132e, 0xbe5e, 0x2210, 0x1135, 0xba01, 0x6c0a, 0x1, 0x0);
        gbc.writeMem(0x132e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xbe5e);
        EXPECT(gbc.pc(), 0x1330);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0304
        gbc.setState(0x4d76, 0x9113, 0x8510, 0x7efd, 0x397b, 0x691c, 0x1, 0x0);
        gbc.writeMem(0x4d76, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x9113);
        EXPECT(gbc.pc(), 0x4d78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0305
        gbc.setState(0xc17c, 0x4e7c, 0x410, 0xa75b, 0x2c2b, 0x47b2, 0x0, 0x1);
        gbc.writeMem(0xc17c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x4e7c);
        EXPECT(gbc.pc(), 0xc17e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc17c), 0xcb);
        EXPECT(gbc.readMem(0xc17d), 0xa9);
        // CB A9 0306
        gbc.setState(0xc718, 0xfeb3, 0x98f0, 0xbdb0, 0x8750, 0xef44, 0x0, 0x1);
        gbc.writeMem(0xc718, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xfeb3);
        EXPECT(gbc.pc(), 0xc71a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc718), 0xcb);
        EXPECT(gbc.readMem(0xc719), 0xa9);
        // CB A9 0307
        gbc.setState(0x9b2c, 0x4198, 0x6650, 0x4a30, 0xd429, 0xe815, 0x0, 0x1);
        gbc.writeMem(0x9b2c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x4198);
        EXPECT(gbc.pc(), 0x9b2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b2c), 0xcb);
        EXPECT(gbc.readMem(0x9b2d), 0xa9);
        // CB A9 0308
        gbc.setState(0xa504, 0x22ee, 0x89c0, 0x76a4, 0xefe9, 0x63c0, 0x0, 0x1);
        gbc.writeMem(0xa504, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x22ee);
        EXPECT(gbc.pc(), 0xa506);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa504), 0xcb);
        EXPECT(gbc.readMem(0xa505), 0xa9);
        // CB A9 0309
        gbc.setState(0xd56c, 0x2b75, 0x5c80, 0x4b74, 0xe177, 0x5214, 0x0, 0x1);
        gbc.writeMem(0xd56c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x2b75);
        EXPECT(gbc.pc(), 0xd56e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd56c), 0xcb);
        EXPECT(gbc.readMem(0xd56d), 0xa9);
        // CB A9 030A
        gbc.setState(0xd98e, 0x4098, 0xe320, 0x310d, 0xcfa9, 0x5b7c, 0x1, 0x1);
        gbc.writeMem(0xd98e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x4098);
        EXPECT(gbc.pc(), 0xd990);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd98e), 0xcb);
        EXPECT(gbc.readMem(0xd98f), 0xa9);
        // CB A9 030B
        gbc.setState(0x5762, 0x1889, 0xe910, 0xa512, 0x3503, 0x83a7, 0x1, 0x1);
        gbc.writeMem(0x5762, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x1889);
        EXPECT(gbc.pc(), 0x5764);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 030C
        gbc.setState(0x3ed4, 0x11d9, 0x6020, 0xfee5, 0x6ccb, 0x92f3, 0x1, 0x1);
        gbc.writeMem(0x3ed4, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x11d9);
        EXPECT(gbc.pc(), 0x3ed6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 030D
        gbc.setState(0x2464, 0xb00d, 0xcde0, 0x18a3, 0xa64e, 0xe2bd, 0x1, 0x1);
        gbc.writeMem(0x2464, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xb00d);
        EXPECT(gbc.pc(), 0x2466);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 030E
        gbc.setState(0x3e0d, 0x5116, 0x69e0, 0xc075, 0x988d, 0x489, 0x1, 0x0);
        gbc.writeMem(0x3e0d, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x5116);
        EXPECT(gbc.pc(), 0x3e0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 030F
        gbc.setState(0x6796, 0x684c, 0x9030, 0x411b, 0xa30c, 0x28b, 0x1, 0x1);
        gbc.writeMem(0x6796, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x684c);
        EXPECT(gbc.pc(), 0x6798);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0310
        gbc.setState(0xb224, 0xe990, 0x7160, 0xd43f, 0x8ce5, 0x5cf1, 0x0, 0x0);
        gbc.writeMem(0xb224, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xe990);
        EXPECT(gbc.pc(), 0xb226);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb224), 0xcb);
        EXPECT(gbc.readMem(0xb225), 0xa9);
        // CB A9 0311
        gbc.setState(0xc79a, 0x1558, 0x46f0, 0x8014, 0xbf1f, 0xf139, 0x0, 0x1);
        gbc.writeMem(0xc79a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x1558);
        EXPECT(gbc.pc(), 0xc79c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc79a), 0xcb);
        EXPECT(gbc.readMem(0xc79b), 0xa9);
        // CB A9 0312
        gbc.setState(0x2e68, 0x39a6, 0xae40, 0x8496, 0x7c81, 0x83f, 0x1, 0x0);
        gbc.writeMem(0x2e68, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x39a6);
        EXPECT(gbc.pc(), 0x2e6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0313
        gbc.setState(0x2f13, 0xd1fd, 0x9d70, 0x7651, 0x4d4e, 0x663d, 0x0, 0x1);
        gbc.writeMem(0x2f13, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xd1fd);
        EXPECT(gbc.pc(), 0x2f15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0314
        gbc.setState(0x8c74, 0x175f, 0x19e0, 0x5f1e, 0x4064, 0xb128, 0x0, 0x0);
        gbc.writeMem(0x8c74, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x175f);
        EXPECT(gbc.pc(), 0x8c76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c74), 0xcb);
        EXPECT(gbc.readMem(0x8c75), 0xa9);
        // CB A9 0315
        gbc.setState(0xa958, 0x3339, 0xabd0, 0x9be1, 0x8770, 0x9c8b, 0x0, 0x1);
        gbc.writeMem(0xa958, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x3339);
        EXPECT(gbc.pc(), 0xa95a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa958), 0xcb);
        EXPECT(gbc.readMem(0xa959), 0xa9);
        // CB A9 0316
        gbc.setState(0x75e7, 0x3377, 0x16c0, 0xc65e, 0x63f3, 0xb9c8, 0x1, 0x0);
        gbc.writeMem(0x75e7, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x3377);
        EXPECT(gbc.pc(), 0x75e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0317
        gbc.setState(0xcb7f, 0xa99f, 0xd50, 0xd274, 0xf33a, 0x1207, 0x0, 0x0);
        gbc.writeMem(0xcb7f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xa99f);
        EXPECT(gbc.pc(), 0xcb81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb7f), 0xcb);
        EXPECT(gbc.readMem(0xcb80), 0xa9);
        // CB A9 0318
        gbc.setState(0x91c3, 0x725f, 0x7b60, 0x7f9a, 0x54fd, 0x112, 0x0, 0x1);
        gbc.writeMem(0x91c3, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x725f);
        EXPECT(gbc.pc(), 0x91c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91c3), 0xcb);
        EXPECT(gbc.readMem(0x91c4), 0xa9);
        // CB A9 0319
        gbc.setState(0x2004, 0x6e47, 0x5e00, 0x4437, 0x7a8d, 0xd9c7, 0x1, 0x0);
        gbc.writeMem(0x2004, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x6e47);
        EXPECT(gbc.pc(), 0x2006);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 031A
        gbc.setState(0x7a6f, 0xd262, 0x6a90, 0xc6dc, 0xe2cb, 0x19e, 0x1, 0x1);
        gbc.writeMem(0x7a6f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xd262);
        EXPECT(gbc.pc(), 0x7a71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 031B
        gbc.setState(0x7f1f, 0x7276, 0x4d10, 0x9fd9, 0x591e, 0xa3c0, 0x1, 0x1);
        gbc.writeMem(0x7f1f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x7276);
        EXPECT(gbc.pc(), 0x7f21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 031C
        gbc.setState(0xe0c5, 0x48ad, 0x20f0, 0xf461, 0x8d0c, 0x4360, 0x1, 0x0);
        gbc.writeMem(0xe0c5, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x48ad);
        EXPECT(gbc.pc(), 0xe0c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0c5), 0xcb);
        EXPECT(gbc.readMem(0xe0c6), 0xa9);
        // CB A9 031D
        gbc.setState(0xc5ae, 0xacaa, 0x4400, 0xf4c8, 0xd548, 0x6b, 0x1, 0x0);
        gbc.writeMem(0xc5ae, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xacaa);
        EXPECT(gbc.pc(), 0xc5b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5ae), 0xcb);
        EXPECT(gbc.readMem(0xc5af), 0xa9);
        // CB A9 031F
        gbc.setState(0x63cf, 0x29e6, 0xf7d0, 0x4590, 0x2bba, 0x33b, 0x0, 0x0);
        gbc.writeMem(0x63cf, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x29e6);
        EXPECT(gbc.pc(), 0x63d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0320
        gbc.setState(0x4ec5, 0xff96, 0x29a0, 0x80b8, 0x24ff, 0xdb25, 0x1, 0x0);
        gbc.writeMem(0x4ec5, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xff96);
        EXPECT(gbc.pc(), 0x4ec7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0321
        gbc.setState(0x8e08, 0x9178, 0x670, 0x8e81, 0x9c25, 0xc4d9, 0x1, 0x0);
        gbc.writeMem(0x8e08, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x9178);
        EXPECT(gbc.pc(), 0x8e0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e08), 0xcb);
        EXPECT(gbc.readMem(0x8e09), 0xa9);
        // CB A9 0322
        gbc.setState(0xbeef, 0x27f3, 0x50f0, 0x5e72, 0x6e6d, 0x38a, 0x0, 0x1);
        gbc.writeMem(0xbeef, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x27f3);
        EXPECT(gbc.pc(), 0xbef1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbeef), 0xcb);
        EXPECT(gbc.readMem(0xbef0), 0xa9);
        // CB A9 0323
        gbc.setState(0x8190, 0xeaee, 0x6b90, 0xd61f, 0x9d08, 0x17b9, 0x0, 0x1);
        gbc.writeMem(0x8190, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xeaee);
        EXPECT(gbc.pc(), 0x8192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8190), 0xcb);
        EXPECT(gbc.readMem(0x8191), 0xa9);
        // CB A9 0324
        gbc.setState(0x49e2, 0x68b1, 0xa420, 0xad51, 0x4a66, 0xea8, 0x1, 0x1);
        gbc.writeMem(0x49e2, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x68b1);
        EXPECT(gbc.pc(), 0x49e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0325
        gbc.setState(0x644c, 0xf82, 0xc410, 0xa503, 0x63da, 0x6309, 0x1, 0x0);
        gbc.writeMem(0x644c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf82);
        EXPECT(gbc.pc(), 0x644e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0327
        gbc.setState(0x81ac, 0x23b1, 0xefc0, 0x566b, 0xd84b, 0xcee5, 0x1, 0x1);
        gbc.writeMem(0x81ac, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x23b1);
        EXPECT(gbc.pc(), 0x81ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81ac), 0xcb);
        EXPECT(gbc.readMem(0x81ad), 0xa9);
        // CB A9 0328
        gbc.setState(0x1b61, 0xa6c7, 0x5a40, 0x5f38, 0x36d6, 0xe3fc, 0x1, 0x1);
        gbc.writeMem(0x1b61, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xa6c7);
        EXPECT(gbc.pc(), 0x1b63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0329
        gbc.setState(0x308d, 0x82ff, 0xda70, 0xaaf2, 0x6848, 0xcc74, 0x1, 0x0);
        gbc.writeMem(0x308d, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x82ff);
        EXPECT(gbc.pc(), 0x308f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 032A
        gbc.setState(0xc66f, 0xb58d, 0x1c70, 0x5436, 0x5cf3, 0x430c, 0x1, 0x0);
        gbc.writeMem(0xc66f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb58d);
        EXPECT(gbc.pc(), 0xc671);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc66f), 0xcb);
        EXPECT(gbc.readMem(0xc670), 0xa9);
        // CB A9 032B
        gbc.setState(0xd40b, 0x8cd4, 0x5790, 0x31e7, 0x489b, 0x2458, 0x0, 0x1);
        gbc.writeMem(0xd40b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x8cd4);
        EXPECT(gbc.pc(), 0xd40d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd40b), 0xcb);
        EXPECT(gbc.readMem(0xd40c), 0xa9);
        // CB A9 032C
        gbc.setState(0xad6c, 0xdcb9, 0xf1f0, 0xaf1f, 0xae0b, 0xe103, 0x0, 0x1);
        gbc.writeMem(0xad6c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xdcb9);
        EXPECT(gbc.pc(), 0xad6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad6c), 0xcb);
        EXPECT(gbc.readMem(0xad6d), 0xa9);
        // CB A9 032D
        gbc.setState(0xc5a2, 0x6222, 0x9030, 0x6c9, 0x3880, 0x1bec, 0x0, 0x1);
        gbc.writeMem(0xc5a2, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x6222);
        EXPECT(gbc.pc(), 0xc5a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5a2), 0xcb);
        EXPECT(gbc.readMem(0xc5a3), 0xa9);
        // CB A9 032E
        gbc.setState(0x7e2e, 0x852f, 0xe850, 0xc070, 0x4349, 0xec03, 0x1, 0x0);
        gbc.writeMem(0x7e2e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x852f);
        EXPECT(gbc.pc(), 0x7e30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 032F
        gbc.setState(0xc06a, 0xb45f, 0x4a40, 0xa8ba, 0x16bc, 0xa2b, 0x1, 0x0);
        gbc.writeMem(0xc06a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xb45f);
        EXPECT(gbc.pc(), 0xc06c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc06a), 0xcb);
        EXPECT(gbc.readMem(0xc06b), 0xa9);
        // CB A9 0330
        gbc.setState(0x8728, 0xe0bd, 0xe0f0, 0x392e, 0x8eac, 0xce06, 0x1, 0x0);
        gbc.writeMem(0x8728, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xe0bd);
        EXPECT(gbc.pc(), 0x872a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8728), 0xcb);
        EXPECT(gbc.readMem(0x8729), 0xa9);
        // CB A9 0331
        gbc.setState(0x4629, 0xb134, 0xc6c0, 0xb252, 0x5824, 0x82d7, 0x1, 0x0);
        gbc.writeMem(0x4629, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xb134);
        EXPECT(gbc.pc(), 0x462b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0332
        gbc.setState(0x826d, 0xbf1e, 0xee80, 0x21f4, 0xecda, 0xd8f6, 0x1, 0x1);
        gbc.writeMem(0x826d, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xbf1e);
        EXPECT(gbc.pc(), 0x826f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x826d), 0xcb);
        EXPECT(gbc.readMem(0x826e), 0xa9);
        // CB A9 0333
        gbc.setState(0xe5c2, 0x2f2c, 0x6d60, 0xd2d8, 0xe22, 0x4a02, 0x1, 0x1);
        gbc.writeMem(0xe5c2, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x2f2c);
        EXPECT(gbc.pc(), 0xe5c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5c2), 0xcb);
        EXPECT(gbc.readMem(0xe5c3), 0xa9);
        // CB A9 0334
        gbc.setState(0x8c03, 0x2bc8, 0xd4b0, 0x369e, 0xb2a9, 0x8447, 0x0, 0x0);
        gbc.writeMem(0x8c03, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x2bc8);
        EXPECT(gbc.pc(), 0x8c05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c03), 0xcb);
        EXPECT(gbc.readMem(0x8c04), 0xa9);
        // CB A9 0335
        gbc.setState(0xf5b, 0x5d05, 0x2ef0, 0x141b, 0xbaba, 0x925f, 0x0, 0x0);
        gbc.writeMem(0xf5b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x5d05);
        EXPECT(gbc.pc(), 0xf5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0336
        gbc.setState(0x29f1, 0xae1a, 0xec80, 0x48a4, 0xdd9c, 0x6fb1, 0x0, 0x0);
        gbc.writeMem(0x29f1, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xae1a);
        EXPECT(gbc.pc(), 0x29f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0337
        gbc.setState(0x5b1, 0xdbae, 0x8820, 0x35ed, 0x4d71, 0xfb33, 0x1, 0x1);
        gbc.writeMem(0x5b1, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xdbae);
        EXPECT(gbc.pc(), 0x5b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0338
        gbc.setState(0x2cee, 0xeea, 0xa2b0, 0x6342, 0xed14, 0xf2, 0x0, 0x0);
        gbc.writeMem(0x2cee, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xeea);
        EXPECT(gbc.pc(), 0x2cf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0339
        gbc.setState(0x869c, 0x6c1e, 0xa020, 0x84eb, 0x99fa, 0x9aa2, 0x1, 0x1);
        gbc.writeMem(0x869c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x6c1e);
        EXPECT(gbc.pc(), 0x869e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x869c), 0xcb);
        EXPECT(gbc.readMem(0x869d), 0xa9);
        // CB A9 033A
        gbc.setState(0x7f1f, 0x2af6, 0xe270, 0xb88e, 0x6cf9, 0x5e09, 0x0, 0x0);
        gbc.writeMem(0x7f1f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x2af6);
        EXPECT(gbc.pc(), 0x7f21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 033B
        gbc.setState(0xce1e, 0x7067, 0x3cc0, 0xe38f, 0x9b25, 0xc49f, 0x1, 0x0);
        gbc.writeMem(0xce1e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x7067);
        EXPECT(gbc.pc(), 0xce20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce1e), 0xcb);
        EXPECT(gbc.readMem(0xce1f), 0xa9);
        // CB A9 033C
        gbc.setState(0xb1f7, 0x986c, 0x5b70, 0x6157, 0xd446, 0x88f6, 0x0, 0x0);
        gbc.writeMem(0xb1f7, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x986c);
        EXPECT(gbc.pc(), 0xb1f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1f7), 0xcb);
        EXPECT(gbc.readMem(0xb1f8), 0xa9);
        // CB A9 033D
        gbc.setState(0x6b2e, 0x5a34, 0xe2d0, 0xf923, 0x28ef, 0x4b77, 0x1, 0x1);
        gbc.writeMem(0x6b2e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x5a34);
        EXPECT(gbc.pc(), 0x6b30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 033E
        gbc.setState(0x7d1b, 0xd3cc, 0x45e0, 0xeab1, 0xe0bd, 0x1069, 0x0, 0x0);
        gbc.writeMem(0x7d1b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd3cc);
        EXPECT(gbc.pc(), 0x7d1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 033F
        gbc.setState(0xe999, 0xb6dc, 0x61e0, 0xb660, 0x5570, 0x40f4, 0x0, 0x1);
        gbc.writeMem(0xe999, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xb6dc);
        EXPECT(gbc.pc(), 0xe99b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe999), 0xcb);
        EXPECT(gbc.readMem(0xe99a), 0xa9);
        // CB A9 0340
        gbc.setState(0x9f2a, 0xed69, 0x3190, 0x63c0, 0x9ce5, 0x2dcf, 0x0, 0x0);
        gbc.writeMem(0x9f2a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xed69);
        EXPECT(gbc.pc(), 0x9f2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f2a), 0xcb);
        EXPECT(gbc.readMem(0x9f2b), 0xa9);
        // CB A9 0341
        gbc.setState(0x4d7e, 0x93b8, 0xad50, 0xda28, 0x120b, 0xccb, 0x1, 0x1);
        gbc.writeMem(0x4d7e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x93b8);
        EXPECT(gbc.pc(), 0x4d80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0343
        gbc.setState(0x72e3, 0x4e1c, 0x3290, 0xae47, 0xf786, 0x6dab, 0x0, 0x0);
        gbc.writeMem(0x72e3, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x4e1c);
        EXPECT(gbc.pc(), 0x72e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0344
        gbc.setState(0x342, 0x4aa3, 0xc650, 0x713e, 0xdc53, 0x3e31, 0x1, 0x1);
        gbc.writeMem(0x342, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x4aa3);
        EXPECT(gbc.pc(), 0x344);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0345
        gbc.setState(0x9d6a, 0x81c2, 0x1590, 0xa73a, 0x6aec, 0xf04a, 0x0, 0x1);
        gbc.writeMem(0x9d6a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x81c2);
        EXPECT(gbc.pc(), 0x9d6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d6a), 0xcb);
        EXPECT(gbc.readMem(0x9d6b), 0xa9);
        // CB A9 0346
        gbc.setState(0xac12, 0x57eb, 0xf630, 0xf702, 0xbfe9, 0x5645, 0x1, 0x1);
        gbc.writeMem(0xac12, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x57eb);
        EXPECT(gbc.pc(), 0xac14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac12), 0xcb);
        EXPECT(gbc.readMem(0xac13), 0xa9);
        // CB A9 0347
        gbc.setState(0x2e8b, 0x50e5, 0x34f0, 0xce60, 0xd643, 0x9cdc, 0x1, 0x1);
        gbc.writeMem(0x2e8b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x50e5);
        EXPECT(gbc.pc(), 0x2e8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0348
        gbc.setState(0x8334, 0x17df, 0xf980, 0xbda6, 0xfff8, 0xe6d6, 0x0, 0x0);
        gbc.writeMem(0x8334, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x17df);
        EXPECT(gbc.pc(), 0x8336);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8334), 0xcb);
        EXPECT(gbc.readMem(0x8335), 0xa9);
        // CB A9 0349
        gbc.setState(0xd65, 0x20cf, 0x85c0, 0x7b46, 0xba64, 0xb9f, 0x1, 0x1);
        gbc.writeMem(0xd65, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x20cf);
        EXPECT(gbc.pc(), 0xd67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 034A
        gbc.setState(0x73fd, 0x8492, 0xaad0, 0xd648, 0xabea, 0xd82, 0x1, 0x1);
        gbc.writeMem(0x73fd, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x8492);
        EXPECT(gbc.pc(), 0x73ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 034B
        gbc.setState(0x3fe6, 0x7d8c, 0xc370, 0x94a9, 0x2519, 0xaef, 0x1, 0x1);
        gbc.writeMem(0x3fe6, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x7d8c);
        EXPECT(gbc.pc(), 0x3fe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 034C
        gbc.setState(0xe08f, 0xd822, 0x8ea0, 0x4cc8, 0x5882, 0x1aea, 0x1, 0x1);
        gbc.writeMem(0xe08f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xd822);
        EXPECT(gbc.pc(), 0xe091);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe08f), 0xcb);
        EXPECT(gbc.readMem(0xe090), 0xa9);
        // CB A9 034D
        gbc.setState(0x3396, 0xb6b, 0x6810, 0x8390, 0x372b, 0x1388, 0x1, 0x0);
        gbc.writeMem(0x3396, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xb6b);
        EXPECT(gbc.pc(), 0x3398);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 034F
        gbc.setState(0xd649, 0x2ea8, 0x35c0, 0x689a, 0x6c5e, 0x39e5, 0x1, 0x1);
        gbc.writeMem(0xd649, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2ea8);
        EXPECT(gbc.pc(), 0xd64b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd649), 0xcb);
        EXPECT(gbc.readMem(0xd64a), 0xa9);
        // CB A9 0350
        gbc.setState(0x4047, 0x246c, 0xe560, 0xbc2c, 0x25b5, 0xd12, 0x0, 0x1);
        gbc.writeMem(0x4047, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x246c);
        EXPECT(gbc.pc(), 0x4049);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0351
        gbc.setState(0x677e, 0x5b9f, 0x5570, 0x14fc, 0x7eda, 0x3c4b, 0x1, 0x1);
        gbc.writeMem(0x677e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x5b9f);
        EXPECT(gbc.pc(), 0x6780);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0352
        gbc.setState(0x556c, 0xd382, 0xd10, 0xaa6c, 0x275a, 0x8396, 0x0, 0x0);
        gbc.writeMem(0x556c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xd382);
        EXPECT(gbc.pc(), 0x556e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0353
        gbc.setState(0x4016, 0xf984, 0x8a0, 0x5bde, 0xc3af, 0x1795, 0x0, 0x0);
        gbc.writeMem(0x4016, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xf984);
        EXPECT(gbc.pc(), 0x4018);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0354
        gbc.setState(0x61cf, 0x8d41, 0xf120, 0xbd2d, 0x8b8a, 0x6244, 0x0, 0x1);
        gbc.writeMem(0x61cf, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x8d41);
        EXPECT(gbc.pc(), 0x61d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0355
        gbc.setState(0x88b, 0xf41d, 0xa440, 0xaccf, 0x1edf, 0x82e8, 0x1, 0x0);
        gbc.writeMem(0x88b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xf41d);
        EXPECT(gbc.pc(), 0x88d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0356
        gbc.setState(0xc98b, 0x7554, 0x3810, 0x52b4, 0x9005, 0x8081, 0x1, 0x1);
        gbc.writeMem(0xc98b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x7554);
        EXPECT(gbc.pc(), 0xc98d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc98b), 0xcb);
        EXPECT(gbc.readMem(0xc98c), 0xa9);
        // CB A9 0357
        gbc.setState(0x3cbe, 0xd7b6, 0x9890, 0xbb08, 0xe2d7, 0x4f5d, 0x1, 0x0);
        gbc.writeMem(0x3cbe, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xd7b6);
        EXPECT(gbc.pc(), 0x3cc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0358
        gbc.setState(0x5748, 0x90cc, 0x6200, 0xbc7d, 0xecd1, 0x74e9, 0x0, 0x1);
        gbc.writeMem(0x5748, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x90cc);
        EXPECT(gbc.pc(), 0x574a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0359
        gbc.setState(0x4c37, 0x1f10, 0x2e0, 0x5fb4, 0x5b76, 0xe2d9, 0x0, 0x1);
        gbc.writeMem(0x4c37, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x1f10);
        EXPECT(gbc.pc(), 0x4c39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 035A
        gbc.setState(0xcf23, 0xff8f, 0x8b30, 0x4c62, 0xeb6d, 0x69ea, 0x0, 0x0);
        gbc.writeMem(0xcf23, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xff8f);
        EXPECT(gbc.pc(), 0xcf25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf23), 0xcb);
        EXPECT(gbc.readMem(0xcf24), 0xa9);
        // CB A9 035B
        gbc.setState(0x885, 0x4ccf, 0x2c00, 0x6db5, 0x38c3, 0x7e53, 0x0, 0x0);
        gbc.writeMem(0x885, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x4ccf);
        EXPECT(gbc.pc(), 0x887);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 035C
        gbc.setState(0xc5, 0x5f41, 0x39e0, 0xa18e, 0x66ec, 0xdc74, 0x0, 0x0);
        gbc.writeMem(0xc5, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5f41);
        EXPECT(gbc.pc(), 0xc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 035D
        gbc.setState(0xd942, 0x11cf, 0xd9a0, 0x9d49, 0x7987, 0xade9, 0x1, 0x0);
        gbc.writeMem(0xd942, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x11cf);
        EXPECT(gbc.pc(), 0xd944);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd942), 0xcb);
        EXPECT(gbc.readMem(0xd943), 0xa9);
        // CB A9 035E
        gbc.setState(0xd104, 0x8ca8, 0xf040, 0xc608, 0x5988, 0x2d28, 0x0, 0x1);
        gbc.writeMem(0xd104, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x8ca8);
        EXPECT(gbc.pc(), 0xd106);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd104), 0xcb);
        EXPECT(gbc.readMem(0xd105), 0xa9);
        // CB A9 035F
        gbc.setState(0x3f48, 0x9d7b, 0x5550, 0xdffd, 0xe32f, 0xa3a2, 0x0, 0x1);
        gbc.writeMem(0x3f48, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9d7b);
        EXPECT(gbc.pc(), 0x3f4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0360
        gbc.setState(0x5f0b, 0xe84e, 0x9410, 0xb432, 0xbb72, 0x2ce0, 0x1, 0x1);
        gbc.writeMem(0x5f0b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe84e);
        EXPECT(gbc.pc(), 0x5f0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0361
        gbc.setState(0xccad, 0xe476, 0x75e0, 0xad7d, 0xb273, 0xf5f1, 0x0, 0x1);
        gbc.writeMem(0xccad, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xe476);
        EXPECT(gbc.pc(), 0xccaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccad), 0xcb);
        EXPECT(gbc.readMem(0xccae), 0xa9);
        // CB A9 0363
        gbc.setState(0xecef, 0xe78d, 0x6f70, 0x4927, 0xf1e6, 0xe80d, 0x0, 0x1);
        gbc.writeMem(0xecef, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xe78d);
        EXPECT(gbc.pc(), 0xecf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecef), 0xcb);
        EXPECT(gbc.readMem(0xecf0), 0xa9);
        // CB A9 0364
        gbc.setState(0x268c, 0xa936, 0x18f0, 0xa79b, 0x4a5a, 0xa05d, 0x0, 0x0);
        gbc.writeMem(0x268c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xa936);
        EXPECT(gbc.pc(), 0x268e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0365
        gbc.setState(0x9e01, 0x5692, 0x28c0, 0xb9b8, 0x6c37, 0x6d1b, 0x0, 0x1);
        gbc.writeMem(0x9e01, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x5692);
        EXPECT(gbc.pc(), 0x9e03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e01), 0xcb);
        EXPECT(gbc.readMem(0x9e02), 0xa9);
        // CB A9 0366
        gbc.setState(0xb5ca, 0xc40a, 0xa810, 0x38ef, 0x414d, 0x1ee6, 0x0, 0x1);
        gbc.writeMem(0xb5ca, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xc40a);
        EXPECT(gbc.pc(), 0xb5cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5ca), 0xcb);
        EXPECT(gbc.readMem(0xb5cb), 0xa9);
        // CB A9 0368
        gbc.setState(0x78f2, 0x6af0, 0x79b0, 0x4f94, 0x6bc5, 0xf3c8, 0x1, 0x0);
        gbc.writeMem(0x78f2, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x6af0);
        EXPECT(gbc.pc(), 0x78f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0369
        gbc.setState(0xb606, 0x6596, 0x2ce0, 0x34f, 0x30f8, 0x9644, 0x1, 0x1);
        gbc.writeMem(0xb606, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x6596);
        EXPECT(gbc.pc(), 0xb608);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb606), 0xcb);
        EXPECT(gbc.readMem(0xb607), 0xa9);
        // CB A9 036B
        gbc.setState(0xb527, 0x440d, 0x9f10, 0xadbc, 0x60e1, 0xbfb7, 0x1, 0x0);
        gbc.writeMem(0xb527, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x440d);
        EXPECT(gbc.pc(), 0xb529);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb527), 0xcb);
        EXPECT(gbc.readMem(0xb528), 0xa9);
        // CB A9 036C
        gbc.setState(0xecc6, 0x9438, 0xe30, 0x8d01, 0x64fd, 0x9fc, 0x1, 0x1);
        gbc.writeMem(0xecc6, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x9438);
        EXPECT(gbc.pc(), 0xecc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecc6), 0xcb);
        EXPECT(gbc.readMem(0xecc7), 0xa9);
        // CB A9 036D
        gbc.setState(0x7faf, 0x52b6, 0x1ca0, 0xb305, 0x33c6, 0xd538, 0x1, 0x0);
        gbc.writeMem(0x7faf, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x52b6);
        EXPECT(gbc.pc(), 0x7fb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 036E
        gbc.setState(0x599, 0x6b3b, 0x4320, 0x12f3, 0xa4b2, 0x7ed3, 0x0, 0x0);
        gbc.writeMem(0x599, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x6b3b);
        EXPECT(gbc.pc(), 0x59b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 036F
        gbc.setState(0x9a41, 0xdc0d, 0xbf70, 0xaadc, 0xd6b6, 0x37f4, 0x1, 0x1);
        gbc.writeMem(0x9a41, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xdc0d);
        EXPECT(gbc.pc(), 0x9a43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a41), 0xcb);
        EXPECT(gbc.readMem(0x9a42), 0xa9);
        // CB A9 0370
        gbc.setState(0x5a3a, 0x2f06, 0x4880, 0xd714, 0x220, 0xebd8, 0x0, 0x1);
        gbc.writeMem(0x5a3a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x2f06);
        EXPECT(gbc.pc(), 0x5a3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0371
        gbc.setState(0x8819, 0x39e0, 0xc480, 0x40f2, 0x50fe, 0x994, 0x1, 0x1);
        gbc.writeMem(0x8819, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x39e0);
        EXPECT(gbc.pc(), 0x881b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8819), 0xcb);
        EXPECT(gbc.readMem(0x881a), 0xa9);
        // CB A9 0372
        gbc.setState(0xe8b8, 0x9cb0, 0x2a40, 0x2312, 0x660b, 0x9306, 0x1, 0x1);
        gbc.writeMem(0xe8b8, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x9cb0);
        EXPECT(gbc.pc(), 0xe8ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8b8), 0xcb);
        EXPECT(gbc.readMem(0xe8b9), 0xa9);
        // CB A9 0373
        gbc.setState(0xc57a, 0xab91, 0xf900, 0xda1d, 0x9a5e, 0xfb03, 0x0, 0x1);
        gbc.writeMem(0xc57a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xab91);
        EXPECT(gbc.pc(), 0xc57c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc57a), 0xcb);
        EXPECT(gbc.readMem(0xc57b), 0xa9);
        // CB A9 0374
        gbc.setState(0xbc8f, 0xc5db, 0x46a0, 0x54dc, 0x87b8, 0x1be7, 0x0, 0x1);
        gbc.writeMem(0xbc8f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc5db);
        EXPECT(gbc.pc(), 0xbc91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc8f), 0xcb);
        EXPECT(gbc.readMem(0xbc90), 0xa9);
        // CB A9 0375
        gbc.setState(0x9443, 0x7167, 0xac20, 0x8436, 0x43d4, 0x714f, 0x1, 0x0);
        gbc.writeMem(0x9443, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x7167);
        EXPECT(gbc.pc(), 0x9445);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9443), 0xcb);
        EXPECT(gbc.readMem(0x9444), 0xa9);
        // CB A9 0376
        gbc.setState(0xca79, 0xb75d, 0xb2f0, 0x6dc1, 0x4c93, 0xffcf, 0x1, 0x1);
        gbc.writeMem(0xca79, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xb75d);
        EXPECT(gbc.pc(), 0xca7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca79), 0xcb);
        EXPECT(gbc.readMem(0xca7a), 0xa9);
        // CB A9 0377
        gbc.setState(0x4986, 0xd165, 0x7ee0, 0x51ae, 0x8d3b, 0xd98d, 0x0, 0x0);
        gbc.writeMem(0x4986, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xd165);
        EXPECT(gbc.pc(), 0x4988);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0378
        gbc.setState(0xbda8, 0xfb01, 0x9680, 0x76e7, 0x1a5c, 0x74e0, 0x0, 0x0);
        gbc.writeMem(0xbda8, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xfb01);
        EXPECT(gbc.pc(), 0xbdaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbda8), 0xcb);
        EXPECT(gbc.readMem(0xbda9), 0xa9);
        // CB A9 0379
        gbc.setState(0xdaa5, 0xc779, 0xe7f0, 0xc5ef, 0xc9d6, 0x50a, 0x1, 0x1);
        gbc.writeMem(0xdaa5, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xc779);
        EXPECT(gbc.pc(), 0xdaa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaa5), 0xcb);
        EXPECT(gbc.readMem(0xdaa6), 0xa9);
        // CB A9 037A
        gbc.setState(0x9ad9, 0xf42, 0xbf80, 0x958d, 0x796b, 0x299f, 0x0, 0x0);
        gbc.writeMem(0x9ad9, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xf42);
        EXPECT(gbc.pc(), 0x9adb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ad9), 0xcb);
        EXPECT(gbc.readMem(0x9ada), 0xa9);
        // CB A9 037B
        gbc.setState(0xd4cf, 0x7fc9, 0xd410, 0x24a9, 0xc8b3, 0xc203, 0x1, 0x0);
        gbc.writeMem(0xd4cf, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x7fc9);
        EXPECT(gbc.pc(), 0xd4d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4cf), 0xcb);
        EXPECT(gbc.readMem(0xd4d0), 0xa9);
        // CB A9 037D
        gbc.setState(0x5e7b, 0x5790, 0x7a00, 0x291, 0x600f, 0x3112, 0x0, 0x1);
        gbc.writeMem(0x5e7b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x5790);
        EXPECT(gbc.pc(), 0x5e7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 037E
        gbc.setState(0x7155, 0xedc2, 0xa690, 0xa4aa, 0x8619, 0x796b, 0x0, 0x0);
        gbc.writeMem(0x7155, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xedc2);
        EXPECT(gbc.pc(), 0x7157);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 037F
        gbc.setState(0x578f, 0x1a62, 0x17a0, 0x637f, 0x8183, 0x2428, 0x0, 0x0);
        gbc.writeMem(0x578f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x1a62);
        EXPECT(gbc.pc(), 0x5791);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0380
        gbc.setState(0x8089, 0xfdb3, 0x50b0, 0x2218, 0x7e17, 0x756d, 0x1, 0x1);
        gbc.writeMem(0x8089, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xfdb3);
        EXPECT(gbc.pc(), 0x808b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8089), 0xcb);
        EXPECT(gbc.readMem(0x808a), 0xa9);
        // CB A9 0381
        gbc.setState(0x6175, 0x8031, 0x14d0, 0x9c97, 0xea47, 0x908f, 0x0, 0x1);
        gbc.writeMem(0x6175, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x8031);
        EXPECT(gbc.pc(), 0x6177);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0382
        gbc.setState(0x6609, 0x74f7, 0x6c50, 0x21df, 0x8ec7, 0x47a3, 0x0, 0x1);
        gbc.writeMem(0x6609, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x74f7);
        EXPECT(gbc.pc(), 0x660b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0383
        gbc.setState(0xdf4b, 0xde1, 0xd160, 0xed8b, 0xaab8, 0xa78c, 0x1, 0x1);
        gbc.writeMem(0xdf4b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xde1);
        EXPECT(gbc.pc(), 0xdf4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf4b), 0xcb);
        EXPECT(gbc.readMem(0xdf4c), 0xa9);
        // CB A9 0384
        gbc.setState(0xd445, 0xea6c, 0x8220, 0x5102, 0x1a2b, 0x2030, 0x0, 0x0);
        gbc.writeMem(0xd445, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xea6c);
        EXPECT(gbc.pc(), 0xd447);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd445), 0xcb);
        EXPECT(gbc.readMem(0xd446), 0xa9);
        // CB A9 0385
        gbc.setState(0xa878, 0x6e46, 0x3360, 0x91ec, 0x8d7c, 0xc92, 0x1, 0x1);
        gbc.writeMem(0xa878, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x6e46);
        EXPECT(gbc.pc(), 0xa87a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa878), 0xcb);
        EXPECT(gbc.readMem(0xa879), 0xa9);
        // CB A9 0386
        gbc.setState(0x3cf7, 0x2c6d, 0xae70, 0x9a03, 0xa8f3, 0x67, 0x1, 0x1);
        gbc.writeMem(0x3cf7, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x2c6d);
        EXPECT(gbc.pc(), 0x3cf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0387
        gbc.setState(0x5727, 0x27cd, 0x2790, 0xfc9e, 0x4f93, 0x2b0f, 0x1, 0x1);
        gbc.writeMem(0x5727, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x27cd);
        EXPECT(gbc.pc(), 0x5729);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0388
        gbc.setState(0x8b89, 0xc106, 0x82d0, 0xf80e, 0xb175, 0x90ea, 0x0, 0x0);
        gbc.writeMem(0x8b89, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xc106);
        EXPECT(gbc.pc(), 0x8b8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b89), 0xcb);
        EXPECT(gbc.readMem(0x8b8a), 0xa9);
        // CB A9 038A
        gbc.setState(0xbfac, 0x80fa, 0x7110, 0x6918, 0x1559, 0x7d3e, 0x1, 0x0);
        gbc.writeMem(0xbfac, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x80fa);
        EXPECT(gbc.pc(), 0xbfae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfac), 0xcb);
        EXPECT(gbc.readMem(0xbfad), 0xa9);
        // CB A9 038B
        gbc.setState(0x1a8b, 0xc3d3, 0xd030, 0xfb05, 0x17c6, 0x5392, 0x0, 0x0);
        gbc.writeMem(0x1a8b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xc3d3);
        EXPECT(gbc.pc(), 0x1a8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 038C
        gbc.setState(0x925e, 0x84dd, 0xd110, 0xdae7, 0xca82, 0x7ac3, 0x0, 0x1);
        gbc.writeMem(0x925e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x84dd);
        EXPECT(gbc.pc(), 0x9260);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x925e), 0xcb);
        EXPECT(gbc.readMem(0x925f), 0xa9);
        // CB A9 038D
        gbc.setState(0x1d00, 0xef9b, 0xd2d0, 0x901b, 0x1889, 0x98e, 0x1, 0x1);
        gbc.writeMem(0x1d00, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xef9b);
        EXPECT(gbc.pc(), 0x1d02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 038E
        gbc.setState(0xdc34, 0x2138, 0x50b0, 0x24a, 0xa4e1, 0x8326, 0x0, 0x1);
        gbc.writeMem(0xdc34, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x2138);
        EXPECT(gbc.pc(), 0xdc36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc34), 0xcb);
        EXPECT(gbc.readMem(0xdc35), 0xa9);
        // CB A9 0390
        gbc.setState(0xc267, 0x1258, 0xa830, 0x58c0, 0xd601, 0xaac3, 0x0, 0x0);
        gbc.writeMem(0xc267, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x1258);
        EXPECT(gbc.pc(), 0xc269);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc267), 0xcb);
        EXPECT(gbc.readMem(0xc268), 0xa9);
        // CB A9 0391
        gbc.setState(0xc5c8, 0x8b38, 0xc930, 0x2b0c, 0x7217, 0xa176, 0x1, 0x1);
        gbc.writeMem(0xc5c8, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x8b38);
        EXPECT(gbc.pc(), 0xc5ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5c8), 0xcb);
        EXPECT(gbc.readMem(0xc5c9), 0xa9);
        // CB A9 0392
        gbc.setState(0xa8f, 0x5a5a, 0x4f00, 0xd420, 0x25b1, 0x87c7, 0x0, 0x0);
        gbc.writeMem(0xa8f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x5a5a);
        EXPECT(gbc.pc(), 0xa91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0393
        gbc.setState(0xc734, 0x1b13, 0x3030, 0xb374, 0x61ee, 0x8ce6, 0x0, 0x0);
        gbc.writeMem(0xc734, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1b13);
        EXPECT(gbc.pc(), 0xc736);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc734), 0xcb);
        EXPECT(gbc.readMem(0xc735), 0xa9);
        // CB A9 0394
        gbc.setState(0xa1c1, 0x3fff, 0xe660, 0xd935, 0x6a77, 0x4a1b, 0x1, 0x0);
        gbc.writeMem(0xa1c1, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x3fff);
        EXPECT(gbc.pc(), 0xa1c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1c1), 0xcb);
        EXPECT(gbc.readMem(0xa1c2), 0xa9);
        // CB A9 0395
        gbc.setState(0x2c28, 0xf46e, 0x8c50, 0x6276, 0x7f7a, 0xb442, 0x0, 0x0);
        gbc.writeMem(0x2c28, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xf46e);
        EXPECT(gbc.pc(), 0x2c2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0396
        gbc.setState(0x4c3f, 0x6b12, 0x1630, 0xe3f0, 0xffa1, 0xa9b9, 0x0, 0x1);
        gbc.writeMem(0x4c3f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x6b12);
        EXPECT(gbc.pc(), 0x4c41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 0397
        gbc.setState(0x13a9, 0xe0e6, 0x1fe0, 0x722f, 0x1622, 0x6666, 0x1, 0x0);
        gbc.writeMem(0x13a9, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xe0e6);
        EXPECT(gbc.pc(), 0x13ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 0398
        gbc.setState(0xa474, 0x5d7e, 0x26b0, 0x2c8c, 0x15cf, 0xb65d, 0x0, 0x0);
        gbc.writeMem(0xa474, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x5d7e);
        EXPECT(gbc.pc(), 0xa476);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa474), 0xcb);
        EXPECT(gbc.readMem(0xa475), 0xa9);
        // CB A9 0399
        gbc.setState(0x49f6, 0x7d35, 0xb610, 0x3729, 0x517e, 0xcd95, 0x1, 0x0);
        gbc.writeMem(0x49f6, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x7d35);
        EXPECT(gbc.pc(), 0x49f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 039A
        gbc.setState(0xc736, 0xadeb, 0xdf30, 0xcbc4, 0xb2ab, 0x3eca, 0x0, 0x1);
        gbc.writeMem(0xc736, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xadeb);
        EXPECT(gbc.pc(), 0xc738);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc736), 0xcb);
        EXPECT(gbc.readMem(0xc737), 0xa9);
        // CB A9 039B
        gbc.setState(0x7914, 0x5519, 0xdcd0, 0x5bf7, 0x1a82, 0xfdfd, 0x1, 0x1);
        gbc.writeMem(0x7914, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x5519);
        EXPECT(gbc.pc(), 0x7916);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 039C
        gbc.setState(0xba7a, 0x27ee, 0x5400, 0x21c2, 0x32af, 0xc755, 0x1, 0x1);
        gbc.writeMem(0xba7a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x27ee);
        EXPECT(gbc.pc(), 0xba7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba7a), 0xcb);
        EXPECT(gbc.readMem(0xba7b), 0xa9);
        // CB A9 039D
        gbc.setState(0x85ed, 0x728e, 0xc780, 0x9216, 0x5021, 0x3e85, 0x1, 0x1);
        gbc.writeMem(0x85ed, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x728e);
        EXPECT(gbc.pc(), 0x85ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85ed), 0xcb);
        EXPECT(gbc.readMem(0x85ee), 0xa9);
        // CB A9 039E
        gbc.setState(0xb20d, 0x8152, 0x25f0, 0x6145, 0x51b3, 0xf6e, 0x1, 0x1);
        gbc.writeMem(0xb20d, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x8152);
        EXPECT(gbc.pc(), 0xb20f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb20d), 0xcb);
        EXPECT(gbc.readMem(0xb20e), 0xa9);
        // CB A9 039F
        gbc.setState(0xe35f, 0x8d83, 0x52b0, 0xf95d, 0xc767, 0xcb5a, 0x1, 0x1);
        gbc.writeMem(0xe35f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x8d83);
        EXPECT(gbc.pc(), 0xe361);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe35f), 0xcb);
        EXPECT(gbc.readMem(0xe360), 0xa9);
        // CB A9 03A0
        gbc.setState(0xd5bd, 0x4e44, 0x1210, 0xd6ed, 0x4749, 0x96e9, 0x0, 0x0);
        gbc.writeMem(0xd5bd, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x4e44);
        EXPECT(gbc.pc(), 0xd5bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5bd), 0xcb);
        EXPECT(gbc.readMem(0xd5be), 0xa9);
        // CB A9 03A1
        gbc.setState(0x266b, 0xd226, 0xda00, 0x5b76, 0xe40a, 0x6ed2, 0x0, 0x0);
        gbc.writeMem(0x266b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xd226);
        EXPECT(gbc.pc(), 0x266d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 03A2
        gbc.setState(0x98e8, 0xe568, 0x5cc0, 0xd40b, 0xc204, 0xe315, 0x1, 0x0);
        gbc.writeMem(0x98e8, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xe568);
        EXPECT(gbc.pc(), 0x98ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98e8), 0xcb);
        EXPECT(gbc.readMem(0x98e9), 0xa9);
        // CB A9 03A3
        gbc.setState(0x2509, 0xb741, 0x7430, 0xe8d2, 0xab7c, 0x95e5, 0x0, 0x0);
        gbc.writeMem(0x2509, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xb741);
        EXPECT(gbc.pc(), 0x250b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 03A4
        gbc.setState(0xbe64, 0xc88, 0x3510, 0x752c, 0xa6db, 0x65fb, 0x0, 0x1);
        gbc.writeMem(0xbe64, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xc88);
        EXPECT(gbc.pc(), 0xbe66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe64), 0xcb);
        EXPECT(gbc.readMem(0xbe65), 0xa9);
        // CB A9 03A5
        gbc.setState(0xdf7c, 0x47ed, 0x2ef0, 0xb3c9, 0x3d35, 0xcb30, 0x0, 0x0);
        gbc.writeMem(0xdf7c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x47ed);
        EXPECT(gbc.pc(), 0xdf7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf7c), 0xcb);
        EXPECT(gbc.readMem(0xdf7d), 0xa9);
        // CB A9 03A6
        gbc.setState(0x26d3, 0xc158, 0x78f0, 0x470b, 0x7e9c, 0x167c, 0x1, 0x0);
        gbc.writeMem(0x26d3, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xc158);
        EXPECT(gbc.pc(), 0x26d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 03A7
        gbc.setState(0xa4ce, 0xcbfb, 0x6c30, 0x8df, 0x836a, 0x2084, 0x0, 0x0);
        gbc.writeMem(0xa4ce, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xcbfb);
        EXPECT(gbc.pc(), 0xa4d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4ce), 0xcb);
        EXPECT(gbc.readMem(0xa4cf), 0xa9);
        // CB A9 03A8
        gbc.setState(0xd778, 0xb30c, 0x1d80, 0xbd2d, 0xe02a, 0xf263, 0x0, 0x1);
        gbc.writeMem(0xd778, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xb30c);
        EXPECT(gbc.pc(), 0xd77a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd778), 0xcb);
        EXPECT(gbc.readMem(0xd779), 0xa9);
        // CB A9 03A9
        gbc.setState(0x65fb, 0x9525, 0x4f50, 0x373, 0x3f68, 0x739c, 0x0, 0x1);
        gbc.writeMem(0x65fb, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x9525);
        EXPECT(gbc.pc(), 0x65fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 03AA
        gbc.setState(0x6481, 0x7a32, 0xb6d0, 0xa7b4, 0xe3bf, 0x2a1a, 0x1, 0x0);
        gbc.writeMem(0x6481, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x7a32);
        EXPECT(gbc.pc(), 0x6483);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 03AB
        gbc.setState(0x7f8f, 0x80b5, 0xf8a0, 0xb583, 0x9816, 0xd4c6, 0x1, 0x1);
        gbc.writeMem(0x7f8f, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x80b5);
        EXPECT(gbc.pc(), 0x7f91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 03AC
        gbc.setState(0xab12, 0x1884, 0x1c90, 0xcc3b, 0x47f1, 0x6c24, 0x1, 0x1);
        gbc.writeMem(0xab12, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x1884);
        EXPECT(gbc.pc(), 0xab14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab12), 0xcb);
        EXPECT(gbc.readMem(0xab13), 0xa9);
        // CB A9 03AD
        gbc.setState(0x714a, 0xc81a, 0x89f0, 0x6c7a, 0x16ae, 0x47ec, 0x1, 0x0);
        gbc.writeMem(0x714a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc81a);
        EXPECT(gbc.pc(), 0x714c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 03AE
        gbc.setState(0x39fb, 0x4c51, 0x27e0, 0x6be5, 0x33f5, 0x976e, 0x1, 0x0);
        gbc.writeMem(0x39fb, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x4c51);
        EXPECT(gbc.pc(), 0x39fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 03AF
        gbc.setState(0x6821, 0x6950, 0xc670, 0x5155, 0xa67d, 0xb6ce, 0x0, 0x1);
        gbc.writeMem(0x6821, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x6950);
        EXPECT(gbc.pc(), 0x6823);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 03B0
        gbc.setState(0xc2b5, 0x851f, 0xb0a0, 0xf324, 0x2f99, 0xd9f6, 0x0, 0x0);
        gbc.writeMem(0xc2b5, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x851f);
        EXPECT(gbc.pc(), 0xc2b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2b5), 0xcb);
        EXPECT(gbc.readMem(0xc2b6), 0xa9);
        // CB A9 03B1
        gbc.setState(0x4cf8, 0xf0ce, 0xdc0, 0xcfcc, 0x7f9a, 0xf487, 0x0, 0x0);
        gbc.writeMem(0x4cf8, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xf0ce);
        EXPECT(gbc.pc(), 0x4cfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 03B3
        gbc.setState(0x69d5, 0x2fb6, 0x33e0, 0x7f28, 0xb4e1, 0x57aa, 0x0, 0x0);
        gbc.writeMem(0x69d5, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x2fb6);
        EXPECT(gbc.pc(), 0x69d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 03B4
        gbc.setState(0x9530, 0xd267, 0xa0a0, 0x656e, 0xe2a9, 0xb275, 0x0, 0x1);
        gbc.writeMem(0x9530, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xd267);
        EXPECT(gbc.pc(), 0x9532);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9530), 0xcb);
        EXPECT(gbc.readMem(0x9531), 0xa9);
        // CB A9 03B5
        gbc.setState(0xb326, 0xd68, 0x5410, 0x8bbd, 0x1476, 0x389b, 0x0, 0x0);
        gbc.writeMem(0xb326, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xd68);
        EXPECT(gbc.pc(), 0xb328);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb326), 0xcb);
        EXPECT(gbc.readMem(0xb327), 0xa9);
        // CB A9 03B6
        gbc.setState(0xb369, 0x5bb7, 0x6b0, 0xf2b2, 0xa6a, 0x6f63, 0x1, 0x0);
        gbc.writeMem(0xb369, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5bb7);
        EXPECT(gbc.pc(), 0xb36b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb369), 0xcb);
        EXPECT(gbc.readMem(0xb36a), 0xa9);
        // CB A9 03B7
        gbc.setState(0x711b, 0x8281, 0xee50, 0xe90f, 0xae52, 0xaf09, 0x1, 0x0);
        gbc.writeMem(0x711b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x8281);
        EXPECT(gbc.pc(), 0x711d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 03B8
        gbc.setState(0x2a5e, 0xb54b, 0x6bc0, 0xa84d, 0x9d30, 0x3fc1, 0x0, 0x1);
        gbc.writeMem(0x2a5e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb54b);
        EXPECT(gbc.pc(), 0x2a60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 03B9
        gbc.setState(0x7aab, 0xbad3, 0xb20, 0xe920, 0x10a0, 0x350f, 0x1, 0x1);
        gbc.writeMem(0x7aab, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xbad3);
        EXPECT(gbc.pc(), 0x7aad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 03BA
        gbc.setState(0xd46, 0x17c, 0x7d40, 0x9ad5, 0x9968, 0x48af, 0x0, 0x1);
        gbc.writeMem(0xd46, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x17c);
        EXPECT(gbc.pc(), 0xd48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 03BB
        gbc.setState(0x41af, 0xe9e2, 0xc6a0, 0x174b, 0x8fc3, 0x1a4a, 0x0, 0x1);
        gbc.writeMem(0x41af, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xe9e2);
        EXPECT(gbc.pc(), 0x41b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 03BC
        gbc.setState(0x8455, 0xdb6f, 0x3620, 0x7512, 0xe148, 0x3cd4, 0x0, 0x1);
        gbc.writeMem(0x8455, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xdb6f);
        EXPECT(gbc.pc(), 0x8457);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8455), 0xcb);
        EXPECT(gbc.readMem(0x8456), 0xa9);
        // CB A9 03BE
        gbc.setState(0x7b00, 0x7c9a, 0x6c70, 0xe479, 0x8bc4, 0x4ba1, 0x1, 0x0);
        gbc.writeMem(0x7b00, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x7c9a);
        EXPECT(gbc.pc(), 0x7b02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 03BF
        gbc.setState(0x17fc, 0xac3e, 0x6490, 0x43a, 0x14d9, 0x809f, 0x1, 0x1);
        gbc.writeMem(0x17fc, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xac3e);
        EXPECT(gbc.pc(), 0x17fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 03C0
        gbc.setState(0xc5f2, 0x6644, 0xf0d0, 0x2c6a, 0x3094, 0x66db, 0x0, 0x1);
        gbc.writeMem(0xc5f2, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x6644);
        EXPECT(gbc.pc(), 0xc5f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5f2), 0xcb);
        EXPECT(gbc.readMem(0xc5f3), 0xa9);
        // CB A9 03C1
        gbc.setState(0xbdab, 0xd449, 0x5cf0, 0x963, 0x1111, 0xde3a, 0x1, 0x0);
        gbc.writeMem(0xbdab, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xd449);
        EXPECT(gbc.pc(), 0xbdad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdab), 0xcb);
        EXPECT(gbc.readMem(0xbdac), 0xa9);
        // CB A9 03C2
        gbc.setState(0xea95, 0x64e2, 0x9a40, 0x3ea, 0x2877, 0x9d1, 0x0, 0x0);
        gbc.writeMem(0xea95, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x64e2);
        EXPECT(gbc.pc(), 0xea97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea95), 0xcb);
        EXPECT(gbc.readMem(0xea96), 0xa9);
        // CB A9 03C3
        gbc.setState(0xb01b, 0xbeeb, 0xa7c0, 0x538, 0x9a4d, 0x915e, 0x0, 0x1);
        gbc.writeMem(0xb01b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xbeeb);
        EXPECT(gbc.pc(), 0xb01d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb01b), 0xcb);
        EXPECT(gbc.readMem(0xb01c), 0xa9);
        // CB A9 03C4
        gbc.setState(0xc28e, 0x7926, 0x61e0, 0x984d, 0x637f, 0xb3d7, 0x1, 0x0);
        gbc.writeMem(0xc28e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x7926);
        EXPECT(gbc.pc(), 0xc290);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc28e), 0xcb);
        EXPECT(gbc.readMem(0xc28f), 0xa9);
        // CB A9 03C5
        gbc.setState(0x55e, 0xcf03, 0x4d90, 0x349b, 0xfe5e, 0xa03a, 0x1, 0x1);
        gbc.writeMem(0x55e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xcf03);
        EXPECT(gbc.pc(), 0x560);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 03C6
        gbc.setState(0x3cf0, 0x58fc, 0xa790, 0x169e, 0x693, 0xded, 0x0, 0x0);
        gbc.writeMem(0x3cf0, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x58fc);
        EXPECT(gbc.pc(), 0x3cf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 03C7
        gbc.setState(0x7d2, 0xbe8e, 0x1930, 0xff82, 0x1600, 0xde4f, 0x0, 0x1);
        gbc.writeMem(0x7d2, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xbe8e);
        EXPECT(gbc.pc(), 0x7d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 03C8
        gbc.setState(0x5215, 0x5e3, 0x10a0, 0xebc6, 0xef01, 0x5d66, 0x1, 0x1);
        gbc.writeMem(0x5215, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x5e3);
        EXPECT(gbc.pc(), 0x5217);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 03C9
        gbc.setState(0xc937, 0xf10a, 0x8950, 0xbb5b, 0x2bd7, 0x51f5, 0x0, 0x0);
        gbc.writeMem(0xc937, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xf10a);
        EXPECT(gbc.pc(), 0xc939);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc937), 0xcb);
        EXPECT(gbc.readMem(0xc938), 0xa9);
        // CB A9 03CA
        gbc.setState(0x216, 0xe900, 0x3190, 0x8a1, 0x900c, 0x799f, 0x1, 0x0);
        gbc.writeMem(0x216, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xe900);
        EXPECT(gbc.pc(), 0x218);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 03CC
        gbc.setState(0x40fe, 0x359b, 0x950, 0xe544, 0xfe5a, 0x3bfe, 0x0, 0x1);
        gbc.writeMem(0x40fe, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x359b);
        EXPECT(gbc.pc(), 0x4100);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 03CD
        gbc.setState(0xccd5, 0x2a7a, 0xfd30, 0x1391, 0xb7c0, 0x6ccb, 0x0, 0x1);
        gbc.writeMem(0xccd5, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x2a7a);
        EXPECT(gbc.pc(), 0xccd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccd5), 0xcb);
        EXPECT(gbc.readMem(0xccd6), 0xa9);
        // CB A9 03CE
        gbc.setState(0x65c0, 0x5a21, 0xe460, 0x8999, 0x38e2, 0x81b2, 0x0, 0x1);
        gbc.writeMem(0x65c0, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x5a21);
        EXPECT(gbc.pc(), 0x65c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 03CF
        gbc.setState(0x31f2, 0xb39b, 0x3fe0, 0xc806, 0x3555, 0x38f5, 0x0, 0x1);
        gbc.writeMem(0x31f2, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xb39b);
        EXPECT(gbc.pc(), 0x31f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 03D1
        gbc.setState(0x7ab4, 0xfb28, 0xbfe0, 0xbfca, 0xb243, 0xc985, 0x0, 0x1);
        gbc.writeMem(0x7ab4, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xfb28);
        EXPECT(gbc.pc(), 0x7ab6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 03D2
        gbc.setState(0xcf97, 0x2fec, 0xb620, 0x456b, 0xf60f, 0x2353, 0x0, 0x1);
        gbc.writeMem(0xcf97, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x2fec);
        EXPECT(gbc.pc(), 0xcf99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf97), 0xcb);
        EXPECT(gbc.readMem(0xcf98), 0xa9);
        // CB A9 03D3
        gbc.setState(0xe540, 0xf2a9, 0xcea0, 0x5e8f, 0xe304, 0x1400, 0x0, 0x1);
        gbc.writeMem(0xe540, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xf2a9);
        EXPECT(gbc.pc(), 0xe542);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe540), 0xcb);
        EXPECT(gbc.readMem(0xe541), 0xa9);
        // CB A9 03D4
        gbc.setState(0x19ac, 0x3a64, 0xab40, 0x1ac6, 0xc993, 0xd002, 0x0, 0x1);
        gbc.writeMem(0x19ac, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x3a64);
        EXPECT(gbc.pc(), 0x19ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 03D5
        gbc.setState(0xcb37, 0x8d51, 0x57e0, 0xf1be, 0x52ae, 0x21d1, 0x1, 0x0);
        gbc.writeMem(0xcb37, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x8d51);
        EXPECT(gbc.pc(), 0xcb39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb37), 0xcb);
        EXPECT(gbc.readMem(0xcb38), 0xa9);
        // CB A9 03D7
        gbc.setState(0x699a, 0xa020, 0x4eb0, 0x4b2a, 0x8a69, 0x54fe, 0x1, 0x1);
        gbc.writeMem(0x699a, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xa020);
        EXPECT(gbc.pc(), 0x699c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 03D8
        gbc.setState(0x59aa, 0xe001, 0x7eb0, 0xfcc, 0x8cda, 0x33e8, 0x0, 0x1);
        gbc.writeMem(0x59aa, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xe001);
        EXPECT(gbc.pc(), 0x59ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 03D9
        gbc.setState(0xad5c, 0x5664, 0xfee0, 0x6933, 0x3303, 0x955b, 0x1, 0x0);
        gbc.writeMem(0xad5c, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x5664);
        EXPECT(gbc.pc(), 0xad5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad5c), 0xcb);
        EXPECT(gbc.readMem(0xad5d), 0xa9);
        // CB A9 03DA
        gbc.setState(0xe2be, 0xa805, 0xc590, 0xbb0c, 0xc464, 0xddb1, 0x1, 0x1);
        gbc.writeMem(0xe2be, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xa805);
        EXPECT(gbc.pc(), 0xe2c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2be), 0xcb);
        EXPECT(gbc.readMem(0xe2bf), 0xa9);
        // CB A9 03DB
        gbc.setState(0xaa92, 0x5b31, 0x44b0, 0xea7a, 0x25f5, 0xfca2, 0x0, 0x0);
        gbc.writeMem(0xaa92, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5b31);
        EXPECT(gbc.pc(), 0xaa94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa92), 0xcb);
        EXPECT(gbc.readMem(0xaa93), 0xa9);
        // CB A9 03DC
        gbc.setState(0xfa0, 0xcb3d, 0xde00, 0x146b, 0x1795, 0xb794, 0x0, 0x1);
        gbc.writeMem(0xfa0, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xcb3d);
        EXPECT(gbc.pc(), 0xfa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 03DD
        gbc.setState(0x49d8, 0x4cd5, 0x7fc0, 0xa7af, 0x59c6, 0x645d, 0x0, 0x0);
        gbc.writeMem(0x49d8, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x4cd5);
        EXPECT(gbc.pc(), 0x49da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 03DE
        gbc.setState(0x77, 0x8f46, 0x6240, 0xa513, 0xb3d7, 0x7763, 0x0, 0x0);
        gbc.writeMem(0x77, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x8f46);
        EXPECT(gbc.pc(), 0x79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A9 03DF
        gbc.setState(0xba5b, 0x741b, 0x70c0, 0xcb0b, 0xfe6, 0x513, 0x0, 0x1);
        gbc.writeMem(0xba5b, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x741b);
        EXPECT(gbc.pc(), 0xba5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba5b), 0xcb);
        EXPECT(gbc.readMem(0xba5c), 0xa9);
        // CB A9 03E0
        gbc.setState(0x690d, 0x2c7f, 0x7010, 0x2b4, 0x9cb6, 0x79c6, 0x1, 0x1);
        gbc.writeMem(0x690d, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x2c7f);
        EXPECT(gbc.pc(), 0x690f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A9 03E1
        gbc.setState(0x74f0, 0xb16e, 0x3860, 0x2f69, 0x4a42, 0x41c4, 0x1, 0x0);
        gbc.writeMem(0x74f0, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xb16e);
        EXPECT(gbc.pc(), 0x74f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A9 03E2
        gbc.setState(0x9baf, 0xf04b, 0x5900, 0x5648, 0xecd7, 0x9dc3, 0x0, 0x1);
        gbc.writeMem(0x9baf, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf04b);
        EXPECT(gbc.pc(), 0x9bb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9baf), 0xcb);
        EXPECT(gbc.readMem(0x9bb0), 0xa9);
        // CB A9 03E3
        gbc.setState(0xa868, 0xa220, 0x120, 0xaf7f, 0xb266, 0x77cb, 0x0, 0x0);
        gbc.writeMem(0xa868, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa220);
        EXPECT(gbc.pc(), 0xa86a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa868), 0xcb);
        EXPECT(gbc.readMem(0xa869), 0xa9);
        // CB A9 03E4
        gbc.setState(0xa10, 0x711f, 0xaaf0, 0x78b2, 0x6d82, 0xfc6f, 0x0, 0x0);
        gbc.writeMem(0xa10, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x711f);
        EXPECT(gbc.pc(), 0xa12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A9 03E6
        gbc.setState(0xbece, 0xd0e8, 0x4a60, 0xf0fe, 0x6c10, 0x71cf, 0x0, 0x1);
        gbc.writeMem(0xbece, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xd0e8);
        EXPECT(gbc.pc(), 0xbed0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbece), 0xcb);
        EXPECT(gbc.readMem(0xbecf), 0xa9);
        // CB A9 03E7
        gbc.setState(0xd57e, 0x4478, 0xf870, 0x9f8b, 0x460b, 0xee87, 0x1, 0x0);
        gbc.writeMem(0xd57e, { 0xcb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x4478);
        EXPECT(gbc.pc(), 0xd580);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd57e), 0xcb);
        EXPECT(gbc.readMem(0xd57f), 0xa9);
    }
}
#endif
